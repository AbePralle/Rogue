# Main file for Rogo - entry point.
# BuildCore.rogue contains class Build with implementation
# Define BuildLocal.rogue for custom commands and augmentation.

#-------------------------------------------------------------------------------
routine rogo_default
#-------------------------------------------------------------------------------
  Build.rogue
endRoutine

#-------------------------------------------------------------------------------
routine rogo_check_bootstrap
#-------------------------------------------------------------------------------
  Build.check_bootstrap
endRoutine

#-------------------------------------------------------------------------------
routine rogo_roguec
#-------------------------------------------------------------------------------
  Build.roguec
endRoutine

#-------------------------------------------------------------------------------
routine rogo_rogo
#-------------------------------------------------------------------------------
  Build.rogo( &force )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_link
#-------------------------------------------------------------------------------
  Build.build_roguec_launcher
  Build.build_rogo_launcher
endRoutine

#-------------------------------------------------------------------------------
routine rogo_unlink
#-------------------------------------------------------------------------------
  Build.delete_launchers
endRoutine

#-------------------------------------------------------------------------------
routine rogo_clean
#-------------------------------------------------------------------------------
  Build.clean
endRoutine

#-------------------------------------------------------------------------------
routine rogo_libraries
#-------------------------------------------------------------------------------
  Build.sync_libraries
endRoutine

routine rogo_libs
  rogo_libraries
endRoutine

#-------------------------------------------------------------------------------
routine rogo_remake( remake_count:Int32 )
#-------------------------------------------------------------------------------
  remake
  loop (remake_count-1)
    rogo_execute @|sleep 1
    remake
  endLoop
endRoutine

routine remake
  Build.roguec
endRoutine

#-------------------------------------------------------------------------------
routine rogo_debug
#-------------------------------------------------------------------------------
  Build.roguec( "in debug mode", "--debug" )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_exhaustive
#-------------------------------------------------------------------------------
Build.roguec( "with --api=* and --threads", "--api=* --threads" )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_bootstrap
#-------------------------------------------------------------------------------
  Build.bootstrap
endRoutine

#-------------------------------------------------------------------------------
routine rogo_bootstrap_skip_rogo
#-------------------------------------------------------------------------------
  Build.bootstrap( &skip_rogo )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_update_bootstrap( roguec_or_build="":String )
#-------------------------------------------------------------------------------
  which (roguec_or_build)
    case "roguec": Build.update_bootstrap( &roguec )
    case "build":  Build.update_bootstrap( &build )
    others:        Build.update_bootstrap( &roguec, &build )
  endWhich
endRoutine

#-------------------------------------------------------------------------------
routine rogo_revert
#-------------------------------------------------------------------------------
  Build.revert
endRoutine

#-------------------------------------------------------------------------------
routine rogo_x( remake_count:Int32 )
#-------------------------------------------------------------------------------
  rogo_remake( remake_count )
endRoutine

routine rogo_x2
  rogo_remake( 2 )
endRoutine

routine rogo_x3
  rogo_remake( 3 )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_version
#-------------------------------------------------------------------------------
  Build.create_version_file
endRoutine

#-------------------------------------------------------------------------------
routine rogo_execute( cmd:String )
#-------------------------------------------------------------------------------
  print( "> " ).println( cmd )
  local error_code = System.run( cmd )
  if (error_code != 0)
    throw Error( ''ERROR: "$" failed (error code $).'' (cmd,error_code) )
  endIf
endRoutine

#-------------------------------------------------------------------------------
routine rogo_docs
#-------------------------------------------------------------------------------
  Build.run( "cd Source/DocGen && make" )
endRoutine

#-------------------------------------------------------------------------------
routine rogo_test
#-------------------------------------------------------------------------------
  local cmd = @|roguec Test.rogue --execute --debug --test --target="C++,Console"
  println "> " + cmd
  System.run( cmd )
endRoutine

