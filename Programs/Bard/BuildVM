#!/bin/bash

if [ `uname` == "Darwin" ]; then
  pushd Projects/BardVM/Mac
  xcodebuild -project BardVM-Mac.xcodeproj -configuration Release
  popd
  mkdir -p Programs/Mac
  cp Projects/BardVM/Mac/build/Release/bard Programs/Mac

elif [ "`uname`" == "Linux" ]; then
  echo "Linux"
else
  echo "Unix"
fi

#if [ `uname` == "Darwin" ]; then
#  platform="mac"
#  gogo_exe="bin/${platform}/gogo"
#  bard_exe="bin/${platform}/bard"
#  bardic_exe="bin/${platform}/bardic"
#  bard_libs="bin/mac/libraries"
#  config_filename="~/.profile"
#
#  if [ "$1" == "rebuild" ]; then
#    rm -r bin/mac
#  fi
#
#  if [ ! -e $gogo_exe ]; then
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING GOGO BUILD SYSTEM..."
#    echo 
#    pushd platforms/mac
#    xcodebuild -target gogo
#    popd
#    mkdir -p bin/mac
#    cp platforms/mac/build/Release/gogo $gogo_exe
#    chmod a+rx $gogo_exe
#  fi
#
#  if [ ! -e $bard_exe ]; then
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING BARD VIRTUAL MACHINE..."
#    echo 
#    pushd platforms/mac
#    xcodebuild -target bard
#    popd
#    cp platforms/mac/build/Release/bard $bard_exe
#    chmod a+rx $bard_exe
#  fi
#
#  if [ ! -e $bardic_exe ]; then
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING BARD COMPILER... (this may take a while)"
#    echo 
#    mkdir -p build
#    $bard_exe libraries/bard/bardic/bardic.etc bardic.bard -src_path "libraries/bard/standard;libraries/bard/bardic" -dest_path build -cpp
#    pushd platforms/mac
#    xcodebuild -target bardic
#    popd
#    cp platforms/mac/build/Release/bardic $bardic_exe
#    chmod a+rx $bardic_exe
#  fi
#
#else
#  if [ "`uname`" == "Linux" ]; then
#    platform="linux"
#  else
#    platform="unix"
#  fi
#  bard_exe="bin/${platform}/bard"
#  bardic_exe="bin/${platform}/bardic"
#  gogo_exe="bin/${platform}/gogo"
#  bard_libs="bin/${platform}/libraries"
#  config_filename="~/.bashrc"
#
#  if [ "$1" == "rebuild" ]; then
#    rm -r bin/${platform}
#  fi
#
#  if [ ! -e $gogo_exe ]; then
#    pushd platforms/${platform}
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING GOGO BUILD SYSTEM..."
#    echo 
#    make gogo
#    popd
#  fi
#
#  if [ ! -e $bard_exe ]; then
#    pushd platforms/${platform}
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING BARD VIRTUAL MACHINE..."
#    echo 
#    make bard
#    popd
#  fi
#
#  if [ ! -e $bardic_exe ]; then
#    pushd platforms/${platform}
#    echo -------------------------------------------------------------------------------
#    echo "> COMPILING BARD COMPILER... (this may take a while)"
#    echo 
#    make bardic
#    popd
#  fi
#fi
#
#if [ ! -e $bard_libs ]; then
#  echo -------------------------------------------------------------------------------
#  echo "> COPYING BARD LIBRARIES..."
#  echo "$gogo_exe -bin \"bin/$platform\" all -src_path \"libraries/bard;libraries/bard/standard\""
#  $gogo_exe -bin "bin/$platform" libs -src_path "libraries/bard;libraries/bard/standard"
#fi
#
#if [ "`which bardic`" == "" ]; then
#  echo "*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*"
#  echo "ATTENTION"
#  echo ""
#  echo "Edit /etc/paths (e.g. \"sudo mvim /etc/paths\") and add the following line at"
#  echo "the bottom:"
#  echo ""
#  echo "  `pwd`/bin/$platform"
#  echo ""
#  echo "After opening a new terminal you will be able to type 'bardic filename[.bard]'"
#  echo "to compile and 'bard filename[.etc]' to execute."
#  echo "*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*"
#else
#  if [ "$1" == "rebuild" ]; then
#    exit
#  fi
#  $gogo_exe $@
#fi

