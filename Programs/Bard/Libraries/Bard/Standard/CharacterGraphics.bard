class CharacterImage
  PROPERTIES
    width, height : Integer
    data          : Character[]

  METHODS
    method init( width, height, fill:Character )
      data = Character[]( width*height, fill )

    method bounds->Box
      return Box(0,0,width,height)

    method graphics->Graphics
      return CharacterGraphics( this )

    method print
      local i = 0
      forEach (1..height)
        forEach (1..width)
          print data[i]
          ++i
        endForEach
        println
      endForEach
endClass

class CharacterGraphics : Graphics
  PROPERTIES
    image : CharacterImage

  METHODS
    method init( image )

    method draw_box( x:Real, y:Real, width:Real, height:Real, ch:Integer )
      if (width == 0 or height == 0) return

      local i1 = x->Integer
      local j1 = y->Integer
      local i2 = i1 + (width->Integer - 1)
      local j2 = j1 + (height->Integer - 1)
      local data = image.data

      local row1 = j1 * image.width + i1
      local row2 = j2 * image.width + i1
      forEach (i1..i2)
        data[row1] = ch
        data[row2] = ch
        ++row1
        ++row2
      endForEach

      local pitch = image.width
      row1 = j1 * image.width + i1
      row2 = j1 * image.width + i2
      forEach (j1..j2)
        data[row1] = ch
        data[row2] = ch
        row1 += pitch
        row2 += pitch
      endForEach

    method fill_box( x:Real, y:Real, width:Real, height:Real, ch:Integer )
      if (width == 0 or height == 0) return

      local i1 = x->Integer
      local j1 = y->Integer
      local i2 = i1 + (width->Integer - 1)
      local j2 = j1 + (height->Integer - 1)
      local data = image.data

      local dest     = j1 * image.width + i1
      local row_skip = image.width - width->Integer
      forEach (j1..j2)
        forEach (i1..i2)
          data[dest] = ch
          ++dest
        endForEach
        dest += row_skip
      endForEach

    method clear( ch:Integer )
      local data = image.data
      forEach (i of data) data[i] = ch

endClass

