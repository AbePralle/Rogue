class CPPWriter
  PROPERTIES
    filepath : String
    buffer   = StringBuilder()
    indent   = 0
    needs_indent = true

  METHODS
    method init( filepath )

    method close
      File(filepath).save( buffer->String )

    method print_indent
      if (needs_indent)
        needs_indent = false
        forEach (1..indent) buffer.print(' ')
      endIf

    method print( value:Integer )->CPPWriter
      print_indent
      buffer.print( value )
      return this

    method print( value:String )->CPPWriter
      print_indent
      buffer.print( value )
      return this

    method println->CPPWriter
      buffer.print( '\n' )
      needs_indent = true
      return this

    method println( value:Integer )->CPPWriter
      buffer.print( value )
      buffer.print( '\n' )
      needs_indent = true
      return this

    method println( value:String )->CPPWriter
      buffer.print( value )
      buffer.print( '\n' )
      needs_indent = true
      return this

    method print( type:Type )->CPPWriter
      print_indent
      if (type?)
        buffer.print( "Rogue" )
        buffer.print( type.cpp_name )
        if (not type.is_native) buffer.print("*")
      else
        buffer.print( "void" )
      endIf
      return this

    method print_string_utf8( st:String )->CPPWriter
      if (st is null)
        print( "0" )
        return this
      endIf

      print( "\"" )
      forEach (ch in st)
        if (ch < 0x80)
          if (ch >= 32 and ch <= 126)
            print( ""+ch )
          else
            which (ch)
              case 10
                print "\\n"
              others
                print "\\"
                print( "" + (ch->Integer / 64)->Integer )
                print( "" + ((ch->Integer & 63) / 8)->Integer )
                print( "" + (ch & 7) )
            endWhich
          endIf
        endIf
      endForEach
      print( "\"" )

      return this
endClass

