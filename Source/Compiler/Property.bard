class Property
  PROPERTIES
    type_context   : Type
    t              : Token
    name           : String
    x_name         : String
    type           : Type
    initial_value  : Cmd
    index          : Integer

    is_constant    : Logical
    constant_value : Real  # applies to all primitives

    attributes     = Attributes()

    # For Compounds
    slot_index    : Integer

    prior_declaration : Property

  METHODS
    method init( t, type_context, name )

    method init( t, type_context, name, type )

    method clone_for_type( new_type_context:Type )->Property
      local result = Property( t, new_type_context, name, type )
      if (initial_value?) result.initial_value = initial_value.clone
      result.attributes.add( attributes.flags )
      return result

    method print
      print( "    " )
      println( this->String )

    method to->String
      return name + " : " + type

    method x_name->String
      if (@x_name is null) @x_name = Analyzer.convert_string_to_valid_identifier( name )
      return @x_name
endClass
