class Scope
  PROPERTIES
    this_type   : Type
    this_method : Method

    local_list = Local[]
    locals_by_name = Table<<String,Local>>() : Table<<String,Local>>

  METHODS
    method init( this_type, this_method )

    method find_local( name:String )->Local
      return locals_by_name[ name ]

    method push_local( v:Local )
      local existing = find_local( v.name )
      if (existing?) throw v.t.error( //A local variable named "$" already exists.// (v.name) ) 
      local_list.add( v )
      locals_by_name[v.name] = v

    method pop_local
      if (locals_by_name.count == 0) throw RogueError( "[INTERNAL] Scope::pop_local() called when local list is empty." )
      locals_by_name.remove( local_list.remove_last.name )

endClass
