class Console : Reader<<Byte>>, PrintWriter<<output_buffer>> [singleton]
  GLOBAL METHODS
    method input( prompt=null:String )->String
      if (prompt) Global.print( prompt ).flush

      native @|char st[4096];
              |fgets( st, 4096, stdin );
              |
              |// discard \n
              |int len = strlen( st );
              |if (len) st[--len] = 0;
              |
              |return RogueString_create_from_utf8( st, len );

  PROPERTIES
    output_buffer   = StringBuilder()
    input_buffer    = StringBuilder()
    next_input_byte : Int32?

  METHODS
    method has_another->Logical
      if (not next_input_byte.exists) next_input_byte = native( "(RogueInt32)getc(stdin)" )->Int32
      return (next_input_byte.value != -1)

    method peek->Byte
      if (has_another) return next_input_byte.value
      else             return 0

    method read->Byte
      if (not has_another) return 0
      local result = next_input_byte.value
      next_input_byte = null
      return result

    method read_line->String
      input_buffer.clear
      forEach (byte in this)
        if (byte == 10) escapeForEach
        input_buffer.write( byte )
      endForEach
      return input_buffer->String

    method write( characters:Character[] )->this
      native_print( characters )
      return this

    method write( value:String )->this
      native_print( value )
      return this

    method write( buffer:StringBuilder )->this
      native_print( buffer )
      return this

    $if ("C++")
    method native_print( utf8:Byte[] ) [macro]
      native 'RogueString_print_utf8( $utf8->data->as_bytes, $utf8->count )'

    method native_print( characters:Character[] ) [macro]
      native 'RogueString_print_characters( $characters->data->as_characters, $characters->count )'

    method native_print( value:String ) [macro]
      native 'RogueString_print_string( $value )'

    method native_print( value:StringBuilder ) [macro]
      native 'RogueString_print_utf8( $value->utf8->data->as_bytes, $value->utf8->count )'
    $endIf
endClass

