class StringLookupList : LookupList<<String>>
  METHODS
    method add( key:String )
      this[ key ] = key
endClass

class LookupList<<$ValueType>>
  PROPERTIES
    indices = StringTable<<Int32>>()
    values  = $ValueType[]
    keys    = String[]
    unused  : Int32[]

  METHODS
    method clear
      indices.clear
      values.clear
      keys.clear

    method contains( key:String )->Logical [macro]
      return this.indices.contains( key )

    method count->Int32
      return values.count

    method get( index:Int32 )->$ValueType
      return values[ index ]

    method get( key:String )->$ValueType
      local entry = indices.find( key )
      if (entry)
        return values[ entry.value ]
      else
        local default_value : $ValueType
        return default_value
      endIf

    method index( key:String )->Int32
      return indices[ key ]

    method remove( key:String )->$ValueType
      local default_value : $ValueType
      local entry = indices.find( key )
      if (entry)
        indices.remove( entry )
        ensure unused
        local index = entry.value
        unused.add( index )
        local result = values[ index ]
        values[ index ] = default_value
        keys[ index ] = ""
        return result
      else
        return default_value
      endIf

    method remove_at( index:Int32 )->$ValueType
      return remove( keys[index] )

    method set( key:String, value:$ValueType )
      local entry = indices.find( key )
      if (entry)
        values[ entry.value ] = value
      else
        if (unused and unused.count)
          local index = unused.remove_last
          indices[ key ] = index
          values[ index ] = value
          keys[ index ] = key
        else
          indices[ key ] = values.count
          values.add( value )
          keys.add( key )
        endIf
      endIf
endClass
