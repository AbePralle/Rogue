class Real [primitive]
  ROUTINES
    routine create( high:Integer, low:Integer )->Real [native]

  METHODS
    method high_bits->Integer [native]
    method low_bits->Integer  [native]
    #{
    method hash_code->Integer
      return this
      }#

    method to->String
      return "" + this
endClass

class Float [primitive]
#{
  METHODS
    method hash_code->Integer
      return (this->Real).as_high_bits
}#
endClass

class Long [primitive]
  METHODS
    method hash_code->Integer
      return this

    method to->String
      return StringBuilder().print( this )->String
endClass

class Integer [primitive]
  METHODS
    method hash_code->Integer
      return this

    method to->Long
      $if ("C++") inlineNative "((RogueLong)$this)"

    method to->String
      return "" + this
endClass

class Character [primitive]
  METHODS
    method hash_code->Integer
      return this->Integer

    method is_alphanumeric->Logical
      return (this >= '0' and this <= '9') or
             (this >= 'a' and this <= 'z') or
             (this >= 'A' and this <= 'Z')

    method is_letter->Logical
      return (this >= 'a' and this <= 'z') or
             (this >= 'A' and this <= 'Z')

    method to->String
      return "" + this

    method to_number->Integer
      if (this >= '0' and this <= '9') return (this - '0')
      if (this >= 'a' and this <= 'z') return (this - 'a') + 10
      if (this >= 'A' and this <= 'Z') return (this - 'A') + 10
      return -1
endClass

class Byte [primitive]
  METHODS
    method hash_code->Integer
      return this->Integer

    method to->String
      return "" + this
endClass

class Logical [primitive]
  METHODS
    method hash_code->Integer
      if (this) return 1
      else      return 0

    method to->String
      return "" + this
endClass

