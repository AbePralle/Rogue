class TypeInfo [requisite]
  PROPERTIES
    index      : Int32
    name       : String
    properties = PropertyInfo[]

  METHODS
    method init( index, name ) [requisite]

    method add_property_info( property_name:String, property_type_name:String ) [requisite]
      properties.add( PropertyInfo(property_name, property_type_name) )

    method create_object->Object
      native @|return RogueType_create_object( &Rogue_types[$index], 0 );

    method is_aspect->Logical
      return native( "Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_ASPECT" )->Logical

    method is_class->Logical
      return native( "Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_CLASS" )->Logical

    method is_compound->Logical
      return native( "Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_COMPOUND" )->Logical

    method is_direct->Logical
      return native( "Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_DIRECT" )->Logical

    method is_primitive->Logical
      return native( "Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_PRIMITIVE" )->Logical

    method is_reference->Logical
      return native( "!(Rogue_types[$index].attributes & ROGUE_ATTRIBUTE_IS_DIRECT)" )->Logical

    method to->String
      return "@" + name
endClass

class PropertyInfo
  PROPERTIES
    property_name      : String
    property_type_name : String

  METHODS
    method init( property_name, property_type_name )

    method to->String
      return "$:$" (property_name,property_type_name)

    method property_type_info->TypeInfo
      return System.type_info( property_type_name )
endClass

