module UI

class UIAttribute
  PROPERTIES
    next : UIAttribute

  METHODS
    method init

    method init( next )

    method alignment->Anchor?
      if (next) return next.alignment
      return null

    method anchor->Anchor
      if (next) return next.anchor
      return Anchor.TOP_LEFT

    method font->UIFont
      return UI.theme.default_font

    method is_stacking->Logical
      return false

    method original_position->XY
      return XY.zero

    method padding->UIPadding
      return UIPadding(0)

    method weight->XY
      if (next) return next.weight
      return XY(1,1)
endClass

class StackingUIAttribute : UIAttribute
  METHODS
    method is_stacking->Logical
      return true
endClass

class UIAttributeAlignment( alignment:Anchor, next=null ) : UIAttribute
  METHODS
    method alignment->Anchor? [override]
      return @alignment

    method to->String
      return "alignment:" + alignment
endClass

class UIAttributeAnchor( anchor:Anchor, next=null ) : UIAttribute
  METHODS
    method anchor->Anchor [override]
      return @anchor

    method to->String
      return "anchor:" + anchor
endClass

class UIAttributeFont( font:UIFont, next=null ) : UIAttribute
  METHODS
    method font->UIFont [override]
      return @font

    method to->String
      return "font:" + font
endClass

class UIAttributeOriginalPosition( original_position:XY, next=null ) : UIAttribute
  METHODS
    method original_position->XY [override]
      return @original_position

    method to->String
      return "original position:" + @original_position
endClass

class UIAttributePadding( padding:UIPadding, next=null ) : UIAttribute
  METHODS
    method padding->UIPadding [override]
      return @padding

    method to->String
      return "padding:" + padding
endClass

class UIAttributeWeight( weight:XY, next=null ) : UIAttribute
  METHODS
    method weight->XY [override]
      return @weight

    method to->String
      return "weight:" + weight
endClass

