module UI

class UIDivider : UILayout
  GLOBAL METHODS
    method h->UIDivider
      return UIDivider().[ is_horizontal=true ]

    method v->UIDivider
      return UIDivider()

  PROPERTIES
    is_horizontal : Logical
    proportion    : Real64?

  METHODS
    method update_subcomponent_layout
      which (count)
        case 1
          prior.update_subcomponent_layout
        case 2
          local bounds = this.bounds
          local w = bounds.size.x
          local h = bounds.size.y
          local x1, x2 : Real64
          if (is_horizontal)
            local w1, w2 : Real64
            if (proportion.exists)
              w1 = (w * proportion.value).floor
              w2 = (w - w1)
            else
              w1 = first_child.fixed_size.x
              w2 = last_child.fixed_size.x
              if (not w1)
                if (w2) w1 = w - w2
                else    w1 = (w/2).floor; w2 = w - w1
              elseIf (not w2)
                w2 = w - w1
              elseIf (w1 + w2 < w)
                w2 = w - w1
              elseIf (w1 + w2 > w)
                if (w1 < w)     w2 = w - w1
                elseIf (w2 < w) w1 = w - w2
                else            w1 = (w/2).floor; w2 = w - w1
              endIf
              proportion = w1 / w
            endIf
            first_child.update_layout( Box(bounds.position,XY(w1,h)) )
            last_child.update_layout( Box(bounds.position+XY(w1,0),XY(w2,h)) )
          else
            # Vertical divider
            local h1, h2 : Real64
            if (proportion.exists)
              h1 = (h * proportion.value).floor
              h2 = (h - h1)
            else
              h1 = first_child.fixed_size.x
              h2 = last_child.fixed_size.x
              if (h1 and not h2)
                h2 = h - h1
              elseIf (h2 and not h1)
                h1 = h - h2
              elseIf (h1 + h2 < h)
                h2 = h - h1
              elseIf (h1 + h2 > h)
                if (h1 < h)     h2 = h - h1
                elseIf (h2 < h) h1 = h - h2
                else            h1 = (h/2).floor; h2 = h - h1
              endIf
              proportion = h1 / h
            endIf
            first_child.update_layout( Box(bounds.position,XY(h,h1)) )
            last_child.update_layout( Box(bounds.position+XY(0,h1),XY(h,h2)) )
          endIf
      endWhich
endClass

