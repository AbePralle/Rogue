module UI

class UIList : UILayout
  PROPERTIES
    anchor             = Anchor.TOP : Anchor
    content_size       : XY
    autoscroll         = true
    _clamped_to_bottom = true

  METHODS
    method content_size->XY
      return @content_size

    method update_subcomponent_layout
      local pos = content_bounds.position
      local w   = size.x
      @content_size = XY.zero
      forEach (cur in layout)
        local cs = cur.fixed_size
        if (cs.x == 0) cs = XY( w, cs.y )
        @content_size = @content_size.or_larger( cs.xv ) + cs.yv
        cur.update_layout( Box(pos,cs) )
        pos += cs.yv
      endForEach

      if (layout.count)
        local diff = (layout.last.bounds.y2 - bounds.y2)
        if (_clamped_to_bottom)
          if (autoscroll)
            if (diff > 0)
              offset -= XY( 0, diff )
              needs_layout = true
            endIf
          endIf
        elseIf (diff <= 0)
          _clamped_to_bottom = true
        endIf
      else
        _clamped_to_bottom = true
      endIf

endClass

