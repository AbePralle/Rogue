//-----------------------------------------------------------------------------
//  Generated by the Rogue compiler
//-----------------------------------------------------------------------------
#pragma once
#define ROGUE_GC_MODE_MANUAL 1
#define ROGUE_GC_MODE_AUTO_ST 0
#define ROGUE_GC_MODE_AUTO_MT 0
#define ROGUE_GC_MODE_AUTO_ANY 0
#define ROGUE_GC_MODE_BOEHM 0
#define ROGUE_GC_MODE_BOEHM_TYPED 0

#ifndef ROGUE_GC_THRESHOLD_DEFAULT
  #define ROGUE_GC_THRESHOLD_DEFAULT 1048576
#endif

#define ROGUE_THREAD_MODE_NONE 0
#define ROGUE_THREAD_MODE_PTHREADS 1
#define ROGUE_THREAD_MODE_CPP 2
#ifndef ROGUE_THREAD_MODE
  #define ROGUE_THREAD_MODE ROGUE_THREAD_MODE_NONE
#endif
#define ROGUE_INTROSPECTION 1

// NATIVE HEADERS
//=============================================================================
//  NativeCPP.h
//
//  Rogue runtime routines.
//=============================================================================

#if defined(ROGUE_DEBUG_BUILD)
  #define ROGUE_DEBUG_STATEMENT(_s_) _s_
  #include <assert>
#else
  #define ROGUE_DEBUG_STATEMENT(_s_)
#endif

#if defined(ROGUE_GCDEBUG_BUILD)
  #define ROGUE_GCDEBUG_STATEMENT(_s_) _s_
#else
  #define ROGUE_GCDEBUG_STATEMENT(_s_) ;
#endif

#if defined(_WIN32)
#  define ROGUE_PLATFORM_WINDOWS 1
#elif defined(__APPLE__)
  #if TARGET_IPHONE_SIMULATOR || TARGET_OS_IPHONE
    #define ROGUE_PLATFORM_IOS 1
  #else
    #define ROGUE_PLATFORM_MACOS 1
    #define ROGUE_PLATFORM_UNIX_COMPATIBLE 1
  #endif
#elif defined(__ANDROID__)
#  define ROGUE_PLATFORM_ANDROID 1
#elif defined(__linux__)
#  define ROGUE_PLATFORM_UNIX_COMPATIBLE 1
#else
#  define ROGUE_PLATFORM_GENERIC 1
#endif

#if defined(ROGUE_PLATFORM_WINDOWS)
#  define NOGDI
#  pragma warning(disable: 4297) /* unexpected throw warnings */
#  include <windows.h>
#  include <signal.h>
#else
#  include <cstdint>
#endif

#include <stdlib.h>
#include <string.h>

#ifndef ROGUE_EXPORT_C
#  define ROGUE_EXPORT_C extern "C"
#endif
#ifndef ROGUE_EXPORT
#  define ROGUE_EXPORT extern
#endif

#define ROGUE_COND(X) (X)

//-----------------------------------------------------------------------------
//  Multithreading
//-----------------------------------------------------------------------------
// When exiting Rogue code for a nontrivial amount of time (e.g., making a
// blocking call or returning from a native event handler), put a
// ROGUE_EXIT in your code.  When re-entering (e.g., after the blocking call
// or on entering a native event handler which is going to call Rogue code),
// do ROGUE_ENTER.
// ROGUE_BLOCKING_ENTER/EXIT do the same things but with the meanings reversed
// in case this makes it easier to think about.  An even easier way to make
// a blocking call is to simply wrap it in ROGUE_BLOCKING_CALL(foo(...)).

#if ROGUE_GC_MODE_AUTO_MT

#define ROGUE_ENTER Rogue_mtgc_enter()
#define ROGUE_EXIT  Rogue_mtgc_exit()

inline void Rogue_mtgc_enter (void);
inline void Rogue_mtgc_exit (void);

template<typename RT> RT Rogue_mtgc_reenter (RT expr);

#define ROGUE_BLOCKING_CALL(__x) (ROGUE_EXIT, Rogue_mtgc_reenter((__x)))
#define ROGUE_BLOCKING_VOID_CALL(__x) do {ROGUE_EXIT; __x; ROGUE_ENTER;}while(false)

#else

#define ROGUE_ENTER
#define ROGUE_EXIT

#define ROGUE_BLOCKING_CALL(__x) __x
#define ROGUE_BLOCKING_VOID_CALL(__x)

#endif

#define ROGUE_BLOCKING_ENTER ROGUE_EXIT
#define ROGUE_BLOCKING_EXIT  ROGUE_ENTER

//-----------------------------------------------------------------------------
//  Garbage Collection
//-----------------------------------------------------------------------------
#define ROGUE_DEF_LOCAL_REF(_t_,_n_, _v_) _t_ _n_ = _v_
#define ROGUE_DEF_LOCAL_REF_NULL(_t_,_n_) _t_ _n_ = 0
#define ROGUE_RETAIN_CATCH_VAR(_t_,_n_,_v_)
#define ROGUE_CREATE_REF(_t_,_n_) ((_t_)_n_)
#define ROGUE_ARG(_a_) _a_
#define ROGUE_DEF_COMPOUND_REF_PROP(_t_,_n_) RoguePtr<_t_> _n_

#define ROGUE_XINCREF(_o_)  (++((_o_)->reference_count))
#define ROGUE_XDECREF(_o_)  (--((_o_)->reference_count))
#define ROGUE_INCREF(_o_) if (_o_) (++((_o_)->reference_count))
#define ROGUE_DECREF(_o_) if (_o_) (--((_o_)->reference_count))

#define ROGUE_NEW_BYTES(_count_) malloc(_count_)
#define ROGUE_DEL_BYTES(_ptr_) free(_ptr_)

#define ROGUE_STL_ALLOCATOR std::allocator

extern void Rogue_configure_gc();

#ifdef ROGUE_GC_UNSAFE_COMPOUNDS
  #undef ROGUE_DEF_COMPOUND_REF_PROP
  #define ROGUE_DEF_COMPOUND_REF_PROP(_t_,_n_) _t_ _n_
#endif

#if ROGUE_GC_MODE_BOEHM_TYPED
  #undef ROGUE_GC_MODE_BOEHM
  #define ROGUE_GC_MODE_BOEHM 1
  #include "gc_typed.h"
  void Rogue_init_boehm_type_info();
  #define ROGUE_GC_ALLOC_TYPE_UNTYPED 0
  #define ROGUE_GC_ALLOC_TYPE_ATOMIC 1
  #define ROGUE_GC_ALLOC_TYPE_TYPED 2
#endif

#if ROGUE_GC_MODE_BOEHM
  #define GC_NAME_CONFLICT
  #if ROGUE_THREAD_MODE
    // Assume GC built for the right thread mode!
    #define GC_THREADS 1
  #endif
  #include "gc.h"
  #include "gc_cpp.h"
  #include "gc_allocator.h"

  #undef ROGUE_STL_ALLOCATOR
  #define ROGUE_STL_ALLOCATOR traceable_allocator

  struct RogueObject;
  extern void Rogue_Boehm_IncRef (RogueObject*);
  extern void Rogue_Boehm_DecRef (RogueObject*);

  #undef ROGUE_NEW_BYTES
  #undef ROGUE_DEL_BYTES
  #define ROGUE_NEW_BYTES(_count_) ((void*)GC_MALLOC(_count_))
  //#define ROGUE_DEL_BYTES(_ptr_) GC_FREE(_ptr_)
  #define ROGUE_DEL_BYTES(_ptr_) /* May perform better! */

  #undef ROGUE_INCREF
  #undef ROGUE_DECREF
  #undef ROGUE_XINCREF
  #undef ROGUE_XDECREF
  #define ROGUE_INCREF(_o_) if (_o_) Rogue_Boehm_IncRef(_o_)
  #define ROGUE_DECREF(_o_) if (_o_) Rogue_Boehm_DecRef(_o_)
  #define ROGUE_XINCREF(_o_) Rogue_Boehm_IncRef(_o_)
  #define ROGUE_XDECREF(_o_) Rogue_Boehm_DecRef(_o_)
#endif

#if ROGUE_GC_MODE_AUTO_ANY
  #undef ROGUE_DEF_LOCAL_REF_NULL
  #define ROGUE_DEF_LOCAL_REF_NULL(_t_,_n_) RoguePtr<_t_> _n_;
  #undef ROGUE_DEF_LOCAL_REF
  #define ROGUE_DEF_LOCAL_REF(_t_,_n_, _v_) RoguePtr<_t_> _n_(_v_);
  #undef ROGUE_RETAIN_CATCH_VAR
  #define ROGUE_RETAIN_CATCH_VAR(_t_,_n_,_v_) RoguePtr<_t_> _n_(_v_);
  #undef ROGUE_ARG
  #define ROGUE_ARG(_a_) rogue_ptr(_a_)
#endif

#define ROGUE_ATTRIBUTE_IS_CLASS            0
#define ROGUE_ATTRIBUTE_IS_ASPECT           1
#define ROGUE_ATTRIBUTE_IS_PRIMITIVE        2
#define ROGUE_ATTRIBUTE_IS_COMPOUND         3
#define ROGUE_ATTRIBUTE_TYPE_MASK           7

// AKA by-value type; not a reference type
#define ROGUE_ATTRIBUTE_IS_DIRECT           2

#define ROGUE_ATTRIBUTE_IS_API               (1 << 4)
#define ROGUE_ATTRIBUTE_IS_NATIVE            (1 << 5)
#define ROGUE_ATTRIBUTE_IS_MACRO             (1 << 6)
#define ROGUE_ATTRIBUTE_IS_INITIALIZER       (1 << 7)
#define ROGUE_ATTRIBUTE_IS_IMMUTABLE         (1 << 8)
#define ROGUE_ATTRIBUTE_IS_GLOBAL            (1 << 9)
#define ROGUE_ATTRIBUTE_IS_SINGLETON         (1 << 10)
#define ROGUE_ATTRIBUTE_IS_INCORPORATED      (1 << 11)
#define ROGUE_ATTRIBUTE_IS_GENERATED         (1 << 12)
#define ROGUE_ATTRIBUTE_IS_ESSENTIAL         (1 << 13)
#define ROGUE_ATTRIBUTE_IS_TASK              (1 << 14)
#define ROGUE_ATTRIBUTE_IS_TASK_CONVERSION   (1 << 15)
#define ROGUE_ATTRIBUTE_IS_AUGMENT           (1 << 16)
#define ROGUE_ATTRIBUTE_IS_ABSTRACT          (1 << 17)
#define ROGUE_ATTRIBUTE_IS_MUTATING          (1 << 18)
#define ROGUE_ATTRIBUTE_IS_FALLBACK          (1 << 19)
#define ROGUE_ATTRIBUTE_IS_SPECIAL           (1 << 20)
#define ROGUE_ATTRIBUTE_IS_PROPAGATED        (1 << 21)
#define ROGUE_ATTRIBUTE_IS_DYNAMIC           (1 << 22)
#define ROGUE_ATTRIBUTE_RETURNS_THIS         (1 << 23)
#define ROGUE_ATTRIBUTE_IS_PREFERRED         (1 << 24)
#define ROGUE_ATTRIBUTE_IS_NONapi            (1 << 25)
#define ROGUE_ATTRIBUTE_IS_DEPRECATED        (1 << 26)
#define ROGUE_ATTRIBUTE_IS_ENUM              (1 << 27)
#define ROGUE_ATTRIBUTE_IS_THREAD_LOCAL      (1 << 28)
#define ROGUE_ATTRIBUTE_IS_SYNCHRONIZED      (1 << 29)
#define ROGUE_ATTRIBUTE_IS_SYNCHRONIZABLE    (1 << 30)

template <class T>
struct RoguePtr
{
  T o;
  RoguePtr ( ) : o(0) { }

  RoguePtr (  T oo )
   : o(oo)
  {
    ROGUE_GCDEBUG_STATEMENT(printf("ref "));
    ROGUE_GCDEBUG_STATEMENT(show());
    ROGUE_INCREF(o);
  }

  RoguePtr (const RoguePtr<T> & oo)
   : o(oo.o)
  {
    ROGUE_GCDEBUG_STATEMENT(printf("ref "));
    ROGUE_GCDEBUG_STATEMENT(show());
    ROGUE_INCREF(o);
  }

  template <class O>
  operator O ()
  {
    return (O)o;
  }

  operator T ()
  {
    return o;
  }

  RoguePtr & operator= ( T oo )
  {
    release();
    o = oo;
    ROGUE_INCREF(o);
    ROGUE_GCDEBUG_STATEMENT(printf("assign "));
    ROGUE_GCDEBUG_STATEMENT(show());
    return *this;
  }

  bool operator==( RoguePtr<T> other ) const
  {
    return (o == other.o);
  }

  bool operator!=( RoguePtr<T> other ) const
  {
    return (o != other.o);
  }

  T& operator->()
  {
    return o;
  }

  void release ()
  {
    if (!o) return;
    ROGUE_DECREF(o);
    ROGUE_GCDEBUG_STATEMENT( if (o->reference_count == 0) show() );
    if (o->reference_count < 0) o->reference_count = 0;
    o = 0;
  }

  ~RoguePtr ()
  {
    release();
  }

  void show () {
    printf("ptr:%p o:%p rc:%i\n", this, o, o ? o->reference_count : -42);
  }
};


template < class T, class U >
bool operator!=( const RoguePtr<T>& lhs, const RoguePtr<U>& rhs )
{
  return lhs.o != rhs.o;
}


template <class T>
RoguePtr<T> & rogue_ptr ( RoguePtr<T> & o )
{
  return o;
}

template <class T>
RoguePtr<T*> rogue_ptr ( T * p )
{
  return RoguePtr<T*>(p);
}

template <class T>
T rogue_ptr (T p)
{
  return p;
}


//-----------------------------------------------------------------------------
//  Threading
//-----------------------------------------------------------------------------

#if ROGUE_THREAD_MODE != ROGUE_THREAD_MODE_NONE

#if ROGUE_GC_MODE_BOEHM
  #define ROGUE_THREAD_LOCALS_INIT(__first, __last) GC_add_roots((void*)&(__first), (void*)((&(__last))+1));
  #define ROGUE_THREAD_LOCALS_DEINIT(__first, __last) GC_remove_roots((void*)&(__first), (void*)((&(__last))+1));
#else
  #define ROGUE_THREAD_LOCALS_INIT(__first, __last)
  #define ROGUE_THREAD_LOCALS_DEINIT(__first, __last)
#endif

#endif

#if ROGUE_THREAD_MODE == ROGUE_THREAD_MODE_PTHREADS

#include <pthread.h>
#include <atomic>

#define ROGUE_THREAD_LOCAL thread_local

static inline void _rogue_init_mutex (pthread_mutex_t * mutex)
{
  pthread_mutexattr_t attr;
  pthread_mutexattr_init(&attr);
  pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);
  pthread_mutex_init(mutex, &attr);
}

class RogueUnlocker
{
  pthread_mutex_t & mutex;
public:
  RogueUnlocker(pthread_mutex_t & mutex)
  : mutex(mutex)
  {
    pthread_mutex_lock(&mutex);
  }
  ~RogueUnlocker (void)
  {
    pthread_mutex_unlock(&mutex);
  }
};

#define ROGUE_SYNC_OBJECT_TYPE pthread_mutex_t
#define ROGUE_SYNC_OBJECT_INIT _rogue_init_mutex(&THIS->_object_mutex);
#define ROGUE_SYNC_OBJECT_CLEANUP pthread_mutex_destroy(&THIS->_object_mutex);
#define ROGUE_SYNC_OBJECT_ENTER RogueUnlocker _unlocker(THIS->_object_mutex);
#define ROGUE_SYNC_OBJECT_EXIT

#elif ROGUE_THREAD_MODE == ROGUE_THREAD_MODE_CPP

#include <thread>
#include <mutex>
#include <atomic>

#define ROGUE_THREAD_LOCAL thread_local

class RogueUnlocker
{
  std::recursive_mutex & mutex;
public:
  RogueUnlocker(std::recursive_mutex & mutex)
  : mutex(mutex)
  {
    mutex.lock();
  }
  ~RogueUnlocker (void)
  {
    mutex.unlock();
  }
};

#define ROGUE_SYNC_OBJECT_TYPE std::recursive_mutex
#define ROGUE_SYNC_OBJECT_INIT
#define ROGUE_SYNC_OBJECT_CLEANUP
#define ROGUE_SYNC_OBJECT_ENTER RogueUnlocker _unlocker(THIS->_object_mutex);
#define ROGUE_SYNC_OBJECT_EXIT

#else

#define ROGUE_SYNC_OBJECT_TYPE
#define ROGUE_SYNC_OBJECT_INIT
#define ROGUE_SYNC_OBJECT_CLEANUP
#define ROGUE_SYNC_OBJECT_ENTER
#define ROGUE_SYNC_OBJECT_EXIT
#define ROGUE_THREAD_LOCAL
#define ROGUE_THREAD_LOCALS_INIT(__first, __last)
#define ROGUE_THREAD_LOCALS_DEINIT(__first, __last)

#endif


//-----------------------------------------------------------------------------
//  Basics (Primitive types, macros, etc.)
//-----------------------------------------------------------------------------
#include <limits>
#define ROGUE_R32_INFINITY       std::numeric_limits<RogueReal32>::infinity()
#define ROGUE_R32_NEG_INFINITY (-std::numeric_limits<RogueReal32>::infinity())
#define ROGUE_R32_NAN            std::numeric_limits<RogueReal32>::quiet_NaN()

#define ROGUE_R64_INFINITY       std::numeric_limits<RogueReal64>::infinity()
#define ROGUE_R64_NEG_INFINITY (-std::numeric_limits<RogueReal64>::infinity())
#define ROGUE_R64_NAN            std::numeric_limits<RogueReal64>::quiet_NaN()

#if defined(ROGUE_PLATFORM_WINDOWS)
  typedef double           RogueReal64;
  typedef float            RogueReal32;
  typedef __int64          RogueInt64;
  typedef __int32          RogueInt32;
  typedef __int32          RogueCharacter;
  typedef unsigned __int16 RogueWord;
  typedef unsigned char    RogueByte;
  typedef bool             RogueLogical;
#else
  typedef double           RogueReal64;
  typedef float            RogueReal32;
  typedef int64_t          RogueInt64;
  typedef int32_t          RogueInt32;
  typedef int32_t          RogueCharacter;
  typedef uint16_t         RogueWord;
  typedef uint8_t          RogueByte;
  typedef bool             RogueLogical;
#endif

struct RogueAllocator;
struct RogueArray;
struct RogueCharacterList;
struct RogueString;

#define ROGUE_CREATE_OBJECT(name) RogueType_create_object(RogueType##name,0)
  //e.g. RogueType_create_object(RogueStringBuilder,0)

#define ROGUE_SINGLETON(name) RogueType_singleton(RogueType##name)
  //e.g. RogueType_singleton( RogueTypeConsole )

#define ROGUE_PROPERTY(name) p_##name


//-----------------------------------------------------------------------------
//  Forward References
//-----------------------------------------------------------------------------
struct RogueObject;


//-----------------------------------------------------------------------------
//  Callback Definitions
//-----------------------------------------------------------------------------
typedef void         (*RogueCallback)();
typedef void         (*RogueTraceFn)( void* obj );
typedef RogueObject* (*RogueInitFn)( void* obj );
typedef void         (*RogueCleanUpFn)( void* obj );
typedef RogueString* (*RogueToStringFn)( void* obj );


//-----------------------------------------------------------------------------
//  RogueCallbackInfo
//-----------------------------------------------------------------------------
struct RogueCallbackInfo
{
  RogueCallback      callback;
  RogueCallbackInfo* next_callback_info;

  RogueCallbackInfo() : callback(0), next_callback_info(0) {}
  RogueCallbackInfo( RogueCallback callback ) : callback(callback), next_callback_info(0) {}

  ~RogueCallbackInfo() { if (next_callback_info) delete next_callback_info; }

  void add( RogueCallback callback )
  {
    if (this->callback)
    {
      if (next_callback_info) next_callback_info->add( callback );
      else                    next_callback_info = new RogueCallbackInfo( callback );
    }
    else
    {
      this->callback = callback;
    }
  }

  void call()
  {
    if (callback) callback();
    if (next_callback_info) next_callback_info->call();
  }
};


//-----------------------------------------------------------------------------
//  RogueType
//-----------------------------------------------------------------------------
struct RogueType
{
  RogueObject* type_info;

  int          name_index;

  int          base_type_count;
  RogueType**  base_types;

  int          index;  // used for aspect call dispatch
  int          object_size;
  int          attributes;

  int          global_property_count;
  const int*   global_property_name_indices;
  const int*   global_property_type_indices;
  const void** global_property_pointers;

  int          property_count;
  const int*   property_name_indices;
  const int*   property_type_indices;
  const int*   property_offsets;

#if (ROGUE_THREAD_MODE == ROGUE_THREAD_MODE_PTHREADS) || (ROGUE_THREAD_MODE == ROGUE_THREAD_MODE_CPP)
  std::atomic<RogueObject*> _singleton;
#else
  RogueObject* _singleton;
#endif
  const void** methods; // first function pointer in Rogue_dynamic_method_table
  int          method_count;

  RogueAllocator*   allocator;

  RogueTraceFn      trace_fn;
  RogueInitFn       init_object_fn;
  RogueInitFn       init_fn;
  RogueCleanUpFn    on_cleanup_fn;
  RogueToStringFn   to_string_fn;

#if ROGUE_GC_MODE_BOEHM_TYPED
  int          gc_alloc_type;
  GC_descr     gc_type_descr;
#endif
};

ROGUE_EXPORT_C RogueArray*  RogueType_create_array( int count, int element_size, bool is_reference_array=false, int element_type_index=-1 ) ;
ROGUE_EXPORT_C RogueObject* RogueType_create_object( RogueType* THIS, RogueInt32 size );
ROGUE_EXPORT_C RogueLogical RogueType_instance_of( RogueType* THIS, RogueType* ancestor_type );
ROGUE_EXPORT_C RogueString* RogueType_name( RogueType* THIS );
ROGUE_EXPORT_C bool         RogueType_name_equals( RogueType* THIS, const char* name );
ROGUE_EXPORT_C void         RogueType_print_name( RogueType* THIS );
ROGUE_EXPORT_C RogueType*   RogueType_retire( RogueType* THIS );
ROGUE_EXPORT_C RogueObject* RogueType_singleton( RogueType* THIS );


//-----------------------------------------------------------------------------
//  RogueObject
//-----------------------------------------------------------------------------
struct RogueObjectType : RogueType
{
};

struct RogueObject
{
#if defined(ROGUE_CUSTOM_OBJECT_PROPERTY)
ROGUE_CUSTOM_OBJECT_PROPERTY
#endif

  RogueObject* next_object;
  // Used to keep track of this allocation so that it can be freed when no
  // longer referenced.

  RogueType*   type;
  // Type info for this object.

  RogueInt32 object_size;
  // Set to be ~object_size when traced through during a garbage collection,
  // then flipped back again at the end of GC.

  RogueInt32 reference_count;
  // A positive reference_count ensures that this object will never be
  // collected.  A zero reference_count means this object is kept only as
  // long as it is visible to the memory manager.
};

ROGUE_EXPORT_C RogueObject* RogueObject_as( RogueObject* THIS, RogueType* specialized_type );
ROGUE_EXPORT_C RogueLogical RogueObject_instance_of( RogueObject* THIS, RogueType* ancestor_type );
ROGUE_EXPORT_C void*        RogueObject_retain( RogueObject* THIS );
ROGUE_EXPORT_C void*        RogueObject_release( RogueObject* THIS );
ROGUE_EXPORT_C RogueString* RogueObject_to_string( RogueObject* THIS );

ROGUE_EXPORT_C void RogueObject_trace( void* obj );
ROGUE_EXPORT_C void RogueString_trace( void* obj );
ROGUE_EXPORT_C void RogueArray_trace( void* obj );


//-----------------------------------------------------------------------------
//  RogueString
//-----------------------------------------------------------------------------
struct RogueString : RogueObject
{
  RogueInt32 byte_count;       // in UTF-8 bytes
  RogueInt32 character_count;  // in whole characters
  RogueInt32 is_ascii;
  RogueInt32 cursor_offset;
  RogueInt32 cursor_index;
  RogueInt32 hash_code;
#if ROGUE_GC_MODE_BOEHM_TYPED
  char       *utf8;
#else
  char       utf8[];
#endif
};

ROGUE_EXPORT_C RogueString* RogueString_create_with_byte_count( int byte_count );
ROGUE_EXPORT_C RogueString* RogueString_create_from_utf8( const char* utf8, int count=-1 );
ROGUE_EXPORT_C RogueString* RogueString_create_from_characters( RogueCharacterList* characters );
void         RogueString_print_string( RogueString* st );
void         RogueString_print_characters( RogueCharacter* characters, int count );
void         RogueString_print_utf8( char* utf8, int count );

RogueCharacter RogueString_character_at( RogueString* THIS, int index );
RogueInt32     RogueString_set_cursor( RogueString* THIS, int index );
RogueString*   RogueString_validate( RogueString* THIS );


//-----------------------------------------------------------------------------
//  RogueArray
//-----------------------------------------------------------------------------
#if defined(__clang__)
#define ROGUE_EMPTY_ARRAY
#elif defined(__GNUC__) || defined(__GNUG__)
#define ROGUE_EMPTY_ARRAY 0
#elif defined(ROGUE_PLATFORM_WINDOWS)
#define ROGUE_EMPTY_ARRAY /* Okay for MSVC++ */
#endif
struct RogueArray : RogueObject
{
  int  count;
  int  element_size;
  bool is_reference_array;

#if ROGUE_GC_MODE_BOEHM_TYPED
  union
  {
    RogueObject**   as_objects;
    RogueByte*      as_logicals;
    RogueByte*      as_bytes;
    RogueCharacter* as_characters;
    RogueInt32*     as_int32s;
    RogueInt64*     as_int64s;
    RogueReal32*    as_real32s;
    RogueReal64*    as_real64s;
  };
#else
  union
  {
    RogueObject*   as_objects[ROGUE_EMPTY_ARRAY];
    RogueByte      as_logicals[ROGUE_EMPTY_ARRAY];
    RogueByte      as_bytes[ROGUE_EMPTY_ARRAY];
    RogueCharacter as_characters[ROGUE_EMPTY_ARRAY];
    RogueInt32     as_int32s[ROGUE_EMPTY_ARRAY];
    RogueInt64     as_int64s[ROGUE_EMPTY_ARRAY];
    RogueReal32    as_real32s[ROGUE_EMPTY_ARRAY];
    RogueReal64    as_real64s[ROGUE_EMPTY_ARRAY];
  };
#endif
};

RogueArray* RogueArray_set( RogueArray* THIS, RogueInt32 i1, RogueArray* other, RogueInt32 other_i1, RogueInt32 copy_count );


//-----------------------------------------------------------------------------
//  RogueAllocator
//-----------------------------------------------------------------------------
#ifndef ROGUEMM_PAGE_SIZE
// 4k; should be a multiple of 256 if redefined
#  define ROGUEMM_PAGE_SIZE (4*1024)
#endif

// 0 = large allocations, 1..4 = block sizes 64, 128, 192, 256
#ifndef ROGUEMM_SLOT_COUNT
#  define ROGUEMM_SLOT_COUNT 5
#endif

// 2^6 = 64
#ifndef ROGUEMM_GRANULARITY_BITS
#  define ROGUEMM_GRANULARITY_BITS 6
#endif

// Block sizes increase by 64 bytes per slot
#ifndef ROGUEMM_GRANULARITY_SIZE
#  define ROGUEMM_GRANULARITY_SIZE (1 << ROGUEMM_GRANULARITY_BITS)
#endif

// 63
#ifndef ROGUEMM_GRANULARITY_MASK
#  define ROGUEMM_GRANULARITY_MASK (ROGUEMM_GRANULARITY_SIZE - 1)
#endif

// Small allocation limit is 256 bytes - afterwards objects are allocated
// from the system.
// Set to -1 to disable the small object allocator.
#ifndef ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT
#  define ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT  ((ROGUEMM_SLOT_COUNT-1) << ROGUEMM_GRANULARITY_BITS)
#endif


//-----------------------------------------------------------------------------
//  RogueAllocationPage
//-----------------------------------------------------------------------------
struct RogueAllocationPage
{
  // Backs small 0..256-byte allocations.
  RogueByte  data[ ROGUEMM_PAGE_SIZE ];

  RogueAllocationPage* next_page;

  RogueByte* cursor;
  int        remaining;
};

RogueAllocationPage* RogueAllocationPage_create( RogueAllocationPage* next_page );
RogueAllocationPage* RogueAllocationPage_delete( RogueAllocationPage* THIS );
void*                RogueAllocationPage_allocate( RogueAllocationPage* THIS, int size );


//-----------------------------------------------------------------------------
//  RogueAllocator
//-----------------------------------------------------------------------------
struct RogueAllocator
{
  RogueAllocationPage* pages;
  RogueObject*         objects;
  RogueObject*         objects_requiring_cleanup;
  RogueObject*         available_objects[ROGUEMM_SLOT_COUNT];
};

RogueAllocator* RogueAllocator_create();
RogueAllocator* RogueAllocator_delete( RogueAllocator* THIS );

void*        RogueAllocator_allocate( int size );
RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size, int element_type_index=-1 );
void*        RogueAllocator_free( RogueAllocator* THIS, void* data, int size );
void         RogueAllocator_free_objects( RogueAllocator* THIS );
void         RogueAllocator_free_all();
void         RogueAllocator_collect_garbage( RogueAllocator* THIS );

extern int                Rogue_allocator_count;
extern RogueAllocator     Rogue_allocators[];
extern int                Rogue_type_count;
extern RogueType          Rogue_types[];
extern const int          Rogue_type_info_table[];
extern const int          Rogue_type_name_index_table[];
extern const int          Rogue_object_size_table[];
extern const void*        Rogue_global_property_pointers[];
extern const int          Rogue_property_offsets[];
extern const int          Rogue_attributes_table[];
extern const void*        Rogue_dynamic_method_table[];
//extern int                Rogue_property_info_table[][];
extern RogueInitFn        Rogue_init_object_fn_table[];
extern RogueInitFn        Rogue_init_fn_table[];
extern RogueTraceFn       Rogue_trace_fn_table[];
extern RogueCleanUpFn     Rogue_on_cleanup_fn_table[];
extern RogueToStringFn    Rogue_to_string_fn_table[];
extern int                Rogue_literal_string_count;
extern RogueString*       Rogue_literal_strings[];
extern RogueLogical       Rogue_configured;
extern int                Rogue_argc;
extern const char**       Rogue_argv;
extern bool               Rogue_gc_logging;
extern int                Rogue_gc_threshold;
extern bool               Rogue_gc_requested;
extern RogueCallbackInfo  Rogue_on_gc_begin;
extern RogueCallbackInfo  Rogue_on_gc_trace_finished;
extern RogueCallbackInfo  Rogue_on_gc_end;

struct RogueWeakReference;
extern RogueWeakReference* Rogue_weak_references;

ROGUE_EXPORT_C void Rogue_configure( int argc=0, const char* argv[]=0 );
ROGUE_EXPORT_C bool Rogue_collect_garbage( bool forced=false );
ROGUE_EXPORT_C void Rogue_launch();
ROGUE_EXPORT_C void Rogue_init_thread();
ROGUE_EXPORT_C void Rogue_deinit_thread();
ROGUE_EXPORT_C void Rogue_quit();
ROGUE_EXPORT_C bool Rogue_update_tasks();  // returns true if tasks are still active


//-----------------------------------------------------------------------------
//  RogueDebugTrace
//-----------------------------------------------------------------------------
struct RogueDebugTrace
{
  static char buffer[512];

  const char* method_signature;
  const char* filename;
  int line;
  RogueDebugTrace* previous_trace;

  RogueDebugTrace( const char* method_signature, const char* filename, int line );
  ~RogueDebugTrace();

  int   count();

  char* to_c_string();
};

void Rogue_print_stack_trace ( bool leading_newline=false);


//-----------------------------------------------------------------------------
//  Error Handling
//-----------------------------------------------------------------------------
#define ROGUE_TRY \
  try \
  {

#define ROGUE_END_TRY \
  }

#define ROGUE_THROW(_error_object) \
  throw _error_object

#define ROGUE_CATCH(_ErrorType,local_error_object) \
  } \
  catch (_ErrorType* local_error_object) \
  { \
    ROGUE_RETAIN_CATCH_VAR( _ErrorType*, _internal_exception_reference, local_error_object );

#define ROGUE_CATCH_NO_VAR(_ErrorType) \
  } \
  catch (_ErrorType* caught_error) \
  {

extern void Rogue_terminate_handler ();

template <class T>
void Rogue_ignore_unused(T&) {}

//=============================================================================
#include <atomic>
      struct RogueType;
      struct RogueTypeInfo;
      RogueTypeInfo* RogueType_type_info( RogueType* THIS );
#include <termios.h>
#include <unistd.h>
    #ifndef STDIN_FILENO     /* Probably Windows */
      #define STDIN_FILENO 0 /* Probably correct */
    #endif
    #if defined(ROGUE_PLATFORM_WINDOWS)
      #include <io.h>
      #define ROGUE_READ_CALL _read
    #else
      #define ROGUE_READ_CALL read
    #endif

#include <sys/ioctl.h>
#include <unistd.h>
      #if __APPLE__
        #include "TargetConditionals.h"
      #endif
#include <cstdio>
#include <cmath>

// FORWARD DECLARATIONS
struct RogueClassGlobal; // Global
struct RogueClassPrintWriter_global_output_buffer_; // PrintWriter<<global_output_buffer>>
struct RogueClassPrintWriter; // PrintWriter
struct RogueClassValueTable; // ValueTable
struct RogueClassValue; // Value
struct RogueClassTable_String_Value_; // Table<<String,Value>>
struct RogueClassTableEntry_String_Value_; // TableEntry<<String,Value>>
struct RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_; // (Function(TableEntry<<String,Value>>,TableEntry<<String,Value>>)->Logical)
struct RogueStringBuilder; // StringBuilder
struct RogueByte_List; // Byte[]
struct RogueClassGenericList; // GenericList
struct RogueClassStringBuilderPool; // StringBuilderPool
struct RogueStringBuilder_List; // StringBuilder[]
struct Rogue_Function____List; // (Function())[]
struct RogueClass_Function___; // (Function())
struct RogueException; // Exception
struct RogueClassStackTrace; // StackTrace
struct RogueString_List; // String[]
struct RogueTypeInfo; // TypeInfo
struct RoguePropertyInfo_List; // PropertyInfo[]
struct RogueClassPropertyInfo; // PropertyInfo
struct RogueMethodInfo_List; // MethodInfo[]
struct RogueClassMethodInfo; // MethodInfo
struct RogueClassTable_Int32_String_; // Table<<Int32,String>>
struct RogueClassTableEntry_Int32_String_; // TableEntry<<Int32,String>>
struct RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_; // (Function(TableEntry<<Int32,String>>,TableEntry<<Int32,String>>)->Logical)
struct RogueCharacter_List; // Character[]
struct RogueClassValueList; // ValueList
struct RogueValue_List; // Value[]
struct RogueClassObjectValue; // ObjectValue
struct RogueClassStringConsolidationTable; // StringConsolidationTable
struct RogueClassStringTable_String_; // StringTable<<String>>
struct RogueClassTable_String_String_; // Table<<String,String>>
struct RogueClassTableEntry_String_String_; // TableEntry<<String,String>>
struct RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_; // (Function(TableEntry<<String,String>>,TableEntry<<String,String>>)->Logical)
struct RogueClassReader_Character_; // Reader<<Character>>
struct RogueClassReader_String_; // Reader<<String>>
struct RogueClassConsole; // Console
struct RogueClassPrintWriter_output_buffer_; // PrintWriter<<output_buffer>>
struct RogueClassConsoleErrorPrinter; // ConsoleErrorPrinter
struct RogueClassPrimitiveWorkBuffer; // PrimitiveWorkBuffer
struct RogueClassMath; // Math
struct RogueClassBoxed; // Boxed
struct RogueClassFunction_221; // Function_221
struct RogueClassSystem; // System
struct RogueClassError; // Error
struct RogueClassFile; // File
struct RogueClassLineReader; // LineReader
struct RogueClassReader_Byte_; // Reader<<Byte>>
struct RogueClassFileWriter; // FileWriter
struct RogueClassWriter_Byte_; // Writer<<Byte>>
struct RogueClassScanner; // Scanner
struct RogueClassJSONParser; // JSONParser
struct RogueClassJSON; // JSON
struct RogueClass_Function_String_RETURNSString_; // (Function(String)->String)
struct RogueClassFunction_281; // Function_281
struct RogueClassRuntime; // Runtime
struct RogueWeakReference; // WeakReference
struct RogueClassPrintWriterAdapter; // PrintWriterAdapter
struct RogueClassPrintWriter_buffer_; // PrintWriter<<buffer>>
struct RogueClassLogicalValue; // LogicalValue
struct RogueClassInt32Value; // Int32Value
struct RogueClassInt64Value; // Int64Value
struct RogueClassReal64Value; // Real64Value
struct RogueClassNullValue; // NullValue
struct RogueClassStringValue; // StringValue
struct RogueClassUndefinedValue; // UndefinedValue
struct RogueClassOutOfBoundsError; // OutOfBoundsError
struct RogueClassTableEntry_String_TypeInfo_; // TableEntry<<String,TypeInfo>>
struct RogueClassRequirementError; // RequirementError
struct RogueClassListRewriter_Character_; // ListRewriter<<Character>>
struct RogueClassOptionalBoxed_Int32_; // Boxed<<Int32?>>
struct RogueClassFunction_1182; // Function_1182
struct RogueClassBoxed_SystemEnvironment_; // Boxed<<SystemEnvironment>>
struct RogueClassIOError; // IOError
struct RogueClassFileReader; // FileReader
struct RogueClassUTF8Reader; // UTF8Reader
struct RogueClassJSONParseError; // JSONParseError
struct RogueClassJSONParserBuffer; // JSONParserBuffer
struct RogueClassOptionalBoxed_Byte_; // Boxed<<Byte?>>
struct RogueClassOptionalBoxed_Value_; // Boxed<<Value?>>
struct RogueClassOptionalBoxed_StringBuilder_; // Boxed<<StringBuilder?>>
struct RogueClassOptionalBoxed__Function____; // Boxed<<(Function())?>>
struct RogueClassOptionalBoxed_String_; // Boxed<<String?>>
struct RogueClassOptionalBoxed_PropertyInfo_; // Boxed<<PropertyInfo?>>
struct RogueClassOptionalBoxed_MethodInfo_; // Boxed<<MethodInfo?>>
struct RogueClassOptionalBoxed_Character_; // Boxed<<Character?>>
struct RogueClassOptionalBoxed_Real64_; // Boxed<<Real64?>>
struct RogueClassOptionalBoxed_Real32_; // Boxed<<Real32?>>
struct RogueClassOptionalBoxed_Int64_; // Boxed<<Int64?>>
struct RogueClassBoxed_FileOptions_; // Boxed<<FileOptions>>
struct RogueClassOptionalBoxed_TableEntry_String_Value__; // Boxed<<TableEntry<<String,Value>>?>>
struct RogueClassOptionalBoxed_TypeInfo_; // Boxed<<TypeInfo?>>
struct RogueClassOptionalBoxed_TableEntry_Int32_String__; // Boxed<<TableEntry<<Int32,String>>?>>
struct RogueClassOptionalBoxed_TableEntry_String_String__; // Boxed<<TableEntry<<String,String>>?>>
struct RogueClassOptionalBoxed_TableEntry_String_TypeInfo__; // Boxed<<TableEntry<<String,TypeInfo>>?>>
struct RogueOptionalInt32; // Int32?
struct RogueClassSystemEnvironment; // SystemEnvironment
struct RogueOptionalByte; // Byte?
struct RogueOptionalValue; // Value?
struct RogueOptionalStringBuilder; // StringBuilder?
struct RogueOptional_Function___; // (Function())?
struct RogueOptionalString; // String?
struct RogueOptionalPropertyInfo; // PropertyInfo?
struct RogueOptionalMethodInfo; // MethodInfo?
struct RogueOptionalCharacter; // Character?
struct RogueOptionalReal64; // Real64?
struct RogueOptionalReal32; // Real32?
struct RogueOptionalInt64; // Int64?
struct RogueClassFileOptions; // FileOptions
struct RogueOptionalTableEntry_String_Value_; // TableEntry<<String,Value>>?
struct RogueOptionalTypeInfo; // TypeInfo?
struct RogueOptionalTableEntry_Int32_String_; // TableEntry<<Int32,String>>?
struct RogueOptionalTableEntry_String_String_; // TableEntry<<String,String>>?
struct RogueOptionalTableEntry_String_TypeInfo_; // TableEntry<<String,TypeInfo>>?

// COMPOUND DEFINITIONS
struct RogueOptionalInt32
{
  // PROPERTIES
  RogueInt32 value;
  RogueLogical exists;

  RogueOptionalInt32() { memset( this, 0, sizeof(RogueOptionalInt32) ); }

  RogueOptionalInt32( RogueInt32 value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueClassSystemEnvironment
{
  // PROPERTIES

};

struct RogueOptionalByte
{
  // PROPERTIES
  RogueByte value;
  RogueLogical exists;

  RogueOptionalByte() { memset( this, 0, sizeof(RogueOptionalByte) ); }

  RogueOptionalByte( RogueByte value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalValue
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassValue*,value);RogueLogical exists;

  RogueOptionalValue() { memset( this, 0, sizeof(RogueOptionalValue) ); }

  RogueOptionalValue( RogueClassValue* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalStringBuilder
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueStringBuilder*,value);RogueLogical exists;

  RogueOptionalStringBuilder() { memset( this, 0, sizeof(RogueOptionalStringBuilder) ); }

  RogueOptionalStringBuilder( RogueStringBuilder* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptional_Function___
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClass_Function___*,value);RogueLogical exists;

  RogueOptional_Function___() { memset( this, 0, sizeof(RogueOptional_Function___) ); }

  RogueOptional_Function___( RogueClass_Function___* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalString
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueString*,value);RogueLogical exists;

  RogueOptionalString() { memset( this, 0, sizeof(RogueOptionalString) ); }

  RogueOptionalString( RogueString* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalPropertyInfo
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassPropertyInfo*,value);RogueLogical exists;

  RogueOptionalPropertyInfo() { memset( this, 0, sizeof(RogueOptionalPropertyInfo) ); }

  RogueOptionalPropertyInfo( RogueClassPropertyInfo* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalMethodInfo
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassMethodInfo*,value);RogueLogical exists;

  RogueOptionalMethodInfo() { memset( this, 0, sizeof(RogueOptionalMethodInfo) ); }

  RogueOptionalMethodInfo( RogueClassMethodInfo* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalCharacter
{
  // PROPERTIES
  RogueCharacter value;
  RogueLogical exists;

  RogueOptionalCharacter() { memset( this, 0, sizeof(RogueOptionalCharacter) ); }

  RogueOptionalCharacter( RogueCharacter value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalReal64
{
  // PROPERTIES
  RogueReal64 value;
  RogueLogical exists;

  RogueOptionalReal64() { memset( this, 0, sizeof(RogueOptionalReal64) ); }

  RogueOptionalReal64( RogueReal64 value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalReal32
{
  // PROPERTIES
  RogueReal32 value;
  RogueLogical exists;

  RogueOptionalReal32() { memset( this, 0, sizeof(RogueOptionalReal32) ); }

  RogueOptionalReal32( RogueReal32 value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalInt64
{
  // PROPERTIES
  RogueInt64 value;
  RogueLogical exists;

  RogueOptionalInt64() { memset( this, 0, sizeof(RogueOptionalInt64) ); }

  RogueOptionalInt64( RogueInt64 value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueClassFileOptions
{
  // PROPERTIES
  RogueInt32 flags;

  RogueClassFileOptions() { memset( this, 0, sizeof(RogueClassFileOptions) ); }

  RogueClassFileOptions( RogueInt32 flags ) : flags(flags) {}

};

struct RogueOptionalTableEntry_String_Value_
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassTableEntry_String_Value_*,value);RogueLogical exists;

  RogueOptionalTableEntry_String_Value_() { memset( this, 0, sizeof(RogueOptionalTableEntry_String_Value_) ); }

  RogueOptionalTableEntry_String_Value_( RogueClassTableEntry_String_Value_* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalTypeInfo
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueTypeInfo*,value);RogueLogical exists;

  RogueOptionalTypeInfo() { memset( this, 0, sizeof(RogueOptionalTypeInfo) ); }

  RogueOptionalTypeInfo( RogueTypeInfo* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalTableEntry_Int32_String_
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassTableEntry_Int32_String_*,value);RogueLogical exists;

  RogueOptionalTableEntry_Int32_String_() { memset( this, 0, sizeof(RogueOptionalTableEntry_Int32_String_) ); }

  RogueOptionalTableEntry_Int32_String_( RogueClassTableEntry_Int32_String_* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalTableEntry_String_String_
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassTableEntry_String_String_*,value);RogueLogical exists;

  RogueOptionalTableEntry_String_String_() { memset( this, 0, sizeof(RogueOptionalTableEntry_String_String_) ); }

  RogueOptionalTableEntry_String_String_( RogueClassTableEntry_String_String_* value, bool exists=true ) : value(value), exists(exists) {}
};

struct RogueOptionalTableEntry_String_TypeInfo_
{
  // PROPERTIES
  ROGUE_DEF_COMPOUND_REF_PROP(RogueClassTableEntry_String_TypeInfo_*,value);RogueLogical exists;

  RogueOptionalTableEntry_String_TypeInfo_() { memset( this, 0, sizeof(RogueOptionalTableEntry_String_TypeInfo_) ); }

  RogueOptionalTableEntry_String_TypeInfo_( RogueClassTableEntry_String_TypeInfo_* value, bool exists=true ) : value(value), exists(exists) {}
};


// GLOBAL PROPERTIES
extern RogueByte_List* RogueStringBuilder_work_bytes;
extern RogueClassStringBuilderPool* RogueStringBuilder_pool;
extern RogueClassTable_Int32_String_* RogueMethodInfo__method_name_strings;
extern RogueString_List* RogueSystem_command_line_arguments;
extern RogueString* RogueSystem_executable_filepath;
extern RogueClassSystemEnvironment RogueSystem_environment;
extern RogueClassLogicalValue* RogueLogicalValue_true_value;
extern RogueClassLogicalValue* RogueLogicalValue_false_value;
extern RogueClassStringValue* RogueStringValue_empty_string;

// CLASS DEFINITIONS
struct RogueClassGlobal : RogueObject
{
  // PROPERTIES
  RogueClassValueTable* config;
  RogueClassValue* cache;
  RogueClassPrintWriter* console;
  RogueStringBuilder* global_output_buffer;
  Rogue_Function____List* exit_functions;

};

struct RogueClassPrintWriter_global_output_buffer_ : RogueObject
{
};

struct RogueClassPrintWriter : RogueObject
{
};

struct RogueClassValueTable : RogueObject
{
  // PROPERTIES
  RogueClassTable_String_Value_* data;

};

struct RogueClassValue : RogueObject
{
  // PROPERTIES

};

struct RogueClassTable_String_Value_ : RogueObject
{
  // PROPERTIES
  RogueInt32 count;
  RogueInt32 bin_mask;
  RogueInt32 cur_entry_index;
  RogueArray* bins;
  RogueClassTableEntry_String_Value_* first_entry;
  RogueClassTableEntry_String_Value_* last_entry;
  RogueClassTableEntry_String_Value_* cur_entry;
  RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_* sort_function;

};


struct RogueClassTableEntry_String_Value_ : RogueObject
{
  // PROPERTIES
  RogueString* key;
  RogueClassValue* value;
  RogueClassTableEntry_String_Value_* adjacent_entry;
  RogueClassTableEntry_String_Value_* next_entry;
  RogueClassTableEntry_String_Value_* previous_entry;
  RogueInt32 hash;

};

struct RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_ : RogueObject
{
  // PROPERTIES

};

struct RogueStringBuilder : RogueObject
{
  // PROPERTIES
  RogueByte_List* utf8;
  RogueInt32 count;
  RogueInt32 indent;
  RogueInt32 cursor_offset;
  RogueInt32 cursor_index;
  RogueLogical at_newline;

};

struct RogueByte_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClassGenericList : RogueObject
{
  // PROPERTIES

};


struct RogueClassStringBuilderPool : RogueObject
{
  // PROPERTIES
  RogueStringBuilder_List* available;

};

struct RogueStringBuilder_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};


struct Rogue_Function____List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClass_Function___ : RogueObject
{
  // PROPERTIES

};

struct RogueException : RogueObject
{
  // PROPERTIES
  RogueString* message;
  RogueClassStackTrace* stack_trace;

};

struct RogueClassStackTrace : RogueObject
{
  // PROPERTIES
  RogueString_List* entries;
  RogueInt32 count;
  RogueLogical is_formatted;

};

struct RogueString_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};





struct RogueTypeInfo : RogueObject
{
  // PROPERTIES
  RogueInt32 index;
  RogueString* name;
  RoguePropertyInfo_List* global_properties;
  RoguePropertyInfo_List* properties;
  RogueMethodInfo_List* methods;

};

struct RoguePropertyInfo_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClassPropertyInfo : RogueObject
{
  // PROPERTIES
  RogueInt32 index;
  RogueInt32 property_name_index;
  RogueInt32 property_type_index;

};

struct RogueMethodInfo_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClassMethodInfo : RogueObject
{
  // PROPERTIES
  RogueInt32 index;
  RogueString* name;
  RogueString* base_name;
  RogueString* signature;
  RogueInt64 fn_ptr;
  RogueInt32 parameter_count;
  RogueInt32 call_handler;
  RogueInt32 _first_param_name;
  RogueInt32 __first_param_type;
  RogueInt32 __return_type;

};

struct RogueClassTable_Int32_String_ : RogueObject
{
  // PROPERTIES
  RogueInt32 count;
  RogueInt32 bin_mask;
  RogueInt32 cur_entry_index;
  RogueArray* bins;
  RogueClassTableEntry_Int32_String_* first_entry;
  RogueClassTableEntry_Int32_String_* last_entry;
  RogueClassTableEntry_Int32_String_* cur_entry;
  RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_* sort_function;

};

struct RogueClassTableEntry_Int32_String_ : RogueObject
{
  // PROPERTIES
  RogueInt32 key;
  RogueString* value;
  RogueClassTableEntry_Int32_String_* adjacent_entry;
  RogueClassTableEntry_Int32_String_* next_entry;
  RogueClassTableEntry_Int32_String_* previous_entry;
  RogueInt32 hash;

};

struct RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_ : RogueObject
{
  // PROPERTIES

};

struct RogueCharacter_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClassValueList : RogueObject
{
  // PROPERTIES
  RogueValue_List* data;

};

struct RogueValue_List : RogueObject
{
  // PROPERTIES
  RogueArray* data;
  RogueInt32 count;

};

struct RogueClassObjectValue : RogueObject
{
  // PROPERTIES
  RogueObject* value;

};

struct RogueClassStringConsolidationTable : RogueObject
{
  // PROPERTIES
  RogueInt32 count;
  RogueInt32 bin_mask;
  RogueInt32 cur_entry_index;
  RogueArray* bins;
  RogueClassTableEntry_String_String_* first_entry;
  RogueClassTableEntry_String_String_* last_entry;
  RogueClassTableEntry_String_String_* cur_entry;
  RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* sort_function;

};

struct RogueClassStringTable_String_ : RogueObject
{
  // PROPERTIES
  RogueInt32 count;
  RogueInt32 bin_mask;
  RogueInt32 cur_entry_index;
  RogueArray* bins;
  RogueClassTableEntry_String_String_* first_entry;
  RogueClassTableEntry_String_String_* last_entry;
  RogueClassTableEntry_String_String_* cur_entry;
  RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* sort_function;

};

struct RogueClassTable_String_String_ : RogueObject
{
  // PROPERTIES
  RogueInt32 count;
  RogueInt32 bin_mask;
  RogueInt32 cur_entry_index;
  RogueArray* bins;
  RogueClassTableEntry_String_String_* first_entry;
  RogueClassTableEntry_String_String_* last_entry;
  RogueClassTableEntry_String_String_* cur_entry;
  RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* sort_function;

};

struct RogueClassTableEntry_String_String_ : RogueObject
{
  // PROPERTIES
  RogueString* key;
  RogueString* value;
  RogueClassTableEntry_String_String_* adjacent_entry;
  RogueClassTableEntry_String_String_* next_entry;
  RogueClassTableEntry_String_String_* previous_entry;
  RogueInt32 hash;

};

struct RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_ : RogueObject
{
  // PROPERTIES

};

struct RogueClassReader_Character_ : RogueObject
{
};

struct RogueClassReader_String_ : RogueObject
{
};

struct RogueClassConsole : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueClassConsoleErrorPrinter* error;
  RogueLogical immediate_mode;
  RogueLogical is_blocking;
  RogueLogical decode_bytes;
  RogueStringBuilder* output_buffer;
  RogueStringBuilder* input_buffer;
  RogueOptionalInt32 next_input_character;
  RogueByte_List* input_bytes;
  termios original_terminal_settings;
  int     original_stdin_flags;

};

struct RogueClassPrintWriter_output_buffer_ : RogueObject
{
};

struct RogueClassConsoleErrorPrinter : RogueObject
{
  // PROPERTIES
  RogueStringBuilder* output_buffer;

};

struct RogueClassPrimitiveWorkBuffer : RogueObject
{
  // PROPERTIES
  RogueByte_List* utf8;
  RogueInt32 count;
  RogueInt32 indent;
  RogueInt32 cursor_offset;
  RogueInt32 cursor_index;
  RogueLogical at_newline;

};

struct RogueClassMath : RogueObject
{
  // PROPERTIES

};

struct RogueClassBoxed : RogueObject
{
  // PROPERTIES

};

struct RogueClassFunction_221 : RogueObject
{
  // PROPERTIES

};

struct RogueClassSystem : RogueObject
{
  // PROPERTIES

};

struct RogueClassError : RogueException
{
  // PROPERTIES

};

struct RogueClassFile : RogueObject
{
  // PROPERTIES
  RogueString* filepath;

};

struct RogueClassLineReader : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueClassReader_Character_* source;
  RogueString* next;
  RogueStringBuilder* buffer;
  RogueCharacter prev;

};

struct RogueClassReader_Byte_ : RogueObject
{
};

struct RogueClassFileWriter : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueString* filepath;
  RogueLogical error;
  RogueByte_List* buffer;
  FILE* fp;

};

struct RogueClassWriter_Byte_ : RogueObject
{
};

struct RogueClassScanner : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueCharacter_List* data;
  RogueInt32 count;
  RogueInt32 line;
  RogueInt32 column;
  RogueInt32 spaces_per_tab;

};

struct RogueClassJSONParser : RogueObject
{
  // PROPERTIES
  RogueClassScanner* reader;

};

struct RogueClassJSON : RogueObject
{
  // PROPERTIES

};

struct RogueClass_Function_String_RETURNSString_ : RogueObject
{
  // PROPERTIES

};

struct RogueClassFunction_281 : RogueObject
{
  // PROPERTIES

};

struct RogueClassRuntime : RogueObject
{
  // PROPERTIES

};

struct RogueWeakReference : RogueObject
{
  // PROPERTIES
  RogueWeakReference* next_weak_reference;
  RogueObject* value;

};

struct RogueClassPrintWriterAdapter : RogueObject
{
  // PROPERTIES
  RogueClassWriter_Byte_* output;
  RogueStringBuilder* buffer;

};

struct RogueClassPrintWriter_buffer_ : RogueObject
{
};

struct RogueClassLogicalValue : RogueObject
{
  // PROPERTIES
  RogueLogical value;

};

struct RogueClassInt32Value : RogueObject
{
  // PROPERTIES
  RogueInt32 value;

};

struct RogueClassInt64Value : RogueObject
{
  // PROPERTIES
  RogueInt64 value;

};

struct RogueClassReal64Value : RogueObject
{
  // PROPERTIES
  RogueReal64 value;

};

struct RogueClassNullValue : RogueObject
{
  // PROPERTIES

};

struct RogueClassStringValue : RogueObject
{
  // PROPERTIES
  RogueString* value;

};

struct RogueClassUndefinedValue : RogueObject
{
  // PROPERTIES

};

struct RogueClassOutOfBoundsError : RogueClassError
{
  // PROPERTIES

};

struct RogueClassTableEntry_String_TypeInfo_ : RogueObject
{
  // PROPERTIES
  RogueString* key;
  RogueTypeInfo* value;
  RogueClassTableEntry_String_TypeInfo_* adjacent_entry;
  RogueClassTableEntry_String_TypeInfo_* next_entry;
  RogueClassTableEntry_String_TypeInfo_* previous_entry;
  RogueInt32 hash;

};

struct RogueClassRequirementError : RogueClassError
{
  // PROPERTIES

};

struct RogueClassListRewriter_Character_ : RogueObject
{
  // PROPERTIES
  RogueCharacter_List* list;
  RogueInt32 read_index;
  RogueInt32 write_index;

};

struct RogueClassOptionalBoxed_Int32_ : RogueObject
{
  // PROPERTIES
  RogueOptionalInt32 value;

};

struct RogueClassFunction_1182 : RogueObject
{
  // PROPERTIES
  RogueClassConsole* console;

};

struct RogueClassBoxed_SystemEnvironment_ : RogueObject
{
  // PROPERTIES
  RogueClassSystemEnvironment value;

};

struct RogueClassIOError : RogueClassError
{
  // PROPERTIES

};

struct RogueClassFileReader : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueString* filepath;
  RogueInt32 count;
  RogueInt32 buffer_position;
  RogueByte_List* buffer;
  FILE* fp;

};

struct RogueClassUTF8Reader : RogueObject
{
  // PROPERTIES
  RogueInt32 position;
  RogueClassReader_Byte_* byte_reader;
  RogueOptionalCharacter next;

};

struct RogueClassJSONParseError : RogueClassError
{
  // PROPERTIES

};

struct RogueClassJSONParserBuffer : RogueObject
{
  // PROPERTIES
  RogueByte_List* utf8;
  RogueInt32 count;
  RogueInt32 indent;
  RogueInt32 cursor_offset;
  RogueInt32 cursor_index;
  RogueLogical at_newline;

};

struct RogueClassOptionalBoxed_Byte_ : RogueObject
{
  // PROPERTIES
  RogueOptionalByte value;

};

struct RogueClassOptionalBoxed_Value_ : RogueObject
{
  // PROPERTIES
  RogueOptionalValue value;

};

struct RogueClassOptionalBoxed_StringBuilder_ : RogueObject
{
  // PROPERTIES
  RogueOptionalStringBuilder value;

};

struct RogueClassOptionalBoxed__Function____ : RogueObject
{
  // PROPERTIES
  RogueOptional_Function___ value;

};

struct RogueClassOptionalBoxed_String_ : RogueObject
{
  // PROPERTIES
  RogueOptionalString value;

};

struct RogueClassOptionalBoxed_PropertyInfo_ : RogueObject
{
  // PROPERTIES
  RogueOptionalPropertyInfo value;

};

struct RogueClassOptionalBoxed_MethodInfo_ : RogueObject
{
  // PROPERTIES
  RogueOptionalMethodInfo value;

};

struct RogueClassOptionalBoxed_Character_ : RogueObject
{
  // PROPERTIES
  RogueOptionalCharacter value;

};

struct RogueClassOptionalBoxed_Real64_ : RogueObject
{
  // PROPERTIES
  RogueOptionalReal64 value;

};

struct RogueClassOptionalBoxed_Real32_ : RogueObject
{
  // PROPERTIES
  RogueOptionalReal32 value;

};

struct RogueClassOptionalBoxed_Int64_ : RogueObject
{
  // PROPERTIES
  RogueOptionalInt64 value;

};

struct RogueClassBoxed_FileOptions_ : RogueObject
{
  // PROPERTIES
  RogueClassFileOptions value;

};

struct RogueClassOptionalBoxed_TableEntry_String_Value__ : RogueObject
{
  // PROPERTIES
  RogueOptionalTableEntry_String_Value_ value;

};

struct RogueClassOptionalBoxed_TypeInfo_ : RogueObject
{
  // PROPERTIES
  RogueOptionalTypeInfo value;

};

struct RogueClassOptionalBoxed_TableEntry_Int32_String__ : RogueObject
{
  // PROPERTIES
  RogueOptionalTableEntry_Int32_String_ value;

};

struct RogueClassOptionalBoxed_TableEntry_String_String__ : RogueObject
{
  // PROPERTIES
  RogueOptionalTableEntry_String_String_ value;

};

struct RogueClassOptionalBoxed_TableEntry_String_TypeInfo__ : RogueObject
{
  // PROPERTIES
  RogueOptionalTableEntry_String_TypeInfo_ value;

};


// ROGUE TYPES
extern RogueType* RogueTypeObject;
extern RogueType* RogueTypeGlobal;
extern RogueType* RogueTypePrintWriter_global_output_buffer_;
extern RogueType* RogueTypePrintWriter;
extern RogueType* RogueTypeValueTable;
extern RogueType* RogueTypeValue;
extern RogueType* RogueTypeTable_String_Value_;
extern RogueType* RogueTypeInt32;
extern RogueType* RogueTypeArray;
extern RogueType* RogueTypeTableEntry_String_Value_;
extern RogueType* RogueTypeString;
extern RogueType* RogueType_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_;
extern RogueType* RogueTypeStringBuilder;
extern RogueType* RogueTypeByte_List;
extern RogueType* RogueTypeGenericList;
extern RogueType* RogueTypeByte;
extern RogueType* RogueTypeStringBuilderPool;
extern RogueType* RogueTypeStringBuilder_List;
extern RogueType* RogueTypeLogical;
extern RogueType* RogueType_Function____List;
extern RogueType* RogueType_Function___;
extern RogueType* RogueTypeException;
extern RogueType* RogueTypeStackTrace;
extern RogueType* RogueTypeString_List;
extern RogueType* RogueTypeReal64;
extern RogueType* RogueTypeReal32;
extern RogueType* RogueTypeInt64;
extern RogueType* RogueTypeCharacter;
extern RogueType* RogueTypeTypeInfo;
extern RogueType* RogueTypePropertyInfo_List;
extern RogueType* RogueTypePropertyInfo;
extern RogueType* RogueTypeMethodInfo_List;
extern RogueType* RogueTypeMethodInfo;
extern RogueType* RogueTypeTable_Int32_String_;
extern RogueType* RogueTypeTableEntry_Int32_String_;
extern RogueType* RogueType_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_;
extern RogueType* RogueTypeCharacter_List;
extern RogueType* RogueTypeValueList;
extern RogueType* RogueTypeValue_List;
extern RogueType* RogueTypeObjectValue;
extern RogueType* RogueTypeStringConsolidationTable;
extern RogueType* RogueTypeStringTable_String_;
extern RogueType* RogueTypeTable_String_String_;
extern RogueType* RogueTypeTableEntry_String_String_;
extern RogueType* RogueType_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_;
extern RogueType* RogueTypeReader_Character_;
extern RogueType* RogueTypeReader_String_;
extern RogueType* RogueTypeConsole;
extern RogueType* RogueTypePrintWriter_output_buffer_;
extern RogueType* RogueTypeConsoleErrorPrinter;
extern RogueType* RogueTypePrimitiveWorkBuffer;
extern RogueType* RogueTypeMath;
extern RogueType* RogueTypeBoxed;
extern RogueType* RogueTypeFunction_221;
extern RogueType* RogueTypeSystem;
extern RogueType* RogueTypeError;
extern RogueType* RogueTypeFile;
extern RogueType* RogueTypeLineReader;
extern RogueType* RogueTypeReader_Byte_;
extern RogueType* RogueTypeFileWriter;
extern RogueType* RogueTypeWriter_Byte_;
extern RogueType* RogueTypeScanner;
extern RogueType* RogueTypeJSONParser;
extern RogueType* RogueTypeJSON;
extern RogueType* RogueType_Function_String_RETURNSString_;
extern RogueType* RogueTypeFunction_281;
extern RogueType* RogueTypeRuntime;
extern RogueType* RogueTypeWeakReference;
extern RogueType* RogueTypePrintWriterAdapter;
extern RogueType* RogueTypePrintWriter_buffer_;
extern RogueType* RogueTypeLogicalValue;
extern RogueType* RogueTypeInt32Value;
extern RogueType* RogueTypeInt64Value;
extern RogueType* RogueTypeReal64Value;
extern RogueType* RogueTypeNullValue;
extern RogueType* RogueTypeStringValue;
extern RogueType* RogueTypeUndefinedValue;
extern RogueType* RogueTypeOutOfBoundsError;
extern RogueType* RogueTypeTableEntry_String_TypeInfo_;
extern RogueType* RogueTypeRequirementError;
extern RogueType* RogueTypeListRewriter_Character_;
extern RogueType* RogueTypeOptionalBoxed_Int32_;
extern RogueType* RogueTypeFunction_1182;
extern RogueType* RogueTypeBoxed_SystemEnvironment_;
extern RogueType* RogueTypeIOError;
extern RogueType* RogueTypeFileReader;
extern RogueType* RogueTypeUTF8Reader;
extern RogueType* RogueTypeJSONParseError;
extern RogueType* RogueTypeJSONParserBuffer;
extern RogueType* RogueTypeOptionalBoxed_Byte_;
extern RogueType* RogueTypeOptionalBoxed_Value_;
extern RogueType* RogueTypeOptionalBoxed_StringBuilder_;
extern RogueType* RogueTypeOptionalBoxed__Function____;
extern RogueType* RogueTypeOptionalBoxed_String_;
extern RogueType* RogueTypeOptionalBoxed_PropertyInfo_;
extern RogueType* RogueTypeOptionalBoxed_MethodInfo_;
extern RogueType* RogueTypeOptionalBoxed_Character_;
extern RogueType* RogueTypeOptionalBoxed_Real64_;
extern RogueType* RogueTypeOptionalBoxed_Real32_;
extern RogueType* RogueTypeOptionalBoxed_Int64_;
extern RogueType* RogueTypeBoxed_FileOptions_;
extern RogueType* RogueTypeOptionalBoxed_TableEntry_String_Value__;
extern RogueType* RogueTypeOptionalBoxed_TypeInfo_;
extern RogueType* RogueTypeOptionalBoxed_TableEntry_Int32_String__;
extern RogueType* RogueTypeOptionalBoxed_TableEntry_String_String__;
extern RogueType* RogueTypeOptionalBoxed_TableEntry_String_TypeInfo__;
extern RogueType* RogueTypeOptionalInt32;
extern RogueType* RogueTypeSystemEnvironment;
extern RogueType* RogueTypeOptionalByte;
extern RogueType* RogueTypeOptionalValue;
extern RogueType* RogueTypeOptionalStringBuilder;
extern RogueType* RogueTypeOptional_Function___;
extern RogueType* RogueTypeOptionalString;
extern RogueType* RogueTypeOptionalPropertyInfo;
extern RogueType* RogueTypeOptionalMethodInfo;
extern RogueType* RogueTypeOptionalCharacter;
extern RogueType* RogueTypeOptionalReal64;
extern RogueType* RogueTypeOptionalReal32;
extern RogueType* RogueTypeOptionalInt64;
extern RogueType* RogueTypeFileOptions;
extern RogueType* RogueTypeOptionalTableEntry_String_Value_;
extern RogueType* RogueTypeOptionalTypeInfo;
extern RogueType* RogueTypeOptionalTableEntry_Int32_String_;
extern RogueType* RogueTypeOptionalTableEntry_String_String_;
extern RogueType* RogueTypeOptionalTableEntry_String_TypeInfo_;

// ROUTINE PROTOTYPES
ROGUE_EXPORT_C RogueClassPrintWriter* RoguePrintWriter__create__Writer_Byte_( RogueClassWriter_Byte_* writer_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Character( RogueCharacter value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Logical( RogueLogical value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Byte( RogueByte value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Int32( RogueInt32 value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Int64( RogueInt64 value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Real32( RogueReal32 value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__Object( RogueObject* value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__create__String( RogueString* value_0 );
ROGUE_EXPORT_C RogueLogical RogueOptionalValue__operator__Value( RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueInt32 RogueInt32__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueLogical RogueString__operatorEQUALSEQUALS__String_String( RogueString* a_0, RogueString* b_1 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__String_String( RogueString* st_0, RogueString* value_1 );
ROGUE_EXPORT_C RogueString* RogueString__operatorTIMES__String_Int32( RogueString* st_0, RogueInt32 value_1 );
ROGUE_EXPORT_C void RogueStringBuilder__init_class();
ROGUE_EXPORT_C RogueByte RogueByte__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueLogical RogueLogical__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueLogical RogueLogical__create__Int32( RogueInt32 value_0 );
ROGUE_EXPORT_C RogueReal64 RogueReal64__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueReal32 RogueReal32__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueInt64 RogueInt64__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueCharacter RogueCharacter__create__Real64( RogueReal64 value_0 );
ROGUE_EXPORT_C RogueCharacter RogueCharacter__create__Int32( RogueInt32 value_0 );
ROGUE_EXPORT_C RogueTypeInfo* RogueTypeInfo__get__Int32( RogueInt32 index_0 );
ROGUE_EXPORT_C RogueInt32 RogueTypeInfo__type_count();
ROGUE_EXPORT_C RogueString* RogueMethodInfo___get_method_name__Int32( RogueInt32 method_index_0 );
ROGUE_EXPORT_C RogueClassValue* RogueMethodInfo__call__Int64_Int32_Value( RogueInt64 fn_0, RogueInt32 i_1, RogueClassValue* args_2 );
ROGUE_EXPORT_C void RogueMethodInfo__init_class();
ROGUE_EXPORT_C RogueString* RogueConsole__input__String( RogueString* prompt_0 );
ROGUE_EXPORT_C RogueInt32 RogueMath__max__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 );
ROGUE_EXPORT_C RogueInt64 RogueMath__mod__Int64_Int64( RogueInt64 a_0, RogueInt64 b_1 );
ROGUE_EXPORT_C RogueReal64 RogueMath__mod__Real64_Real64( RogueReal64 a_0, RogueReal64 b_1 );
ROGUE_EXPORT_C void RogueSystem__exit__Int32( RogueInt32 result_code_0 );
ROGUE_EXPORT_C RogueString* RogueSystem__os();
ROGUE_EXPORT_C RogueInt32 RogueSystem__run__String( RogueString* command_0 );
ROGUE_EXPORT_C void RogueSystem__sync_storage();
ROGUE_EXPORT_C void RogueSystem__init_class();
ROGUE_EXPORT_C RogueString* RogueFile__absolute_filepath__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__create_folder__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__delete__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__exists__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueString* RogueFile__filename__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueString* RogueFile__folder__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__is_folder__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__is_newer_than__String_String( RogueString* filepath_0, RogueString* other_filepath_1 );
ROGUE_EXPORT_C RogueString* RogueFile__load_as_string__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__matches_wildcard_pattern__String_String( RogueString* filepath_0, RogueString* pattern_1 );
ROGUE_EXPORT_C RogueLogical RogueFile___matches_wildcard_pattern__String_Int32_Int32_String_Int32_Int32( RogueString* filepath_0, RogueInt32 f0_1, RogueInt32 fcount_2, RogueString* pattern_3, RogueInt32 p0_4, RogueInt32 pcount_5 );
ROGUE_EXPORT_C RogueClassFileReader* RogueFile__reader__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueLogical RogueFile__save__String_String( RogueString* filepath_0, RogueString* data_1 );
ROGUE_EXPORT_C RogueInt64 RogueFile__size__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueReal64 RogueFile__timestamp__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFile__writer__String( RogueString* filepath_0 );
ROGUE_EXPORT_C RogueClassValue* RogueJSON__load_table__File( RogueClassFile* file_0 );
ROGUE_EXPORT_C RogueClassValue* RogueJSON__parse__String( RogueString* json_0 );
ROGUE_EXPORT_C RogueClassValueTable* RogueJSON__parse_table__String( RogueString* json_0 );
ROGUE_EXPORT_C void RogueRuntime__init_class();
ROGUE_EXPORT_C RogueString* RogueRuntime__literal_string__Int32( RogueInt32 string_index_0 );
ROGUE_EXPORT_C RogueInt32 RogueRuntime__literal_string_count();
ROGUE_EXPORT_C void RogueRuntime__set_gc_threshold__Int32( RogueInt32 value_0 );
ROGUE_EXPORT_C void RogueLogicalValue__init_class();
ROGUE_EXPORT_C RogueStringBuilder* RogueStringValue__to_json__String_StringBuilder_Int32( RogueString* value_0, RogueStringBuilder* buffer_1, RogueInt32 flags_2 );
ROGUE_EXPORT_C void RogueStringValue__init_class();
ROGUE_EXPORT   RogueOptionalInt32 RogueOptionalInt32__create();
ROGUE_EXPORT   RogueOptionalInt32 RogueOptionalInt32__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueClassSystemEnvironment RogueSystemEnvironment__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalByte RogueOptionalByte__create();
ROGUE_EXPORT   RogueOptionalByte RogueOptionalByte__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalValue RogueOptionalValue__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalStringBuilder RogueOptionalStringBuilder__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptional_Function___ RogueOptional_Function_____from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalString RogueOptionalString__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalPropertyInfo RogueOptionalPropertyInfo__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalMethodInfo RogueOptionalMethodInfo__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalCharacter RogueOptionalCharacter__create();
ROGUE_EXPORT   RogueOptionalCharacter RogueOptionalCharacter__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalReal64 RogueOptionalReal64__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalReal32 RogueOptionalReal32__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalInt64 RogueOptionalInt64__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueClassFileOptions RogueFileOptions__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_Value_ RogueOptionalTableEntry_String_Value___from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalTypeInfo RogueOptionalTypeInfo__from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_Int32_String_ RogueOptionalTableEntry_Int32_String___from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_String_ RogueOptionalTableEntry_String_String___from_value__Value( RogueClassValue* value_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_TypeInfo_ RogueOptionalTableEntry_String_TypeInfo___from_value__Value( RogueClassValue* value_0 );

// METHOD PROTOTYPES
ROGUE_EXPORT_C void RogueObject__init_object( RogueObject* THIS );
ROGUE_EXPORT_C RogueObject* RogueObject__init( RogueObject* THIS );
ROGUE_EXPORT_C RogueInt64 RogueObject__object_id( RogueObject* THIS );
ROGUE_EXPORT_C RogueString* RogueObject__to_String( RogueObject* THIS );
ROGUE_EXPORT_C RogueString* RogueObject__type_name( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__init_object( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__init( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueString* RogueGlobal__type_name( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__close( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__flush( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__print__Object( RogueClassGlobal* THIS, RogueObject* value_0 );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__print__String( RogueClassGlobal* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__println( RogueClassGlobal* THIS );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__println__Object( RogueClassGlobal* THIS, RogueObject* value_0 );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__println__String( RogueClassGlobal* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassGlobal* RogueGlobal__write__StringBuilder( RogueClassGlobal* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueString* RogueGlobal__prep_arg__String( RogueClassGlobal* THIS, RogueString* arg_0 );
ROGUE_EXPORT_C void RogueGlobal__require_command_line( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__save_cache( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__install_library_manager( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__install_brew( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__install_library__Value( RogueClassGlobal* THIS, RogueClassValue* library_0 );
ROGUE_EXPORT_C void RogueGlobal__install_macos_library__Value( RogueClassGlobal* THIS, RogueClassValue* library_0 );
ROGUE_EXPORT_C RogueString* RogueGlobal__find_path__Value_String( RogueClassGlobal* THIS, RogueClassValue* library_0, RogueString* pattern_1 );
ROGUE_EXPORT_C void RogueGlobal__install_ubuntu_library__Value( RogueClassGlobal* THIS, RogueClassValue* library_0 );
ROGUE_EXPORT_C RogueString* RogueGlobal__library_location__Value( RogueClassGlobal* THIS, RogueClassValue* library_0 );
ROGUE_EXPORT_C RogueString* RogueGlobal__header_location__Value( RogueClassGlobal* THIS, RogueClassValue* library_0 );
ROGUE_EXPORT_C void RogueGlobal__scan_config__File( RogueClassGlobal* THIS, RogueClassFile* file_0 );
ROGUE_EXPORT_C RogueString* RogueGlobal__parse_filepath__JSONParser( RogueClassGlobal* THIS, RogueClassJSONParser* parser_0 );
ROGUE_EXPORT_C void RogueGlobal__on_launch( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__run_tests( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__call_exit_functions( RogueClassGlobal* THIS );
ROGUE_EXPORT_C void RogueGlobal__on_exit___Function___( RogueClassGlobal* THIS, RogueClass_Function___* fn_0 );
ROGUE_EXPORT_C RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___flush( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___println__String( RogueObject* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassPrintWriter* RoguePrintWriter__close( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter* RoguePrintWriter__flush( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter* RoguePrintWriter__println__String( RogueObject* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriter* RoguePrintWriter__write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassValueTable* RogueValueTable__init_object( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueClassValueTable* RogueValueTable__init( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueString* RogueValueTable__to_String( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueString* RogueValueTable__type_name( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueLogical RogueValueTable__contains__String( RogueClassValueTable* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueLogical RogueValueTable__contains__Value( RogueClassValueTable* THIS, RogueClassValue* key_0 );
ROGUE_EXPORT_C RogueInt32 RogueValueTable__count( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueClassValueList* RogueValueTable__ensure_list__String( RogueClassValueTable* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueClassValueTable* RogueValueTable__ensure_table__String( RogueClassValueTable* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValueTable__get__Int32( RogueClassValueTable* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValueTable__get__String( RogueClassValueTable* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueLogical RogueValueTable__is_collection( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueString_List* RogueValueTable__keys( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueClassValueTable* RogueValueTable__set__String_Value( RogueClassValueTable* THIS, RogueString* key_0, RogueClassValue* new_value_1 );
ROGUE_EXPORT_C RogueLogical RogueValueTable__to_Logical( RogueClassValueTable* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueValueTable__to_json__StringBuilder_Int32( RogueClassValueTable* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__init_object( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueString* RogueValue__type_name( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__contains__String( RogueClassValue* THIS, RogueString* table_key_or_list_value_0 );
ROGUE_EXPORT_C RogueLogical RogueValue__contains__Value( RogueClassValue* THIS, RogueClassValue* table_key_or_list_value_0 );
ROGUE_EXPORT_C RogueInt32 RogueValue__count( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueClassValueTable* RogueValue__ensure_table__String( RogueClassValue* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__get__Int32( RogueClassValue* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__get__String( RogueClassValue* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueLogical RogueValue__is_collection( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_complex( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_int32( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_int64( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_logical( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_null( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_non_null( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_number( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_object( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__is_string( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__operatorEQUALSEQUALS__Value( RogueClassValue* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueLogical RogueValue__operatorEQUALSEQUALS__String( RogueClassValue* THIS, RogueString* other_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__remove__Value( RogueClassValue* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueLogical RogueValue__save__File_Logical_Logical( RogueClassValue* THIS, RogueClassFile* file_0, RogueLogical formatted_1, RogueLogical omit_commas_2 );
ROGUE_EXPORT_C RogueClassValue* RogueValue__set__String_Value( RogueClassValue* THIS, RogueString* key_0, RogueClassValue* value_1 );
ROGUE_EXPORT_C RogueByte RogueValue__to_Byte( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueCharacter RogueValue__to_Character( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueInt64 RogueValue__to_Int64( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueInt32 RogueValue__to_Int32( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueValue__to_Logical( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueReal64 RogueValue__to_Real64( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueReal32 RogueValue__to_Real32( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueObject* RogueValue__to_Object( RogueClassValue* THIS );
ROGUE_EXPORT_C RogueString* RogueValue__to_json__Logical_Logical( RogueClassValue* THIS, RogueLogical formatted_0, RogueLogical omit_commas_1 );
ROGUE_EXPORT_C RogueStringBuilder* RogueValue__to_json__StringBuilder_Logical_Logical( RogueClassValue* THIS, RogueStringBuilder* buffer_0, RogueLogical formatted_1, RogueLogical omit_commas_2 );
ROGUE_EXPORT_C RogueStringBuilder* RogueValue__to_json__StringBuilder_Int32( RogueClassValue* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassTable_String_Value_* RogueTable_String_Value___init_object( RogueClassTable_String_Value_* THIS );
ROGUE_EXPORT_C RogueClassTable_String_Value_* RogueTable_String_Value___init( RogueClassTable_String_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_String_Value___to_String( RogueClassTable_String_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_String_Value___type_name( RogueClassTable_String_Value_* THIS );
ROGUE_EXPORT_C RogueClassTable_String_Value_* RogueTable_String_Value___init__Int32( RogueClassTable_String_Value_* THIS, RogueInt32 bin_count_0 );
ROGUE_EXPORT_C RogueLogical RogueTable_String_Value___contains__String( RogueClassTable_String_Value_* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueClassTableEntry_String_Value_* RogueTable_String_Value___find__String( RogueClassTable_String_Value_* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueClassValue* RogueTable_String_Value___get__String( RogueClassTable_String_Value_* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueString_List* RogueTable_String_Value___keys__String_List( RogueClassTable_String_Value_* THIS, RogueString_List* list_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueTable_String_Value___print_to__StringBuilder( RogueClassTable_String_Value_* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassTable_String_Value_* RogueTable_String_Value___set__String_Value( RogueClassTable_String_Value_* THIS, RogueString* key_0, RogueClassValue* value_1 );
ROGUE_EXPORT_C void RogueTable_String_Value____adjust_entry_order__TableEntry_String_Value_( RogueClassTable_String_Value_* THIS, RogueClassTableEntry_String_Value_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_Value____place_entry_in_order__TableEntry_String_Value_( RogueClassTable_String_Value_* THIS, RogueClassTableEntry_String_Value_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_Value____unlink__TableEntry_String_Value_( RogueClassTable_String_Value_* THIS, RogueClassTableEntry_String_Value_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_Value____grow( RogueClassTable_String_Value_* THIS );
ROGUE_EXPORT_C RogueInt32 RogueInt32__hash_code( RogueInt32 THIS );
ROGUE_EXPORT_C RogueInt32 RogueInt32__or_smaller__Int32( RogueInt32 THIS, RogueInt32 other_0 );
ROGUE_EXPORT_C RogueString* RogueInt32__to_String( RogueInt32 THIS );
ROGUE_EXPORT_C RogueCharacter RogueInt32__to_digit( RogueInt32 THIS );
ROGUE_EXPORT_C RogueString* RogueArray_TableEntry_String_Value____type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueString* RogueArray__type_name( RogueArray* THIS );
ROGUE_EXPORT_C void RogueArray__zero__Int32_Int32( RogueArray* THIS, RogueInt32 i1_0, RogueInt32 n_1 );
ROGUE_EXPORT_C RogueClassTableEntry_String_Value_* RogueTableEntry_String_Value___init_object( RogueClassTableEntry_String_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_Value___to_String( RogueClassTableEntry_String_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_Value___type_name( RogueClassTableEntry_String_Value_* THIS );
ROGUE_EXPORT_C RogueClassTableEntry_String_Value_* RogueTableEntry_String_Value___init__String_Value_Int32( RogueClassTableEntry_String_Value_* THIS, RogueString* _key_0, RogueClassValue* _value_1, RogueInt32 _hash_2 );
ROGUE_EXPORT_C RogueInt32 RogueString__hash_code( RogueString* THIS );
ROGUE_EXPORT_C RogueString* RogueString__to_String( RogueString* THIS );
ROGUE_EXPORT_C RogueString* RogueString__type_name( RogueString* THIS );
ROGUE_EXPORT_C RogueString* RogueString__after__Int32( RogueString* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueString* RogueString__after_first__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueString* RogueString__after_first__String( RogueString* THIS, RogueString* st_0 );
ROGUE_EXPORT_C RogueString* RogueString__after_last__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueString* RogueString__before__Int32( RogueString* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueString* RogueString__before_first__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueString* RogueString__before_first__String( RogueString* THIS, RogueString* st_0 );
ROGUE_EXPORT_C RogueString* RogueString__before_last__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueString__begins_with__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueString__begins_with__String( RogueString* THIS, RogueString* other_0 );
ROGUE_EXPORT_C RogueString* RogueString__consolidated( RogueString* THIS );
ROGUE_EXPORT_C RogueLogical RogueString__contains__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueString__contains__String( RogueString* THIS, RogueString* substring_0 );
ROGUE_EXPORT_C RogueLogical RogueString__contains_at__String_Int32( RogueString* THIS, RogueString* substring_0, RogueInt32 at_index_1 );
ROGUE_EXPORT_C RogueLogical RogueString__ends_with__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueString__ends_with__String( RogueString* THIS, RogueString* other_0 );
ROGUE_EXPORT_C RogueString* RogueString__from__Int32( RogueString* THIS, RogueInt32 i1_0 );
ROGUE_EXPORT_C RogueString* RogueString__from__Int32_Int32( RogueString* THIS, RogueInt32 i1_0, RogueInt32 i2_1 );
ROGUE_EXPORT_C RogueString* RogueString__from_first__Character( RogueString* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueCharacter RogueString__last( RogueString* THIS );
ROGUE_EXPORT_C RogueString* RogueString__left_justified__Int32_Character( RogueString* THIS, RogueInt32 spaces_0, RogueCharacter fill_1 );
ROGUE_EXPORT_C RogueString* RogueString__leftmost__Int32( RogueString* THIS, RogueInt32 n_0 );
ROGUE_EXPORT   RogueOptionalInt32 RogueString__locate__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 optional_i1_1 );
ROGUE_EXPORT   RogueOptionalInt32 RogueString__locate__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 optional_i1_1 );
ROGUE_EXPORT   RogueOptionalInt32 RogueString__locate_last__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 starting_index_1 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__Character( RogueString* THIS, RogueCharacter value_0 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__Int32( RogueString* THIS, RogueInt32 value_0 );
ROGUE_EXPORT_C RogueLogical RogueString__operatorEQUALSEQUALS__String( RogueString* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__Logical( RogueString* THIS, RogueLogical value_0 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__Object( RogueString* THIS, RogueObject* value_0 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__Real64( RogueString* THIS, RogueReal64 value_0 );
ROGUE_EXPORT_C RogueString* RogueString__operatorPLUS__String( RogueString* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueString* RogueString__pluralized__Int32( RogueString* THIS, RogueInt32 quantity_0 );
ROGUE_EXPORT_C RogueString* RogueString__replacing__String_String( RogueString* THIS, RogueString* look_for_0, RogueString* replace_with_1 );
ROGUE_EXPORT_C RogueString* RogueString__rightmost__Int32( RogueString* THIS, RogueInt32 n_0 );
ROGUE_EXPORT_C RogueString_List* RogueString__split__Character( RogueString* THIS, RogueCharacter separator_0 );
ROGUE_EXPORT_C RogueString* RogueString__times__Int32( RogueString* THIS, RogueInt32 n_0 );
ROGUE_EXPORT_C RogueString* RogueString__to_lowercase( RogueString* THIS );
ROGUE_EXPORT_C RogueString* RogueString__trimmed( RogueString* THIS );
ROGUE_EXPORT_C RogueString_List* RogueString__word_wrap__Int32_String( RogueString* THIS, RogueInt32 width_0, RogueString* allow_break_after_1 );
ROGUE_EXPORT_C RogueStringBuilder* RogueString__word_wrap__Int32_StringBuilder_String( RogueString* THIS, RogueInt32 width_0, RogueStringBuilder* buffer_1, RogueString* allow_break_after_2 );
ROGUE_EXPORT_C RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_* Rogue_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical___init_object( RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical___type_name( RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueLogical Rogue_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical___call__TableEntry_String_Value__TableEntry_String_Value_( RogueClass_Function_TableEntry_String_Value__TableEntry_String_Value__RETURNSLogical_* THIS, RogueClassTableEntry_String_Value_* param1_0, RogueClassTableEntry_String_Value_* param2_1 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__init_object( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__init( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueString* RogueStringBuilder__to_String( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueString* RogueStringBuilder__type_name( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__init__Int32( RogueStringBuilder* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__clear( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueCharacter RogueStringBuilder__get__Int32( RogueStringBuilder* THIS, RogueInt32 index_0 );
ROGUE_EXPORT   RogueOptionalInt32 RogueStringBuilder__locate__Character( RogueStringBuilder* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueStringBuilder__needs_indent( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Character_Logical( RogueStringBuilder* THIS, RogueCharacter value_0, RogueLogical formatted_1 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Logical( RogueStringBuilder* THIS, RogueLogical value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Int64( RogueStringBuilder* THIS, RogueInt64 value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Object( RogueStringBuilder* THIS, RogueObject* value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Real64( RogueStringBuilder* THIS, RogueReal64 value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print__String( RogueStringBuilder* THIS, RogueString* value_0 );
ROGUE_EXPORT_C void RogueStringBuilder__print_indent( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__print_to_work_bytes__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 );
ROGUE_EXPORT_C void RogueStringBuilder__print_work_bytes( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__println( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__println__String( RogueStringBuilder* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringBuilder__reserve__Int32( RogueStringBuilder* THIS, RogueInt32 additional_bytes_0 );
ROGUE_EXPORT_C void RogueStringBuilder__round_off_work_bytes( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueReal64 RogueStringBuilder__scan_work_bytes( RogueStringBuilder* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__init_object( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__init( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueString* RogueByte_List__to_String( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueString* RogueByte_List__type_name( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__init__Int32( RogueByte_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__add__Byte( RogueByte_List* THIS, RogueByte value_0 );
ROGUE_EXPORT_C RogueInt32 RogueByte_List__capacity( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__clear( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__ensure_capacity__Int32( RogueByte_List* THIS, RogueInt32 desired_capacity_0 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__expand_to_count__Int32( RogueByte_List* THIS, RogueInt32 minimum_count_0 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__expand_to_include__Int32( RogueByte_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__discard_from__Int32( RogueByte_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__insert__Byte_Int32( RogueByte_List* THIS, RogueByte value_0, RogueInt32 before_index_1 );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__reserve__Int32( RogueByte_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueByte RogueByte_List__remove_at__Int32( RogueByte_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueByte RogueByte_List__remove_last( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__reverse( RogueByte_List* THIS );
ROGUE_EXPORT_C RogueByte_List* RogueByte_List__reverse__Int32_Int32( RogueByte_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 );
ROGUE_EXPORT   RogueByte_List* RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( RogueByte_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalByte fill_3 );
ROGUE_EXPORT_C RogueClassGenericList* RogueGenericList__init_object( RogueClassGenericList* THIS );
ROGUE_EXPORT_C RogueString* RogueGenericList__type_name( RogueClassGenericList* THIS );
ROGUE_EXPORT_C RogueString* RogueByte__to_String( RogueByte THIS );
ROGUE_EXPORT_C RogueString* RogueArray_Byte___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueClassStringBuilderPool* RogueStringBuilderPool__init_object( RogueClassStringBuilderPool* THIS );
ROGUE_EXPORT_C RogueString* RogueStringBuilderPool__type_name( RogueClassStringBuilderPool* THIS );
ROGUE_EXPORT_C RogueStringBuilder_List* RogueStringBuilder_List__init_object( RogueStringBuilder_List* THIS );
ROGUE_EXPORT_C RogueStringBuilder_List* RogueStringBuilder_List__init( RogueStringBuilder_List* THIS );
ROGUE_EXPORT_C RogueString* RogueStringBuilder_List__to_String( RogueStringBuilder_List* THIS );
ROGUE_EXPORT_C RogueString* RogueStringBuilder_List__type_name( RogueStringBuilder_List* THIS );
ROGUE_EXPORT_C RogueStringBuilder_List* RogueStringBuilder_List__init__Int32( RogueStringBuilder_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueString* RogueArray_StringBuilder___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueString* RogueLogical__to_String( RogueLogical THIS );
ROGUE_EXPORT_C Rogue_Function____List* Rogue_Function____List__init_object( Rogue_Function____List* THIS );
ROGUE_EXPORT_C Rogue_Function____List* Rogue_Function____List__init( Rogue_Function____List* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function____List__to_String( Rogue_Function____List* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function____List__type_name( Rogue_Function____List* THIS );
ROGUE_EXPORT_C Rogue_Function____List* Rogue_Function____List__init__Int32( Rogue_Function____List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C Rogue_Function____List* Rogue_Function____List__add___Function___( Rogue_Function____List* THIS, RogueClass_Function___* value_0 );
ROGUE_EXPORT_C RogueInt32 Rogue_Function____List__capacity( Rogue_Function____List* THIS );
ROGUE_EXPORT_C Rogue_Function____List* Rogue_Function____List__reserve__Int32( Rogue_Function____List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueClass_Function___* Rogue_Function_____init_object( RogueClass_Function___* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_____type_name( RogueClass_Function___* THIS );
ROGUE_EXPORT_C void Rogue_Function_____call( RogueClass_Function___* THIS );
ROGUE_EXPORT_C RogueString* RogueArray__Function______type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueException* RogueException__init_object( RogueException* THIS );
ROGUE_EXPORT_C RogueException* RogueException__init( RogueException* THIS );
ROGUE_EXPORT_C RogueString* RogueException__to_String( RogueException* THIS );
ROGUE_EXPORT_C RogueString* RogueException__type_name( RogueException* THIS );
ROGUE_EXPORT_C RogueException* RogueException__init__String( RogueException* THIS, RogueString* _auto_75_0 );
ROGUE_EXPORT_C void RogueException__display( RogueException* THIS );
ROGUE_EXPORT_C RogueString* RogueException__format( RogueException* THIS );
ROGUE_EXPORT_C RogueClassStackTrace* RogueStackTrace__init_object( RogueClassStackTrace* THIS );
ROGUE_EXPORT_C RogueString* RogueStackTrace__to_String( RogueClassStackTrace* THIS );
ROGUE_EXPORT_C RogueString* RogueStackTrace__type_name( RogueClassStackTrace* THIS );
ROGUE_EXPORT_C RogueClassStackTrace* RogueStackTrace__init__Int32( RogueClassStackTrace* THIS, RogueInt32 omit_count_0 );
ROGUE_EXPORT_C void RogueStackTrace__format( RogueClassStackTrace* THIS );
ROGUE_EXPORT_C void RogueStackTrace__print( RogueClassStackTrace* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStackTrace__print__StringBuilder( RogueClassStackTrace* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueString_List* RogueString_List__init_object( RogueString_List* THIS );
ROGUE_EXPORT_C RogueString_List* RogueString_List__init( RogueString_List* THIS );
ROGUE_EXPORT_C RogueString* RogueString_List__to_String( RogueString_List* THIS );
ROGUE_EXPORT_C RogueString* RogueString_List__type_name( RogueString_List* THIS );
ROGUE_EXPORT_C RogueString_List* RogueString_List__init__Int32( RogueString_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueString_List* RogueString_List__add__String( RogueString_List* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueInt32 RogueString_List__capacity( RogueString_List* THIS );
ROGUE_EXPORT   RogueOptionalInt32 RogueString_List__locate__String( RogueString_List* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueString_List* RogueString_List__reserve__Int32( RogueString_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueString* RogueString_List__remove__String( RogueString_List* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueString* RogueString_List__remove_at__Int32( RogueString_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueString* RogueString_List__join__String( RogueString_List* THIS, RogueString* separator_0 );
ROGUE_EXPORT_C RogueString_List* RogueString_List__mapped_String____Function_String_RETURNSString_( RogueString_List* THIS, RogueClass_Function_String_RETURNSString_* map_fn_0 );
ROGUE_EXPORT_C RogueString* RogueArray_String___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueInt32 RogueReal64__decimal_digit_count( RogueReal64 THIS );
ROGUE_EXPORT   RogueString* RogueReal64__format__OptionalInt32( RogueReal64 THIS, RogueOptionalInt32 decimal_digits_0 );
ROGUE_EXPORT_C RogueReal64 RogueReal64__fractional_part( RogueReal64 THIS );
ROGUE_EXPORT_C RogueLogical RogueReal64__is_infinite( RogueReal64 THIS );
ROGUE_EXPORT_C RogueLogical RogueReal64__is_not_a_number( RogueReal64 THIS );
ROGUE_EXPORT_C RogueString* RogueReal64__to_String( RogueReal64 THIS );
ROGUE_EXPORT_C RogueReal64 RogueReal64__whole_part( RogueReal64 THIS );
ROGUE_EXPORT_C RogueString* RogueReal32__to_String( RogueReal32 THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( RogueInt64 THIS, RogueInt32 base_0, RogueInt32 digits_1, RogueStringBuilder* buffer_2 );
ROGUE_EXPORT_C RogueString* RogueInt64__to_String( RogueInt64 THIS );
ROGUE_EXPORT_C RogueString* RogueInt64__to_hex_string__Int32( RogueInt64 THIS, RogueInt32 digits_0 );
ROGUE_EXPORT_C RogueLogical RogueCharacter__is_identifier__Logical_Logical( RogueCharacter THIS, RogueLogical start_0, RogueLogical allow_dollar_1 );
ROGUE_EXPORT_C RogueLogical RogueCharacter__is_letter( RogueCharacter THIS );
ROGUE_EXPORT_C RogueString* RogueCharacter__to_String( RogueCharacter THIS );
ROGUE_EXPORT_C RogueInt32 RogueCharacter__to_number__Int32( RogueCharacter THIS, RogueInt32 base_0 );
ROGUE_EXPORT_C RogueTypeInfo* RogueTypeInfo__init_object( RogueTypeInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueTypeInfo__to_String( RogueTypeInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueTypeInfo__type_name( RogueTypeInfo* THIS );
ROGUE_EXPORT_C RogueTypeInfo* RogueTypeInfo__init__Int32_String( RogueTypeInfo* THIS, RogueInt32 _auto_98_0, RogueString* _auto_99_1 );
ROGUE_EXPORT_C void RogueTypeInfo__add_global_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 global_property_name_index_0, RogueInt32 global_property_type_index_1 );
ROGUE_EXPORT_C void RogueTypeInfo__add_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 property_name_index_0, RogueInt32 property_type_index_1 );
ROGUE_EXPORT_C void RogueTypeInfo__add_method_info__Int32( RogueTypeInfo* THIS, RogueInt32 method_index_0 );
ROGUE_EXPORT_C RoguePropertyInfo_List* RoguePropertyInfo_List__init_object( RoguePropertyInfo_List* THIS );
ROGUE_EXPORT_C RoguePropertyInfo_List* RoguePropertyInfo_List__init( RoguePropertyInfo_List* THIS );
ROGUE_EXPORT_C RogueString* RoguePropertyInfo_List__to_String( RoguePropertyInfo_List* THIS );
ROGUE_EXPORT_C RogueString* RoguePropertyInfo_List__type_name( RoguePropertyInfo_List* THIS );
ROGUE_EXPORT_C RoguePropertyInfo_List* RoguePropertyInfo_List__init__Int32( RoguePropertyInfo_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RoguePropertyInfo_List* RoguePropertyInfo_List__add__PropertyInfo( RoguePropertyInfo_List* THIS, RogueClassPropertyInfo* value_0 );
ROGUE_EXPORT_C RogueInt32 RoguePropertyInfo_List__capacity( RoguePropertyInfo_List* THIS );
ROGUE_EXPORT_C RoguePropertyInfo_List* RoguePropertyInfo_List__reserve__Int32( RoguePropertyInfo_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueClassPropertyInfo* RoguePropertyInfo__init_object( RogueClassPropertyInfo* THIS );
ROGUE_EXPORT_C RogueString* RoguePropertyInfo__to_String( RogueClassPropertyInfo* THIS );
ROGUE_EXPORT_C RogueString* RoguePropertyInfo__type_name( RogueClassPropertyInfo* THIS );
ROGUE_EXPORT_C RogueClassPropertyInfo* RoguePropertyInfo__init__Int32_Int32_Int32( RogueClassPropertyInfo* THIS, RogueInt32 _auto_126_0, RogueInt32 _auto_127_1, RogueInt32 _auto_128_2 );
ROGUE_EXPORT_C RogueString* RoguePropertyInfo__name( RogueClassPropertyInfo* THIS );
ROGUE_EXPORT_C RogueTypeInfo* Rogue_PropertyInfo__type( RogueClassPropertyInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueArray_PropertyInfo___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueMethodInfo_List* RogueMethodInfo_List__init_object( RogueMethodInfo_List* THIS );
ROGUE_EXPORT_C RogueMethodInfo_List* RogueMethodInfo_List__init( RogueMethodInfo_List* THIS );
ROGUE_EXPORT_C RogueString* RogueMethodInfo_List__to_String( RogueMethodInfo_List* THIS );
ROGUE_EXPORT_C RogueString* RogueMethodInfo_List__type_name( RogueMethodInfo_List* THIS );
ROGUE_EXPORT_C RogueMethodInfo_List* RogueMethodInfo_List__init__Int32( RogueMethodInfo_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueMethodInfo_List* RogueMethodInfo_List__add__MethodInfo( RogueMethodInfo_List* THIS, RogueClassMethodInfo* value_0 );
ROGUE_EXPORT_C RogueInt32 RogueMethodInfo_List__capacity( RogueMethodInfo_List* THIS );
ROGUE_EXPORT_C RogueMethodInfo_List* RogueMethodInfo_List__reserve__Int32( RogueMethodInfo_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueClassMethodInfo* RogueMethodInfo__init_object( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueMethodInfo__to_String( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueMethodInfo__type_name( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueClassMethodInfo* RogueMethodInfo__init__Int32_Int32_Int32_Int32_Int32_Int32( RogueClassMethodInfo* THIS, RogueInt32 _auto_318_0, RogueInt32 _auto_319_1, RogueInt32 _auto_320_2, RogueInt32 _auto_321_3, RogueInt32 _auto_322_4, RogueInt32 _auto_323_5 );
ROGUE_EXPORT_C RogueString* RogueMethodInfo__name( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueTypeInfo* Rogue_MethodInfo__return_type( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueString* RogueMethodInfo__parameter_name__Int32( RogueClassMethodInfo* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueTypeInfo* RogueMethodInfo__parameter_type__Int32( RogueClassMethodInfo* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueString* RogueMethodInfo__signature( RogueClassMethodInfo* THIS );
ROGUE_EXPORT_C RogueClassTable_Int32_String_* RogueTable_Int32_String___init_object( RogueClassTable_Int32_String_* THIS );
ROGUE_EXPORT_C RogueClassTable_Int32_String_* RogueTable_Int32_String___init( RogueClassTable_Int32_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_Int32_String___to_String( RogueClassTable_Int32_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_Int32_String___type_name( RogueClassTable_Int32_String_* THIS );
ROGUE_EXPORT_C RogueClassTable_Int32_String_* RogueTable_Int32_String___init__Int32( RogueClassTable_Int32_String_* THIS, RogueInt32 bin_count_0 );
ROGUE_EXPORT_C RogueClassTableEntry_Int32_String_* RogueTable_Int32_String___find__Int32( RogueClassTable_Int32_String_* THIS, RogueInt32 key_0 );
ROGUE_EXPORT_C RogueString* RogueTable_Int32_String___get__Int32( RogueClassTable_Int32_String_* THIS, RogueInt32 key_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueTable_Int32_String___print_to__StringBuilder( RogueClassTable_Int32_String_* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassTable_Int32_String_* RogueTable_Int32_String___set__Int32_String( RogueClassTable_Int32_String_* THIS, RogueInt32 key_0, RogueString* value_1 );
ROGUE_EXPORT_C void RogueTable_Int32_String____adjust_entry_order__TableEntry_Int32_String_( RogueClassTable_Int32_String_* THIS, RogueClassTableEntry_Int32_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_Int32_String____place_entry_in_order__TableEntry_Int32_String_( RogueClassTable_Int32_String_* THIS, RogueClassTableEntry_Int32_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_Int32_String____unlink__TableEntry_Int32_String_( RogueClassTable_Int32_String_* THIS, RogueClassTableEntry_Int32_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_Int32_String____grow( RogueClassTable_Int32_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueArray_TableEntry_Int32_String____type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueClassTableEntry_Int32_String_* RogueTableEntry_Int32_String___init_object( RogueClassTableEntry_Int32_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_Int32_String___to_String( RogueClassTableEntry_Int32_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_Int32_String___type_name( RogueClassTableEntry_Int32_String_* THIS );
ROGUE_EXPORT_C RogueClassTableEntry_Int32_String_* RogueTableEntry_Int32_String___init__Int32_String_Int32( RogueClassTableEntry_Int32_String_* THIS, RogueInt32 _key_0, RogueString* _value_1, RogueInt32 _hash_2 );
ROGUE_EXPORT_C RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_* Rogue_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical___init_object( RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical___type_name( RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueLogical Rogue_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical___call__TableEntry_Int32_String__TableEntry_Int32_String_( RogueClass_Function_TableEntry_Int32_String__TableEntry_Int32_String__RETURNSLogical_* THIS, RogueClassTableEntry_Int32_String_* param1_0, RogueClassTableEntry_Int32_String_* param2_1 );
ROGUE_EXPORT_C RogueString* RogueArray_MethodInfo___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__init_object( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__init( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueString* RogueCharacter_List__to_String( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueString* RogueCharacter_List__type_name( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__init__Int32( RogueCharacter_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__add__Character( RogueCharacter_List* THIS, RogueCharacter value_0 );
ROGUE_EXPORT_C RogueInt32 RogueCharacter_List__capacity( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__discard_from__Int32( RogueCharacter_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueCharacter_List* RogueCharacter_List__reserve__Int32( RogueCharacter_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueClassListRewriter_Character_* RogueCharacter_List__rewriter( RogueCharacter_List* THIS );
ROGUE_EXPORT_C RogueString* RogueArray_Character___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueClassValueList* RogueValueList__init_object( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueClassValueList* RogueValueList__init( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueString* RogueValueList__to_String( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueString* RogueValueList__type_name( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueClassValueList* RogueValueList__add__Value( RogueClassValueList* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueLogical RogueValueList__contains__String( RogueClassValueList* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueLogical RogueValueList__contains__Value( RogueClassValueList* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueInt32 RogueValueList__count( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueValueList__get__Int32( RogueClassValueList* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueLogical RogueValueList__is_collection( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueValueList__remove__Value( RogueClassValueList* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueLogical RogueValueList__to_Logical( RogueClassValueList* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueValueList__to_json__StringBuilder_Int32( RogueClassValueList* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassValueList* RogueValueList__init__Int32( RogueClassValueList* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueValue_List* RogueValue_List__init_object( RogueValue_List* THIS );
ROGUE_EXPORT_C RogueValue_List* RogueValue_List__init( RogueValue_List* THIS );
ROGUE_EXPORT_C RogueString* RogueValue_List__to_String( RogueValue_List* THIS );
ROGUE_EXPORT_C RogueString* RogueValue_List__type_name( RogueValue_List* THIS );
ROGUE_EXPORT_C RogueValue_List* RogueValue_List__init__Int32( RogueValue_List* THIS, RogueInt32 initial_capacity_0 );
ROGUE_EXPORT_C RogueValue_List* RogueValue_List__add__Value( RogueValue_List* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueInt32 RogueValue_List__capacity( RogueValue_List* THIS );
ROGUE_EXPORT   RogueOptionalInt32 RogueValue_List__locate__Value( RogueValue_List* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueValue_List* RogueValue_List__reserve__Int32( RogueValue_List* THIS, RogueInt32 additional_elements_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue_List__remove__Value( RogueValue_List* THIS, RogueClassValue* value_0 );
ROGUE_EXPORT_C RogueClassValue* RogueValue_List__remove_at__Int32( RogueValue_List* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueString* RogueArray_Value___type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueClassObjectValue* RogueObjectValue__init_object( RogueClassObjectValue* THIS );
ROGUE_EXPORT_C RogueString* RogueObjectValue__to_String( RogueClassObjectValue* THIS );
ROGUE_EXPORT_C RogueString* RogueObjectValue__type_name( RogueClassObjectValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueObjectValue__is_object( RogueClassObjectValue* THIS );
ROGUE_EXPORT_C RogueObject* RogueObjectValue__to_Object( RogueClassObjectValue* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueObjectValue__to_json__StringBuilder_Int32( RogueClassObjectValue* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassObjectValue* RogueObjectValue__init__Object( RogueClassObjectValue* THIS, RogueObject* _auto_129_0 );
ROGUE_EXPORT_C RogueClassStringConsolidationTable* RogueStringConsolidationTable__init_object( RogueClassStringConsolidationTable* THIS );
ROGUE_EXPORT_C RogueString* RogueStringConsolidationTable__type_name( RogueClassStringConsolidationTable* THIS );
ROGUE_EXPORT_C RogueString* RogueStringConsolidationTable__get__String( RogueClassStringConsolidationTable* THIS, RogueString* st_0 );
ROGUE_EXPORT_C RogueClassStringTable_String_* RogueStringTable_String___init_object( RogueClassStringTable_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueStringTable_String___type_name( RogueClassStringTable_String_* THIS );
ROGUE_EXPORT_C RogueClassTable_String_String_* RogueTable_String_String___init_object( RogueClassTable_String_String_* THIS );
ROGUE_EXPORT_C RogueClassTable_String_String_* RogueTable_String_String___init( RogueClassTable_String_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_String_String___to_String( RogueClassTable_String_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTable_String_String___type_name( RogueClassTable_String_String_* THIS );
ROGUE_EXPORT_C RogueClassTable_String_String_* RogueTable_String_String___init__Int32( RogueClassTable_String_String_* THIS, RogueInt32 bin_count_0 );
ROGUE_EXPORT_C RogueClassTableEntry_String_String_* RogueTable_String_String___find__String( RogueClassTable_String_String_* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueString* RogueTable_String_String___get__String( RogueClassTable_String_String_* THIS, RogueString* key_0 );
ROGUE_EXPORT_C RogueStringBuilder* RogueTable_String_String___print_to__StringBuilder( RogueClassTable_String_String_* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassTable_String_String_* RogueTable_String_String___set__String_String( RogueClassTable_String_String_* THIS, RogueString* key_0, RogueString* value_1 );
ROGUE_EXPORT_C void RogueTable_String_String____adjust_entry_order__TableEntry_String_String_( RogueClassTable_String_String_* THIS, RogueClassTableEntry_String_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_String____place_entry_in_order__TableEntry_String_String_( RogueClassTable_String_String_* THIS, RogueClassTableEntry_String_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_String____unlink__TableEntry_String_String_( RogueClassTable_String_String_* THIS, RogueClassTableEntry_String_String_* entry_0 );
ROGUE_EXPORT_C void RogueTable_String_String____grow( RogueClassTable_String_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueArray_TableEntry_String_String____type_name( RogueArray* THIS );
ROGUE_EXPORT_C RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init_object( RogueClassTableEntry_String_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_String___to_String( RogueClassTableEntry_String_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_String___type_name( RogueClassTableEntry_String_String_* THIS );
ROGUE_EXPORT_C RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init__String_String_Int32( RogueClassTableEntry_String_String_* THIS, RogueString* _key_0, RogueString* _value_1, RogueInt32 _hash_2 );
ROGUE_EXPORT_C RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* Rogue_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical___init_object( RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical___type_name( RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* THIS );
ROGUE_EXPORT_C RogueLogical Rogue_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical___call__TableEntry_String_String__TableEntry_String_String_( RogueClass_Function_TableEntry_String_String__TableEntry_String_String__RETURNSLogical_* THIS, RogueClassTableEntry_String_String_* param1_0, RogueClassTableEntry_String_String_* param2_1 );
ROGUE_EXPORT_C RogueClassReader_Character_* RogueReader_Character___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueLogical RogueReader_Character___has_another( RogueObject* THIS );
ROGUE_EXPORT_C RogueCharacter RogueReader_Character___read( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__init_object( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__init( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueString* RogueConsole__type_name( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_output_buffer_* RogueConsole__close( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueLogical RogueConsole__has_another( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueCharacter RogueConsole__read( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__flush( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__print__String( RogueClassConsole* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__println( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__println__String( RogueClassConsole* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassConsole* RogueConsole__write__StringBuilder( RogueClassConsole* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C void RogueConsole__fill_input_queue( RogueClassConsole* THIS );
ROGUE_EXPORT_C void RogueConsole__reset_input_mode( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueInt32 RogueConsole__width( RogueClassConsole* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___flush( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___println__String( RogueObject* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__init_object( RogueClassConsoleErrorPrinter* THIS );
ROGUE_EXPORT_C RogueString* RogueConsoleErrorPrinter__type_name( RogueClassConsoleErrorPrinter* THIS );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__close( RogueClassConsoleErrorPrinter* THIS );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__flush( RogueClassConsoleErrorPrinter* THIS );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__print__String( RogueClassConsoleErrorPrinter* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__println( RogueClassConsoleErrorPrinter* THIS );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__println__String( RogueClassConsoleErrorPrinter* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassConsoleErrorPrinter* RogueConsoleErrorPrinter__write__StringBuilder( RogueClassConsoleErrorPrinter* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassPrimitiveWorkBuffer* RoguePrimitiveWorkBuffer__init_object( RogueClassPrimitiveWorkBuffer* THIS );
ROGUE_EXPORT_C RogueString* RoguePrimitiveWorkBuffer__type_name( RogueClassPrimitiveWorkBuffer* THIS );
ROGUE_EXPORT_C RogueClassMath* RogueMath__init_object( RogueClassMath* THIS );
ROGUE_EXPORT_C RogueString* RogueMath__type_name( RogueClassMath* THIS );
ROGUE_EXPORT_C RogueClassBoxed* RogueBoxed__init_object( RogueClassBoxed* THIS );
ROGUE_EXPORT_C RogueString* RogueBoxed__type_name( RogueClassBoxed* THIS );
ROGUE_EXPORT_C RogueClassFunction_221* RogueFunction_221__init_object( RogueClassFunction_221* THIS );
ROGUE_EXPORT_C RogueString* RogueFunction_221__type_name( RogueClassFunction_221* THIS );
ROGUE_EXPORT_C void RogueFunction_221__call( RogueClassFunction_221* THIS );
ROGUE_EXPORT_C RogueClassSystem* RogueSystem__init_object( RogueClassSystem* THIS );
ROGUE_EXPORT_C RogueString* RogueSystem__type_name( RogueClassSystem* THIS );
ROGUE_EXPORT_C RogueClassError* RogueError__init_object( RogueClassError* THIS );
ROGUE_EXPORT_C RogueString* RogueError__type_name( RogueClassError* THIS );
ROGUE_EXPORT_C RogueClassError* RogueError___throw( RogueClassError* THIS );
ROGUE_EXPORT_C RogueClassFile* RogueFile__init_object( RogueClassFile* THIS );
ROGUE_EXPORT_C RogueString* RogueFile__to_String( RogueClassFile* THIS );
ROGUE_EXPORT_C RogueString* RogueFile__type_name( RogueClassFile* THIS );
ROGUE_EXPORT_C RogueClassFile* RogueFile__init__String( RogueClassFile* THIS, RogueString* _auto_231_0 );
ROGUE_EXPORT_C RogueString* RogueFile__filename( RogueClassFile* THIS );
ROGUE_EXPORT_C RogueClassLineReader* RogueLineReader__init_object( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueString* RogueLineReader__type_name( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueClassLineReader* RogueLineReader__close( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueLogical RogueLineReader__has_another( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueString* RogueLineReader__read( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueClassLineReader* RogueLineReader__init__Reader_Character_( RogueClassLineReader* THIS, RogueClassReader_Character_* _auto_234_0 );
ROGUE_EXPORT_C RogueClassLineReader* RogueLineReader__init__Reader_Byte_( RogueClassLineReader* THIS, RogueClassReader_Byte_* reader_0 );
ROGUE_EXPORT_C RogueClassLineReader* RogueLineReader__init__File( RogueClassLineReader* THIS, RogueClassFile* file_0 );
ROGUE_EXPORT_C RogueString* RogueLineReader__prepare_next( RogueClassLineReader* THIS );
ROGUE_EXPORT_C RogueClassReader_Byte_* RogueReader_Byte___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueLogical RogueReader_Byte___has_another( RogueObject* THIS );
ROGUE_EXPORT_C RogueByte RogueReader_Byte___read( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__init_object( RogueClassFileWriter* THIS );
ROGUE_EXPORT_C RogueString* RogueFileWriter__type_name( RogueClassFileWriter* THIS );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__close( RogueClassFileWriter* THIS );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__flush( RogueClassFileWriter* THIS );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__write__Byte( RogueClassFileWriter* THIS, RogueByte ch_0 );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__write__Byte_List( RogueClassFileWriter* THIS, RogueByte_List* bytes_0 );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__init__String_Logical( RogueClassFileWriter* THIS, RogueString* _filepath_0, RogueLogical append_1 );
ROGUE_EXPORT_C void RogueFileWriter__on_cleanup( RogueClassFileWriter* THIS );
ROGUE_EXPORT_C RogueLogical RogueFileWriter__open__String_Logical( RogueClassFileWriter* THIS, RogueString* _auto_243_0, RogueLogical append_1 );
ROGUE_EXPORT_C RogueClassFileWriter* RogueFileWriter__write__String( RogueClassFileWriter* THIS, RogueString* data_0 );
ROGUE_EXPORT_C RogueClassWriter_Byte_* RogueWriter_Byte___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassWriter_Byte_* RogueWriter_Byte___flush( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassWriter_Byte_* RogueWriter_Byte___write__Byte_List( RogueObject* THIS, RogueByte_List* list_0 );
ROGUE_EXPORT_C RogueClassScanner* RogueScanner__init_object( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueString* RogueScanner__type_name( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueClassScanner* RogueScanner__close( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueLogical RogueScanner__has_another( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueCharacter RogueScanner__peek( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueCharacter RogueScanner__read( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueClassScanner* RogueScanner__init__String_Int32_Logical( RogueClassScanner* THIS, RogueString* source_0, RogueInt32 _auto_249_1, RogueLogical preserve_crlf_2 );
ROGUE_EXPORT_C RogueLogical RogueScanner__consume__Character( RogueClassScanner* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueScanner__consume_eols( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueLogical RogueScanner__consume_spaces( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueClassScanner* RogueScanner__convert_crlf_to_newline( RogueClassScanner* THIS );
ROGUE_EXPORT_C RogueClassJSONParser* RogueJSONParser__init_object( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueString* RogueJSONParser__type_name( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueClassJSONParser* RogueJSONParser__init__String( RogueClassJSONParser* THIS, RogueString* json_0 );
ROGUE_EXPORT_C RogueClassJSONParser* RogueJSONParser__init__Scanner( RogueClassJSONParser* THIS, RogueClassScanner* _auto_255_0 );
ROGUE_EXPORT_C RogueLogical RogueJSONParser__consume__Character( RogueClassJSONParser* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueLogical RogueJSONParser__has_another( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueLogical RogueJSONParser__next_is__Character( RogueClassJSONParser* THIS, RogueCharacter ch_0 );
ROGUE_EXPORT_C RogueClassValue* RogueJSONParser__parse_value( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueJSONParser__parse_table__Character_Character( RogueClassJSONParser* THIS, RogueCharacter open_ch_0, RogueCharacter close_ch_1 );
ROGUE_EXPORT_C RogueClassValue* RogueJSONParser__parse_list__Character_Character( RogueClassJSONParser* THIS, RogueCharacter open_ch_0, RogueCharacter close_ch_1 );
ROGUE_EXPORT_C RogueString* RogueJSONParser__parse_string( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueCharacter RogueJSONParser__parse_hex_quad( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueString* RogueJSONParser__parse_identifier( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueCharacter RogueJSONParser__peek( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueLogical RogueJSONParser__next_is_identifier( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueJSONParser__parse_number( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueCharacter RogueJSONParser__read( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C void RogueJSONParser__consume_spaces( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C void RogueJSONParser__consume_spaces_and_eols( RogueClassJSONParser* THIS );
ROGUE_EXPORT_C RogueClassJSON* RogueJSON__init_object( RogueClassJSON* THIS );
ROGUE_EXPORT_C RogueString* RogueJSON__type_name( RogueClassJSON* THIS );
ROGUE_EXPORT_C RogueClass_Function_String_RETURNSString_* Rogue_Function_String_RETURNSString___init_object( RogueClass_Function_String_RETURNSString_* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_String_RETURNSString___type_name( RogueClass_Function_String_RETURNSString_* THIS );
ROGUE_EXPORT_C RogueString* Rogue_Function_String_RETURNSString___call__String( RogueClass_Function_String_RETURNSString_* THIS, RogueString* param1_0 );
ROGUE_EXPORT_C RogueClassFunction_281* RogueFunction_281__init_object( RogueClassFunction_281* THIS );
ROGUE_EXPORT_C RogueString* RogueFunction_281__type_name( RogueClassFunction_281* THIS );
ROGUE_EXPORT_C RogueString* RogueFunction_281__call__String( RogueClassFunction_281* THIS, RogueString* arg_0 );
ROGUE_EXPORT_C RogueClassRuntime* RogueRuntime__init_object( RogueClassRuntime* THIS );
ROGUE_EXPORT_C RogueString* RogueRuntime__type_name( RogueClassRuntime* THIS );
ROGUE_EXPORT_C RogueWeakReference* RogueWeakReference__init_object( RogueWeakReference* THIS );
ROGUE_EXPORT_C RogueString* RogueWeakReference__type_name( RogueWeakReference* THIS );
ROGUE_EXPORT_C void RogueWeakReference__on_cleanup( RogueWeakReference* THIS );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__init_object( RogueClassPrintWriterAdapter* THIS );
ROGUE_EXPORT_C RogueString* RoguePrintWriterAdapter__type_name( RogueClassPrintWriterAdapter* THIS );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__close( RogueClassPrintWriterAdapter* THIS );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__flush( RogueClassPrintWriterAdapter* THIS );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__print__String( RogueClassPrintWriterAdapter* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__println( RogueClassPrintWriterAdapter* THIS );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__println__String( RogueClassPrintWriterAdapter* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__write__StringBuilder( RogueClassPrintWriterAdapter* THIS, RogueStringBuilder* _buffer_0 );
ROGUE_EXPORT_C RogueClassPrintWriterAdapter* RoguePrintWriterAdapter__init__Writer_Byte_( RogueClassPrintWriterAdapter* THIS, RogueClassWriter_Byte_* _auto_325_0 );
ROGUE_EXPORT_C RogueClassPrintWriter_buffer_* RoguePrintWriter_buffer___close( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_buffer_* RoguePrintWriter_buffer___flush( RogueObject* THIS );
ROGUE_EXPORT_C RogueClassPrintWriter_buffer_* RoguePrintWriter_buffer___println__String( RogueObject* THIS, RogueString* value_0 );
ROGUE_EXPORT_C RogueClassPrintWriter_buffer_* RoguePrintWriter_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 );
ROGUE_EXPORT_C RogueClassLogicalValue* RogueLogicalValue__init_object( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueString* RogueLogicalValue__to_String( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueString* RogueLogicalValue__type_name( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueLogicalValue__is_logical( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueInt64 RogueLogicalValue__to_Int64( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueLogicalValue__to_Logical( RogueClassLogicalValue* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueLogicalValue__to_json__StringBuilder_Int32( RogueClassLogicalValue* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassLogicalValue* RogueLogicalValue__init__Logical( RogueClassLogicalValue* THIS, RogueLogical _auto_326_0 );
ROGUE_EXPORT_C RogueClassInt32Value* RogueInt32Value__init_object( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueString* RogueInt32Value__to_String( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueString* RogueInt32Value__type_name( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt32Value__is_int32( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt32Value__is_number( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt32Value__operatorEQUALSEQUALS__Value( RogueClassInt32Value* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueInt64 RogueInt32Value__to_Int64( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueInt32 RogueInt32Value__to_Int32( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueReal64 RogueInt32Value__to_Real64( RogueClassInt32Value* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueInt32Value__to_json__StringBuilder_Int32( RogueClassInt32Value* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassInt32Value* RogueInt32Value__init__Int32( RogueClassInt32Value* THIS, RogueInt32 _auto_327_0 );
ROGUE_EXPORT_C RogueClassInt64Value* RogueInt64Value__init_object( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueString* RogueInt64Value__to_String( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueString* RogueInt64Value__type_name( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt64Value__is_int64( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt64Value__is_number( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueInt64Value__operatorEQUALSEQUALS__Value( RogueClassInt64Value* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueInt64 RogueInt64Value__to_Int64( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueInt32 RogueInt64Value__to_Int32( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueReal64 RogueInt64Value__to_Real64( RogueClassInt64Value* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueInt64Value__to_json__StringBuilder_Int32( RogueClassInt64Value* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassInt64Value* RogueInt64Value__init__Int64( RogueClassInt64Value* THIS, RogueInt64 _auto_328_0 );
ROGUE_EXPORT_C RogueClassReal64Value* RogueReal64Value__init_object( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueString* RogueReal64Value__to_String( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueString* RogueReal64Value__type_name( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueReal64Value__is_number( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueLogical RogueReal64Value__operatorEQUALSEQUALS__Value( RogueClassReal64Value* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueInt64 RogueReal64Value__to_Int64( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueReal64 RogueReal64Value__to_Real64( RogueClassReal64Value* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueReal64Value__to_json__StringBuilder_Int32( RogueClassReal64Value* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassReal64Value* RogueReal64Value__init__Real64( RogueClassReal64Value* THIS, RogueReal64 _auto_329_0 );
ROGUE_EXPORT_C RogueClassNullValue* RogueNullValue__init_object( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueString* RogueNullValue__to_String( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueString* RogueNullValue__type_name( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueNullValue__is_null( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueNullValue__is_non_null( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueNullValue__operatorEQUALSEQUALS__Value( RogueClassNullValue* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueInt64 RogueNullValue__to_Int64( RogueClassNullValue* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueNullValue__to_json__StringBuilder_Int32( RogueClassNullValue* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassStringValue* RogueStringValue__init_object( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueString* RogueStringValue__to_String( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueString* RogueStringValue__type_name( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueInt32 RogueStringValue__count( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueStringValue__get__Int32( RogueClassStringValue* THIS, RogueInt32 index_0 );
ROGUE_EXPORT_C RogueLogical RogueStringValue__is_string( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueStringValue__operatorEQUALSEQUALS__Value( RogueClassStringValue* THIS, RogueClassValue* other_0 );
ROGUE_EXPORT_C RogueCharacter RogueStringValue__to_Character( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueInt64 RogueStringValue__to_Int64( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueLogical RogueStringValue__to_Logical( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueReal64 RogueStringValue__to_Real64( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueObject* RogueStringValue__to_Object( RogueClassStringValue* THIS );
ROGUE_EXPORT_C RogueStringBuilder* RogueStringValue__to_json__StringBuilder_Int32( RogueClassStringValue* THIS, RogueStringBuilder* buffer_0, RogueInt32 flags_1 );
ROGUE_EXPORT_C RogueClassStringValue* RogueStringValue__init__String( RogueClassStringValue* THIS, RogueString* _auto_331_0 );
ROGUE_EXPORT_C RogueClassUndefinedValue* RogueUndefinedValue__init_object( RogueClassUndefinedValue* THIS );
ROGUE_EXPORT_C RogueString* RogueUndefinedValue__to_String( RogueClassUndefinedValue* THIS );
ROGUE_EXPORT_C RogueString* RogueUndefinedValue__type_name( RogueClassUndefinedValue* THIS );
ROGUE_EXPORT_C RogueClassOutOfBoundsError* RogueOutOfBoundsError__init_object( RogueClassOutOfBoundsError* THIS );
ROGUE_EXPORT_C RogueString* RogueOutOfBoundsError__type_name( RogueClassOutOfBoundsError* THIS );
ROGUE_EXPORT_C RogueClassOutOfBoundsError* RogueOutOfBoundsError__init__String( RogueClassOutOfBoundsError* THIS, RogueString* _auto_444_0 );
ROGUE_EXPORT_C RogueClassOutOfBoundsError* RogueOutOfBoundsError___throw( RogueClassOutOfBoundsError* THIS );
ROGUE_EXPORT_C RogueClassOutOfBoundsError* RogueOutOfBoundsError__init__Int32_Int32( RogueClassOutOfBoundsError* THIS, RogueInt32 index_0, RogueInt32 limit_1 );
ROGUE_EXPORT_C RogueClassTableEntry_String_TypeInfo_* RogueTableEntry_String_TypeInfo___init_object( RogueClassTableEntry_String_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_TypeInfo___to_String( RogueClassTableEntry_String_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueTableEntry_String_TypeInfo___type_name( RogueClassTableEntry_String_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueClassRequirementError* RogueRequirementError__init_object( RogueClassRequirementError* THIS );
ROGUE_EXPORT_C RogueString* RogueRequirementError__type_name( RogueClassRequirementError* THIS );
ROGUE_EXPORT_C RogueClassRequirementError* RogueRequirementError__init__String( RogueClassRequirementError* THIS, RogueString* requirement_0 );
ROGUE_EXPORT_C RogueClassRequirementError* RogueRequirementError___throw( RogueClassRequirementError* THIS );
ROGUE_EXPORT_C RogueClassListRewriter_Character_* RogueListRewriter_Character___init_object( RogueClassListRewriter_Character_* THIS );
ROGUE_EXPORT_C RogueString* RogueListRewriter_Character___type_name( RogueClassListRewriter_Character_* THIS );
ROGUE_EXPORT_C RogueClassListRewriter_Character_* RogueListRewriter_Character___init__Character_List( RogueClassListRewriter_Character_* THIS, RogueCharacter_List* _auto_968_0 );
ROGUE_EXPORT_C RogueLogical RogueListRewriter_Character___has_another( RogueClassListRewriter_Character_* THIS );
ROGUE_EXPORT_C RogueCharacter RogueListRewriter_Character___read( RogueClassListRewriter_Character_* THIS );
ROGUE_EXPORT_C RogueClassListRewriter_Character_* RogueListRewriter_Character___write__Character( RogueClassListRewriter_Character_* THIS, RogueCharacter value_0 );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Int32_* RogueOptionalBoxed_Int32___init_object( RogueClassOptionalBoxed_Int32_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Int32___to_String( RogueClassOptionalBoxed_Int32_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Int32___type_name( RogueClassOptionalBoxed_Int32_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Int32_* RogueOptionalBoxed_Int32___init__OptionalInt32( RogueClassOptionalBoxed_Int32_* THIS, RogueOptionalInt32 _auto_1128_0 );
ROGUE_EXPORT   RogueOptionalInt32 RogueOptionalOptionalBoxed_Int32___to_Int32( RogueClassOptionalBoxed_Int32_* THIS );
ROGUE_EXPORT_C RogueClassFunction_1182* RogueFunction_1182__init_object( RogueClassFunction_1182* THIS );
ROGUE_EXPORT_C RogueString* RogueFunction_1182__type_name( RogueClassFunction_1182* THIS );
ROGUE_EXPORT_C void RogueFunction_1182__call( RogueClassFunction_1182* THIS );
ROGUE_EXPORT_C RogueClassFunction_1182* RogueFunction_1182__init__Console( RogueClassFunction_1182* THIS, RogueClassConsole* _auto_1183_0 );
ROGUE_EXPORT_C RogueClassBoxed_SystemEnvironment_* RogueBoxed_SystemEnvironment___init_object( RogueClassBoxed_SystemEnvironment_* THIS );
ROGUE_EXPORT_C RogueString* RogueBoxed_SystemEnvironment___to_String( RogueClassBoxed_SystemEnvironment_* THIS );
ROGUE_EXPORT_C RogueString* RogueBoxed_SystemEnvironment___type_name( RogueClassBoxed_SystemEnvironment_* THIS );
ROGUE_EXPORT   RogueClassBoxed_SystemEnvironment_* RogueBoxed_SystemEnvironment___init__SystemEnvironment( RogueClassBoxed_SystemEnvironment_* THIS, RogueClassSystemEnvironment _auto_1209_0 );
ROGUE_EXPORT   RogueClassSystemEnvironment RogueBoxed_SystemEnvironment___to_SystemEnvironment( RogueClassBoxed_SystemEnvironment_* THIS );
ROGUE_EXPORT_C RogueClassIOError* RogueIOError__init_object( RogueClassIOError* THIS );
ROGUE_EXPORT_C RogueString* RogueIOError__type_name( RogueClassIOError* THIS );
ROGUE_EXPORT_C RogueClassIOError* RogueIOError___throw( RogueClassIOError* THIS );
ROGUE_EXPORT_C RogueClassFileReader* RogueFileReader__init_object( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueString* RogueFileReader__type_name( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueClassFileReader* RogueFileReader__close( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueLogical RogueFileReader__has_another( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueByte RogueFileReader__peek( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueByte RogueFileReader__read( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueClassFileReader* RogueFileReader__init__String( RogueClassFileReader* THIS, RogueString* _filepath_0 );
ROGUE_EXPORT_C void RogueFileReader__on_cleanup( RogueClassFileReader* THIS );
ROGUE_EXPORT_C RogueLogical RogueFileReader__open__String( RogueClassFileReader* THIS, RogueString* _auto_1212_0 );
ROGUE_EXPORT_C RogueClassUTF8Reader* RogueUTF8Reader__init_object( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueString* RogueUTF8Reader__type_name( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueClassUTF8Reader* RogueUTF8Reader__close( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueLogical RogueUTF8Reader__has_another( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueCharacter RogueUTF8Reader__peek( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueCharacter RogueUTF8Reader__read( RogueClassUTF8Reader* THIS );
ROGUE_EXPORT_C RogueClassUTF8Reader* RogueUTF8Reader__init__Reader_Byte_( RogueClassUTF8Reader* THIS, RogueClassReader_Byte_* _auto_1236_0 );
ROGUE_EXPORT_C RogueClassJSONParseError* RogueJSONParseError__init_object( RogueClassJSONParseError* THIS );
ROGUE_EXPORT_C RogueString* RogueJSONParseError__type_name( RogueClassJSONParseError* THIS );
ROGUE_EXPORT_C RogueClassJSONParseError* RogueJSONParseError__init__String( RogueClassJSONParseError* THIS, RogueString* _auto_1255_0 );
ROGUE_EXPORT_C RogueClassJSONParseError* RogueJSONParseError___throw( RogueClassJSONParseError* THIS );
ROGUE_EXPORT_C RogueClassJSONParserBuffer* RogueJSONParserBuffer__init_object( RogueClassJSONParserBuffer* THIS );
ROGUE_EXPORT_C RogueString* RogueJSONParserBuffer__type_name( RogueClassJSONParserBuffer* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Byte_* RogueOptionalBoxed_Byte___init_object( RogueClassOptionalBoxed_Byte_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Byte___to_String( RogueClassOptionalBoxed_Byte_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Byte___type_name( RogueClassOptionalBoxed_Byte_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Byte_* RogueOptionalBoxed_Byte___init__OptionalByte( RogueClassOptionalBoxed_Byte_* THIS, RogueOptionalByte _auto_1258_0 );
ROGUE_EXPORT   RogueOptionalByte RogueOptionalOptionalBoxed_Byte___to_Byte( RogueClassOptionalBoxed_Byte_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Value_* RogueOptionalBoxed_Value___init_object( RogueClassOptionalBoxed_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Value___to_String( RogueClassOptionalBoxed_Value_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Value___type_name( RogueClassOptionalBoxed_Value_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Value_* RogueOptionalBoxed_Value___init__OptionalValue( RogueClassOptionalBoxed_Value_* THIS, RogueOptionalValue _auto_1264_0 );
ROGUE_EXPORT   RogueOptionalValue RogueOptionalOptionalBoxed_Value___to_Value( RogueClassOptionalBoxed_Value_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_StringBuilder_* RogueOptionalBoxed_StringBuilder___init_object( RogueClassOptionalBoxed_StringBuilder_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_StringBuilder___to_String( RogueClassOptionalBoxed_StringBuilder_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_StringBuilder___type_name( RogueClassOptionalBoxed_StringBuilder_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_StringBuilder_* RogueOptionalBoxed_StringBuilder___init__OptionalStringBuilder( RogueClassOptionalBoxed_StringBuilder_* THIS, RogueOptionalStringBuilder _auto_1342_0 );
ROGUE_EXPORT   RogueOptionalStringBuilder RogueOptionalOptionalBoxed_StringBuilder___to_StringBuilder( RogueClassOptionalBoxed_StringBuilder_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed__Function____* RogueOptionalBoxed__Function______init_object( RogueClassOptionalBoxed__Function____* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed__Function______to_String( RogueClassOptionalBoxed__Function____* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed__Function______type_name( RogueClassOptionalBoxed__Function____* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed__Function____* RogueOptionalBoxed__Function______init__Optional_Function___( RogueClassOptionalBoxed__Function____* THIS, RogueOptional_Function___ _auto_1351_0 );
ROGUE_EXPORT   RogueOptional_Function___ RogueOptionalOptionalBoxed__Function______to__Function___( RogueClassOptionalBoxed__Function____* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_String_* RogueOptionalBoxed_String___init_object( RogueClassOptionalBoxed_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_String___to_String( RogueClassOptionalBoxed_String_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_String___type_name( RogueClassOptionalBoxed_String_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_String_* RogueOptionalBoxed_String___init__OptionalString( RogueClassOptionalBoxed_String_* THIS, RogueOptionalString _auto_1360_0 );
ROGUE_EXPORT   RogueOptionalString RogueOptionalOptionalBoxed_String___to_String( RogueClassOptionalBoxed_String_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_PropertyInfo_* RogueOptionalBoxed_PropertyInfo___init_object( RogueClassOptionalBoxed_PropertyInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_PropertyInfo___to_String( RogueClassOptionalBoxed_PropertyInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_PropertyInfo___type_name( RogueClassOptionalBoxed_PropertyInfo_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_PropertyInfo_* RogueOptionalBoxed_PropertyInfo___init__OptionalPropertyInfo( RogueClassOptionalBoxed_PropertyInfo_* THIS, RogueOptionalPropertyInfo _auto_1474_0 );
ROGUE_EXPORT   RogueOptionalPropertyInfo RogueOptionalOptionalBoxed_PropertyInfo___to_PropertyInfo( RogueClassOptionalBoxed_PropertyInfo_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_MethodInfo_* RogueOptionalBoxed_MethodInfo___init_object( RogueClassOptionalBoxed_MethodInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_MethodInfo___to_String( RogueClassOptionalBoxed_MethodInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_MethodInfo___type_name( RogueClassOptionalBoxed_MethodInfo_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_MethodInfo_* RogueOptionalBoxed_MethodInfo___init__OptionalMethodInfo( RogueClassOptionalBoxed_MethodInfo_* THIS, RogueOptionalMethodInfo _auto_1483_0 );
ROGUE_EXPORT   RogueOptionalMethodInfo RogueOptionalOptionalBoxed_MethodInfo___to_MethodInfo( RogueClassOptionalBoxed_MethodInfo_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Character_* RogueOptionalBoxed_Character___init_object( RogueClassOptionalBoxed_Character_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Character___to_String( RogueClassOptionalBoxed_Character_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Character___type_name( RogueClassOptionalBoxed_Character_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Character_* RogueOptionalBoxed_Character___init__OptionalCharacter( RogueClassOptionalBoxed_Character_* THIS, RogueOptionalCharacter _auto_1629_0 );
ROGUE_EXPORT   RogueOptionalCharacter RogueOptionalOptionalBoxed_Character___to_Character( RogueClassOptionalBoxed_Character_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Real64_* RogueOptionalBoxed_Real64___init_object( RogueClassOptionalBoxed_Real64_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Real64___to_String( RogueClassOptionalBoxed_Real64_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Real64___type_name( RogueClassOptionalBoxed_Real64_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Real64_* RogueOptionalBoxed_Real64___init__OptionalReal64( RogueClassOptionalBoxed_Real64_* THIS, RogueOptionalReal64 _auto_1647_0 );
ROGUE_EXPORT   RogueOptionalReal64 RogueOptionalOptionalBoxed_Real64___to_Real64( RogueClassOptionalBoxed_Real64_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Real32_* RogueOptionalBoxed_Real32___init_object( RogueClassOptionalBoxed_Real32_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Real32___to_String( RogueClassOptionalBoxed_Real32_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Real32___type_name( RogueClassOptionalBoxed_Real32_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Real32_* RogueOptionalBoxed_Real32___init__OptionalReal32( RogueClassOptionalBoxed_Real32_* THIS, RogueOptionalReal32 _auto_1650_0 );
ROGUE_EXPORT   RogueOptionalReal32 RogueOptionalOptionalBoxed_Real32___to_Real32( RogueClassOptionalBoxed_Real32_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_Int64_* RogueOptionalBoxed_Int64___init_object( RogueClassOptionalBoxed_Int64_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Int64___to_String( RogueClassOptionalBoxed_Int64_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_Int64___type_name( RogueClassOptionalBoxed_Int64_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_Int64_* RogueOptionalBoxed_Int64___init__OptionalInt64( RogueClassOptionalBoxed_Int64_* THIS, RogueOptionalInt64 _auto_1653_0 );
ROGUE_EXPORT   RogueOptionalInt64 RogueOptionalOptionalBoxed_Int64___to_Int64( RogueClassOptionalBoxed_Int64_* THIS );
ROGUE_EXPORT_C RogueClassBoxed_FileOptions_* RogueBoxed_FileOptions___init_object( RogueClassBoxed_FileOptions_* THIS );
ROGUE_EXPORT_C RogueString* RogueBoxed_FileOptions___to_String( RogueClassBoxed_FileOptions_* THIS );
ROGUE_EXPORT_C RogueString* RogueBoxed_FileOptions___type_name( RogueClassBoxed_FileOptions_* THIS );
ROGUE_EXPORT   RogueClassBoxed_FileOptions_* RogueBoxed_FileOptions___init__FileOptions( RogueClassBoxed_FileOptions_* THIS, RogueClassFileOptions _auto_1728_0 );
ROGUE_EXPORT   RogueClassFileOptions RogueBoxed_FileOptions___to_FileOptions( RogueClassBoxed_FileOptions_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_TableEntry_String_Value__* RogueOptionalBoxed_TableEntry_String_Value____init_object( RogueClassOptionalBoxed_TableEntry_String_Value__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_Value____to_String( RogueClassOptionalBoxed_TableEntry_String_Value__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_Value____type_name( RogueClassOptionalBoxed_TableEntry_String_Value__* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_TableEntry_String_Value__* RogueOptionalBoxed_TableEntry_String_Value____init__OptionalTableEntry_String_Value_( RogueClassOptionalBoxed_TableEntry_String_Value__* THIS, RogueOptionalTableEntry_String_Value_ _auto_1740_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_Value_ RogueOptionalOptionalBoxed_TableEntry_String_Value____to_TableEntry_String_Value_( RogueClassOptionalBoxed_TableEntry_String_Value__* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_TypeInfo_* RogueOptionalBoxed_TypeInfo___init_object( RogueClassOptionalBoxed_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TypeInfo___to_String( RogueClassOptionalBoxed_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TypeInfo___type_name( RogueClassOptionalBoxed_TypeInfo_* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_TypeInfo_* RogueOptionalBoxed_TypeInfo___init__OptionalTypeInfo( RogueClassOptionalBoxed_TypeInfo_* THIS, RogueOptionalTypeInfo _auto_1758_0 );
ROGUE_EXPORT   RogueOptionalTypeInfo RogueOptionalOptionalBoxed_TypeInfo___to_TypeInfo( RogueClassOptionalBoxed_TypeInfo_* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_TableEntry_Int32_String__* RogueOptionalBoxed_TableEntry_Int32_String____init_object( RogueClassOptionalBoxed_TableEntry_Int32_String__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_Int32_String____to_String( RogueClassOptionalBoxed_TableEntry_Int32_String__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_Int32_String____type_name( RogueClassOptionalBoxed_TableEntry_Int32_String__* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_TableEntry_Int32_String__* RogueOptionalBoxed_TableEntry_Int32_String____init__OptionalTableEntry_Int32_String_( RogueClassOptionalBoxed_TableEntry_Int32_String__* THIS, RogueOptionalTableEntry_Int32_String_ _auto_1848_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_Int32_String_ RogueOptionalOptionalBoxed_TableEntry_Int32_String____to_TableEntry_Int32_String_( RogueClassOptionalBoxed_TableEntry_Int32_String__* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_TableEntry_String_String__* RogueOptionalBoxed_TableEntry_String_String____init_object( RogueClassOptionalBoxed_TableEntry_String_String__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_String____to_String( RogueClassOptionalBoxed_TableEntry_String_String__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_String____type_name( RogueClassOptionalBoxed_TableEntry_String_String__* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_TableEntry_String_String__* RogueOptionalBoxed_TableEntry_String_String____init__OptionalTableEntry_String_String_( RogueClassOptionalBoxed_TableEntry_String_String__* THIS, RogueOptionalTableEntry_String_String_ _auto_1869_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_String_ RogueOptionalOptionalBoxed_TableEntry_String_String____to_TableEntry_String_String_( RogueClassOptionalBoxed_TableEntry_String_String__* THIS );
ROGUE_EXPORT_C RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* RogueOptionalBoxed_TableEntry_String_TypeInfo____init_object( RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_TypeInfo____to_String( RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalBoxed_TableEntry_String_TypeInfo____type_name( RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* THIS );
ROGUE_EXPORT   RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* RogueOptionalBoxed_TableEntry_String_TypeInfo____init__OptionalTableEntry_String_TypeInfo_( RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* THIS, RogueOptionalTableEntry_String_TypeInfo_ _auto_1887_0 );
ROGUE_EXPORT   RogueOptionalTableEntry_String_TypeInfo_ RogueOptionalOptionalBoxed_TableEntry_String_TypeInfo____to_TableEntry_String_TypeInfo_( RogueClassOptionalBoxed_TableEntry_String_TypeInfo__* THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalInt32__to_Value( RogueOptionalInt32 THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalInt32__to_String( RogueOptionalInt32 THIS );
ROGUE_EXPORT_C RogueClassValue* RogueSystemEnvironment__to_Value( RogueClassSystemEnvironment THIS );
ROGUE_EXPORT_C RogueString* RogueSystemEnvironment__get__String( RogueClassSystemEnvironment THIS, RogueString* name_0 );
ROGUE_EXPORT_C RogueString* RogueSystemEnvironment__to_String( RogueClassSystemEnvironment THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalByte__to_Value( RogueOptionalByte THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalByte__to_String( RogueOptionalByte THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalValue__to_Value( RogueOptionalValue THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalValue__to_String( RogueOptionalValue THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalStringBuilder__to_Value( RogueOptionalStringBuilder THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalStringBuilder__to_String( RogueOptionalStringBuilder THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptional_Function_____to_Value( RogueOptional_Function___ THIS );
ROGUE_EXPORT_C RogueString* RogueOptional_Function_____to_String( RogueOptional_Function___ THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalString__to_Value( RogueOptionalString THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalString__to_String( RogueOptionalString THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalPropertyInfo__to_Value( RogueOptionalPropertyInfo THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalPropertyInfo__to_String( RogueOptionalPropertyInfo THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalMethodInfo__to_Value( RogueOptionalMethodInfo THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalMethodInfo__to_String( RogueOptionalMethodInfo THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalCharacter__to_Value( RogueOptionalCharacter THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalCharacter__to_String( RogueOptionalCharacter THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalReal64__to_Value( RogueOptionalReal64 THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalReal64__to_String( RogueOptionalReal64 THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalReal32__to_Value( RogueOptionalReal32 THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalReal32__to_String( RogueOptionalReal32 THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalInt64__to_Value( RogueOptionalInt64 THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalInt64__to_String( RogueOptionalInt64 THIS );
ROGUE_EXPORT_C RogueClassValue* RogueFileOptions__to_Value( RogueClassFileOptions THIS );
ROGUE_EXPORT_C RogueString* RogueFileOptions__to_String( RogueClassFileOptions THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalTableEntry_String_Value___to_Value( RogueOptionalTableEntry_String_Value_ THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalTableEntry_String_Value___to_String( RogueOptionalTableEntry_String_Value_ THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalTypeInfo__to_Value( RogueOptionalTypeInfo THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalTypeInfo__to_String( RogueOptionalTypeInfo THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalTableEntry_Int32_String___to_Value( RogueOptionalTableEntry_Int32_String_ THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalTableEntry_Int32_String___to_String( RogueOptionalTableEntry_Int32_String_ THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalTableEntry_String_String___to_Value( RogueOptionalTableEntry_String_String_ THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalTableEntry_String_String___to_String( RogueOptionalTableEntry_String_String_ THIS );
ROGUE_EXPORT_C RogueClassValue* RogueOptionalTableEntry_String_TypeInfo___to_Value( RogueOptionalTableEntry_String_TypeInfo_ THIS );
ROGUE_EXPORT_C RogueString* RogueOptionalTableEntry_String_TypeInfo___to_String( RogueOptionalTableEntry_String_TypeInfo_ THIS );

// INTERNAL PROTOTYPES
void Rogue_trace();

