#include <stdio.h>
#include "RogueC.h"

//=============================================================================
//  Rogue.cpp
//
//  Rogue runtime.
//
//  ---------------------------------------------------------------------------
//
//  Created 2015.01.19 by Abe Pralle
//
//  This is free and unencumbered software released into the public domain
//  under the terms of the UNLICENSE ( http://unlicense.org ).
//=============================================================================

#include <fcntl.h>
#include <math.h>
#include <string.h>
#include <sys/timeb.h>
#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <inttypes.h>
#include <exception>

#if !defined(ROGUE_PLATFORM_WINDOWS)
#  include <sys/time.h>
#  include <unistd.h>
#  include <signal.h>
#  include <dirent.h>
#  include <sys/socket.h>
#  include <sys/uio.h>
#  include <sys/stat.h>
#  include <netdb.h>
#  include <errno.h>
#  include <pthread.h>
#endif

#if defined(ANDROID)
#  include <netinet/in.h>
#endif

#if defined(_WIN32)
#  include <direct.h>
#  define chdir _chdir
#endif

#if TARGET_OS_IPHONE
#  include <sys/types.h>
#  include <sys/sysctl.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#ifndef PATH_MAX
#  define PATH_MAX 4096
#endif

//-----------------------------------------------------------------------------
//  GLOBAL PROPERTIES
//-----------------------------------------------------------------------------
int                Rogue_gc_threshold = ROGUE_GC_THRESHOLD_DEFAULT;
RogueLogical       Rogue_configured = 0;
RogueObject*       Rogue_error_object  = 0;
int                Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;
int                Rogue_argc;
const char**       Rogue_argv;
RogueDebugTrace*   Rogue_call_stack = 0;
RogueCallbackInfo  Rogue_on_begin_gc;
RogueCallbackInfo  Rogue_on_end_gc;
char               RogueDebugTrace::buffer[120];

//-----------------------------------------------------------------------------
//  RogueDebugTrace
//-----------------------------------------------------------------------------
RogueDebugTrace::RogueDebugTrace( const char* method_signature, const char* filename, int line )
  : method_signature(method_signature), filename(filename), line(line), previous_trace(0)
{
  previous_trace = Rogue_call_stack;
  Rogue_call_stack = this;
}

RogueDebugTrace::~RogueDebugTrace()
{
  Rogue_call_stack = previous_trace;
}

int RogueDebugTrace::count()
{
  int n = 1;
  RogueDebugTrace* current = previous_trace;
  while (current)
  {
    ++n;
    current = current->previous_trace;
  }
  return n;
}

char* RogueDebugTrace::to_c_string()
{
  sprintf( buffer, "[%s %s:%d]", method_signature, filename, line );
  return buffer;
}

//-----------------------------------------------------------------------------
//  RogueType
//-----------------------------------------------------------------------------
RogueArray* RogueType_create_array( int count, int element_size, bool is_reference_array )
{
  if (count < 0) count = 0;
  int data_size  = count * element_size;
  int total_size = sizeof(RogueArray) + data_size;

  RogueArray* array = (RogueArray*) RogueAllocator_allocate_object( RogueTypeArray->allocator, RogueTypeArray, total_size );

  memset( array->bytes, 0, data_size );
  array->count = count;
  array->element_size = element_size;
  array->is_reference_array = is_reference_array;

  return array;
}

RogueTypeInfo* RogueType_type_info( RogueType* THIS )
{
  if ( !THIS->type_info )
  {
    THIS->type_info = RogueTypeInfo__init__Int32_String( (RogueTypeInfo*)ROGUE_CREATE_OBJECT(TypeInfo),
        THIS->index, Rogue_literal_strings[ THIS->name_index ] );

    for (int i=0; i<THIS->global_property_count; ++i)
    {
      RogueTypeInfo__add_global_property_info__Int32_Int32( THIS->type_info,
          THIS->global_property_name_indices[i], THIS->global_property_type_indices[i] );
    }

    for (int i=0; i<THIS->property_count; ++i)
    {
      RogueTypeInfo__add_property_info__Int32_Int32( THIS->type_info,
          THIS->property_name_indices[i], THIS->property_type_indices[i] );
    }
  }

  return THIS->type_info;
}

RogueObject* RogueType_create_object( RogueType* THIS, RogueInt32 size )
{
  ROGUE_DEF_LOCAL_REF_NULL(RogueObject*, obj);
  RogueInitFn  fn;

  obj = RogueAllocator_allocate_object( THIS->allocator, THIS, size ? size : THIS->object_size );

  if ((fn = THIS->init_object_fn)) return fn( obj );
  else                             return obj;
}

RogueString* RogueType_name( RogueType* THIS )
{
  return Rogue_literal_strings[ THIS->name_index ];
}

bool RogueType_name_equals( RogueType* THIS, const char* name )
{
  // For debugging purposes
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if ( !st ) return false;

  return (0 == strcmp((char*)st->utf8,name));
}

void RogueType_print_name( RogueType* THIS )
{
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if (st)
  {
    printf( "%s", st->utf8 );
  }
}

RogueType* RogueType_retire( RogueType* THIS )
{
  if (THIS->base_types)
  {
#if !ROGUE_GC_MODE_BOEHM
    delete [] THIS->base_types;
#endif
    THIS->base_types = 0;
    THIS->base_type_count = 0;
  }

  return THIS;
}

RogueObject* RogueType_singleton( RogueType* THIS )
{
  RogueInitFn fn;

  if (THIS->_singleton) return THIS->_singleton;

  // NOTE: _singleton must be assigned before calling init_object()
  // so we can't just call RogueType_create_object().
  THIS->_singleton = RogueAllocator_allocate_object( THIS->allocator, THIS, THIS->object_size );

  if ((fn = THIS->init_object_fn)) THIS->_singleton = fn( THIS->_singleton );

  if ((fn = THIS->init_fn)) return fn( THIS->_singleton );
  else                      return THIS->_singleton;

  return THIS->_singleton;
}

//-----------------------------------------------------------------------------
//  RogueObject
//-----------------------------------------------------------------------------
RogueObject* RogueObject_as( RogueObject* THIS, RogueType* specialized_type )
{
  if (RogueObject_instance_of(THIS,specialized_type)) return THIS;
  return 0;
}

RogueLogical RogueObject_instance_of( RogueObject* THIS, RogueType* ancestor_type )
{
  RogueType* this_type;

  if ( !THIS )
  {
    return false;
  }

  this_type = THIS->type;
  if (this_type == ancestor_type)
  {
    return true;
  }

  int count = this_type->base_type_count;
  RogueType** base_type_ptr = this_type->base_types - 1;
  while (--count >= 0)
  {
    if (ancestor_type == *(++base_type_ptr))
    {
      return true;
    }
  }

  return false;
}

void* RogueObject_retain( RogueObject* THIS )
{
  ROGUE_INCREF(THIS);
  return THIS;
}

void* RogueObject_release( RogueObject* THIS )
{
  ROGUE_DECREF(THIS);
  return THIS;
}

RogueString* RogueObject_to_string( RogueObject* THIS )
{
  RogueToStringFn fn = THIS->type->to_string_fn;
  if (fn) return fn( THIS );

  return Rogue_literal_strings[ THIS->type->name_index ];
}

void RogueObject_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueString_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueArray_trace( void* obj )
{
  int count;
  RogueObject** src;
  RogueArray* array = (RogueArray*) obj;

  if ( !array || array->object_size < 0 ) return;
  array->object_size = ~array->object_size;

  if ( !array->is_reference_array ) return;

  count = array->count;
  src = array->objects + count;
  while (--count >= 0)
  {
    RogueObject* cur = *(--src);
    if (cur && cur->object_size >= 0)
    {
      cur->type->trace_fn( cur );
    }
  }
}

//-----------------------------------------------------------------------------
//  RogueString
//-----------------------------------------------------------------------------
RogueString* RogueString_create_with_byte_count( int byte_count )
{
  if (byte_count < 0) byte_count = 0;

  int total_size = sizeof(RogueString) + (byte_count+1);

  RogueString* st = (RogueString*) RogueAllocator_allocate_object( RogueTypeString->allocator, RogueTypeString, total_size );
  st->byte_count = byte_count;

  return st;
}

RogueString* RogueString_create_from_utf8( const char* utf8, int count )
{
  if (count == -1) count = (int) strlen( utf8 );

  RogueString* st = RogueString_create_with_byte_count( count );
  memcpy( st->utf8, utf8, count );
  return RogueString_validate( st );
}

RogueString* RogueString_create_from_characters( RogueCharacter_List* characters )
{
  if ( !characters ) return RogueString_create_with_byte_count(0);

  RogueCharacter* data = characters->data->characters;
  int count = characters->count;
  int utf8_count = 0;
  for (int i=count; --i>=0; )
  {
    RogueCharacter ch = data[i];
    if (ch <= 0x7F)         ++utf8_count;
    else if (ch <= 0x7FF)   utf8_count += 2;
    else if (ch <= 0xFFFF)  utf8_count += 3;
    else                    utf8_count += 4;
  }

  RogueString* result = RogueString_create_with_byte_count( utf8_count );
  RogueByte*   dest = result->utf8;
  for (int i=0; i<count; ++i)
  {
    RogueCharacter ch = data[i];
    if (ch <= 0x7F)
    {
      *(dest++) = (RogueByte) ch;
    }
    else if (ch <= 0x7FF)
    {
      dest[0] = (RogueByte) (0xC0 | ((ch >> 6) & 0x1F));
      dest[1] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 2;
    }
    else if (ch <= 0xFFFF)
    {
      dest[0] = (RogueByte) (0xE0 | ((ch >> 12) & 0xF));
      dest[1] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[2] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 3;
    }
    else
    {
      dest[0] = (RogueByte) (0xF0 | ((ch >> 18) & 0x7));
      dest[1] = (RogueByte) (0x80 | ((ch >> 12) & 0x3F));
      dest[2] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[3] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 4;
    }
  }

  result->character_count = count;

  return RogueString_validate( result );
}

void RogueString_print_string( RogueString* st )
{
  if (st)
  {
    RogueString_print_utf8( st->utf8, st->byte_count );
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_characters( RogueCharacter* characters, int count )
{
  if (characters)
  {
    RogueCharacter* src = characters - 1;
    while (--count >= 0)
    {
      int ch = *(++src);

      if (ch < 0x80)
      {
        // %0xxxxxxx
        putchar( ch );
      }
      else if (ch < 0x800)
      {
        // %110xxxxx 10xxxxxx
        putchar( ((ch >> 6) & 0x1f) | 0xc0 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else if (ch <= 0xFFFF)
      {
        // %1110xxxx 10xxxxxx 10xxxxxx
        putchar( ((ch >> 12) & 15) | 0xe0 );
        putchar( ((ch >> 6) & 0x3f) | 0x80 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else
      {
        // Assume 21-bit
        // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
        putchar( 0xf0 | ((ch>>18) & 7) );
        putchar( 0x80 | ((ch>>12) & 0x3f) );
        putchar( 0x80 | ((ch>>6)  & 0x3f) );
        putchar( (ch & 0x3f) | 0x80 );
      }
    }
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_utf8( RogueByte* utf8, int count )
{
  --utf8;
  while (--count >= 0)
  {
    putchar( *(++utf8) );
  }
}

RogueCharacter RogueString_character_at( RogueString* THIS, int index )
{
  if (THIS->is_ascii) return (RogueCharacter) THIS->utf8[ index ];

  RogueInt32 offset = RogueString_set_cursor( THIS, index );
  RogueByte* utf8 = THIS->utf8;

  RogueCharacter ch = utf8[ offset ];
  if (ch & 0x80)
  {
    if (ch & 0x20)
    {
      if (ch & 0x10)
      {
        return ((ch&7)<<18)
            | ((utf8[offset+1] & 0x3F) << 12)
            | ((utf8[offset+2] & 0x3F) << 6)
            | (utf8[offset+3] & 0x3F);
      }
      else
      {
        return ((ch&15)<<12)
            | ((utf8[offset+1] & 0x3F) << 6)
            | (utf8[offset+2] & 0x3F);
      }
    }
    else
    {
      return ((ch&31)<<6)
          | (utf8[offset+1] & 0x3F);
    }
  }
  else
  {
    return ch;
  }
}

RogueInt32 RogueString_set_cursor( RogueString* THIS, int index )
{
  // Sets this string's cursor_offset and cursor_index and returns cursor_offset.
  if (THIS->is_ascii)
  {
    return THIS->cursor_offset = THIS->cursor_index = index;
  }

  RogueByte* utf8 = THIS->utf8;

  RogueInt32 c_offset;
  RogueInt32 c_index;
  if (index == 0)
  {
    THIS->cursor_index = 0;
    return THIS->cursor_offset = 0;
  }
  else if (index >= THIS->character_count - 1)
  {
    c_offset = THIS->byte_count;
    c_index = THIS->character_count;
  }
  else
  {
    c_offset  = THIS->cursor_offset;
    c_index = THIS->cursor_index;
  }

  while (c_index < index)
  {
    while ((utf8[++c_offset] & 0xC0) == 0x80) {}
    ++c_index;
  }

  while (c_index > index)
  {
    while ((utf8[--c_offset] & 0xC0) == 0x80) {}
    --c_index;
  }

  THIS->cursor_index = c_index;
  return THIS->cursor_offset = c_offset;
}

RogueString* RogueString_validate( RogueString* THIS )
{
  // Trims any invalid UTF-8, counts the number of characters, and sets the hash code
  THIS->is_ascii = 1;  // assumption

  int character_count = 0;
  int byte_count = THIS->byte_count;
  int i;
  RogueByte* utf8 = THIS->utf8;
  for (i=0; i<byte_count; ++character_count)
  {
    int b = utf8[ i ];
    if (b & 0x80)
    {
      THIS->is_ascii = 0;
      if ( !(b & 0x40) ) { break;}  // invalid UTF-8

      if (b & 0x20)
      {
        if (b & 0x10)
        {
          // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
          if (b & 0x08) { break;}
          if (i + 4 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)
              || ((utf8[i+3] & 0xC0) != 0x80)) { break;}
          i += 4;
        }
        else
        {
          // %1110xxxx 10xxxxxx 10xxxxxx
          if (i + 3 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)) { break;}
          i += 3;
        }
      }
      else
      {
        // %110x xxxx 10xx xxxx
        if (i + 2 > byte_count || ((utf8[i+1] & 0xC0) != 0x80)) { break; }
        i += 2;
      }
    }
    else
    {
      ++i;
    }
  }

  if (i != byte_count)
  {
    printf( "*** RogueString validation error - invalid UTF8 (%d/%d):\n", i, byte_count );
    printf( "%02x\n", utf8[0] );
    printf( "%s\n", utf8 );
    utf8[ i ] = 0;
  }

  THIS->byte_count = i;
  THIS->character_count = character_count;

  int code = 0;
  int len = THIS->byte_count;
  RogueByte* src = THIS->utf8 - 1;
  while (--len >= 0)
  {
    code = ((code<<3) - code) + *(++src);
  }
  THIS->hash_code = code;
  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueArray
//-----------------------------------------------------------------------------
RogueArray* RogueArray_set( RogueArray* THIS, RogueInt32 dest_i1, RogueArray* src_array, RogueInt32 src_i1, RogueInt32 copy_count )
{
  int element_size;
  int dest_i2, src_i2;

  if ( !src_array || dest_i1 >= THIS->count ) return THIS;
  if (THIS->is_reference_array ^ src_array->is_reference_array) return THIS;

  if (copy_count == -1) src_i2 = src_array->count - 1;
  else                  src_i2 = (src_i1 + copy_count) - 1;

  if (dest_i1 < 0)
  {
    src_i1 -= dest_i1;
    dest_i1 = 0;
  }

  if (src_i1 < 0) src_i1 = 0;
  if (src_i2 >= src_array->count) src_i2 = src_array->count - 1;
  if (src_i1 > src_i2) return THIS;

  copy_count = (src_i2 - src_i1) + 1;
  dest_i2 = dest_i1 + (copy_count - 1);
  if (dest_i2 >= THIS->count)
  {
    dest_i2 = (THIS->count - 1);
    copy_count = (dest_i2 - dest_i1) + 1;
  }
  if ( !copy_count ) return THIS;


#if defined(ROGUE_ARC)
  if (THIS != src_array || dest_i1 >= src_i1 + copy_count || (src_i1 + copy_count) <= dest_i1 || dest_i1 < src_i1)
  {
    // no overlap
    RogueObject** src  = src_array->objects + src_i1 - 1;
    RogueObject** dest = THIS->objects + dest_i1 - 1;
    while (--copy_count >= 0)
    {
      RogueObject* src_obj, dest_obj;
      if ((src_obj = *(++src))) ROGUE_INCREF(src_obj);
      if ((dest_obj = *(++dest)) && !(ROGUE_DECREF(dest_obj)))
      {
        // TODO: delete dest_obj
        *dest = src_obj;
      }
    }
  }
  else
  {
    // Copying earlier data to later data; copy in reverse order to
    // avoid accidental overwriting
    if (dest_i1 > src_i1)  // if they're equal then we don't need to copy anything!
    {
      RogueObject** src  = src_array->objects + src_i2 + 1;
      RogueObject** dest = THIS->objects + dest_i2 + 1;
      while (--copy_count >= 0)
      {
        RogueObject* src_obj, dest_obj;
        if ((src_obj = *(--src))) ROGUE_INCREF(src_obj);
        if ((dest_obj = *(--dest)) && !(ROGUE_DECREF(dest_obj)))
        {
          // TODO: delete dest_obj
          *dest = src_obj;
        }
      }
    }
  }
  return THIS;
#endif

  element_size = THIS->element_size;
  RogueByte* src = src_array->bytes + src_i1 * element_size;
  RogueByte* dest = THIS->bytes + (dest_i1 * element_size);
  int copy_bytes = copy_count * element_size;

  if (src == dest) return THIS;

  if (src >= dest + copy_bytes || (src + copy_bytes) <= dest)
  {
    // Copy region does not overlap
    memcpy( dest, src, copy_count * element_size );
  }
  else
  {
    // Copy region overlaps
    memmove( dest, src, copy_count * element_size );
  }

  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueAllocationPage
//-----------------------------------------------------------------------------
RogueAllocationPage* RogueAllocationPage_create( RogueAllocationPage* next_page )
{
  RogueAllocationPage* result = (RogueAllocationPage*) ROGUE_NEW_BYTES(sizeof(RogueAllocationPage));
  result->next_page = next_page;
  result->cursor = result->data;
  result->remaining = ROGUEMM_PAGE_SIZE;
  return result;
}

RogueAllocationPage* RogueAllocationPage_delete( RogueAllocationPage* THIS )
{
  if (THIS) ROGUE_DEL_BYTES( THIS );
  return 0;
};

void* RogueAllocationPage_allocate( RogueAllocationPage* THIS, int size )
{
  // Round size up to multiple of 8.
  if (size > 0) size = (size + 7) & ~7;
  else          size = 8;

  if (size > THIS->remaining) return 0;

  //printf( "Allocating %d bytes from page.\n", size );
  void* result = THIS->cursor;
  THIS->cursor += size;
  THIS->remaining -= size;

  //printf( "%d / %d\n", ROGUEMM_PAGE_SIZE - remaining, ROGUEMM_PAGE_SIZE );
  return result;
}


//-----------------------------------------------------------------------------
//  RogueAllocator
//-----------------------------------------------------------------------------
RogueAllocator* RogueAllocator_create()
{
  RogueAllocator* result = (RogueAllocator*) ROGUE_NEW_BYTES( sizeof(RogueAllocator) );

  memset( result, 0, sizeof(RogueAllocator) );

  return result;
}

RogueAllocator* RogueAllocator_delete( RogueAllocator* THIS )
{
  while (THIS->pages)
  {
    RogueAllocationPage* next_page = THIS->pages->next_page;
    RogueAllocationPage_delete( THIS->pages );
    THIS->pages = next_page;
  }
  return 0;
}

void* RogueAllocator_allocate( RogueAllocator* THIS, int size )
{
#if ROGUE_GC_MODE_AUTO
  Rogue_collect_garbage();
#endif
  if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
  {
    Rogue_allocation_bytes_until_gc -= size;
    void * mem = ROGUE_NEW_BYTES(size);
#if ROGUE_GC_MODE_AUTO
    if (!mem)
    {
      // Try hard!
      Rogue_collect_garbage(true);
      mem = ROGUE_NEW_BYTES(size);
    }
#endif
    return mem;
  }

  size = (size > 0) ? (size + ROGUEMM_GRANULARITY_MASK) & ~ROGUEMM_GRANULARITY_MASK : ROGUEMM_GRANULARITY_SIZE;

  Rogue_allocation_bytes_until_gc -= size;

  int slot;
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, THIS->available_objects[(slot=(size>>ROGUEMM_GRANULARITY_BITS))]);

  if (obj)
  {
    //printf( "found free object\n");
    THIS->available_objects[slot] = obj->next_object;
    return obj;
  }

  // No free objects for requested size.

  // Try allocating a new object from the current page.
  if (THIS->pages )
  {
    obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, size );
    if (obj) return obj;

    // Not enough room on allocation page.  Allocate any smaller blocks
    // we're able to and then move on to a new page.
    int s = slot - 1;
    while (s >= 1)
    {
      obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, s << ROGUEMM_GRANULARITY_BITS );
      if (obj)
      {
        //printf( "free obj size %d\n", (s << ROGUEMM_GRANULARITY_BITS) );
        obj->next_object = THIS->available_objects[s];
        THIS->available_objects[s] = obj;
      }
      else
      {
        --s;
      }
    }
  }

  // New page; this will work for sure.
  THIS->pages = RogueAllocationPage_create( THIS->pages );
  return RogueAllocationPage_allocate( THIS->pages, size );
}

#if ROGUE_GC_MODE_BOEHM
void Rogue_Boehm_Finalizer( void* obj, void* data )
{
  RogueObject* o = (RogueObject*)obj;
  o->type->clean_up_fn(o);
}

RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  // If we had more type information (e.g., whether the data contained
  // references), we could make better decisions here.
  // Also, it seems like we could probably use the small allocator too.
  RogueObject* obj = (RogueObject*)GC_MALLOC( size );
  if (!obj)
  {
    Rogue_collect_garbage( true );
    obj = (RogueObject*)GC_MALLOC( size );
  }
  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  if (of_type->clean_up_fn)
  {
    GC_REGISTER_FINALIZER_IGNORE_SELF( obj, Rogue_Boehm_Finalizer, 0, 0, 0 );
  }

  memset( obj, 0, size );

  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#else
RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, (RogueObject*) RogueAllocator_allocate( THIS, size ));

  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  memset( obj, 0, size );

  if (of_type->clean_up_fn)
  {
    obj->next_object = THIS->objects_requiring_cleanup;
    THIS->objects_requiring_cleanup = obj;
  }
  else
  {
    obj->next_object = THIS->objects;
    THIS->objects = obj;
  }
  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#endif

void* RogueAllocator_free( RogueAllocator* THIS, void* data, int size )
{
  if (data)
  {
    ROGUE_GCDEBUG_STATEMENT(memset(data,0,size));
    if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
    {
      ROGUE_DEL_BYTES( data );
    }
    else
    {
      // Return object to small allocation pool
      RogueObject* obj = (RogueObject*) data;
      int slot = (size + ROGUEMM_GRANULARITY_MASK) >> ROGUEMM_GRANULARITY_BITS;
      if (slot <= 0) slot = 1;
      obj->next_object = THIS->available_objects[slot];
      THIS->available_objects[slot] = obj;
    }
  }

  // Always returns null, allowing a pointer to be freed and assigned null in
  // a single step.
  return 0;
}


void RogueAllocator_free_objects( RogueAllocator* THIS )
{
  RogueObject* objects = THIS->objects;
  while (objects)
  {
    RogueObject* next_object = objects->next_object;
    RogueAllocator_free( THIS, objects, objects->object_size );
    objects = next_object;
  }

  THIS->objects = 0;
}

void RogueAllocator_collect_garbage( RogueAllocator* THIS )
{
  // Global program objects have already been traced through.

  // Trace through all as-yet unreferenced objects that are manually retained.
  RogueObject* cur = THIS->objects;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  cur = THIS->objects_requiring_cleanup;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  // For any unreferenced objects requiring clean-up, we'll:
  //   1.  Reference them and move them to a separate short-term list.
  //   2.  Finish the regular GC.
  //   3.  Call clean_up() on each of them, which may create new
  //       objects (which is why we have to wait until after the GC).
  //   4.  Move them to the list of regular objects.
  cur = THIS->objects_requiring_cleanup;
  RogueObject* unreferenced_clean_up_objects = 0;
  RogueObject* survivors = 0;  // local var for speed
  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      // Referenced.
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      // Unreferenced - go ahead and trace it since we'll call clean_up
      // on it.
      cur->type->trace_fn( cur );
      cur->next_object = unreferenced_clean_up_objects;
      unreferenced_clean_up_objects = cur;
    }
    cur = next_object;
  }
  THIS->objects_requiring_cleanup = survivors;


  // Reset or delete each general object
  cur = THIS->objects;
  THIS->objects = 0;
  survivors = 0;  // local var for speed

  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      ROGUE_GCDEBUG_STATEMENT( printf( "Freeing " ) );
      ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(cur->type) );
      ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", cur ) );
      RogueAllocator_free( THIS, cur, cur->object_size );
    }
    cur = next_object;
  }

  THIS->objects = survivors;


  // Call clean_up() on unreferenced objects requiring cleanup
  // and move them to the general objects list so they'll be deleted
  // the next time they're unreferenced.  Calling clean_up() may
  // create additional objects so THIS->objects may change during a
  // clean_up() call.
  cur = unreferenced_clean_up_objects;
  while (cur)
  {
    RogueObject* next_object = cur->next_object;

    cur->type->clean_up_fn( cur );

    cur->object_size = ~cur->object_size;
    cur->next_object = THIS->objects;
    THIS->objects = cur;

    cur = next_object;
  }
}

void Rogue_print_stack_trace ( bool leading_newline )
{
  RogueDebugTrace* current = Rogue_call_stack;
  if (current && leading_newline) printf( "\n" );
  while (current)
  {
    printf( "%s\n", current->to_c_string() );
    current = current->previous_trace;
  }
  printf("\n");
}

void Rogue_segfault_handler( int signal, siginfo_t *si, void *arg )
{
    if (si->si_addr < (void*)4096)
    {
      // Probably a null pointer dereference.
      printf( "Null reference error (accessing memory at %p)\n",
              si->si_addr );
    }
    else
    {
      if (si->si_code == SEGV_MAPERR)
        printf( "Access to unmapped memory at " );
      else if (si->si_code == SEGV_ACCERR)
        printf( "Access to forbidden memory at " );
      else
        printf( "Unknown segfault accessing " );
      printf("%p\n", si->si_addr);
    }

    Rogue_print_stack_trace( true );

    exit(1);
}

void Rogue_configure_types()
{
  int i;
  int* type_info = Rogue_type_info_table;

  // Install seg fault handler
  struct sigaction sa;

  memset( &sa, 0, sizeof(sa) );
  sigemptyset( &sa.sa_mask );
  sa.sa_sigaction = Rogue_segfault_handler;
  sa.sa_flags     = SA_SIGINFO;

  sigaction( SIGSEGV, &sa, NULL );

  // Initialize allocators
  memset( Rogue_allocators, 0, sizeof(RogueAllocator)*Rogue_allocator_count );

  int global_property_pointer_cursor = 0;
  int property_offset_cursor = 0;

  // Initialize types
  for (i=0; i<Rogue_type_count; ++i)
  {
    int j;
    RogueType* type = &Rogue_types[i];

    memset( type, 0, sizeof(RogueType) );

    type->index = i;
    type->name_index = Rogue_type_name_index_table[i];
    type->object_size = Rogue_object_size_table[i];
    type->attributes = Rogue_attributes_table[i];
    type->allocator = &Rogue_allocators[ *(type_info++) ];
    type->methods = Rogue_dynamic_method_table + *(type_info++);
    type->base_type_count = *(type_info++);
    if (type->base_type_count)
    {
#if ROGUE_GC_MODE_BOEHM
      type->base_types = new (NoGC) RogueType*[ type->base_type_count ];
#else
      type->base_types = new RogueType*[ type->base_type_count ];
#endif
      for (j=0; j<type->base_type_count; ++j)
      {
        type->base_types[j] = &Rogue_types[ *(type_info++) ];
      }
    }

    type->global_property_count = *(type_info++);
    type->global_property_name_indices = type_info;
    type_info += type->global_property_count;
    type->global_property_type_indices = type_info;
    type_info += type->global_property_count;

    type->property_count = *(type_info++);
    type->property_name_indices = type_info;
    type_info += type->property_count;
    type->property_type_indices = type_info;
    type_info += type->property_count;

    if (((type->attributes & ROGUE_ATTRIBUTE_TYPE_MASK) == ROGUE_ATTRIBUTE_IS_CLASS)
      || ((type->attributes & ROGUE_ATTRIBUTE_TYPE_MASK) == ROGUE_ATTRIBUTE_IS_COMPOUND))
    {
      type->global_property_pointers = Rogue_global_property_pointers + global_property_pointer_cursor;
      global_property_pointer_cursor += type->global_property_count;
      type->property_offsets = Rogue_property_offsets + property_offset_cursor;
      property_offset_cursor += type->property_count;
    }

    type->trace_fn = Rogue_trace_fn_table[i];
    type->init_object_fn = Rogue_init_object_fn_table[i];
    type->init_fn        = Rogue_init_fn_table[i];
    type->clean_up_fn    = Rogue_clean_up_fn_table[i];
    type->to_string_fn   = Rogue_to_string_fn_table[i];
  }
}

#if ROGUE_GC_MODE_BOEHM
static GC_ToggleRefStatus Rogue_Boehm_ToggleRefStatus( void * o )
{
  RogueObject* obj = (RogueObject*)o;
  if (obj->reference_count > 0) return GC_TOGGLE_REF_STRONG;
  return GC_TOGGLE_REF_DROP;
}

static void Rogue_Boehm_on_collection_event( GC_EventType event )
{
  if (event == GC_EVENT_START)
  {
    Rogue_on_begin_gc.call();
  }
  else if (event == GC_EVENT_END)
  {
    Rogue_on_end_gc.call();
  }
}

void Rogue_configure_gc()
{
  // Initialize Boehm collector
  //GC_set_finalize_on_demand(0);
  GC_set_toggleref_func(Rogue_Boehm_ToggleRefStatus);
  GC_set_on_collection_event(Rogue_Boehm_on_collection_event);
  //GC_set_all_interior_pointers(0);
  GC_INIT();
}
#else
void Rogue_configure_gc()
{
}
#endif

#if ROGUE_GC_MODE_BOEHM
bool Rogue_collect_garbage( bool forced )
{
  if (forced)
  {
    GC_gcollect();
    return true;
  }

  return GC_collect_a_little();
}
#else
bool Rogue_collect_garbage( bool forced )
{
  int i;

  if (Rogue_allocation_bytes_until_gc > 0 && !forced) return false;

  Rogue_on_begin_gc.call();

//printf( "GC %d\n", Rogue_allocation_bytes_until_gc );
  Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;

  Rogue_trace();

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_collect_garbage( &Rogue_allocators[i] );
  }

  Rogue_on_end_gc.call();

  return true;
}
#endif

void Rogue_quit()
{
  int i;

  if ( !Rogue_configured ) return;
  Rogue_configured = 0;

  RogueGlobal__call_exit_functions( (RogueClassGlobal*) ROGUE_SINGLETON(Global) );

  // Give a few GC's to allow objects requiring clean-up to do so.
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_free_objects( &Rogue_allocators[i] );
  }

  for (i=0; i<Rogue_type_count; ++i)
  {
    RogueType_retire( &Rogue_types[i] );
  }
}

#if ROGUE_GC_MODE_BOEHM

void Rogue_Boehm_IncRef (RogueObject* o)
{
  ++o->reference_count;
  if (o->reference_count == 1)
  {
    GC_toggleref_add(o, 1);
  }
}
void Rogue_Boehm_DecRef (RogueObject* o)
{
  --o->reference_count;
  if (o->reference_count < 0)
  {
    o->reference_count = 0;
  }
}
#endif


//-----------------------------------------------------------------------------
//  Exception handling
//-----------------------------------------------------------------------------
void Rogue_terminate_handler()
{
  if (Rogue_error_object && Rogue_error_object->type)
  {
    printf( "*** Uncaught " );
    RogueType_print_name( Rogue_error_object->type );
    printf( ":\n\n" );

    RogueString* message = RogueObject_to_string( Rogue_error_object );
    if (message)
    {
      printf( "%s\n\n", message->utf8 );
    }

    RogueStackTrace__print( ((RogueClassException*)Rogue_error_object)->stack_trace );
  }
  else
  {
    printf( "Uncaught error.\n" );
  }
  exit(1);
}
typedef RogueClassException*(*ROGUEM0)(RogueClassException*);
typedef RogueObject*(*ROGUEM1)(RogueObject*);
typedef RogueString*(*ROGUEM2)(RogueClassException*);
typedef RogueClassException*(*ROGUEM3)(RogueClassException*,RogueString*);
typedef void(*ROGUEM4)(RogueObject*);
typedef RogueString*(*ROGUEM5)(RogueObject*);
typedef RogueClassStackTrace*(*ROGUEM6)(RogueClassStackTrace*);
typedef RogueString*(*ROGUEM7)(RogueClassStackTrace*);
typedef RogueString_List*(*ROGUEM8)(RogueString_List*);
typedef RogueString*(*ROGUEM9)(RogueString_List*);
typedef RogueClassGenericList*(*ROGUEM10)(RogueClassGenericList*);
typedef RogueString*(*ROGUEM11)(RogueClassGenericList*);
typedef RogueString*(*ROGUEM12)(RogueArray*);
typedef RogueTypeInfo*(*ROGUEM13)(RogueTypeInfo*);
typedef RogueString*(*ROGUEM14)(RogueTypeInfo*);
typedef RoguePropertyInfo_List*(*ROGUEM15)(RoguePropertyInfo_List*);
typedef RogueString*(*ROGUEM16)(RoguePropertyInfo_List*);
typedef RogueClassPropertyInfo*(*ROGUEM17)(RogueClassPropertyInfo*);
typedef RogueString*(*ROGUEM18)(RogueClassPropertyInfo*);
typedef RogueStringBuilder*(*ROGUEM19)(RogueStringBuilder*);
typedef RogueString*(*ROGUEM20)(RogueStringBuilder*);
typedef RogueByte_List*(*ROGUEM21)(RogueByte_List*);
typedef RogueString*(*ROGUEM22)(RogueByte_List*);
typedef RogueCharacter_List*(*ROGUEM23)(RogueCharacter_List*);
typedef RogueString*(*ROGUEM24)(RogueCharacter_List*);
typedef RogueClassTable_String_String_*(*ROGUEM25)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM26)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM27)(RogueClassTable_String_String_*,RogueString*);
typedef RogueTableEntry_String_String__List*(*ROGUEM28)(RogueTableEntry_String_String__List*);
typedef RogueString*(*ROGUEM29)(RogueTableEntry_String_String__List*);
typedef RogueClassTableEntry_String_String_*(*ROGUEM30)(RogueClassTableEntry_String_String_*);
typedef RogueString*(*ROGUEM31)(RogueClassTableEntry_String_String_*);
typedef RogueClassStringReader*(*ROGUEM32)(RogueClassStringReader*);
typedef RogueString*(*ROGUEM33)(RogueClassStringReader*);
typedef RogueClassRuntime*(*ROGUEM34)(RogueClassRuntime*);
typedef RogueString*(*ROGUEM35)(RogueClassRuntime*);
typedef RogueClassTable_String_TypeInfo_*(*ROGUEM36)(RogueClassTable_String_TypeInfo_*);
typedef RogueString*(*ROGUEM37)(RogueClassTable_String_TypeInfo_*);
typedef RogueTableEntry_String_TypeInfo__List*(*ROGUEM38)(RogueTableEntry_String_TypeInfo__List*);
typedef RogueString*(*ROGUEM39)(RogueTableEntry_String_TypeInfo__List*);
typedef RogueClassTableEntry_String_TypeInfo_*(*ROGUEM40)(RogueClassTableEntry_String_TypeInfo_*);
typedef RogueString*(*ROGUEM41)(RogueClassTableEntry_String_TypeInfo_*);
typedef RogueClassGlobal*(*ROGUEM42)(RogueClassGlobal*);
typedef RogueString*(*ROGUEM43)(RogueClassGlobal*);
typedef RogueFunction___List*(*ROGUEM44)(RogueFunction___List*);
typedef RogueString*(*ROGUEM45)(RogueFunction___List*);
typedef RogueClassFunction__*(*ROGUEM46)(RogueClassFunction__*);
typedef RogueString*(*ROGUEM47)(RogueClassFunction__*);
typedef void(*ROGUEM48)(RogueClassFunction__*);
typedef RogueClassConsole*(*ROGUEM49)(RogueClassConsole*);
typedef RogueString*(*ROGUEM50)(RogueClassConsole*);
typedef RogueClassFunction_95*(*ROGUEM51)(RogueClassFunction_95*);
typedef RogueString*(*ROGUEM52)(RogueClassFunction_95*);
typedef void(*ROGUEM53)(RogueClassFunction_95*);
typedef RogueClassRogueC*(*ROGUEM54)(RogueClassRogueC*);
typedef RogueString*(*ROGUEM55)(RogueClassRogueC*);
typedef RogueClassTable_String_Logical_*(*ROGUEM56)(RogueClassTable_String_Logical_*);
typedef RogueString*(*ROGUEM57)(RogueClassTable_String_Logical_*);
typedef RogueTableEntry_String_Logical__List*(*ROGUEM58)(RogueTableEntry_String_Logical__List*);
typedef RogueString*(*ROGUEM59)(RogueTableEntry_String_Logical__List*);
typedef RogueClassTableEntry_String_Logical_*(*ROGUEM60)(RogueClassTableEntry_String_Logical_*);
typedef RogueString*(*ROGUEM61)(RogueClassTableEntry_String_Logical_*);
typedef RogueParser_List*(*ROGUEM62)(RogueParser_List*);
typedef RogueString*(*ROGUEM63)(RogueParser_List*);
typedef RogueClassParser*(*ROGUEM64)(RogueClassParser*);
typedef RogueString*(*ROGUEM65)(RogueClassParser*);
typedef RogueClassTokenReader*(*ROGUEM66)(RogueClassTokenReader*);
typedef RogueString*(*ROGUEM67)(RogueClassTokenReader*);
typedef RogueToken_List*(*ROGUEM68)(RogueToken_List*);
typedef RogueString*(*ROGUEM69)(RogueToken_List*);
typedef RogueClassToken*(*ROGUEM70)(RogueClassToken*);
typedef RogueString*(*ROGUEM71)(RogueClassToken*);
typedef RogueCharacter(*ROGUEM72)(RogueClassToken*);
typedef RogueInt32(*ROGUEM73)(RogueClassToken*);
typedef RogueInt64(*ROGUEM74)(RogueClassToken*);
typedef RogueReal64(*ROGUEM75)(RogueClassToken*);
typedef RogueClassType*(*ROGUEM76)(RogueClassToken*);
typedef RogueClassTokenType*(*ROGUEM77)(RogueClassTokenType*);
typedef RogueString*(*ROGUEM78)(RogueClassTokenType*);
typedef RogueClassToken*(*ROGUEM79)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM80)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM81)(RogueClassTokenType*,RogueClassToken*,RogueString*);
typedef RogueLogical(*ROGUEM82)(RogueClassTokenType*);
typedef RogueClassTable_String_TokenType_*(*ROGUEM83)(RogueClassTable_String_TokenType_*);
typedef RogueString*(*ROGUEM84)(RogueClassTable_String_TokenType_*);
typedef RogueTableEntry_String_TokenType__List*(*ROGUEM85)(RogueTableEntry_String_TokenType__List*);
typedef RogueString*(*ROGUEM86)(RogueTableEntry_String_TokenType__List*);
typedef RogueClassTableEntry_String_TokenType_*(*ROGUEM87)(RogueClassTableEntry_String_TokenType_*);
typedef RogueString*(*ROGUEM88)(RogueClassTableEntry_String_TokenType_*);
typedef RogueClassType*(*ROGUEM89)(RogueClassType*);
typedef RogueString*(*ROGUEM90)(RogueClassType*);
typedef RogueClassAttributes*(*ROGUEM91)(RogueClassAttributes*);
typedef RogueString*(*ROGUEM92)(RogueClassAttributes*);
typedef RogueClassTemplate*(*ROGUEM93)(RogueClassTemplate*);
typedef RogueString*(*ROGUEM94)(RogueClassTemplate*);
typedef RogueTypeParameter_List*(*ROGUEM95)(RogueTypeParameter_List*);
typedef RogueString*(*ROGUEM96)(RogueTypeParameter_List*);
typedef RogueClassTypeParameter*(*ROGUEM97)(RogueClassTypeParameter*);
typedef RogueString*(*ROGUEM98)(RogueClassTypeParameter*);
typedef RogueClassTable_Int32_Template_*(*ROGUEM99)(RogueClassTable_Int32_Template_*);
typedef RogueString*(*ROGUEM100)(RogueClassTable_Int32_Template_*);
typedef RogueTableEntry_Int32_Template__List*(*ROGUEM101)(RogueTableEntry_Int32_Template__List*);
typedef RogueString*(*ROGUEM102)(RogueTableEntry_Int32_Template__List*);
typedef RogueClassTableEntry_Int32_Template_*(*ROGUEM103)(RogueClassTableEntry_Int32_Template_*);
typedef RogueString*(*ROGUEM104)(RogueClassTableEntry_Int32_Template_*);
typedef RogueInt32_List*(*ROGUEM105)(RogueInt32_List*);
typedef RogueString*(*ROGUEM106)(RogueInt32_List*);
typedef RogueType_List*(*ROGUEM107)(RogueType_List*);
typedef RogueString*(*ROGUEM108)(RogueType_List*);
typedef RogueTypeSpecializer_List*(*ROGUEM109)(RogueTypeSpecializer_List*);
typedef RogueString*(*ROGUEM110)(RogueTypeSpecializer_List*);
typedef RogueClassTypeSpecializer*(*ROGUEM111)(RogueClassTypeSpecializer*);
typedef RogueString*(*ROGUEM112)(RogueClassTypeSpecializer*);
typedef RogueDefinition_List*(*ROGUEM113)(RogueDefinition_List*);
typedef RogueString*(*ROGUEM114)(RogueDefinition_List*);
typedef RogueClassDefinition*(*ROGUEM115)(RogueClassDefinition*);
typedef RogueString*(*ROGUEM116)(RogueClassDefinition*);
typedef RogueClassCmd*(*ROGUEM117)(RogueClassCmd*);
typedef RogueString*(*ROGUEM118)(RogueClassCmd*);
typedef void(*ROGUEM119)(RogueClassCmd*,RogueClassCmdStatementList*);
typedef RogueClassCmd*(*ROGUEM120)(RogueClassCmd*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM121)(RogueClassCmd*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM122)(RogueClassCmd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM123)(RogueClassCmd*,RogueClassType*);
typedef void(*ROGUEM124)(RogueClassCmd*,RogueClassVisitor*);
typedef void(*ROGUEM125)(RogueClassCmd*,RogueClassScope*);
typedef RogueLogical(*ROGUEM126)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM127)(RogueClassCmd*,RogueClassScope*);
typedef void(*ROGUEM128)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM129)(RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM130)(RogueClassCmd*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM131)(RogueClassCmd*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM132)(RogueClassCmd*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef void(*ROGUEM133)(RogueClassCmd*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTable_String_Definition_*(*ROGUEM134)(RogueClassTable_String_Definition_*);
typedef RogueString*(*ROGUEM135)(RogueClassTable_String_Definition_*);
typedef RogueTableEntry_String_Definition__List*(*ROGUEM136)(RogueTableEntry_String_Definition__List*);
typedef RogueString*(*ROGUEM137)(RogueTableEntry_String_Definition__List*);
typedef RogueClassTableEntry_String_Definition_*(*ROGUEM138)(RogueClassTableEntry_String_Definition_*);
typedef RogueString*(*ROGUEM139)(RogueClassTableEntry_String_Definition_*);
typedef RogueProperty_List*(*ROGUEM140)(RogueProperty_List*);
typedef RogueString*(*ROGUEM141)(RogueProperty_List*);
typedef RogueClassProperty*(*ROGUEM142)(RogueClassProperty*);
typedef RogueString*(*ROGUEM143)(RogueClassProperty*);
typedef RogueClassTable_String_Property_*(*ROGUEM144)(RogueClassTable_String_Property_*);
typedef RogueString*(*ROGUEM145)(RogueClassTable_String_Property_*);
typedef RogueTableEntry_String_Property__List*(*ROGUEM146)(RogueTableEntry_String_Property__List*);
typedef RogueString*(*ROGUEM147)(RogueTableEntry_String_Property__List*);
typedef RogueClassTableEntry_String_Property_*(*ROGUEM148)(RogueClassTableEntry_String_Property_*);
typedef RogueString*(*ROGUEM149)(RogueClassTableEntry_String_Property_*);
typedef RogueMethod_List*(*ROGUEM150)(RogueMethod_List*);
typedef RogueString*(*ROGUEM151)(RogueMethod_List*);
typedef RogueClassMethod*(*ROGUEM152)(RogueClassMethod*);
typedef RogueString*(*ROGUEM153)(RogueClassMethod*);
typedef RogueLocal_List*(*ROGUEM154)(RogueLocal_List*);
typedef RogueString*(*ROGUEM155)(RogueLocal_List*);
typedef RogueClassLocal*(*ROGUEM156)(RogueClassLocal*);
typedef RogueString*(*ROGUEM157)(RogueClassLocal*);
typedef RogueClassCmdStatementList*(*ROGUEM158)(RogueClassCmdStatementList*);
typedef RogueString*(*ROGUEM159)(RogueCmd_List*);
typedef RogueString*(*ROGUEM160)(RogueClassCmdStatementList*);
typedef RogueClassCmdStatementList*(*ROGUEM161)(RogueClassCmdStatementList*,RogueInt32);
typedef RogueCmd_List*(*ROGUEM162)(RogueCmd_List*);
typedef RogueCmd_List*(*ROGUEM163)(RogueCmd_List*,RogueInt32);
typedef RogueCmdLabel_List*(*ROGUEM164)(RogueCmdLabel_List*);
typedef RogueString*(*ROGUEM165)(RogueCmdLabel_List*);
typedef RogueClassCmdLabel*(*ROGUEM166)(RogueClassCmdLabel*);
typedef RogueString*(*ROGUEM167)(RogueClassCmdLabel*);
typedef RogueClassCmdLabel*(*ROGUEM168)(RogueClassCmdLabel*,RogueClassCloneArgs*);
typedef void(*ROGUEM169)(RogueClassCmdLabel*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM170)(RogueClassCmdLabel*);
typedef RogueClassCmd*(*ROGUEM171)(RogueClassCmdLabel*,RogueClassScope*);
typedef void(*ROGUEM172)(RogueClassCmdLabel*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTable_String_CmdLabel_*(*ROGUEM173)(RogueClassTable_String_CmdLabel_*);
typedef RogueString*(*ROGUEM174)(RogueClassTable_String_CmdLabel_*);
typedef RogueTableEntry_String_CmdLabel__List*(*ROGUEM175)(RogueTableEntry_String_CmdLabel__List*);
typedef RogueString*(*ROGUEM176)(RogueTableEntry_String_CmdLabel__List*);
typedef RogueClassTableEntry_String_CmdLabel_*(*ROGUEM177)(RogueClassTableEntry_String_CmdLabel_*);
typedef RogueString*(*ROGUEM178)(RogueClassTableEntry_String_CmdLabel_*);
typedef RogueClassMethodTemplate*(*ROGUEM179)(RogueClassMethodTemplate*);
typedef RogueString*(*ROGUEM180)(RogueClassMethodTemplate*);
typedef RogueMethodTemplate_List*(*ROGUEM181)(RogueMethodTemplate_List*);
typedef RogueString*(*ROGUEM182)(RogueMethodTemplate_List*);
typedef RogueClassTable_String_Method_List_*(*ROGUEM183)(RogueClassTable_String_Method_List_*);
typedef RogueString*(*ROGUEM184)(RogueClassTable_String_Method_List_*);
typedef RogueTableEntry_String_Method_List__List*(*ROGUEM185)(RogueTableEntry_String_Method_List__List*);
typedef RogueString*(*ROGUEM186)(RogueTableEntry_String_Method_List__List*);
typedef RogueClassTableEntry_String_Method_List_*(*ROGUEM187)(RogueClassTableEntry_String_Method_List_*);
typedef RogueString*(*ROGUEM188)(RogueClassTableEntry_String_Method_List_*);
typedef RogueClassTable_String_Method_*(*ROGUEM189)(RogueClassTable_String_Method_*);
typedef RogueString*(*ROGUEM190)(RogueClassTable_String_Method_*);
typedef RogueTableEntry_String_Method__List*(*ROGUEM191)(RogueTableEntry_String_Method__List*);
typedef RogueString*(*ROGUEM192)(RogueTableEntry_String_Method__List*);
typedef RogueClassTableEntry_String_Method_*(*ROGUEM193)(RogueClassTableEntry_String_Method_*);
typedef RogueString*(*ROGUEM194)(RogueClassTableEntry_String_Method_*);
typedef RogueClassMethodTemplates*(*ROGUEM195)(RogueClassMethodTemplates*);
typedef RogueString*(*ROGUEM196)(RogueClassMethodTemplates*);
typedef RogueClassTable_String_ParseReader_*(*ROGUEM197)(RogueClassTable_String_ParseReader_*);
typedef RogueString*(*ROGUEM198)(RogueClassTable_String_ParseReader_*);
typedef RogueTableEntry_String_ParseReader__List*(*ROGUEM199)(RogueTableEntry_String_ParseReader__List*);
typedef RogueString*(*ROGUEM200)(RogueTableEntry_String_ParseReader__List*);
typedef RogueClassTableEntry_String_ParseReader_*(*ROGUEM201)(RogueClassTableEntry_String_ParseReader_*);
typedef RogueString*(*ROGUEM202)(RogueClassTableEntry_String_ParseReader_*);
typedef RogueClassParseReader*(*ROGUEM203)(RogueClassParseReader*);
typedef RogueString*(*ROGUEM204)(RogueClassParseReader*);
typedef RogueClassStopwatch*(*ROGUEM205)(RogueClassStopwatch*);
typedef RogueString*(*ROGUEM206)(RogueClassStopwatch*);
typedef RoguePlugin_List*(*ROGUEM207)(RoguePlugin_List*);
typedef RogueString*(*ROGUEM208)(RoguePlugin_List*);
typedef RogueClassPlugin*(*ROGUEM209)(RogueClassPlugin*);
typedef RogueString*(*ROGUEM210)(RogueClassPlugin*);
typedef RogueClassFunction__RETURNSLogical*(*ROGUEM211)(RogueClassFunction__RETURNSLogical*);
typedef RogueString*(*ROGUEM212)(RogueClassFunction__RETURNSLogical*);
typedef RogueLogical(*ROGUEM213)(RogueClassFunction__RETURNSLogical*);
typedef RogueClassProgram*(*ROGUEM214)(RogueClassProgram*);
typedef RogueString*(*ROGUEM215)(RogueClassProgram*);
typedef RogueTemplate_List*(*ROGUEM216)(RogueTemplate_List*);
typedef RogueString*(*ROGUEM217)(RogueTemplate_List*);
typedef RogueClassTable_String_Template_*(*ROGUEM218)(RogueClassTable_String_Template_*);
typedef RogueString*(*ROGUEM219)(RogueClassTable_String_Template_*);
typedef RogueTableEntry_String_Template__List*(*ROGUEM220)(RogueTableEntry_String_Template__List*);
typedef RogueString*(*ROGUEM221)(RogueTableEntry_String_Template__List*);
typedef RogueClassTableEntry_String_Template_*(*ROGUEM222)(RogueClassTableEntry_String_Template_*);
typedef RogueString*(*ROGUEM223)(RogueClassTableEntry_String_Template_*);
typedef RogueClassTable_String_Augment_List_*(*ROGUEM224)(RogueClassTable_String_Augment_List_*);
typedef RogueString*(*ROGUEM225)(RogueClassTable_String_Augment_List_*);
typedef RogueTableEntry_String_Augment_List__List*(*ROGUEM226)(RogueTableEntry_String_Augment_List__List*);
typedef RogueString*(*ROGUEM227)(RogueTableEntry_String_Augment_List__List*);
typedef RogueClassTableEntry_String_Augment_List_*(*ROGUEM228)(RogueClassTableEntry_String_Augment_List_*);
typedef RogueString*(*ROGUEM229)(RogueClassTableEntry_String_Augment_List_*);
typedef RogueAugment_List*(*ROGUEM230)(RogueAugment_List*);
typedef RogueString*(*ROGUEM231)(RogueAugment_List*);
typedef RogueClassAugment*(*ROGUEM232)(RogueClassAugment*);
typedef RogueString*(*ROGUEM233)(RogueClassAugment*);
typedef RogueClassTable_String_Type_*(*ROGUEM234)(RogueClassTable_String_Type_*);
typedef RogueString*(*ROGUEM235)(RogueClassTable_String_Type_*);
typedef RogueTableEntry_String_Type__List*(*ROGUEM236)(RogueTableEntry_String_Type__List*);
typedef RogueString*(*ROGUEM237)(RogueTableEntry_String_Type__List*);
typedef RogueClassTableEntry_String_Type_*(*ROGUEM238)(RogueClassTableEntry_String_Type_*);
typedef RogueString*(*ROGUEM239)(RogueClassTableEntry_String_Type_*);
typedef RogueClassTable_String_Int32_*(*ROGUEM240)(RogueClassTable_String_Int32_*);
typedef RogueString*(*ROGUEM241)(RogueClassTable_String_Int32_*);
typedef RogueTableEntry_String_Int32__List*(*ROGUEM242)(RogueTableEntry_String_Int32__List*);
typedef RogueString*(*ROGUEM243)(RogueTableEntry_String_Int32__List*);
typedef RogueClassTableEntry_String_Int32_*(*ROGUEM244)(RogueClassTableEntry_String_Int32_*);
typedef RogueString*(*ROGUEM245)(RogueClassTableEntry_String_Int32_*);
typedef RogueClassTable_String_String_List_*(*ROGUEM246)(RogueClassTable_String_String_List_*);
typedef RogueString*(*ROGUEM247)(RogueClassTable_String_String_List_*);
typedef RogueTableEntry_String_String_List__List*(*ROGUEM248)(RogueTableEntry_String_String_List__List*);
typedef RogueString*(*ROGUEM249)(RogueTableEntry_String_String_List__List*);
typedef RogueClassTableEntry_String_String_List_*(*ROGUEM250)(RogueClassTableEntry_String_String_List_*);
typedef RogueString*(*ROGUEM251)(RogueClassTableEntry_String_String_List_*);
typedef RogueClassError*(*ROGUEM252)(RogueClassError*);
typedef RogueString*(*ROGUEM253)(RogueClassError*);
typedef RogueClassRogueError*(*ROGUEM254)(RogueClassRogueError*);
typedef RogueString*(*ROGUEM255)(RogueClassRogueError*);
typedef RogueClassCmdAccess*(*ROGUEM256)(RogueClassCmdAccess*);
typedef RogueString*(*ROGUEM257)(RogueClassCmdAccess*);
typedef RogueClassCmd*(*ROGUEM258)(RogueClassCmdAccess*,RogueClassCloneArgs*);
typedef void(*ROGUEM259)(RogueClassCmdAccess*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM260)(RogueClassCmdAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM261)(RogueClassCmdAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM262)(RogueClassCmdAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM263)(RogueClassCmdAccess*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM264)(RogueClassCmdAccess*);
typedef void(*ROGUEM265)(RogueClassCmdAccess*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdArgs*(*ROGUEM266)(RogueClassCmdArgs*);
typedef RogueString*(*ROGUEM267)(RogueClassCmdArgs*);
typedef RogueClassCmdArgs*(*ROGUEM268)(RogueClassCmdArgs*,RogueInt32);
typedef RogueCmdNamedArg_List*(*ROGUEM269)(RogueCmdNamedArg_List*);
typedef RogueString*(*ROGUEM270)(RogueCmdNamedArg_List*);
typedef RogueClassCmdNamedArg*(*ROGUEM271)(RogueClassCmdNamedArg*);
typedef RogueString*(*ROGUEM272)(RogueClassCmdNamedArg*);
typedef RogueClassCmdNamedArg*(*ROGUEM273)(RogueClassCmdNamedArg*,RogueClassCloneArgs*);
typedef void(*ROGUEM274)(RogueClassCmdNamedArg*,RogueClassVisitor*);
typedef RogueClassCmdReturn*(*ROGUEM275)(RogueClassCmdReturn*);
typedef RogueString*(*ROGUEM276)(RogueClassCmdReturn*);
typedef RogueClassCmd*(*ROGUEM277)(RogueClassCmdReturn*,RogueClassCloneArgs*);
typedef void(*ROGUEM278)(RogueClassCmdReturn*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM279)(RogueClassCmdReturn*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM280)(RogueClassCmdReturn*);
typedef void(*ROGUEM281)(RogueClassCmdReturn*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdStatement*(*ROGUEM282)(RogueClassCmdStatement*);
typedef RogueString*(*ROGUEM283)(RogueClassCmdStatement*);
typedef void(*ROGUEM284)(RogueClassCmdStatement*,RogueClassVisitor*);
typedef RogueClassScope*(*ROGUEM285)(RogueClassScope*);
typedef RogueString*(*ROGUEM286)(RogueClassScope*);
typedef RogueCmdControlStructure_List*(*ROGUEM287)(RogueCmdControlStructure_List*);
typedef RogueString*(*ROGUEM288)(RogueCmdControlStructure_List*);
typedef RogueClassCmdControlStructure*(*ROGUEM289)(RogueClassCmdControlStructure*);
typedef RogueString*(*ROGUEM290)(RogueClassCmdControlStructure*);
typedef void(*ROGUEM291)(RogueClassCmdControlStructure*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM292)(RogueClassCmdControlStructure*);
typedef RogueClassCmd*(*ROGUEM293)(RogueClassCmdControlStructure*,RogueClassCmdControlStructure*);
typedef RogueClassCmdTaskControlSection*(*ROGUEM294)(RogueClassCmdTaskControlSection*);
typedef RogueString*(*ROGUEM295)(RogueClassCmdTaskControlSection*);
typedef RogueClassFunction_Type_RETURNSLogical*(*ROGUEM296)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueString*(*ROGUEM297)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueLogical(*ROGUEM298)(RogueClassFunction_Type_RETURNSLogical*,RogueClassType*);
typedef RogueClassFunction_383*(*ROGUEM299)(RogueClassFunction_383*);
typedef RogueString*(*ROGUEM300)(RogueClassFunction_383*);
typedef RogueLogical(*ROGUEM301)(RogueClassFunction_383*,RogueClassType*);
typedef RogueClassFunction_384*(*ROGUEM302)(RogueClassFunction_384*);
typedef RogueString*(*ROGUEM303)(RogueClassFunction_384*);
typedef RogueLogical(*ROGUEM304)(RogueClassFunction_384*,RogueClassType*);
typedef RogueClassCPPWriter*(*ROGUEM305)(RogueClassCPPWriter*);
typedef RogueString*(*ROGUEM306)(RogueClassCPPWriter*);
typedef RogueClassSystem*(*ROGUEM307)(RogueClassSystem*);
typedef RogueString*(*ROGUEM308)(RogueClassSystem*);
typedef RogueClassMath*(*ROGUEM309)(RogueClassMath*);
typedef RogueString*(*ROGUEM310)(RogueClassMath*);
typedef RogueClassFile*(*ROGUEM311)(RogueClassFile*);
typedef RogueString*(*ROGUEM312)(RogueClassFile*);
typedef RogueClassCmdMakeRequisite*(*ROGUEM313)(RogueClassCmdMakeRequisite*);
typedef RogueString*(*ROGUEM314)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmdMakeRequisite*(*ROGUEM315)(RogueClassCmdMakeRequisite*,RogueClassCloneArgs*);
typedef void(*ROGUEM316)(RogueClassCmdMakeRequisite*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM317)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmd*(*ROGUEM318)(RogueClassCmdMakeRequisite*,RogueClassScope*);
typedef void(*ROGUEM319)(RogueClassCmdMakeRequisite*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassLineReader*(*ROGUEM320)(RogueClassLineReader*);
typedef RogueString*(*ROGUEM321)(RogueClassLineReader*);
typedef RogueClassFunction_798*(*ROGUEM322)(RogueClassFunction_798*);
typedef RogueString*(*ROGUEM323)(RogueClassFunction_798*);
typedef RogueLogical(*ROGUEM324)(RogueClassFunction_798*);
typedef RogueClassTokenizer*(*ROGUEM325)(RogueClassTokenizer*);
typedef RogueString*(*ROGUEM326)(RogueClassTokenizer*);
typedef RogueClassPreprocessor*(*ROGUEM327)(RogueClassPreprocessor*);
typedef RogueString*(*ROGUEM328)(RogueClassPreprocessor*);
typedef RogueClassTable_String_Token_List_*(*ROGUEM329)(RogueClassTable_String_Token_List_*);
typedef RogueString*(*ROGUEM330)(RogueClassTable_String_Token_List_*);
typedef RogueTableEntry_String_Token_List__List*(*ROGUEM331)(RogueTableEntry_String_Token_List__List*);
typedef RogueString*(*ROGUEM332)(RogueTableEntry_String_Token_List__List*);
typedef RogueClassTableEntry_String_Token_List_*(*ROGUEM333)(RogueClassTableEntry_String_Token_List_*);
typedef RogueString*(*ROGUEM334)(RogueClassTableEntry_String_Token_List_*);
typedef RogueClassPreprocessorTokenReader*(*ROGUEM335)(RogueClassPreprocessorTokenReader*);
typedef RogueString*(*ROGUEM336)(RogueClassPreprocessorTokenReader*);
typedef RogueClassLiteralCharacterToken*(*ROGUEM337)(RogueClassLiteralCharacterToken*);
typedef RogueString*(*ROGUEM338)(RogueClassLiteralCharacterToken*);
typedef RogueCharacter(*ROGUEM339)(RogueClassLiteralCharacterToken*);
typedef RogueClassLiteralInt64Token*(*ROGUEM340)(RogueClassLiteralInt64Token*);
typedef RogueString*(*ROGUEM341)(RogueClassLiteralInt64Token*);
typedef RogueInt32(*ROGUEM342)(RogueClassLiteralInt64Token*);
typedef RogueInt64(*ROGUEM343)(RogueClassLiteralInt64Token*);
typedef RogueReal64(*ROGUEM344)(RogueClassLiteralInt64Token*);
typedef RogueClassLiteralInt32Token*(*ROGUEM345)(RogueClassLiteralInt32Token*);
typedef RogueString*(*ROGUEM346)(RogueClassLiteralInt32Token*);
typedef RogueInt32(*ROGUEM347)(RogueClassLiteralInt32Token*);
typedef RogueReal64(*ROGUEM348)(RogueClassLiteralInt32Token*);
typedef RogueClassLiteralReal64Token*(*ROGUEM349)(RogueClassLiteralReal64Token*);
typedef RogueString*(*ROGUEM350)(RogueClassLiteralReal64Token*);
typedef RogueInt32(*ROGUEM351)(RogueClassLiteralReal64Token*);
typedef RogueReal64(*ROGUEM352)(RogueClassLiteralReal64Token*);
typedef RogueClassStringDataToken*(*ROGUEM353)(RogueClassStringDataToken*);
typedef RogueString*(*ROGUEM354)(RogueClassStringDataToken*);
typedef RogueClassEOLToken*(*ROGUEM355)(RogueClassEOLToken*);
typedef RogueString*(*ROGUEM356)(RogueClassEOLToken*);
typedef RogueClassCmdLiteralLogical*(*ROGUEM357)(RogueClassCmdLiteralLogical*);
typedef RogueString*(*ROGUEM358)(RogueClassCmdLiteralLogical*);
typedef RogueClassCmd*(*ROGUEM359)(RogueClassCmdLiteralLogical*,RogueClassCloneArgs*);
typedef void(*ROGUEM360)(RogueClassCmdLiteralLogical*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM361)(RogueClassCmdLiteral*,RogueClassScope*);
typedef RogueLogical(*ROGUEM362)(RogueClassCmdLiteral*);
typedef RogueClassCmd*(*ROGUEM363)(RogueClassCmdLiteralLogical*,RogueClassScope*);
typedef RogueLogical(*ROGUEM364)(RogueClassCmdLiteralLogical*);
typedef RogueClassType*(*ROGUEM365)(RogueClassCmdLiteralLogical*);
typedef void(*ROGUEM366)(RogueClassCmdLiteralLogical*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteral*(*ROGUEM367)(RogueClassCmdLiteral*);
typedef RogueString*(*ROGUEM368)(RogueClassCmdLiteral*);
typedef void(*ROGUEM369)(RogueClassCmdLiteral*,RogueClassVisitor*);
typedef RogueClassCmdLiteralInt32*(*ROGUEM370)(RogueClassCmdLiteralInt32*);
typedef RogueString*(*ROGUEM371)(RogueClassCmdLiteralInt32*);
typedef RogueClassCmd*(*ROGUEM372)(RogueClassCmdLiteralInt32*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM373)(RogueClassCmdLiteralInt32*,RogueClassCloneArgs*);
typedef void(*ROGUEM374)(RogueClassCmdLiteralInt32*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM375)(RogueClassCmdLiteralInt32*,RogueClassScope*);
typedef RogueLogical(*ROGUEM376)(RogueClassCmdLiteralInt32*);
typedef RogueClassType*(*ROGUEM377)(RogueClassCmdLiteralInt32*);
typedef void(*ROGUEM378)(RogueClassCmdLiteralInt32*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCloneArgs*(*ROGUEM379)(RogueClassCloneArgs*);
typedef RogueString*(*ROGUEM380)(RogueClassCloneArgs*);
typedef RogueClassCmdLabel*(*ROGUEM381)(RogueClassCloneArgs*,RogueClassCmdLabel*);
typedef RogueClassCmdAdd*(*ROGUEM382)(RogueClassCmdAdd*);
typedef RogueString*(*ROGUEM383)(RogueClassCmdAdd*);
typedef RogueClassCmd*(*ROGUEM384)(RogueClassCmdAdd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM385)(RogueClassCmdAdd*,RogueClassType*);
typedef void(*ROGUEM386)(RogueClassCmdAdd*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM387)(RogueClassCmdBinary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM388)(RogueClassCmdBinary*);
typedef void(*ROGUEM389)(RogueClassCmdBinary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueLogical(*ROGUEM390)(RogueClassCmdBinary*);
typedef RogueClassCmd*(*ROGUEM391)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM392)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM393)(RogueClassCmdAdd*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueString*(*ROGUEM394)(RogueClassCmdBinary*);
typedef RogueClassCmdBinary*(*ROGUEM395)(RogueClassCmdBinary*);
typedef void(*ROGUEM396)(RogueClassCmdBinary*,RogueClassVisitor*);
typedef RogueClassPropertyTable*(*ROGUEM397)(RogueClassPropertyTable*);
typedef RogueString*(*ROGUEM398)(RogueClassPropertyTable*);
typedef RogueClassPropertyValue*(*ROGUEM399)(RogueClassPropertyTable*,RogueString*);
typedef RogueClassPropertyTable*(*ROGUEM400)(RogueClassPropertyTable*,RogueString*,RogueClassPropertyValue*);
typedef RogueInt32(*ROGUEM401)(RogueClassPropertyValue*);
typedef RogueClassPropertyValue*(*ROGUEM402)(RogueClassPropertyValue*);
typedef RogueString*(*ROGUEM403)(RogueClassPropertyValue*);
typedef RogueClassPropertyValue*(*ROGUEM404)(RogueClassPropertyValue*,RogueString*);
typedef RogueClassTable_String_PropertyValue_*(*ROGUEM405)(RogueClassTable_String_PropertyValue_*);
typedef RogueString*(*ROGUEM406)(RogueClassTable_String_PropertyValue_*);
typedef RogueTableEntry_String_PropertyValue__List*(*ROGUEM407)(RogueTableEntry_String_PropertyValue__List*);
typedef RogueString*(*ROGUEM408)(RogueTableEntry_String_PropertyValue__List*);
typedef RogueClassTableEntry_String_PropertyValue_*(*ROGUEM409)(RogueClassTableEntry_String_PropertyValue_*);
typedef RogueString*(*ROGUEM410)(RogueClassTableEntry_String_PropertyValue_*);
typedef RogueClassCmdNativeHeader*(*ROGUEM411)(RogueClassCmdNativeHeader*);
typedef RogueString*(*ROGUEM412)(RogueClassCmdNativeHeader*);
typedef RogueClassCmdNativeHeader*(*ROGUEM413)(RogueClassCmdNativeHeader*,RogueClassCloneArgs*);
typedef void(*ROGUEM414)(RogueClassCmdNativeHeader*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM415)(RogueClassCmdNativeHeader*);
typedef RogueClassCmd*(*ROGUEM416)(RogueClassCmdNativeHeader*,RogueClassScope*);
typedef RogueClassCmdNativeCode*(*ROGUEM417)(RogueClassCmdNativeCode*);
typedef RogueString*(*ROGUEM418)(RogueClassCmdNativeCode*);
typedef RogueClassCmdNativeCode*(*ROGUEM419)(RogueClassCmdNativeCode*,RogueClassCloneArgs*);
typedef void(*ROGUEM420)(RogueClassCmdNativeCode*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM421)(RogueClassCmdNativeCode*);
typedef RogueClassCmd*(*ROGUEM422)(RogueClassCmdNativeCode*,RogueClassScope*);
typedef RogueClassCmdIf*(*ROGUEM423)(RogueClassCmdIf*);
typedef RogueString*(*ROGUEM424)(RogueClassCmdIf*);
typedef RogueClassCmd*(*ROGUEM425)(RogueClassCmdIf*,RogueClassCloneArgs*);
typedef void(*ROGUEM426)(RogueClassCmdIf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM427)(RogueClassCmdIf*,RogueClassScope*);
typedef void(*ROGUEM428)(RogueClassCmdIf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWhich*(*ROGUEM429)(RogueClassCmdWhich*);
typedef RogueString*(*ROGUEM430)(RogueClassCmdWhich*);
typedef RogueClassCmdWhich*(*ROGUEM431)(RogueClassCmdWhich*,RogueClassCloneArgs*);
typedef void(*ROGUEM432)(RogueClassCmdWhich*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM433)(RogueClassCmdWhich*,RogueClassScope*);
typedef RogueCmdWhichCase_List*(*ROGUEM434)(RogueCmdWhichCase_List*);
typedef RogueString*(*ROGUEM435)(RogueCmdWhichCase_List*);
typedef RogueClassCmdWhichCase*(*ROGUEM436)(RogueClassCmdWhichCase*);
typedef RogueString*(*ROGUEM437)(RogueClassCmdWhichCase*);
typedef RogueClassCmdWhichCase*(*ROGUEM438)(RogueClassCmdWhichCase*,RogueClassCloneArgs*);
typedef void(*ROGUEM439)(RogueClassCmdWhichCase*,RogueClassVisitor*);
typedef RogueClassCmdBlock*(*ROGUEM440)(RogueClassCmdBlock*);
typedef RogueString*(*ROGUEM441)(RogueClassCmdBlock*);
typedef RogueClassCmd*(*ROGUEM442)(RogueClassCmdBlock*,RogueClassCloneArgs*);
typedef void(*ROGUEM443)(RogueClassCmdBlock*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM444)(RogueClassCmdBlock*);
typedef RogueClassCmdBlock*(*ROGUEM445)(RogueClassCmdBlock*,RogueClassScope*);
typedef void(*ROGUEM446)(RogueClassCmdBlock*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdContingent*(*ROGUEM447)(RogueClassCmdContingent*);
typedef RogueString*(*ROGUEM448)(RogueClassCmdContingent*);
typedef RogueClassCmd*(*ROGUEM449)(RogueClassCmdContingent*,RogueClassCloneArgs*);
typedef void(*ROGUEM450)(RogueClassCmdContingent*,RogueClassVisitor*);
typedef RogueClassCmdContingent*(*ROGUEM451)(RogueClassCmdContingent*,RogueClassScope*);
typedef void(*ROGUEM452)(RogueClassCmdContingent*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM453)(RogueClassCmdContingent*,RogueClassCmdControlStructure*);
typedef RogueClassCmdGenericLoop*(*ROGUEM454)(RogueClassCmdGenericLoop*);
typedef RogueString*(*ROGUEM455)(RogueClassCmdGenericLoop*);
typedef RogueClassCmd*(*ROGUEM456)(RogueClassCmdGenericLoop*,RogueClassCloneArgs*);
typedef void(*ROGUEM457)(RogueClassCmdGenericLoop*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM458)(RogueClassCmdGenericLoop*,RogueClassScope*);
typedef void(*ROGUEM459)(RogueClassCmdGenericLoop*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTry*(*ROGUEM460)(RogueClassCmdTry*);
typedef RogueString*(*ROGUEM461)(RogueClassCmdTry*);
typedef RogueClassCmdTry*(*ROGUEM462)(RogueClassCmdTry*,RogueClassCloneArgs*);
typedef void(*ROGUEM463)(RogueClassCmdTry*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM464)(RogueClassCmdTry*,RogueClassScope*);
typedef void(*ROGUEM465)(RogueClassCmdTry*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdCatch_List*(*ROGUEM466)(RogueCmdCatch_List*);
typedef RogueString*(*ROGUEM467)(RogueCmdCatch_List*);
typedef RogueClassCmdCatch*(*ROGUEM468)(RogueClassCmdCatch*);
typedef RogueString*(*ROGUEM469)(RogueClassCmdCatch*);
typedef RogueClassCmdCatch*(*ROGUEM470)(RogueClassCmdCatch*,RogueClassCloneArgs*);
typedef void(*ROGUEM471)(RogueClassCmdCatch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM472)(RogueClassCmdCatch*,RogueClassScope*);
typedef void(*ROGUEM473)(RogueClassCmdCatch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAwait*(*ROGUEM474)(RogueClassCmdAwait*);
typedef RogueString*(*ROGUEM475)(RogueClassCmdAwait*);
typedef RogueClassCmd*(*ROGUEM476)(RogueClassCmdAwait*,RogueClassCloneArgs*);
typedef void(*ROGUEM477)(RogueClassCmdAwait*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM478)(RogueClassCmdAwait*,RogueClassScope*);
typedef RogueClassCmdYield*(*ROGUEM479)(RogueClassCmdYield*);
typedef RogueString*(*ROGUEM480)(RogueClassCmdYield*);
typedef RogueClassCmd*(*ROGUEM481)(RogueClassCmdYield*,RogueClassCloneArgs*);
typedef void(*ROGUEM482)(RogueClassCmdYield*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM483)(RogueClassCmdYield*,RogueClassScope*);
typedef RogueClassCmdThrow*(*ROGUEM484)(RogueClassCmdThrow*);
typedef RogueString*(*ROGUEM485)(RogueClassCmdThrow*);
typedef RogueClassCmdThrow*(*ROGUEM486)(RogueClassCmdThrow*,RogueClassCloneArgs*);
typedef void(*ROGUEM487)(RogueClassCmdThrow*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM488)(RogueClassCmdThrow*,RogueClassScope*);
typedef void(*ROGUEM489)(RogueClassCmdThrow*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralString*(*ROGUEM490)(RogueClassCmdLiteralString*);
typedef RogueString*(*ROGUEM491)(RogueClassCmdLiteralString*);
typedef RogueClassCmd*(*ROGUEM492)(RogueClassCmdLiteralString*,RogueClassCloneArgs*);
typedef void(*ROGUEM493)(RogueClassCmdLiteralString*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM494)(RogueClassCmdLiteralString*,RogueClassScope*);
typedef RogueLogical(*ROGUEM495)(RogueClassCmdLiteralString*);
typedef RogueClassType*(*ROGUEM496)(RogueClassCmdLiteralString*);
typedef void(*ROGUEM497)(RogueClassCmdLiteralString*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdFormattedString*(*ROGUEM498)(RogueClassCmdFormattedString*);
typedef RogueString*(*ROGUEM499)(RogueClassCmdFormattedString*);
typedef RogueClassCmd*(*ROGUEM500)(RogueClassCmdFormattedString*,RogueClassCloneArgs*);
typedef void(*ROGUEM501)(RogueClassCmdFormattedString*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM502)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM503)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM504)(RogueClassCmdFormattedString*);
typedef RogueClassCmdTrace*(*ROGUEM505)(RogueClassCmdTrace*);
typedef RogueString*(*ROGUEM506)(RogueClassCmdTrace*);
typedef RogueClassCmdTrace*(*ROGUEM507)(RogueClassCmdTrace*,RogueClassCloneArgs*);
typedef void(*ROGUEM508)(RogueClassCmdTrace*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM509)(RogueClassCmdTrace*,RogueClassScope*);
typedef RogueClassCmdLocalDeclaration*(*ROGUEM510)(RogueClassCmdLocalDeclaration*);
typedef RogueString*(*ROGUEM511)(RogueClassCmdLocalDeclaration*);
typedef RogueClassCmd*(*ROGUEM512)(RogueClassCmdLocalDeclaration*,RogueClassCloneArgs*);
typedef void(*ROGUEM513)(RogueClassCmdLocalDeclaration*,RogueClassVisitor*);
typedef void(*ROGUEM514)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM515)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef void(*ROGUEM516)(RogueClassCmdLocalDeclaration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAssert*(*ROGUEM517)(RogueClassCmdAssert*);
typedef RogueString*(*ROGUEM518)(RogueClassCmdAssert*);
typedef RogueClassCmdAssert*(*ROGUEM519)(RogueClassCmdAssert*,RogueClassCloneArgs*);
typedef void(*ROGUEM520)(RogueClassCmdAssert*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM521)(RogueClassCmdAssert*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM522)(RogueClassCmdAssert*);
typedef void(*ROGUEM523)(RogueClassCmdAssert*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdEscape*(*ROGUEM524)(RogueClassCmdEscape*);
typedef RogueString*(*ROGUEM525)(RogueClassCmdEscape*);
typedef RogueClassCmd*(*ROGUEM526)(RogueClassCmdEscape*,RogueClassCloneArgs*);
typedef void(*ROGUEM527)(RogueClassCmdEscape*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM528)(RogueClassCmdEscape*,RogueClassScope*);
typedef void(*ROGUEM529)(RogueClassCmdEscape*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNextIteration*(*ROGUEM530)(RogueClassCmdNextIteration*);
typedef RogueString*(*ROGUEM531)(RogueClassCmdNextIteration*);
typedef RogueClassCmd*(*ROGUEM532)(RogueClassCmdNextIteration*,RogueClassCloneArgs*);
typedef void(*ROGUEM533)(RogueClassCmdNextIteration*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM534)(RogueClassCmdNextIteration*,RogueClassScope*);
typedef void(*ROGUEM535)(RogueClassCmdNextIteration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNecessary*(*ROGUEM536)(RogueClassCmdNecessary*);
typedef RogueString*(*ROGUEM537)(RogueClassCmdNecessary*);
typedef RogueClassCmd*(*ROGUEM538)(RogueClassCmdNecessary*,RogueClassCloneArgs*);
typedef void(*ROGUEM539)(RogueClassCmdNecessary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM540)(RogueClassCmdNecessary*,RogueClassScope*);
typedef void(*ROGUEM541)(RogueClassCmdNecessary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSufficient*(*ROGUEM542)(RogueClassCmdSufficient*);
typedef RogueString*(*ROGUEM543)(RogueClassCmdSufficient*);
typedef RogueClassCmd*(*ROGUEM544)(RogueClassCmdSufficient*,RogueClassCloneArgs*);
typedef void(*ROGUEM545)(RogueClassCmdSufficient*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM546)(RogueClassCmdSufficient*,RogueClassScope*);
typedef void(*ROGUEM547)(RogueClassCmdSufficient*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjust*(*ROGUEM548)(RogueClassCmdAdjust*);
typedef RogueString*(*ROGUEM549)(RogueClassCmdAdjust*);
typedef void(*ROGUEM550)(RogueClassCmdAdjust*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM551)(RogueClassCmdAdjust*,RogueClassScope*);
typedef RogueClassCmdAssign*(*ROGUEM552)(RogueClassCmdAssign*);
typedef RogueString*(*ROGUEM553)(RogueClassCmdAssign*);
typedef RogueClassCmd*(*ROGUEM554)(RogueClassCmdAssign*,RogueClassCloneArgs*);
typedef void(*ROGUEM555)(RogueClassCmdAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM556)(RogueClassCmdAssign*,RogueClassScope*);
typedef RogueClassCmdModifyAndAssign*(*ROGUEM557)(RogueClassCmdModifyAndAssign*);
typedef RogueString*(*ROGUEM558)(RogueClassCmdModifyAndAssign*);
typedef RogueClassCmd*(*ROGUEM559)(RogueClassCmdModifyAndAssign*,RogueClassCloneArgs*);
typedef void(*ROGUEM560)(RogueClassCmdModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM561)(RogueClassCmdModifyAndAssign*,RogueClassScope*);
typedef RogueClassCmdAdjustLocal*(*ROGUEM562)(RogueClassCmdAdjustLocal*);
typedef RogueString*(*ROGUEM563)(RogueClassCmdAdjustLocal*);
typedef RogueClassCmd*(*ROGUEM564)(RogueClassCmdAdjustLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM565)(RogueClassCmdAdjustLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM566)(RogueClassCmdAdjustLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM567)(RogueClassCmdAdjustLocal*);
typedef void(*ROGUEM568)(RogueClassCmdAdjustLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadLocal*(*ROGUEM569)(RogueClassCmdReadLocal*);
typedef RogueString*(*ROGUEM570)(RogueClassCmdReadLocal*);
typedef RogueClassCmd*(*ROGUEM571)(RogueClassCmdReadLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM572)(RogueClassCmdReadLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM573)(RogueClassCmdReadLocal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM574)(RogueClassCmdReadLocal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM575)(RogueClassCmdReadLocal*);
typedef void(*ROGUEM576)(RogueClassCmdReadLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCompareLE*(*ROGUEM577)(RogueClassCmdCompareLE*);
typedef RogueString*(*ROGUEM578)(RogueClassCmdCompareLE*);
typedef RogueClassCmd*(*ROGUEM579)(RogueClassCmdCompareLE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM580)(RogueClassCmdCompareLE*,RogueClassType*);
typedef void(*ROGUEM581)(RogueClassCmdCompareLE*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM582)(RogueClassCmdComparison*);
typedef RogueLogical(*ROGUEM583)(RogueClassCmdComparison*);
typedef RogueClassCmd*(*ROGUEM584)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM585)(RogueClassCmdCompareLE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdComparison*(*ROGUEM586)(RogueClassCmdComparison*);
typedef RogueString*(*ROGUEM587)(RogueClassCmdComparison*);
typedef void(*ROGUEM588)(RogueClassCmdComparison*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM589)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdRange*(*ROGUEM590)(RogueClassCmdRange*);
typedef RogueString*(*ROGUEM591)(RogueClassCmdRange*);
typedef void(*ROGUEM592)(RogueClassCmdRange*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM593)(RogueClassCmdRange*,RogueClassScope*);
typedef RogueInt32(*ROGUEM594)(RogueClassCmdRange*);
typedef RogueClassCmdModifyAndAssignLocal*(*ROGUEM595)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueString*(*ROGUEM596)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueClassCmd*(*ROGUEM597)(RogueClassCmdModifyAndAssignLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM598)(RogueClassCmdModifyAndAssignLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM599)(RogueClassCmdModifyAndAssignLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM600)(RogueClassCmdModifyAndAssignLocal*);
typedef void(*ROGUEM601)(RogueClassCmdModifyAndAssignLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdResolvedModifyAndAssign*(*ROGUEM602)(RogueClassCmdResolvedModifyAndAssign*);
typedef RogueString*(*ROGUEM603)(RogueClassCmdResolvedModifyAndAssign*);
typedef void(*ROGUEM604)(RogueClassCmdResolvedModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpTo*(*ROGUEM605)(RogueClassCmdRangeUpTo*);
typedef RogueString*(*ROGUEM606)(RogueClassCmdRangeUpTo*);
typedef RogueClassCmd*(*ROGUEM607)(RogueClassCmdRangeUpTo*,RogueClassCloneArgs*);
typedef void(*ROGUEM608)(RogueClassCmdRangeUpTo*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpToLessThan*(*ROGUEM609)(RogueClassCmdRangeUpToLessThan*);
typedef RogueString*(*ROGUEM610)(RogueClassCmdRangeUpToLessThan*);
typedef RogueClassCmd*(*ROGUEM611)(RogueClassCmdRangeUpToLessThan*,RogueClassCloneArgs*);
typedef void(*ROGUEM612)(RogueClassCmdRangeUpToLessThan*,RogueClassVisitor*);
typedef RogueClassCmdCompareLT*(*ROGUEM613)(RogueClassCmdCompareLT*);
typedef RogueString*(*ROGUEM614)(RogueClassCmdCompareLT*);
typedef RogueClassCmd*(*ROGUEM615)(RogueClassCmdCompareLT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM616)(RogueClassCmdCompareLT*,RogueClassType*);
typedef void(*ROGUEM617)(RogueClassCmdCompareLT*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM618)(RogueClassCmdCompareLT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareGE*(*ROGUEM619)(RogueClassCmdCompareGE*);
typedef RogueString*(*ROGUEM620)(RogueClassCmdCompareGE*);
typedef RogueClassCmd*(*ROGUEM621)(RogueClassCmdCompareGE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM622)(RogueClassCmdCompareGE*,RogueClassType*);
typedef void(*ROGUEM623)(RogueClassCmdCompareGE*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM624)(RogueClassCmdCompareGE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdForEach*(*ROGUEM625)(RogueClassCmdForEach*);
typedef RogueString*(*ROGUEM626)(RogueClassCmdForEach*);
typedef RogueClassCmd*(*ROGUEM627)(RogueClassCmdForEach*,RogueClassCloneArgs*);
typedef void(*ROGUEM628)(RogueClassCmdForEach*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM629)(RogueClassCmdForEach*,RogueClassScope*);
typedef RogueClassCmdRangeDownTo*(*ROGUEM630)(RogueClassCmdRangeDownTo*);
typedef RogueString*(*ROGUEM631)(RogueClassCmdRangeDownTo*);
typedef RogueClassCmd*(*ROGUEM632)(RogueClassCmdRangeDownTo*,RogueClassCloneArgs*);
typedef void(*ROGUEM633)(RogueClassCmdRangeDownTo*,RogueClassVisitor*);
typedef RogueInt32(*ROGUEM634)(RogueClassCmdRangeDownTo*);
typedef RogueClassCmdLogicalXor*(*ROGUEM635)(RogueClassCmdLogicalXor*);
typedef RogueString*(*ROGUEM636)(RogueClassCmdLogicalXor*);
typedef RogueClassCmd*(*ROGUEM637)(RogueClassCmdLogicalXor*,RogueClassCloneArgs*);
typedef void(*ROGUEM638)(RogueClassCmdLogicalXor*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM639)(RogueClassCmdBinaryLogical*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM640)(RogueClassCmdBinaryLogical*);
typedef RogueClassCmd*(*ROGUEM641)(RogueClassCmdBinaryLogical*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueLogical(*ROGUEM642)(RogueClassCmdLogicalXor*,RogueLogical,RogueLogical);
typedef RogueClassCmdBinaryLogical*(*ROGUEM643)(RogueClassCmdBinaryLogical*);
typedef RogueString*(*ROGUEM644)(RogueClassCmdBinaryLogical*);
typedef void(*ROGUEM645)(RogueClassCmdBinaryLogical*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM646)(RogueClassCmdBinaryLogical*,RogueLogical,RogueLogical);
typedef RogueClassCmdLogicalOr*(*ROGUEM647)(RogueClassCmdLogicalOr*);
typedef RogueString*(*ROGUEM648)(RogueClassCmdLogicalOr*);
typedef RogueClassCmd*(*ROGUEM649)(RogueClassCmdLogicalOr*,RogueClassCloneArgs*);
typedef void(*ROGUEM650)(RogueClassCmdLogicalOr*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM651)(RogueClassCmdLogicalOr*,RogueLogical,RogueLogical);
typedef RogueClassCmdLogicalAnd*(*ROGUEM652)(RogueClassCmdLogicalAnd*);
typedef RogueString*(*ROGUEM653)(RogueClassCmdLogicalAnd*);
typedef RogueClassCmd*(*ROGUEM654)(RogueClassCmdLogicalAnd*,RogueClassCloneArgs*);
typedef void(*ROGUEM655)(RogueClassCmdLogicalAnd*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM656)(RogueClassCmdLogicalAnd*,RogueLogical,RogueLogical);
typedef RogueClassCmdCompareEQ*(*ROGUEM657)(RogueClassCmdCompareEQ*);
typedef RogueString*(*ROGUEM658)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM659)(RogueClassCmdCompareEQ*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM660)(RogueClassCmdCompareEQ*,RogueClassType*);
typedef void(*ROGUEM661)(RogueClassCmdCompareEQ*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM662)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM663)(RogueClassCmdCompareEQ*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareIs*(*ROGUEM664)(RogueClassCmdCompareIs*);
typedef RogueString*(*ROGUEM665)(RogueClassCmdCompareIs*);
typedef RogueClassCmd*(*ROGUEM666)(RogueClassCmdCompareIs*,RogueClassCloneArgs*);
typedef void(*ROGUEM667)(RogueClassCmdCompareIs*,RogueClassVisitor*);
typedef void(*ROGUEM668)(RogueClassCmdCompareIs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM669)(RogueClassCmdCompareIs*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdCompareNE*(*ROGUEM670)(RogueClassCmdCompareNE*);
typedef RogueString*(*ROGUEM671)(RogueClassCmdCompareNE*);
typedef RogueClassCmd*(*ROGUEM672)(RogueClassCmdCompareNE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM673)(RogueClassCmdCompareNE*,RogueClassType*);
typedef void(*ROGUEM674)(RogueClassCmdCompareNE*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM675)(RogueClassCmdCompareNE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareIsNot*(*ROGUEM676)(RogueClassCmdCompareIsNot*);
typedef RogueString*(*ROGUEM677)(RogueClassCmdCompareIsNot*);
typedef RogueClassCmd*(*ROGUEM678)(RogueClassCmdCompareIsNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM679)(RogueClassCmdCompareIsNot*,RogueClassVisitor*);
typedef void(*ROGUEM680)(RogueClassCmdCompareIsNot*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM681)(RogueClassCmdCompareIsNot*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdCompareGT*(*ROGUEM682)(RogueClassCmdCompareGT*);
typedef RogueString*(*ROGUEM683)(RogueClassCmdCompareGT*);
typedef RogueClassCmd*(*ROGUEM684)(RogueClassCmdCompareGT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM685)(RogueClassCmdCompareGT*,RogueClassType*);
typedef void(*ROGUEM686)(RogueClassCmdCompareGT*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM687)(RogueClassCmdCompareGT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdInstanceOf*(*ROGUEM688)(RogueClassCmdInstanceOf*);
typedef RogueString*(*ROGUEM689)(RogueClassCmdInstanceOf*);
typedef RogueClassCmd*(*ROGUEM690)(RogueClassCmdInstanceOf*,RogueClassCloneArgs*);
typedef void(*ROGUEM691)(RogueClassCmdInstanceOf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM692)(RogueClassCmdInstanceOf*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM693)(RogueClassCmdInstanceOf*);
typedef void(*ROGUEM694)(RogueClassCmdInstanceOf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTypeOperator*(*ROGUEM695)(RogueClassCmdTypeOperator*);
typedef RogueString*(*ROGUEM696)(RogueClassCmdTypeOperator*);
typedef void(*ROGUEM697)(RogueClassCmdTypeOperator*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM698)(RogueClassCmdTypeOperator*);
typedef RogueClassCmdLogicalNot*(*ROGUEM699)(RogueClassCmdLogicalNot*);
typedef RogueString*(*ROGUEM700)(RogueClassCmdLogicalNot*);
typedef RogueClassCmd*(*ROGUEM701)(RogueClassCmdLogicalNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM702)(RogueClassCmdLogicalNot*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM703)(RogueClassCmdLogicalNot*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM704)(RogueClassCmdLogicalNot*);
typedef void(*ROGUEM705)(RogueClassCmdUnary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueString*(*ROGUEM706)(RogueClassCmdUnary*);
typedef RogueClassCmdUnary*(*ROGUEM707)(RogueClassCmdUnary*);
typedef void(*ROGUEM708)(RogueClassCmdUnary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM709)(RogueClassCmdUnary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM710)(RogueClassCmdUnary*);
typedef RogueClassCmdBitwiseXor*(*ROGUEM711)(RogueClassCmdBitwiseXor*);
typedef RogueString*(*ROGUEM712)(RogueClassCmdBitwiseXor*);
typedef RogueClassCmd*(*ROGUEM713)(RogueClassCmdBitwiseXor*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM714)(RogueClassCmdBitwiseXor*,RogueClassType*);
typedef void(*ROGUEM715)(RogueClassCmdBitwiseXor*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM716)(RogueClassCmdBitwiseOp*,RogueClassScope*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM717)(RogueClassCmdBitwiseOp*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdBitwiseOp*(*ROGUEM718)(RogueClassCmdBitwiseOp*);
typedef RogueString*(*ROGUEM719)(RogueClassCmdBitwiseOp*);
typedef void(*ROGUEM720)(RogueClassCmdBitwiseOp*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseOr*(*ROGUEM721)(RogueClassCmdBitwiseOr*);
typedef RogueString*(*ROGUEM722)(RogueClassCmdBitwiseOr*);
typedef RogueClassCmd*(*ROGUEM723)(RogueClassCmdBitwiseOr*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM724)(RogueClassCmdBitwiseOr*,RogueClassType*);
typedef void(*ROGUEM725)(RogueClassCmdBitwiseOr*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseAnd*(*ROGUEM726)(RogueClassCmdBitwiseAnd*);
typedef RogueString*(*ROGUEM727)(RogueClassCmdBitwiseAnd*);
typedef RogueClassCmd*(*ROGUEM728)(RogueClassCmdBitwiseAnd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM729)(RogueClassCmdBitwiseAnd*,RogueClassType*);
typedef void(*ROGUEM730)(RogueClassCmdBitwiseAnd*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftLeft*(*ROGUEM731)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueString*(*ROGUEM732)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueClassCmd*(*ROGUEM733)(RogueClassCmdBitwiseShiftLeft*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM734)(RogueClassCmdBitwiseShiftLeft*,RogueClassType*);
typedef void(*ROGUEM735)(RogueClassCmdBitwiseShiftLeft*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftRight*(*ROGUEM736)(RogueClassCmdBitwiseShiftRight*);
typedef RogueString*(*ROGUEM737)(RogueClassCmdBitwiseShiftRight*);
typedef RogueClassCmd*(*ROGUEM738)(RogueClassCmdBitwiseShiftRight*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM739)(RogueClassCmdBitwiseShiftRight*,RogueClassType*);
typedef void(*ROGUEM740)(RogueClassCmdBitwiseShiftRight*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM741)(RogueClassCmdBitwiseShiftRight*,RogueClassScope*);
typedef RogueClassCmdBitwiseShiftRightX*(*ROGUEM742)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueString*(*ROGUEM743)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueClassCmd*(*ROGUEM744)(RogueClassCmdBitwiseShiftRightX*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM745)(RogueClassCmdBitwiseShiftRightX*,RogueClassType*);
typedef void(*ROGUEM746)(RogueClassCmdBitwiseShiftRightX*,RogueClassVisitor*);
typedef RogueClassCmdSubtract*(*ROGUEM747)(RogueClassCmdSubtract*);
typedef RogueString*(*ROGUEM748)(RogueClassCmdSubtract*);
typedef RogueClassCmd*(*ROGUEM749)(RogueClassCmdSubtract*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM750)(RogueClassCmdSubtract*,RogueClassType*);
typedef void(*ROGUEM751)(RogueClassCmdSubtract*,RogueClassVisitor*);
typedef RogueClassCmdMultiply*(*ROGUEM752)(RogueClassCmdMultiply*);
typedef RogueString*(*ROGUEM753)(RogueClassCmdMultiply*);
typedef RogueClassCmd*(*ROGUEM754)(RogueClassCmdMultiply*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM755)(RogueClassCmdMultiply*,RogueClassType*);
typedef void(*ROGUEM756)(RogueClassCmdMultiply*,RogueClassVisitor*);
typedef RogueClassCmdDivide*(*ROGUEM757)(RogueClassCmdDivide*);
typedef RogueString*(*ROGUEM758)(RogueClassCmdDivide*);
typedef RogueClassCmd*(*ROGUEM759)(RogueClassCmdDivide*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM760)(RogueClassCmdDivide*,RogueClassType*);
typedef void(*ROGUEM761)(RogueClassCmdDivide*,RogueClassVisitor*);
typedef RogueClassCmdMod*(*ROGUEM762)(RogueClassCmdMod*);
typedef RogueString*(*ROGUEM763)(RogueClassCmdMod*);
typedef RogueClassCmd*(*ROGUEM764)(RogueClassCmdMod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM765)(RogueClassCmdMod*,RogueClassType*);
typedef void(*ROGUEM766)(RogueClassCmdMod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM767)(RogueClassCmdMod*,RogueClassScope*);
typedef RogueClassCmdPower*(*ROGUEM768)(RogueClassCmdPower*);
typedef RogueString*(*ROGUEM769)(RogueClassCmdPower*);
typedef RogueClassCmd*(*ROGUEM770)(RogueClassCmdPower*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM771)(RogueClassCmdPower*,RogueClassType*);
typedef void(*ROGUEM772)(RogueClassCmdPower*,RogueClassVisitor*);
typedef void(*ROGUEM773)(RogueClassCmdPower*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNegate*(*ROGUEM774)(RogueClassCmdNegate*);
typedef RogueString*(*ROGUEM775)(RogueClassCmdNegate*);
typedef RogueClassCmd*(*ROGUEM776)(RogueClassCmdNegate*,RogueClassCloneArgs*);
typedef void(*ROGUEM777)(RogueClassCmdNegate*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM778)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM779)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueClassCmdBitwiseNot*(*ROGUEM780)(RogueClassCmdBitwiseNot*);
typedef RogueString*(*ROGUEM781)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM782)(RogueClassCmdBitwiseNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM783)(RogueClassCmdBitwiseNot*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM784)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM785)(RogueClassCmdBitwiseNot*,RogueClassScope*);
typedef RogueClassCmdLogicalize*(*ROGUEM786)(RogueClassCmdLogicalize*);
typedef RogueString*(*ROGUEM787)(RogueClassCmdLogicalize*);
typedef RogueClassCmd*(*ROGUEM788)(RogueClassCmdLogicalize*,RogueClassCloneArgs*);
typedef void(*ROGUEM789)(RogueClassCmdLogicalize*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM790)(RogueClassCmdLogicalize*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM791)(RogueClassCmdLogicalize*);
typedef RogueClassCmdIsReference*(*ROGUEM792)(RogueClassCmdIsReference*);
typedef RogueString*(*ROGUEM793)(RogueClassCmdIsReference*);
typedef RogueClassCmd*(*ROGUEM794)(RogueClassCmdIsReference*,RogueClassCloneArgs*);
typedef void(*ROGUEM795)(RogueClassCmdIsReference*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM796)(RogueClassCmdIsReference*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM797)(RogueClassCmdIsReference*);
typedef RogueClassCmdElementAccess*(*ROGUEM798)(RogueClassCmdElementAccess*);
typedef RogueString*(*ROGUEM799)(RogueClassCmdElementAccess*);
typedef RogueClassCmd*(*ROGUEM800)(RogueClassCmdElementAccess*,RogueClassCloneArgs*);
typedef void(*ROGUEM801)(RogueClassCmdElementAccess*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM802)(RogueClassCmdElementAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM803)(RogueClassCmdElementAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM804)(RogueClassCmdElementAccess*,RogueClassScope*,RogueInt32);
typedef RogueClassCmdListConvert*(*ROGUEM805)(RogueClassCmdListConvert*);
typedef RogueString*(*ROGUEM806)(RogueClassCmdListConvert*);
typedef RogueClassCmdListConvert*(*ROGUEM807)(RogueClassCmdListConvert*,RogueClassCloneArgs*);
typedef void(*ROGUEM808)(RogueClassCmdListConvert*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM809)(RogueClassCmdListConvert*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM810)(RogueClassCmdListConvert*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM811)(RogueClassCmdListConvert*);
typedef RogueClassCmdConvertToType*(*ROGUEM812)(RogueClassCmdConvertToType*);
typedef RogueString*(*ROGUEM813)(RogueClassCmdConvertToType*);
typedef RogueClassCmd*(*ROGUEM814)(RogueClassCmdConvertToType*,RogueClassCloneArgs*);
typedef void(*ROGUEM815)(RogueClassCmdConvertToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM816)(RogueClassCmdConvertToType*,RogueClassScope*);
typedef RogueClassCmdCreateCallback*(*ROGUEM817)(RogueClassCmdCreateCallback*);
typedef RogueString*(*ROGUEM818)(RogueClassCmdCreateCallback*);
typedef RogueClassCmdCreateCallback*(*ROGUEM819)(RogueClassCmdCreateCallback*,RogueClassCloneArgs*);
typedef void(*ROGUEM820)(RogueClassCmdCreateCallback*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM821)(RogueClassCmdCreateCallback*,RogueClassScope*);
typedef RogueClassCmdAs*(*ROGUEM822)(RogueClassCmdAs*);
typedef RogueString*(*ROGUEM823)(RogueClassCmdAs*);
typedef RogueClassCmd*(*ROGUEM824)(RogueClassCmdAs*,RogueClassCloneArgs*);
typedef void(*ROGUEM825)(RogueClassCmdAs*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM826)(RogueClassCmdAs*,RogueClassScope*);
typedef void(*ROGUEM827)(RogueClassCmdAs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdDefaultValue*(*ROGUEM828)(RogueClassCmdDefaultValue*);
typedef RogueString*(*ROGUEM829)(RogueClassCmdDefaultValue*);
typedef RogueClassCmd*(*ROGUEM830)(RogueClassCmdDefaultValue*,RogueClassCloneArgs*);
typedef void(*ROGUEM831)(RogueClassCmdDefaultValue*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM832)(RogueClassCmdDefaultValue*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM833)(RogueClassCmdDefaultValue*);
typedef RogueClassCmdLiteralNull*(*ROGUEM834)(RogueClassCmdLiteralNull*);
typedef RogueString*(*ROGUEM835)(RogueClassCmdLiteralNull*);
typedef RogueClassCmd*(*ROGUEM836)(RogueClassCmdLiteralNull*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM837)(RogueClassCmdLiteralNull*,RogueClassCloneArgs*);
typedef void(*ROGUEM838)(RogueClassCmdLiteralNull*,RogueClassVisitor*);
typedef RogueClassCmdLiteralNull*(*ROGUEM839)(RogueClassCmdLiteralNull*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM840)(RogueClassCmdLiteralNull*);
typedef void(*ROGUEM841)(RogueClassCmdLiteralNull*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralReal64*(*ROGUEM842)(RogueClassCmdLiteralReal64*);
typedef RogueString*(*ROGUEM843)(RogueClassCmdLiteralReal64*);
typedef RogueClassCmd*(*ROGUEM844)(RogueClassCmdLiteralReal64*,RogueClassCloneArgs*);
typedef void(*ROGUEM845)(RogueClassCmdLiteralReal64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM846)(RogueClassCmdLiteralReal64*,RogueClassScope*);
typedef RogueLogical(*ROGUEM847)(RogueClassCmdLiteralReal64*);
typedef RogueClassType*(*ROGUEM848)(RogueClassCmdLiteralReal64*);
typedef void(*ROGUEM849)(RogueClassCmdLiteralReal64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralInt64*(*ROGUEM850)(RogueClassCmdLiteralInt64*);
typedef RogueString*(*ROGUEM851)(RogueClassCmdLiteralInt64*);
typedef RogueClassCmd*(*ROGUEM852)(RogueClassCmdLiteralInt64*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM853)(RogueClassCmdLiteralInt64*,RogueClassCloneArgs*);
typedef void(*ROGUEM854)(RogueClassCmdLiteralInt64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM855)(RogueClassCmdLiteralInt64*,RogueClassScope*);
typedef RogueLogical(*ROGUEM856)(RogueClassCmdLiteralInt64*);
typedef RogueClassType*(*ROGUEM857)(RogueClassCmdLiteralInt64*);
typedef void(*ROGUEM858)(RogueClassCmdLiteralInt64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralCharacter*(*ROGUEM859)(RogueClassCmdLiteralCharacter*);
typedef RogueString*(*ROGUEM860)(RogueClassCmdLiteralCharacter*);
typedef RogueClassCmd*(*ROGUEM861)(RogueClassCmdLiteralCharacter*,RogueClassCloneArgs*);
typedef void(*ROGUEM862)(RogueClassCmdLiteralCharacter*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM863)(RogueClassCmdLiteralCharacter*,RogueClassScope*);
typedef RogueLogical(*ROGUEM864)(RogueClassCmdLiteralCharacter*);
typedef RogueClassType*(*ROGUEM865)(RogueClassCmdLiteralCharacter*);
typedef void(*ROGUEM866)(RogueClassCmdLiteralCharacter*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralThis*(*ROGUEM867)(RogueClassCmdLiteralThis*);
typedef RogueString*(*ROGUEM868)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM869)(RogueClassCmdLiteralThis*,RogueClassCloneArgs*);
typedef void(*ROGUEM870)(RogueClassCmdLiteralThis*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM871)(RogueClassCmdThisContext*,RogueClassScope*);
typedef void(*ROGUEM872)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM873)(RogueClassCmdLiteralThis*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM874)(RogueClassCmdThisContext*);
typedef void(*ROGUEM875)(RogueClassCmdThisContext*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdThisContext*(*ROGUEM876)(RogueClassCmdThisContext*);
typedef RogueString*(*ROGUEM877)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM878)(RogueClassCmdThisContext*,RogueClassCloneArgs*);
typedef void(*ROGUEM879)(RogueClassCmdThisContext*,RogueClassVisitor*);
typedef void(*ROGUEM880)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM881)(RogueClassCmdThisContext*,RogueClassScope*);
typedef RogueClassCmdCreateList*(*ROGUEM882)(RogueClassCmdCreateList*);
typedef RogueString*(*ROGUEM883)(RogueClassCmdCreateList*);
typedef RogueClassCmd*(*ROGUEM884)(RogueClassCmdCreateList*,RogueClassCloneArgs*);
typedef void(*ROGUEM885)(RogueClassCmdCreateList*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM886)(RogueClassCmdCreateList*,RogueClassScope*);
typedef RogueClassCmdCallPriorMethod*(*ROGUEM887)(RogueClassCmdCallPriorMethod*);
typedef RogueString*(*ROGUEM888)(RogueClassCmdCallPriorMethod*);
typedef RogueClassCmd*(*ROGUEM889)(RogueClassCmdCallPriorMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM890)(RogueClassCmdCallPriorMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM891)(RogueClassCmdCallPriorMethod*,RogueClassScope*);
typedef RogueFnParam_List*(*ROGUEM892)(RogueFnParam_List*);
typedef RogueString*(*ROGUEM893)(RogueFnParam_List*);
typedef RogueClassFnParam*(*ROGUEM894)(RogueClassFnParam*);
typedef RogueString*(*ROGUEM895)(RogueClassFnParam*);
typedef RogueFnArg_List*(*ROGUEM896)(RogueFnArg_List*);
typedef RogueString*(*ROGUEM897)(RogueFnArg_List*);
typedef RogueClassFnArg*(*ROGUEM898)(RogueClassFnArg*);
typedef RogueString*(*ROGUEM899)(RogueClassFnArg*);
typedef RogueClassCmdCreateFunction*(*ROGUEM900)(RogueClassCmdCreateFunction*);
typedef RogueString*(*ROGUEM901)(RogueClassCmdCreateFunction*);
typedef RogueClassCmdCreateFunction*(*ROGUEM902)(RogueClassCmdCreateFunction*,RogueClassCloneArgs*);
typedef void(*ROGUEM903)(RogueClassCmdCreateFunction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM904)(RogueClassCmdCreateFunction*);
typedef RogueClassCmd*(*ROGUEM905)(RogueClassCmdCreateFunction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM906)(RogueClassCmdCreateFunction*);
typedef RogueClassCmdInlineNative*(*ROGUEM907)(RogueClassCmdInlineNative*);
typedef RogueString*(*ROGUEM908)(RogueClassCmdInlineNative*);
typedef RogueClassCmdInlineNative*(*ROGUEM909)(RogueClassCmdInlineNative*,RogueClassCloneArgs*);
typedef void(*ROGUEM910)(RogueClassCmdInlineNative*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM911)(RogueClassCmdInlineNative*);
typedef RogueClassCmd*(*ROGUEM912)(RogueClassCmdInlineNative*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM913)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM914)(RogueClassCmdInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM915)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM916)(RogueClassCmdInlineNative*);
typedef void(*ROGUEM917)(RogueClassCmdInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSelect*(*ROGUEM918)(RogueClassCmdSelect*);
typedef RogueString*(*ROGUEM919)(RogueClassCmdSelect*);
typedef RogueClassCmdSelect*(*ROGUEM920)(RogueClassCmdSelect*,RogueClassCloneArgs*);
typedef void(*ROGUEM921)(RogueClassCmdSelect*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM922)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM923)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM924)(RogueClassCmdSelect*);
typedef void(*ROGUEM925)(RogueClassCmdSelect*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdSelectCase_List*(*ROGUEM926)(RogueCmdSelectCase_List*);
typedef RogueString*(*ROGUEM927)(RogueCmdSelectCase_List*);
typedef RogueClassCmdSelectCase*(*ROGUEM928)(RogueClassCmdSelectCase*);
typedef RogueString*(*ROGUEM929)(RogueClassCmdSelectCase*);
typedef RogueClassCmdSelectCase*(*ROGUEM930)(RogueClassCmdSelectCase*,RogueClassCloneArgs*);
typedef void(*ROGUEM931)(RogueClassCmdSelectCase*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM932)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM933)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM934)(RogueClassCmdSelectCase*);
typedef RogueClassCmdRequire*(*ROGUEM935)(RogueClassCmdRequire*);
typedef RogueString*(*ROGUEM936)(RogueClassCmdRequire*);
typedef RogueClassCmdRequire*(*ROGUEM937)(RogueClassCmdRequire*,RogueClassCloneArgs*);
typedef void(*ROGUEM938)(RogueClassCmdRequire*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM939)(RogueClassCmdRequire*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM940)(RogueClassCmdRequire*);
typedef void(*ROGUEM941)(RogueClassCmdRequire*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdEnsure*(*ROGUEM942)(RogueClassCmdEnsure*);
typedef RogueString*(*ROGUEM943)(RogueClassCmdEnsure*);
typedef RogueClassCmd*(*ROGUEM944)(RogueClassCmdEnsure*,RogueClassCloneArgs*);
typedef void(*ROGUEM945)(RogueClassCmdEnsure*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM946)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM947)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM948)(RogueClassCmdEnsure*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM949)(RogueClassCmdTypedLiteralList*);
typedef RogueString*(*ROGUEM950)(RogueClassCmdTypedLiteralList*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM951)(RogueClassCmdTypedLiteralList*,RogueClassCloneArgs*);
typedef void(*ROGUEM952)(RogueClassCmdTypedLiteralList*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM953)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM954)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM955)(RogueClassCmdTypedLiteralList*);
typedef RogueClassListRebuilder_Token_*(*ROGUEM956)(RogueClassListRebuilder_Token_*);
typedef RogueString*(*ROGUEM957)(RogueClassListRebuilder_Token_*);
typedef RogueClassCmdCreateCompound*(*ROGUEM958)(RogueClassCmdCreateCompound*);
typedef RogueString*(*ROGUEM959)(RogueClassCmdCreateCompound*);
typedef RogueClassCmd*(*ROGUEM960)(RogueClassCmdCreateCompound*,RogueClassCloneArgs*);
typedef void(*ROGUEM961)(RogueClassCmdCreateCompound*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM962)(RogueClassCmdCreateCompound*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM963)(RogueClassCmdCreateCompound*);
typedef void(*ROGUEM964)(RogueClassCmdCreateCompound*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassVisitor*(*ROGUEM965)(RogueClassVisitor*);
typedef RogueString*(*ROGUEM966)(RogueClassVisitor*);
typedef void(*ROGUEM967)(RogueClassVisitor*,RogueClassType*);
typedef void(*ROGUEM968)(RogueClassVisitor*,RogueClassMethod*);
typedef void(*ROGUEM969)(RogueClassVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM970)(RogueClassVisitor*,RogueClassCmdThisContext*);
typedef void(*ROGUEM971)(RogueClassVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassCmdSwitch*(*ROGUEM972)(RogueClassCmdSwitch*);
typedef RogueString*(*ROGUEM973)(RogueClassCmdSwitch*);
typedef RogueClassCmdSwitch*(*ROGUEM974)(RogueClassCmdSwitch*,RogueClassCloneArgs*);
typedef void(*ROGUEM975)(RogueClassCmdSwitch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM976)(RogueClassCmdSwitch*,RogueClassScope*);
typedef void(*ROGUEM977)(RogueClassCmdSwitch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateObject*(*ROGUEM978)(RogueClassCmdCreateObject*);
typedef RogueString*(*ROGUEM979)(RogueClassCmdCreateObject*);
typedef RogueClassCmd*(*ROGUEM980)(RogueClassCmdCreateObject*,RogueClassCloneArgs*);
typedef void(*ROGUEM981)(RogueClassCmdCreateObject*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM982)(RogueClassCmdCreateObject*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM983)(RogueClassCmdCreateObject*);
typedef void(*ROGUEM984)(RogueClassCmdCreateObject*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadSingleton*(*ROGUEM985)(RogueClassCmdReadSingleton*);
typedef RogueString*(*ROGUEM986)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM987)(RogueClassCmdReadSingleton*,RogueClassCloneArgs*);
typedef void(*ROGUEM988)(RogueClassCmdReadSingleton*,RogueClassVisitor*);
typedef void(*ROGUEM989)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM990)(RogueClassCmdReadSingleton*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM991)(RogueClassCmdReadSingleton*);
typedef void(*ROGUEM992)(RogueClassCmdReadSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteSingleton*(*ROGUEM993)(RogueClassCmdWriteSingleton*);
typedef RogueString*(*ROGUEM994)(RogueClassCmdWriteSingleton*);
typedef RogueClassCmd*(*ROGUEM995)(RogueClassCmdWriteSingleton*,RogueClassCloneArgs*);
typedef void(*ROGUEM996)(RogueClassCmdWriteSingleton*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM997)(RogueClassCmdWriteSingleton*,RogueClassScope*);
typedef void(*ROGUEM998)(RogueClassCmdWriteSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteLocal*(*ROGUEM999)(RogueClassCmdWriteLocal*);
typedef RogueString*(*ROGUEM1000)(RogueClassCmdWriteLocal*);
typedef RogueClassCmd*(*ROGUEM1001)(RogueClassCmdWriteLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM1002)(RogueClassCmdWriteLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1003)(RogueClassCmdWriteLocal*,RogueClassScope*);
typedef void(*ROGUEM1004)(RogueClassCmdWriteLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadGlobal*(*ROGUEM1005)(RogueClassCmdReadGlobal*);
typedef RogueString*(*ROGUEM1006)(RogueClassCmdReadGlobal*);
typedef RogueClassCmd*(*ROGUEM1007)(RogueClassCmdReadGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM1008)(RogueClassCmdReadGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1009)(RogueClassCmdReadGlobal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1010)(RogueClassCmdReadGlobal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1011)(RogueClassCmdReadGlobal*);
typedef void(*ROGUEM1012)(RogueClassCmdReadGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteGlobal*(*ROGUEM1013)(RogueClassCmdWriteGlobal*);
typedef RogueString*(*ROGUEM1014)(RogueClassCmdWriteGlobal*);
typedef RogueClassCmd*(*ROGUEM1015)(RogueClassCmdWriteGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM1016)(RogueClassCmdWriteGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1017)(RogueClassCmdWriteGlobal*,RogueClassScope*);
typedef void(*ROGUEM1018)(RogueClassCmdWriteGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadProperty*(*ROGUEM1019)(RogueClassCmdReadProperty*);
typedef RogueString*(*ROGUEM1020)(RogueClassCmdReadProperty*);
typedef RogueClassCmd*(*ROGUEM1021)(RogueClassCmdReadProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM1022)(RogueClassCmdReadProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1023)(RogueClassCmdReadProperty*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1024)(RogueClassCmdReadProperty*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1025)(RogueClassCmdReadProperty*);
typedef void(*ROGUEM1026)(RogueClassCmdReadProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteProperty*(*ROGUEM1027)(RogueClassCmdWriteProperty*);
typedef RogueString*(*ROGUEM1028)(RogueClassCmdWriteProperty*);
typedef RogueClassCmd*(*ROGUEM1029)(RogueClassCmdWriteProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM1030)(RogueClassCmdWriteProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1031)(RogueClassCmdWriteProperty*,RogueClassScope*);
typedef void(*ROGUEM1032)(RogueClassCmdWriteProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCall*(*ROGUEM1033)(RogueClassCmdCall*);
typedef RogueString*(*ROGUEM1034)(RogueClassCmdCall*);
typedef void(*ROGUEM1035)(RogueClassCmdCall*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1036)(RogueClassCmdCall*);
typedef RogueClassCmd*(*ROGUEM1037)(RogueClassCmdCall*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1038)(RogueClassCmdCall*,RogueClassScope*,RogueInt32);
typedef RogueClassCmdCallDynamicMethod*(*ROGUEM1039)(RogueClassCmdCallDynamicMethod*);
typedef RogueString*(*ROGUEM1040)(RogueClassCmdCallDynamicMethod*);
typedef RogueClassCmd*(*ROGUEM1041)(RogueClassCmdCallMethod*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1042)(RogueClassCmdCallDynamicMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1043)(RogueClassCmdCallDynamicMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1044)(RogueClassCmdCallDynamicMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallMethod*(*ROGUEM1045)(RogueClassCmdCallMethod*);
typedef RogueString*(*ROGUEM1046)(RogueClassCmdCallMethod*);
typedef void(*ROGUEM1047)(RogueClassCmdCallMethod*,RogueClassVisitor*);
typedef RogueClassCmdAdjustProperty*(*ROGUEM1048)(RogueClassCmdAdjustProperty*);
typedef RogueString*(*ROGUEM1049)(RogueClassCmdAdjustProperty*);
typedef RogueClassCmd*(*ROGUEM1050)(RogueClassCmdAdjustProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM1051)(RogueClassCmdAdjustProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1052)(RogueClassCmdAdjustProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1053)(RogueClassCmdAdjustProperty*);
typedef void(*ROGUEM1054)(RogueClassCmdAdjustProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustGlobal*(*ROGUEM1055)(RogueClassCmdAdjustGlobal*);
typedef RogueString*(*ROGUEM1056)(RogueClassCmdAdjustGlobal*);
typedef RogueClassCmd*(*ROGUEM1057)(RogueClassCmdAdjustGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM1058)(RogueClassCmdAdjustGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1059)(RogueClassCmdAdjustGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1060)(RogueClassCmdAdjustGlobal*);
typedef void(*ROGUEM1061)(RogueClassCmdAdjustGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignGlobal*(*ROGUEM1062)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueString*(*ROGUEM1063)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueClassCmd*(*ROGUEM1064)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM1065)(RogueClassCmdModifyAndAssignGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1066)(RogueClassCmdModifyAndAssignGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1067)(RogueClassCmdModifyAndAssignGlobal*);
typedef void(*ROGUEM1068)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignProperty*(*ROGUEM1069)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueString*(*ROGUEM1070)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueClassCmd*(*ROGUEM1071)(RogueClassCmdModifyAndAssignProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM1072)(RogueClassCmdModifyAndAssignProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1073)(RogueClassCmdModifyAndAssignProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1074)(RogueClassCmdModifyAndAssignProperty*);
typedef void(*ROGUEM1075)(RogueClassCmdModifyAndAssignProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateArray*(*ROGUEM1076)(RogueClassCmdCreateArray*);
typedef RogueString*(*ROGUEM1077)(RogueClassCmdCreateArray*);
typedef RogueClassCmd*(*ROGUEM1078)(RogueClassCmdCreateArray*,RogueClassCloneArgs*);
typedef void(*ROGUEM1079)(RogueClassCmdCreateArray*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1080)(RogueClassCmdCreateArray*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1081)(RogueClassCmdCreateArray*);
typedef void(*ROGUEM1082)(RogueClassCmdCreateArray*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayElement*(*ROGUEM1083)(RogueClassCmdReadArrayElement*);
typedef RogueString*(*ROGUEM1084)(RogueClassCmdReadArrayElement*);
typedef RogueClassCmd*(*ROGUEM1085)(RogueClassCmdReadArrayElement*,RogueClassCloneArgs*);
typedef void(*ROGUEM1086)(RogueClassCmdReadArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1087)(RogueClassCmdReadArrayElement*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1088)(RogueClassCmdReadArrayElement*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1089)(RogueClassCmdReadArrayElement*);
typedef void(*ROGUEM1090)(RogueClassCmdReadArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayCount*(*ROGUEM1091)(RogueClassCmdReadArrayCount*);
typedef RogueString*(*ROGUEM1092)(RogueClassCmdReadArrayCount*);
typedef RogueClassCmd*(*ROGUEM1093)(RogueClassCmdReadArrayCount*,RogueClassCloneArgs*);
typedef void(*ROGUEM1094)(RogueClassCmdReadArrayCount*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1095)(RogueClassCmdReadArrayCount*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1096)(RogueClassCmdReadArrayCount*);
typedef void(*ROGUEM1097)(RogueClassCmdReadArrayCount*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteArrayElement*(*ROGUEM1098)(RogueClassCmdWriteArrayElement*);
typedef RogueString*(*ROGUEM1099)(RogueClassCmdWriteArrayElement*);
typedef RogueClassCmd*(*ROGUEM1100)(RogueClassCmdWriteArrayElement*,RogueClassCloneArgs*);
typedef void(*ROGUEM1101)(RogueClassCmdWriteArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1102)(RogueClassCmdWriteArrayElement*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1103)(RogueClassCmdWriteArrayElement*);
typedef void(*ROGUEM1104)(RogueClassCmdWriteArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTaskControl*(*ROGUEM1105)(RogueClassCmdTaskControl*);
typedef RogueString*(*ROGUEM1106)(RogueClassCmdTaskControl*);
typedef void(*ROGUEM1107)(RogueClassCmdTaskControl*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM1108)(RogueClassCmdTaskControl*);
typedef RogueClassCmd*(*ROGUEM1109)(RogueClassCmdTaskControl*,RogueClassScope*);
typedef void(*ROGUEM1110)(RogueClassCmdTaskControl*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdTaskControlSection_List*(*ROGUEM1111)(RogueCmdTaskControlSection_List*);
typedef RogueString*(*ROGUEM1112)(RogueCmdTaskControlSection_List*);
typedef RogueClassCmdNoAction*(*ROGUEM1113)(RogueClassCmdNoAction*);
typedef RogueString*(*ROGUEM1114)(RogueClassCmdNoAction*);
typedef void(*ROGUEM1115)(RogueClassCmdNoAction*,RogueClassCmdStatementList*);
typedef RogueClassCmdNoAction*(*ROGUEM1116)(RogueClassCmdNoAction*,RogueClassCloneArgs*);
typedef void(*ROGUEM1117)(RogueClassCmdNoAction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM1118)(RogueClassCmdNoAction*);
typedef RogueClassCmd*(*ROGUEM1119)(RogueClassCmdNoAction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1120)(RogueClassCmdNoAction*);
typedef void(*ROGUEM1121)(RogueClassCmdNoAction*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassUpdateThisTypeVisitor*(*ROGUEM1122)(RogueClassUpdateThisTypeVisitor*);
typedef RogueString*(*ROGUEM1123)(RogueClassUpdateThisTypeVisitor*);
typedef void(*ROGUEM1124)(RogueClassUpdateThisTypeVisitor*,RogueClassCmdThisContext*);
typedef RogueClassTable_String_TypeSpecializer_*(*ROGUEM1125)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM1126)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueTableEntry_String_TypeSpecializer__List*(*ROGUEM1127)(RogueTableEntry_String_TypeSpecializer__List*);
typedef RogueString*(*ROGUEM1128)(RogueTableEntry_String_TypeSpecializer__List*);
typedef RogueClassTableEntry_String_TypeSpecializer_*(*ROGUEM1129)(RogueClassTableEntry_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM1130)(RogueClassTableEntry_String_TypeSpecializer_*);
typedef RogueClassCmdCastToType*(*ROGUEM1131)(RogueClassCmdCastToType*);
typedef RogueString*(*ROGUEM1132)(RogueClassCmdCastToType*);
typedef RogueClassCmd*(*ROGUEM1133)(RogueClassCmdCastToType*,RogueClassCloneArgs*);
typedef void(*ROGUEM1134)(RogueClassCmdCastToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1135)(RogueClassCmdCastToType*,RogueClassScope*);
typedef void(*ROGUEM1136)(RogueClassCmdCastToType*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTraceUsedCodeVisitor*(*ROGUEM1137)(RogueClassTraceUsedCodeVisitor*);
typedef RogueString*(*ROGUEM1138)(RogueClassTraceUsedCodeVisitor*);
typedef void(*ROGUEM1139)(RogueClassTraceUsedCodeVisitor*,RogueClassType*);
typedef void(*ROGUEM1140)(RogueClassTraceUsedCodeVisitor*,RogueClassMethod*);
typedef void(*ROGUEM1141)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM1142)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassCloneMethodArgs*(*ROGUEM1143)(RogueClassCloneMethodArgs*);
typedef RogueString*(*ROGUEM1144)(RogueClassCloneMethodArgs*);
typedef RogueClassCmdLabel*(*ROGUEM1145)(RogueClassCloneMethodArgs*,RogueClassCmdLabel*);
typedef RogueClassTaskArgs*(*ROGUEM1146)(RogueClassTaskArgs*);
typedef RogueString*(*ROGUEM1147)(RogueClassTaskArgs*);
typedef RogueClassRequirementError*(*ROGUEM1148)(RogueClassRequirementError*);
typedef RogueString*(*ROGUEM1149)(RogueClassRequirementError*);
typedef RogueClassRequirementError*(*ROGUEM1150)(RogueClassRequirementError*,RogueString*);
typedef RogueToken_List_List*(*ROGUEM1151)(RogueToken_List_List*);
typedef RogueString*(*ROGUEM1152)(RogueToken_List_List*);
typedef RogueClassMacroArgs*(*ROGUEM1153)(RogueClassMacroArgs*);
typedef RogueString*(*ROGUEM1154)(RogueClassMacroArgs*);
typedef RogueClassTable_String_Cmd_*(*ROGUEM1155)(RogueClassTable_String_Cmd_*);
typedef RogueString*(*ROGUEM1156)(RogueClassTable_String_Cmd_*);
typedef RogueTableEntry_String_Cmd__List*(*ROGUEM1157)(RogueTableEntry_String_Cmd__List*);
typedef RogueString*(*ROGUEM1158)(RogueTableEntry_String_Cmd__List*);
typedef RogueClassTableEntry_String_Cmd_*(*ROGUEM1159)(RogueClassTableEntry_String_Cmd_*);
typedef RogueString*(*ROGUEM1160)(RogueClassTableEntry_String_Cmd_*);
typedef RogueClassFunction_CmdNamedArg_RETURNSLogical*(*ROGUEM1161)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM1162)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM1163)(RogueClassFunction_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*);
typedef RogueClassListRebuilder_CmdNamedArg_*(*ROGUEM1164)(RogueClassListRebuilder_CmdNamedArg_*);
typedef RogueString*(*ROGUEM1165)(RogueClassListRebuilder_CmdNamedArg_*);
typedef RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*(*ROGUEM1166)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM1167)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM1168)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassQuicksort_CmdNamedArg_*(*ROGUEM1169)(RogueClassQuicksort_CmdNamedArg_*);
typedef RogueString*(*ROGUEM1170)(RogueClassQuicksort_CmdNamedArg_*);
typedef RogueClassCmdCallInlineNativeRoutine*(*ROGUEM1171)(RogueClassCmdCallInlineNativeRoutine*);
typedef RogueString*(*ROGUEM1172)(RogueClassCmdCallInlineNative*);
typedef RogueString*(*ROGUEM1173)(RogueClassCmdCallInlineNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM1174)(RogueClassCmdCallInlineNativeRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM1175)(RogueClassCmdCallInlineNativeRoutine*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1176)(RogueClassCmdCallInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1177)(RogueClassCmdCallInlineNativeRoutine*);
typedef void(*ROGUEM1178)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef void(*ROGUEM1179)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*);
typedef RogueClassCmdCallInlineNative*(*ROGUEM1180)(RogueClassCmdCallInlineNative*);
typedef void(*ROGUEM1181)(RogueClassCmdCallInlineNative*,RogueClassVisitor*);
typedef RogueClassCmdCallNativeRoutine*(*ROGUEM1182)(RogueClassCmdCallNativeRoutine*);
typedef RogueString*(*ROGUEM1183)(RogueClassCmdCallNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM1184)(RogueClassCmdCallNativeRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM1185)(RogueClassCmdCallNativeRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM1186)(RogueClassCmdCallNativeRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallRoutine*(*ROGUEM1187)(RogueClassCmdCallRoutine*);
typedef RogueString*(*ROGUEM1188)(RogueClassCmdCallRoutine*);
typedef RogueClassCmd*(*ROGUEM1189)(RogueClassCmdCallRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM1190)(RogueClassCmdCallRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM1191)(RogueClassCmdCallRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallInlineNativeMethod*(*ROGUEM1192)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueString*(*ROGUEM1193)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueClassCmd*(*ROGUEM1194)(RogueClassCmdCallInlineNativeMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1195)(RogueClassCmdCallInlineNativeMethod*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1196)(RogueClassCmdCallInlineNativeMethod*);
typedef void(*ROGUEM1197)(RogueClassCmdCallInlineNativeMethod*,RogueClassCPPWriter*);
typedef RogueClassCmdCallNativeMethod*(*ROGUEM1198)(RogueClassCmdCallNativeMethod*);
typedef RogueString*(*ROGUEM1199)(RogueClassCmdCallNativeMethod*);
typedef RogueClassCmd*(*ROGUEM1200)(RogueClassCmdCallNativeMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1201)(RogueClassCmdCallNativeMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1202)(RogueClassCmdCallNativeMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallAspectMethod*(*ROGUEM1203)(RogueClassCmdCallAspectMethod*);
typedef RogueString*(*ROGUEM1204)(RogueClassCmdCallAspectMethod*);
typedef RogueClassCmd*(*ROGUEM1205)(RogueClassCmdCallAspectMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1206)(RogueClassCmdCallAspectMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1207)(RogueClassCmdCallAspectMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCandidateMethods*(*ROGUEM1208)(RogueClassCandidateMethods*);
typedef RogueString*(*ROGUEM1209)(RogueClassCandidateMethods*);
typedef RogueClassFunction_2629*(*ROGUEM1210)(RogueClassFunction_2629*);
typedef RogueString*(*ROGUEM1211)(RogueClassFunction_2629*);
typedef RogueLogical(*ROGUEM1212)(RogueClassFunction_2629*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_2630*(*ROGUEM1213)(RogueClassFunction_2630*);
typedef RogueString*(*ROGUEM1214)(RogueClassFunction_2630*);
typedef RogueLogical(*ROGUEM1215)(RogueClassFunction_2630*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassIOError*(*ROGUEM1216)(RogueClassIOError*);
typedef RogueString*(*ROGUEM1217)(RogueClassIOError*);
typedef RogueClassFileReader*(*ROGUEM1218)(RogueClassFileReader*);
typedef RogueString*(*ROGUEM1219)(RogueClassFileReader*);
typedef RogueClassFileWriter*(*ROGUEM1220)(RogueClassFileWriter*);
typedef RogueString*(*ROGUEM1221)(RogueClassFileWriter*);
typedef RogueClassUTF8Reader*(*ROGUEM1222)(RogueClassUTF8Reader*);
typedef RogueString*(*ROGUEM1223)(RogueClassUTF8Reader*);
typedef RogueClassDirectiveTokenType*(*ROGUEM1224)(RogueClassDirectiveTokenType*);
typedef RogueString*(*ROGUEM1225)(RogueClassDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1226)(RogueClassDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1227)(RogueClassDirectiveTokenType*);
typedef RogueClassStructuralDirectiveTokenType*(*ROGUEM1228)(RogueClassStructuralDirectiveTokenType*);
typedef RogueString*(*ROGUEM1229)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1230)(RogueClassStructuralDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1231)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassEOLTokenType*(*ROGUEM1232)(RogueClassEOLTokenType*);
typedef RogueString*(*ROGUEM1233)(RogueClassEOLTokenType*);
typedef RogueClassToken*(*ROGUEM1234)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM1235)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueLogical(*ROGUEM1236)(RogueClassEOLTokenType*);
typedef RogueClassStructureTokenType*(*ROGUEM1237)(RogueClassStructureTokenType*);
typedef RogueString*(*ROGUEM1238)(RogueClassStructureTokenType*);
typedef RogueClassToken*(*ROGUEM1239)(RogueClassStructureTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1240)(RogueClassStructureTokenType*);
typedef RogueClassNativeCodeTokenType*(*ROGUEM1241)(RogueClassNativeCodeTokenType*);
typedef RogueString*(*ROGUEM1242)(RogueClassNativeCodeTokenType*);
typedef RogueClassToken*(*ROGUEM1243)(RogueClassNativeCodeTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM1244)(RogueClassNativeCodeTokenType*,RogueClassToken*,RogueString*);
typedef RogueClassModifyAndAssignTokenType*(*ROGUEM1245)(RogueClassModifyAndAssignTokenType*);
typedef RogueString*(*ROGUEM1246)(RogueClassModifyAndAssignTokenType*);
typedef RogueLogical(*ROGUEM1247)(RogueClassModifyAndAssignTokenType*);
typedef RogueClassInt32Property*(*ROGUEM1248)(RogueClassInt32Property*);
typedef RogueString*(*ROGUEM1249)(RogueClassInt32Property*);
typedef RogueInt32(*ROGUEM1250)(RogueClassInt32Property*);
typedef RogueClassStringProperty*(*ROGUEM1251)(RogueClassStringProperty*);
typedef RogueString*(*ROGUEM1252)(RogueClassStringProperty*);
typedef RogueInt32(*ROGUEM1253)(RogueClassStringProperty*);
typedef RogueClassCmdConvertToPrimitiveType*(*ROGUEM1254)(RogueClassCmdConvertToPrimitiveType*);
typedef RogueString*(*ROGUEM1255)(RogueClassCmdConvertToPrimitiveType*);
typedef RogueClassCmd*(*ROGUEM1256)(RogueClassCmdConvertToPrimitiveType*,RogueClassCloneArgs*);
typedef void(*ROGUEM1257)(RogueClassCmdConvertToPrimitiveType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1258)(RogueClassCmdConvertToPrimitiveType*,RogueClassScope*);
typedef void(*ROGUEM1259)(RogueClassCmdConvertToPrimitiveType*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassListReader_CmdSelectCase_*(*ROGUEM1260)(RogueClassListReader_CmdSelectCase_*);
typedef RogueString*(*ROGUEM1261)(RogueClassListReader_CmdSelectCase_*);
typedef RogueClassCmdCallStaticMethod*(*ROGUEM1262)(RogueClassCmdCallStaticMethod*);
typedef RogueString*(*ROGUEM1263)(RogueClassCmdCallStaticMethod*);
typedef RogueClassCmd*(*ROGUEM1264)(RogueClassCmdCallStaticMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1265)(RogueClassCmdCallStaticMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1266)(RogueClassCmdCallStaticMethod*,RogueClassScope*);
typedef void(*ROGUEM1267)(RogueClassCmdCallStaticMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassNativeCodeToken*(*ROGUEM1268)(RogueClassNativeCodeToken*);
typedef RogueString*(*ROGUEM1269)(RogueClassNativeCodeToken*);

RogueObject* call_ROGUEM1( int i, RogueObject* THIS )
{
  return ((ROGUEM1)(THIS->type->methods[i]))( THIS );
}

RogueClassException* call_ROGUEM3( int i, RogueClassException* THIS, RogueString* p0 )
{
  return ((ROGUEM3)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM5( int i, RogueObject* THIS )
{
  return ((ROGUEM5)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM27( int i, RogueClassTable_String_String_* THIS, RogueString* p0 )
{
  return ((ROGUEM27)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM48( int i, RogueClassFunction__* THIS )
{
  ((ROGUEM48)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM71( int i, RogueClassToken* THIS )
{
  return ((ROGUEM71)(THIS->type->methods[i]))( THIS );
}

RogueCharacter call_ROGUEM72( int i, RogueClassToken* THIS )
{
  return ((ROGUEM72)(THIS->type->methods[i]))( THIS );
}

RogueInt32 call_ROGUEM73( int i, RogueClassToken* THIS )
{
  return ((ROGUEM73)(THIS->type->methods[i]))( THIS );
}

RogueInt64 call_ROGUEM74( int i, RogueClassToken* THIS )
{
  return ((ROGUEM74)(THIS->type->methods[i]))( THIS );
}

RogueReal64 call_ROGUEM75( int i, RogueClassToken* THIS )
{
  return ((ROGUEM75)(THIS->type->methods[i]))( THIS );
}

RogueClassType* call_ROGUEM76( int i, RogueClassToken* THIS )
{
  return ((ROGUEM76)(THIS->type->methods[i]))( THIS );
}

RogueClassToken* call_ROGUEM79( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2 )
{
  return ((ROGUEM79)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassToken* call_ROGUEM80( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2, RogueString* p3 )
{
  return ((ROGUEM80)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueClassToken* call_ROGUEM81( int i, RogueClassTokenType* THIS, RogueClassToken* p0, RogueString* p1 )
{
  return ((ROGUEM81)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueLogical call_ROGUEM82( int i, RogueClassTokenType* THIS )
{
  return ((ROGUEM82)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM118( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM118)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM119( int i, RogueClassCmd* THIS, RogueClassCmdStatementList* p0 )
{
  ((ROGUEM119)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM120( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM120)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM121( int i, RogueClassCmd* THIS, RogueClassType* p0, RogueClassScope* p1 )
{
  return ((ROGUEM121)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* call_ROGUEM122( int i, RogueClassCmd* THIS, RogueClassCloneArgs* p0 )
{
  return ((ROGUEM122)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM123( int i, RogueClassCmd* THIS, RogueClassType* p0 )
{
  return ((ROGUEM123)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM124( int i, RogueClassCmd* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM124)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM125( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  ((ROGUEM125)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM126( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM126)(THIS->type->methods[i]))( THIS );
}

RogueClassType* call_ROGUEM127( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM127)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM128( int i, RogueClassCmd* THIS )
{
  ((ROGUEM128)(THIS->type->methods[i]))( THIS );
}

RogueClassType* call_ROGUEM129( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM129)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM130( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassCmd* p1 )
{
  return ((ROGUEM130)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* call_ROGUEM131( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueInt32 p1 )
{
  return ((ROGUEM131)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* call_ROGUEM132( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassTokenType* p1, RogueClassCmd* p2 )
{
  return ((ROGUEM132)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

void call_ROGUEM133( int i, RogueClassCmd* THIS, RogueClassCPPWriter* p0, RogueLogical p1 )
{
  ((ROGUEM133)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueCmd_List* call_ROGUEM163( int i, RogueCmd_List* THIS, RogueInt32 p0 )
{
  return ((ROGUEM163)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM213( int i, RogueClassFunction__RETURNSLogical* THIS )
{
  return ((ROGUEM213)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM293( int i, RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* p0 )
{
  return ((ROGUEM293)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM298( int i, RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* p0 )
{
  return ((ROGUEM298)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmdLabel* call_ROGUEM381( int i, RogueClassCloneArgs* THIS, RogueClassCmdLabel* p0 )
{
  return ((ROGUEM381)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM387( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM387)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM390( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM390)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM391( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2 )
{
  return ((ROGUEM391)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassCmd* call_ROGUEM392( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1 )
{
  return ((ROGUEM392)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueString* call_ROGUEM394( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM394)(THIS->type->methods[i]))( THIS );
}

RogueInt32 call_ROGUEM401( int i, RogueClassPropertyValue* THIS )
{
  return ((ROGUEM401)(THIS->type->methods[i]))( THIS );
}

RogueClassPropertyValue* call_ROGUEM404( int i, RogueClassPropertyValue* THIS, RogueString* p0 )
{
  return ((ROGUEM404)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM589( int i, RogueClassCmdComparison* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2, RogueLogical p3 )
{
  return ((ROGUEM589)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueInt32 call_ROGUEM594( int i, RogueClassCmdRange* THIS )
{
  return ((ROGUEM594)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM644( int i, RogueClassCmdBinaryLogical* THIS )
{
  return ((ROGUEM644)(THIS->type->methods[i]))( THIS );
}

RogueLogical call_ROGUEM646( int i, RogueClassCmdBinaryLogical* THIS, RogueLogical p0, RogueLogical p1 )
{
  return ((ROGUEM646)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueString* call_ROGUEM706( int i, RogueClassCmdUnary* THIS )
{
  return ((ROGUEM706)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM709( int i, RogueClassCmdUnary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM709)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM966( int i, RogueClassVisitor* THIS )
{
  return ((ROGUEM966)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM967( int i, RogueClassVisitor* THIS, RogueClassType* p0 )
{
  ((ROGUEM967)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM968( int i, RogueClassVisitor* THIS, RogueClassMethod* p0 )
{
  ((ROGUEM968)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM969( int i, RogueClassVisitor* THIS, RogueClassCmdLiteralString* p0 )
{
  ((ROGUEM969)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM970( int i, RogueClassVisitor* THIS, RogueClassCmdThisContext* p0 )
{
  ((ROGUEM970)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM971( int i, RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* p0 )
{
  ((ROGUEM971)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassType* call_ROGUEM1036( int i, RogueClassCmdCall* THIS )
{
  return ((ROGUEM1036)(THIS->type->methods[i]))( THIS );
}

RogueLogical call_ROGUEM1163( int i, RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0 )
{
  return ((ROGUEM1163)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM1168( int i, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0, RogueClassCmdNamedArg* p1 )
{
  return ((ROGUEM1168)(THIS->type->methods[i]))( THIS, p0, p1 );
}

void call_ROGUEM1179( int i, RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* p0 )
{
  ((ROGUEM1179)(THIS->type->methods[i]))( THIS, p0 );
}


// GLOBAL PROPERTIES
RogueByte_List* RogueStringBuilder_work_bytes = 0;
RogueClassTable_String_TypeInfo_* RogueRuntime_type_info_lookup = 0;
RogueClassTable_String_String_* RogueToken_filepath_to_filename = 0;
RogueClassTable_String_TokenType_* RogueTokenType_lookup = 0;
RogueClassTokenType* RogueTokenType_directive_define = 0;
RogueClassTokenType* RogueTokenType_directive_include = 0;
RogueClassTokenType* RogueTokenType_directive_includeNativeCode = 0;
RogueClassTokenType* RogueTokenType_directive_includeNativeHeader = 0;
RogueClassTokenType* RogueTokenType_directive_if = 0;
RogueClassTokenType* RogueTokenType_directive_elseIf = 0;
RogueClassTokenType* RogueTokenType_directive_else = 0;
RogueClassTokenType* RogueTokenType_directive_endIf = 0;
RogueClassTokenType* RogueTokenType_directive_module = 0;
RogueClassTokenType* RogueTokenType_directive_requisite = 0;
RogueClassTokenType* RogueTokenType_directive_using = 0;
RogueClassTokenType* RogueTokenType_placeholder_id = 0;
RogueClassTokenType* RogueTokenType_begin_augment_tokens = 0;
RogueClassTokenType* RogueTokenType_keyword_augment = 0;
RogueClassTokenType* RogueTokenType_keyword_case = 0;
RogueClassTokenType* RogueTokenType_keyword_catch = 0;
RogueClassTokenType* RogueTokenType_keyword_CLASS = 0;
RogueClassTokenType* RogueTokenType_keyword_class = 0;
RogueClassTokenType* RogueTokenType_keyword_DEFINITIONS = 0;
RogueClassTokenType* RogueTokenType_keyword_else = 0;
RogueClassTokenType* RogueTokenType_keyword_elseIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endAugment = 0;
RogueClassTokenType* RogueTokenType_keyword_endBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_endClass = 0;
RogueClassTokenType* RogueTokenType_keyword_endContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_endForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_endFunction = 0;
RogueClassTokenType* RogueTokenType_keyword_endIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_endRoutine = 0;
RogueClassTokenType* RogueTokenType_keyword_endTry = 0;
RogueClassTokenType* RogueTokenType_keyword_endUnitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_ENUMERATE = 0;
RogueClassTokenType* RogueTokenType_keyword_GLOBAL = 0;
RogueClassTokenType* RogueTokenType_keyword_method = 0;
RogueClassTokenType* RogueTokenType_keyword_METHODS = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeCode = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeHeader = 0;
RogueClassTokenType* RogueTokenType_keyword_others = 0;
RogueClassTokenType* RogueTokenType_keyword_PROPERTIES = 0;
RogueClassTokenType* RogueTokenType_keyword_routine = 0;
RogueClassTokenType* RogueTokenType_keyword_satisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_unsatisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_with = 0;
RogueClassTokenType* RogueTokenType_symbol_close_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_close_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_close_comment = 0;
RogueClassTokenType* RogueTokenType_symbol_close_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_close_specialize = 0;
RogueClassTokenType* RogueTokenType_eol = 0;
RogueClassTokenType* RogueTokenType_eoi = 0;
RogueClassTokenType* RogueTokenType_keyword_assert = 0;
RogueClassTokenType* RogueTokenType_keyword_await = 0;
RogueClassTokenType* RogueTokenType_keyword_block = 0;
RogueClassTokenType* RogueTokenType_keyword_contingent = 0;
RogueClassTokenType* RogueTokenType_keyword_ensure = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeIf = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeTry = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_forEach = 0;
RogueClassTokenType* RogueTokenType_keyword_function = 0;
RogueClassTokenType* RogueTokenType_keyword_global = 0;
RogueClassTokenType* RogueTokenType_keyword_if = 0;
RogueClassTokenType* RogueTokenType_keyword_in = 0;
RogueClassTokenType* RogueTokenType_keyword_infinity = 0;
RogueClassTokenType* RogueTokenType_keyword_is = 0;
RogueClassTokenType* RogueTokenType_keyword_isNot = 0;
RogueClassTokenType* RogueTokenType_keyword_isReference = 0;
RogueClassTokenType* RogueTokenType_keyword_local = 0;
RogueClassTokenType* RogueTokenType_keyword_loop = 0;
RogueClassTokenType* RogueTokenType_keyword_NaN = 0;
RogueClassTokenType* RogueTokenType_keyword_native = 0;
RogueClassTokenType* RogueTokenType_keyword_necessary = 0;
RogueClassTokenType* RogueTokenType_keyword_nextIteration = 0;
RogueClassTokenType* RogueTokenType_keyword_noAction = 0;
RogueClassTokenType* RogueTokenType_keyword_null = 0;
RogueClassTokenType* RogueTokenType_keyword_of = 0;
RogueClassTokenType* RogueTokenType_keyword_require = 0;
RogueClassTokenType* RogueTokenType_keyword_return = 0;
RogueClassTokenType* RogueTokenType_keyword_select = 0;
RogueClassTokenType* RogueTokenType_keyword_step = 0;
RogueClassTokenType* RogueTokenType_keyword_sufficient = 0;
RogueClassTokenType* RogueTokenType_keyword_throw = 0;
RogueClassTokenType* RogueTokenType_keyword_trace = 0;
RogueClassTokenType* RogueTokenType_keyword_trace_position = 0;
RogueClassTokenType* RogueTokenType_keyword_try = 0;
RogueClassTokenType* RogueTokenType_keyword_unitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_which = 0;
RogueClassTokenType* RogueTokenType_keyword_while = 0;
RogueClassTokenType* RogueTokenType_keyword_yield = 0;
RogueClassTokenType* RogueTokenType_identifier = 0;
RogueClassTokenType* RogueTokenType_type_identifier = 0;
RogueClassTokenType* RogueTokenType_literal_character = 0;
RogueClassTokenType* RogueTokenType_literal_integer = 0;
RogueClassTokenType* RogueTokenType_literal_long = 0;
RogueClassTokenType* RogueTokenType_literal_real = 0;
RogueClassTokenType* RogueTokenType_literal_string = 0;
RogueClassTokenType* RogueTokenType_keyword_and = 0;
RogueClassTokenType* RogueTokenType_keyword_as = 0;
RogueClassTokenType* RogueTokenType_keyword_downTo = 0;
RogueClassTokenType* RogueTokenType_keyword_false = 0;
RogueClassTokenType* RogueTokenType_keyword_instanceOf = 0;
RogueClassTokenType* RogueTokenType_keyword_meta = 0;
RogueClassTokenType* RogueTokenType_keyword_not = 0;
RogueClassTokenType* RogueTokenType_keyword_notInstanceOf = 0;
RogueClassTokenType* RogueTokenType_keyword_or = 0;
RogueClassTokenType* RogueTokenType_keyword_pi = 0;
RogueClassTokenType* RogueTokenType_keyword_prior = 0;
RogueClassTokenType* RogueTokenType_keyword_this = 0;
RogueClassTokenType* RogueTokenType_keyword_true = 0;
RogueClassTokenType* RogueTokenType_keyword_xor = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_at = 0;
RogueClassTokenType* RogueTokenType_symbol_at_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_at_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_backslash = 0;
RogueClassTokenType* RogueTokenType_symbol_caret = 0;
RogueClassTokenType* RogueTokenType_symbol_caret_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_colon = 0;
RogueClassTokenType* RogueTokenType_symbol_comma = 0;
RogueClassTokenType* RogueTokenType_symbol_compare = 0;
RogueClassTokenType* RogueTokenType_symbol_dot = 0;
RogueClassTokenType* RogueTokenType_symbol_dot_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_downToGreaterThan = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_braces = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_brackets = 0;
RogueClassTokenType* RogueTokenType_symbol_eq = 0;
RogueClassTokenType* RogueTokenType_symbol_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_exclamation_point = 0;
RogueClassTokenType* RogueTokenType_symbol_fat_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_ge = 0;
RogueClassTokenType* RogueTokenType_symbol_gt = 0;
RogueClassTokenType* RogueTokenType_symbol_le = 0;
RogueClassTokenType* RogueTokenType_symbol_lt = 0;
RogueClassTokenType* RogueTokenType_symbol_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_ne = 0;
RogueClassTokenType* RogueTokenType_symbol_open_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_open_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_open_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_open_specialize = 0;
RogueClassTokenType* RogueTokenType_symbol_percent = 0;
RogueClassTokenType* RogueTokenType_symbol_percent_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_question_mark = 0;
RogueClassTokenType* RogueTokenType_symbol_semicolon = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_left = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right_x = 0;
RogueClassTokenType* RogueTokenType_symbol_slash = 0;
RogueClassTokenType* RogueTokenType_symbol_slash_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_times = 0;
RogueClassTokenType* RogueTokenType_symbol_times_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_upTo = 0;
RogueClassTokenType* RogueTokenType_symbol_upToLessThan = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_vertical_bar = 0;
RogueClassCmdStatementList* RogueCmdStatementList_current = 0;
RogueString_List* RogueSystem_command_line_arguments = 0;
RogueString* RogueSystem_executable_filepath = 0;
RogueClassSystemEnvironment RogueSystem_environment = RogueClassSystemEnvironment();
RogueClassTable_String_Token_List_* RoguePreprocessor_definitions = 0;
RogueClassStringProperty* RogueStringProperty_empty_string = 0;

void RogueException_trace( void* obj );
void RogueStackTrace_trace( void* obj );
void RogueString_List_trace( void* obj );
void RogueTypeInfo_trace( void* obj );
void RoguePropertyInfo_List_trace( void* obj );
void RogueStringBuilder_trace( void* obj );
void RogueByte_List_trace( void* obj );
void RogueCharacter_List_trace( void* obj );
void RogueTable_String_String__trace( void* obj );
void RogueTableEntry_String_String__List_trace( void* obj );
void RogueTableEntry_String_String__trace( void* obj );
void RogueStringReader_trace( void* obj );
void RogueTable_String_TypeInfo__trace( void* obj );
void RogueTableEntry_String_TypeInfo__List_trace( void* obj );
void RogueTableEntry_String_TypeInfo__trace( void* obj );
void RogueGlobal_trace( void* obj );
void RogueFunction___List_trace( void* obj );
void RogueConsole_trace( void* obj );
void RogueRogueC_trace( void* obj );
void RogueTable_String_Logical__trace( void* obj );
void RogueTableEntry_String_Logical__List_trace( void* obj );
void RogueTableEntry_String_Logical__trace( void* obj );
void RogueParser_List_trace( void* obj );
void RogueParser_trace( void* obj );
void RogueTokenReader_trace( void* obj );
void RogueToken_List_trace( void* obj );
void RogueToken_trace( void* obj );
void RogueTokenType_trace( void* obj );
void RogueTable_String_TokenType__trace( void* obj );
void RogueTableEntry_String_TokenType__List_trace( void* obj );
void RogueTableEntry_String_TokenType__trace( void* obj );
void RogueType_trace( void* obj );
void RogueAttributes_trace( void* obj );
void RogueTemplate_trace( void* obj );
void RogueTypeParameter_List_trace( void* obj );
void RogueTypeParameter_trace( void* obj );
void RogueTable_Int32_Template__trace( void* obj );
void RogueTableEntry_Int32_Template__List_trace( void* obj );
void RogueTableEntry_Int32_Template__trace( void* obj );
void RogueInt32_List_trace( void* obj );
void RogueType_List_trace( void* obj );
void RogueTypeSpecializer_List_trace( void* obj );
void RogueTypeSpecializer_trace( void* obj );
void RogueDefinition_List_trace( void* obj );
void RogueDefinition_trace( void* obj );
void RogueCmd_trace( void* obj );
void RogueTable_String_Definition__trace( void* obj );
void RogueTableEntry_String_Definition__List_trace( void* obj );
void RogueTableEntry_String_Definition__trace( void* obj );
void RogueProperty_List_trace( void* obj );
void RogueProperty_trace( void* obj );
void RogueTable_String_Property__trace( void* obj );
void RogueTableEntry_String_Property__List_trace( void* obj );
void RogueTableEntry_String_Property__trace( void* obj );
void RogueMethod_List_trace( void* obj );
void RogueMethod_trace( void* obj );
void RogueLocal_List_trace( void* obj );
void RogueLocal_trace( void* obj );
void RogueCmdStatementList_trace( void* obj );
void RogueCmd_List_trace( void* obj );
void RogueCmdLabel_List_trace( void* obj );
void RogueCmdLabel_trace( void* obj );
void RogueTable_String_CmdLabel__trace( void* obj );
void RogueTableEntry_String_CmdLabel__List_trace( void* obj );
void RogueTableEntry_String_CmdLabel__trace( void* obj );
void RogueMethodTemplate_trace( void* obj );
void RogueMethodTemplate_List_trace( void* obj );
void RogueTable_String_Method_List__trace( void* obj );
void RogueTableEntry_String_Method_List__List_trace( void* obj );
void RogueTableEntry_String_Method_List__trace( void* obj );
void RogueTable_String_Method__trace( void* obj );
void RogueTableEntry_String_Method__List_trace( void* obj );
void RogueTableEntry_String_Method__trace( void* obj );
void RogueMethodTemplates_trace( void* obj );
void RogueTable_String_ParseReader__trace( void* obj );
void RogueTableEntry_String_ParseReader__List_trace( void* obj );
void RogueTableEntry_String_ParseReader__trace( void* obj );
void RogueParseReader_trace( void* obj );
void RoguePlugin_List_trace( void* obj );
void RoguePlugin_trace( void* obj );
void RogueProgram_trace( void* obj );
void RogueTemplate_List_trace( void* obj );
void RogueTable_String_Template__trace( void* obj );
void RogueTableEntry_String_Template__List_trace( void* obj );
void RogueTableEntry_String_Template__trace( void* obj );
void RogueTable_String_Augment_List__trace( void* obj );
void RogueTableEntry_String_Augment_List__List_trace( void* obj );
void RogueTableEntry_String_Augment_List__trace( void* obj );
void RogueAugment_List_trace( void* obj );
void RogueAugment_trace( void* obj );
void RogueTable_String_Type__trace( void* obj );
void RogueTableEntry_String_Type__List_trace( void* obj );
void RogueTableEntry_String_Type__trace( void* obj );
void RogueTable_String_Int32__trace( void* obj );
void RogueTableEntry_String_Int32__List_trace( void* obj );
void RogueTableEntry_String_Int32__trace( void* obj );
void RogueTable_String_String_List__trace( void* obj );
void RogueTableEntry_String_String_List__List_trace( void* obj );
void RogueTableEntry_String_String_List__trace( void* obj );
void RogueError_trace( void* obj );
void RogueRogueError_trace( void* obj );
void RogueCmdAccess_trace( void* obj );
void RogueCmdArgs_trace( void* obj );
void RogueCmdNamedArg_List_trace( void* obj );
void RogueCmdNamedArg_trace( void* obj );
void RogueCmdReturn_trace( void* obj );
void RogueCmdStatement_trace( void* obj );
void RogueScope_trace( void* obj );
void RogueCmdControlStructure_List_trace( void* obj );
void RogueCmdControlStructure_trace( void* obj );
void RogueCmdTaskControlSection_trace( void* obj );
void RogueCPPWriter_trace( void* obj );
void RogueFile_trace( void* obj );
void RogueCmdMakeRequisite_trace( void* obj );
void RogueLineReader_trace( void* obj );
void RogueTokenizer_trace( void* obj );
void RoguePreprocessor_trace( void* obj );
void RogueTable_String_Token_List__trace( void* obj );
void RogueTableEntry_String_Token_List__List_trace( void* obj );
void RogueTableEntry_String_Token_List__trace( void* obj );
void RoguePreprocessorTokenReader_trace( void* obj );
void RogueLiteralCharacterToken_trace( void* obj );
void RogueLiteralInt64Token_trace( void* obj );
void RogueLiteralInt32Token_trace( void* obj );
void RogueLiteralReal64Token_trace( void* obj );
void RogueStringDataToken_trace( void* obj );
void RogueEOLToken_trace( void* obj );
void RogueCmdLiteralLogical_trace( void* obj );
void RogueCmdLiteral_trace( void* obj );
void RogueCmdLiteralInt32_trace( void* obj );
void RogueCmdAdd_trace( void* obj );
void RogueCmdBinary_trace( void* obj );
void RoguePropertyTable_trace( void* obj );
void RogueTable_String_PropertyValue__trace( void* obj );
void RogueTableEntry_String_PropertyValue__List_trace( void* obj );
void RogueTableEntry_String_PropertyValue__trace( void* obj );
void RogueCmdNativeHeader_trace( void* obj );
void RogueCmdNativeCode_trace( void* obj );
void RogueCmdIf_trace( void* obj );
void RogueCmdWhich_trace( void* obj );
void RogueCmdWhichCase_List_trace( void* obj );
void RogueCmdWhichCase_trace( void* obj );
void RogueCmdBlock_trace( void* obj );
void RogueCmdContingent_trace( void* obj );
void RogueCmdGenericLoop_trace( void* obj );
void RogueCmdTry_trace( void* obj );
void RogueCmdCatch_List_trace( void* obj );
void RogueCmdCatch_trace( void* obj );
void RogueCmdAwait_trace( void* obj );
void RogueCmdYield_trace( void* obj );
void RogueCmdThrow_trace( void* obj );
void RogueCmdLiteralString_trace( void* obj );
void RogueCmdFormattedString_trace( void* obj );
void RogueCmdTrace_trace( void* obj );
void RogueCmdLocalDeclaration_trace( void* obj );
void RogueCmdAssert_trace( void* obj );
void RogueCmdEscape_trace( void* obj );
void RogueCmdNextIteration_trace( void* obj );
void RogueCmdNecessary_trace( void* obj );
void RogueCmdSufficient_trace( void* obj );
void RogueCmdAdjust_trace( void* obj );
void RogueCmdAssign_trace( void* obj );
void RogueCmdModifyAndAssign_trace( void* obj );
void RogueCmdAdjustLocal_trace( void* obj );
void RogueCmdReadLocal_trace( void* obj );
void RogueCmdCompareLE_trace( void* obj );
void RogueCmdComparison_trace( void* obj );
void RogueCmdRange_trace( void* obj );
void RogueCmdModifyAndAssignLocal_trace( void* obj );
void RogueCmdResolvedModifyAndAssign_trace( void* obj );
void RogueCmdRangeUpTo_trace( void* obj );
void RogueCmdRangeUpToLessThan_trace( void* obj );
void RogueCmdCompareLT_trace( void* obj );
void RogueCmdCompareGE_trace( void* obj );
void RogueCmdForEach_trace( void* obj );
void RogueCmdRangeDownTo_trace( void* obj );
void RogueCmdLogicalXor_trace( void* obj );
void RogueCmdBinaryLogical_trace( void* obj );
void RogueCmdLogicalOr_trace( void* obj );
void RogueCmdLogicalAnd_trace( void* obj );
void RogueCmdCompareEQ_trace( void* obj );
void RogueCmdCompareIs_trace( void* obj );
void RogueCmdCompareNE_trace( void* obj );
void RogueCmdCompareIsNot_trace( void* obj );
void RogueCmdCompareGT_trace( void* obj );
void RogueCmdInstanceOf_trace( void* obj );
void RogueCmdTypeOperator_trace( void* obj );
void RogueCmdLogicalNot_trace( void* obj );
void RogueCmdUnary_trace( void* obj );
void RogueCmdBitwiseXor_trace( void* obj );
void RogueCmdBitwiseOp_trace( void* obj );
void RogueCmdBitwiseOr_trace( void* obj );
void RogueCmdBitwiseAnd_trace( void* obj );
void RogueCmdBitwiseShiftLeft_trace( void* obj );
void RogueCmdBitwiseShiftRight_trace( void* obj );
void RogueCmdBitwiseShiftRightX_trace( void* obj );
void RogueCmdSubtract_trace( void* obj );
void RogueCmdMultiply_trace( void* obj );
void RogueCmdDivide_trace( void* obj );
void RogueCmdMod_trace( void* obj );
void RogueCmdPower_trace( void* obj );
void RogueCmdNegate_trace( void* obj );
void RogueCmdBitwiseNot_trace( void* obj );
void RogueCmdLogicalize_trace( void* obj );
void RogueCmdIsReference_trace( void* obj );
void RogueCmdElementAccess_trace( void* obj );
void RogueCmdListConvert_trace( void* obj );
void RogueCmdConvertToType_trace( void* obj );
void RogueCmdCreateCallback_trace( void* obj );
void RogueCmdAs_trace( void* obj );
void RogueCmdDefaultValue_trace( void* obj );
void RogueCmdLiteralNull_trace( void* obj );
void RogueCmdLiteralReal64_trace( void* obj );
void RogueCmdLiteralInt64_trace( void* obj );
void RogueCmdLiteralCharacter_trace( void* obj );
void RogueCmdLiteralThis_trace( void* obj );
void RogueCmdThisContext_trace( void* obj );
void RogueCmdCreateList_trace( void* obj );
void RogueCmdCallPriorMethod_trace( void* obj );
void RogueFnParam_List_trace( void* obj );
void RogueFnParam_trace( void* obj );
void RogueFnArg_List_trace( void* obj );
void RogueFnArg_trace( void* obj );
void RogueCmdCreateFunction_trace( void* obj );
void RogueCmdInlineNative_trace( void* obj );
void RogueCmdSelect_trace( void* obj );
void RogueCmdSelectCase_List_trace( void* obj );
void RogueCmdSelectCase_trace( void* obj );
void RogueCmdRequire_trace( void* obj );
void RogueCmdEnsure_trace( void* obj );
void RogueCmdTypedLiteralList_trace( void* obj );
void RogueListRebuilder_Token__trace( void* obj );
void RogueCmdCreateCompound_trace( void* obj );
void RogueCmdSwitch_trace( void* obj );
void RogueCmdCreateObject_trace( void* obj );
void RogueCmdReadSingleton_trace( void* obj );
void RogueCmdWriteSingleton_trace( void* obj );
void RogueCmdWriteLocal_trace( void* obj );
void RogueCmdReadGlobal_trace( void* obj );
void RogueCmdWriteGlobal_trace( void* obj );
void RogueCmdReadProperty_trace( void* obj );
void RogueCmdWriteProperty_trace( void* obj );
void RogueCmdCall_trace( void* obj );
void RogueCmdCallDynamicMethod_trace( void* obj );
void RogueCmdCallMethod_trace( void* obj );
void RogueCmdAdjustProperty_trace( void* obj );
void RogueCmdAdjustGlobal_trace( void* obj );
void RogueCmdModifyAndAssignGlobal_trace( void* obj );
void RogueCmdModifyAndAssignProperty_trace( void* obj );
void RogueCmdCreateArray_trace( void* obj );
void RogueCmdReadArrayElement_trace( void* obj );
void RogueCmdReadArrayCount_trace( void* obj );
void RogueCmdWriteArrayElement_trace( void* obj );
void RogueCmdTaskControl_trace( void* obj );
void RogueCmdTaskControlSection_List_trace( void* obj );
void RogueCmdNoAction_trace( void* obj );
void RogueUpdateThisTypeVisitor_trace( void* obj );
void RogueTable_String_TypeSpecializer__trace( void* obj );
void RogueTableEntry_String_TypeSpecializer__List_trace( void* obj );
void RogueTableEntry_String_TypeSpecializer__trace( void* obj );
void RogueCmdCastToType_trace( void* obj );
void RogueCloneMethodArgs_trace( void* obj );
void RogueTaskArgs_trace( void* obj );
void RogueRequirementError_trace( void* obj );
void RogueToken_List_List_trace( void* obj );
void RogueMacroArgs_trace( void* obj );
void RogueTable_String_Cmd__trace( void* obj );
void RogueTableEntry_String_Cmd__List_trace( void* obj );
void RogueTableEntry_String_Cmd__trace( void* obj );
void RogueListRebuilder_CmdNamedArg__trace( void* obj );
void RogueCmdCallInlineNativeRoutine_trace( void* obj );
void RogueCmdCallInlineNative_trace( void* obj );
void RogueCmdCallNativeRoutine_trace( void* obj );
void RogueCmdCallRoutine_trace( void* obj );
void RogueCmdCallInlineNativeMethod_trace( void* obj );
void RogueCmdCallNativeMethod_trace( void* obj );
void RogueCmdCallAspectMethod_trace( void* obj );
void RogueCandidateMethods_trace( void* obj );
void RogueIOError_trace( void* obj );
void RogueFileReader_trace( void* obj );
void RogueFileWriter_trace( void* obj );
void RogueUTF8Reader_trace( void* obj );
void RogueDirectiveTokenType_trace( void* obj );
void RogueStructuralDirectiveTokenType_trace( void* obj );
void RogueEOLTokenType_trace( void* obj );
void RogueStructureTokenType_trace( void* obj );
void RogueNativeCodeTokenType_trace( void* obj );
void RogueModifyAndAssignTokenType_trace( void* obj );
void RogueStringProperty_trace( void* obj );
void RogueCmdConvertToPrimitiveType_trace( void* obj );
void RogueListReader_CmdSelectCase__trace( void* obj );
void RogueCmdCallStaticMethod_trace( void* obj );
void RogueNativeCodeToken_trace( void* obj );

void RogueException_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassException*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassException*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStackTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStackTrace*)obj)->entries)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueString_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueString_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeInfo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeInfo*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueTypeInfo*)obj)->global_properties)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueTypeInfo*)obj)->properties)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePropertyInfo_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RoguePropertyInfo_List*)obj)->data)) RogueArray_trace( link );
}

void RogueStringBuilder_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueStringBuilder*)obj)->utf8)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueByte_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueByte_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCharacter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCharacter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_String__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_String__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->value)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringReader*)obj)->string)) RogueString_trace( link );
}

void RogueTable_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeInfo__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TypeInfo__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassGlobal*)obj)->standard_output)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->global_output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->exit_functions)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFunction___List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFunction___List*)obj)->data)) RogueArray_trace( link );
}

void RogueConsole_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassConsole*)obj)->output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRogueC_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueC*)obj)->included_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->compile_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->target_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->libraries_folder)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->source_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->first_filepath)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->output_filepath)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->supported_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->requisite_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->execute_args)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->package_name)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->parsers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->parsereaders_by_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->stopwatch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->plugins)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Logical_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Logical_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Logical__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Logical__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueParser_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueParser_List*)obj)->data)) RogueArray_trace( link );
}

void RogueParser_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParser*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassParser*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->local_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->cur_statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->used_modules)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->module_id_map)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List*)obj)->data)) RogueArray_trace( link );
}

void RogueToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassToken*)obj)->filepath)) RogueString_trace( link );
}

void RogueTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueTable_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TokenType_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TokenType_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TokenType__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TokenType__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->specializers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->extended_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_element_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->prev_enum_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->callback_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_callback_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_templates)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->cpp_name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->cpp_class_name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->cpp_type_name)) RogueString_trace( link );
}

void RogueAttributes_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAttributes*)obj)->tags)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassTemplate*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->alternates_by_param_count)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->_routine_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->routine_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeParameter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeParameter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeParameter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeParameter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTypeParameter*)obj)->name)) RogueString_trace( link );
}

void RogueTable_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Int32_Template_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Int32_Template_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Int32_Template__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_Int32_Template__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueInt32_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueInt32_List*)obj)->data)) RogueArray_trace( link );
}

void RogueType_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueType_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeSpecializer_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeSpecializer_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeSpecializer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeSpecializer*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassTypeSpecializer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueDefinition_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueDefinition_List*)obj)->data)) RogueArray_trace( link );
}

void RogueDefinition_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDefinition*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassDefinition*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassDefinition*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Definition_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Definition_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Definition__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Definition__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProperty_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueProperty_List*)obj)->data)) RogueArray_trace( link );
}

void RogueProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassProperty*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->cpp_name)) RogueString_trace( link );
}

void RogueTable_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Property_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Property_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Property__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Property__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethod_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethod_List*)obj)->data)) RogueArray_trace( link );
}

void RogueMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->signature)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_task_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->locals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->aspect_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->incorporating_classes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overridden_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overriding_methods)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->native_code)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->label_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->label_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cur_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->unspecialized_name)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->cpp_name)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->cpp_typedef)) RogueString_trace( link );
}

void RogueLocal_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueLocal_List*)obj)->data)) RogueArray_trace( link );
}

void RogueLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassLocal*)obj)->original_name)) RogueString_trace( link );
  if ((link=((RogueClassLocal*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->_cpp_name)) RogueString_trace( link );
}

void RogueCmdStatementList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatementList*)obj)->data)) RogueArray_trace( link );
}

void RogueCmd_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmd_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLabel_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdLabel_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLabel_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLabel*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLabel*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdLabel*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_CmdLabel__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_CmdLabel__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->template_tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->overridden_m)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->overrides)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethodTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Method_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Method__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplates_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplates*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplates*)obj)->templates)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_ParseReader__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_ParseReader__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueParseReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParseReader*)obj)->data)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePlugin_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RoguePlugin_List*)obj)->data)) RogueArray_trace( link );
}

void RoguePlugin_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPlugin*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassPlugin*)obj)->collect_supported_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->generate_additonal_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram*)obj)->code_prefix)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->program_name)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->template_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->template_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->augment_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->first_filepath)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->m_on_launch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->m_run_tests)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->global_properties)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_header)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->methods_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Byte)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Logical)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Object)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_String)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_NativeArray)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_GenericList)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Exception)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_StringBuilder)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_TypeInfo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->ids_by_module)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Template_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Template_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Template__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Template__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Augment_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Augment_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueAugment_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueAugment_List*)obj)->data)) RogueArray_trace( link );
}

void RogueAugment_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAugment*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassAugment*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Type_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Type_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Type__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Type__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Int32_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Int32_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Int32__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Int32__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_String_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_String_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassRogueError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueError*)obj)->filepath)) RogueString_trace( link );
}

void RogueCmdAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdAccess*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdArgs*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdNamedArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNamedArg*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReturn_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReturn*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReturn*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdStatement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueScope_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassScope*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_body)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_statement)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->_implicit_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->local_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->control_stack)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdControlStructure_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdControlStructure_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdControlStructure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdControlStructure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControlSection*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCPPWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCPPWriter*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassCPPWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->trace_token)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->temp_buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFile_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFile*)obj)->filepath)) RogueString_trace( link );
}

void RogueCmdMakeRequisite_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMakeRequisite*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMakeRequisite*)obj)->pattern)) RogueString_trace( link );
}

void RogueLineReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLineReader*)obj)->source)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLineReader*)obj)->next)) RogueString_trace( link );
  if ((link=((RogueClassLineReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenizer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenizer*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassTokenizer*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->next_filepath)) RogueString_trace( link );
}

void RoguePreprocessor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessor*)obj)->parser)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->cur_module)) RogueString_trace( link );
}

void RogueTable_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Token_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Token_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Token_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Token_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePreprocessorTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->queue)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralCharacterToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralCharacterToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralCharacterToken*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralInt64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt64Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralInt32Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt32Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt32Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralReal64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralReal64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralReal64Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueStringDataToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringDataToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringDataToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassStringDataToken*)obj)->value)) RogueString_trace( link );
}

void RogueEOLToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassEOLToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassEOLToken*)obj)->comment)) RogueString_trace( link );
}

void RogueCmdLiteralLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteral_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteral*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt32_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt32*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePropertyTable_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPropertyTable*)obj)->values)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_PropertyValue__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_PropertyValue_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_PropertyValue_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_PropertyValue__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_PropertyValue__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_PropertyValue__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_PropertyValue_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_PropertyValue_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_PropertyValue_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNativeHeader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeHeader*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeHeader*)obj)->code)) RogueString_trace( link );
}

void RogueCmdNativeCode_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeCode*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeCode*)obj)->code)) RogueString_trace( link );
}

void RogueCmdIf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdIf*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdIf*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->else_statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhich_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhich*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdWhich*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhichCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdWhichCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdWhichCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhichCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBlock_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBlock*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdBlock*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdContingent_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdContingent*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdGenericLoop_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdGenericLoop*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->control_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTry_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTry*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdTry*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdTry*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->catches)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCatch_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdCatch_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdCatch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCatch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->error_var)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAwait_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAwait*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->result_var)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdYield_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdYield*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThrow_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThrow*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThrow*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralString*)obj)->value)) RogueString_trace( link );
}

void RogueCmdFormattedString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdFormattedString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->format)) RogueString_trace( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTrace*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTrace*)obj)->info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLocalDeclaration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssert_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssert*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEscape_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEscape*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEscape*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNextIteration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNextIteration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNextIteration*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNecessary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNecessary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSufficient_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSufficient*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjust_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjust*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjust*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareLE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdComparison_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdComparison*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRange_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRange*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdResolvedModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpToLessThan_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareLT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdForEach_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdForEach*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->control_var_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->index_var_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->collection)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->step_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeDownTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeDownTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinaryLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinaryLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareEQ_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareEQ*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareNE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareNE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIsNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIsNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInstanceOf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInstanceOf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTypeOperator_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypeOperator*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdUnary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdUnary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdUnary*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOp_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOp*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftLeft_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRight_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRightX_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSubtract_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSubtract*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMultiply_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMultiply*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDivide_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDivide*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdPower_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdPower*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNegate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNegate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNegate*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalize_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalize*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalize*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdIsReference_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIsReference*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIsReference*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdElementAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdElementAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdListConvert_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdListConvert*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->_to_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->convert_fn)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdConvertToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdConvertToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCallback_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCallback*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->signature)) RogueString_trace( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDefaultValue_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDefaultValue*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDefaultValue*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralNull_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralNull*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralReal64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralReal64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralCharacter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralCharacter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralThis_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralThis*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralThis*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThisContext_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThisContext*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThisContext*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->_list_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallPriorMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnParam_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnParam_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFnParam_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnParam*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassFnParam*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFnArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnArg*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassFnArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFnArg*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateFunction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateFunction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->with_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->code)) RogueString_trace( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->modify_op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelect_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelect*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->_value_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelectCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdSelectCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdSelectCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelectCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRequire_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRequire*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEnsure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEnsure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_read)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_write)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTypedLiteralList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->list_type_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->elements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRebuilder_Token__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRebuilder_Token_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCompound_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCompound*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSwitch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSwitch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdSwitch*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateObject_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateObject*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateObject*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCall_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCall*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallDynamicMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateArray_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateArray*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->count_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayCount_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayCount*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControl_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControl*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->sections)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->current_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdTaskControlSection_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNoAction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNoAction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUpdateThisTypeVisitor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeSpecializer__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TypeSpecializer__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCastToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCastToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCloneMethodArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCloneMethodArgs*)obj)->cloned_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTaskArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTaskArgs*)obj)->_task_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->task_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->_original_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->original_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->cmd_task_control)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->context_property)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->ip_property)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRequirementError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRequirementError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassRequirementError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List_List*)obj)->data)) RogueArray_trace( link );
}

void RogueMacroArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMacroArgs*)obj)->this_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->arg_lookup)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Cmd_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Cmd_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Cmd__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Cmd__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRebuilder_CmdNamedArg__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRebuilder_CmdNamedArg_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallAspectMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCandidateMethods_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCandidateMethods*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->access)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->available)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->compatible)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueIOError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassIOError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassIOError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileReader*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassFileReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileWriter*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassFileWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUTF8Reader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUTF8Reader*)obj)->byte_reader)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDirectiveTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueStructuralDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructuralDirectiveTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueEOLTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueStructureTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructureTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueNativeCodeTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueModifyAndAssignTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassModifyAndAssignTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueStringProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringProperty*)obj)->value)) RogueString_trace( link );
}

void RogueCmdConvertToPrimitiveType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListReader_CmdSelectCase__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListReader_CmdSelectCase_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallStaticMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueNativeCodeToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->value)) RogueString_trace( link );
}


int Rogue_type_name_index_table[] =
{
  70,63,64,762,833,68,883,67,59,62,58,66,834,763,884,65,
  835,61,885,836,60,886,56,764,837,738,887,765,1298,1299,446,766,
  838,739,888,69,1300,1301,839,767,889,768,1302,933,797,769,840,740,
  890,860,791,773,842,772,771,770,841,741,891,892,790,774,777,843,
  775,893,776,844,742,894,845,895,846,896,847,778,897,848,779,384,
  898,780,849,743,899,850,781,900,782,851,744,901,857,786,852,783,
  902,1161,853,903,854,948,904,784,855,745,905,785,856,906,907,787,
  858,747,908,788,859,748,909,789,910,793,861,749,792,911,794,862,
  796,795,912,804,863,913,798,864,752,914,800,866,753,865,799,915,
  916,801,867,754,917,802,868,755,918,803,869,756,919,1286,1296,950,
  1162,870,949,920,1173,951,806,871,1174,805,921,807,1184,1185,808,809,
  810,1303,1304,811,952,812,1166,813,816,814,872,757,922,815,936,937,
  938,939,940,941,1186,953,1187,817,1210,954,307,818,819,873,758,923,
  955,956,1176,1177,874,957,924,1178,1179,1180,1181,875,958,925,959,960,
  961,1188,962,963,1175,964,965,966,967,968,969,970,971,972,973,1227,
  1211,974,1245,975,1242,1243,1228,1229,1182,1244,1248,1197,1249,1250,1230,1231,
  1232,1233,1234,1251,976,1257,977,1264,1212,1265,1266,1267,1268,1269,1213,1214,
  1215,1216,1217,1258,1259,1260,978,979,980,1252,981,1253,1189,1190,1191,1192,
  1193,1271,982,983,984,876,820,926,877,821,927,985,986,988,878,987,
  928,989,990,991,822,992,386,1183,993,994,1289,1290,995,996,997,998,
  999,1280,1274,1291,1292,1246,1247,1000,1293,1001,1294,1002,879,929,1295,1272,
  823,880,760,930,1254,1273,1194,1195,1072,881,931,1196,824,882,761,932,
  825,826,827,828,1284,1275,1276,1277,1285,1278,1279,829,1282,1283,1297,830,
  831,832,942,943,944,945,946,947,1223,1224,1270,1287,1305,1281,1288,1306,
  1307,1308,1309
};
RogueInitFn Rogue_init_object_fn_table[] =
{
  (RogueInitFn) RogueException__init_object,
  0,
  0,
  (RogueInitFn) RogueStackTrace__init_object,
  (RogueInitFn) RogueString_List__init_object,
  (RogueInitFn) RogueGenericList__init_object,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueTypeInfo__init_object,
  (RogueInitFn) RoguePropertyInfo_List__init_object,
  (RogueInitFn) RoguePropertyInfo__init_object,
  0,
  (RogueInitFn) RogueStringBuilder__init_object,
  (RogueInitFn) RogueByte_List__init_object,
  0,
  0,
  (RogueInitFn) RogueCharacter_List__init_object,
  0,
  0,
  0,
  (RogueInitFn) RogueTable_String_String___init_object,
  (RogueInitFn) RogueTableEntry_String_String__List__init_object,
  (RogueInitFn) RogueTableEntry_String_String___init_object,
  0,
  (RogueInitFn) RogueStringReader__init_object,
  0,
  0,
  (RogueInitFn) RogueRuntime__init_object,
  (RogueInitFn) RogueTable_String_TypeInfo___init_object,
  (RogueInitFn) RogueTableEntry_String_TypeInfo__List__init_object,
  (RogueInitFn) RogueTableEntry_String_TypeInfo___init_object,
  0,
  (RogueInitFn) RogueGlobal__init_object,
  0,
  0,
  (RogueInitFn) RogueFunction___List__init_object,
  (RogueInitFn) RogueFunction____init_object,
  0,
  (RogueInitFn) RogueConsole__init_object,
  0,
  (RogueInitFn) RogueFunction_95__init_object,
  (RogueInitFn) RogueRogueC__init_object,
  (RogueInitFn) RogueTable_String_Logical___init_object,
  (RogueInitFn) RogueTableEntry_String_Logical__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Logical___init_object,
  0,
  (RogueInitFn) RogueParser_List__init_object,
  (RogueInitFn) RogueParser__init_object,
  (RogueInitFn) RogueTokenReader__init_object,
  (RogueInitFn) RogueToken_List__init_object,
  (RogueInitFn) RogueToken__init_object,
  (RogueInitFn) RogueTokenType__init_object,
  (RogueInitFn) RogueTable_String_TokenType___init_object,
  (RogueInitFn) RogueTableEntry_String_TokenType__List__init_object,
  (RogueInitFn) RogueTableEntry_String_TokenType___init_object,
  0,
  0,
  (RogueInitFn) RogueType__init_object,
  (RogueInitFn) RogueAttributes__init_object,
  (RogueInitFn) RogueTemplate__init_object,
  (RogueInitFn) RogueTypeParameter_List__init_object,
  (RogueInitFn) RogueTypeParameter__init_object,
  0,
  (RogueInitFn) RogueTable_Int32_Template___init_object,
  (RogueInitFn) RogueTableEntry_Int32_Template__List__init_object,
  (RogueInitFn) RogueTableEntry_Int32_Template___init_object,
  0,
  (RogueInitFn) RogueInt32_List__init_object,
  0,
  (RogueInitFn) RogueType_List__init_object,
  0,
  (RogueInitFn) RogueTypeSpecializer_List__init_object,
  (RogueInitFn) RogueTypeSpecializer__init_object,
  0,
  (RogueInitFn) RogueDefinition_List__init_object,
  (RogueInitFn) RogueDefinition__init_object,
  (RogueInitFn) RogueCmd__init_object,
  0,
  (RogueInitFn) RogueTable_String_Definition___init_object,
  (RogueInitFn) RogueTableEntry_String_Definition__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Definition___init_object,
  0,
  (RogueInitFn) RogueProperty_List__init_object,
  (RogueInitFn) RogueProperty__init_object,
  0,
  (RogueInitFn) RogueTable_String_Property___init_object,
  (RogueInitFn) RogueTableEntry_String_Property__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Property___init_object,
  0,
  (RogueInitFn) RogueMethod_List__init_object,
  (RogueInitFn) RogueMethod__init_object,
  (RogueInitFn) RogueLocal_List__init_object,
  (RogueInitFn) RogueLocal__init_object,
  0,
  (RogueInitFn) RogueCmdStatementList__init_object,
  (RogueInitFn) RogueCmd_List__init_object,
  0,
  (RogueInitFn) RogueCmdLabel_List__init_object,
  (RogueInitFn) RogueCmdLabel__init_object,
  0,
  (RogueInitFn) RogueTable_String_CmdLabel___init_object,
  (RogueInitFn) RogueTableEntry_String_CmdLabel__List__init_object,
  (RogueInitFn) RogueTableEntry_String_CmdLabel___init_object,
  0,
  (RogueInitFn) RogueMethodTemplate__init_object,
  (RogueInitFn) RogueMethodTemplate_List__init_object,
  0,
  0,
  (RogueInitFn) RogueTable_String_Method_List___init_object,
  (RogueInitFn) RogueTableEntry_String_Method_List__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Method_List___init_object,
  0,
  (RogueInitFn) RogueTable_String_Method___init_object,
  (RogueInitFn) RogueTableEntry_String_Method__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Method___init_object,
  0,
  (RogueInitFn) RogueMethodTemplates__init_object,
  0,
  (RogueInitFn) RogueTable_String_ParseReader___init_object,
  (RogueInitFn) RogueTableEntry_String_ParseReader__List__init_object,
  (RogueInitFn) RogueTableEntry_String_ParseReader___init_object,
  (RogueInitFn) RogueParseReader__init_object,
  0,
  (RogueInitFn) RogueStopwatch__init_object,
  (RogueInitFn) RoguePlugin_List__init_object,
  (RogueInitFn) RoguePlugin__init_object,
  (RogueInitFn) RogueFunction__RETURNSLogical__init_object,
  0,
  (RogueInitFn) RogueProgram__init_object,
  (RogueInitFn) RogueTemplate_List__init_object,
  0,
  (RogueInitFn) RogueTable_String_Template___init_object,
  (RogueInitFn) RogueTableEntry_String_Template__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Template___init_object,
  0,
  (RogueInitFn) RogueTable_String_Augment_List___init_object,
  (RogueInitFn) RogueTableEntry_String_Augment_List__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Augment_List___init_object,
  (RogueInitFn) RogueAugment_List__init_object,
  (RogueInitFn) RogueAugment__init_object,
  0,
  0,
  (RogueInitFn) RogueTable_String_Type___init_object,
  (RogueInitFn) RogueTableEntry_String_Type__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Type___init_object,
  0,
  (RogueInitFn) RogueTable_String_Int32___init_object,
  (RogueInitFn) RogueTableEntry_String_Int32__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Int32___init_object,
  0,
  (RogueInitFn) RogueTable_String_String_List___init_object,
  (RogueInitFn) RogueTableEntry_String_String_List__List__init_object,
  (RogueInitFn) RogueTableEntry_String_String_List___init_object,
  0,
  (RogueInitFn) RogueError__init_object,
  (RogueInitFn) RogueRogueError__init_object,
  (RogueInitFn) RogueCmdAccess__init_object,
  (RogueInitFn) RogueCmdArgs__init_object,
  (RogueInitFn) RogueCmdNamedArg_List__init_object,
  (RogueInitFn) RogueCmdNamedArg__init_object,
  0,
  (RogueInitFn) RogueCmdReturn__init_object,
  (RogueInitFn) RogueCmdStatement__init_object,
  (RogueInitFn) RogueScope__init_object,
  (RogueInitFn) RogueCmdControlStructure_List__init_object,
  (RogueInitFn) RogueCmdControlStructure__init_object,
  (RogueInitFn) RogueCmdTaskControlSection__init_object,
  0,
  (RogueInitFn) RogueFunction_Type_RETURNSLogical__init_object,
  (RogueInitFn) RogueFunction_383__init_object,
  (RogueInitFn) RogueFunction_384__init_object,
  (RogueInitFn) RogueCPPWriter__init_object,
  (RogueInitFn) RogueSystem__init_object,
  (RogueInitFn) RogueMath__init_object,
  0,
  0,
  (RogueInitFn) RogueFile__init_object,
  (RogueInitFn) RogueCmdMakeRequisite__init_object,
  (RogueInitFn) RogueLineReader__init_object,
  (RogueInitFn) RogueFunction_798__init_object,
  (RogueInitFn) RogueTokenizer__init_object,
  (RogueInitFn) RoguePreprocessor__init_object,
  (RogueInitFn) RogueTable_String_Token_List___init_object,
  (RogueInitFn) RogueTableEntry_String_Token_List__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Token_List___init_object,
  0,
  (RogueInitFn) RoguePreprocessorTokenReader__init_object,
  (RogueInitFn) RogueLiteralCharacterToken__init_object,
  (RogueInitFn) RogueLiteralInt64Token__init_object,
  (RogueInitFn) RogueLiteralInt32Token__init_object,
  (RogueInitFn) RogueLiteralReal64Token__init_object,
  (RogueInitFn) RogueStringDataToken__init_object,
  (RogueInitFn) RogueEOLToken__init_object,
  (RogueInitFn) RogueCmdLiteralLogical__init_object,
  (RogueInitFn) RogueCmdLiteral__init_object,
  (RogueInitFn) RogueCmdLiteralInt32__init_object,
  (RogueInitFn) RogueCloneArgs__init_object,
  (RogueInitFn) RogueCmdAdd__init_object,
  (RogueInitFn) RogueCmdBinary__init_object,
  (RogueInitFn) RoguePropertyTable__init_object,
  (RogueInitFn) RoguePropertyValue__init_object,
  (RogueInitFn) RogueTable_String_PropertyValue___init_object,
  (RogueInitFn) RogueTableEntry_String_PropertyValue__List__init_object,
  (RogueInitFn) RogueTableEntry_String_PropertyValue___init_object,
  0,
  (RogueInitFn) RogueCmdNativeHeader__init_object,
  (RogueInitFn) RogueCmdNativeCode__init_object,
  (RogueInitFn) RogueCmdIf__init_object,
  (RogueInitFn) RogueCmdWhich__init_object,
  (RogueInitFn) RogueCmdWhichCase_List__init_object,
  (RogueInitFn) RogueCmdWhichCase__init_object,
  0,
  (RogueInitFn) RogueCmdBlock__init_object,
  (RogueInitFn) RogueCmdContingent__init_object,
  (RogueInitFn) RogueCmdGenericLoop__init_object,
  (RogueInitFn) RogueCmdTry__init_object,
  (RogueInitFn) RogueCmdCatch_List__init_object,
  (RogueInitFn) RogueCmdCatch__init_object,
  0,
  (RogueInitFn) RogueCmdAwait__init_object,
  (RogueInitFn) RogueCmdYield__init_object,
  (RogueInitFn) RogueCmdThrow__init_object,
  (RogueInitFn) RogueCmdLiteralString__init_object,
  (RogueInitFn) RogueCmdFormattedString__init_object,
  (RogueInitFn) RogueCmdTrace__init_object,
  (RogueInitFn) RogueCmdLocalDeclaration__init_object,
  (RogueInitFn) RogueCmdAssert__init_object,
  (RogueInitFn) RogueCmdEscape__init_object,
  (RogueInitFn) RogueCmdNextIteration__init_object,
  (RogueInitFn) RogueCmdNecessary__init_object,
  (RogueInitFn) RogueCmdSufficient__init_object,
  (RogueInitFn) RogueCmdAdjust__init_object,
  (RogueInitFn) RogueCmdAssign__init_object,
  (RogueInitFn) RogueCmdModifyAndAssign__init_object,
  (RogueInitFn) RogueCmdAdjustLocal__init_object,
  (RogueInitFn) RogueCmdReadLocal__init_object,
  (RogueInitFn) RogueCmdCompareLE__init_object,
  (RogueInitFn) RogueCmdComparison__init_object,
  (RogueInitFn) RogueCmdRange__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignLocal__init_object,
  (RogueInitFn) RogueCmdResolvedModifyAndAssign__init_object,
  (RogueInitFn) RogueCmdRangeUpTo__init_object,
  (RogueInitFn) RogueCmdRangeUpToLessThan__init_object,
  (RogueInitFn) RogueCmdCompareLT__init_object,
  (RogueInitFn) RogueCmdCompareGE__init_object,
  (RogueInitFn) RogueCmdForEach__init_object,
  (RogueInitFn) RogueCmdRangeDownTo__init_object,
  (RogueInitFn) RogueCmdLogicalXor__init_object,
  (RogueInitFn) RogueCmdBinaryLogical__init_object,
  (RogueInitFn) RogueCmdLogicalOr__init_object,
  (RogueInitFn) RogueCmdLogicalAnd__init_object,
  (RogueInitFn) RogueCmdCompareEQ__init_object,
  (RogueInitFn) RogueCmdCompareIs__init_object,
  (RogueInitFn) RogueCmdCompareNE__init_object,
  (RogueInitFn) RogueCmdCompareIsNot__init_object,
  (RogueInitFn) RogueCmdCompareGT__init_object,
  (RogueInitFn) RogueCmdInstanceOf__init_object,
  (RogueInitFn) RogueCmdTypeOperator__init_object,
  (RogueInitFn) RogueCmdLogicalNot__init_object,
  (RogueInitFn) RogueCmdUnary__init_object,
  (RogueInitFn) RogueCmdBitwiseXor__init_object,
  (RogueInitFn) RogueCmdBitwiseOp__init_object,
  (RogueInitFn) RogueCmdBitwiseOr__init_object,
  (RogueInitFn) RogueCmdBitwiseAnd__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftLeft__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftRight__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftRightX__init_object,
  (RogueInitFn) RogueCmdSubtract__init_object,
  (RogueInitFn) RogueCmdMultiply__init_object,
  (RogueInitFn) RogueCmdDivide__init_object,
  (RogueInitFn) RogueCmdMod__init_object,
  (RogueInitFn) RogueCmdPower__init_object,
  (RogueInitFn) RogueCmdNegate__init_object,
  (RogueInitFn) RogueCmdBitwiseNot__init_object,
  (RogueInitFn) RogueCmdLogicalize__init_object,
  (RogueInitFn) RogueCmdIsReference__init_object,
  (RogueInitFn) RogueCmdElementAccess__init_object,
  (RogueInitFn) RogueCmdListConvert__init_object,
  (RogueInitFn) RogueCmdConvertToType__init_object,
  (RogueInitFn) RogueCmdCreateCallback__init_object,
  (RogueInitFn) RogueCmdAs__init_object,
  (RogueInitFn) RogueCmdDefaultValue__init_object,
  (RogueInitFn) RogueCmdLiteralNull__init_object,
  (RogueInitFn) RogueCmdLiteralReal64__init_object,
  (RogueInitFn) RogueCmdLiteralInt64__init_object,
  (RogueInitFn) RogueCmdLiteralCharacter__init_object,
  (RogueInitFn) RogueCmdLiteralThis__init_object,
  (RogueInitFn) RogueCmdThisContext__init_object,
  (RogueInitFn) RogueCmdCreateList__init_object,
  (RogueInitFn) RogueCmdCallPriorMethod__init_object,
  (RogueInitFn) RogueFnParam_List__init_object,
  (RogueInitFn) RogueFnParam__init_object,
  0,
  (RogueInitFn) RogueFnArg_List__init_object,
  (RogueInitFn) RogueFnArg__init_object,
  0,
  (RogueInitFn) RogueCmdCreateFunction__init_object,
  (RogueInitFn) RogueCmdInlineNative__init_object,
  (RogueInitFn) RogueCmdSelect__init_object,
  (RogueInitFn) RogueCmdSelectCase_List__init_object,
  (RogueInitFn) RogueCmdSelectCase__init_object,
  0,
  (RogueInitFn) RogueCmdRequire__init_object,
  (RogueInitFn) RogueCmdEnsure__init_object,
  (RogueInitFn) RogueCmdTypedLiteralList__init_object,
  (RogueInitFn) RogueListRebuilder_Token___init_object,
  (RogueInitFn) RogueCmdCreateCompound__init_object,
  (RogueInitFn) RogueVisitor__init_object,
  (RogueInitFn) RogueCmdSwitch__init_object,
  (RogueInitFn) RogueCmdCreateObject__init_object,
  (RogueInitFn) RogueCmdReadSingleton__init_object,
  (RogueInitFn) RogueCmdWriteSingleton__init_object,
  (RogueInitFn) RogueCmdWriteLocal__init_object,
  (RogueInitFn) RogueCmdReadGlobal__init_object,
  (RogueInitFn) RogueCmdWriteGlobal__init_object,
  (RogueInitFn) RogueCmdReadProperty__init_object,
  (RogueInitFn) RogueCmdWriteProperty__init_object,
  (RogueInitFn) RogueCmdCall__init_object,
  (RogueInitFn) RogueCmdCallDynamicMethod__init_object,
  (RogueInitFn) RogueCmdCallMethod__init_object,
  (RogueInitFn) RogueCmdAdjustProperty__init_object,
  (RogueInitFn) RogueCmdAdjustGlobal__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignGlobal__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignProperty__init_object,
  (RogueInitFn) RogueCmdCreateArray__init_object,
  (RogueInitFn) RogueCmdReadArrayElement__init_object,
  (RogueInitFn) RogueCmdReadArrayCount__init_object,
  (RogueInitFn) RogueCmdWriteArrayElement__init_object,
  (RogueInitFn) RogueCmdTaskControl__init_object,
  (RogueInitFn) RogueCmdTaskControlSection_List__init_object,
  0,
  (RogueInitFn) RogueCmdNoAction__init_object,
  (RogueInitFn) RogueUpdateThisTypeVisitor__init_object,
  (RogueInitFn) RogueTable_String_TypeSpecializer___init_object,
  (RogueInitFn) RogueTableEntry_String_TypeSpecializer__List__init_object,
  (RogueInitFn) RogueTableEntry_String_TypeSpecializer___init_object,
  0,
  (RogueInitFn) RogueCmdCastToType__init_object,
  (RogueInitFn) RogueTraceUsedCodeVisitor__init_object,
  (RogueInitFn) RogueCloneMethodArgs__init_object,
  (RogueInitFn) RogueTaskArgs__init_object,
  (RogueInitFn) RogueRequirementError__init_object,
  (RogueInitFn) RogueToken_List_List__init_object,
  0,
  (RogueInitFn) RogueMacroArgs__init_object,
  (RogueInitFn) RogueTable_String_Cmd___init_object,
  (RogueInitFn) RogueTableEntry_String_Cmd__List__init_object,
  (RogueInitFn) RogueTableEntry_String_Cmd___init_object,
  0,
  (RogueInitFn) RogueFunction_CmdNamedArg_RETURNSLogical__init_object,
  (RogueInitFn) RogueListRebuilder_CmdNamedArg___init_object,
  (RogueInitFn) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object,
  (RogueInitFn) RogueQuicksort_CmdNamedArg___init_object,
  (RogueInitFn) RogueCmdCallInlineNativeRoutine__init_object,
  (RogueInitFn) RogueCmdCallInlineNative__init_object,
  (RogueInitFn) RogueCmdCallNativeRoutine__init_object,
  (RogueInitFn) RogueCmdCallRoutine__init_object,
  (RogueInitFn) RogueCmdCallInlineNativeMethod__init_object,
  (RogueInitFn) RogueCmdCallNativeMethod__init_object,
  (RogueInitFn) RogueCmdCallAspectMethod__init_object,
  (RogueInitFn) RogueCandidateMethods__init_object,
  (RogueInitFn) RogueFunction_2629__init_object,
  (RogueInitFn) RogueFunction_2630__init_object,
  (RogueInitFn) RogueIOError__init_object,
  (RogueInitFn) RogueFileReader__init_object,
  (RogueInitFn) RogueFileWriter__init_object,
  (RogueInitFn) RogueUTF8Reader__init_object,
  (RogueInitFn) RogueDirectiveTokenType__init_object,
  (RogueInitFn) RogueStructuralDirectiveTokenType__init_object,
  (RogueInitFn) RogueEOLTokenType__init_object,
  (RogueInitFn) RogueStructureTokenType__init_object,
  (RogueInitFn) RogueNativeCodeTokenType__init_object,
  (RogueInitFn) RogueModifyAndAssignTokenType__init_object,
  (RogueInitFn) RogueInt32Property__init_object,
  (RogueInitFn) RogueStringProperty__init_object,
  (RogueInitFn) RogueCmdConvertToPrimitiveType__init_object,
  (RogueInitFn) RogueListReader_CmdSelectCase___init_object,
  0,
  (RogueInitFn) RogueCmdCallStaticMethod__init_object,
  (RogueInitFn) RogueNativeCodeToken__init_object,
  0,
  0,
  0,
  0
};

RogueInitFn Rogue_init_fn_table[] =
{
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueString_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RoguePropertyInfo_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueStringBuilder__init,
  (RogueInitFn) RogueByte_List__init,
  0,
  0,
  (RogueInitFn) RogueCharacter_List__init,
  0,
  0,
  0,
  (RogueInitFn) RogueTable_String_String___init,
  (RogueInitFn) RogueTableEntry_String_String__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TypeInfo___init,
  (RogueInitFn) RogueTableEntry_String_TypeInfo__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueGlobal__init,
  0,
  0,
  (RogueInitFn) RogueFunction___List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Logical___init,
  (RogueInitFn) RogueTableEntry_String_Logical__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueParser_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueToken_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TokenType___init,
  (RogueInitFn) RogueTableEntry_String_TokenType__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueAttributes__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTypeParameter_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_Int32_Template___init,
  (RogueInitFn) RogueTableEntry_Int32_Template__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueInt32_List__init,
  0,
  (RogueInitFn) RogueType_List__init,
  0,
  (RogueInitFn) RogueTypeSpecializer_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueDefinition_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Definition___init,
  (RogueInitFn) RogueTableEntry_String_Definition__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueProperty_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Property___init,
  (RogueInitFn) RogueTableEntry_String_Property__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueMethod_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueLocal_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueCmdStatementList__init,
  (RogueInitFn) RogueCmd_List__init,
  0,
  (RogueInitFn) RogueCmdLabel_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_CmdLabel___init,
  (RogueInitFn) RogueTableEntry_String_CmdLabel__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueMethodTemplate_List__init,
  0,
  0,
  (RogueInitFn) RogueTable_String_Method_List___init,
  (RogueInitFn) RogueTableEntry_String_Method_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Method___init,
  (RogueInitFn) RogueTableEntry_String_Method__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_ParseReader___init,
  (RogueInitFn) RogueTableEntry_String_ParseReader__List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RoguePlugin_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTemplate_List__init,
  0,
  (RogueInitFn) RogueTable_String_Template___init,
  (RogueInitFn) RogueTableEntry_String_Template__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Augment_List___init,
  (RogueInitFn) RogueTableEntry_String_Augment_List__List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueAugment_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueTable_String_Type___init,
  (RogueInitFn) RogueTableEntry_String_Type__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Int32___init,
  (RogueInitFn) RogueTableEntry_String_Int32__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_String_List___init,
  (RogueInitFn) RogueTableEntry_String_String_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdArgs__init,
  (RogueInitFn) RogueCmdNamedArg_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdControlStructure_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Token_List___init,
  (RogueInitFn) RogueTableEntry_String_Token_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RoguePropertyTable__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_PropertyValue___init,
  (RogueInitFn) RogueTableEntry_String_PropertyValue__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdWhichCase_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdCatch_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueFnParam_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueFnArg_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdSelectCase_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdTaskControlSection_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TypeSpecializer___init,
  (RogueInitFn) RogueTableEntry_String_TypeSpecializer__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueToken_List_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Cmd___init,
  (RogueInitFn) RogueTableEntry_String_Cmd__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  0
};

RogueCleanUpFn Rogue_clean_up_fn_table[] =
{
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueToStringFn Rogue_to_string_fn_table[] =
{
  (RogueToStringFn) RogueException__to_String,
  0,
  0,
  (RogueToStringFn) RogueStackTrace__to_String,
  (RogueToStringFn) RogueString_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  (RogueToStringFn) RogueTypeInfo__to_String,
  (RogueToStringFn) RoguePropertyInfo_List__to_String,
  (RogueToStringFn) RoguePropertyInfo__to_String,
  0,
  (RogueToStringFn) RogueStringBuilder__to_String,
  (RogueToStringFn) RogueByte_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueCharacter_List__to_String,
  0,
  0,
  0,
  (RogueToStringFn) RogueTable_String_String___to_String,
  (RogueToStringFn) RogueTableEntry_String_String__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_String___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_TypeInfo___to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeInfo__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeInfo___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueFunction___List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Logical___to_String,
  (RogueToStringFn) RogueTableEntry_String_Logical__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Logical___to_String,
  0,
  (RogueToStringFn) RogueParser_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueToken_List__to_String,
  (RogueToStringFn) RogueToken__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTable_String_TokenType___to_String,
  (RogueToStringFn) RogueTableEntry_String_TokenType__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TokenType___to_String,
  0,
  0,
  (RogueToStringFn) RogueType__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTypeParameter_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_Int32_Template___to_String,
  (RogueToStringFn) RogueTableEntry_Int32_Template__List__to_String,
  (RogueToStringFn) RogueTableEntry_Int32_Template___to_String,
  0,
  (RogueToStringFn) RogueInt32_List__to_String,
  0,
  (RogueToStringFn) RogueType_List__to_String,
  0,
  (RogueToStringFn) RogueTypeSpecializer_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueDefinition_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Definition___to_String,
  (RogueToStringFn) RogueTableEntry_String_Definition__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Definition___to_String,
  0,
  (RogueToStringFn) RogueProperty_List__to_String,
  (RogueToStringFn) RogueProperty__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Property___to_String,
  (RogueToStringFn) RogueTableEntry_String_Property__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Property___to_String,
  0,
  (RogueToStringFn) RogueMethod_List__to_String,
  (RogueToStringFn) RogueMethod__to_String,
  (RogueToStringFn) RogueLocal_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  0,
  (RogueToStringFn) RogueCmdLabel_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_CmdLabel___to_String,
  (RogueToStringFn) RogueTableEntry_String_CmdLabel__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_CmdLabel___to_String,
  0,
  (RogueToStringFn) RogueMethodTemplate__to_String,
  (RogueToStringFn) RogueMethodTemplate_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueTable_String_Method_List___to_String,
  (RogueToStringFn) RogueTableEntry_String_Method_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Method_List___to_String,
  0,
  (RogueToStringFn) RogueTable_String_Method___to_String,
  (RogueToStringFn) RogueTableEntry_String_Method__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Method___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_ParseReader___to_String,
  (RogueToStringFn) RogueTableEntry_String_ParseReader__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_ParseReader___to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueStopwatch__to_String,
  (RogueToStringFn) RoguePlugin_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTemplate_List__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Template___to_String,
  (RogueToStringFn) RogueTableEntry_String_Template__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Template___to_String,
  0,
  (RogueToStringFn) RogueTable_String_Augment_List___to_String,
  (RogueToStringFn) RogueTableEntry_String_Augment_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Augment_List___to_String,
  (RogueToStringFn) RogueAugment_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueTable_String_Type___to_String,
  (RogueToStringFn) RogueTableEntry_String_Type__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Type___to_String,
  0,
  (RogueToStringFn) RogueTable_String_Int32___to_String,
  (RogueToStringFn) RogueTableEntry_String_Int32__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Int32___to_String,
  0,
  (RogueToStringFn) RogueTable_String_String_List___to_String,
  (RogueToStringFn) RogueTableEntry_String_String_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_String_List___to_String,
  0,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueRogueError__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmdNamedArg_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdControlStructure_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueFile__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Token_List___to_String,
  (RogueToStringFn) RogueTableEntry_String_Token_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Token_List___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueLiteralCharacterToken__to_String,
  (RogueToStringFn) RogueLiteralInt64Token__to_String,
  (RogueToStringFn) RogueLiteralInt32Token__to_String,
  (RogueToStringFn) RogueLiteralReal64Token__to_String,
  (RogueToStringFn) RogueStringDataToken__to_String,
  (RogueToStringFn) RogueEOLToken__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RoguePropertyTable__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_PropertyValue___to_String,
  (RogueToStringFn) RogueTableEntry_String_PropertyValue__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_PropertyValue___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdWhichCase_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCatch_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdElementAccess__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueFnParam_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueFnArg_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdSelectCase_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallDynamicMethod__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdTaskControlSection_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_TypeSpecializer___to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeSpecializer__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeSpecializer___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueToken_List_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Cmd___to_String,
  (RogueToStringFn) RogueTableEntry_String_Cmd__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Cmd___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueInt32Property__to_String,
  (RogueToStringFn) RogueStringProperty__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueNativeCodeToken__to_String,
  0,
  0,
  0,
  0
};

RogueTraceFn Rogue_trace_fn_table[] =
{
  RogueException_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueStackTrace_trace,
  RogueString_List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueObject_trace,
  0,
  0,
  0,
  RogueTypeInfo_trace,
  RoguePropertyInfo_List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueStringBuilder_trace,
  RogueByte_List_trace,
  0,
  RogueObject_trace,
  RogueCharacter_List_trace,
  0,
  RogueObject_trace,
  0,
  RogueTable_String_String__trace,
  RogueTableEntry_String_String__List_trace,
  RogueTableEntry_String_String__trace,
  RogueArray_trace,
  RogueStringReader_trace,
  0,
  0,
  RogueObject_trace,
  RogueTable_String_TypeInfo__trace,
  RogueTableEntry_String_TypeInfo__List_trace,
  RogueTableEntry_String_TypeInfo__trace,
  RogueArray_trace,
  RogueGlobal_trace,
  0,
  0,
  RogueFunction___List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueConsole_trace,
  0,
  RogueObject_trace,
  RogueRogueC_trace,
  RogueTable_String_Logical__trace,
  RogueTableEntry_String_Logical__List_trace,
  RogueTableEntry_String_Logical__trace,
  RogueArray_trace,
  RogueParser_List_trace,
  RogueParser_trace,
  RogueTokenReader_trace,
  RogueToken_List_trace,
  RogueToken_trace,
  RogueTokenType_trace,
  RogueTable_String_TokenType__trace,
  RogueTableEntry_String_TokenType__List_trace,
  RogueTableEntry_String_TokenType__trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueType_trace,
  RogueAttributes_trace,
  RogueTemplate_trace,
  RogueTypeParameter_List_trace,
  RogueTypeParameter_trace,
  RogueArray_trace,
  RogueTable_Int32_Template__trace,
  RogueTableEntry_Int32_Template__List_trace,
  RogueTableEntry_Int32_Template__trace,
  RogueArray_trace,
  RogueInt32_List_trace,
  RogueObject_trace,
  RogueType_List_trace,
  RogueArray_trace,
  RogueTypeSpecializer_List_trace,
  RogueTypeSpecializer_trace,
  RogueArray_trace,
  RogueDefinition_List_trace,
  RogueDefinition_trace,
  RogueCmd_trace,
  RogueArray_trace,
  RogueTable_String_Definition__trace,
  RogueTableEntry_String_Definition__List_trace,
  RogueTableEntry_String_Definition__trace,
  RogueArray_trace,
  RogueProperty_List_trace,
  RogueProperty_trace,
  RogueArray_trace,
  RogueTable_String_Property__trace,
  RogueTableEntry_String_Property__List_trace,
  RogueTableEntry_String_Property__trace,
  RogueArray_trace,
  RogueMethod_List_trace,
  RogueMethod_trace,
  RogueLocal_List_trace,
  RogueLocal_trace,
  RogueArray_trace,
  RogueCmdStatementList_trace,
  RogueCmd_List_trace,
  RogueArray_trace,
  RogueCmdLabel_List_trace,
  RogueCmdLabel_trace,
  RogueArray_trace,
  RogueTable_String_CmdLabel__trace,
  RogueTableEntry_String_CmdLabel__List_trace,
  RogueTableEntry_String_CmdLabel__trace,
  RogueArray_trace,
  RogueMethodTemplate_trace,
  RogueMethodTemplate_List_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueTable_String_Method_List__trace,
  RogueTableEntry_String_Method_List__List_trace,
  RogueTableEntry_String_Method_List__trace,
  RogueArray_trace,
  RogueTable_String_Method__trace,
  RogueTableEntry_String_Method__List_trace,
  RogueTableEntry_String_Method__trace,
  RogueArray_trace,
  RogueMethodTemplates_trace,
  RogueArray_trace,
  RogueTable_String_ParseReader__trace,
  RogueTableEntry_String_ParseReader__List_trace,
  RogueTableEntry_String_ParseReader__trace,
  RogueParseReader_trace,
  RogueArray_trace,
  RogueObject_trace,
  RoguePlugin_List_trace,
  RoguePlugin_trace,
  RogueObject_trace,
  RogueArray_trace,
  RogueProgram_trace,
  RogueTemplate_List_trace,
  RogueArray_trace,
  RogueTable_String_Template__trace,
  RogueTableEntry_String_Template__List_trace,
  RogueTableEntry_String_Template__trace,
  RogueArray_trace,
  RogueTable_String_Augment_List__trace,
  RogueTableEntry_String_Augment_List__List_trace,
  RogueTableEntry_String_Augment_List__trace,
  RogueAugment_List_trace,
  RogueAugment_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueTable_String_Type__trace,
  RogueTableEntry_String_Type__List_trace,
  RogueTableEntry_String_Type__trace,
  RogueArray_trace,
  RogueTable_String_Int32__trace,
  RogueTableEntry_String_Int32__List_trace,
  RogueTableEntry_String_Int32__trace,
  RogueArray_trace,
  RogueTable_String_String_List__trace,
  RogueTableEntry_String_String_List__List_trace,
  RogueTableEntry_String_String_List__trace,
  RogueArray_trace,
  RogueError_trace,
  RogueRogueError_trace,
  RogueCmdAccess_trace,
  RogueCmdArgs_trace,
  RogueCmdNamedArg_List_trace,
  RogueCmdNamedArg_trace,
  RogueArray_trace,
  RogueCmdReturn_trace,
  RogueCmdStatement_trace,
  RogueScope_trace,
  RogueCmdControlStructure_List_trace,
  RogueCmdControlStructure_trace,
  RogueCmdTaskControlSection_trace,
  RogueArray_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCPPWriter_trace,
  RogueObject_trace,
  RogueObject_trace,
  0,
  0,
  RogueFile_trace,
  RogueCmdMakeRequisite_trace,
  RogueLineReader_trace,
  RogueObject_trace,
  RogueTokenizer_trace,
  RoguePreprocessor_trace,
  RogueTable_String_Token_List__trace,
  RogueTableEntry_String_Token_List__List_trace,
  RogueTableEntry_String_Token_List__trace,
  RogueArray_trace,
  RoguePreprocessorTokenReader_trace,
  RogueLiteralCharacterToken_trace,
  RogueLiteralInt64Token_trace,
  RogueLiteralInt32Token_trace,
  RogueLiteralReal64Token_trace,
  RogueStringDataToken_trace,
  RogueEOLToken_trace,
  RogueCmdLiteralLogical_trace,
  RogueCmdLiteral_trace,
  RogueCmdLiteralInt32_trace,
  RogueObject_trace,
  RogueCmdAdd_trace,
  RogueCmdBinary_trace,
  RoguePropertyTable_trace,
  RogueObject_trace,
  RogueTable_String_PropertyValue__trace,
  RogueTableEntry_String_PropertyValue__List_trace,
  RogueTableEntry_String_PropertyValue__trace,
  RogueArray_trace,
  RogueCmdNativeHeader_trace,
  RogueCmdNativeCode_trace,
  RogueCmdIf_trace,
  RogueCmdWhich_trace,
  RogueCmdWhichCase_List_trace,
  RogueCmdWhichCase_trace,
  RogueArray_trace,
  RogueCmdBlock_trace,
  RogueCmdContingent_trace,
  RogueCmdGenericLoop_trace,
  RogueCmdTry_trace,
  RogueCmdCatch_List_trace,
  RogueCmdCatch_trace,
  RogueArray_trace,
  RogueCmdAwait_trace,
  RogueCmdYield_trace,
  RogueCmdThrow_trace,
  RogueCmdLiteralString_trace,
  RogueCmdFormattedString_trace,
  RogueCmdTrace_trace,
  RogueCmdLocalDeclaration_trace,
  RogueCmdAssert_trace,
  RogueCmdEscape_trace,
  RogueCmdNextIteration_trace,
  RogueCmdNecessary_trace,
  RogueCmdSufficient_trace,
  RogueCmdAdjust_trace,
  RogueCmdAssign_trace,
  RogueCmdModifyAndAssign_trace,
  RogueCmdAdjustLocal_trace,
  RogueCmdReadLocal_trace,
  RogueCmdCompareLE_trace,
  RogueCmdComparison_trace,
  RogueCmdRange_trace,
  RogueCmdModifyAndAssignLocal_trace,
  RogueCmdResolvedModifyAndAssign_trace,
  RogueCmdRangeUpTo_trace,
  RogueCmdRangeUpToLessThan_trace,
  RogueCmdCompareLT_trace,
  RogueCmdCompareGE_trace,
  RogueCmdForEach_trace,
  RogueCmdRangeDownTo_trace,
  RogueCmdLogicalXor_trace,
  RogueCmdBinaryLogical_trace,
  RogueCmdLogicalOr_trace,
  RogueCmdLogicalAnd_trace,
  RogueCmdCompareEQ_trace,
  RogueCmdCompareIs_trace,
  RogueCmdCompareNE_trace,
  RogueCmdCompareIsNot_trace,
  RogueCmdCompareGT_trace,
  RogueCmdInstanceOf_trace,
  RogueCmdTypeOperator_trace,
  RogueCmdLogicalNot_trace,
  RogueCmdUnary_trace,
  RogueCmdBitwiseXor_trace,
  RogueCmdBitwiseOp_trace,
  RogueCmdBitwiseOr_trace,
  RogueCmdBitwiseAnd_trace,
  RogueCmdBitwiseShiftLeft_trace,
  RogueCmdBitwiseShiftRight_trace,
  RogueCmdBitwiseShiftRightX_trace,
  RogueCmdSubtract_trace,
  RogueCmdMultiply_trace,
  RogueCmdDivide_trace,
  RogueCmdMod_trace,
  RogueCmdPower_trace,
  RogueCmdNegate_trace,
  RogueCmdBitwiseNot_trace,
  RogueCmdLogicalize_trace,
  RogueCmdIsReference_trace,
  RogueCmdElementAccess_trace,
  RogueCmdListConvert_trace,
  RogueCmdConvertToType_trace,
  RogueCmdCreateCallback_trace,
  RogueCmdAs_trace,
  RogueCmdDefaultValue_trace,
  RogueCmdLiteralNull_trace,
  RogueCmdLiteralReal64_trace,
  RogueCmdLiteralInt64_trace,
  RogueCmdLiteralCharacter_trace,
  RogueCmdLiteralThis_trace,
  RogueCmdThisContext_trace,
  RogueCmdCreateList_trace,
  RogueCmdCallPriorMethod_trace,
  RogueFnParam_List_trace,
  RogueFnParam_trace,
  RogueArray_trace,
  RogueFnArg_List_trace,
  RogueFnArg_trace,
  RogueArray_trace,
  RogueCmdCreateFunction_trace,
  RogueCmdInlineNative_trace,
  RogueCmdSelect_trace,
  RogueCmdSelectCase_List_trace,
  RogueCmdSelectCase_trace,
  RogueArray_trace,
  RogueCmdRequire_trace,
  RogueCmdEnsure_trace,
  RogueCmdTypedLiteralList_trace,
  RogueListRebuilder_Token__trace,
  RogueCmdCreateCompound_trace,
  RogueObject_trace,
  RogueCmdSwitch_trace,
  RogueCmdCreateObject_trace,
  RogueCmdReadSingleton_trace,
  RogueCmdWriteSingleton_trace,
  RogueCmdWriteLocal_trace,
  RogueCmdReadGlobal_trace,
  RogueCmdWriteGlobal_trace,
  RogueCmdReadProperty_trace,
  RogueCmdWriteProperty_trace,
  RogueCmdCall_trace,
  RogueCmdCallDynamicMethod_trace,
  RogueCmdCallMethod_trace,
  RogueCmdAdjustProperty_trace,
  RogueCmdAdjustGlobal_trace,
  RogueCmdModifyAndAssignGlobal_trace,
  RogueCmdModifyAndAssignProperty_trace,
  RogueCmdCreateArray_trace,
  RogueCmdReadArrayElement_trace,
  RogueCmdReadArrayCount_trace,
  RogueCmdWriteArrayElement_trace,
  RogueCmdTaskControl_trace,
  RogueCmdTaskControlSection_List_trace,
  RogueArray_trace,
  RogueCmdNoAction_trace,
  RogueUpdateThisTypeVisitor_trace,
  RogueTable_String_TypeSpecializer__trace,
  RogueTableEntry_String_TypeSpecializer__List_trace,
  RogueTableEntry_String_TypeSpecializer__trace,
  RogueArray_trace,
  RogueCmdCastToType_trace,
  RogueObject_trace,
  RogueCloneMethodArgs_trace,
  RogueTaskArgs_trace,
  RogueRequirementError_trace,
  RogueToken_List_List_trace,
  RogueArray_trace,
  RogueMacroArgs_trace,
  RogueTable_String_Cmd__trace,
  RogueTableEntry_String_Cmd__List_trace,
  RogueTableEntry_String_Cmd__trace,
  RogueArray_trace,
  RogueObject_trace,
  RogueListRebuilder_CmdNamedArg__trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCmdCallInlineNativeRoutine_trace,
  RogueCmdCallInlineNative_trace,
  RogueCmdCallNativeRoutine_trace,
  RogueCmdCallRoutine_trace,
  RogueCmdCallInlineNativeMethod_trace,
  RogueCmdCallNativeMethod_trace,
  RogueCmdCallAspectMethod_trace,
  RogueCandidateMethods_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueIOError_trace,
  RogueFileReader_trace,
  RogueFileWriter_trace,
  RogueUTF8Reader_trace,
  RogueDirectiveTokenType_trace,
  RogueStructuralDirectiveTokenType_trace,
  RogueEOLTokenType_trace,
  RogueStructureTokenType_trace,
  RogueNativeCodeTokenType_trace,
  RogueModifyAndAssignTokenType_trace,
  RogueObject_trace,
  RogueStringProperty_trace,
  RogueCmdConvertToPrimitiveType_trace,
  RogueListReader_CmdSelectCase__trace,
  0,
  RogueCmdCallStaticMethod_trace,
  RogueNativeCodeToken_trace,
  0,
  0,
  0,
  0
};

void Rogue_trace()
{
  void* link;
  int i;

  // Trace GLOBAL PROPERTIES
  if ((link=RogueStringBuilder_work_bytes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueRuntime_type_info_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueToken_filepath_to_filename)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_define)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_include)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_includeNativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_includeNativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_module)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_requisite)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_using)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_placeholder_id)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_begin_augment_tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_augment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_case)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_catch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_CLASS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_DEFINITIONS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endAugment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endClass)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endFunction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endRoutine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endUnitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ENUMERATE)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_GLOBAL)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_METHODS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_others)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_PROPERTIES)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_routine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_satisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unsatisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_with)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_comment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eol)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eoi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_assert)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_await)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_block)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_contingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ensure)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_forEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_function)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_in)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_infinity)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_is)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_isNot)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_isReference)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_local)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_loop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_NaN)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_native)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_necessary)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nextIteration)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_noAction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_of)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_require)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_return)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_select)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_step)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_sufficient)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_throw)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace_position)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_try)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_which)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_while)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_yield)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_type_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_integer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_long)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_real)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_string)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_and)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_as)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_downTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_false)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_instanceOf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_meta)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_not)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_notInstanceOf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_or)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_pi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_prior)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_this)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_true)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_xor)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_backslash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_colon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_comma)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_compare)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_downToGreaterThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_braces)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_brackets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_eq)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_exclamation_point)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_fat_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ge)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_gt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_le)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_lt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ne)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_question_mark)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_semicolon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right_x)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upToLessThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueCmdStatementList_current)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_command_line_arguments)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_executable_filepath)) RogueString_trace( link );
  if ((link=RoguePreprocessor_definitions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueStringProperty_empty_string)) ((RogueObject*)link)->type->trace_fn( link );

  // Trace Class objects and singletons
  for (i=Rogue_type_count; --i>=0; )
  {
    RogueType* type = &Rogue_types[i];
    if (type->type_info) RogueTypeInfo_trace( type->type_info );
    if (type->_singleton) type->trace_fn( type->_singleton );
  }
}

void* Rogue_dynamic_method_table[] =
{
  (void*) (ROGUEM0) RogueException__init_object, // Exception
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM2) RogueException__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM2) RogueException__type_name,
  (void*) (ROGUEM3) RogueException__init__String,
  (void*) (ROGUEM6) RogueStackTrace__init_object, // StackTrace
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM7) RogueStackTrace__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM7) RogueStackTrace__type_name,
  (void*) (ROGUEM8) RogueString_List__init_object, // String[]
  (void*) (ROGUEM8) RogueString_List__init,
  (void*) (ROGUEM9) RogueString_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM9) RogueString_List__type_name,
  (void*) (ROGUEM10) RogueGenericList__init_object, // GenericList
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM11) RogueGenericList__type_name,
  (void*) (ROGUEM13) RogueTypeInfo__init_object, // TypeInfo
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM14) RogueTypeInfo__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueTypeInfo__type_name,
  (void*) (ROGUEM15) RoguePropertyInfo_List__init_object, // PropertyInfo[]
  (void*) (ROGUEM15) RoguePropertyInfo_List__init,
  (void*) (ROGUEM16) RoguePropertyInfo_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM16) RoguePropertyInfo_List__type_name,
  (void*) (ROGUEM17) RoguePropertyInfo__init_object, // PropertyInfo
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM18) RoguePropertyInfo__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM18) RoguePropertyInfo__type_name,
  (void*) (ROGUEM19) RogueStringBuilder__init_object, // StringBuilder
  (void*) (ROGUEM19) RogueStringBuilder__init,
  (void*) (ROGUEM20) RogueStringBuilder__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM20) RogueStringBuilder__type_name,
  (void*) (ROGUEM21) RogueByte_List__init_object, // Byte[]
  (void*) (ROGUEM21) RogueByte_List__init,
  (void*) (ROGUEM22) RogueByte_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM22) RogueByte_List__type_name,
  (void*) (ROGUEM23) RogueCharacter_List__init_object, // Character[]
  (void*) (ROGUEM23) RogueCharacter_List__init,
  (void*) (ROGUEM24) RogueCharacter_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM24) RogueCharacter_List__type_name,
  (void*) (ROGUEM25) RogueTable_String_String___init_object, // Table<<String,String>>
  (void*) (ROGUEM25) RogueTable_String_String___init,
  (void*) (ROGUEM26) RogueTable_String_String___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM26) RogueTable_String_String___type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM27) RogueTable_String_String___get__String,
  (void*) (ROGUEM28) RogueTableEntry_String_String__List__init_object, // TableEntry<<String,String>>[]
  (void*) (ROGUEM28) RogueTableEntry_String_String__List__init,
  (void*) (ROGUEM29) RogueTableEntry_String_String__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM29) RogueTableEntry_String_String__List__type_name,
  (void*) (ROGUEM30) RogueTableEntry_String_String___init_object, // TableEntry<<String,String>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM31) RogueTableEntry_String_String___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM31) RogueTableEntry_String_String___type_name,
  (void*) (ROGUEM32) RogueStringReader__init_object, // StringReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM33) RogueStringReader__type_name,
  0, // Reader<<Character>>
  0, // Reader<<String>>
  (void*) (ROGUEM34) RogueRuntime__init_object, // Runtime
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM35) RogueRuntime__type_name,
  (void*) (ROGUEM36) RogueTable_String_TypeInfo___init_object, // Table<<String,TypeInfo>>
  (void*) (ROGUEM36) RogueTable_String_TypeInfo___init,
  (void*) (ROGUEM37) RogueTable_String_TypeInfo___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM37) RogueTable_String_TypeInfo___type_name,
  (void*) (ROGUEM38) RogueTableEntry_String_TypeInfo__List__init_object, // TableEntry<<String,TypeInfo>>[]
  (void*) (ROGUEM38) RogueTableEntry_String_TypeInfo__List__init,
  (void*) (ROGUEM39) RogueTableEntry_String_TypeInfo__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM39) RogueTableEntry_String_TypeInfo__List__type_name,
  (void*) (ROGUEM40) RogueTableEntry_String_TypeInfo___init_object, // TableEntry<<String,TypeInfo>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM41) RogueTableEntry_String_TypeInfo___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM41) RogueTableEntry_String_TypeInfo___type_name,
  (void*) (ROGUEM42) RogueGlobal__init_object, // Global
  (void*) (ROGUEM42) RogueGlobal__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM43) RogueGlobal__type_name,
  0, // PrintWriterAspect<<Global,global_output_buffer>>
  0, // PrintWriter
  (void*) (ROGUEM44) RogueFunction___List__init_object, // Function()[]
  (void*) (ROGUEM44) RogueFunction___List__init,
  (void*) (ROGUEM45) RogueFunction___List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM45) RogueFunction___List__type_name,
  (void*) (ROGUEM46) RogueFunction____init_object, // Function()
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM47) RogueFunction____type_name,
  (void*) (ROGUEM48) RogueFunction____call,
  (void*) (ROGUEM49) RogueConsole__init_object, // Console
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM50) RogueConsole__type_name,
  0, // PrintWriterAspect<<Console,output_buffer>>
  (void*) (ROGUEM51) RogueFunction_95__init_object, // Function_95
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM52) RogueFunction_95__type_name,
  (void*) (ROGUEM53) RogueFunction_95__call,
  (void*) (ROGUEM54) RogueRogueC__init_object, // RogueC
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM55) RogueRogueC__type_name,
  (void*) (ROGUEM56) RogueTable_String_Logical___init_object, // Table<<String,Logical>>
  (void*) (ROGUEM56) RogueTable_String_Logical___init,
  (void*) (ROGUEM57) RogueTable_String_Logical___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM57) RogueTable_String_Logical___type_name,
  (void*) (ROGUEM58) RogueTableEntry_String_Logical__List__init_object, // TableEntry<<String,Logical>>[]
  (void*) (ROGUEM58) RogueTableEntry_String_Logical__List__init,
  (void*) (ROGUEM59) RogueTableEntry_String_Logical__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM59) RogueTableEntry_String_Logical__List__type_name,
  (void*) (ROGUEM60) RogueTableEntry_String_Logical___init_object, // TableEntry<<String,Logical>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM61) RogueTableEntry_String_Logical___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM61) RogueTableEntry_String_Logical___type_name,
  (void*) (ROGUEM62) RogueParser_List__init_object, // Parser[]
  (void*) (ROGUEM62) RogueParser_List__init,
  (void*) (ROGUEM63) RogueParser_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM63) RogueParser_List__type_name,
  (void*) (ROGUEM64) RogueParser__init_object, // Parser
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM65) RogueParser__type_name,
  (void*) (ROGUEM66) RogueTokenReader__init_object, // TokenReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM67) RogueTokenReader__type_name,
  (void*) (ROGUEM68) RogueToken_List__init_object, // Token[]
  (void*) (ROGUEM68) RogueToken_List__init,
  (void*) (ROGUEM69) RogueToken_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM69) RogueToken_List__type_name,
  (void*) (ROGUEM70) RogueToken__init_object, // Token
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM71) RogueToken__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM73) RogueToken__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM75) RogueToken__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM77) RogueTokenType__init_object, // TokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM78) RogueTokenType__type_name,
  0,
  (void*) (ROGUEM79) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM80) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM82) RogueTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM82) RogueTokenType__is_structure,
  (void*) (ROGUEM83) RogueTable_String_TokenType___init_object, // Table<<String,TokenType>>
  (void*) (ROGUEM83) RogueTable_String_TokenType___init,
  (void*) (ROGUEM84) RogueTable_String_TokenType___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueTable_String_TokenType___type_name,
  (void*) (ROGUEM85) RogueTableEntry_String_TokenType__List__init_object, // TableEntry<<String,TokenType>>[]
  (void*) (ROGUEM85) RogueTableEntry_String_TokenType__List__init,
  (void*) (ROGUEM86) RogueTableEntry_String_TokenType__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM86) RogueTableEntry_String_TokenType__List__type_name,
  (void*) (ROGUEM87) RogueTableEntry_String_TokenType___init_object, // TableEntry<<String,TokenType>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM88) RogueTableEntry_String_TokenType___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM88) RogueTableEntry_String_TokenType___type_name,
  (void*) (ROGUEM89) RogueType__init_object, // Type
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM90) RogueType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM90) RogueType__type_name,
  (void*) (ROGUEM91) RogueAttributes__init_object, // Attributes
  (void*) (ROGUEM91) RogueAttributes__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM92) RogueAttributes__type_name,
  (void*) (ROGUEM93) RogueTemplate__init_object, // Template
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM94) RogueTemplate__type_name,
  (void*) (ROGUEM95) RogueTypeParameter_List__init_object, // TypeParameter[]
  (void*) (ROGUEM95) RogueTypeParameter_List__init,
  (void*) (ROGUEM96) RogueTypeParameter_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM96) RogueTypeParameter_List__type_name,
  (void*) (ROGUEM97) RogueTypeParameter__init_object, // TypeParameter
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM98) RogueTypeParameter__type_name,
  (void*) (ROGUEM99) RogueTable_Int32_Template___init_object, // Table<<Int32,Template>>
  (void*) (ROGUEM99) RogueTable_Int32_Template___init,
  (void*) (ROGUEM100) RogueTable_Int32_Template___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM100) RogueTable_Int32_Template___type_name,
  (void*) (ROGUEM101) RogueTableEntry_Int32_Template__List__init_object, // TableEntry<<Int32,Template>>[]
  (void*) (ROGUEM101) RogueTableEntry_Int32_Template__List__init,
  (void*) (ROGUEM102) RogueTableEntry_Int32_Template__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM102) RogueTableEntry_Int32_Template__List__type_name,
  (void*) (ROGUEM103) RogueTableEntry_Int32_Template___init_object, // TableEntry<<Int32,Template>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM104) RogueTableEntry_Int32_Template___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM104) RogueTableEntry_Int32_Template___type_name,
  (void*) (ROGUEM105) RogueInt32_List__init_object, // Int32[]
  (void*) (ROGUEM105) RogueInt32_List__init,
  (void*) (ROGUEM106) RogueInt32_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM106) RogueInt32_List__type_name,
  (void*) (ROGUEM107) RogueType_List__init_object, // Type[]
  (void*) (ROGUEM107) RogueType_List__init,
  (void*) (ROGUEM108) RogueType_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueType_List__type_name,
  (void*) (ROGUEM109) RogueTypeSpecializer_List__init_object, // TypeSpecializer[]
  (void*) (ROGUEM109) RogueTypeSpecializer_List__init,
  (void*) (ROGUEM110) RogueTypeSpecializer_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTypeSpecializer_List__type_name,
  (void*) (ROGUEM111) RogueTypeSpecializer__init_object, // TypeSpecializer
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM112) RogueTypeSpecializer__type_name,
  (void*) (ROGUEM113) RogueDefinition_List__init_object, // Definition[]
  (void*) (ROGUEM113) RogueDefinition_List__init,
  (void*) (ROGUEM114) RogueDefinition_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM114) RogueDefinition_List__type_name,
  (void*) (ROGUEM115) RogueDefinition__init_object, // Definition
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM116) RogueDefinition__type_name,
  (void*) (ROGUEM117) RogueCmd__init_object, // Cmd
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM118) RogueCmd__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM124) RogueCmd__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM134) RogueTable_String_Definition___init_object, // Table<<String,Definition>>
  (void*) (ROGUEM134) RogueTable_String_Definition___init,
  (void*) (ROGUEM135) RogueTable_String_Definition___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM135) RogueTable_String_Definition___type_name,
  (void*) (ROGUEM136) RogueTableEntry_String_Definition__List__init_object, // TableEntry<<String,Definition>>[]
  (void*) (ROGUEM136) RogueTableEntry_String_Definition__List__init,
  (void*) (ROGUEM137) RogueTableEntry_String_Definition__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM137) RogueTableEntry_String_Definition__List__type_name,
  (void*) (ROGUEM138) RogueTableEntry_String_Definition___init_object, // TableEntry<<String,Definition>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM139) RogueTableEntry_String_Definition___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM139) RogueTableEntry_String_Definition___type_name,
  (void*) (ROGUEM140) RogueProperty_List__init_object, // Property[]
  (void*) (ROGUEM140) RogueProperty_List__init,
  (void*) (ROGUEM141) RogueProperty_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM141) RogueProperty_List__type_name,
  (void*) (ROGUEM142) RogueProperty__init_object, // Property
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM143) RogueProperty__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM143) RogueProperty__type_name,
  (void*) (ROGUEM144) RogueTable_String_Property___init_object, // Table<<String,Property>>
  (void*) (ROGUEM144) RogueTable_String_Property___init,
  (void*) (ROGUEM145) RogueTable_String_Property___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM145) RogueTable_String_Property___type_name,
  (void*) (ROGUEM146) RogueTableEntry_String_Property__List__init_object, // TableEntry<<String,Property>>[]
  (void*) (ROGUEM146) RogueTableEntry_String_Property__List__init,
  (void*) (ROGUEM147) RogueTableEntry_String_Property__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueTableEntry_String_Property__List__type_name,
  (void*) (ROGUEM148) RogueTableEntry_String_Property___init_object, // TableEntry<<String,Property>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM149) RogueTableEntry_String_Property___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM149) RogueTableEntry_String_Property___type_name,
  (void*) (ROGUEM150) RogueMethod_List__init_object, // Method[]
  (void*) (ROGUEM150) RogueMethod_List__init,
  (void*) (ROGUEM151) RogueMethod_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM151) RogueMethod_List__type_name,
  (void*) (ROGUEM152) RogueMethod__init_object, // Method
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM153) RogueMethod__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM153) RogueMethod__type_name,
  (void*) (ROGUEM154) RogueLocal_List__init_object, // Local[]
  (void*) (ROGUEM154) RogueLocal_List__init,
  (void*) (ROGUEM155) RogueLocal_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM155) RogueLocal_List__type_name,
  (void*) (ROGUEM156) RogueLocal__init_object, // Local
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM157) RogueLocal__type_name,
  (void*) (ROGUEM158) RogueCmdStatementList__init_object, // CmdStatementList
  (void*) (ROGUEM158) RogueCmdStatementList__init,
  (void*) (ROGUEM159) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM160) RogueCmdStatementList__type_name,
  (void*) (ROGUEM161) RogueCmdStatementList__init__Int32,
  (void*) (ROGUEM162) RogueCmd_List__init_object, // Cmd[]
  (void*) (ROGUEM162) RogueCmd_List__init,
  (void*) (ROGUEM159) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM159) RogueCmd_List__type_name,
  (void*) (ROGUEM163) RogueCmd_List__init__Int32,
  (void*) (ROGUEM164) RogueCmdLabel_List__init_object, // CmdLabel[]
  (void*) (ROGUEM164) RogueCmdLabel_List__init,
  (void*) (ROGUEM165) RogueCmdLabel_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM165) RogueCmdLabel_List__type_name,
  (void*) (ROGUEM166) RogueCmdLabel__init_object, // CmdLabel
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM167) RogueCmdLabel__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM168) RogueCmdLabel__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM169) RogueCmdLabel__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM170) RogueCmdLabel__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM170) RogueCmdLabel__requires_semicolon,
  (void*) (ROGUEM171) RogueCmdLabel__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM172) RogueCmdLabel__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM173) RogueTable_String_CmdLabel___init_object, // Table<<String,CmdLabel>>
  (void*) (ROGUEM173) RogueTable_String_CmdLabel___init,
  (void*) (ROGUEM174) RogueTable_String_CmdLabel___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM174) RogueTable_String_CmdLabel___type_name,
  (void*) (ROGUEM175) RogueTableEntry_String_CmdLabel__List__init_object, // TableEntry<<String,CmdLabel>>[]
  (void*) (ROGUEM175) RogueTableEntry_String_CmdLabel__List__init,
  (void*) (ROGUEM176) RogueTableEntry_String_CmdLabel__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM176) RogueTableEntry_String_CmdLabel__List__type_name,
  (void*) (ROGUEM177) RogueTableEntry_String_CmdLabel___init_object, // TableEntry<<String,CmdLabel>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM178) RogueTableEntry_String_CmdLabel___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM178) RogueTableEntry_String_CmdLabel___type_name,
  (void*) (ROGUEM179) RogueMethodTemplate__init_object, // MethodTemplate
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM180) RogueMethodTemplate__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM180) RogueMethodTemplate__type_name,
  (void*) (ROGUEM181) RogueMethodTemplate_List__init_object, // MethodTemplate[]
  (void*) (ROGUEM181) RogueMethodTemplate_List__init,
  (void*) (ROGUEM182) RogueMethodTemplate_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM182) RogueMethodTemplate_List__type_name,
  (void*) (ROGUEM183) RogueTable_String_Method_List___init_object, // Table<<String,Method[]>>
  (void*) (ROGUEM183) RogueTable_String_Method_List___init,
  (void*) (ROGUEM184) RogueTable_String_Method_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM184) RogueTable_String_Method_List___type_name,
  (void*) (ROGUEM185) RogueTableEntry_String_Method_List__List__init_object, // TableEntry<<String,Method[]>>[]
  (void*) (ROGUEM185) RogueTableEntry_String_Method_List__List__init,
  (void*) (ROGUEM186) RogueTableEntry_String_Method_List__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM186) RogueTableEntry_String_Method_List__List__type_name,
  (void*) (ROGUEM187) RogueTableEntry_String_Method_List___init_object, // TableEntry<<String,Method[]>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM188) RogueTableEntry_String_Method_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM188) RogueTableEntry_String_Method_List___type_name,
  (void*) (ROGUEM189) RogueTable_String_Method___init_object, // Table<<String,Method>>
  (void*) (ROGUEM189) RogueTable_String_Method___init,
  (void*) (ROGUEM190) RogueTable_String_Method___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM190) RogueTable_String_Method___type_name,
  (void*) (ROGUEM191) RogueTableEntry_String_Method__List__init_object, // TableEntry<<String,Method>>[]
  (void*) (ROGUEM191) RogueTableEntry_String_Method__List__init,
  (void*) (ROGUEM192) RogueTableEntry_String_Method__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM192) RogueTableEntry_String_Method__List__type_name,
  (void*) (ROGUEM193) RogueTableEntry_String_Method___init_object, // TableEntry<<String,Method>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM194) RogueTableEntry_String_Method___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM194) RogueTableEntry_String_Method___type_name,
  (void*) (ROGUEM195) RogueMethodTemplates__init_object, // MethodTemplates
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM196) RogueMethodTemplates__type_name,
  (void*) (ROGUEM197) RogueTable_String_ParseReader___init_object, // Table<<String,ParseReader>>
  (void*) (ROGUEM197) RogueTable_String_ParseReader___init,
  (void*) (ROGUEM198) RogueTable_String_ParseReader___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM198) RogueTable_String_ParseReader___type_name,
  (void*) (ROGUEM199) RogueTableEntry_String_ParseReader__List__init_object, // TableEntry<<String,ParseReader>>[]
  (void*) (ROGUEM199) RogueTableEntry_String_ParseReader__List__init,
  (void*) (ROGUEM200) RogueTableEntry_String_ParseReader__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM200) RogueTableEntry_String_ParseReader__List__type_name,
  (void*) (ROGUEM201) RogueTableEntry_String_ParseReader___init_object, // TableEntry<<String,ParseReader>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM202) RogueTableEntry_String_ParseReader___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM202) RogueTableEntry_String_ParseReader___type_name,
  (void*) (ROGUEM203) RogueParseReader__init_object, // ParseReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM204) RogueParseReader__type_name,
  (void*) (ROGUEM205) RogueStopwatch__init_object, // Stopwatch
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM206) RogueStopwatch__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM206) RogueStopwatch__type_name,
  (void*) (ROGUEM207) RoguePlugin_List__init_object, // Plugin[]
  (void*) (ROGUEM207) RoguePlugin_List__init,
  (void*) (ROGUEM208) RoguePlugin_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM208) RoguePlugin_List__type_name,
  (void*) (ROGUEM209) RoguePlugin__init_object, // Plugin
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM210) RoguePlugin__type_name,
  (void*) (ROGUEM211) RogueFunction__RETURNSLogical__init_object, // Function()->Logical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM212) RogueFunction__RETURNSLogical__type_name,
  (void*) (ROGUEM213) RogueFunction__RETURNSLogical__call,
  (void*) (ROGUEM214) RogueProgram__init_object, // Program
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM215) RogueProgram__type_name,
  (void*) (ROGUEM216) RogueTemplate_List__init_object, // Template[]
  (void*) (ROGUEM216) RogueTemplate_List__init,
  (void*) (ROGUEM217) RogueTemplate_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM217) RogueTemplate_List__type_name,
  (void*) (ROGUEM218) RogueTable_String_Template___init_object, // Table<<String,Template>>
  (void*) (ROGUEM218) RogueTable_String_Template___init,
  (void*) (ROGUEM219) RogueTable_String_Template___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM219) RogueTable_String_Template___type_name,
  (void*) (ROGUEM220) RogueTableEntry_String_Template__List__init_object, // TableEntry<<String,Template>>[]
  (void*) (ROGUEM220) RogueTableEntry_String_Template__List__init,
  (void*) (ROGUEM221) RogueTableEntry_String_Template__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM221) RogueTableEntry_String_Template__List__type_name,
  (void*) (ROGUEM222) RogueTableEntry_String_Template___init_object, // TableEntry<<String,Template>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM223) RogueTableEntry_String_Template___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM223) RogueTableEntry_String_Template___type_name,
  (void*) (ROGUEM224) RogueTable_String_Augment_List___init_object, // Table<<String,Augment[]>>
  (void*) (ROGUEM224) RogueTable_String_Augment_List___init,
  (void*) (ROGUEM225) RogueTable_String_Augment_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM225) RogueTable_String_Augment_List___type_name,
  (void*) (ROGUEM226) RogueTableEntry_String_Augment_List__List__init_object, // TableEntry<<String,Augment[]>>[]
  (void*) (ROGUEM226) RogueTableEntry_String_Augment_List__List__init,
  (void*) (ROGUEM227) RogueTableEntry_String_Augment_List__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM227) RogueTableEntry_String_Augment_List__List__type_name,
  (void*) (ROGUEM228) RogueTableEntry_String_Augment_List___init_object, // TableEntry<<String,Augment[]>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM229) RogueTableEntry_String_Augment_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM229) RogueTableEntry_String_Augment_List___type_name,
  (void*) (ROGUEM230) RogueAugment_List__init_object, // Augment[]
  (void*) (ROGUEM230) RogueAugment_List__init,
  (void*) (ROGUEM231) RogueAugment_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM231) RogueAugment_List__type_name,
  (void*) (ROGUEM232) RogueAugment__init_object, // Augment
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM233) RogueAugment__type_name,
  (void*) (ROGUEM234) RogueTable_String_Type___init_object, // Table<<String,Type>>
  (void*) (ROGUEM234) RogueTable_String_Type___init,
  (void*) (ROGUEM235) RogueTable_String_Type___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM235) RogueTable_String_Type___type_name,
  (void*) (ROGUEM236) RogueTableEntry_String_Type__List__init_object, // TableEntry<<String,Type>>[]
  (void*) (ROGUEM236) RogueTableEntry_String_Type__List__init,
  (void*) (ROGUEM237) RogueTableEntry_String_Type__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM237) RogueTableEntry_String_Type__List__type_name,
  (void*) (ROGUEM238) RogueTableEntry_String_Type___init_object, // TableEntry<<String,Type>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM239) RogueTableEntry_String_Type___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM239) RogueTableEntry_String_Type___type_name,
  (void*) (ROGUEM240) RogueTable_String_Int32___init_object, // Table<<String,Int32>>
  (void*) (ROGUEM240) RogueTable_String_Int32___init,
  (void*) (ROGUEM241) RogueTable_String_Int32___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM241) RogueTable_String_Int32___type_name,
  (void*) (ROGUEM242) RogueTableEntry_String_Int32__List__init_object, // TableEntry<<String,Int32>>[]
  (void*) (ROGUEM242) RogueTableEntry_String_Int32__List__init,
  (void*) (ROGUEM243) RogueTableEntry_String_Int32__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM243) RogueTableEntry_String_Int32__List__type_name,
  (void*) (ROGUEM244) RogueTableEntry_String_Int32___init_object, // TableEntry<<String,Int32>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM245) RogueTableEntry_String_Int32___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM245) RogueTableEntry_String_Int32___type_name,
  (void*) (ROGUEM246) RogueTable_String_String_List___init_object, // Table<<String,String[]>>
  (void*) (ROGUEM246) RogueTable_String_String_List___init,
  (void*) (ROGUEM247) RogueTable_String_String_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM247) RogueTable_String_String_List___type_name,
  (void*) (ROGUEM248) RogueTableEntry_String_String_List__List__init_object, // TableEntry<<String,String[]>>[]
  (void*) (ROGUEM248) RogueTableEntry_String_String_List__List__init,
  (void*) (ROGUEM249) RogueTableEntry_String_String_List__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM249) RogueTableEntry_String_String_List__List__type_name,
  (void*) (ROGUEM250) RogueTableEntry_String_String_List___init_object, // TableEntry<<String,String[]>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM251) RogueTableEntry_String_String_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM251) RogueTableEntry_String_String_List___type_name,
  (void*) (ROGUEM252) RogueError__init_object, // Error
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM2) RogueException__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM253) RogueError__type_name,
  (void*) (ROGUEM3) RogueException__init__String,
  (void*) (ROGUEM254) RogueRogueError__init_object, // RogueError
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM255) RogueRogueError__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM255) RogueRogueError__type_name,
  (void*) (ROGUEM3) RogueException__init__String,
  (void*) (ROGUEM256) RogueCmdAccess__init_object, // CmdAccess
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM257) RogueCmdAccess__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM258) RogueCmdAccess__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM259) RogueCmdAccess__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM260) RogueCmdAccess__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM261) RogueCmdAccess__resolve__Scope,
  (void*) (ROGUEM262) RogueCmdAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM263) RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM264) Rogue_CmdAccess__type,
  (void*) (ROGUEM265) RogueCmdAccess__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM266) RogueCmdArgs__init_object, // CmdArgs
  (void*) (ROGUEM266) RogueCmdArgs__init,
  (void*) (ROGUEM159) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM267) RogueCmdArgs__type_name,
  (void*) (ROGUEM268) RogueCmdArgs__init__Int32,
  (void*) (ROGUEM269) RogueCmdNamedArg_List__init_object, // CmdNamedArg[]
  (void*) (ROGUEM269) RogueCmdNamedArg_List__init,
  (void*) (ROGUEM270) RogueCmdNamedArg_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM270) RogueCmdNamedArg_List__type_name,
  (void*) (ROGUEM271) RogueCmdNamedArg__init_object, // CmdNamedArg
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM272) RogueCmdNamedArg__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM273) RogueCmdNamedArg__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM274) RogueCmdNamedArg__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM275) RogueCmdReturn__init_object, // CmdReturn
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM276) RogueCmdReturn__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM277) RogueCmdReturn__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM278) RogueCmdReturn__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM279) RogueCmdReturn__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM280) Rogue_CmdReturn__type,
  (void*) (ROGUEM281) RogueCmdReturn__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM282) RogueCmdStatement__init_object, // CmdStatement
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM283) RogueCmdStatement__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM284) RogueCmdStatement__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM285) RogueScope__init_object, // Scope
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM286) RogueScope__type_name,
  (void*) (ROGUEM287) RogueCmdControlStructure_List__init_object, // CmdControlStructure[]
  (void*) (ROGUEM287) RogueCmdControlStructure_List__init,
  (void*) (ROGUEM288) RogueCmdControlStructure_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM288) RogueCmdControlStructure_List__type_name,
  (void*) (ROGUEM289) RogueCmdControlStructure__init_object, // CmdControlStructure
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM290) RogueCmdControlStructure__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM291) RogueCmdControlStructure__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM294) RogueCmdTaskControlSection__init_object, // CmdTaskControlSection
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM295) RogueCmdTaskControlSection__type_name,
  (void*) (ROGUEM296) RogueFunction_Type_RETURNSLogical__init_object, // Function(Type)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM297) RogueFunction_Type_RETURNSLogical__type_name,
  (void*) (ROGUEM298) RogueFunction_Type_RETURNSLogical__call__Type,
  (void*) (ROGUEM299) RogueFunction_383__init_object, // Function_383
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM300) RogueFunction_383__type_name,
  (void*) (ROGUEM301) RogueFunction_383__call__Type,
  (void*) (ROGUEM302) RogueFunction_384__init_object, // Function_384
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM303) RogueFunction_384__type_name,
  (void*) (ROGUEM304) RogueFunction_384__call__Type,
  (void*) (ROGUEM305) RogueCPPWriter__init_object, // CPPWriter
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM306) RogueCPPWriter__type_name,
  (void*) (ROGUEM307) RogueSystem__init_object, // System
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM308) RogueSystem__type_name,
  (void*) (ROGUEM309) RogueMath__init_object, // Math
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM310) RogueMath__type_name,
  0, // Reader<<Byte>>
  0, // Writer<<Byte>>
  (void*) (ROGUEM311) RogueFile__init_object, // File
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM312) RogueFile__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM312) RogueFile__type_name,
  (void*) (ROGUEM313) RogueCmdMakeRequisite__init_object, // CmdMakeRequisite
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM314) RogueCmdMakeRequisite__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM315) RogueCmdMakeRequisite__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM316) RogueCmdMakeRequisite__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM317) RogueCmdMakeRequisite__requires_semicolon,
  (void*) (ROGUEM318) RogueCmdMakeRequisite__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM319) RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM320) RogueLineReader__init_object, // LineReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM321) RogueLineReader__type_name,
  (void*) (ROGUEM322) RogueFunction_798__init_object, // Function_798
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM323) RogueFunction_798__type_name,
  (void*) (ROGUEM324) RogueFunction_798__call,
  (void*) (ROGUEM325) RogueTokenizer__init_object, // Tokenizer
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM326) RogueTokenizer__type_name,
  (void*) (ROGUEM327) RoguePreprocessor__init_object, // Preprocessor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM328) RoguePreprocessor__type_name,
  (void*) (ROGUEM329) RogueTable_String_Token_List___init_object, // Table<<String,Token[]>>
  (void*) (ROGUEM329) RogueTable_String_Token_List___init,
  (void*) (ROGUEM330) RogueTable_String_Token_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM330) RogueTable_String_Token_List___type_name,
  (void*) (ROGUEM331) RogueTableEntry_String_Token_List__List__init_object, // TableEntry<<String,Token[]>>[]
  (void*) (ROGUEM331) RogueTableEntry_String_Token_List__List__init,
  (void*) (ROGUEM332) RogueTableEntry_String_Token_List__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM332) RogueTableEntry_String_Token_List__List__type_name,
  (void*) (ROGUEM333) RogueTableEntry_String_Token_List___init_object, // TableEntry<<String,Token[]>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM334) RogueTableEntry_String_Token_List___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM334) RogueTableEntry_String_Token_List___type_name,
  (void*) (ROGUEM335) RoguePreprocessorTokenReader__init_object, // PreprocessorTokenReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM336) RoguePreprocessorTokenReader__type_name,
  (void*) (ROGUEM337) RogueLiteralCharacterToken__init_object, // LiteralCharacterToken
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM338) RogueLiteralCharacterToken__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM338) RogueLiteralCharacterToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM339) RogueLiteralCharacterToken__to_Character,
  (void*) (ROGUEM73) RogueToken__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM75) RogueToken__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM340) RogueLiteralInt64Token__init_object, // LiteralInt64Token
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM341) RogueLiteralInt64Token__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM341) RogueLiteralInt64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM342) RogueLiteralInt64Token__to_Int32,
  (void*) (ROGUEM343) RogueLiteralInt64Token__to_Int64,
  (void*) (ROGUEM344) RogueLiteralInt64Token__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM345) RogueLiteralInt32Token__init_object, // LiteralInt32Token
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM346) RogueLiteralInt32Token__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM346) RogueLiteralInt32Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM347) RogueLiteralInt32Token__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM348) RogueLiteralInt32Token__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM349) RogueLiteralReal64Token__init_object, // LiteralReal64Token
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM350) RogueLiteralReal64Token__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM350) RogueLiteralReal64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM351) RogueLiteralReal64Token__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM352) RogueLiteralReal64Token__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM353) RogueStringDataToken__init_object, // StringDataToken
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM354) RogueStringDataToken__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM354) RogueStringDataToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM354) RogueStringDataToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM73) RogueToken__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM75) RogueToken__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM355) RogueEOLToken__init_object, // EOLToken
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM356) RogueEOLToken__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM356) RogueEOLToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM73) RogueToken__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM75) RogueToken__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,
  (void*) (ROGUEM357) RogueCmdLiteralLogical__init_object, // CmdLiteralLogical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM358) RogueCmdLiteralLogical__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM359) RogueCmdLiteralLogical__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM360) RogueCmdLiteralLogical__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM363) RogueCmdLiteralLogical__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM364) RogueCmdLiteralLogical__to_Logical,
  0,
  (void*) (ROGUEM365) Rogue_CmdLiteralLogical__type,
  (void*) (ROGUEM366) RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM367) RogueCmdLiteral__init_object, // CmdLiteral
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM368) RogueCmdLiteral__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM369) RogueCmdLiteral__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM370) RogueCmdLiteralInt32__init_object, // CmdLiteralInt32
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM371) RogueCmdLiteralInt32__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM372) RogueCmdLiteralInt32__cast_to__Type_Scope,
  (void*) (ROGUEM373) RogueCmdLiteralInt32__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM374) RogueCmdLiteralInt32__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM375) RogueCmdLiteralInt32__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM376) RogueCmdLiteralInt32__to_Logical,
  0,
  (void*) (ROGUEM377) Rogue_CmdLiteralInt32__type,
  (void*) (ROGUEM378) RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM379) RogueCloneArgs__init_object, // CloneArgs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM380) RogueCloneArgs__type_name,
  (void*) (ROGUEM381) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM382) RogueCmdAdd__init_object, // CmdAdd
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM383) RogueCmdAdd__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM384) RogueCmdAdd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM385) RogueCmdAdd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM386) RogueCmdAdd__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM383) RogueCmdAdd__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM393) RogueCmdAdd__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM383) RogueCmdAdd__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM395) RogueCmdBinary__init_object, // CmdBinary
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM396) RogueCmdBinary__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM394) RogueCmdBinary__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM397) RoguePropertyTable__init_object, // PropertyTable
  (void*) (ROGUEM397) RoguePropertyTable__init,
  (void*) (ROGUEM398) RoguePropertyTable__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM398) RoguePropertyTable__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM399) RoguePropertyTable__get__String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM400) RoguePropertyTable__set__String_PropertyValue,
  (void*) (ROGUEM401) RoguePropertyValue__to_Int32,
  (void*) (ROGUEM402) RoguePropertyValue__init_object, // PropertyValue
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM403) RoguePropertyValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM404) RoguePropertyValue__get__String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM401) RoguePropertyValue__to_Int32,
  (void*) (ROGUEM405) RogueTable_String_PropertyValue___init_object, // Table<<String,PropertyValue>>
  (void*) (ROGUEM405) RogueTable_String_PropertyValue___init,
  (void*) (ROGUEM406) RogueTable_String_PropertyValue___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM406) RogueTable_String_PropertyValue___type_name,
  (void*) (ROGUEM407) RogueTableEntry_String_PropertyValue__List__init_object, // TableEntry<<String,PropertyValue>>[]
  (void*) (ROGUEM407) RogueTableEntry_String_PropertyValue__List__init,
  (void*) (ROGUEM408) RogueTableEntry_String_PropertyValue__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM408) RogueTableEntry_String_PropertyValue__List__type_name,
  (void*) (ROGUEM409) RogueTableEntry_String_PropertyValue___init_object, // TableEntry<<String,PropertyValue>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM410) RogueTableEntry_String_PropertyValue___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM410) RogueTableEntry_String_PropertyValue___type_name,
  (void*) (ROGUEM411) RogueCmdNativeHeader__init_object, // CmdNativeHeader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM412) RogueCmdNativeHeader__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM413) RogueCmdNativeHeader__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM414) RogueCmdNativeHeader__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM415) RogueCmdNativeHeader__requires_semicolon,
  (void*) (ROGUEM416) RogueCmdNativeHeader__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM417) RogueCmdNativeCode__init_object, // CmdNativeCode
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM418) RogueCmdNativeCode__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM419) RogueCmdNativeCode__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM420) RogueCmdNativeCode__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM421) RogueCmdNativeCode__requires_semicolon,
  (void*) (ROGUEM422) RogueCmdNativeCode__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM423) RogueCmdIf__init_object, // CmdIf
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM424) RogueCmdIf__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM425) RogueCmdIf__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM426) RogueCmdIf__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM427) RogueCmdIf__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM428) RogueCmdIf__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM429) RogueCmdWhich__init_object, // CmdWhich
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM430) RogueCmdWhich__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM431) RogueCmdWhich__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM432) RogueCmdWhich__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM433) RogueCmdWhich__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM434) RogueCmdWhichCase_List__init_object, // CmdWhichCase[]
  (void*) (ROGUEM434) RogueCmdWhichCase_List__init,
  (void*) (ROGUEM435) RogueCmdWhichCase_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM435) RogueCmdWhichCase_List__type_name,
  (void*) (ROGUEM436) RogueCmdWhichCase__init_object, // CmdWhichCase
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM437) RogueCmdWhichCase__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM438) RogueCmdWhichCase__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM439) RogueCmdWhichCase__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM440) RogueCmdBlock__init_object, // CmdBlock
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM441) RogueCmdBlock__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM442) RogueCmdBlock__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM443) RogueCmdBlock__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM444) RogueCmdBlock__requires_semicolon,
  (void*) (ROGUEM445) RogueCmdBlock__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM446) RogueCmdBlock__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM447) RogueCmdContingent__init_object, // CmdContingent
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM448) RogueCmdContingent__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM449) RogueCmdContingent__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM450) RogueCmdContingent__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM451) RogueCmdContingent__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM452) RogueCmdContingent__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM453) RogueCmdContingent__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM454) RogueCmdGenericLoop__init_object, // CmdGenericLoop
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM455) RogueCmdGenericLoop__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM456) RogueCmdGenericLoop__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM457) RogueCmdGenericLoop__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM458) RogueCmdGenericLoop__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM459) RogueCmdGenericLoop__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM460) RogueCmdTry__init_object, // CmdTry
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM461) RogueCmdTry__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM462) RogueCmdTry__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM463) RogueCmdTry__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM464) RogueCmdTry__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM465) RogueCmdTry__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM466) RogueCmdCatch_List__init_object, // CmdCatch[]
  (void*) (ROGUEM466) RogueCmdCatch_List__init,
  (void*) (ROGUEM467) RogueCmdCatch_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM467) RogueCmdCatch_List__type_name,
  (void*) (ROGUEM468) RogueCmdCatch__init_object, // CmdCatch
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM469) RogueCmdCatch__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM470) RogueCmdCatch__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM471) RogueCmdCatch__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM472) RogueCmdCatch__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM473) RogueCmdCatch__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM474) RogueCmdAwait__init_object, // CmdAwait
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM475) RogueCmdAwait__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM476) RogueCmdAwait__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM477) RogueCmdAwait__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM478) RogueCmdAwait__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM479) RogueCmdYield__init_object, // CmdYield
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM480) RogueCmdYield__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM481) RogueCmdYield__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM482) RogueCmdYield__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM483) RogueCmdYield__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM484) RogueCmdThrow__init_object, // CmdThrow
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM485) RogueCmdThrow__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM486) RogueCmdThrow__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM487) RogueCmdThrow__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM488) RogueCmdThrow__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM489) RogueCmdThrow__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM490) RogueCmdLiteralString__init_object, // CmdLiteralString
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM491) RogueCmdLiteralString__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM492) RogueCmdLiteralString__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM493) RogueCmdLiteralString__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM494) RogueCmdLiteralString__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM495) RogueCmdLiteralString__to_Logical,
  0,
  (void*) (ROGUEM496) Rogue_CmdLiteralString__type,
  (void*) (ROGUEM497) RogueCmdLiteralString__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM498) RogueCmdFormattedString__init_object, // CmdFormattedString
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM499) RogueCmdFormattedString__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM500) RogueCmdFormattedString__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM501) RogueCmdFormattedString__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM502) RogueCmdFormattedString__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM503) RogueCmdFormattedString__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM504) Rogue_CmdFormattedString__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM505) RogueCmdTrace__init_object, // CmdTrace
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM506) RogueCmdTrace__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM507) RogueCmdTrace__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM508) RogueCmdTrace__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM509) RogueCmdTrace__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM510) RogueCmdLocalDeclaration__init_object, // CmdLocalDeclaration
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM511) RogueCmdLocalDeclaration__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM512) RogueCmdLocalDeclaration__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM513) RogueCmdLocalDeclaration__dispatch__Visitor,
  (void*) (ROGUEM514) RogueCmdLocalDeclaration__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM515) RogueCmdLocalDeclaration__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM516) RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM517) RogueCmdAssert__init_object, // CmdAssert
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM518) RogueCmdAssert__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM519) RogueCmdAssert__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM520) RogueCmdAssert__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM521) RogueCmdAssert__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM522) Rogue_CmdAssert__type,
  (void*) (ROGUEM523) RogueCmdAssert__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM524) RogueCmdEscape__init_object, // CmdEscape
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM525) RogueCmdEscape__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM526) RogueCmdEscape__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM527) RogueCmdEscape__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM528) RogueCmdEscape__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM529) RogueCmdEscape__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM530) RogueCmdNextIteration__init_object, // CmdNextIteration
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM531) RogueCmdNextIteration__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM532) RogueCmdNextIteration__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM533) RogueCmdNextIteration__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM534) RogueCmdNextIteration__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM535) RogueCmdNextIteration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM536) RogueCmdNecessary__init_object, // CmdNecessary
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM537) RogueCmdNecessary__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM538) RogueCmdNecessary__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM539) RogueCmdNecessary__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM540) RogueCmdNecessary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM541) RogueCmdNecessary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM542) RogueCmdSufficient__init_object, // CmdSufficient
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM543) RogueCmdSufficient__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM544) RogueCmdSufficient__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM545) RogueCmdSufficient__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM546) RogueCmdSufficient__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM547) RogueCmdSufficient__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM548) RogueCmdAdjust__init_object, // CmdAdjust
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM549) RogueCmdAdjust__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM550) RogueCmdAdjust__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM551) RogueCmdAdjust__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM552) RogueCmdAssign__init_object, // CmdAssign
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM553) RogueCmdAssign__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM554) RogueCmdAssign__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM555) RogueCmdAssign__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM556) RogueCmdAssign__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM557) RogueCmdModifyAndAssign__init_object, // CmdModifyAndAssign
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM558) RogueCmdModifyAndAssign__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM559) RogueCmdModifyAndAssign__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM560) RogueCmdModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM561) RogueCmdModifyAndAssign__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM562) RogueCmdAdjustLocal__init_object, // CmdAdjustLocal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM563) RogueCmdAdjustLocal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM564) RogueCmdAdjustLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM565) RogueCmdAdjustLocal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM566) RogueCmdAdjustLocal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM567) Rogue_CmdAdjustLocal__type,
  (void*) (ROGUEM568) RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM569) RogueCmdReadLocal__init_object, // CmdReadLocal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM570) RogueCmdReadLocal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM571) RogueCmdReadLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM572) RogueCmdReadLocal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM573) RogueCmdReadLocal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM574) RogueCmdReadLocal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM575) Rogue_CmdReadLocal__type,
  (void*) (ROGUEM576) RogueCmdReadLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM577) RogueCmdCompareLE__init_object, // CmdCompareLE
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM578) RogueCmdCompareLE__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM579) RogueCmdCompareLE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM580) RogueCmdCompareLE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM581) RogueCmdCompareLE__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM578) RogueCmdCompareLE__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM585) RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM586) RogueCmdComparison__init_object, // CmdComparison
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM587) RogueCmdComparison__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM588) RogueCmdComparison__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM394) RogueCmdBinary__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM589) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM590) RogueCmdRange__init_object, // CmdRange
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM591) RogueCmdRange__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM592) RogueCmdRange__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM593) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM594) RogueCmdRange__default_step_size,
  (void*) (ROGUEM595) RogueCmdModifyAndAssignLocal__init_object, // CmdModifyAndAssignLocal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM596) RogueCmdModifyAndAssignLocal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM597) RogueCmdModifyAndAssignLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM598) RogueCmdModifyAndAssignLocal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM599) RogueCmdModifyAndAssignLocal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM600) Rogue_CmdModifyAndAssignLocal__type,
  (void*) (ROGUEM601) RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM602) RogueCmdResolvedModifyAndAssign__init_object, // CmdResolvedModifyAndAssign
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM603) RogueCmdResolvedModifyAndAssign__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM604) RogueCmdResolvedModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM605) RogueCmdRangeUpTo__init_object, // CmdRangeUpTo
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM606) RogueCmdRangeUpTo__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM607) RogueCmdRangeUpTo__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM608) RogueCmdRangeUpTo__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM593) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM594) RogueCmdRange__default_step_size,
  (void*) (ROGUEM609) RogueCmdRangeUpToLessThan__init_object, // CmdRangeUpToLessThan
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM610) RogueCmdRangeUpToLessThan__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM611) RogueCmdRangeUpToLessThan__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM612) RogueCmdRangeUpToLessThan__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM593) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM594) RogueCmdRange__default_step_size,
  (void*) (ROGUEM613) RogueCmdCompareLT__init_object, // CmdCompareLT
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM614) RogueCmdCompareLT__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM615) RogueCmdCompareLT__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM616) RogueCmdCompareLT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM617) RogueCmdCompareLT__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM614) RogueCmdCompareLT__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM618) RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM619) RogueCmdCompareGE__init_object, // CmdCompareGE
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM620) RogueCmdCompareGE__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM621) RogueCmdCompareGE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM622) RogueCmdCompareGE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM623) RogueCmdCompareGE__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM620) RogueCmdCompareGE__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM624) RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM625) RogueCmdForEach__init_object, // CmdForEach
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM626) RogueCmdForEach__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM627) RogueCmdForEach__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM628) RogueCmdForEach__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM629) RogueCmdForEach__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM630) RogueCmdRangeDownTo__init_object, // CmdRangeDownTo
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM631) RogueCmdRangeDownTo__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM632) RogueCmdRangeDownTo__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM633) RogueCmdRangeDownTo__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM593) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM634) RogueCmdRangeDownTo__default_step_size,
  (void*) (ROGUEM635) RogueCmdLogicalXor__init_object, // CmdLogicalXor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM636) RogueCmdLogicalXor__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM637) RogueCmdLogicalXor__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM638) RogueCmdLogicalXor__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM639) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM640) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM641) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM636) RogueCmdLogicalXor__symbol,
  (void*) (ROGUEM636) RogueCmdLogicalXor__cpp_symbol,
  (void*) (ROGUEM642) RogueCmdLogicalXor__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM643) RogueCmdBinaryLogical__init_object, // CmdBinaryLogical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM644) RogueCmdBinaryLogical__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM645) RogueCmdBinaryLogical__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM639) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM640) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM641) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM394) RogueCmdBinary__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM646) RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM647) RogueCmdLogicalOr__init_object, // CmdLogicalOr
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM648) RogueCmdLogicalOr__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM649) RogueCmdLogicalOr__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM650) RogueCmdLogicalOr__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM639) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM640) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM641) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM648) RogueCmdLogicalOr__symbol,
  (void*) (ROGUEM648) RogueCmdLogicalOr__cpp_symbol,
  (void*) (ROGUEM651) RogueCmdLogicalOr__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM652) RogueCmdLogicalAnd__init_object, // CmdLogicalAnd
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM653) RogueCmdLogicalAnd__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM654) RogueCmdLogicalAnd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM655) RogueCmdLogicalAnd__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM639) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM640) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM641) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM653) RogueCmdLogicalAnd__symbol,
  (void*) (ROGUEM653) RogueCmdLogicalAnd__cpp_symbol,
  (void*) (ROGUEM656) RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM657) RogueCmdCompareEQ__init_object, // CmdCompareEQ
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM658) RogueCmdCompareEQ__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM659) RogueCmdCompareEQ__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM660) RogueCmdCompareEQ__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM661) RogueCmdCompareEQ__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM662) RogueCmdCompareEQ__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM658) RogueCmdCompareEQ__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM663) RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM664) RogueCmdCompareIs__init_object, // CmdCompareIs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM665) RogueCmdCompareIs__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM666) RogueCmdCompareIs__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM667) RogueCmdCompareIs__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM668) RogueCmdCompareIs__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM669) RogueCmdCompareIs__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM665) RogueCmdCompareIs__symbol,
  (void*) (ROGUEM665) RogueCmdCompareIs__cpp_symbol,
  (void*) (ROGUEM589) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM670) RogueCmdCompareNE__init_object, // CmdCompareNE
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM671) RogueCmdCompareNE__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM672) RogueCmdCompareNE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM673) RogueCmdCompareNE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM674) RogueCmdCompareNE__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM671) RogueCmdCompareNE__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM675) RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM676) RogueCmdCompareIsNot__init_object, // CmdCompareIsNot
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM677) RogueCmdCompareIsNot__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM678) RogueCmdCompareIsNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM679) RogueCmdCompareIsNot__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM680) RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM681) RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM677) RogueCmdCompareIsNot__symbol,
  (void*) (ROGUEM677) RogueCmdCompareIsNot__cpp_symbol,
  (void*) (ROGUEM589) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM682) RogueCmdCompareGT__init_object, // CmdCompareGT
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM683) RogueCmdCompareGT__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM684) RogueCmdCompareGT__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM685) RogueCmdCompareGT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM686) RogueCmdCompareGT__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM582) Rogue_CmdComparison__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM583) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM584) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM683) RogueCmdCompareGT__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM687) RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM688) RogueCmdInstanceOf__init_object, // CmdInstanceOf
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM689) RogueCmdInstanceOf__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM690) RogueCmdInstanceOf__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM691) RogueCmdInstanceOf__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM692) RogueCmdInstanceOf__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM693) Rogue_CmdInstanceOf__type,
  (void*) (ROGUEM694) RogueCmdInstanceOf__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM695) RogueCmdTypeOperator__init_object, // CmdTypeOperator
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM696) RogueCmdTypeOperator__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM697) RogueCmdTypeOperator__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM120) RogueCmd__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM698) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM699) RogueCmdLogicalNot__init_object, // CmdLogicalNot
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM700) RogueCmdLogicalNot__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM701) RogueCmdLogicalNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM702) RogueCmdLogicalNot__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM703) RogueCmdLogicalNot__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM704) Rogue_CmdLogicalNot__type,
  (void*) (ROGUEM705) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM700) RogueCmdLogicalNot__prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__fn_name,
  (void*) (ROGUEM703) RogueCmdLogicalNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM706) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM700) RogueCmdLogicalNot__cpp_prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM707) RogueCmdUnary__init_object, // CmdUnary
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM706) RogueCmdUnary__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM708) RogueCmdUnary__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM709) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM710) Rogue_CmdUnary__type,
  (void*) (ROGUEM705) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM706) RogueCmdUnary__prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__fn_name,
  (void*) (ROGUEM709) RogueCmdUnary__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM706) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM711) RogueCmdBitwiseXor__init_object, // CmdBitwiseXor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM712) RogueCmdBitwiseXor__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM713) RogueCmdBitwiseXor__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM714) RogueCmdBitwiseXor__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM715) RogueCmdBitwiseXor__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM712) RogueCmdBitwiseXor__symbol,
  (void*) (ROGUEM712) RogueCmdBitwiseXor__cpp_symbol,
  (void*) (ROGUEM718) RogueCmdBitwiseOp__init_object, // CmdBitwiseOp
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM719) RogueCmdBitwiseOp__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM720) RogueCmdBitwiseOp__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM394) RogueCmdBinary__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM721) RogueCmdBitwiseOr__init_object, // CmdBitwiseOr
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM722) RogueCmdBitwiseOr__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM723) RogueCmdBitwiseOr__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM724) RogueCmdBitwiseOr__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM725) RogueCmdBitwiseOr__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM722) RogueCmdBitwiseOr__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM726) RogueCmdBitwiseAnd__init_object, // CmdBitwiseAnd
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM727) RogueCmdBitwiseAnd__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM728) RogueCmdBitwiseAnd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM729) RogueCmdBitwiseAnd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM730) RogueCmdBitwiseAnd__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM727) RogueCmdBitwiseAnd__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM731) RogueCmdBitwiseShiftLeft__init_object, // CmdBitwiseShiftLeft
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM732) RogueCmdBitwiseShiftLeft__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM733) RogueCmdBitwiseShiftLeft__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM734) RogueCmdBitwiseShiftLeft__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM735) RogueCmdBitwiseShiftLeft__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM732) RogueCmdBitwiseShiftLeft__symbol,
  (void*) (ROGUEM732) RogueCmdBitwiseShiftLeft__cpp_symbol,
  (void*) (ROGUEM736) RogueCmdBitwiseShiftRight__init_object, // CmdBitwiseShiftRight
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM737) RogueCmdBitwiseShiftRight__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM738) RogueCmdBitwiseShiftRight__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM739) RogueCmdBitwiseShiftRight__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM740) RogueCmdBitwiseShiftRight__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM741) RogueCmdBitwiseShiftRight__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM737) RogueCmdBitwiseShiftRight__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM742) RogueCmdBitwiseShiftRightX__init_object, // CmdBitwiseShiftRightX
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM743) RogueCmdBitwiseShiftRightX__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM744) RogueCmdBitwiseShiftRightX__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM745) RogueCmdBitwiseShiftRightX__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM746) RogueCmdBitwiseShiftRightX__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM394) RogueCmdBinary__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM716) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM717) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM743) RogueCmdBitwiseShiftRightX__symbol,
  (void*) (ROGUEM743) RogueCmdBitwiseShiftRightX__cpp_symbol,
  (void*) (ROGUEM747) RogueCmdSubtract__init_object, // CmdSubtract
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM748) RogueCmdSubtract__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM749) RogueCmdSubtract__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM750) RogueCmdSubtract__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM751) RogueCmdSubtract__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM748) RogueCmdSubtract__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM748) RogueCmdSubtract__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM752) RogueCmdMultiply__init_object, // CmdMultiply
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM753) RogueCmdMultiply__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM754) RogueCmdMultiply__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM755) RogueCmdMultiply__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM756) RogueCmdMultiply__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM753) RogueCmdMultiply__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM753) RogueCmdMultiply__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM757) RogueCmdDivide__init_object, // CmdDivide
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM758) RogueCmdDivide__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM759) RogueCmdDivide__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM760) RogueCmdDivide__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM761) RogueCmdDivide__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM758) RogueCmdDivide__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM758) RogueCmdDivide__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM762) RogueCmdMod__init_object, // CmdMod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM763) RogueCmdMod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM764) RogueCmdMod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM765) RogueCmdMod__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM766) RogueCmdMod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM767) RogueCmdMod__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM389) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM763) RogueCmdMod__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM763) RogueCmdMod__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM768) RogueCmdPower__init_object, // CmdPower
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM769) RogueCmdPower__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM770) RogueCmdPower__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM771) RogueCmdPower__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM772) RogueCmdPower__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM387) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM388) Rogue_CmdBinary__type,
  (void*) (ROGUEM773) RogueCmdPower__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM769) RogueCmdPower__fn_name,
  (void*) (ROGUEM390) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM392) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM391) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM769) RogueCmdPower__symbol,
  (void*) (ROGUEM394) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM774) RogueCmdNegate__init_object, // CmdNegate
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM775) RogueCmdNegate__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM776) RogueCmdNegate__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM777) RogueCmdNegate__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM778) RogueCmdNegate__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM709) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM710) Rogue_CmdUnary__type,
  (void*) (ROGUEM705) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM775) RogueCmdNegate__prefix_symbol,
  (void*) (ROGUEM775) RogueCmdNegate__fn_name,
  (void*) (ROGUEM779) RogueCmdNegate__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM775) RogueCmdNegate__suffix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM780) RogueCmdBitwiseNot__init_object, // CmdBitwiseNot
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM781) RogueCmdBitwiseNot__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM782) RogueCmdBitwiseNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM783) RogueCmdBitwiseNot__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM709) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM784) Rogue_CmdBitwiseNot__type,
  (void*) (ROGUEM705) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM781) RogueCmdBitwiseNot__prefix_symbol,
  (void*) (ROGUEM781) RogueCmdBitwiseNot__fn_name,
  (void*) (ROGUEM785) RogueCmdBitwiseNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM706) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM781) RogueCmdBitwiseNot__cpp_prefix_symbol,
  (void*) (ROGUEM706) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM786) RogueCmdLogicalize__init_object, // CmdLogicalize
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM787) RogueCmdLogicalize__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM788) RogueCmdLogicalize__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM789) RogueCmdLogicalize__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM790) RogueCmdLogicalize__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM791) Rogue_CmdLogicalize__type,
  (void*) (ROGUEM705) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM787) RogueCmdLogicalize__prefix_symbol,
  (void*) (ROGUEM787) RogueCmdLogicalize__fn_name,
  (void*) (ROGUEM790) RogueCmdLogicalize__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM787) RogueCmdLogicalize__suffix_symbol,
  (void*) (ROGUEM787) RogueCmdLogicalize__cpp_prefix_symbol,
  (void*) (ROGUEM787) RogueCmdLogicalize__cpp_suffix_symbol,
  (void*) (ROGUEM792) RogueCmdIsReference__init_object, // CmdIsReference
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM793) RogueCmdIsReference__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM794) RogueCmdIsReference__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM795) RogueCmdIsReference__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM796) RogueCmdIsReference__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM797) Rogue_CmdIsReference__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM798) RogueCmdElementAccess__init_object, // CmdElementAccess
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM799) RogueCmdElementAccess__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM799) RogueCmdElementAccess__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM800) RogueCmdElementAccess__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM801) RogueCmdElementAccess__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM802) RogueCmdElementAccess__resolve__Scope,
  (void*) (ROGUEM803) RogueCmdElementAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM804) RogueCmdElementAccess__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM805) RogueCmdListConvert__init_object, // CmdListConvert
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM806) RogueCmdListConvert__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM807) RogueCmdListConvert__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM808) RogueCmdListConvert__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM809) RogueCmdListConvert__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM810) RogueCmdListConvert__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM811) Rogue_CmdListConvert__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM812) RogueCmdConvertToType__init_object, // CmdConvertToType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM813) RogueCmdConvertToType__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM814) RogueCmdConvertToType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM815) RogueCmdConvertToType__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM816) RogueCmdConvertToType__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM698) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM817) RogueCmdCreateCallback__init_object, // CmdCreateCallback
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM818) RogueCmdCreateCallback__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM819) RogueCmdCreateCallback__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM820) RogueCmdCreateCallback__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM821) RogueCmdCreateCallback__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM822) RogueCmdAs__init_object, // CmdAs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM823) RogueCmdAs__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM824) RogueCmdAs__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM825) RogueCmdAs__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM826) RogueCmdAs__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM698) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM827) RogueCmdAs__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM828) RogueCmdDefaultValue__init_object, // CmdDefaultValue
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM829) RogueCmdDefaultValue__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM830) RogueCmdDefaultValue__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM831) RogueCmdDefaultValue__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM832) RogueCmdDefaultValue__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM833) Rogue_CmdDefaultValue__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM834) RogueCmdLiteralNull__init_object, // CmdLiteralNull
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM835) RogueCmdLiteralNull__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM836) RogueCmdLiteralNull__cast_to__Type_Scope,
  (void*) (ROGUEM837) RogueCmdLiteralNull__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM838) RogueCmdLiteralNull__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM839) RogueCmdLiteralNull__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM840) Rogue_CmdLiteralNull__type,
  (void*) (ROGUEM841) RogueCmdLiteralNull__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM842) RogueCmdLiteralReal64__init_object, // CmdLiteralReal64
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM843) RogueCmdLiteralReal64__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM844) RogueCmdLiteralReal64__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM845) RogueCmdLiteralReal64__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM846) RogueCmdLiteralReal64__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM847) RogueCmdLiteralReal64__to_Logical,
  0,
  (void*) (ROGUEM848) Rogue_CmdLiteralReal64__type,
  (void*) (ROGUEM849) RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM850) RogueCmdLiteralInt64__init_object, // CmdLiteralInt64
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM851) RogueCmdLiteralInt64__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM852) RogueCmdLiteralInt64__cast_to__Type_Scope,
  (void*) (ROGUEM853) RogueCmdLiteralInt64__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM854) RogueCmdLiteralInt64__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM855) RogueCmdLiteralInt64__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM856) RogueCmdLiteralInt64__to_Logical,
  0,
  (void*) (ROGUEM857) Rogue_CmdLiteralInt64__type,
  (void*) (ROGUEM858) RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM859) RogueCmdLiteralCharacter__init_object, // CmdLiteralCharacter
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM860) RogueCmdLiteralCharacter__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM861) RogueCmdLiteralCharacter__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM862) RogueCmdLiteralCharacter__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM361) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM362) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM863) RogueCmdLiteralCharacter__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM864) RogueCmdLiteralCharacter__to_Logical,
  0,
  (void*) (ROGUEM865) Rogue_CmdLiteralCharacter__type,
  (void*) (ROGUEM866) RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM867) RogueCmdLiteralThis__init_object, // CmdLiteralThis
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM868) RogueCmdLiteralThis__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM869) RogueCmdLiteralThis__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM870) RogueCmdLiteralThis__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM871) RogueCmdThisContext__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM872) RogueCmdLiteralThis__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM873) RogueCmdLiteralThis__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM874) Rogue_CmdThisContext__type,
  (void*) (ROGUEM875) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM876) RogueCmdThisContext__init_object, // CmdThisContext
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM877) RogueCmdThisContext__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM878) RogueCmdThisContext__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM879) RogueCmdThisContext__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM871) RogueCmdThisContext__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM880) RogueCmdThisContext__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM881) RogueCmdThisContext__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM874) Rogue_CmdThisContext__type,
  (void*) (ROGUEM875) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM882) RogueCmdCreateList__init_object, // CmdCreateList
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM883) RogueCmdCreateList__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM884) RogueCmdCreateList__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM885) RogueCmdCreateList__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM886) RogueCmdCreateList__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM887) RogueCmdCallPriorMethod__init_object, // CmdCallPriorMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM888) RogueCmdCallPriorMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM889) RogueCmdCallPriorMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM890) RogueCmdCallPriorMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM891) RogueCmdCallPriorMethod__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM892) RogueFnParam_List__init_object, // FnParam[]
  (void*) (ROGUEM892) RogueFnParam_List__init,
  (void*) (ROGUEM893) RogueFnParam_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM893) RogueFnParam_List__type_name,
  (void*) (ROGUEM894) RogueFnParam__init_object, // FnParam
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM895) RogueFnParam__type_name,
  (void*) (ROGUEM896) RogueFnArg_List__init_object, // FnArg[]
  (void*) (ROGUEM896) RogueFnArg_List__init,
  (void*) (ROGUEM897) RogueFnArg_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM897) RogueFnArg_List__type_name,
  (void*) (ROGUEM898) RogueFnArg__init_object, // FnArg
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM899) RogueFnArg__type_name,
  (void*) (ROGUEM900) RogueCmdCreateFunction__init_object, // CmdCreateFunction
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM901) RogueCmdCreateFunction__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM902) RogueCmdCreateFunction__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM903) RogueCmdCreateFunction__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM904) RogueCmdCreateFunction__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM905) RogueCmdCreateFunction__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM906) Rogue_CmdCreateFunction__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM907) RogueCmdInlineNative__init_object, // CmdInlineNative
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM908) RogueCmdInlineNative__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM909) RogueCmdInlineNative__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM910) RogueCmdInlineNative__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM911) RogueCmdInlineNative__requires_semicolon,
  (void*) (ROGUEM912) RogueCmdInlineNative__resolve__Scope,
  (void*) (ROGUEM913) RogueCmdInlineNative__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM914) RogueCmdInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM915) RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM916) Rogue_CmdInlineNative__type,
  (void*) (ROGUEM917) RogueCmdInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM918) RogueCmdSelect__init_object, // CmdSelect
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM919) RogueCmdSelect__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM920) RogueCmdSelect__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM921) RogueCmdSelect__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM922) RogueCmdSelect__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM923) RogueCmdSelect__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM924) Rogue_CmdSelect__type,
  (void*) (ROGUEM925) RogueCmdSelect__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM926) RogueCmdSelectCase_List__init_object, // CmdSelectCase[]
  (void*) (ROGUEM926) RogueCmdSelectCase_List__init,
  (void*) (ROGUEM927) RogueCmdSelectCase_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM927) RogueCmdSelectCase_List__type_name,
  (void*) (ROGUEM928) RogueCmdSelectCase__init_object, // CmdSelectCase
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM929) RogueCmdSelectCase__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM930) RogueCmdSelectCase__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM931) RogueCmdSelectCase__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM932) RogueCmdSelectCase__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM933) RogueCmdSelectCase__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM934) Rogue_CmdSelectCase__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM935) RogueCmdRequire__init_object, // CmdRequire
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM936) RogueCmdRequire__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM937) RogueCmdRequire__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM938) RogueCmdRequire__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM939) RogueCmdRequire__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM940) Rogue_CmdRequire__type,
  (void*) (ROGUEM941) RogueCmdRequire__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM942) RogueCmdEnsure__init_object, // CmdEnsure
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM943) RogueCmdEnsure__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM944) RogueCmdEnsure__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM945) RogueCmdEnsure__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM946) RogueCmdEnsure__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM947) RogueCmdEnsure__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM948) Rogue_CmdEnsure__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM949) RogueCmdTypedLiteralList__init_object, // CmdTypedLiteralList
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM950) RogueCmdTypedLiteralList__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM951) RogueCmdTypedLiteralList__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM952) RogueCmdTypedLiteralList__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM953) RogueCmdTypedLiteralList__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM954) RogueCmdTypedLiteralList__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM955) Rogue_CmdTypedLiteralList__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM956) RogueListRebuilder_Token___init_object, // ListRebuilder<<Token>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM957) RogueListRebuilder_Token___type_name,
  (void*) (ROGUEM958) RogueCmdCreateCompound__init_object, // CmdCreateCompound
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM959) RogueCmdCreateCompound__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM960) RogueCmdCreateCompound__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM961) RogueCmdCreateCompound__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM962) RogueCmdCreateCompound__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM963) Rogue_CmdCreateCompound__type,
  (void*) (ROGUEM964) RogueCmdCreateCompound__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM965) RogueVisitor__init_object, // Visitor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM966) RogueVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM967) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM968) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM969) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM970) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM971) RogueVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM972) RogueCmdSwitch__init_object, // CmdSwitch
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM973) RogueCmdSwitch__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM974) RogueCmdSwitch__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM975) RogueCmdSwitch__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM292) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM976) RogueCmdSwitch__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM977) RogueCmdSwitch__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM293) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM978) RogueCmdCreateObject__init_object, // CmdCreateObject
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM979) RogueCmdCreateObject__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM980) RogueCmdCreateObject__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM981) RogueCmdCreateObject__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM982) RogueCmdCreateObject__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM983) Rogue_CmdCreateObject__type,
  (void*) (ROGUEM984) RogueCmdCreateObject__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM985) RogueCmdReadSingleton__init_object, // CmdReadSingleton
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM986) RogueCmdReadSingleton__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM987) RogueCmdReadSingleton__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM988) RogueCmdReadSingleton__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM989) RogueCmdReadSingleton__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM990) RogueCmdReadSingleton__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM991) Rogue_CmdReadSingleton__type,
  (void*) (ROGUEM992) RogueCmdReadSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM993) RogueCmdWriteSingleton__init_object, // CmdWriteSingleton
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM994) RogueCmdWriteSingleton__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM995) RogueCmdWriteSingleton__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM996) RogueCmdWriteSingleton__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM997) RogueCmdWriteSingleton__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM998) RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM999) RogueCmdWriteLocal__init_object, // CmdWriteLocal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1000) RogueCmdWriteLocal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1001) RogueCmdWriteLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1002) RogueCmdWriteLocal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1003) RogueCmdWriteLocal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM1004) RogueCmdWriteLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1005) RogueCmdReadGlobal__init_object, // CmdReadGlobal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1006) RogueCmdReadGlobal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1007) RogueCmdReadGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1008) RogueCmdReadGlobal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1009) RogueCmdReadGlobal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1010) RogueCmdReadGlobal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1011) Rogue_CmdReadGlobal__type,
  (void*) (ROGUEM1012) RogueCmdReadGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1013) RogueCmdWriteGlobal__init_object, // CmdWriteGlobal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1014) RogueCmdWriteGlobal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1015) RogueCmdWriteGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1016) RogueCmdWriteGlobal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1017) RogueCmdWriteGlobal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM1018) RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1019) RogueCmdReadProperty__init_object, // CmdReadProperty
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1020) RogueCmdReadProperty__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1021) RogueCmdReadProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1022) RogueCmdReadProperty__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1023) RogueCmdReadProperty__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1024) RogueCmdReadProperty__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1025) Rogue_CmdReadProperty__type,
  (void*) (ROGUEM1026) RogueCmdReadProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1027) RogueCmdWriteProperty__init_object, // CmdWriteProperty
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1028) RogueCmdWriteProperty__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1029) RogueCmdWriteProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1030) RogueCmdWriteProperty__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1031) RogueCmdWriteProperty__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM1032) RogueCmdWriteProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1033) RogueCmdCall__init_object, // CmdCall
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1034) RogueCmdCall__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1035) RogueCmdCall__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1039) RogueCmdCallDynamicMethod__init_object, // CmdCallDynamicMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1040) RogueCmdCallDynamicMethod__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1040) RogueCmdCallDynamicMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1041) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1042) RogueCmdCallDynamicMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1043) RogueCmdCallDynamicMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1044) RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1045) RogueCmdCallMethod__init_object, // CmdCallMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1046) RogueCmdCallMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1041) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1047) RogueCmdCallMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM133) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1048) RogueCmdAdjustProperty__init_object, // CmdAdjustProperty
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1049) RogueCmdAdjustProperty__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1050) RogueCmdAdjustProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1051) RogueCmdAdjustProperty__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1052) RogueCmdAdjustProperty__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1053) Rogue_CmdAdjustProperty__type,
  (void*) (ROGUEM1054) RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1055) RogueCmdAdjustGlobal__init_object, // CmdAdjustGlobal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1056) RogueCmdAdjustGlobal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1057) RogueCmdAdjustGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1058) RogueCmdAdjustGlobal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1059) RogueCmdAdjustGlobal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1060) Rogue_CmdAdjustGlobal__type,
  (void*) (ROGUEM1061) RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1062) RogueCmdModifyAndAssignGlobal__init_object, // CmdModifyAndAssignGlobal
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1063) RogueCmdModifyAndAssignGlobal__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1064) RogueCmdModifyAndAssignGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1065) RogueCmdModifyAndAssignGlobal__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1066) RogueCmdModifyAndAssignGlobal__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1067) Rogue_CmdModifyAndAssignGlobal__type,
  (void*) (ROGUEM1068) RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1069) RogueCmdModifyAndAssignProperty__init_object, // CmdModifyAndAssignProperty
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1070) RogueCmdModifyAndAssignProperty__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1071) RogueCmdModifyAndAssignProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1072) RogueCmdModifyAndAssignProperty__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1073) RogueCmdModifyAndAssignProperty__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1074) Rogue_CmdModifyAndAssignProperty__type,
  (void*) (ROGUEM1075) RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1076) RogueCmdCreateArray__init_object, // CmdCreateArray
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1077) RogueCmdCreateArray__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1078) RogueCmdCreateArray__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1079) RogueCmdCreateArray__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1080) RogueCmdCreateArray__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1081) Rogue_CmdCreateArray__type,
  (void*) (ROGUEM1082) RogueCmdCreateArray__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1083) RogueCmdReadArrayElement__init_object, // CmdReadArrayElement
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1084) RogueCmdReadArrayElement__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1085) RogueCmdReadArrayElement__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1086) RogueCmdReadArrayElement__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1087) RogueCmdReadArrayElement__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1088) RogueCmdReadArrayElement__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1089) Rogue_CmdReadArrayElement__type,
  (void*) (ROGUEM1090) RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1091) RogueCmdReadArrayCount__init_object, // CmdReadArrayCount
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1092) RogueCmdReadArrayCount__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1093) RogueCmdReadArrayCount__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1094) RogueCmdReadArrayCount__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1095) RogueCmdReadArrayCount__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1096) Rogue_CmdReadArrayCount__type,
  (void*) (ROGUEM1097) RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1098) RogueCmdWriteArrayElement__init_object, // CmdWriteArrayElement
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1099) RogueCmdWriteArrayElement__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1100) RogueCmdWriteArrayElement__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1101) RogueCmdWriteArrayElement__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1102) RogueCmdWriteArrayElement__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1103) Rogue_CmdWriteArrayElement__type,
  (void*) (ROGUEM1104) RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1105) RogueCmdTaskControl__init_object, // CmdTaskControl
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1106) RogueCmdTaskControl__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1107) RogueCmdTaskControl__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM1108) RogueCmdTaskControl__requires_semicolon,
  (void*) (ROGUEM1109) RogueCmdTaskControl__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__type,
  (void*) (ROGUEM1110) RogueCmdTaskControl__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1111) RogueCmdTaskControlSection_List__init_object, // CmdTaskControlSection[]
  (void*) (ROGUEM1111) RogueCmdTaskControlSection_List__init,
  (void*) (ROGUEM1112) RogueCmdTaskControlSection_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1112) RogueCmdTaskControlSection_List__type_name,
  (void*) (ROGUEM1113) RogueCmdNoAction__init_object, // CmdNoAction
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1114) RogueCmdNoAction__type_name,
  (void*) (ROGUEM1115) RogueCmdNoAction__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1116) RogueCmdNoAction__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1117) RogueCmdNoAction__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM1118) RogueCmdNoAction__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM1118) RogueCmdNoAction__requires_semicolon,
  (void*) (ROGUEM1119) RogueCmdNoAction__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1120) Rogue_CmdNoAction__type,
  (void*) (ROGUEM1121) RogueCmdNoAction__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1122) RogueUpdateThisTypeVisitor__init_object, // UpdateThisTypeVisitor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1123) RogueUpdateThisTypeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM967) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM968) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM969) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1124) RogueUpdateThisTypeVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM971) RogueVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1125) RogueTable_String_TypeSpecializer___init_object, // Table<<String,TypeSpecializer>>
  (void*) (ROGUEM1125) RogueTable_String_TypeSpecializer___init,
  (void*) (ROGUEM1126) RogueTable_String_TypeSpecializer___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1126) RogueTable_String_TypeSpecializer___type_name,
  (void*) (ROGUEM1127) RogueTableEntry_String_TypeSpecializer__List__init_object, // TableEntry<<String,TypeSpecializer>>[]
  (void*) (ROGUEM1127) RogueTableEntry_String_TypeSpecializer__List__init,
  (void*) (ROGUEM1128) RogueTableEntry_String_TypeSpecializer__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1128) RogueTableEntry_String_TypeSpecializer__List__type_name,
  (void*) (ROGUEM1129) RogueTableEntry_String_TypeSpecializer___init_object, // TableEntry<<String,TypeSpecializer>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1130) RogueTableEntry_String_TypeSpecializer___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1130) RogueTableEntry_String_TypeSpecializer___type_name,
  (void*) (ROGUEM1131) RogueCmdCastToType__init_object, // CmdCastToType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1132) RogueCmdCastToType__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1133) RogueCmdCastToType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1134) RogueCmdCastToType__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1135) RogueCmdCastToType__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM698) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM1136) RogueCmdCastToType__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1137) RogueTraceUsedCodeVisitor__init_object, // TraceUsedCodeVisitor
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1138) RogueTraceUsedCodeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1139) RogueTraceUsedCodeVisitor__on_enter__Type,
  (void*) (ROGUEM1140) RogueTraceUsedCodeVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1141) RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM970) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1142) RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1143) RogueCloneMethodArgs__init_object, // CloneMethodArgs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1144) RogueCloneMethodArgs__type_name,
  (void*) (ROGUEM1145) RogueCloneMethodArgs__register_label__CmdLabel,
  (void*) (ROGUEM1146) RogueTaskArgs__init_object, // TaskArgs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1147) RogueTaskArgs__type_name,
  (void*) (ROGUEM381) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM1148) RogueRequirementError__init_object, // RequirementError
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM2) RogueException__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1149) RogueRequirementError__type_name,
  (void*) (ROGUEM1150) RogueRequirementError__init__String,
  (void*) (ROGUEM1151) RogueToken_List_List__init_object, // Token[][]
  (void*) (ROGUEM1151) RogueToken_List_List__init,
  (void*) (ROGUEM1152) RogueToken_List_List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1152) RogueToken_List_List__type_name,
  (void*) (ROGUEM1153) RogueMacroArgs__init_object, // MacroArgs
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1154) RogueMacroArgs__type_name,
  (void*) (ROGUEM381) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM1155) RogueTable_String_Cmd___init_object, // Table<<String,Cmd>>
  (void*) (ROGUEM1155) RogueTable_String_Cmd___init,
  (void*) (ROGUEM1156) RogueTable_String_Cmd___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1156) RogueTable_String_Cmd___type_name,
  (void*) (ROGUEM1157) RogueTableEntry_String_Cmd__List__init_object, // TableEntry<<String,Cmd>>[]
  (void*) (ROGUEM1157) RogueTableEntry_String_Cmd__List__init,
  (void*) (ROGUEM1158) RogueTableEntry_String_Cmd__List__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1158) RogueTableEntry_String_Cmd__List__type_name,
  (void*) (ROGUEM1159) RogueTableEntry_String_Cmd___init_object, // TableEntry<<String,Cmd>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1160) RogueTableEntry_String_Cmd___to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1160) RogueTableEntry_String_Cmd___type_name,
  (void*) (ROGUEM1161) RogueFunction_CmdNamedArg_RETURNSLogical__init_object, // Function(CmdNamedArg)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1162) RogueFunction_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM1163) RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg,
  (void*) (ROGUEM1164) RogueListRebuilder_CmdNamedArg___init_object, // ListRebuilder<<CmdNamedArg>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1165) RogueListRebuilder_CmdNamedArg___type_name,
  (void*) (ROGUEM1166) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object, // Function(CmdNamedArg,CmdNamedArg)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1167) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM1168) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM1169) RogueQuicksort_CmdNamedArg___init_object, // Quicksort<<CmdNamedArg>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1170) RogueQuicksort_CmdNamedArg___type_name,
  (void*) (ROGUEM1171) RogueCmdCallInlineNativeRoutine__init_object, // CmdCallInlineNativeRoutine
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1172) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1173) RogueCmdCallInlineNativeRoutine__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1174) RogueCmdCallInlineNativeRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1175) RogueCmdCallInlineNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1176) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1177) Rogue_CmdCallInlineNativeRoutine__type,
  (void*) (ROGUEM1178) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1179) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM1180) RogueCmdCallInlineNative__init_object, // CmdCallInlineNative
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1172) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1172) RogueCmdCallInlineNative__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1181) RogueCmdCallInlineNative__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1176) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1178) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1179) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM1182) RogueCmdCallNativeRoutine__init_object, // CmdCallNativeRoutine
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1183) RogueCmdCallNativeRoutine__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1184) RogueCmdCallNativeRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1185) RogueCmdCallNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1186) RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1187) RogueCmdCallRoutine__init_object, // CmdCallRoutine
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1188) RogueCmdCallRoutine__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1189) RogueCmdCallRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1190) RogueCmdCallRoutine__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1191) RogueCmdCallRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1192) RogueCmdCallInlineNativeMethod__init_object, // CmdCallInlineNativeMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1172) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1193) RogueCmdCallInlineNativeMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1194) RogueCmdCallInlineNativeMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1195) RogueCmdCallInlineNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1176) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1196) Rogue_CmdCallInlineNativeMethod__type,
  (void*) (ROGUEM1178) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1197) RogueCmdCallInlineNativeMethod__print_this__CPPWriter,
  (void*) (ROGUEM1198) RogueCmdCallNativeMethod__init_object, // CmdCallNativeMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1199) RogueCmdCallNativeMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1200) RogueCmdCallNativeMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1201) RogueCmdCallNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1202) RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1203) RogueCmdCallAspectMethod__init_object, // CmdCallAspectMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1204) RogueCmdCallAspectMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1205) RogueCmdCallAspectMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1206) RogueCmdCallAspectMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1207) RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1208) RogueCandidateMethods__init_object, // CandidateMethods
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1209) RogueCandidateMethods__type_name,
  (void*) (ROGUEM1210) RogueFunction_2629__init_object, // Function_2629
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1211) RogueFunction_2629__type_name,
  (void*) (ROGUEM1212) RogueFunction_2629__call__CmdNamedArg,
  (void*) (ROGUEM1213) RogueFunction_2630__init_object, // Function_2630
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1214) RogueFunction_2630__type_name,
  (void*) (ROGUEM1215) RogueFunction_2630__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM1216) RogueIOError__init_object, // IOError
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM2) RogueException__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1217) RogueIOError__type_name,
  (void*) (ROGUEM3) RogueException__init__String,
  (void*) (ROGUEM1218) RogueFileReader__init_object, // FileReader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1219) RogueFileReader__type_name,
  (void*) (ROGUEM1220) RogueFileWriter__init_object, // FileWriter
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1221) RogueFileWriter__type_name,
  (void*) (ROGUEM1222) RogueUTF8Reader__init_object, // UTF8Reader
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1223) RogueUTF8Reader__type_name,
  (void*) (ROGUEM1224) RogueDirectiveTokenType__init_object, // DirectiveTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1225) RogueDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1226) RogueDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM80) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1227) RogueDirectiveTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM82) RogueTokenType__is_structure,
  (void*) (ROGUEM1228) RogueStructuralDirectiveTokenType__init_object, // StructuralDirectiveTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1229) RogueStructuralDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1230) RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM80) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1231) RogueStructuralDirectiveTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1231) RogueStructuralDirectiveTokenType__is_structure,
  (void*) (ROGUEM1232) RogueEOLTokenType__init_object, // EOLTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1233) RogueEOLTokenType__type_name,
  0,
  (void*) (ROGUEM1234) RogueEOLTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1235) RogueEOLTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM82) RogueTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1236) RogueEOLTokenType__is_structure,
  (void*) (ROGUEM1237) RogueStructureTokenType__init_object, // StructureTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1238) RogueStructureTokenType__type_name,
  0,
  (void*) (ROGUEM1239) RogueStructureTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM80) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM82) RogueTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1240) RogueStructureTokenType__is_structure,
  (void*) (ROGUEM1241) RogueNativeCodeTokenType__init_object, // NativeCodeTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1242) RogueNativeCodeTokenType__type_name,
  0,
  (void*) (ROGUEM79) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1243) RogueNativeCodeTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM1244) RogueNativeCodeTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM82) RogueTokenType__is_directive,
  (void*) (ROGUEM82) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM82) RogueTokenType__is_structure,
  (void*) (ROGUEM1245) RogueModifyAndAssignTokenType__init_object, // ModifyAndAssignTokenType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM78) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1246) RogueModifyAndAssignTokenType__type_name,
  0,
  (void*) (ROGUEM79) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM80) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM81) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM82) RogueTokenType__is_directive,
  (void*) (ROGUEM1247) RogueModifyAndAssignTokenType__is_op_with_assign,
  (void*) (ROGUEM82) RogueTokenType__is_structure,
  (void*) (ROGUEM1248) RogueInt32Property__init_object, // Int32Property
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1249) RogueInt32Property__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1249) RogueInt32Property__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM404) RoguePropertyValue__get__String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1250) RogueInt32Property__to_Int32,
  (void*) (ROGUEM1251) RogueStringProperty__init_object, // StringProperty
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1252) RogueStringProperty__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1252) RogueStringProperty__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM404) RoguePropertyValue__get__String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1253) RogueStringProperty__to_Int32,
  (void*) (ROGUEM1254) RogueCmdConvertToPrimitiveType__init_object, // CmdConvertToPrimitiveType
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1255) RogueCmdConvertToPrimitiveType__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM120) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1256) RogueCmdConvertToPrimitiveType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1257) RogueCmdConvertToPrimitiveType__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM129) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1258) RogueCmdConvertToPrimitiveType__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM131) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM698) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM1259) RogueCmdConvertToPrimitiveType__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1260) RogueListReader_CmdSelectCase___init_object, // ListReader<<CmdSelectCase>>
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1261) RogueListReader_CmdSelectCase___type_name,
  0, // Reader<<CmdSelectCase>>
  (void*) (ROGUEM1262) RogueCmdCallStaticMethod__init_object, // CmdCallStaticMethod
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM5) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1263) RogueCmdCallStaticMethod__type_name,
  (void*) (ROGUEM119) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1041) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM121) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1264) RogueCmdCallStaticMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM123) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1265) RogueCmdCallStaticMethod__dispatch__Visitor,
  (void*) (ROGUEM125) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM126) RogueCmd__generates_output,
  (void*) (ROGUEM126) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM127) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM126) RogueCmd__is_literal,
  (void*) (ROGUEM128) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM126) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1266) RogueCmdCallStaticMethod__resolve__Scope,
  (void*) (ROGUEM130) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1038) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM132) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM126) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1036) Rogue_CmdCall__type,
  (void*) (ROGUEM1267) RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1268) RogueNativeCodeToken__init_object, // NativeCodeToken
  (void*) (ROGUEM1) RogueObject__init,
  (void*) (ROGUEM1269) RogueNativeCodeToken__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1269) RogueNativeCodeToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1269) RogueNativeCodeToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM72) RogueToken__to_Character,
  (void*) (ROGUEM73) RogueToken__to_Int32,
  (void*) (ROGUEM74) RogueToken__to_Int64,
  (void*) (ROGUEM75) RogueToken__to_Real64,
  (void*) (ROGUEM76) RogueToken__to_Type,

};

int Rogue_type_info_table[5343] =
{
  // allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...
  0,0,1,1,0,2,1310,1311,2,3,0,0,0,0,0,0,0,0,0,0,0,11,1,1,
  0,3,1312,418,1313,4,8,9,0,21,2,5,1,0,2,1314,418,6,8,0,31,1,1,0,0,
  0,0,2,7,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,41,1,1,0,4,1315,1316,1317,1318,8,2,12,12,0,51,2,5,1,0,2,1314,
  418,14,8,0,61,1,1,0,2,1319,1320,8,8,0,0,2,7,1,0,0,0,71,1,1,1,
  1321,16,6,1322,418,1323,1324,1325,1326,16,8,8,8,8,9,0,81,2,5,1,0,2,1314,418,18,
  8,0,0,0,0,0,0,0,2,7,1,0,0,0,91,2,5,1,0,2,1314,418,21,8,0,
  0,0,0,0,0,0,2,7,1,0,0,0,0,0,0,0,0,101,1,1,0,3,1327,1328,1329,
  8,24,4,0,121,2,5,1,0,2,1314,418,26,8,0,131,1,1,0,4,1330,1070,1331,1332,2,
  2,25,8,0,0,2,7,1,0,0,0,141,2,1,28,0,3,1333,418,417,8,8,2,0,151,
  0,0,1,1333,8,0,152,0,0,1,1333,8,0,153,1,1,1,1334,31,0,0,163,1,1,0,
  3,1327,1328,1329,8,32,4,0,173,2,5,1,0,2,1314,418,34,8,0,183,1,1,0,4,1330,
  1070,1331,1332,2,11,33,8,0,0,2,7,1,0,0,0,193,3,1,36,37,0,3,1335,1336,1337,
  37,15,38,0,203,1,37,0,0,0,204,0,0,0,0,205,2,5,1,0,2,1314,418,40,8,
  0,215,1,1,0,0,0,0,2,7,1,0,0,0,226,3,1,42,37,0,1,1338,15,0,236,
  1,37,0,0,0,237,2,39,1,0,0,0,248,1,1,0,24,1339,1340,1341,1342,1343,1344,1345,1346,
  1347,1348,1349,1350,1351,1352,1353,1354,290,1355,1356,1357,1358,1359,1360,1361,4,4,45,45,4,2,4,9,2,
  2,4,4,9,2,2,9,9,9,49,121,126,8,8,127,0,258,1,1,0,3,1327,1328,1329,8,
  46,4,0,268,2,5,1,0,2,1314,418,48,8,0,278,1,1,0,4,1330,1070,1331,1332,2,9,
  47,8,0,0,2,7,1,0,0,0,288,2,5,1,0,2,1314,418,120,8,0,298,1,1,0,
  12,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,51,2,60,93,94,85,15,97,9,4,23,9,
  0,308,1,1,0,3,1374,1333,418,52,8,8,0,318,2,5,1,0,2,1314,418,59,8,0,328,
  1,1,1,1375,23,4,523,1363,1376,1377,54,2,8,8,0,352,1,1,174,1378,1379,1380,1381,1382,1383,
  1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,
  1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,
  1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,
  1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,187,1476,1477,1478,1479,1480,1481,1482,
  1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,
  1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,
  1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,55,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
  54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,3,1316,1551,1552,2,9,9,0,
  375,1,1,0,3,1327,1328,1329,8,56,4,0,385,2,5,1,0,2,1314,418,58,8,0,395,1,
  1,0,4,1330,1070,1331,1332,2,54,57,8,0,0,2,7,1,0,0,0,0,2,7,1,0,0,
  0,405,1,1,0,41,1553,1316,1554,1315,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,
  1570,1571,1572,1573,1574,1575,1576,1367,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,53,2,61,
  8,62,74,9,9,9,9,9,60,72,72,9,9,9,60,9,9,77,81,79,8,85,88,85,88,
  92,111,115,92,111,115,8,72,60,119,2,2,2,0,415,1,1,0,2,1591,1592,8,4,0,425,
  1,1,0,8,1553,1316,1374,1554,1593,1594,1595,1596,53,2,52,61,63,66,60,72,0,435,2,5,1,
  0,2,1314,418,65,8,0,445,1,1,0,2,1553,1316,53,2,0,0,2,7,1,0,0,0,455,
  1,1,0,3,1327,1328,1329,8,67,70,0,465,2,5,1,0,2,1314,418,69,8,0,475,1,1,
  0,4,1330,1070,1331,1332,8,62,68,8,0,0,2,7,1,0,0,0,485,2,5,1,0,2,1314,
  418,71,8,0,0,2,7,1,0,0,0,495,2,5,1,0,2,1314,418,73,8,0,0,2,7,
  1,0,0,0,505,2,5,1,0,2,1314,418,76,8,0,515,1,1,0,3,1316,1315,1374,2,8,
  52,0,0,2,7,1,0,0,0,525,2,5,1,0,2,1314,418,80,8,0,535,1,1,0,4,
  1553,1316,1597,1598,53,2,79,9,0,545,1,1,0,1,1553,53,0,0,2,7,1,0,0,0,587,
  1,1,0,3,1327,1328,1329,8,82,4,0,597,2,5,1,0,2,1314,418,84,8,0,607,1,1,
  0,4,1330,1070,1331,1332,2,78,83,8,0,0,2,7,1,0,0,0,617,2,5,1,0,2,1314,
  418,87,8,0,627,1,1,0,7,1553,1599,1316,523,1554,1600,1588,53,60,2,60,8,79,2,0,0,
  2,7,1,0,0,0,637,1,1,0,3,1327,1328,1329,8,89,4,0,647,2,5,1,0,2,1314,
  418,91,8,0,657,1,1,0,4,1330,1070,1331,1332,2,86,90,8,0,0,2,7,1,0,0,0,
  667,2,5,1,0,2,1314,418,110,8,0,677,1,1,0,29,1553,1599,1316,1601,1554,1602,1603,1604,1605,
  1606,1607,1608,1609,1610,1611,1612,1558,1560,1315,1569,1613,1614,1615,1616,1555,1617,1618,1588,1619,53,60,2,2,61,
  60,60,94,94,8,97,97,72,93,92,2,9,9,8,9,9,100,103,101,107,8,2,2,2,0,
  687,2,5,1,0,2,1314,418,96,8,0,697,1,1,0,7,1553,1316,1620,523,1315,1600,1621,53,2,
  2,60,8,79,2,0,0,2,7,1,0,0,0,707,3,98,5,1,1,1622,97,2,1314,418,99,
  8,0,718,2,5,1,0,2,1314,418,99,8,0,0,2,7,1,0,0,0,729,2,5,1,0,
  2,1314,418,102,8,0,739,2,79,1,0,4,1553,1316,1607,1623,53,2,97,9,0,0,2,7,1,
  0,0,0,781,1,1,0,3,1327,1328,1329,8,104,4,0,791,2,5,1,0,2,1314,418,106,8,
  0,801,1,1,0,4,1330,1070,1331,1332,2,101,105,8,0,0,2,7,1,0,0,0,811,1,1,
  0,9,1553,1599,1316,1624,1593,1625,1626,1627,1628,53,60,2,9,63,52,8,107,108,0,821,2,5,1,
  0,2,1314,418,109,8,0,0,2,7,1,0,0,0,0,2,7,1,0,0,0,831,1,1,0,
  3,1327,1328,1329,8,112,4,0,841,2,5,1,0,2,1314,418,114,8,0,851,1,1,0,4,1330,
  1070,1331,1332,2,92,113,8,0,0,2,7,1,0,0,0,861,1,1,0,3,1327,1328,1329,8,116,
  4,0,871,2,5,1,0,2,1314,418,118,8,0,881,1,1,0,4,1330,1070,1331,1332,2,93,117,
  8,0,0,2,7,1,0,0,0,891,1,1,0,2,1599,1629,60,108,0,0,2,7,1,0,0,
  0,901,1,1,0,3,1327,1328,1329,8,122,4,0,911,2,5,1,0,2,1314,418,125,8,0,921,
  1,1,0,4,1330,1070,1331,1332,2,124,123,8,0,931,2,1,28,0,6,1333,1314,418,1376,1377,1630,
  8,19,8,8,8,8,0,0,2,7,1,0,0,0,941,1,1,0,1,1631,22,0,951,2,5,
  1,0,2,1314,418,130,8,0,961,1,1,0,3,1316,1632,1633,2,39,129,0,971,1,1,0,0,
  0,0,2,7,1,0,0,0,982,1,1,0,36,1634,1635,1636,1637,1638,1639,1351,1347,1640,1641,1317,1642,
  1612,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1368,1664,2,
  2,8,132,134,138,9,2,93,93,85,4,4,111,72,145,60,60,60,60,60,60,60,60,60,60,
  60,60,60,60,60,60,149,4,15,153,0,992,2,5,1,0,2,1314,418,133,8,0,0,2,7,
  1,0,0,0,1002,1,1,0,3,1327,1328,1329,8,135,4,0,1012,2,5,1,0,2,1314,418,137,
  8,0,1022,1,1,0,4,1330,1070,1331,1332,2,62,136,8,0,0,2,7,1,0,0,0,1032,1,
  1,0,3,1327,1328,1329,8,139,4,0,1042,2,5,1,0,2,1314,418,144,8,0,1052,1,1,0,
  4,1330,1070,1331,1332,2,141,140,8,0,1062,2,5,1,0,2,1314,418,143,8,0,1072,1,1,0,
  4,1553,1316,1563,1374,53,2,72,52,0,0,2,7,1,0,0,0,0,2,7,1,0,0,0,1082,
  1,1,0,3,1327,1328,1329,8,146,4,0,1092,2,5,1,0,2,1314,418,148,8,0,1102,1,1,
  0,4,1330,1070,1331,1332,2,60,147,8,0,0,2,7,1,0,0,0,1112,1,1,0,3,1327,1328,
  1329,8,150,4,0,1122,2,5,1,0,2,1314,418,152,8,0,1132,1,1,0,4,1330,1070,1331,1332,
  2,8,151,8,0,0,2,7,1,0,0,0,1142,1,1,0,3,1327,1328,1329,8,154,4,0,1152,
  2,5,1,0,2,1314,418,156,8,0,1162,1,1,0,4,1330,1070,1331,1332,2,4,155,8,0,0,
  2,7,1,0,0,0,1172,2,0,1,0,2,1310,1311,2,3,0,1183,3,157,0,1,0,5,1310,
  1311,1363,1376,1377,2,3,2,8,8,0,1194,2,79,1,0,5,1553,462,1316,1665,1666,53,79,2,160,
  161,0,1236,3,98,5,1,0,2,1314,418,99,8,0,1247,2,5,1,0,2,1314,418,163,8,0,
  1257,2,79,1,0,5,1553,1316,1070,1667,1668,53,2,79,9,383,0,0,2,7,1,0,0,0,1299,
  3,165,79,1,0,2,1553,1070,53,79,0,1341,2,79,1,0,1,1553,53,0,1383,1,1,0,7,
  1364,1365,1669,1670,1671,1672,1673,60,93,97,79,60,94,167,0,1393,2,5,1,0,2,1314,418,170,8,
  0,1403,3,165,79,1,0,9,1553,1607,1674,1675,1676,1677,1678,1679,1680,53,97,8,9,2,2,169,169,
  168,0,1447,1,1,0,2,466,1607,8,97,0,0,2,7,1,0,0,0,1457,1,1,0,0,0,
  1468,2,171,1,0,0,0,1479,2,171,1,0,0,0,1490,1,1,0,7,1363,1681,1323,1682,1683,1684,
  1685,2,15,8,9,8,53,15,0,1500,1,1,3,1686,1687,1688,4,2,384,0,0,1510,1,1,0,
  0,0,1520,0,0,1,1333,8,0,1521,0,0,1,1333,8,0,1522,1,1,0,1,1363,2,0,1532,
  2,79,1,0,2,1553,1689,53,2,0,1574,2,1,29,0,5,1333,1690,1691,1681,1692,8,28,2,15,
  20,0,1584,2,129,1,0,0,0,1595,1,1,0,7,1363,1362,1374,1681,1693,1694,1695,2,124,52,15,
  2,8,8,0,1605,1,1,1,1696,185,4,1697,1362,1374,1698,50,189,52,2,0,1615,1,1,0,3,
  1327,1328,1329,8,186,4,0,1625,2,5,1,0,2,1314,418,188,8,0,1635,1,1,0,4,1330,1070,
  1331,1332,2,52,187,8,0,0,2,7,1,0,0,0,1645,1,1,0,4,1374,1699,1333,418,52,52,
  8,8,0,1655,2,53,1,0,5,523,1363,1376,1377,1070,54,2,8,8,20,0,1679,2,53,1,0,
  5,523,1363,1376,1377,1070,54,2,8,8,10,0,1703,2,53,1,0,5,523,1363,1376,1377,1070,54,2,
  8,8,8,0,1727,2,53,1,0,5,523,1363,1376,1377,1070,54,2,8,8,22,0,1751,2,53,1,
  0,5,523,1363,1376,1377,1070,54,2,8,8,2,0,1775,2,53,1,0,5,523,1363,1376,1377,1700,54,
  2,8,8,2,0,1799,3,197,79,1,0,2,1553,1070,53,9,0,1841,2,79,1,0,1,1553,53,
  0,1883,3,197,79,1,0,2,1553,1070,53,8,0,1925,1,1,0,0,0,1936,3,201,79,1,0,
  3,1553,1701,1702,53,79,79,0,1986,2,79,1,0,3,1553,1701,1702,53,79,79,0,2036,2,203,1,
  0,1,1703,204,0,2087,1,1,0,0,0,2138,1,1,0,3,1327,1328,1329,8,205,4,0,2148,2,
  5,1,0,2,1314,418,207,8,0,2158,1,1,0,4,1330,1070,1331,1332,2,203,206,8,0,0,2,
  7,1,0,0,0,2168,2,79,1,0,2,1553,86,53,2,0,2210,2,79,1,0,2,1553,86,53,
  2,0,2252,4,168,165,79,1,0,11,1553,1607,1674,1675,1676,1677,1678,1679,1680,1704,1705,53,97,8,9,
  2,2,169,169,168,79,97,0,2296,4,168,165,79,1,0,12,1553,1607,1674,1675,1676,1677,1678,1679,1680,
  1597,1706,1707,53,97,8,9,2,2,169,169,168,79,212,213,0,2340,2,5,1,0,2,1314,418,214,
  8,0,2350,2,79,1,0,3,1553,1708,1607,53,160,97,0,0,2,7,1,0,0,0,2392,4,168,
  165,79,1,0,9,1553,1607,1674,1675,1676,1677,1678,1679,1680,53,97,8,9,2,2,169,169,168,0,2436,
  4,168,165,79,1,0,15,1553,1607,1674,1675,1676,1677,1678,1679,1680,1709,1710,1711,1712,1713,1714,53,97,8,
  9,2,2,169,169,168,97,97,2,2,169,169,0,2480,4,168,165,79,1,0,12,1553,1607,1674,1675,
  1676,1677,1678,1679,1680,1715,1704,1716,53,97,8,9,2,2,169,169,168,97,79,97,0,2524,4,168,165,
  79,1,0,10,1553,1607,1674,1675,1676,1677,1678,1679,1680,1717,53,97,8,9,2,2,169,169,168,219,0,
  2568,2,5,1,0,2,1314,418,221,8,0,2578,2,79,1,0,3,1553,1718,1607,53,95,97,0,0,
  2,7,1,0,0,0,2620,2,79,1,0,4,1553,1597,1719,1720,53,79,97,95,0,2662,2,79,1,
  0,1,1553,53,0,2704,2,79,1,0,2,1553,1597,53,79,0,2746,3,197,79,1,0,3,1553,1070,
  1315,53,2,8,0,2788,2,79,1,0,3,1553,1721,1665,53,2,160,0,2830,2,79,1,0,2,1553,
  1722,53,79,0,2872,3,165,79,1,0,3,1553,1723,1724,53,95,9,0,2914,2,79,1,0,5,1553,
  1704,1310,1725,1723,53,79,79,79,95,0,2956,2,79,1,0,3,1553,1674,1726,53,8,168,0,2998,2,
  79,1,0,2,1553,1726,53,168,0,3040,2,79,1,0,3,1553,1726,1704,53,216,79,0,3082,2,79,
  1,0,3,1553,1726,1704,53,216,79,0,3124,2,79,1,0,3,1553,1727,1728,53,79,8,0,3166,2,
  79,1,0,3,1553,1729,1730,53,79,79,0,3208,2,79,1,0,4,1553,1729,1731,1730,53,79,54,79,
  0,3250,2,79,1,0,3,1553,1723,1728,53,95,8,0,3292,2,79,1,0,2,1553,1723,53,95,0,
  3334,4,240,201,79,1,0,4,1553,1701,1702,1560,53,79,79,9,0,3385,3,201,79,1,0,4,1553,
  1701,1702,1560,53,79,79,9,0,3436,2,79,1,0,4,1553,1732,1733,1734,53,79,79,79,0,3480,3,
  243,79,1,0,4,1553,1731,1730,1723,53,54,79,95,0,3522,2,79,1,0,3,1553,1731,1730,53,54,
  79,0,3564,3,241,79,1,0,4,1553,1732,1733,1734,53,79,79,79,0,3608,3,241,79,1,0,4,
  1553,1732,1733,1734,53,79,79,79,0,3652,4,240,201,79,1,0,4,1553,1701,1702,1560,53,79,79,9,
  0,3703,4,240,201,79,1,0,4,1553,1701,1702,1560,53,79,79,9,0,3754,4,168,165,79,1,0,
  13,1553,1607,1674,1675,1676,1677,1678,1679,1680,1735,1736,1737,1738,53,97,8,9,2,2,169,169,168,2,2,
  79,79,0,3798,3,241,79,1,0,4,1553,1732,1733,1734,53,79,79,79,0,3842,4,251,201,79,1,
  0,3,1553,1701,1702,53,79,79,0,3893,3,201,79,1,0,3,1553,1701,1702,53,79,79,0,3944,4,
  251,201,79,1,0,3,1553,1701,1702,53,79,79,0,3995,4,251,201,79,1,0,3,1553,1701,1702,53,
  79,79,0,4046,4,240,201,79,1,0,4,1553,1701,1702,1560,53,79,79,9,0,4097,4,240,201,79,
  1,0,4,1553,1701,1702,1560,53,79,79,9,0,4148,4,240,201,79,1,0,4,1553,1701,1702,1560,53,
  79,79,9,0,4199,4,240,201,79,1,0,4,1553,1701,1702,1560,53,79,79,9,0,4250,4,240,201,
  79,1,0,4,1553,1701,1702,1560,53,79,79,9,0,4301,3,260,79,1,0,3,1553,1727,1739,53,79,
  60,0,4343,2,79,1,0,3,1553,1727,1739,53,79,60,0,4385,3,262,79,1,0,2,1553,1727,53,
  79,0,4435,2,79,1,0,2,1553,1727,53,79,0,4485,4,264,201,79,1,0,3,1553,1701,1702,53,
  79,79,0,4535,3,201,79,1,0,3,1553,1701,1702,53,79,79,0,4585,4,264,201,79,1,0,3,
  1553,1701,1702,53,79,79,0,4635,4,264,201,79,1,0,3,1553,1701,1702,53,79,79,0,4685,4,264,
  201,79,1,0,3,1553,1701,1702,53,79,79,0,4735,4,264,201,79,1,0,3,1553,1701,1702,53,79,
  79,0,4785,4,264,201,79,1,0,3,1553,1701,1702,53,79,79,0,4835,3,201,79,1,0,3,1553,
  1701,1702,53,79,79,0,4885,3,201,79,1,0,3,1553,1701,1702,53,79,79,0,4935,3,201,79,1,
  0,3,1553,1701,1702,53,79,79,0,4985,3,201,79,1,0,3,1553,1701,1702,53,79,79,0,5035,3,
  201,79,1,0,3,1553,1701,1702,53,79,79,0,5085,3,262,79,1,0,2,1553,1727,53,79,0,5135,
  3,262,79,1,0,2,1553,1727,53,79,0,5185,3,262,79,1,0,2,1553,1727,53,79,0,5235,2,
  79,1,0,2,1553,1727,53,79,0,5277,2,79,1,0,3,1553,462,1315,53,79,79,0,5319,2,79,
  1,0,4,1553,1740,1741,1742,53,79,60,79,0,5361,3,260,79,1,0,3,1553,1727,1739,53,79,60,
  0,5403,2,79,1,0,5,1553,462,1316,1601,1602,53,79,2,2,60,0,5445,3,260,79,1,0,3,
  1553,1727,1739,53,79,60,0,5487,3,197,79,1,0,2,1553,1743,53,60,0,5529,3,197,79,1,0,
  1,1553,53,0,5571,3,197,79,1,0,2,1553,1070,53,22,0,5613,3,197,79,1,0,2,1553,1070,
  53,10,0,5655,3,197,79,1,0,2,1553,1070,53,20,0,5697,3,290,79,1,0,2,1553,1364,53,
  60,0,5739,2,79,1,0,2,1553,1364,53,60,0,5781,2,79,1,0,3,1553,1665,1744,53,160,60,
  0,5823,2,79,1,0,4,1553,1316,1665,1666,53,2,160,161,0,5865,2,5,1,0,2,1314,418,295,
  8,0,5875,1,1,0,2,1316,523,2,60,0,0,2,7,1,0,0,0,5885,2,5,1,0,2,
  1314,418,298,8,0,5895,1,1,0,3,1316,1070,523,2,79,60,0,0,2,7,1,0,0,0,5905,
  2,79,1,0,6,1553,1604,1602,1745,1607,1746,53,293,60,296,97,9,0,5947,2,79,1,0,7,1553,
  86,1365,1747,1748,1749,1730,53,2,93,60,54,8,79,0,5989,2,79,1,0,5,1553,1723,1597,1706,1750,
  53,95,79,302,60,0,6031,2,5,1,0,2,1314,418,304,8,0,6041,2,79,1,0,3,1553,1708,
  1070,53,98,79,0,0,2,7,1,0,0,0,6083,2,79,1,0,5,1553,1704,1310,1725,1723,53,79,
  79,79,95,0,6125,2,79,1,0,7,1553,1727,1665,1666,1723,1751,1752,53,79,160,161,95,79,79,0,
  6167,2,79,1,0,3,1553,1753,1754,53,2,160,0,6209,1,1,0,3,1740,1755,1756,52,8,8,0,
  6219,2,79,1,0,3,1553,1743,1665,53,60,160,0,6261,1,1,0,0,0,6432,4,168,165,79,1,
  0,12,1553,1607,1674,1675,1676,1677,1678,1679,1680,1597,1706,1707,53,97,8,9,2,2,169,169,168,79,212,
  213,0,6476,2,79,1,0,2,1553,1743,53,60,0,6518,2,79,1,0,2,1553,1743,53,60,0,6560,
  2,79,1,0,3,1553,1743,1730,53,60,79,0,6602,2,79,1,0,3,1553,1723,1730,53,95,79,0,
  6644,2,79,1,0,2,1553,1757,53,86,0,6686,2,79,1,0,3,1553,1757,1730,53,86,79,0,6728,
  2,79,1,0,3,1553,462,1758,53,79,86,0,6770,2,79,1,0,4,1553,462,1758,1730,53,79,86,
  79,0,6812,2,79,1,0,4,1553,462,1759,1665,53,79,93,160,0,6854,4,322,320,79,1,0,4,
  1553,462,1759,1665,53,79,93,160,0,6896,3,320,79,1,0,4,1553,462,1759,1665,53,79,93,160,0,
  6938,2,79,1,0,4,1553,462,1758,1728,53,79,86,8,0,6980,2,79,1,0,3,1553,1757,1728,53,
  86,8,0,7022,3,243,79,1,0,4,1553,1731,1730,1757,53,54,79,86,0,7064,3,243,79,1,0,
  5,1553,1731,1730,462,1758,53,54,79,79,86,0,7106,2,79,1,0,3,1553,1760,1761,53,60,79,0,
  7148,2,79,1,0,4,1553,462,1760,1315,53,79,60,79,0,7190,2,79,1,0,3,1553,462,1760,53,
  79,60,0,7232,2,79,1,0,5,1553,462,1760,1315,1730,53,79,60,79,79,0,7274,2,79,1,0,
  3,1553,1762,1763,53,332,169,0,7316,2,5,1,0,2,1314,418,333,8,0,0,2,7,1,0,0,
  0,7326,2,79,1,0,1,1553,53,0,7368,2,310,1,0,2,1364,1365,60,93,0,7539,1,1,0,
  3,1327,1328,1329,8,337,4,0,7549,2,5,1,0,2,1314,418,339,8,0,7559,1,1,0,4,1330,
  1070,1331,1332,2,75,338,8,0,0,2,7,1,0,0,0,7569,3,260,79,1,0,3,1553,1727,1739,
  53,79,60,0,7611,2,310,1,0,0,0,7782,2,199,1,0,1,1764,93,0,7793,2,199,1,0,
  7,1765,1766,1767,1768,1769,1770,1771,60,93,60,93,331,86,86,0,7804,3,157,0,1,0,2,1310,1311,
  2,3,0,7815,2,5,1,0,2,1314,418,346,8,0,0,2,7,1,0,0,0,7825,2,199,1,
  0,3,1772,1759,1773,79,93,348,0,7836,1,1,0,3,1327,1328,1329,8,349,4,0,7846,2,5,1,
  0,2,1314,418,351,8,0,7856,1,1,0,4,1330,1070,1331,1332,2,79,350,8,0,0,2,7,1,
  0,0,0,7866,1,1,0,0,0,7877,1,1,0,3,1740,1755,1756,161,8,8,0,7887,1,1,0,
  0,0,7898,1,1,0,0,0,7908,4,357,320,79,1,0,5,1553,462,1759,1665,1749,53,79,93,160,
  8,0,7952,3,320,79,1,0,5,1553,462,1759,1665,1749,53,79,93,160,8,0,7996,3,320,79,1,
  0,4,1553,462,1759,1665,53,79,93,160,0,8038,3,320,79,1,0,4,1553,462,1759,1665,53,79,93,
  160,0,8080,4,357,320,79,1,0,5,1553,462,1759,1665,1749,53,79,93,160,8,0,8124,3,320,79,
  1,0,4,1553,462,1759,1665,53,79,93,160,0,8166,3,320,79,1,0,4,1553,462,1759,1665,53,79,
  93,160,0,8208,1,1,0,5,1599,1774,1775,1776,1777,60,159,92,92,9,0,8218,2,352,1,0,0,
  0,8229,2,354,1,0,0,0,8240,3,157,0,1,0,2,1310,1311,2,3,0,8251,2,1,177,0,
  6,1333,1363,418,1778,1681,1779,8,2,8,8,16,10,0,8261,2,1,178,0,5,1333,1363,1725,1681,1779,
  8,2,9,16,10,0,8271,2,1,28,0,3,1333,1780,1691,8,177,386,0,8281,2,54,1,0,3,
  1316,1551,1552,2,9,9,0,8304,2,54,1,0,3,1316,1551,1552,2,9,9,0,8327,2,54,1,0,
  3,1316,1551,1552,2,9,9,0,8350,2,54,1,0,3,1316,1551,1552,2,9,9,0,8373,2,54,1,
  0,3,1316,1551,1552,2,9,9,0,8396,2,54,1,0,3,1316,1551,1552,2,9,9,0,8419,2,203,
  1,0,1,1070,8,0,8470,2,203,1,1,1781,377,1,1070,2,0,8521,4,281,260,79,1,0,3,
  1553,1727,1739,53,79,60,0,8563,2,1,380,0,4,1333,1740,1782,1783,8,302,8,9,0,8573,0,0,
  1,1333,8,0,8574,4,322,320,79,1,0,4,1553,462,1759,1665,53,79,93,160,0,8616,2,53,1,
  0,5,523,1363,1376,1377,1070,54,2,8,8,2,0,0,0,0,2,1070,478,8,9,0,0,0,0,
  0,0,0,0,0,2,1070,478,17,9,0,0,0,0,2,1070,478,20,9
};

void* Rogue_global_property_pointers[] =
{
  (void*) &RogueStringBuilder_work_bytes,
  (void*) &RogueRuntime_type_info_lookup,
  (void*) &RogueToken_filepath_to_filename,
  (void*) &RogueTokenType_lookup,
  (void*) &RogueTokenType_directive_define,
  (void*) &RogueTokenType_directive_include,
  (void*) &RogueTokenType_directive_includeNativeCode,
  (void*) &RogueTokenType_directive_includeNativeHeader,
  (void*) &RogueTokenType_directive_if,
  (void*) &RogueTokenType_directive_elseIf,
  (void*) &RogueTokenType_directive_else,
  (void*) &RogueTokenType_directive_endIf,
  (void*) &RogueTokenType_directive_module,
  (void*) &RogueTokenType_directive_requisite,
  (void*) &RogueTokenType_directive_using,
  (void*) &RogueTokenType_placeholder_id,
  (void*) &RogueTokenType_begin_augment_tokens,
  (void*) &RogueTokenType_keyword_augment,
  (void*) &RogueTokenType_keyword_case,
  (void*) &RogueTokenType_keyword_catch,
  (void*) &RogueTokenType_keyword_CLASS,
  (void*) &RogueTokenType_keyword_class,
  (void*) &RogueTokenType_keyword_DEFINITIONS,
  (void*) &RogueTokenType_keyword_else,
  (void*) &RogueTokenType_keyword_elseIf,
  (void*) &RogueTokenType_keyword_endAugment,
  (void*) &RogueTokenType_keyword_endBlock,
  (void*) &RogueTokenType_keyword_endClass,
  (void*) &RogueTokenType_keyword_endContingent,
  (void*) &RogueTokenType_keyword_endForEach,
  (void*) &RogueTokenType_keyword_endFunction,
  (void*) &RogueTokenType_keyword_endIf,
  (void*) &RogueTokenType_keyword_endLoop,
  (void*) &RogueTokenType_keyword_endRoutine,
  (void*) &RogueTokenType_keyword_endTry,
  (void*) &RogueTokenType_keyword_endUnitTest,
  (void*) &RogueTokenType_keyword_endWhich,
  (void*) &RogueTokenType_keyword_endWhile,
  (void*) &RogueTokenType_keyword_ENUMERATE,
  (void*) &RogueTokenType_keyword_GLOBAL,
  (void*) &RogueTokenType_keyword_method,
  (void*) &RogueTokenType_keyword_METHODS,
  (void*) &RogueTokenType_keyword_nativeCode,
  (void*) &RogueTokenType_keyword_nativeHeader,
  (void*) &RogueTokenType_keyword_others,
  (void*) &RogueTokenType_keyword_PROPERTIES,
  (void*) &RogueTokenType_keyword_routine,
  (void*) &RogueTokenType_keyword_satisfied,
  (void*) &RogueTokenType_keyword_unsatisfied,
  (void*) &RogueTokenType_keyword_with,
  (void*) &RogueTokenType_symbol_close_brace,
  (void*) &RogueTokenType_symbol_close_bracket,
  (void*) &RogueTokenType_symbol_close_comment,
  (void*) &RogueTokenType_symbol_close_paren,
  (void*) &RogueTokenType_symbol_close_specialize,
  (void*) &RogueTokenType_eol,
  (void*) &RogueTokenType_eoi,
  (void*) &RogueTokenType_keyword_assert,
  (void*) &RogueTokenType_keyword_await,
  (void*) &RogueTokenType_keyword_block,
  (void*) &RogueTokenType_keyword_contingent,
  (void*) &RogueTokenType_keyword_ensure,
  (void*) &RogueTokenType_keyword_escapeBlock,
  (void*) &RogueTokenType_keyword_escapeContingent,
  (void*) &RogueTokenType_keyword_escapeForEach,
  (void*) &RogueTokenType_keyword_escapeIf,
  (void*) &RogueTokenType_keyword_escapeLoop,
  (void*) &RogueTokenType_keyword_escapeTry,
  (void*) &RogueTokenType_keyword_escapeWhich,
  (void*) &RogueTokenType_keyword_escapeWhile,
  (void*) &RogueTokenType_keyword_forEach,
  (void*) &RogueTokenType_keyword_function,
  (void*) &RogueTokenType_keyword_global,
  (void*) &RogueTokenType_keyword_if,
  (void*) &RogueTokenType_keyword_in,
  (void*) &RogueTokenType_keyword_infinity,
  (void*) &RogueTokenType_keyword_is,
  (void*) &RogueTokenType_keyword_isNot,
  (void*) &RogueTokenType_keyword_isReference,
  (void*) &RogueTokenType_keyword_local,
  (void*) &RogueTokenType_keyword_loop,
  (void*) &RogueTokenType_keyword_NaN,
  (void*) &RogueTokenType_keyword_native,
  (void*) &RogueTokenType_keyword_necessary,
  (void*) &RogueTokenType_keyword_nextIteration,
  (void*) &RogueTokenType_keyword_noAction,
  (void*) &RogueTokenType_keyword_null,
  (void*) &RogueTokenType_keyword_of,
  (void*) &RogueTokenType_keyword_require,
  (void*) &RogueTokenType_keyword_return,
  (void*) &RogueTokenType_keyword_select,
  (void*) &RogueTokenType_keyword_step,
  (void*) &RogueTokenType_keyword_sufficient,
  (void*) &RogueTokenType_keyword_throw,
  (void*) &RogueTokenType_keyword_trace,
  (void*) &RogueTokenType_keyword_trace_position,
  (void*) &RogueTokenType_keyword_try,
  (void*) &RogueTokenType_keyword_unitTest,
  (void*) &RogueTokenType_keyword_which,
  (void*) &RogueTokenType_keyword_while,
  (void*) &RogueTokenType_keyword_yield,
  (void*) &RogueTokenType_identifier,
  (void*) &RogueTokenType_type_identifier,
  (void*) &RogueTokenType_literal_character,
  (void*) &RogueTokenType_literal_integer,
  (void*) &RogueTokenType_literal_long,
  (void*) &RogueTokenType_literal_real,
  (void*) &RogueTokenType_literal_string,
  (void*) &RogueTokenType_keyword_and,
  (void*) &RogueTokenType_keyword_as,
  (void*) &RogueTokenType_keyword_downTo,
  (void*) &RogueTokenType_keyword_false,
  (void*) &RogueTokenType_keyword_instanceOf,
  (void*) &RogueTokenType_keyword_meta,
  (void*) &RogueTokenType_keyword_not,
  (void*) &RogueTokenType_keyword_notInstanceOf,
  (void*) &RogueTokenType_keyword_or,
  (void*) &RogueTokenType_keyword_pi,
  (void*) &RogueTokenType_keyword_prior,
  (void*) &RogueTokenType_keyword_this,
  (void*) &RogueTokenType_keyword_true,
  (void*) &RogueTokenType_keyword_xor,
  (void*) &RogueTokenType_symbol_ampersand,
  (void*) &RogueTokenType_symbol_ampersand_equals,
  (void*) &RogueTokenType_symbol_double_ampersand,
  (void*) &RogueTokenType_symbol_arrow,
  (void*) &RogueTokenType_symbol_at,
  (void*) &RogueTokenType_symbol_at_brace,
  (void*) &RogueTokenType_symbol_at_bracket,
  (void*) &RogueTokenType_symbol_backslash,
  (void*) &RogueTokenType_symbol_caret,
  (void*) &RogueTokenType_symbol_caret_equals,
  (void*) &RogueTokenType_symbol_colon,
  (void*) &RogueTokenType_symbol_comma,
  (void*) &RogueTokenType_symbol_compare,
  (void*) &RogueTokenType_symbol_dot,
  (void*) &RogueTokenType_symbol_dot_equals,
  (void*) &RogueTokenType_symbol_downToGreaterThan,
  (void*) &RogueTokenType_symbol_empty_braces,
  (void*) &RogueTokenType_symbol_empty_brackets,
  (void*) &RogueTokenType_symbol_eq,
  (void*) &RogueTokenType_symbol_equals,
  (void*) &RogueTokenType_symbol_exclamation_point,
  (void*) &RogueTokenType_symbol_fat_arrow,
  (void*) &RogueTokenType_symbol_ge,
  (void*) &RogueTokenType_symbol_gt,
  (void*) &RogueTokenType_symbol_le,
  (void*) &RogueTokenType_symbol_lt,
  (void*) &RogueTokenType_symbol_minus,
  (void*) &RogueTokenType_symbol_minus_equals,
  (void*) &RogueTokenType_symbol_minus_minus,
  (void*) &RogueTokenType_symbol_ne,
  (void*) &RogueTokenType_symbol_open_brace,
  (void*) &RogueTokenType_symbol_open_bracket,
  (void*) &RogueTokenType_symbol_open_paren,
  (void*) &RogueTokenType_symbol_open_specialize,
  (void*) &RogueTokenType_symbol_percent,
  (void*) &RogueTokenType_symbol_percent_equals,
  (void*) &RogueTokenType_symbol_plus,
  (void*) &RogueTokenType_symbol_plus_equals,
  (void*) &RogueTokenType_symbol_plus_plus,
  (void*) &RogueTokenType_symbol_question_mark,
  (void*) &RogueTokenType_symbol_semicolon,
  (void*) &RogueTokenType_symbol_shift_left,
  (void*) &RogueTokenType_symbol_shift_right,
  (void*) &RogueTokenType_symbol_shift_right_x,
  (void*) &RogueTokenType_symbol_slash,
  (void*) &RogueTokenType_symbol_slash_equals,
  (void*) &RogueTokenType_symbol_tilde,
  (void*) &RogueTokenType_symbol_tilde_equals,
  (void*) &RogueTokenType_symbol_times,
  (void*) &RogueTokenType_symbol_times_equals,
  (void*) &RogueTokenType_symbol_upTo,
  (void*) &RogueTokenType_symbol_upToLessThan,
  (void*) &RogueTokenType_symbol_vertical_bar,
  (void*) &RogueTokenType_symbol_vertical_bar_equals,
  (void*) &RogueTokenType_symbol_double_vertical_bar,
  (void*) &RogueCmdStatementList_current,
  (void*) &RogueSystem_command_line_arguments,
  (void*) &RogueSystem_executable_filepath,
  (void*) &RogueSystem_environment,
  (void*) &RoguePreprocessor_definitions,
  (void*) &RogueStringProperty_empty_string
};

int Rogue_property_offsets[] =
{
  (int)(intptr_t)&((RogueClassException*)0)->message,
  (int)(intptr_t)&((RogueClassException*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->entries,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->count,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->is_formatted,
  (int)(intptr_t)&((RogueString_List*)0)->data,
  (int)(intptr_t)&((RogueString_List*)0)->count,
  (int)(intptr_t)&((RogueTypeInfo*)0)->index,
  (int)(intptr_t)&((RogueTypeInfo*)0)->name,
  (int)(intptr_t)&((RogueTypeInfo*)0)->global_properties,
  (int)(intptr_t)&((RogueTypeInfo*)0)->properties,
  (int)(intptr_t)&((RoguePropertyInfo_List*)0)->data,
  (int)(intptr_t)&((RoguePropertyInfo_List*)0)->count,
  (int)(intptr_t)&((RogueClassPropertyInfo*)0)->property_name_index,
  (int)(intptr_t)&((RogueClassPropertyInfo*)0)->property_type_index,
  (int)(intptr_t)&((RogueStringBuilder*)0)->utf8,
  (int)(intptr_t)&((RogueStringBuilder*)0)->count,
  (int)(intptr_t)&((RogueStringBuilder*)0)->indent,
  (int)(intptr_t)&((RogueStringBuilder*)0)->cursor_offset,
  (int)(intptr_t)&((RogueStringBuilder*)0)->cursor_index,
  (int)(intptr_t)&((RogueStringBuilder*)0)->at_newline,
  (int)(intptr_t)&((RogueByte_List*)0)->data,
  (int)(intptr_t)&((RogueByte_List*)0)->count,
  (int)(intptr_t)&((RogueCharacter_List*)0)->data,
  (int)(intptr_t)&((RogueCharacter_List*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_String__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_String__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->hash,
  (int)(intptr_t)&((RogueClassStringReader*)0)->position,
  (int)(intptr_t)&((RogueClassStringReader*)0)->count,
  (int)(intptr_t)&((RogueClassStringReader*)0)->string,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_TypeInfo__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_TypeInfo__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->hash,
  (int)(intptr_t)&((RogueClassGlobal*)0)->standard_output,
  (int)(intptr_t)&((RogueClassGlobal*)0)->global_output_buffer,
  (int)(intptr_t)&((RogueClassGlobal*)0)->exit_functions,
  (int)(intptr_t)&((RogueFunction___List*)0)->data,
  (int)(intptr_t)&((RogueFunction___List*)0)->count,
  (int)(intptr_t)&((RogueClassConsole*)0)->output_buffer,
  (int)(intptr_t)&((RogueClassRogueC*)0)->included_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->prefix_path_list,
  (int)(intptr_t)&((RogueClassRogueC*)0)->prefix_path_lookup,
  (int)(intptr_t)&((RogueClassRogueC*)0)->compile_targets,
  (int)(intptr_t)&((RogueClassRogueC*)0)->target_list,
  (int)(intptr_t)&((RogueClassRogueC*)0)->libraries_folder,
  (int)(intptr_t)&((RogueClassRogueC*)0)->source_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->generate_main,
  (int)(intptr_t)&((RogueClassRogueC*)0)->first_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->output_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->supported_targets,
  (int)(intptr_t)&((RogueClassRogueC*)0)->requisite_declarations,
  (int)(intptr_t)&((RogueClassRogueC*)0)->all_requisite,
  (int)(intptr_t)&((RogueClassRogueC*)0)->execute_args,
  (int)(intptr_t)&((RogueClassRogueC*)0)->package_name,
  (int)(intptr_t)&((RogueClassRogueC*)0)->debug_mode,
  (int)(intptr_t)&((RogueClassRogueC*)0)->run_tests,
  (int)(intptr_t)&((RogueClassRogueC*)0)->print_version,
  (int)(intptr_t)&((RogueClassRogueC*)0)->parsers,
  (int)(intptr_t)&((RogueClassRogueC*)0)->parsereaders_by_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->stopwatch,
  (int)(intptr_t)&((RogueClassRogueC*)0)->gc_mode,
  (int)(intptr_t)&((RogueClassRogueC*)0)->gc_threshold,
  (int)(intptr_t)&((RogueClassRogueC*)0)->plugins,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Logical__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Logical__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->hash,
  (int)(intptr_t)&((RogueParser_List*)0)->data,
  (int)(intptr_t)&((RogueParser_List*)0)->count,
  (int)(intptr_t)&((RogueClassParser*)0)->reader,
  (int)(intptr_t)&((RogueClassParser*)0)->filepath,
  (int)(intptr_t)&((RogueClassParser*)0)->_this_type,
  (int)(intptr_t)&((RogueClassParser*)0)->this_method,
  (int)(intptr_t)&((RogueClassParser*)0)->local_declarations,
  (int)(intptr_t)&((RogueClassParser*)0)->property_list,
  (int)(intptr_t)&((RogueClassParser*)0)->string_buffer,
  (int)(intptr_t)&((RogueClassParser*)0)->cur_statement_list,
  (int)(intptr_t)&((RogueClassParser*)0)->parsing_augment,
  (int)(intptr_t)&((RogueClassParser*)0)->used_modules,
  (int)(intptr_t)&((RogueClassParser*)0)->module_id_map,
  (int)(intptr_t)&((RogueClassParser*)0)->inserted_module_prefixes,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->tokens,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->position,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->count,
  (int)(intptr_t)&((RogueToken_List*)0)->data,
  (int)(intptr_t)&((RogueToken_List*)0)->count,
  (int)(intptr_t)&((RogueClassToken*)0)->_type,
  (int)(intptr_t)&((RogueClassToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassToken*)0)->line,
  (int)(intptr_t)&((RogueClassToken*)0)->column,
  (int)(intptr_t)&((RogueClassTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_TokenType__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_TokenType__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->hash,
  (int)(intptr_t)&((RogueClassType*)0)->t,
  (int)(intptr_t)&((RogueClassType*)0)->name,
  (int)(intptr_t)&((RogueClassType*)0)->attributes,
  (int)(intptr_t)&((RogueClassType*)0)->index,
  (int)(intptr_t)&((RogueClassType*)0)->source_template,
  (int)(intptr_t)&((RogueClassType*)0)->specializers,
  (int)(intptr_t)&((RogueClassType*)0)->defined,
  (int)(intptr_t)&((RogueClassType*)0)->organized,
  (int)(intptr_t)&((RogueClassType*)0)->organizing,
  (int)(intptr_t)&((RogueClassType*)0)->resolved,
  (int)(intptr_t)&((RogueClassType*)0)->culled,
  (int)(intptr_t)&((RogueClassType*)0)->base_class,
  (int)(intptr_t)&((RogueClassType*)0)->base_types,
  (int)(intptr_t)&((RogueClassType*)0)->extended_types,
  (int)(intptr_t)&((RogueClassType*)0)->is_array,
  (int)(intptr_t)&((RogueClassType*)0)->is_list,
  (int)(intptr_t)&((RogueClassType*)0)->is_optional,
  (int)(intptr_t)&((RogueClassType*)0)->_element_type,
  (int)(intptr_t)&((RogueClassType*)0)->is_used,
  (int)(intptr_t)&((RogueClassType*)0)->simplify_name,
  (int)(intptr_t)&((RogueClassType*)0)->definition_list,
  (int)(intptr_t)&((RogueClassType*)0)->definition_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->prev_enum_cmd,
  (int)(intptr_t)&((RogueClassType*)0)->next_enum_offset,
  (int)(intptr_t)&((RogueClassType*)0)->global_list,
  (int)(intptr_t)&((RogueClassType*)0)->global_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->property_list,
  (int)(intptr_t)&((RogueClassType*)0)->property_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_list,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_lookup_by_name,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_lookup_by_signature,
  (int)(intptr_t)&((RogueClassType*)0)->method_list,
  (int)(intptr_t)&((RogueClassType*)0)->method_lookup_by_name,
  (int)(intptr_t)&((RogueClassType*)0)->method_lookup_by_signature,
  (int)(intptr_t)&((RogueClassType*)0)->dynamic_method_table_index,
  (int)(intptr_t)&((RogueClassType*)0)->callback_parameter_types,
  (int)(intptr_t)&((RogueClassType*)0)->_callback_return_type,
  (int)(intptr_t)&((RogueClassType*)0)->method_templates,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_class_name,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_type_name,
  (int)(intptr_t)&((RogueClassAttributes*)0)->flags,
  (int)(intptr_t)&((RogueClassAttributes*)0)->tags,
  (int)(intptr_t)&((RogueClassTemplate*)0)->t,
  (int)(intptr_t)&((RogueClassTemplate*)0)->name,
  (int)(intptr_t)&((RogueClassTemplate*)0)->tokens,
  (int)(intptr_t)&((RogueClassTemplate*)0)->attributes,
  (int)(intptr_t)&((RogueClassTemplate*)0)->type_parameters,
  (int)(intptr_t)&((RogueClassTemplate*)0)->alternates_by_param_count,
  (int)(intptr_t)&((RogueClassTemplate*)0)->_routine_return_type,
  (int)(intptr_t)&((RogueClassTemplate*)0)->routine_parameter_types,
  (int)(intptr_t)&((RogueTypeParameter_List*)0)->data,
  (int)(intptr_t)&((RogueTypeParameter_List*)0)->count,
  (int)(intptr_t)&((RogueClassTypeParameter*)0)->t,
  (int)(intptr_t)&((RogueClassTypeParameter*)0)->name,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_Int32_Template__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_Int32_Template__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->hash,
  (int)(intptr_t)&((RogueInt32_List*)0)->data,
  (int)(intptr_t)&((RogueInt32_List*)0)->count,
  (int)(intptr_t)&((RogueType_List*)0)->data,
  (int)(intptr_t)&((RogueType_List*)0)->count,
  (int)(intptr_t)&((RogueTypeSpecializer_List*)0)->data,
  (int)(intptr_t)&((RogueTypeSpecializer_List*)0)->count,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->name,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->index,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->tokens,
  (int)(intptr_t)&((RogueDefinition_List*)0)->data,
  (int)(intptr_t)&((RogueDefinition_List*)0)->count,
  (int)(intptr_t)&((RogueClassDefinition*)0)->t,
  (int)(intptr_t)&((RogueClassDefinition*)0)->name,
  (int)(intptr_t)&((RogueClassDefinition*)0)->expression,
  (int)(intptr_t)&((RogueClassDefinition*)0)->is_enumeration,
  (int)(intptr_t)&((RogueClassCmd*)0)->t,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Definition__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Definition__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->hash,
  (int)(intptr_t)&((RogueProperty_List*)0)->data,
  (int)(intptr_t)&((RogueProperty_List*)0)->count,
  (int)(intptr_t)&((RogueClassProperty*)0)->t,
  (int)(intptr_t)&((RogueClassProperty*)0)->type_context,
  (int)(intptr_t)&((RogueClassProperty*)0)->name,
  (int)(intptr_t)&((RogueClassProperty*)0)->_type,
  (int)(intptr_t)&((RogueClassProperty*)0)->attributes,
  (int)(intptr_t)&((RogueClassProperty*)0)->initial_value,
  (int)(intptr_t)&((RogueClassProperty*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Property__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Property__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->hash,
  (int)(intptr_t)&((RogueMethod_List*)0)->data,
  (int)(intptr_t)&((RogueMethod_List*)0)->count,
  (int)(intptr_t)&((RogueClassMethod*)0)->t,
  (int)(intptr_t)&((RogueClassMethod*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethod*)0)->name,
  (int)(intptr_t)&((RogueClassMethod*)0)->signature,
  (int)(intptr_t)&((RogueClassMethod*)0)->attributes,
  (int)(intptr_t)&((RogueClassMethod*)0)->_return_type,
  (int)(intptr_t)&((RogueClassMethod*)0)->_task_result_type,
  (int)(intptr_t)&((RogueClassMethod*)0)->parameters,
  (int)(intptr_t)&((RogueClassMethod*)0)->locals,
  (int)(intptr_t)&((RogueClassMethod*)0)->min_args,
  (int)(intptr_t)&((RogueClassMethod*)0)->statements,
  (int)(intptr_t)&((RogueClassMethod*)0)->aspect_statements,
  (int)(intptr_t)&((RogueClassMethod*)0)->incorporating_classes,
  (int)(intptr_t)&((RogueClassMethod*)0)->overridden_method,
  (int)(intptr_t)&((RogueClassMethod*)0)->overriding_methods,
  (int)(intptr_t)&((RogueClassMethod*)0)->native_code,
  (int)(intptr_t)&((RogueClassMethod*)0)->organized,
  (int)(intptr_t)&((RogueClassMethod*)0)->resolved,
  (int)(intptr_t)&((RogueClassMethod*)0)->index,
  (int)(intptr_t)&((RogueClassMethod*)0)->is_used,
  (int)(intptr_t)&((RogueClassMethod*)0)->called_dynamically,
  (int)(intptr_t)&((RogueClassMethod*)0)->label_list,
  (int)(intptr_t)&((RogueClassMethod*)0)->label_lookup,
  (int)(intptr_t)&((RogueClassMethod*)0)->cur_label,
  (int)(intptr_t)&((RogueClassMethod*)0)->source_template,
  (int)(intptr_t)&((RogueClassMethod*)0)->specializer_count,
  (int)(intptr_t)&((RogueClassMethod*)0)->unspecialized_name,
  (int)(intptr_t)&((RogueClassMethod*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassMethod*)0)->cpp_typedef,
  (int)(intptr_t)&((RogueLocal_List*)0)->data,
  (int)(intptr_t)&((RogueLocal_List*)0)->count,
  (int)(intptr_t)&((RogueClassLocal*)0)->t,
  (int)(intptr_t)&((RogueClassLocal*)0)->name,
  (int)(intptr_t)&((RogueClassLocal*)0)->original_name,
  (int)(intptr_t)&((RogueClassLocal*)0)->_type,
  (int)(intptr_t)&((RogueClassLocal*)0)->index,
  (int)(intptr_t)&((RogueClassLocal*)0)->initial_value,
  (int)(intptr_t)&((RogueClassLocal*)0)->_cpp_name,
  (int)(intptr_t)&((RogueClassCmdStatementList*)0)->data,
  (int)(intptr_t)&((RogueClassCmdStatementList*)0)->count,
  (int)(intptr_t)&((RogueCmd_List*)0)->data,
  (int)(intptr_t)&((RogueCmd_List*)0)->count,
  (int)(intptr_t)&((RogueCmdLabel_List*)0)->data,
  (int)(intptr_t)&((RogueCmdLabel_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->name,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->is_referenced,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_CmdLabel__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_CmdLabel__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->hash,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->t,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->name,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->is_global,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->type_parameters,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->template_tokens,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->parameter_count,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->overridden_m,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->overrides,
  (int)(intptr_t)&((RogueMethodTemplate_List*)0)->data,
  (int)(intptr_t)&((RogueMethodTemplate_List*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Method_List__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Method_List__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Method__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Method__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->hash,
  (int)(intptr_t)&((RogueClassMethodTemplates*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethodTemplates*)0)->templates,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_ParseReader__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_ParseReader__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->hash,
  (int)(intptr_t)&((RogueClassParseReader*)0)->position,
  (int)(intptr_t)&((RogueClassParseReader*)0)->data,
  (int)(intptr_t)&((RogueClassParseReader*)0)->count,
  (int)(intptr_t)&((RogueClassParseReader*)0)->line,
  (int)(intptr_t)&((RogueClassParseReader*)0)->column,
  (int)(intptr_t)&((RogueClassParseReader*)0)->spaces_per_tab,
  (int)(intptr_t)&((RogueClassStopwatch*)0)->start_time,
  (int)(intptr_t)&((RoguePlugin_List*)0)->data,
  (int)(intptr_t)&((RoguePlugin_List*)0)->count,
  (int)(intptr_t)&((RogueClassPlugin*)0)->name,
  (int)(intptr_t)&((RogueClassPlugin*)0)->collect_supported_types_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->generate_additonal_types_callback,
  (int)(intptr_t)&((RogueClassProgram*)0)->code_prefix,
  (int)(intptr_t)&((RogueClassProgram*)0)->program_name,
  (int)(intptr_t)&((RogueClassProgram*)0)->unique_integer,
  (int)(intptr_t)&((RogueClassProgram*)0)->template_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->template_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->augment_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->all_requisite,
  (int)(intptr_t)&((RogueClassProgram*)0)->first_filepath,
  (int)(intptr_t)&((RogueClassProgram*)0)->m_on_launch,
  (int)(intptr_t)&((RogueClassProgram*)0)->m_run_tests,
  (int)(intptr_t)&((RogueClassProgram*)0)->global_properties,
  (int)(intptr_t)&((RogueClassProgram*)0)->native_header,
  (int)(intptr_t)&((RogueClassProgram*)0)->native_code,
  (int)(intptr_t)&((RogueClassProgram*)0)->methods_by_signature,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_null,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Real64,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Real32,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Int64,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Int32,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Character,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Byte,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Logical,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Object,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_String,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_NativeArray,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_GenericList,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Global,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Exception,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_StringBuilder,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_TypeInfo,
  (int)(intptr_t)&((RogueClassProgram*)0)->literal_string_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->literal_string_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->string_buffer,
  (int)(intptr_t)&((RogueClassProgram*)0)->ids_by_module,
  (int)(intptr_t)&((RogueTemplate_List*)0)->data,
  (int)(intptr_t)&((RogueTemplate_List*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Template__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Template__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Augment_List__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Augment_List__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->hash,
  (int)(intptr_t)&((RogueAugment_List*)0)->data,
  (int)(intptr_t)&((RogueAugment_List*)0)->count,
  (int)(intptr_t)&((RogueClassAugment*)0)->t,
  (int)(intptr_t)&((RogueClassAugment*)0)->name,
  (int)(intptr_t)&((RogueClassAugment*)0)->base_types,
  (int)(intptr_t)&((RogueClassAugment*)0)->tokens,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Type__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Type__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Int32__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Int32__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_String_List__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_String_List__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassError*)0)->message,
  (int)(intptr_t)&((RogueClassError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassRogueError*)0)->message,
  (int)(intptr_t)&((RogueClassRogueError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassRogueError*)0)->filepath,
  (int)(intptr_t)&((RogueClassRogueError*)0)->line,
  (int)(intptr_t)&((RogueClassRogueError*)0)->column,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->context,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->name,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->args,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->named_args,
  (int)(intptr_t)&((RogueClassCmdArgs*)0)->data,
  (int)(intptr_t)&((RogueClassCmdArgs*)0)->count,
  (int)(intptr_t)&((RogueCmdNamedArg_List*)0)->data,
  (int)(intptr_t)&((RogueCmdNamedArg_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->name,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->value,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->is_negative,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->inferred_index,
  (int)(intptr_t)&((RogueClassCmdReturn*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReturn*)0)->value,
  (int)(intptr_t)&((RogueClassCmdStatement*)0)->t,
  (int)(intptr_t)&((RogueClassScope*)0)->_this_type,
  (int)(intptr_t)&((RogueClassScope*)0)->this_method,
  (int)(intptr_t)&((RogueClassScope*)0)->this_body,
  (int)(intptr_t)&((RogueClassScope*)0)->this_statement,
  (int)(intptr_t)&((RogueClassScope*)0)->_implicit_type,
  (int)(intptr_t)&((RogueClassScope*)0)->local_list,
  (int)(intptr_t)&((RogueClassScope*)0)->control_stack,
  (int)(intptr_t)&((RogueCmdControlStructure_List*)0)->data,
  (int)(intptr_t)&((RogueCmdControlStructure_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->t,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdTaskControlSection*)0)->ip,
  (int)(intptr_t)&((RogueClassCmdTaskControlSection*)0)->statements,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->filepath,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->buffer,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->indent,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->needs_indent,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->line_number,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->trace_token,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->temp_buffer,
  (int)(intptr_t)&((RogueClassFile*)0)->filepath,
  (int)(intptr_t)&((RogueClassCmdMakeRequisite*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMakeRequisite*)0)->pattern,
  (int)(intptr_t)&((RogueClassLineReader*)0)->position,
  (int)(intptr_t)&((RogueClassLineReader*)0)->source,
  (int)(intptr_t)&((RogueClassLineReader*)0)->next,
  (int)(intptr_t)&((RogueClassLineReader*)0)->buffer,
  (int)(intptr_t)&((RogueClassLineReader*)0)->prev,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->filepath,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->reader,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->tokens,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->buffer,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_filepath,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_line,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_column,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->parser,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->reader,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->tokens,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->cur_module,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Token_List__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Token_List__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->tokens,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->queue,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->position,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->count,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->value,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->_type,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->line,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->column,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->value,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->_type,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->line,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->column,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->comment,
  (int)(intptr_t)&((RogueClassCmdLiteralLogical*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralLogical*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteral*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralInt32*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralInt32*)0)->value,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->right,
  (int)(intptr_t)&((RogueClassPropertyTable*)0)->values,
  (int)(intptr_t)&((RogueClassTable_String_PropertyValue_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_PropertyValue_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_PropertyValue_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_PropertyValue__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_PropertyValue__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_PropertyValue_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_PropertyValue_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_PropertyValue_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_PropertyValue_*)0)->hash,
  (int)(intptr_t)&((RogueClassCmdNativeHeader*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNativeHeader*)0)->code,
  (int)(intptr_t)&((RogueClassCmdNativeCode*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNativeCode*)0)->code,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->t,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->else_statements,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->case_others,
  (int)(intptr_t)&((RogueCmdWhichCase_List*)0)->data,
  (int)(intptr_t)&((RogueCmdWhichCase_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->conditions,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->t,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->t,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->control_statements,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->upkeep,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->catches,
  (int)(intptr_t)&((RogueCmdCatch_List*)0)->data,
  (int)(intptr_t)&((RogueCmdCatch_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->error_var,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->statement_list,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->result_var,
  (int)(intptr_t)&((RogueClassCmdYield*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThrow*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThrow*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->index,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->t,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->format,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->args,
  (int)(intptr_t)&((RogueClassCmdTrace*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTrace*)0)->info,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->skip_initialization,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->message,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->error,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->t,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNextIteration*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNextIteration*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->target,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->target,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdReadLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->t,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->left,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->right,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->op,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->t,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->control_var_name,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->index_var_name,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->collection,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->step_cmd,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->right,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->right,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->t,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdLogicalNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalNot*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdUnary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdUnary*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->right,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->left,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->right,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->left,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->right,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->t,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->left,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->right,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->left,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->right,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->t,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->left,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->right,
  (int)(intptr_t)&((RogueClassCmdNegate*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNegate*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdBitwiseNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseNot*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdLogicalize*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalize*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdIsReference*)0)->t,
  (int)(intptr_t)&((RogueClassCmdIsReference*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->context,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->index,
  (int)(intptr_t)&((RogueClassCmdListConvert*)0)->t,
  (int)(intptr_t)&((RogueClassCmdListConvert*)0)->list,
  (int)(intptr_t)&((RogueClassCmdListConvert*)0)->_to_type,
  (int)(intptr_t)&((RogueClassCmdListConvert*)0)->convert_fn,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->t,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->name,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->signature,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->_return_type,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdDefaultValue*)0)->t,
  (int)(intptr_t)&((RogueClassCmdDefaultValue*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdLiteralNull*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralReal64*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralReal64*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralInt64*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralInt64*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralCharacter*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralCharacter*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralThis*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralThis*)0)->_this_type,
  (int)(intptr_t)&((RogueClassCmdThisContext*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThisContext*)0)->_this_type,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->_list_type,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->name,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->named_args,
  (int)(intptr_t)&((RogueFnParam_List*)0)->data,
  (int)(intptr_t)&((RogueFnParam_List*)0)->count,
  (int)(intptr_t)&((RogueClassFnParam*)0)->name,
  (int)(intptr_t)&((RogueClassFnParam*)0)->_type,
  (int)(intptr_t)&((RogueFnArg_List*)0)->data,
  (int)(intptr_t)&((RogueFnArg_List*)0)->count,
  (int)(intptr_t)&((RogueClassFnArg*)0)->name,
  (int)(intptr_t)&((RogueClassFnArg*)0)->value,
  (int)(intptr_t)&((RogueClassFnArg*)0)->_type,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->parameters,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->_return_type,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->with_args,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->is_generic,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->t,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->code,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->this_method,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->_result_type,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->modify_op,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->_value_type,
  (int)(intptr_t)&((RogueCmdSelectCase_List*)0)->data,
  (int)(intptr_t)&((RogueCmdSelectCase_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->conditions,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->value,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->message,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->error,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->t,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->args,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->named_args,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->cmd_read,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->cmd_write,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->list_type_name,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->elements,
  (int)(intptr_t)&((RogueClassListRebuilder_Token_*)0)->list,
  (int)(intptr_t)&((RogueClassListRebuilder_Token_*)0)->read_index,
  (int)(intptr_t)&((RogueClassListRebuilder_Token_*)0)->write_index,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->args,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->case_others,
  (int)(intptr_t)&((RogueClassCmdCreateObject*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateObject*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdReadSingleton*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadSingleton*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdReadGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->count_cmd,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->index,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->context,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->index,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->sections,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->current_section,
  (int)(intptr_t)&((RogueCmdTaskControlSection_List*)0)->data,
  (int)(intptr_t)&((RogueCmdTaskControlSection_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdNoAction*)0)->t,
  (int)(intptr_t)&((RogueClassUpdateThisTypeVisitor*)0)->_this_type,
  (int)(intptr_t)&((RogueClassUpdateThisTypeVisitor*)0)->this_method,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_TypeSpecializer__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_TypeSpecializer__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->hash,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCloneMethodArgs*)0)->cloned_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->_task_type,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->task_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->_original_type,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->original_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->cmd_task_control,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->context_property,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->ip_property,
  (int)(intptr_t)&((RogueClassRequirementError*)0)->message,
  (int)(intptr_t)&((RogueClassRequirementError*)0)->stack_trace,
  (int)(intptr_t)&((RogueToken_List_List*)0)->data,
  (int)(intptr_t)&((RogueToken_List_List*)0)->count,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->this_context,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->method_info,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->arg_lookup,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->keys,
  (int)(intptr_t)&((RogueTableEntry_String_Cmd__List*)0)->data,
  (int)(intptr_t)&((RogueTableEntry_String_Cmd__List*)0)->count,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->hash,
  (int)(intptr_t)&((RogueClassListRebuilder_CmdNamedArg_*)0)->list,
  (int)(intptr_t)&((RogueClassListRebuilder_CmdNamedArg_*)0)->read_index,
  (int)(intptr_t)&((RogueClassListRebuilder_CmdNamedArg_*)0)->write_index,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->type_context,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->access,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->available,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->compatible,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->error_on_fail,
  (int)(intptr_t)&((RogueClassIOError*)0)->message,
  (int)(intptr_t)&((RogueClassIOError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassFileReader*)0)->position,
  (int)(intptr_t)&((RogueClassFileReader*)0)->filepath,
  (int)(intptr_t)&((RogueClassFileReader*)0)->count,
  (int)(intptr_t)&((RogueClassFileReader*)0)->buffer_position,
  (int)(intptr_t)&((RogueClassFileReader*)0)->buffer,
  0,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->position,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->filepath,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->error,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->buffer,
  0,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->position,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->byte_reader,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->next,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassInt32Property*)0)->value,
  (int)(intptr_t)&((RogueClassStringProperty*)0)->value,
  (int)(intptr_t)&((RogueClassCmdConvertToPrimitiveType*)0)->t,
  (int)(intptr_t)&((RogueClassCmdConvertToPrimitiveType*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdConvertToPrimitiveType*)0)->_target_type,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->position,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->list,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->limit,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->is_limited,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->args,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->_type,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->line,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->column,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->value,
  (int)(intptr_t)&((RogueOptionalInt32*)0)->value,
  (int)(intptr_t)&((RogueOptionalInt32*)0)->exists,
  (int)(intptr_t)&((RogueOptionalByte*)0)->value,
  (int)(intptr_t)&((RogueOptionalByte*)0)->exists,
  (int)(intptr_t)&((RogueOptionalCharacter*)0)->value,
  (int)(intptr_t)&((RogueOptionalCharacter*)0)->exists
};

int Rogue_object_size_table[387] =
{
  (int) sizeof(RogueClassException),
  (int) sizeof(RogueObject),
  (int) sizeof(RogueString),
  (int) sizeof(RogueClassStackTrace),
  (int) sizeof(RogueString_List),
  (int) sizeof(RogueClassGenericList),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueInt32),
  (int) sizeof(RogueLogical),
  (int) sizeof(RogueInt64),
  (int) sizeof(RogueTypeInfo),
  (int) sizeof(RoguePropertyInfo_List),
  (int) sizeof(RogueClassPropertyInfo),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueStringBuilder),
  (int) sizeof(RogueByte_List),
  (int) sizeof(RogueByte),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueCharacter_List),
  (int) sizeof(RogueCharacter),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueReal64),
  (int) sizeof(RogueClassTable_String_String_),
  (int) sizeof(RogueTableEntry_String_String__List),
  (int) sizeof(RogueClassTableEntry_String_String_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassStringReader),
  (int) sizeof(RogueClassReader_Character_),
  (int) sizeof(RogueClassReader_String_),
  (int) sizeof(RogueClassRuntime),
  (int) sizeof(RogueClassTable_String_TypeInfo_),
  (int) sizeof(RogueTableEntry_String_TypeInfo__List),
  (int) sizeof(RogueClassTableEntry_String_TypeInfo_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassGlobal),
  (int) sizeof(RogueClassPrintWriterAspect_Global_global_output_buffer_),
  (int) sizeof(RogueClassPrintWriter),
  (int) sizeof(RogueFunction___List),
  (int) sizeof(RogueClassFunction__),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassConsole),
  (int) sizeof(RogueClassPrintWriterAspect_Console_output_buffer_),
  (int) sizeof(RogueClassFunction_95),
  (int) sizeof(RogueClassRogueC),
  (int) sizeof(RogueClassTable_String_Logical_),
  (int) sizeof(RogueTableEntry_String_Logical__List),
  (int) sizeof(RogueClassTableEntry_String_Logical_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueParser_List),
  (int) sizeof(RogueClassParser),
  (int) sizeof(RogueClassTokenReader),
  (int) sizeof(RogueToken_List),
  (int) sizeof(RogueClassToken),
  (int) sizeof(RogueClassTokenType),
  (int) sizeof(RogueClassTable_String_TokenType_),
  (int) sizeof(RogueTableEntry_String_TokenType__List),
  (int) sizeof(RogueClassTableEntry_String_TokenType_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassType),
  (int) sizeof(RogueClassAttributes),
  (int) sizeof(RogueClassTemplate),
  (int) sizeof(RogueTypeParameter_List),
  (int) sizeof(RogueClassTypeParameter),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_Int32_Template_),
  (int) sizeof(RogueTableEntry_Int32_Template__List),
  (int) sizeof(RogueClassTableEntry_Int32_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueInt32_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueType_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTypeSpecializer_List),
  (int) sizeof(RogueClassTypeSpecializer),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueDefinition_List),
  (int) sizeof(RogueClassDefinition),
  (int) sizeof(RogueClassCmd),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Definition_),
  (int) sizeof(RogueTableEntry_String_Definition__List),
  (int) sizeof(RogueClassTableEntry_String_Definition_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueProperty_List),
  (int) sizeof(RogueClassProperty),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Property_),
  (int) sizeof(RogueTableEntry_String_Property__List),
  (int) sizeof(RogueClassTableEntry_String_Property_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueMethod_List),
  (int) sizeof(RogueClassMethod),
  (int) sizeof(RogueLocal_List),
  (int) sizeof(RogueClassLocal),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdStatementList),
  (int) sizeof(RogueCmd_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueCmdLabel_List),
  (int) sizeof(RogueClassCmdLabel),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_CmdLabel_),
  (int) sizeof(RogueTableEntry_String_CmdLabel__List),
  (int) sizeof(RogueClassTableEntry_String_CmdLabel_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassMethodTemplate),
  (int) sizeof(RogueMethodTemplate_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Method_List_),
  (int) sizeof(RogueTableEntry_String_Method_List__List),
  (int) sizeof(RogueClassTableEntry_String_Method_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Method_),
  (int) sizeof(RogueTableEntry_String_Method__List),
  (int) sizeof(RogueClassTableEntry_String_Method_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassMethodTemplates),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_ParseReader_),
  (int) sizeof(RogueTableEntry_String_ParseReader__List),
  (int) sizeof(RogueClassTableEntry_String_ParseReader_),
  (int) sizeof(RogueClassParseReader),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassStopwatch),
  (int) sizeof(RoguePlugin_List),
  (int) sizeof(RogueClassPlugin),
  (int) sizeof(RogueClassFunction__RETURNSLogical),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassProgram),
  (int) sizeof(RogueTemplate_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Template_),
  (int) sizeof(RogueTableEntry_String_Template__List),
  (int) sizeof(RogueClassTableEntry_String_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Augment_List_),
  (int) sizeof(RogueTableEntry_String_Augment_List__List),
  (int) sizeof(RogueClassTableEntry_String_Augment_List_),
  (int) sizeof(RogueAugment_List),
  (int) sizeof(RogueClassAugment),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Type_),
  (int) sizeof(RogueTableEntry_String_Type__List),
  (int) sizeof(RogueClassTableEntry_String_Type_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Int32_),
  (int) sizeof(RogueTableEntry_String_Int32__List),
  (int) sizeof(RogueClassTableEntry_String_Int32_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_String_List_),
  (int) sizeof(RogueTableEntry_String_String_List__List),
  (int) sizeof(RogueClassTableEntry_String_String_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassError),
  (int) sizeof(RogueClassRogueError),
  (int) sizeof(RogueClassCmdAccess),
  (int) sizeof(RogueClassCmdArgs),
  (int) sizeof(RogueCmdNamedArg_List),
  (int) sizeof(RogueClassCmdNamedArg),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdReturn),
  (int) sizeof(RogueClassCmdStatement),
  (int) sizeof(RogueClassScope),
  (int) sizeof(RogueCmdControlStructure_List),
  (int) sizeof(RogueClassCmdControlStructure),
  (int) sizeof(RogueClassCmdTaskControlSection),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassFunction_Type_RETURNSLogical),
  (int) sizeof(RogueClassFunction_383),
  (int) sizeof(RogueClassFunction_384),
  (int) sizeof(RogueClassCPPWriter),
  (int) sizeof(RogueClassSystem),
  (int) sizeof(RogueClassMath),
  (int) sizeof(RogueClassReader_Byte_),
  (int) sizeof(RogueClassWriter_Byte_),
  (int) sizeof(RogueClassFile),
  (int) sizeof(RogueClassCmdMakeRequisite),
  (int) sizeof(RogueClassLineReader),
  (int) sizeof(RogueClassFunction_798),
  (int) sizeof(RogueClassTokenizer),
  (int) sizeof(RogueClassPreprocessor),
  (int) sizeof(RogueClassTable_String_Token_List_),
  (int) sizeof(RogueTableEntry_String_Token_List__List),
  (int) sizeof(RogueClassTableEntry_String_Token_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassPreprocessorTokenReader),
  (int) sizeof(RogueClassLiteralCharacterToken),
  (int) sizeof(RogueClassLiteralInt64Token),
  (int) sizeof(RogueClassLiteralInt32Token),
  (int) sizeof(RogueClassLiteralReal64Token),
  (int) sizeof(RogueClassStringDataToken),
  (int) sizeof(RogueClassEOLToken),
  (int) sizeof(RogueClassCmdLiteralLogical),
  (int) sizeof(RogueClassCmdLiteral),
  (int) sizeof(RogueClassCmdLiteralInt32),
  (int) sizeof(RogueClassCloneArgs),
  (int) sizeof(RogueClassCmdAdd),
  (int) sizeof(RogueClassCmdBinary),
  (int) sizeof(RogueClassPropertyTable),
  (int) sizeof(RogueClassPropertyValue),
  (int) sizeof(RogueClassTable_String_PropertyValue_),
  (int) sizeof(RogueTableEntry_String_PropertyValue__List),
  (int) sizeof(RogueClassTableEntry_String_PropertyValue_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdNativeHeader),
  (int) sizeof(RogueClassCmdNativeCode),
  (int) sizeof(RogueClassCmdIf),
  (int) sizeof(RogueClassCmdWhich),
  (int) sizeof(RogueCmdWhichCase_List),
  (int) sizeof(RogueClassCmdWhichCase),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdBlock),
  (int) sizeof(RogueClassCmdContingent),
  (int) sizeof(RogueClassCmdGenericLoop),
  (int) sizeof(RogueClassCmdTry),
  (int) sizeof(RogueCmdCatch_List),
  (int) sizeof(RogueClassCmdCatch),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdAwait),
  (int) sizeof(RogueClassCmdYield),
  (int) sizeof(RogueClassCmdThrow),
  (int) sizeof(RogueClassCmdLiteralString),
  (int) sizeof(RogueClassCmdFormattedString),
  (int) sizeof(RogueClassCmdTrace),
  (int) sizeof(RogueClassCmdLocalDeclaration),
  (int) sizeof(RogueClassCmdAssert),
  (int) sizeof(RogueClassCmdEscape),
  (int) sizeof(RogueClassCmdNextIteration),
  (int) sizeof(RogueClassCmdNecessary),
  (int) sizeof(RogueClassCmdSufficient),
  (int) sizeof(RogueClassCmdAdjust),
  (int) sizeof(RogueClassCmdAssign),
  (int) sizeof(RogueClassCmdModifyAndAssign),
  (int) sizeof(RogueClassCmdAdjustLocal),
  (int) sizeof(RogueClassCmdReadLocal),
  (int) sizeof(RogueClassCmdCompareLE),
  (int) sizeof(RogueClassCmdComparison),
  (int) sizeof(RogueClassCmdRange),
  (int) sizeof(RogueClassCmdModifyAndAssignLocal),
  (int) sizeof(RogueClassCmdResolvedModifyAndAssign),
  (int) sizeof(RogueClassCmdRangeUpTo),
  (int) sizeof(RogueClassCmdRangeUpToLessThan),
  (int) sizeof(RogueClassCmdCompareLT),
  (int) sizeof(RogueClassCmdCompareGE),
  (int) sizeof(RogueClassCmdForEach),
  (int) sizeof(RogueClassCmdRangeDownTo),
  (int) sizeof(RogueClassCmdLogicalXor),
  (int) sizeof(RogueClassCmdBinaryLogical),
  (int) sizeof(RogueClassCmdLogicalOr),
  (int) sizeof(RogueClassCmdLogicalAnd),
  (int) sizeof(RogueClassCmdCompareEQ),
  (int) sizeof(RogueClassCmdCompareIs),
  (int) sizeof(RogueClassCmdCompareNE),
  (int) sizeof(RogueClassCmdCompareIsNot),
  (int) sizeof(RogueClassCmdCompareGT),
  (int) sizeof(RogueClassCmdInstanceOf),
  (int) sizeof(RogueClassCmdTypeOperator),
  (int) sizeof(RogueClassCmdLogicalNot),
  (int) sizeof(RogueClassCmdUnary),
  (int) sizeof(RogueClassCmdBitwiseXor),
  (int) sizeof(RogueClassCmdBitwiseOp),
  (int) sizeof(RogueClassCmdBitwiseOr),
  (int) sizeof(RogueClassCmdBitwiseAnd),
  (int) sizeof(RogueClassCmdBitwiseShiftLeft),
  (int) sizeof(RogueClassCmdBitwiseShiftRight),
  (int) sizeof(RogueClassCmdBitwiseShiftRightX),
  (int) sizeof(RogueClassCmdSubtract),
  (int) sizeof(RogueClassCmdMultiply),
  (int) sizeof(RogueClassCmdDivide),
  (int) sizeof(RogueClassCmdMod),
  (int) sizeof(RogueClassCmdPower),
  (int) sizeof(RogueClassCmdNegate),
  (int) sizeof(RogueClassCmdBitwiseNot),
  (int) sizeof(RogueClassCmdLogicalize),
  (int) sizeof(RogueClassCmdIsReference),
  (int) sizeof(RogueClassCmdElementAccess),
  (int) sizeof(RogueClassCmdListConvert),
  (int) sizeof(RogueClassCmdConvertToType),
  (int) sizeof(RogueClassCmdCreateCallback),
  (int) sizeof(RogueClassCmdAs),
  (int) sizeof(RogueClassCmdDefaultValue),
  (int) sizeof(RogueClassCmdLiteralNull),
  (int) sizeof(RogueClassCmdLiteralReal64),
  (int) sizeof(RogueClassCmdLiteralInt64),
  (int) sizeof(RogueClassCmdLiteralCharacter),
  (int) sizeof(RogueClassCmdLiteralThis),
  (int) sizeof(RogueClassCmdThisContext),
  (int) sizeof(RogueClassCmdCreateList),
  (int) sizeof(RogueClassCmdCallPriorMethod),
  (int) sizeof(RogueFnParam_List),
  (int) sizeof(RogueClassFnParam),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueFnArg_List),
  (int) sizeof(RogueClassFnArg),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdCreateFunction),
  (int) sizeof(RogueClassCmdInlineNative),
  (int) sizeof(RogueClassCmdSelect),
  (int) sizeof(RogueCmdSelectCase_List),
  (int) sizeof(RogueClassCmdSelectCase),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdRequire),
  (int) sizeof(RogueClassCmdEnsure),
  (int) sizeof(RogueClassCmdTypedLiteralList),
  (int) sizeof(RogueClassListRebuilder_Token_),
  (int) sizeof(RogueClassCmdCreateCompound),
  (int) sizeof(RogueClassVisitor),
  (int) sizeof(RogueClassCmdSwitch),
  (int) sizeof(RogueClassCmdCreateObject),
  (int) sizeof(RogueClassCmdReadSingleton),
  (int) sizeof(RogueClassCmdWriteSingleton),
  (int) sizeof(RogueClassCmdWriteLocal),
  (int) sizeof(RogueClassCmdReadGlobal),
  (int) sizeof(RogueClassCmdWriteGlobal),
  (int) sizeof(RogueClassCmdReadProperty),
  (int) sizeof(RogueClassCmdWriteProperty),
  (int) sizeof(RogueClassCmdCall),
  (int) sizeof(RogueClassCmdCallDynamicMethod),
  (int) sizeof(RogueClassCmdCallMethod),
  (int) sizeof(RogueClassCmdAdjustProperty),
  (int) sizeof(RogueClassCmdAdjustGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignProperty),
  (int) sizeof(RogueClassCmdCreateArray),
  (int) sizeof(RogueClassCmdReadArrayElement),
  (int) sizeof(RogueClassCmdReadArrayCount),
  (int) sizeof(RogueClassCmdWriteArrayElement),
  (int) sizeof(RogueClassCmdTaskControl),
  (int) sizeof(RogueCmdTaskControlSection_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdNoAction),
  (int) sizeof(RogueClassUpdateThisTypeVisitor),
  (int) sizeof(RogueClassTable_String_TypeSpecializer_),
  (int) sizeof(RogueTableEntry_String_TypeSpecializer__List),
  (int) sizeof(RogueClassTableEntry_String_TypeSpecializer_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdCastToType),
  (int) sizeof(RogueClassTraceUsedCodeVisitor),
  (int) sizeof(RogueClassCloneMethodArgs),
  (int) sizeof(RogueClassTaskArgs),
  (int) sizeof(RogueClassRequirementError),
  (int) sizeof(RogueToken_List_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassMacroArgs),
  (int) sizeof(RogueClassTable_String_Cmd_),
  (int) sizeof(RogueTableEntry_String_Cmd__List),
  (int) sizeof(RogueClassTableEntry_String_Cmd_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassFunction_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassListRebuilder_CmdNamedArg_),
  (int) sizeof(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassQuicksort_CmdNamedArg_),
  (int) sizeof(RogueClassCmdCallInlineNativeRoutine),
  (int) sizeof(RogueClassCmdCallInlineNative),
  (int) sizeof(RogueClassCmdCallNativeRoutine),
  (int) sizeof(RogueClassCmdCallRoutine),
  (int) sizeof(RogueClassCmdCallInlineNativeMethod),
  (int) sizeof(RogueClassCmdCallNativeMethod),
  (int) sizeof(RogueClassCmdCallAspectMethod),
  (int) sizeof(RogueClassCandidateMethods),
  (int) sizeof(RogueClassFunction_2629),
  (int) sizeof(RogueClassFunction_2630),
  (int) sizeof(RogueClassIOError),
  (int) sizeof(RogueClassFileReader),
  (int) sizeof(RogueClassFileWriter),
  (int) sizeof(RogueClassUTF8Reader),
  (int) sizeof(RogueClassDirectiveTokenType),
  (int) sizeof(RogueClassStructuralDirectiveTokenType),
  (int) sizeof(RogueClassEOLTokenType),
  (int) sizeof(RogueClassStructureTokenType),
  (int) sizeof(RogueClassNativeCodeTokenType),
  (int) sizeof(RogueClassModifyAndAssignTokenType),
  (int) sizeof(RogueClassInt32Property),
  (int) sizeof(RogueClassStringProperty),
  (int) sizeof(RogueClassCmdConvertToPrimitiveType),
  (int) sizeof(RogueClassListReader_CmdSelectCase_),
  (int) sizeof(RogueClassReader_CmdSelectCase_),
  (int) sizeof(RogueClassCmdCallStaticMethod),
  (int) sizeof(RogueClassNativeCodeToken),
  (int) sizeof(RogueOptionalInt32),
  (int) sizeof(RogueClassSystemEnvironment),
  (int) sizeof(RogueOptionalByte),
  (int) sizeof(RogueOptionalCharacter)
};

int Rogue_attributes_table[387] =
{
  8192,
  32,
  48,
  8192,
  8192,
  0,
  32,
  32,
  2,
  2,
  2,
  8192,
  0,
  0,
  32,
  8192,
  0,
  2,
  32,
  8192,
  2,
  32,
  2,
  0,
  0,
  0,
  32,
  0,
  1,
  1,
  8192,
  0,
  0,
  0,
  32,
  9216,
  1,
  1,
  0,
  0,
  32,
  1024,
  1,
  1024,
  1024,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  32,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  9216,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  1024,
  1024,
  0,
  8192,
  0,
  1,
  1,
  0,
  0,
  0,
  1024,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  1024,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1024,
  1024,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  0,
  0,
  19,
  19,
  19,
  19
};

int Rogue_allocator_count = 1;
RogueAllocator Rogue_allocators[1];

int Rogue_type_count = 387;
RogueType Rogue_types[387];

RogueType* RogueTypeException;
RogueType* RogueTypeObject;
RogueType* RogueTypeString;
RogueType* RogueTypeStackTrace;
RogueType* RogueTypeString_List;
RogueType* RogueTypeGenericList;
RogueType* RogueTypeArray;
RogueType* RogueTypeInt32;
RogueType* RogueTypeLogical;
RogueType* RogueTypeInt64;
RogueType* RogueTypeTypeInfo;
RogueType* RogueTypePropertyInfo_List;
RogueType* RogueTypePropertyInfo;
RogueType* RogueTypeStringBuilder;
RogueType* RogueTypeByte_List;
RogueType* RogueTypeByte;
RogueType* RogueTypeCharacter_List;
RogueType* RogueTypeCharacter;
RogueType* RogueTypeReal64;
RogueType* RogueTypeTable_String_String_;
RogueType* RogueTypeTableEntry_String_String__List;
RogueType* RogueTypeTableEntry_String_String_;
RogueType* RogueTypeStringReader;
RogueType* RogueTypeReader_Character_;
RogueType* RogueTypeReader_String_;
RogueType* RogueTypeRuntime;
RogueType* RogueTypeTable_String_TypeInfo_;
RogueType* RogueTypeTableEntry_String_TypeInfo__List;
RogueType* RogueTypeTableEntry_String_TypeInfo_;
RogueType* RogueTypeGlobal;
RogueType* RogueTypePrintWriterAspect_Global_global_output_buffer_;
RogueType* RogueTypePrintWriter;
RogueType* RogueTypeFunction___List;
RogueType* RogueTypeFunction__;
RogueType* RogueTypeConsole;
RogueType* RogueTypePrintWriterAspect_Console_output_buffer_;
RogueType* RogueTypeFunction_95;
RogueType* RogueTypeRogueC;
RogueType* RogueTypeTable_String_Logical_;
RogueType* RogueTypeTableEntry_String_Logical__List;
RogueType* RogueTypeTableEntry_String_Logical_;
RogueType* RogueTypeParser_List;
RogueType* RogueTypeParser;
RogueType* RogueTypeTokenReader;
RogueType* RogueTypeToken_List;
RogueType* RogueTypeToken;
RogueType* RogueTypeTokenType;
RogueType* RogueTypeTable_String_TokenType_;
RogueType* RogueTypeTableEntry_String_TokenType__List;
RogueType* RogueTypeTableEntry_String_TokenType_;
RogueType* RogueTypeType;
RogueType* RogueTypeAttributes;
RogueType* RogueTypeTemplate;
RogueType* RogueTypeTypeParameter_List;
RogueType* RogueTypeTypeParameter;
RogueType* RogueTypeTable_Int32_Template_;
RogueType* RogueTypeTableEntry_Int32_Template__List;
RogueType* RogueTypeTableEntry_Int32_Template_;
RogueType* RogueTypeInt32_List;
RogueType* RogueTypeType_List;
RogueType* RogueTypeTypeSpecializer_List;
RogueType* RogueTypeTypeSpecializer;
RogueType* RogueTypeDefinition_List;
RogueType* RogueTypeDefinition;
RogueType* RogueTypeCmd;
RogueType* RogueTypeTable_String_Definition_;
RogueType* RogueTypeTableEntry_String_Definition__List;
RogueType* RogueTypeTableEntry_String_Definition_;
RogueType* RogueTypeProperty_List;
RogueType* RogueTypeProperty;
RogueType* RogueTypeTable_String_Property_;
RogueType* RogueTypeTableEntry_String_Property__List;
RogueType* RogueTypeTableEntry_String_Property_;
RogueType* RogueTypeMethod_List;
RogueType* RogueTypeMethod;
RogueType* RogueTypeLocal_List;
RogueType* RogueTypeLocal;
RogueType* RogueTypeCmdStatementList;
RogueType* RogueTypeCmd_List;
RogueType* RogueTypeCmdLabel_List;
RogueType* RogueTypeCmdLabel;
RogueType* RogueTypeTable_String_CmdLabel_;
RogueType* RogueTypeTableEntry_String_CmdLabel__List;
RogueType* RogueTypeTableEntry_String_CmdLabel_;
RogueType* RogueTypeMethodTemplate;
RogueType* RogueTypeMethodTemplate_List;
RogueType* RogueTypeTable_String_Method_List_;
RogueType* RogueTypeTableEntry_String_Method_List__List;
RogueType* RogueTypeTableEntry_String_Method_List_;
RogueType* RogueTypeTable_String_Method_;
RogueType* RogueTypeTableEntry_String_Method__List;
RogueType* RogueTypeTableEntry_String_Method_;
RogueType* RogueTypeMethodTemplates;
RogueType* RogueTypeTable_String_ParseReader_;
RogueType* RogueTypeTableEntry_String_ParseReader__List;
RogueType* RogueTypeTableEntry_String_ParseReader_;
RogueType* RogueTypeParseReader;
RogueType* RogueTypeStopwatch;
RogueType* RogueTypePlugin_List;
RogueType* RogueTypePlugin;
RogueType* RogueTypeFunction__RETURNSLogical;
RogueType* RogueTypeProgram;
RogueType* RogueTypeTemplate_List;
RogueType* RogueTypeTable_String_Template_;
RogueType* RogueTypeTableEntry_String_Template__List;
RogueType* RogueTypeTableEntry_String_Template_;
RogueType* RogueTypeTable_String_Augment_List_;
RogueType* RogueTypeTableEntry_String_Augment_List__List;
RogueType* RogueTypeTableEntry_String_Augment_List_;
RogueType* RogueTypeAugment_List;
RogueType* RogueTypeAugment;
RogueType* RogueTypeTable_String_Type_;
RogueType* RogueTypeTableEntry_String_Type__List;
RogueType* RogueTypeTableEntry_String_Type_;
RogueType* RogueTypeTable_String_Int32_;
RogueType* RogueTypeTableEntry_String_Int32__List;
RogueType* RogueTypeTableEntry_String_Int32_;
RogueType* RogueTypeTable_String_String_List_;
RogueType* RogueTypeTableEntry_String_String_List__List;
RogueType* RogueTypeTableEntry_String_String_List_;
RogueType* RogueTypeError;
RogueType* RogueTypeRogueError;
RogueType* RogueTypeCmdAccess;
RogueType* RogueTypeCmdArgs;
RogueType* RogueTypeCmdNamedArg_List;
RogueType* RogueTypeCmdNamedArg;
RogueType* RogueTypeCmdReturn;
RogueType* RogueTypeCmdStatement;
RogueType* RogueTypeScope;
RogueType* RogueTypeCmdControlStructure_List;
RogueType* RogueTypeCmdControlStructure;
RogueType* RogueTypeCmdTaskControlSection;
RogueType* RogueTypeFunction_Type_RETURNSLogical;
RogueType* RogueTypeFunction_383;
RogueType* RogueTypeFunction_384;
RogueType* RogueTypeCPPWriter;
RogueType* RogueTypeSystem;
RogueType* RogueTypeMath;
RogueType* RogueTypeReader_Byte_;
RogueType* RogueTypeWriter_Byte_;
RogueType* RogueTypeFile;
RogueType* RogueTypeCmdMakeRequisite;
RogueType* RogueTypeLineReader;
RogueType* RogueTypeFunction_798;
RogueType* RogueTypeTokenizer;
RogueType* RogueTypePreprocessor;
RogueType* RogueTypeTable_String_Token_List_;
RogueType* RogueTypeTableEntry_String_Token_List__List;
RogueType* RogueTypeTableEntry_String_Token_List_;
RogueType* RogueTypePreprocessorTokenReader;
RogueType* RogueTypeLiteralCharacterToken;
RogueType* RogueTypeLiteralInt64Token;
RogueType* RogueTypeLiteralInt32Token;
RogueType* RogueTypeLiteralReal64Token;
RogueType* RogueTypeStringDataToken;
RogueType* RogueTypeEOLToken;
RogueType* RogueTypeCmdLiteralLogical;
RogueType* RogueTypeCmdLiteral;
RogueType* RogueTypeCmdLiteralInt32;
RogueType* RogueTypeCloneArgs;
RogueType* RogueTypeCmdAdd;
RogueType* RogueTypeCmdBinary;
RogueType* RogueTypePropertyTable;
RogueType* RogueTypePropertyValue;
RogueType* RogueTypeTable_String_PropertyValue_;
RogueType* RogueTypeTableEntry_String_PropertyValue__List;
RogueType* RogueTypeTableEntry_String_PropertyValue_;
RogueType* RogueTypeCmdNativeHeader;
RogueType* RogueTypeCmdNativeCode;
RogueType* RogueTypeCmdIf;
RogueType* RogueTypeCmdWhich;
RogueType* RogueTypeCmdWhichCase_List;
RogueType* RogueTypeCmdWhichCase;
RogueType* RogueTypeCmdBlock;
RogueType* RogueTypeCmdContingent;
RogueType* RogueTypeCmdGenericLoop;
RogueType* RogueTypeCmdTry;
RogueType* RogueTypeCmdCatch_List;
RogueType* RogueTypeCmdCatch;
RogueType* RogueTypeCmdAwait;
RogueType* RogueTypeCmdYield;
RogueType* RogueTypeCmdThrow;
RogueType* RogueTypeCmdLiteralString;
RogueType* RogueTypeCmdFormattedString;
RogueType* RogueTypeCmdTrace;
RogueType* RogueTypeCmdLocalDeclaration;
RogueType* RogueTypeCmdAssert;
RogueType* RogueTypeCmdEscape;
RogueType* RogueTypeCmdNextIteration;
RogueType* RogueTypeCmdNecessary;
RogueType* RogueTypeCmdSufficient;
RogueType* RogueTypeCmdAdjust;
RogueType* RogueTypeCmdAssign;
RogueType* RogueTypeCmdModifyAndAssign;
RogueType* RogueTypeCmdAdjustLocal;
RogueType* RogueTypeCmdReadLocal;
RogueType* RogueTypeCmdCompareLE;
RogueType* RogueTypeCmdComparison;
RogueType* RogueTypeCmdRange;
RogueType* RogueTypeCmdModifyAndAssignLocal;
RogueType* RogueTypeCmdResolvedModifyAndAssign;
RogueType* RogueTypeCmdRangeUpTo;
RogueType* RogueTypeCmdRangeUpToLessThan;
RogueType* RogueTypeCmdCompareLT;
RogueType* RogueTypeCmdCompareGE;
RogueType* RogueTypeCmdForEach;
RogueType* RogueTypeCmdRangeDownTo;
RogueType* RogueTypeCmdLogicalXor;
RogueType* RogueTypeCmdBinaryLogical;
RogueType* RogueTypeCmdLogicalOr;
RogueType* RogueTypeCmdLogicalAnd;
RogueType* RogueTypeCmdCompareEQ;
RogueType* RogueTypeCmdCompareIs;
RogueType* RogueTypeCmdCompareNE;
RogueType* RogueTypeCmdCompareIsNot;
RogueType* RogueTypeCmdCompareGT;
RogueType* RogueTypeCmdInstanceOf;
RogueType* RogueTypeCmdTypeOperator;
RogueType* RogueTypeCmdLogicalNot;
RogueType* RogueTypeCmdUnary;
RogueType* RogueTypeCmdBitwiseXor;
RogueType* RogueTypeCmdBitwiseOp;
RogueType* RogueTypeCmdBitwiseOr;
RogueType* RogueTypeCmdBitwiseAnd;
RogueType* RogueTypeCmdBitwiseShiftLeft;
RogueType* RogueTypeCmdBitwiseShiftRight;
RogueType* RogueTypeCmdBitwiseShiftRightX;
RogueType* RogueTypeCmdSubtract;
RogueType* RogueTypeCmdMultiply;
RogueType* RogueTypeCmdDivide;
RogueType* RogueTypeCmdMod;
RogueType* RogueTypeCmdPower;
RogueType* RogueTypeCmdNegate;
RogueType* RogueTypeCmdBitwiseNot;
RogueType* RogueTypeCmdLogicalize;
RogueType* RogueTypeCmdIsReference;
RogueType* RogueTypeCmdElementAccess;
RogueType* RogueTypeCmdListConvert;
RogueType* RogueTypeCmdConvertToType;
RogueType* RogueTypeCmdCreateCallback;
RogueType* RogueTypeCmdAs;
RogueType* RogueTypeCmdDefaultValue;
RogueType* RogueTypeCmdLiteralNull;
RogueType* RogueTypeCmdLiteralReal64;
RogueType* RogueTypeCmdLiteralInt64;
RogueType* RogueTypeCmdLiteralCharacter;
RogueType* RogueTypeCmdLiteralThis;
RogueType* RogueTypeCmdThisContext;
RogueType* RogueTypeCmdCreateList;
RogueType* RogueTypeCmdCallPriorMethod;
RogueType* RogueTypeFnParam_List;
RogueType* RogueTypeFnParam;
RogueType* RogueTypeFnArg_List;
RogueType* RogueTypeFnArg;
RogueType* RogueTypeCmdCreateFunction;
RogueType* RogueTypeCmdInlineNative;
RogueType* RogueTypeCmdSelect;
RogueType* RogueTypeCmdSelectCase_List;
RogueType* RogueTypeCmdSelectCase;
RogueType* RogueTypeCmdRequire;
RogueType* RogueTypeCmdEnsure;
RogueType* RogueTypeCmdTypedLiteralList;
RogueType* RogueTypeListRebuilder_Token_;
RogueType* RogueTypeCmdCreateCompound;
RogueType* RogueTypeVisitor;
RogueType* RogueTypeCmdSwitch;
RogueType* RogueTypeCmdCreateObject;
RogueType* RogueTypeCmdReadSingleton;
RogueType* RogueTypeCmdWriteSingleton;
RogueType* RogueTypeCmdWriteLocal;
RogueType* RogueTypeCmdReadGlobal;
RogueType* RogueTypeCmdWriteGlobal;
RogueType* RogueTypeCmdReadProperty;
RogueType* RogueTypeCmdWriteProperty;
RogueType* RogueTypeCmdCall;
RogueType* RogueTypeCmdCallDynamicMethod;
RogueType* RogueTypeCmdCallMethod;
RogueType* RogueTypeCmdAdjustProperty;
RogueType* RogueTypeCmdAdjustGlobal;
RogueType* RogueTypeCmdModifyAndAssignGlobal;
RogueType* RogueTypeCmdModifyAndAssignProperty;
RogueType* RogueTypeCmdCreateArray;
RogueType* RogueTypeCmdReadArrayElement;
RogueType* RogueTypeCmdReadArrayCount;
RogueType* RogueTypeCmdWriteArrayElement;
RogueType* RogueTypeCmdTaskControl;
RogueType* RogueTypeCmdTaskControlSection_List;
RogueType* RogueTypeCmdNoAction;
RogueType* RogueTypeUpdateThisTypeVisitor;
RogueType* RogueTypeTable_String_TypeSpecializer_;
RogueType* RogueTypeTableEntry_String_TypeSpecializer__List;
RogueType* RogueTypeTableEntry_String_TypeSpecializer_;
RogueType* RogueTypeCmdCastToType;
RogueType* RogueTypeTraceUsedCodeVisitor;
RogueType* RogueTypeCloneMethodArgs;
RogueType* RogueTypeTaskArgs;
RogueType* RogueTypeRequirementError;
RogueType* RogueTypeToken_List_List;
RogueType* RogueTypeMacroArgs;
RogueType* RogueTypeTable_String_Cmd_;
RogueType* RogueTypeTableEntry_String_Cmd__List;
RogueType* RogueTypeTableEntry_String_Cmd_;
RogueType* RogueTypeFunction_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeListRebuilder_CmdNamedArg_;
RogueType* RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeQuicksort_CmdNamedArg_;
RogueType* RogueTypeCmdCallInlineNativeRoutine;
RogueType* RogueTypeCmdCallInlineNative;
RogueType* RogueTypeCmdCallNativeRoutine;
RogueType* RogueTypeCmdCallRoutine;
RogueType* RogueTypeCmdCallInlineNativeMethod;
RogueType* RogueTypeCmdCallNativeMethod;
RogueType* RogueTypeCmdCallAspectMethod;
RogueType* RogueTypeCandidateMethods;
RogueType* RogueTypeFunction_2629;
RogueType* RogueTypeFunction_2630;
RogueType* RogueTypeIOError;
RogueType* RogueTypeFileReader;
RogueType* RogueTypeFileWriter;
RogueType* RogueTypeUTF8Reader;
RogueType* RogueTypeDirectiveTokenType;
RogueType* RogueTypeStructuralDirectiveTokenType;
RogueType* RogueTypeEOLTokenType;
RogueType* RogueTypeStructureTokenType;
RogueType* RogueTypeNativeCodeTokenType;
RogueType* RogueTypeModifyAndAssignTokenType;
RogueType* RogueTypeInt32Property;
RogueType* RogueTypeStringProperty;
RogueType* RogueTypeCmdConvertToPrimitiveType;
RogueType* RogueTypeListReader_CmdSelectCase_;
RogueType* RogueTypeReader_CmdSelectCase_;
RogueType* RogueTypeCmdCallStaticMethod;
RogueType* RogueTypeNativeCodeToken;
RogueType* RogueTypeOptionalInt32;
RogueType* RogueTypeSystemEnvironment;
RogueType* RogueTypeOptionalByte;
RogueType* RogueTypeOptionalCharacter;

int Rogue_literal_string_count = 1784;
RogueString* Rogue_literal_strings[1784];

RogueLogical RogueLogical__create__Int32( RogueInt32 value_0 )
{
  return (RogueLogical)(value_0 != 0);
}

void RogueStringBuilder__init_class()
{
  RogueStringBuilder_work_bytes = ((RogueByte_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))) )));
}

RogueCharacter RogueCharacter__create__Int32( RogueInt32 value_0 )
{
  return (RogueCharacter)(((RogueCharacter)(value_0)));
}

void RogueRuntime__init_class()
{
  RogueRuntime_type_info_lookup = ((RogueTable_String_TypeInfo___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeInfo_*,ROGUE_CREATE_OBJECT(Table_String_TypeInfo_))) )));
  ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueSystemEnvironment__get__String( ROGUE_ARG(RogueSystem_environment), Rogue_literal_strings[735] )))));
  if (((void*)value_0) != ((void*)NULL))
  {
    RogueReal64 n_1 = (strtod( (char*)value_0->utf8, 0 ));
    if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'M' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[736] )))))
    {
      n_1 *= 1048576.0;
    }
    else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'K' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[737] )))))
    {
      n_1 *= 1024.0;
    }
    RogueRuntime__set_gc_threshold__Int32( ROGUE_ARG(((RogueInt32)(n_1))) );
  }
}

RogueString* RogueRuntime__literal_string__Int32( RogueInt32 string_index_0 )
{
  if ((string_index_0 < 0 || string_index_0 >= (RogueRuntime__literal_string_count())))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  return (RogueString*)(Rogue_literal_strings[string_index_0]);
}

RogueInt32 RogueRuntime__literal_string_count()
{
  return (RogueInt32)(Rogue_literal_string_count);
}

void RogueRuntime__set_gc_threshold__Int32( RogueInt32 value_0 )
{
  if (value_0 <= 0)
  {
    value_0 = ((RogueInt32)2147483647);
  }
  Rogue_gc_threshold = value_0;

}

RogueTypeInfo* RogueRuntime__type_info__Int32( RogueInt32 type_index_0 )
{
  if (type_index_0 < 0 || type_index_0 >= Rogue_type_count) return 0;
  return RogueType_type_info( &Rogue_types[type_index_0] );

}

void RogueToken__init_class()
{
  RogueToken_filepath_to_filename = ((RogueTable_String_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_*,ROGUE_CREATE_OBJECT(Table_String_String_))) )));
}

void RogueTokenType__init_class()
{
}

void RogueCmdStatementList__init_class()
{
}

void RogueSystem__exit__Int32( RogueInt32 result_code_0 )
{
  Rogue_quit();
  exit( result_code_0 );

}

RogueInt32 RogueSystem__run__String( RogueString* command_0 )
{
  RogueInt32 return_val_1 = (0);
  return_val_1 = system( (char*)command_0->utf8 );

  if (return_val_1 == -1)
  {
    ROGUE_THROW(((RogueClassError*)((call_ROGUEM3( 10, ROGUE_ARG(((RogueClassException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[732] )))));
  }
  return (RogueInt32)(return_val_1);
}

RogueReal64 RogueSystem__time()
{
#if defined(_WIN32)
    struct __timeb64 time_struct;
    RogueReal64 time_seconds;
    _ftime64_s( &time_struct );
    time_seconds = (RogueReal64) time_struct.time;
    time_seconds += time_struct.millitm / 1000.0;
    return time_seconds;
#else
    struct timeval time_struct;
    RogueReal64 time_seconds;
    gettimeofday( &time_struct, 0 );
    time_seconds = (RogueReal64) time_struct.tv_sec;
    time_seconds += (time_struct.tv_usec / 1000000.0);
    return time_seconds;
#endif

}

void RogueSystem__init_class()
{
  RogueSystem_command_line_arguments = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
}

RogueInt32 RogueMath__max__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  if (a_0 >= b_1)
  {
    return (RogueInt32)(a_0);
  }
  else
  {
    return (RogueInt32)(b_1);
  }
}

RogueInt32 RogueMath__mod__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == 1))
  {
    return (RogueInt32)(0);
  }
  RogueInt32 r_2 = (a_0 % b_1);
  if ((a_0 ^ b_1) < 0)
  {
    if (!!(r_2))
    {
      return (RogueInt32)((r_2 + b_1));
    }
    else
    {
      return (RogueInt32)(0);
    }
  }
  else
  {
    return (RogueInt32)(r_2);
  }
}

RogueInt64 RogueMath__mod__Int64_Int64( RogueInt64 a_0, RogueInt64 b_1 )
{
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == ((RogueInt64)(1))))
  {
    return (RogueInt64)(((RogueInt64)(0)));
  }
  RogueInt64 r_2 = (a_0 % b_1);
  if ((a_0 ^ b_1) < ((RogueInt64)(0)))
  {
    if (!!(r_2))
    {
      return (RogueInt64)((r_2 + b_1));
    }
    else
    {
      return (RogueInt64)(((RogueInt64)(0)));
    }
  }
  else
  {
    return (RogueInt64)(r_2);
  }
}

RogueReal64 RogueMath__mod__Real64_Real64( RogueReal64 a_0, RogueReal64 b_1 )
{
  RogueReal64 q_2 = ((a_0 / b_1));
  return (RogueReal64)((a_0 - (floor((double)q_2) * b_1)));
}

RogueInt32 RogueMath__shift_right__Int32_Int32( RogueInt32 value_0, RogueInt32 bits_1 )
{
  if (bits_1 <= 0)
  {
    return (RogueInt32)(value_0);
  }
  --bits_1;
  if (!!(bits_1))
  {
    return (RogueInt32)((((value_0 >> 1) & 2147483647) >> bits_1));
  }
  else
  {
    return (RogueInt32)(((value_0 >> 1) & 2147483647));
  }
}

RogueString* RogueFile__absolute_filepath__String( RogueString* filepath_0 )
{
  if (!(!!(filepath_0)))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  if (!((RogueFile__exists__String( filepath_0 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,parent_1,((RogueFile__path__String( filepath_0 ))));
    if (parent_1->character_count == 0)
    {
      parent_1 = ((RogueString*)Rogue_literal_strings[76]);
    }
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__absolute_filepath__String( parent_1 ))) )))) )))), Rogue_literal_strings[73] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__filename__String( filepath_0 ))) )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,return_value_2,0);
#if defined(_WIN32)
  {
    char long_name[PATH_MAX+4];
    char full_name[PATH_MAX+4];
    if (GetInt64PathName((char*)filepath_0->utf8, long_name, PATH_MAX+4) == 0)
    {
      strcpy_s( long_name, PATH_MAX+4, (char*)filepath_0->utf8 );
    }
    if (GetFullPathName(long_name, PATH_MAX+4, full_name, 0) != 0)
    {
      return_value_2 = RogueString_create_from_utf8( full_name, -1 );
    }
  }
#else
  {
    int original_dir_fd;
    int new_dir_fd;
    char filename[PATH_MAX];
    char c_filepath[ PATH_MAX ];
    bool is_folder;
    is_folder = RogueFile__is_folder__String( filepath_0 );
    int len = filepath_0->byte_count;
    if (len >= PATH_MAX) len = PATH_MAX - 1;
    memcpy( c_filepath, (char*)filepath_0->utf8, len );
    c_filepath[len] = 0;
    // A way to get back to the starting folder when finished.
    original_dir_fd = open( ".", O_RDONLY );
    if (is_folder)
    {
      filename[0] = 0;
    }
    else
    {
      // fchdir only works with a path, not a path+filename (c_filepath).
      // Copy out the filename and null terminate the filepath to be just a path.
      int i = (int) strlen( c_filepath ) - 1;
      while (i >= 0 && c_filepath[i] != '/') --i;
      strcpy( filename, c_filepath+i+1 );
      if (i == -1) strcpy( c_filepath, "." );
      else         c_filepath[i] = 0;
    }
    new_dir_fd = open( c_filepath, O_RDONLY );
    do
    {
      if (original_dir_fd >= 0 && new_dir_fd >= 0)
      {
        int r = fchdir( new_dir_fd );
        if ( r != 0 ) break;
        char * r2 = getcwd( c_filepath, PATH_MAX );
        if ( r2 == 0 ) break;
        if ( !is_folder )
        {
          strcat( c_filepath, "/" );
          strcat( c_filepath, filename );
        }
        r = fchdir( original_dir_fd );
        if ( r != 0 ) break;
      }
      return_value_2 = RogueString_create_from_utf8( c_filepath, -1 );
    } while (false);
    if (original_dir_fd >= 0) close( original_dir_fd );
    if (new_dir_fd >= 0) close( new_dir_fd );
  }
#endif

  if (((void*)return_value_2) == ((void*)NULL))
  {
    ROGUE_THROW(((RogueClassIOError*)((call_ROGUEM3( 10, ROGUE_ARG(((RogueClassException*)ROGUE_CREATE_REF(RogueClassIOError*,ROGUE_CREATE_OBJECT(IOError)))), Rogue_literal_strings[77] )))));
  }
  return (RogueString*)(return_value_2);
}

RogueLogical RogueFile__exists__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return false;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return false;
  fclose( fp );
  return true;

}

RogueString* RogueFile__filename__String( RogueString* filepath_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  if (!(i_1.exists))
  {
    return (RogueString*)(filepath_0);
  }
  return (RogueString*)(((RogueString__from__Int32( filepath_0, ROGUE_ARG((i_1.value + 1)) ))));
}

RogueLogical RogueFile__is_folder__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return false;
#if defined(_WIN32)
    char filepath_copy[PATH_MAX];
    strcpy( filepath_copy, (char*)filepath_0->utf8 );
    int path_len = filepath_0->byte_count;
    int i = strlen(filepath_copy)-1;
    while (i > 0 && (filepath_copy[i] == '/' || filepath_copy[i] == '\\')) filepath_copy[i--] = 0;
    // Windows allows dir\* to count as a directory; guard against.
    for (i=0; filepath_copy[i]; ++i)
    {
      if (filepath_copy[i] == '*' || filepath_copy[i] == '?') return 0;
    }
    WIN32_FIND_DATA entry;
    HANDLE dir = FindFirstFile( filepath_copy, &entry );
    if (dir != INVALID_HANDLE_VALUE)
    {
      if (entry.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
      {
        FindClose( dir );
        return 1;
      }
    }
    FindClose( dir );
    return 0;
#else
    DIR* dir = opendir( (char*)filepath_0->utf8 );
    if ( !dir ) return 0;
    closedir( dir );
    return 1;
#endif

}

RogueString* RogueFile__load_as_string__String( RogueString* filepath_0 )
{
  RogueInt32 count_1 = ((RogueFile__size__String( filepath_0 )));
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), count_1 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassFileReader*,infile_3,((RogueFile__reader__String( filepath_0 ))));
  {
    RogueInt32 _auto_767_4 = (1);
    RogueInt32 _auto_768_5 = (count_1);
    for (;_auto_767_4 <= _auto_768_5;++_auto_767_4)
    {
      RogueByte b_6 = (((RogueFileReader__read( infile_3 ))));
      RogueByte_List__add__Byte( ROGUE_ARG(buffer_2->utf8), b_6 );
      if ((((RogueInt32)(b_6)) & 192) != 128)
      {
        ++buffer_2->count;
      }
    }
  }
  RogueFileReader__close( infile_3 );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_2 ))));
}

RogueString* RogueFile__path__String( RogueString* filepath_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32_Int32( filepath_0, 0, ROGUE_ARG((i_1.value - 1)) ))));
}

RogueClassFileReader* RogueFile__reader__String( RogueString* filepath_0 )
{
  return (RogueClassFileReader*)(((RogueFileReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileReader*,ROGUE_CREATE_OBJECT(FileReader))), filepath_0 ))));
}

RogueLogical RogueFile__save__String_String( RogueString* filepath_0, RogueString* data_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassFileWriter*,outfile_2,((RogueFile__writer__String( filepath_0 ))));
  {
    RogueInt32 i_3 = (0);
    RogueInt32 _auto_769_4 = (data_1->byte_count);
    for (;i_3 < _auto_769_4;++i_3)
    {
      RogueFileWriter__write__Byte( outfile_2, ROGUE_ARG(data_1->utf8[ i_3 ]) );
    }
  }
  RogueFileWriter__close( outfile_2 );
  return (RogueLogical)(!(outfile_2->error));
}

RogueInt32 RogueFile__size__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return 0;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return 0;
  fseek( fp, 0, SEEK_END );
  RogueInt32 size = (RogueInt32) ftell( fp );
  fclose( fp );
  return size;

}

RogueClassFileWriter* RogueFile__writer__String( RogueString* filepath_0 )
{
  return (RogueClassFileWriter*)(((RogueFileWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileWriter*,ROGUE_CREATE_OBJECT(FileWriter))), filepath_0 ))));
}

void RoguePreprocessor__init_class()
{
  RoguePreprocessor_definitions = ((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )));
}

RogueClassPropertyValue* RoguePropertyValue__create__Int32( RogueInt32 value_0 )
{
  return (RogueClassPropertyValue*)(((RogueClassPropertyValue*)(((RogueInt32Property__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassInt32Property*,ROGUE_CREATE_OBJECT(Int32Property))), value_0 ))))));
}

RogueClassPropertyValue* RoguePropertyValue__create__String( RogueString* value_0 )
{
  return (RogueClassPropertyValue*)(((RogueClassPropertyValue*)(((RogueStringProperty__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringProperty*,ROGUE_CREATE_OBJECT(StringProperty))), value_0 ))))));
}

RogueCmdNamedArg_List* RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* list_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1 )
{
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( ROGUE_ARG(list_0->data), compare_fn_1, 0, ROGUE_ARG((list_0->count - 1)) );
  return (RogueCmdNamedArg_List*)(list_0);
}

void RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( RogueArray* data_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1, RogueInt32 i1_2, RogueInt32 i2_3 )
{
  if (i1_2 >= i2_3)
  {
    return;
  }
  else if ((i1_2 + 1) == i2_3)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_4,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_5,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
    if (!((call_ROGUEM1168( 10, compare_fn_1, a_4, b_5 ))))
    {
      data_0->objects[i2_3] = a_4;
      data_0->objects[i1_2] = b_5;
    }
    return;
  }
  else if ((i1_2 + 2) == i2_3)
  {
    RogueInt32 ib_6 = ((i1_2 + 1));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_7,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_8,(((RogueClassCmdNamedArg*)(data_0->objects[ib_6]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,c_9,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
    if ((call_ROGUEM1168( 10, compare_fn_1, a_7, b_8 )))
    {
      if ((call_ROGUEM1168( 10, compare_fn_1, b_8, c_9 )))
      {
        return;
      }
      else if ((call_ROGUEM1168( 10, compare_fn_1, a_7, c_9 )))
      {
        data_0->objects[ib_6] = c_9;
        data_0->objects[i2_3] = b_8;
        return;
      }
      else
      {
        data_0->objects[i1_2] = c_9;
        data_0->objects[ib_6] = a_7;
        data_0->objects[i2_3] = b_8;
        return;
      }
    }
    else if ((call_ROGUEM1168( 10, compare_fn_1, a_7, c_9 )))
    {
      data_0->objects[i1_2] = b_8;
      data_0->objects[ib_6] = a_7;
      return;
    }
    else if ((call_ROGUEM1168( 10, compare_fn_1, b_8, c_9 )))
    {
      data_0->objects[i1_2] = b_8;
      data_0->objects[ib_6] = c_9;
      data_0->objects[i2_3] = a_7;
      return;
    }
    else
    {
      data_0->objects[i1_2] = c_9;
      data_0->objects[ib_6] = b_8;
      data_0->objects[i2_3] = a_7;
      return;
    }
  }
  RogueInt32 pivot_index_10 = ((RogueMath__shift_right__Int32_Int32( ROGUE_ARG((i1_2 + i2_3)), 1 )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,pivot_11,(((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,first_12,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
  if ((call_ROGUEM1168( 10, compare_fn_1, pivot_11, first_12 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)first_12);
    pivot_index_10 = ((RogueInt32)i1_2);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,last_13,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
  if ((call_ROGUEM1168( 10, compare_fn_1, last_13, pivot_11 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)last_13);
    pivot_index_10 = ((RogueInt32)i2_3);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,temp_14,(((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]))));
  data_0->objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->objects[i2_3]));
  data_0->objects[i2_3] = temp_14;
  pivot_index_10 = ((RogueInt32)i1_2);
  {
    RogueInt32 i_15 = (i1_2);
    RogueInt32 _auto_2579_16 = ((i2_3 - 1));
    for (;i_15 <= _auto_2579_16;++i_15)
    {
      if ((call_ROGUEM1168( 10, compare_fn_1, ROGUE_ARG(((RogueClassCmdNamedArg*)(data_0->objects[i_15]))), pivot_11 )))
      {
        temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->objects[i_15])));
        data_0->objects[i_15] = ((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]));
        data_0->objects[pivot_index_10] = temp_14;
        ++pivot_index_10;
      }
    }
  }
  temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10])));
  data_0->objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->objects[i2_3]));
  data_0->objects[i2_3] = temp_14;
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, i1_2, ROGUE_ARG((pivot_index_10 - 1)) );
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, ROGUE_ARG((pivot_index_10 + 1)), i2_3 );
}

void RogueStringProperty__init_class()
{
  RogueStringProperty_empty_string = ((RogueStringProperty__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringProperty*,ROGUE_CREATE_OBJECT(StringProperty))), Rogue_literal_strings[0] )));
}

RogueOptionalInt32 RogueOptionalInt32__create()
{
  RogueInt32 default_value_0 = 0;
  return (RogueOptionalInt32)(RogueOptionalInt32( default_value_0, false ));
}

RogueOptionalCharacter RogueOptionalCharacter__create()
{
  RogueCharacter default_value_0 = 0;
  return (RogueOptionalCharacter)(RogueOptionalCharacter( default_value_0, false ));
}


RogueClassException* RogueException__init_object( RogueClassException* THIS )
{
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassException*)(THIS);
}

RogueString* RogueException__to_String( RogueClassException* THIS )
{
  return (RogueString*)(THIS->message);
}

RogueString* RogueException__type_name( RogueClassException* THIS )
{
  return (RogueString*)(Rogue_literal_strings[70]);
}

RogueClassException* RogueException__init__String( RogueClassException* THIS, RogueString* _auto_13_0 )
{
  THIS->message = _auto_13_0;
  return (RogueClassException*)(THIS);
}

void RogueObject__init_object( RogueObject* THIS )
{
}

RogueObject* RogueObject__init( RogueObject* THIS )
{
  return (RogueObject*)(THIS);
}

RogueString* RogueObject__to_String( RogueObject* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM5( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[93] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt64__to_hex_string__Int32( ROGUE_ARG(((RogueObject__object_id( ROGUE_ARG(THIS) )))), 16 )))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueInt64 RogueObject__object_id( RogueObject* THIS )
{
  RogueInt64 addr_0 = 0;
  addr_0 = (RogueInt64)(intptr_t)THIS;

  return (RogueInt64)(addr_0);
}

RogueLogical RogueObject__operatorEQUALSEQUALS__Object( RogueObject* THIS, RogueObject* other_0 )
{
  return (RogueLogical)(((void*)THIS) == ((void*)other_0));
}

RogueString* RogueObject__type_name( RogueObject* THIS )
{
  return (RogueString*)(Rogue_literal_strings[63]);
}

RogueString* RogueString__after__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueString* RogueString__after_any__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_any__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__before__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((index_0 - 1)) ))));
}

RogueString* RogueString__before_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueLogical RogueString__begins_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)((!!(THIS->character_count) && RogueString_character_at(THIS,0) == ch_0));
}

RogueLogical RogueString__begins_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueInt32 other_count_1 = (other_0->character_count);
  return (RogueLogical)((THIS->character_count >= other_count_1 && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, 0 )))));
}

RogueLogical RogueString__contains__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))).exists);
}

RogueLogical RogueString__contains__String( RogueString* THIS, RogueString* substring_0 )
{
  return (RogueLogical)(((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), substring_0, ROGUE_ARG((RogueOptionalInt32__create())) ))).exists);
}

RogueLogical RogueString__contains_at__String_Int32( RogueString* THIS, RogueString* substring_0, RogueInt32 at_index_1 )
{
  if (at_index_1 < 0)
  {
    return (RogueLogical)(false);
  }
  RogueInt32 offset = RogueString_set_cursor( THIS, at_index_1 );
  RogueInt32 other_count = substring_0->byte_count;
  if (offset + other_count > THIS->byte_count) return false;
  return (0 == memcmp(THIS->utf8 + offset, substring_0->utf8, other_count));

}

RogueLogical RogueString__ends_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)((THIS->character_count > 0 && RogueString_character_at(THIS,(THIS->character_count - 1)) == ch_0));
}

RogueLogical RogueString__ends_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueInt32 other_count_1 = (other_0->character_count);
  return (RogueLogical)(((THIS->character_count >= other_count_1 && other_count_1 > 0) && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, ROGUE_ARG((THIS->character_count - other_count_1)) )))));
}

RogueString* RogueString__from__Int32( RogueString* THIS, RogueInt32 i1_0 )
{
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, ROGUE_ARG((THIS->character_count - 1)) ))));
}

RogueString* RogueString__from__Int32_Int32( RogueString* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  else if (i2_1 >= THIS->character_count)
  {
    i2_1 = ((RogueInt32)(THIS->character_count - 1));
  }
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (i1_0 == i2_1)
  {
    return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(RogueString_character_at(THIS,i1_0)) ))));
  }
  RogueInt32 byte_i1 = RogueString_set_cursor( THIS, i1_0 );
  RogueInt32 byte_limit = RogueString_set_cursor( THIS, i2_1+1 );
  int new_count = (byte_limit - byte_i1);
  RogueString* result = RogueString_create_with_byte_count( new_count );
  memcpy( result->utf8, THIS->utf8+byte_i1, new_count );
  return RogueString_validate( result );

}

RogueString* RogueString__from_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG(i_1.value) ))));
}

RogueString* RogueString__from_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG(i_1.value) ))));
}

RogueCharacter RogueString__last( RogueString* THIS )
{
  return (RogueCharacter)(RogueString_character_at(THIS,(THIS->character_count - 1)));
}

RogueString* RogueString__left_justified__Int32( RogueString* THIS, RogueInt32 spaces_0 )
{
  if (THIS->character_count >= spaces_0)
  {
    return (RogueString*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_1,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), spaces_0 )))));
  RogueStringBuilder__print__String( buffer_1, ROGUE_ARG(THIS) );
  {
    RogueInt32 _auto_0_2 = (THIS->character_count);
    RogueInt32 _auto_1_3 = (spaces_0);
    for (;_auto_0_2 <= _auto_1_3;++_auto_0_2)
    {
      RogueStringBuilder__print__Character_Logical( buffer_1, (RogueCharacter)' ', true );
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_1 ))));
}

RogueString* RogueString__leftmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  if (n_0 >= 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((n_0 - 1)) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG(((THIS->character_count + n_0) - 1)) ))));
  }
}

RogueOptionalInt32 RogueString__locate__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueInt32 i_2 = (0);
  RogueInt32 limit_3 = (THIS->character_count);
  if (optional_i1_1.exists)
  {
    i_2 = ((RogueInt32)optional_i1_1.value);
  }
  while (i_2 < limit_3)
  {
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    ++i_2;
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueInt32 other_count_2 = (other_0->character_count);
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), optional_i1_1 ))));
  }
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  RogueInt32 i1_4 = 0;
  if (optional_i1_1.exists)
  {
    i1_4 = ((RogueInt32)(optional_i1_1.value - 1));
    if (i1_4 < -1)
    {
      i1_4 = ((RogueInt32)-1);
    }
  }
  else
  {
    i1_4 = ((RogueInt32)-1);
  }
  while (++i1_4 < this_limit_3)
  {
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i1_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i1_4, true ));
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 starting_index_1 )
{
  RogueInt32 i_2 = ((THIS->character_count - 1));
  if (starting_index_1.exists)
  {
    i_2 = ((RogueInt32)starting_index_1.value);
  }
  while (i_2 >= 0)
  {
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    --i_2;
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 starting_index_1 )
{
  RogueInt32 other_count_2 = (other_0->character_count);
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), starting_index_1 ))));
  }
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  RogueInt32 i_4 = 0;
  if (starting_index_1.exists)
  {
    i_4 = ((RogueInt32)(starting_index_1.value + 1));
    if (i_4 > this_limit_3)
    {
      i_4 = ((RogueInt32)this_limit_3);
    }
  }
  else
  {
    i_4 = ((RogueInt32)this_limit_3);
  }
  while (--i_4 >= 0)
  {
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueString* RogueString__operatorPLUS__Character( RogueString* THIS, RogueCharacter value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0, true )))) ))));
}

RogueString* RogueString__operatorPLUS__Int32( RogueString* THIS, RogueInt32 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueLogical RogueString__operatorEQUALSEQUALS__String( RogueString* THIS, RogueString* value_0 )
{
  if ((THIS->hash_code != value_0->hash_code || THIS->character_count != value_0->character_count))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)((0==memcmp(THIS->utf8,value_0->utf8,THIS->byte_count)));
}

RogueInt32 RogueString__operatorLTGT__String( RogueString* THIS, RogueString* other_0 )
{
  if (THIS == other_0) return 0;
  RogueInt32 other_count = other_0->byte_count;
  RogueInt32 limit = THIS->byte_count;
  int result;
  if (limit == other_count)
  {
    // Strings are same length
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0) return 0;
  }
  else
  {
    // Strings differ in length.  Compare the part that matches first.
    if (limit > other_count) limit = other_count;
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0)
    {
      // Equal so far - the shorter string comes before the longer one.
      if (limit == other_count) return 1;
      return -1;
    }
  }
  if (result < 0) return -1;
  else            return 1;

}

RogueString* RogueString__operatorPLUS__Logical( RogueString* THIS, RogueLogical value_0 )
{
  if (value_0)
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[203] ))));
  }
  else
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[192] ))));
  }
}

RogueString* RogueString__operatorPLUS__Int64( RogueString* THIS, RogueInt64 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__Object( RogueString* THIS, RogueObject* value_0 )
{
  if (!!(value_0))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM5( 2, value_0 ))) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

RogueString* RogueString__operatorPLUS__Real64( RogueString* THIS, RogueReal64 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__String( RogueString* THIS, RogueString* value_0 )
{
  if (((void*)value_0) == ((void*)NULL))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
  if (THIS->character_count == 0)
  {
    return (RogueString*)(value_0);
  }
  if (value_0->character_count == 0)
  {
    return (RogueString*)(THIS);
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__pluralized__Int32( RogueString* THIS, RogueInt32 quantity_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,st_1,(((RogueString__replacing__String_String( ROGUE_ARG(THIS), Rogue_literal_strings[370], ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], quantity_0 )))) )))));
  if (((RogueString__contains__Character( st_1, (RogueCharacter)'/' ))))
  {
    if (quantity_0 == 1)
    {
      return (RogueString*)(((RogueString__before_first__Character( st_1, (RogueCharacter)'/' ))));
    }
    else
    {
      return (RogueString*)(((RogueString__after_last__Character( st_1, (RogueCharacter)'/' ))));
    }
  }
  else
  {
    RogueOptionalInt32 alt1_2 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)'(', ROGUE_ARG((RogueOptionalInt32__create())) ))));
    if (alt1_2.exists)
    {
      RogueOptionalInt32 alt2_3 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)')', ROGUE_ARG(RogueOptionalInt32( (alt1_2.value + 1), true )) ))));
      if (!(alt2_3.exists))
      {
        return (RogueString*)(THIS);
      }
      if (quantity_0 == 1)
      {
        return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))), ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) ))));
      }
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( st_1, ROGUE_ARG((alt1_2.value + 1)), ROGUE_ARG((alt2_3.value - 1)) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) )))) )))) ))));
    }
    else
    {
      if (quantity_0 == 1)
      {
        return (RogueString*)(st_1);
      }
      RogueInt32 index_4 = (0);
      RogueInt32 i_5 = (st_1->character_count);
      while (i_5 > 0)
      {
        --i_5;
        if (((RogueCharacter__is_letter( ROGUE_ARG(RogueString_character_at(st_1,i_5)) ))))
        {
          index_4 = ((RogueInt32)i_5);
          goto _auto_41;
        }
      }
      _auto_41:;
      if (RogueString_character_at(st_1,index_4) == (RogueCharacter)'s')
      {
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[371] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
      else
      {
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[372] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
    }
  }
}

RogueClassStringReader* RogueString__reader( RogueString* THIS )
{
  return (RogueClassStringReader*)(((RogueStringReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringReader*,ROGUE_CREATE_OBJECT(StringReader))), ROGUE_ARG(THIS) ))));
}

RogueString* RogueString__replacing__Character_Character( RogueString* THIS, RogueCharacter look_for_0, RogueCharacter replace_with_1 )
{
  if (!(((RogueString__contains__Character( ROGUE_ARG(THIS), look_for_0 )))))
  {
    return (RogueString*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG(THIS->character_count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_48_3,(THIS));
    RogueInt32 _auto_49_4 = (0);
    for (;_auto_49_4 < _auto_48_3->character_count;++_auto_49_4)
    {
      RogueCharacter ch_5 = (RogueString_character_at(_auto_48_3,_auto_49_4));
      if (ch_5 == look_for_0)
      {
        RogueStringBuilder__print__Character_Logical( result_2, replace_with_1, true );
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( result_2, ch_5, true );
      }
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( result_2 ))));
}

RogueString* RogueString__replacing__String_String( RogueString* THIS, RogueString* look_for_0, RogueString* replace_with_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,st_2,(THIS));
  RogueOptionalInt32 i_3 = (((RogueString__locate__String_OptionalInt32( st_2, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_3.exists))
  {
    return (RogueString*)(st_2);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG((THIS->character_count * 2)) )))));
  while (i_3.exists)
  {
    RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueString__before__Int32( st_2, ROGUE_ARG(i_3.value) )))) );
    RogueStringBuilder__print__String( buffer_4, replace_with_1 );
    st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG((i_3.value + look_for_0->character_count)) ))));
    i_3 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( st_2, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueStringBuilder__print__String( buffer_4, st_2 );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_4 ))));
}

RogueString* RogueString__rightmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  RogueInt32 this_count_1 = (THIS->character_count);
  if (n_0 < 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((-(n_0))), ROGUE_ARG((this_count_1 - 1)) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((this_count_1 - n_0)), ROGUE_ARG((this_count_1 - 1)) ))));
  }
}

RogueString_List* RogueString__split__Character( RogueString* THIS, RogueCharacter separator_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_1,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  RogueInt32 i1_2 = (0);
  RogueOptionalInt32 i2_3 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  while (i2_3.exists)
  {
    RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_2, ROGUE_ARG((i2_3.value - 1)) )))) );
    i1_2 = ((RogueInt32)(i2_3.value + 1));
    i2_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  }
  RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32( ROGUE_ARG(THIS), i1_2 )))) );
  return (RogueString_List*)(result_1);
}

RogueString* RogueString__to_lowercase( RogueString* THIS )
{
  RogueLogical has_uc_0 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_69_2,(THIS));
    RogueInt32 _auto_70_3 = (0);
    for (;_auto_70_3 < _auto_69_2->character_count;++_auto_70_3)
    {
      RogueCharacter ch_4 = (RogueString_character_at(_auto_69_2,_auto_70_3));
      if ((ch_4 >= (RogueCharacter)'A' && ch_4 <= (RogueCharacter)'Z'))
      {
        has_uc_0 = ((RogueLogical)true);
        goto _auto_71;
      }
    }
  }
  _auto_71:;
  if (!(has_uc_0))
  {
    return (RogueString*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_1,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG(THIS->character_count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_72_5,(THIS));
    RogueInt32 _auto_73_6 = (0);
    for (;_auto_73_6 < _auto_72_5->character_count;++_auto_73_6)
    {
      RogueCharacter ch_7 = (RogueString_character_at(_auto_72_5,_auto_73_6));
      if ((ch_7 >= (RogueCharacter)'A' && ch_7 <= (RogueCharacter)'Z'))
      {
        RogueStringBuilder__print__Character_Logical( result_1, ROGUE_ARG(((ch_7 - (RogueCharacter)'A') + (RogueCharacter)'a')), true );
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( result_1, ch_7, true );
      }
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( result_1 ))));
}

RogueString* RogueString__trimmed( RogueString* THIS )
{
  RogueInt32 i1_0 = (0);
  RogueInt32 i2_1 = ((THIS->character_count - 1));
  while (i1_0 <= i2_1)
  {
    if (RogueString_character_at(THIS,i1_0) <= (RogueCharacter)' ')
    {
      ++i1_0;
    }
    else if (RogueString_character_at(THIS,i2_1) <= (RogueCharacter)' ')
    {
      --i2_1;
    }
    else
    {
      goto _auto_79;
    }
  }
  _auto_79:;
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if ((i1_0 == 0 && i2_1 == (THIS->character_count - 1)))
  {
    return (RogueString*)(THIS);
  }
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, i2_1 ))));
}

RogueString_List* RogueString__word_wrapped__Int32_String( RogueString* THIS, RogueInt32 width_0, RogueString* allow_break_after_1 )
{
  return (RogueString_List*)(((RogueString__split__Character( ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueString__word_wrapped__Int32_StringBuilder_String( ROGUE_ARG(THIS), width_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), allow_break_after_1 )))) )))), (RogueCharacter)10 ))));
}

RogueStringBuilder* RogueString__word_wrapped__Int32_StringBuilder_String( RogueString* THIS, RogueInt32 width_0, RogueStringBuilder* buffer_1, RogueString* allow_break_after_2 )
{
  RogueInt32 i1_3 = 0;
  RogueInt32 i2_4 = 0;
  RogueInt32 len_5 = (THIS->character_count);
  if (len_5 == 0)
  {
    return (RogueStringBuilder*)(buffer_1);
  }
  RogueLogical needs_newline_6 = (false);
  while (i2_4 < len_5)
  {
    while ((((i2_4 - i1_3) < width_0 && i2_4 < len_5) && RogueString_character_at(THIS,i2_4) != (RogueCharacter)10))
    {
      ++i2_4;
    }
    if ((i2_4 - i1_3) == width_0)
    {
      if (i2_4 >= len_5)
      {
        i2_4 = ((RogueInt32)len_5);
      }
      else if (RogueString_character_at(THIS,i2_4) != (RogueCharacter)10)
      {
        while ((RogueString_character_at(THIS,i2_4) != (RogueCharacter)' ' && i2_4 > i1_3))
        {
          --i2_4;
        }
        if (i2_4 == i1_3)
        {
          i2_4 = ((RogueInt32)(i1_3 + width_0));
          if (!!(allow_break_after_2))
          {
            while (((i2_4 > i1_3 && !(((RogueString__contains__Character( allow_break_after_2, ROGUE_ARG(RogueString_character_at(THIS,(i2_4 - 1))) ))))) && i2_4 > i1_3))
            {
              --i2_4;
            }
            if (i2_4 == i1_3)
            {
              i2_4 = ((RogueInt32)(i1_3 + width_0));
            }
          }
        }
      }
    }
    if (needs_newline_6)
    {
      RogueStringBuilder__println( buffer_1 );
    }
    {
      RogueInt32 i_7 = (i1_3);
      RogueInt32 _auto_8_8 = ((i2_4 - 1));
      for (;i_7 <= _auto_8_8;++i_7)
      {
        RogueStringBuilder__print__Character_Logical( buffer_1, ROGUE_ARG(RogueString_character_at(THIS,i_7)), true );
      }
    }
    needs_newline_6 = ((RogueLogical)true);
    if (i2_4 == len_5)
    {
      return (RogueStringBuilder*)(buffer_1);
    }
    else
    {
      switch (RogueString_character_at(THIS,i2_4))
      {
        case (RogueCharacter)' ':
        {
          while ((i2_4 < len_5 && RogueString_character_at(THIS,i2_4) == (RogueCharacter)' '))
          {
            ++i2_4;
          }
          if ((i2_4 < len_5 && RogueString_character_at(THIS,i2_4) == (RogueCharacter)10))
          {
            ++i2_4;
          }
          break;
        }
        case (RogueCharacter)10:
        {
          ++i2_4;
          break;
        }
      }
      i1_3 = ((RogueInt32)i2_4);
    }
  }
  return (RogueStringBuilder*)(buffer_1);
}

RogueClassStackTrace* RogueStackTrace__init_object( RogueClassStackTrace* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassStackTrace*)(THIS);
}

RogueString* RogueStackTrace__to_String( RogueClassStackTrace* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueStackTrace__type_name( RogueClassStackTrace* THIS )
{
  return (RogueString*)(Rogue_literal_strings[762]);
}

RogueClassStackTrace* RogueStackTrace__init__Int32( RogueClassStackTrace* THIS, RogueInt32 omit_count_0 )
{
  ++omit_count_0;
  RogueDebugTrace* current = Rogue_call_stack;
  while (current && omit_count_0 > 0)
  {
    --omit_count_0;
    current = current->previous_trace;
  }
  if (current) THIS->count = current->count();

  THIS->entries = ((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )));
  while (current!=0)
  {
    RogueString_List__add__String( ROGUE_ARG(THIS->entries), ROGUE_ARG(RogueString_create_from_utf8( current->to_c_string() )) );
    current = current->previous_trace;

  }
  return (RogueClassStackTrace*)(THIS);
}

void RogueStackTrace__format( RogueClassStackTrace* THIS )
{
  if (THIS->is_formatted)
  {
    return;
  }
  THIS->is_formatted = true;
  RogueInt32 max_characters_0 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_499_2,(THIS->entries));
    RogueInt32 _auto_500_3 = (0);
    for (;_auto_500_3 < _auto_499_2->count;++_auto_500_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_4,(((RogueString*)(_auto_499_2->data->objects[_auto_500_3]))));
      RogueOptionalInt32 sp_1 = (((RogueString__locate__Character_OptionalInt32( entry_4, (RogueCharacter)' ', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      if (sp_1.exists)
      {
        max_characters_0 = ((RogueInt32)(RogueMath__max__Int32_Int32( max_characters_0, ROGUE_ARG(sp_1.value) )));
      }
    }
  }
  ++max_characters_0;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_501_5,(THIS->entries));
    RogueInt32 i_6 = (0);
    for (;i_6 < _auto_501_5->count;++i_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_7,(((RogueString*)(_auto_501_5->data->objects[i_6]))));
      if (((RogueString__contains__Character( entry_7, (RogueCharacter)' ' ))))
      {
        THIS->entries->data->objects[i_6] = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__left_justified__Int32( ROGUE_ARG(((RogueString__before_first__Character( entry_7, (RogueCharacter)' ' )))), max_characters_0 )))), ROGUE_ARG(((RogueString__from_first__Character( entry_7, (RogueCharacter)' ' )))) )));
      }
    }
  }
}

void RogueStackTrace__print( RogueClassStackTrace* THIS )
{
  RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassGlobal*)ROGUE_SINGLETON(Global))->global_output_buffer) );
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueStringBuilder* RogueStackTrace__print__StringBuilder( RogueClassStackTrace* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStackTrace__format( ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_502_1,(THIS->entries));
    RogueInt32 _auto_503_2 = (0);
    for (;_auto_503_2 < _auto_502_1->count;++_auto_503_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_3,(((RogueString*)(_auto_502_1->data->objects[_auto_503_2]))));
      RogueStringBuilder__println__String( buffer_0, entry_3 );
    }
  }
  return (RogueStringBuilder*)(buffer_0);
}

RogueString_List* RogueString_List__init_object( RogueString_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__init( RogueString_List* THIS )
{
  RogueString_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__to_String( RogueString_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_517_2,(THIS));
    RogueInt32 _auto_518_3 = (0);
    for (;_auto_518_3 < _auto_517_2->count;++_auto_518_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_4,(((RogueString*)(_auto_517_2->data->objects[_auto_518_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, value_4 );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueString_List__type_name( RogueString_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[833]);
}

RogueString_List* RogueString_List__init__Int32( RogueString_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueString*), true );
  }
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__add__String( RogueString_List* THIS, RogueString* value_0 )
{
  ((RogueString_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__add__String_List( RogueString_List* THIS, RogueString_List* other_0 )
{
  RogueString_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_523_1,(other_0));
    RogueInt32 _auto_524_2 = (0);
    for (;_auto_524_2 < _auto_523_1->count;++_auto_524_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_3,(((RogueString*)(_auto_523_1->data->objects[_auto_524_2]))));
      RogueString_List__add__String( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueString_List*)(THIS);
}

RogueInt32 RogueString_List__capacity( RogueString_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueString_List* RogueString_List__clear( RogueString_List* THIS )
{
  RogueString_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueString_List*)(THIS);
}

void RogueString_List__discard_from__Int32( RogueString_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueOptionalInt32 RogueString_List__locate__String( RogueString_List* THIS, RogueString* value_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_528_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_528_1->count;++i_2)
    {
      if (((RogueString__operatorEQUALSEQUALS__String( value_0, ROGUE_ARG(((RogueString*)(THIS->data->objects[i_2]))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueString_List* RogueString_List__reserve__Int32( RogueString_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueString*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueString_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueString*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__joined__String( RogueString_List* THIS, RogueString* separator_0 )
{
  RogueInt32 total_count_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_541_3,(THIS));
    RogueInt32 _auto_542_4 = (0);
    for (;_auto_542_4 < _auto_541_3->count;++_auto_542_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_5,(((RogueString*)(_auto_541_3->data->objects[_auto_542_4]))));
      total_count_1 += line_5->character_count;
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), total_count_1 )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_543_6,(THIS));
    RogueInt32 _auto_544_7 = (0);
    for (;_auto_544_7 < _auto_543_6->count;++_auto_544_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_8,(((RogueString*)(_auto_543_6->data->objects[_auto_544_7]))));
      if (!!(builder_2->count))
      {
        RogueStringBuilder__print__String( builder_2, separator_0 );
      }
      RogueStringBuilder__print__String( builder_2, line_8 );
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( builder_2 ))));
}

RogueClassGenericList* RogueGenericList__init_object( RogueClassGenericList* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassGenericList*)(THIS);
}

RogueString* RogueGenericList__type_name( RogueClassGenericList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[68]);
}

RogueString* RogueArray_String___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[883]);
}

RogueString* RogueNativeArray__type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[67]);
}

RogueInt32 RogueInt32__hash_code( RogueInt32 THIS )
{
  return (RogueInt32)(THIS);
}

RogueString* RogueInt32__to_String( RogueInt32 THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueCharacter RogueInt32__to_digit( RogueInt32 THIS )
{
  if ((THIS >= 0 && THIS <= 9))
  {
    return (RogueCharacter)((((RogueCharacter)(THIS)) + (RogueCharacter)'0'));
  }
  if ((THIS >= 10 && THIS <= 35))
  {
    return (RogueCharacter)((((RogueCharacter)((THIS - 10))) + (RogueCharacter)'A'));
  }
  return (RogueCharacter)((RogueCharacter)'0');
}

RogueStringBuilder* RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( RogueInt64 THIS, RogueInt32 base_0, RogueInt32 digits_1, RogueStringBuilder* buffer_2 )
{
  RogueInt32 bits_3 = (0);
  RogueInt32 temp_4 = (base_0);
  while (temp_4 > 1)
  {
    ++bits_3;
    temp_4 = ((RogueInt32)(temp_4 >> 1));
  }
  if (digits_1 > 1)
  {
    RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG((THIS >> ((RogueInt64)(bits_3)))), base_0, ROGUE_ARG((digits_1 - 1)), buffer_2 );
  }
  RogueStringBuilder__print__Character_Logical( buffer_2, ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG(((RogueInt32)((THIS & ((RogueInt64)((base_0 - 1))))))) )))), true );
  return (RogueStringBuilder*)(buffer_2);
}

RogueString* RogueInt64__to_hex_string__Int32( RogueInt64 THIS, RogueInt32 digits_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG(THIS), 16, digits_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueTypeInfo* RogueTypeInfo__init_object( RogueTypeInfo* THIS )
{
  THIS->global_properties = ((RoguePropertyInfo_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePropertyInfo_List*,ROGUE_CREATE_OBJECT(PropertyInfo_List))) )));
  THIS->properties = ((RoguePropertyInfo_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePropertyInfo_List*,ROGUE_CREATE_OBJECT(PropertyInfo_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueTypeInfo*)(THIS);
}

RogueString* RogueTypeInfo__to_String( RogueTypeInfo* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueTypeInfo__type_name( RogueTypeInfo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[66]);
}

RogueTypeInfo* RogueTypeInfo__init__Int32_String( RogueTypeInfo* THIS, RogueInt32 _auto_20_0, RogueString* _auto_21_1 )
{
  THIS->name = _auto_21_1;
  THIS->index = _auto_20_0;
  return (RogueTypeInfo*)(THIS);
}

void RogueTypeInfo__add_global_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 global_property_name_index_0, RogueInt32 global_property_type_index_1 )
{
  RoguePropertyInfo_List__add__PropertyInfo( ROGUE_ARG(THIS->global_properties), ROGUE_ARG(((RoguePropertyInfo__init__Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPropertyInfo*,ROGUE_CREATE_OBJECT(PropertyInfo))), global_property_name_index_0, global_property_type_index_1 )))) );
}

void RogueTypeInfo__add_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 property_name_index_0, RogueInt32 property_type_index_1 )
{
  RoguePropertyInfo_List__add__PropertyInfo( ROGUE_ARG(THIS->properties), ROGUE_ARG(((RoguePropertyInfo__init__Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPropertyInfo*,ROGUE_CREATE_OBJECT(PropertyInfo))), property_name_index_0, property_type_index_1 )))) );
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init_object( RoguePropertyInfo_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RoguePropertyInfo_List*)(THIS);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init( RoguePropertyInfo_List* THIS )
{
  RoguePropertyInfo_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RoguePropertyInfo_List*)(THIS);
}

RogueString* RoguePropertyInfo_List__to_String( RoguePropertyInfo_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RoguePropertyInfo_List*,_auto_545_2,(THIS));
    RogueInt32 _auto_546_3 = (0);
    for (;_auto_546_3 < _auto_545_2->count;++_auto_546_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPropertyInfo*,value_4,(((RogueClassPropertyInfo*)(_auto_545_2->data->objects[_auto_546_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RoguePropertyInfo__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RoguePropertyInfo_List__type_name( RoguePropertyInfo_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[834]);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init__Int32( RoguePropertyInfo_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassPropertyInfo*), true );
  }
  return (RoguePropertyInfo_List*)(THIS);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__add__PropertyInfo( RoguePropertyInfo_List* THIS, RogueClassPropertyInfo* value_0 )
{
  ((RoguePropertyInfo_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RoguePropertyInfo_List*)(THIS);
}

RogueInt32 RoguePropertyInfo_List__capacity( RoguePropertyInfo_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__reserve__Int32( RoguePropertyInfo_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassPropertyInfo*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RoguePropertyInfo_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassPropertyInfo*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RoguePropertyInfo_List*)(THIS);
}

RogueClassPropertyInfo* RoguePropertyInfo__init_object( RogueClassPropertyInfo* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPropertyInfo*)(THIS);
}

RogueString* RoguePropertyInfo__to_String( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RoguePropertyInfo__property_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RoguePropertyInfo__property_type_info( ROGUE_ARG(THIS) )))->name) )))) )))) ))));
}

RogueString* RoguePropertyInfo__type_name( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[763]);
}

RogueClassPropertyInfo* RoguePropertyInfo__init__Int32_Int32( RogueClassPropertyInfo* THIS, RogueInt32 _auto_14_0, RogueInt32 _auto_15_1 )
{
  THIS->property_type_index = _auto_15_1;
  THIS->property_name_index = _auto_14_0;
  return (RogueClassPropertyInfo*)(THIS);
}

RogueString* RoguePropertyInfo__property_name( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)((RogueRuntime__literal_string__Int32( ROGUE_ARG(THIS->property_name_index) )));
}

RogueTypeInfo* RoguePropertyInfo__property_type_info( RogueClassPropertyInfo* THIS )
{
  return (RogueTypeInfo*)((RogueRuntime__type_info__Int32( ROGUE_ARG(THIS->property_type_index) )));
}

RogueString* RogueArray_PropertyInfo___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[884]);
}

RogueStringBuilder* RogueStringBuilder__init_object( RogueStringBuilder* THIS )
{
  THIS->at_newline = true;
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__init( RogueStringBuilder* THIS )
{
  RogueStringBuilder__init__Int32( ROGUE_ARG(THIS), 40 );
  return (RogueStringBuilder*)(THIS);
}

RogueString* RogueStringBuilder__to_String( RogueStringBuilder* THIS )
{
  return (RogueString*)(RogueString_create_from_utf8( (char*)THIS->utf8->data->bytes, THIS->utf8->count ));
}

RogueString* RogueStringBuilder__type_name( RogueStringBuilder* THIS )
{
  return (RogueString*)(Rogue_literal_strings[65]);
}

RogueStringBuilder* RogueStringBuilder__init__Int32( RogueStringBuilder* THIS, RogueInt32 initial_capacity_0 )
{
  THIS->utf8 = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), initial_capacity_0 )));
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__clear( RogueStringBuilder* THIS )
{
  RogueByte_List__clear( ROGUE_ARG(THIS->utf8) );
  THIS->count = 0;
  THIS->at_newline = true;
  THIS->cursor_index = 0;
  THIS->cursor_offset = 0;
  return (RogueStringBuilder*)(THIS);
}

RogueCharacter RogueStringBuilder__get__Int32( RogueStringBuilder* THIS, RogueInt32 index_0 )
{
  if (index_0 == 0)
  {
    THIS->cursor_offset = 0;
    THIS->cursor_index = 0;
  }
  else if (index_0 == (THIS->count - 1))
  {
    THIS->cursor_offset = THIS->utf8->count;
    THIS->cursor_index = THIS->count;
  }
  while (THIS->cursor_index < index_0)
  {
    ++THIS->cursor_offset;
    while ((((RogueInt32)(THIS->utf8->data->bytes[THIS->cursor_offset])) & 192) == 128)
    {
      ++THIS->cursor_offset;
    }
    ++THIS->cursor_index;
  }
  while (THIS->cursor_index > index_0)
  {
    --THIS->cursor_offset;
    while ((((RogueInt32)(THIS->utf8->data->bytes[THIS->cursor_offset])) & 192) == 128)
    {
      --THIS->cursor_offset;
    }
    --THIS->cursor_index;
  }
  RogueByte ch_1 = (THIS->utf8->data->bytes[THIS->cursor_offset]);
  if (!!((((RogueInt32)(ch_1)) & 128)))
  {
    if (!!((((RogueInt32)(ch_1)) & 32)))
    {
      if (!!((((RogueInt32)(ch_1)) & 16)))
      {
        return (RogueCharacter)(((RogueCharacter)((((((((RogueInt32)(ch_1)) & 7) << 18) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63) << 12)) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 2)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 3)])) & 63)))));
      }
      else
      {
        return (RogueCharacter)(((RogueCharacter)(((((((RogueInt32)(ch_1)) & 15) << 12) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 2)])) & 63)))));
      }
    }
    else
    {
      return (RogueCharacter)(((RogueCharacter)((((((RogueInt32)(ch_1)) & 31) << 6) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63)))));
    }
  }
  else
  {
    return (RogueCharacter)(((RogueCharacter)(ch_1)));
  }
}

RogueStringBuilder* RogueStringBuilder__insert_spaces__Int32_Int32( RogueStringBuilder* THIS, RogueInt32 index_0, RogueInt32 spaces_1 )
{
  if (((spaces_1 > 0 && index_0 >= 0) && index_0 < THIS->count))
  {
    RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( ROGUE_ARG(THIS->utf8), index_0, ROGUE_ARG((RogueOptionalInt32__create())), spaces_1, ROGUE_ARG(RogueOptionalByte( ((RogueByte)((RogueCharacter)' ')), true )) );
    THIS->count += 2;
  }
  return (RogueStringBuilder*)(THIS);
}

RogueLogical RogueStringBuilder__needs_indent( RogueStringBuilder* THIS )
{
  return (RogueLogical)((THIS->at_newline && THIS->indent > 0));
}

RogueStringBuilder* RogueStringBuilder__print__Character_Logical( RogueStringBuilder* THIS, RogueCharacter value_0, RogueLogical formatted_1 )
{
  if (formatted_1)
  {
    if (value_0 == (RogueCharacter)10)
    {
      THIS->at_newline = true;
    }
    else if (((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) ))))
    {
      RogueStringBuilder__print_indent( ROGUE_ARG(THIS) );
    }
  }
  ++THIS->count;
  if (value_0 <= (RogueCharacter__create__Int32( 127 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)(value_0))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 2047 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(192)) | (value_0 >> ((RogueCharacter)(6))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 65535 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(224)) | (value_0 >> ((RogueCharacter)(12))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 1114111 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(240)) | (value_0 >> ((RogueCharacter)(18))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(63))))))) );
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else
  {
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)'?'))) );
  }
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt64)(value_0))) ))));
}

RogueStringBuilder* RogueStringBuilder__print__Logical( RogueStringBuilder* THIS, RogueLogical value_0 )
{
  if (value_0)
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[203] ))));
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[192] ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Int64( RogueStringBuilder* THIS, RogueInt64 value_0 )
{
  if (value_0 == (((RogueInt64)(1)) << ((RogueInt64)(63))))
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[10] ))));
  }
  else if (value_0 < ((RogueInt64)(0)))
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((-(value_0))) ))));
  }
  else if (value_0 >= ((RogueInt64)(10)))
  {
    RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((value_0 / ((RogueInt64)(10)))) );
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + (RogueMath__mod__Int64_Int64( value_0, ROGUE_ARG(((RogueInt64)(10))) )))))), true ))));
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + value_0)))), true ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Object( RogueStringBuilder* THIS, RogueObject* value_0 )
{
  if (!!(value_0))
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM5( 2, value_0 ))) ))));
  }
  return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
}

RogueStringBuilder* RogueStringBuilder__print__Real64( RogueStringBuilder* THIS, RogueReal64 value_0 )
{
  if (value_0 == 0.0)
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[934] );
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_infinite( value_0 ))))
  {
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[750] );
    }
    else
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[194] );
    }
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[196] );
    return (RogueStringBuilder*)(THIS);
  }
  if (value_0 < 0.0)
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    value_0 = ((RogueReal64)(-(value_0)));
  }
  if (value_0 >= 1.0e15)
  {
    RogueInt32 pow10_1 = (0);
    while (value_0 >= 10.0)
    {
      value_0 /= 10.0;
      ++pow10_1;
    }
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_1 ))));
  }
  if (value_0 < 0.00001)
  {
    RogueInt32 pow10_2 = (0);
    while (value_0 < 0.1)
    {
      value_0 *= 10.0;
      --pow10_2;
    }
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_2 ))));
  }
  {
    RogueInt32 decimal_count_3 = (1);
    RogueInt32 _auto_22_4 = (18);
    for (;decimal_count_3 <= _auto_22_4;++decimal_count_3)
    {
      RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_count_3 );
      if (((RogueStringBuilder__scan_work_bytes( ROGUE_ARG(THIS) ))) == value_0)
      {
        goto _auto_510;
      }
    }
  }
  _auto_510:;
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  if (((RogueReal64__is_infinite( value_0 ))))
  {
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[750] );
    }
    else
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[194] );
    }
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[196] );
    return (RogueStringBuilder*)(THIS);
  }
  if (value_0 < 0.0)
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    value_0 = ((RogueReal64)(-(value_0)));
  }
  RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_places_1 );
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  if (!!(value_0))
  {
    if (!!(THIS->indent))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_511_3,(value_0));
        RogueInt32 _auto_512_4 = (0);
        for (;_auto_512_4 < _auto_511_3->character_count;++_auto_512_4)
        {
          RogueCharacter ch_5 = (RogueString_character_at(_auto_511_3,_auto_512_4));
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ch_5, true );
        }
      }
    }
    else
    {
      {
        RogueInt32 i_1 = (0);
        RogueInt32 _auto_23_2 = (value_0->byte_count);
        for (;i_1 < _auto_23_2;++i_1)
        {
          RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(value_0->utf8[ i_1 ]) );
        }
      }
      THIS->count += value_0->character_count;
      if ((!!(value_0->character_count) && ((RogueString__last( value_0 ))) == (RogueCharacter)10))
      {
        THIS->at_newline = true;
      }
    }
    return (RogueStringBuilder*)(THIS);
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

void RogueStringBuilder__print_indent( RogueStringBuilder* THIS )
{
  if ((!(((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) )))) || THIS->indent == 0))
  {
    return;
  }
  {
    RogueInt32 i_0 = (1);
    RogueInt32 _auto_24_1 = (THIS->indent);
    for (;i_0 <= _auto_24_1;++i_0)
    {
      RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)' '))) );
    }
  }
  THIS->count += THIS->indent;
  THIS->at_newline = false;
}

RogueStringBuilder* RogueStringBuilder__print_to_work_bytes__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  RogueByte_List__clear( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  RogueReal64 whole_2 = (floor((double)value_0));
  value_0 -= whole_2;
  while (whole_2 >= 10.0)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
    whole_2 /= 10.0;
  }
  RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
  RogueByte_List__reverse( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  if (decimal_places_1 != 0)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'.'))) );
    {
      RogueInt32 _auto_25_3 = (1);
      RogueInt32 _auto_26_4 = (decimal_places_1);
      for (;_auto_25_3 <= _auto_26_4;++_auto_25_3)
      {
        value_0 *= 10.0;
        RogueInt32 digit_5 = (((RogueInt32)(floor((double)value_0))));
        value_0 -= ((RogueReal64)(digit_5));
        RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(digit_5)))))) );
      }
    }
  }
  if (value_0 >= 0.5)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'5'))) );
    RogueStringBuilder__round_off_work_bytes( ROGUE_ARG(THIS) );
  }
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__print_work_bytes( RogueStringBuilder* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_513_0,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_514_1 = (0);
    for (;_auto_514_1 < _auto_513_0->count;++_auto_514_1)
    {
      RogueByte digit_2 = (_auto_513_0->data->bytes[_auto_514_1]);
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(digit_2))), true );
    }
  }
}

RogueStringBuilder* RogueStringBuilder__println( RogueStringBuilder* THIS )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__reserve__Int32( RogueStringBuilder* THIS, RogueInt32 additional_bytes_0 )
{
  RogueByte_List__reserve__Int32( ROGUE_ARG(THIS->utf8), additional_bytes_0 );
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__round_off_work_bytes( RogueStringBuilder* THIS )
{
  if (((RogueCharacter)(((RogueByte_List__remove_last( ROGUE_ARG(RogueStringBuilder_work_bytes) ))))) >= (RogueCharacter)'5')
  {
    RogueInt32 i_0 = ((RogueStringBuilder_work_bytes->count - 1));
    while (i_0 >= 0)
    {
      if (((RogueCharacter)(RogueStringBuilder_work_bytes->data->bytes[i_0])) != (RogueCharacter)'.')
      {
        RogueStringBuilder_work_bytes->data->bytes[i_0] = ((RogueByte)((((RogueInt32)(RogueStringBuilder_work_bytes->data->bytes[i_0])) + 1)));
        if (((RogueCharacter)(RogueStringBuilder_work_bytes->data->bytes[i_0])) == ((RogueCharacter)'9' + ((RogueCharacter)(1))))
        {
          RogueStringBuilder_work_bytes->data->bytes[i_0] = ((RogueByte)((RogueCharacter)'0'));
        }
        else
        {
          return;
        }
      }
      --i_0;
    }
    RogueByte_List__insert__Byte_Int32( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'1'))), 0 );
  }
}

RogueReal64 RogueStringBuilder__scan_work_bytes( RogueStringBuilder* THIS )
{
  RogueReal64 whole_0 = (0.0);
  RogueReal64 decimal_1 = (0.0);
  RogueInt32 decimal_count_2 = (0);
  RogueLogical scanning_whole_3 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_515_4,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_516_5 = (0);
    for (;_auto_516_5 < _auto_515_4->count;++_auto_516_5)
    {
      RogueByte digit_6 = (_auto_515_4->data->bytes[_auto_516_5]);
      if (scanning_whole_3)
      {
        if (((RogueCharacter)(digit_6)) == (RogueCharacter)'.')
        {
          scanning_whole_3 = ((RogueLogical)false);
        }
        else
        {
          whole_0 = ((RogueReal64)((whole_0 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        }
      }
      else
      {
        decimal_1 = ((RogueReal64)((decimal_1 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        ++decimal_count_2;
      }
    }
  }
  return (RogueReal64)((whole_0 + (decimal_1 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)(decimal_count_2)))))));
}

RogueByte_List* RogueByte_List__init_object( RogueByte_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__init( RogueByte_List* THIS )
{
  RogueByte_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueByte_List*)(THIS);
}

RogueString* RogueByte_List__to_String( RogueByte_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_578_2,(THIS));
    RogueInt32 _auto_579_3 = (0);
    for (;_auto_579_3 < _auto_578_2->count;++_auto_579_3)
    {
      RogueByte value_4 = (_auto_578_2->data->bytes[_auto_579_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueByte__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueByte_List__type_name( RogueByte_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[835]);
}

RogueByte_List* RogueByte_List__init__Int32( RogueByte_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueByte) );
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__add__Byte( RogueByte_List* THIS, RogueByte value_0 )
{
  ((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->bytes[THIS->count] = value_0;
  ++THIS->count;
  return (RogueByte_List*)(THIS);
}

RogueInt32 RogueByte_List__capacity( RogueByte_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueByte_List* RogueByte_List__clear( RogueByte_List* THIS )
{
  RogueByte_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__ensure_capacity__Int32( RogueByte_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueByte_List*)(((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueByte_List* RogueByte_List__expand_to_count__Int32( RogueByte_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueByte_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__expand_to_include__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  return (RogueByte_List*)(((RogueByte_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

void RogueByte_List__discard_from__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueByte zero_value_1 = 0;
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->bytes[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueByte_List* RogueByte_List__insert__Byte_Int32( RogueByte_List* THIS, RogueByte value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueByte_List*)(((RogueByte_List__add__Byte( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    ++THIS->count;
    THIS->data->bytes[before_index_1] = value_0;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__reserve__Int32( RogueByte_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueByte) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueByte_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueByte) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte RogueByte_List__remove_at__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueByte result_1 = (THIS->data->bytes[index_0]);
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  RogueByte zero_value_2 = 0;
  --THIS->count;
  THIS->data->bytes[THIS->count] = zero_value_2;
  return (RogueByte)(result_1);
}

RogueByte RogueByte_List__remove_last( RogueByte_List* THIS )
{
  return (RogueByte)(((RogueByte_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse( RogueByte_List* THIS )
{
  return (RogueByte_List*)(((RogueByte_List__reverse__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse__Int32_Int32( RogueByte_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  if (i2_1 >= THIS->count)
  {
    i2_1 = ((RogueInt32)(THIS->count - 1));
  }
  ROGUE_DEF_LOCAL_REF(RogueArray*,_data_2,(THIS->data));
  while (i1_0 < i2_1)
  {
    RogueByte temp_3 = (_data_2->bytes[i1_0]);
    _data_2->bytes[i1_0] = _data_2->bytes[i2_1];
    _data_2->bytes[i2_1] = temp_3;
    ++i1_0;
    --i2_1;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( RogueByte_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalByte fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueByte_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueByte_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    RogueByte value_6 = (fill_3.value);
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_29_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_29_8;++i_7)
        {
          THIS->data->bytes[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_30_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_30_10;++i_9)
        {
          THIS->data->bytes[i_9] = value_6;
        }
      }
    }
  }
  return (RogueByte_List*)(THIS);
}

RogueString* RogueByte__to_String( RogueByte THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(THIS))) ))));
}

RogueString* RogueArray_Byte___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[885]);
}

RogueCharacter_List* RogueCharacter_List__init_object( RogueCharacter_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__init( RogueCharacter_List* THIS )
{
  RogueCharacter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCharacter_List*)(THIS);
}

RogueString* RogueCharacter_List__to_String( RogueCharacter_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_611_2,(THIS));
    RogueInt32 _auto_612_3 = (0);
    for (;_auto_612_3 < _auto_611_2->count;++_auto_612_3)
    {
      RogueCharacter value_4 = (_auto_611_2->data->characters[_auto_612_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCharacter__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCharacter_List__type_name( RogueCharacter_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[836]);
}

RogueCharacter_List* RogueCharacter_List__init__Int32( RogueCharacter_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueCharacter) );
  }
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__add__Character( RogueCharacter_List* THIS, RogueCharacter value_0 )
{
  ((RogueCharacter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->characters[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCharacter_List*)(THIS);
}

RogueInt32 RogueCharacter_List__capacity( RogueCharacter_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCharacter_List* RogueCharacter_List__reserve__Int32( RogueCharacter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCharacter_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCharacter_List*)(THIS);
}

RogueLogical RogueCharacter__is_alphanumeric( RogueCharacter THIS )
{
  return (RogueLogical)((((THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9') || (THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z')) || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_identifier( RogueCharacter THIS )
{
  return (RogueLogical)(((((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')) || THIS == (RogueCharacter)'_') || (THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9')));
}

RogueLogical RogueCharacter__is_letter( RogueCharacter THIS )
{
  return (RogueLogical)(((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  return (RogueLogical)(((RogueCharacter__to_number__Int32( ROGUE_ARG(THIS), base_0 ))) != -1);
}

RogueString* RogueCharacter__to_String( RogueCharacter THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueInt32 RogueCharacter__to_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  if ((THIS >= (RogueCharacter)'0' && THIS < ((RogueCharacter)'0' + ((RogueCharacter)(base_0)))))
  {
    return (RogueInt32)(((RogueInt32)((THIS - (RogueCharacter)'0'))));
  }
  if ((THIS >= (RogueCharacter)'a' && THIS < ((RogueCharacter)'a' + ((RogueCharacter)((base_0 - 10))))))
  {
    return (RogueInt32)(((RogueInt32)(((THIS - (RogueCharacter)'a') + ((RogueCharacter)(10))))));
  }
  if ((THIS >= (RogueCharacter)'A' && THIS < ((RogueCharacter)'A' + ((RogueCharacter)((base_0 - 10))))))
  {
    return (RogueInt32)(((RogueInt32)(((THIS - (RogueCharacter)'A') + ((RogueCharacter)(10))))));
  }
  return (RogueInt32)(-1);
}

RogueString* RogueArray_Character___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[886]);
}

RogueLogical RogueReal64__is_infinite( RogueReal64 THIS )
{
  return (RogueLogical)((THIS == THIS && (THIS - THIS) != 0.0));
}

RogueLogical RogueReal64__is_not_a_number( RogueReal64 THIS )
{
  return (RogueLogical)(THIS != THIS);
}

RogueClassTable_String_String_* RogueTable_String_String___init_object( RogueClassTable_String_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueClassTable_String_String_* RogueTable_String_String___init( RogueClassTable_String_String_* THIS )
{
  RogueTable_String_String___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueString* RogueTable_String_String___to_String( RogueClassTable_String_String_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String___type_name( RogueClassTable_String_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[764]);
}

RogueClassTable_String_String_* RogueTable_String_String___init__Int32( RogueClassTable_String_String_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_String__List__init__Int32_TableEntry_String_String_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_String__List*,ROGUE_CREATE_OBJECT(TableEntry_String_String__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_String_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_String_*)(THIS);
}

RogueClassTableEntry_String_String_* RogueTable_String_String___find__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_2,(((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_String_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_String_*)(((RogueClassTableEntry_String_String_*)(NULL)));
}

RogueString* RogueTable_String_String___get__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_1,(((RogueTable_String_String___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueString*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,default_value_2,0);
    return (RogueString*)(default_value_2);
  }
}

RogueClassTable_String_String_* RogueTable_String_String___set__String_String( RogueClassTable_String_String_* THIS, RogueString* key_0, RogueString* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_4,(((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_String_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_String_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_String_*)((RogueTableEntry_String_String___init__String_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String___print_to__StringBuilder( RogueClassTable_String_String_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM27( 19, ROGUE_ARG(THIS), key_2 ))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init_object( RogueTableEntry_String_String__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init( RogueTableEntry_String_String__List* THIS )
{
  RogueTableEntry_String_String__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueString* RogueTableEntry_String_String__List__to_String( RogueTableEntry_String_String__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_String__List*,_auto_654_2,(THIS));
    RogueInt32 _auto_655_3 = (0);
    for (;_auto_655_3 < _auto_654_2->count;++_auto_655_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,value_4,(((RogueClassTableEntry_String_String_*)(_auto_654_2->data->objects[_auto_655_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_String___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_String__List__type_name( RogueTableEntry_String_String__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[837]);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init__Int32( RogueTableEntry_String_String__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_*), true );
  }
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init__Int32_TableEntry_String_String_( RogueTableEntry_String_String__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_String_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_35_3 = (initial_capacity_0);
      for (;i_2 <= _auto_35_3;++i_2)
      {
        RogueTableEntry_String_String__List__add__TableEntry_String_String_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__add__TableEntry_String_String_( RogueTableEntry_String_String__List* THIS, RogueClassTableEntry_String_String_* value_0 )
{
  ((RogueTableEntry_String_String__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_String__List__capacity( RogueTableEntry_String_String__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__reserve__Int32( RogueTableEntry_String_String__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_String__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init_object( RogueClassTableEntry_String_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueString* RogueTableEntry_String_String___to_String( RogueClassTableEntry_String_String_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_String___type_name( RogueClassTableEntry_String_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[738]);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init__String_String_Int32( RogueClassTableEntry_String_String_* THIS, RogueString* _key_0, RogueString* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_String____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[887]);
}

RogueClassStringReader* RogueStringReader__init_object( RogueClassStringReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassStringReader*)(THIS);
}

RogueString* RogueStringReader__type_name( RogueClassStringReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[765]);
}

RogueLogical RogueStringReader__has_another( RogueClassStringReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueStringReader__read( RogueClassStringReader* THIS )
{
  ++THIS->position;
  return (RogueCharacter)(RogueString_character_at(THIS->string,(THIS->position - 1)));
}

RogueClassStringReader* RogueStringReader__init__String( RogueClassStringReader* THIS, RogueString* _auto_47_0 )
{
  THIS->string = _auto_47_0;
  if (!!(THIS->string))
  {
    THIS->count = THIS->string->character_count;
  }
  return (RogueClassStringReader*)(THIS);
}

RogueLogical RogueReader_Character___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 27:
      return RogueStringReader__has_another( (RogueClassStringReader*)THIS );
    case 124:
      return RogueParseReader__has_another( (RogueClassParseReader*)THIS );
    case 369:
      return RogueUTF8Reader__has_another( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueCharacter RogueReader_Character___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 27:
      return RogueStringReader__read( (RogueClassStringReader*)THIS );
    case 124:
      return RogueParseReader__read( (RogueClassParseReader*)THIS );
    case 369:
      return RogueUTF8Reader__read( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueClassRuntime* RogueRuntime__init_object( RogueClassRuntime* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassRuntime*)(THIS);
}

RogueString* RogueRuntime__type_name( RogueClassRuntime* THIS )
{
  return (RogueString*)(Rogue_literal_strings[446]);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init_object( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueTable_String_TypeInfo___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueString* RogueTable_String_TypeInfo___to_String( RogueClassTable_String_TypeInfo_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeInfo___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeInfo___type_name( RogueClassTable_String_TypeInfo_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[766]);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init__Int32( RogueClassTable_String_TypeInfo_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_TypeInfo__List__init__Int32_TableEntry_String_TypeInfo_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TypeInfo__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeInfo__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TypeInfo_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueClassTableEntry_String_TypeInfo_* RogueTable_String_TypeInfo___find__String( RogueClassTable_String_TypeInfo_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,entry_2,(((RogueClassTableEntry_String_TypeInfo_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TypeInfo_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_TypeInfo_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_TypeInfo_*)(((RogueClassTableEntry_String_TypeInfo_*)(NULL)));
}

RogueTypeInfo* RogueTable_String_TypeInfo___get__String( RogueClassTable_String_TypeInfo_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,entry_1,(((RogueTable_String_TypeInfo___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueTypeInfo*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeInfo*,default_value_2,0);
    return (RogueTypeInfo*)(default_value_2);
  }
}

RogueStringBuilder* RogueTable_String_TypeInfo___print_to__StringBuilder( RogueClassTable_String_TypeInfo_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TypeInfo___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init_object( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueTableEntry_String_TypeInfo__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeInfo__List__to_String( RogueTableEntry_String_TypeInfo__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TypeInfo__List*,_auto_704_2,(THIS));
    RogueInt32 _auto_705_3 = (0);
    for (;_auto_705_3 < _auto_704_2->count;++_auto_705_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,value_4,(((RogueClassTableEntry_String_TypeInfo_*)(_auto_704_2->data->objects[_auto_705_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TypeInfo___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TypeInfo__List__type_name( RogueTableEntry_String_TypeInfo__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[838]);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init__Int32( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
  }
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init__Int32_TableEntry_String_TypeInfo_( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TypeInfo_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_81_3 = (initial_capacity_0);
      for (;i_2 <= _auto_81_3;++i_2)
      {
        RogueTableEntry_String_TypeInfo__List__add__TableEntry_String_TypeInfo_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__add__TableEntry_String_TypeInfo_( RogueTableEntry_String_TypeInfo__List* THIS, RogueClassTableEntry_String_TypeInfo_* value_0 )
{
  ((RogueTableEntry_String_TypeInfo__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TypeInfo__List__capacity( RogueTableEntry_String_TypeInfo__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__reserve__Int32( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_TypeInfo__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeInfo_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueClassTableEntry_String_TypeInfo_* RogueTableEntry_String_TypeInfo___init_object( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TypeInfo_*)(THIS);
}

RogueString* RogueTableEntry_String_TypeInfo___to_String( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeInfo___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_TypeInfo___type_name( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[739]);
}

RogueString* RogueArray_TableEntry_String_TypeInfo____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[888]);
}

RogueClassGlobal* RogueGlobal__init_object( RogueClassGlobal* THIS )
{
  THIS->standard_output = ((RogueClassPrintWriter*)(((RogueClassConsole*)ROGUE_SINGLETON(Console))));
  THIS->global_output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->exit_functions = ((RogueFunction___List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFunction___List*,ROGUE_CREATE_OBJECT(Function___List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__init( RogueClassGlobal* THIS )
{
  RogueGlobal__on_exit__Function__( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassFunction__*)(((RogueClassFunction_95*)ROGUE_SINGLETON(Function_95))))) );
  return (RogueClassGlobal*)(THIS);
}

RogueString* RogueGlobal__type_name( RogueClassGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[69]);
}

RogueClassGlobal* RogueGlobal__flush( RogueClassGlobal* THIS )
{
  if (!!(THIS->global_output_buffer->count))
  {
    RogueGlobal__write__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_output_buffer) );
    RogueStringBuilder__clear( ROGUE_ARG(THIS->global_output_buffer) );
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Character( RogueClassGlobal* THIS, RogueCharacter value_0 )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), value_0, true );
  if (value_0 == (RogueCharacter)10)
  {
    return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  RogueStringBuilder__print__Object( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  if (THIS->global_output_buffer->count > 1024)
  {
    RogueGlobal__flush( ROGUE_ARG(THIS) );
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__println( RogueClassGlobal* THIS )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), (RogueCharacter)10, true );
  return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
}

RogueClassGlobal* RogueGlobal__println__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__Object( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__println__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__String( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__write__StringBuilder( RogueClassGlobal* THIS, RogueStringBuilder* buffer_0 )
{
  RoguePrintWriter__write__StringBuilder( ROGUE_ARG(((RogueObject*)THIS->standard_output)), buffer_0 );
  return (RogueClassGlobal*)(THIS);
}

void RogueGlobal__on_launch( RogueClassGlobal* THIS )
{
  RogueRogueC__launch( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
}

void RogueGlobal__run_tests( RogueClassGlobal* THIS )
{
}

void RogueGlobal__call_exit_functions( RogueClassGlobal* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueFunction___List*,functions_0,(THIS->exit_functions));
  THIS->exit_functions = ((RogueFunction___List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFunction___List*,ROGUE_CREATE_OBJECT(Function___List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_254_1,(functions_0));
    RogueInt32 _auto_255_2 = (0);
    for (;_auto_255_2 < _auto_254_1->count;++_auto_255_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,fn_3,(((RogueClassFunction__*)(_auto_254_1->data->objects[_auto_255_2]))));
      call_ROGUEM48( 10, fn_3 );
    }
  }
}

void RogueGlobal__on_exit__Function__( RogueClassGlobal* THIS, RogueClassFunction__* fn_0 )
{
  RogueFunction___List__add__Function__( ROGUE_ARG(THIS->exit_functions), fn_0 );
}

RogueClassPrintWriter* RoguePrintWriterAspect_Global_global_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 35:
      return (RogueClassPrintWriter*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueClassPrintWriter* RoguePrintWriter__write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 35:
      return (RogueClassPrintWriter*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    case 41:
      return (RogueClassPrintWriter*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueFunction___List* RogueFunction___List__init_object( RogueFunction___List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__init( RogueFunction___List* THIS )
{
  RogueFunction___List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFunction___List*)(THIS);
}

RogueString* RogueFunction___List__to_String( RogueFunction___List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_732_2,(THIS));
    RogueInt32 _auto_733_3 = (0);
    for (;_auto_733_3 < _auto_732_2->count;++_auto_733_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,value_4,(((RogueClassFunction__*)(_auto_732_2->data->objects[_auto_733_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFunction___List__type_name( RogueFunction___List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[839]);
}

RogueFunction___List* RogueFunction___List__init__Int32( RogueFunction___List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFunction__*), true );
  }
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__add__Function__( RogueFunction___List* THIS, RogueClassFunction__* value_0 )
{
  ((RogueFunction___List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueFunction___List*)(THIS);
}

RogueInt32 RogueFunction___List__capacity( RogueFunction___List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueFunction___List* RogueFunction___List__reserve__Int32( RogueFunction___List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFunction___List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFunction___List*)(THIS);
}

RogueClassFunction__* RogueFunction____init_object( RogueClassFunction__* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction__*)(THIS);
}

RogueString* RogueFunction____type_name( RogueClassFunction__* THIS )
{
  return (RogueString*)(Rogue_literal_strings[767]);
}

void RogueFunction____call( RogueClassFunction__* THIS )
{
}

RogueString* RogueArray_Function_____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[889]);
}

RogueClassConsole* RogueConsole__init_object( RogueClassConsole* THIS )
{
  THIS->output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassConsole*)(THIS);
}

RogueString* RogueConsole__type_name( RogueClassConsole* THIS )
{
  return (RogueString*)(Rogue_literal_strings[768]);
}

RogueClassConsole* RogueConsole__write__StringBuilder( RogueClassConsole* THIS, RogueStringBuilder* buffer_0 )
{
  RogueString_print_utf8( buffer_0->utf8->data->bytes, buffer_0->utf8->count );
  return (RogueClassConsole*)(THIS);
}

RogueClassPrintWriter* RoguePrintWriterAspect_Console_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 41:
      return (RogueClassPrintWriter*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueClassFunction_95* RogueFunction_95__init_object( RogueClassFunction_95* THIS )
{
  RogueFunction____init_object( ROGUE_ARG(((RogueClassFunction__*)THIS)) );
  return (RogueClassFunction_95*)(THIS);
}

RogueString* RogueFunction_95__type_name( RogueClassFunction_95* THIS )
{
  return (RogueString*)(Rogue_literal_strings[933]);
}

void RogueFunction_95__call( RogueClassFunction_95* THIS )
{
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueClassRogueC* RogueRogueC__init_object( RogueClassRogueC* THIS )
{
  THIS->included_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->prefix_path_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->prefix_path_lookup = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  THIS->compile_targets = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  THIS->target_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->libraries_folder = Rogue_literal_strings[0];
  THIS->source_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->supported_targets = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->requisite_declarations = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->all_requisite = false;
  THIS->parsers = ((RogueParser_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueParser_List*,ROGUE_CREATE_OBJECT(Parser_List))) )));
  THIS->parsereaders_by_filepath = ((RogueTable_String_ParseReader___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_ParseReader_*,ROGUE_CREATE_OBJECT(Table_String_ParseReader_))) )));
  THIS->gc_mode = 0;
  THIS->gc_threshold = 1048576;
  THIS->plugins = ((RoguePlugin_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePlugin_List*,ROGUE_CREATE_OBJECT(Plugin_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassRogueC*)(THIS);
}

RogueString* RogueRogueC__type_name( RogueClassRogueC* THIS )
{
  return (RogueString*)(Rogue_literal_strings[797]);
}

void RogueRogueC__launch( RogueClassRogueC* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,libs_0,(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( ROGUE_ARG(RogueSystem_executable_filepath) ))), Rogue_literal_strings[2] )))));
  if ((RogueFile__exists__String( libs_0 )))
  {
    THIS->libraries_folder = libs_0;
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), libs_0 );
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), libs_0, true );
  }
  ROGUE_TRY
  {
    RogueRogueC__process_command_line_arguments( ROGUE_ARG(THIS) );
    RogueString_List__add__String( ROGUE_ARG(THIS->supported_targets), Rogue_literal_strings[44] );
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_771_4,(THIS->plugins));
      RogueInt32 _auto_772_5 = (0);
      for (;_auto_772_5 < _auto_771_4->count;++_auto_772_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_6,(((RogueClassPlugin*)(_auto_771_4->data->objects[_auto_772_5]))));
        RoguePlugin__collect_supported_targets( plugin_6 );
      }
    }
    if (THIS->source_files->count == 0)
    {
      if (THIS->print_version)
      {
        RogueGlobal__println__String( ROGUE_ARG(((RogueGlobal__print__Character( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), (RogueCharacter)'v' )))), Rogue_literal_strings[45] );
        RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[46] );
        RogueSystem__exit__Int32( 0 );
      }
      RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[47], Rogue_literal_strings[45] )))) );
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[46] );
      ROGUE_DEF_LOCAL_REF(RogueString*,usage_1,(Rogue_literal_strings[48]));
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, ROGUE_ARG(((RogueString__replacing__String_String( ROGUE_ARG(((RogueString__replacing__Character_Character( ROGUE_ARG(((RogueString_List__to_String( ROGUE_ARG(THIS->supported_targets) )))), (RogueCharacter)',', (RogueCharacter)'|' )))), Rogue_literal_strings[49], Rogue_literal_strings[50] )))) ))));
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, Rogue_literal_strings[51] ))));
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), usage_1 );
      RogueSystem__exit__Int32( 1 );
    }
    if (THIS->target_list->count == 0)
    {
      RogueString_List__add__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[44] );
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_773_7,(THIS->target_list));
      RogueInt32 _auto_774_8 = (0);
      for (;_auto_774_8 < _auto_773_7->count;++_auto_774_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,target_9,(((RogueString*)(_auto_773_7->data->objects[_auto_774_8]))));
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->compile_targets), target_9, true );
      }
    }
    RogueProgram__configure( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    THIS->stopwatch = ((RogueClassStopwatch*)((call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassStopwatch*,ROGUE_CREATE_OBJECT(Stopwatch)))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_775_10,(THIS->source_files));
      RogueInt32 _auto_776_11 = (0);
      for (;_auto_776_11 < _auto_775_10->count;++_auto_776_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,filepath_12,(((RogueString*)(_auto_775_10->data->objects[_auto_776_11]))));
        RogueRogueC__include_source__String( ROGUE_ARG(THIS), filepath_12 );
      }
    }
    RogueRogueC__include_source__String( ROGUE_ARG(THIS), Rogue_literal_strings[288] );
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_777_13,(THIS->parsers));
      RogueInt32 _auto_778_14 = (0);
      for (;_auto_778_14 < _auto_777_13->count;++_auto_778_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_15,(((RogueClassParser*)(_auto_777_13->data->objects[_auto_778_14]))));
        RogueParser__insert_module_prefixes( parser_15 );
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_779_16,(THIS->parsers));
      RogueInt32 _auto_780_17 = (0);
      for (;_auto_780_17 < _auto_779_16->count;++_auto_780_17)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_18,(((RogueClassParser*)(_auto_779_16->data->objects[_auto_780_17]))));
        RogueParser__parse_elements( parser_18 );
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((call_ROGUEM79( 11, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[54] )))), Rogue_literal_strings[360], 0, 0 ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_781_19,(THIS->requisite_declarations));
      RogueInt32 _auto_782_20 = (0);
      for (;_auto_782_20 < _auto_781_19->count;++_auto_782_20)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,declaration_21,(((RogueString*)(_auto_781_19->data->objects[_auto_782_20]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_2 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, declaration_21 )))))) );
      }
    }
    if (THIS->all_requisite)
    {
      ((RogueClassProgram*)ROGUE_SINGLETON(Program))->all_requisite = true;
    }
    RogueProgram__resolve( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    RogueRogueC__write_output( ROGUE_ARG(THIS) );
  }
  ROGUE_CATCH( err_3,RogueClassError* )
  {
    RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(err_3))) );
    RogueSystem__exit__Int32( 1 );
  }
  ROGUE_END_TRY
}

void RogueRogueC__write_output( RogueClassRogueC* THIS )
{
  if (((RogueTable_String_Logical___get__String( ROGUE_ARG(THIS->compile_targets), Rogue_literal_strings[44] ))))
  {
    RogueRogueC__write_cpp( ROGUE_ARG(THIS) );
    return;
  }
  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[733] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->target_list))) )))) )))), Rogue_literal_strings[734] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueRogueC__on_compile_finished( RogueClassRogueC* THIS )
{
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[728] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->stopwatch))) )))) )))), Rogue_literal_strings[32] )))) )))) );
}

void RogueRogueC__include_source__String( RogueClassRogueC* THIS, RogueString* filepath_0 )
{
  if (!(!!(THIS->first_filepath)))
  {
    THIS->first_filepath = filepath_0;
  }
  RogueRogueC__include_source__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassToken*)(NULL))), filepath_0 );
}

void RogueRogueC__include_source__Token_String( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* filepath_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_2,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 )))));
  if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[71] )))) )))
  {
    filepath_1 = ((RogueString*)((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[71] ))));
    file_2 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 ))));
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_2->filepath) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_785_10,(THIS->prefix_path_list));
      RogueInt32 _auto_786_11 = (0);
      for (;_auto_786_11 < _auto_785_10->count;++_auto_786_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_12,(((RogueString*)(_auto_785_10->data->objects[_auto_786_11]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_3,(((RogueString__operatorPLUS__String( prefix_12, filepath_1 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_4,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_3 )))));
        if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( prefixed_filepath_3, Rogue_literal_strings[71] )))) )))
        {
          filepath_1 = ((RogueString*)((RogueString__operatorPLUS__String( prefixed_filepath_3, Rogue_literal_strings[71] ))));
          file_2 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 ))));
          goto _auto_787;
        }
        else if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_4->filepath) )))
        {
          filepath_1 = ((RogueString*)prefixed_filepath_3);
          file_2 = ((RogueClassFile*)prefixed_file_4);
          goto _auto_787;
        }
      }
    }
    _auto_787:;
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_2->filepath) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[72] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[19] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_5 ))));
    }
    else
    {
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_5, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_2->filepath) )))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,path2_6,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[73] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueFile__filename( file_2 )))) )))) )))), Rogue_literal_strings[71] )))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassFile*,file2_7,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), path2_6 )))));
    if ((!((RogueFile__exists__String( ROGUE_ARG(file2_7->filepath) ))) || (RogueFile__is_folder__String( ROGUE_ARG(file2_7->filepath) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,mesg_8,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[74] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], path2_6 )))) )))), Rogue_literal_strings[75] )))) )))));
      if (!!(t_0))
      {
        ROGUE_THROW(((RogueToken__error__String( t_0, mesg_8 ))));
      }
      else
      {
        ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_8, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
      }
    }
    else
    {
      if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_2->filepath) )))))
      {
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_2->filepath), true );
        RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), ROGUE_ARG(file_2->filepath) );
      }
      filepath_1 = ((RogueString*)path2_6);
      file_2 = ((RogueClassFile*)file2_7);
    }
  }
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_2->filepath) )));
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  if (THIS->included_files->count == 0)
  {
    ((RogueClassProgram*)ROGUE_SINGLETON(Program))->first_filepath = filepath_1;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  ROGUE_DEF_LOCAL_REF(RogueString*,prefix_9,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[73] )))));
  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_9 )))))
  {
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_9, true );
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_9 );
  }
  RogueParser_List__add__Parser( ROGUE_ARG(THIS->parsers), ROGUE_ARG(((RogueParser__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), filepath_1 )))) );
}

void RogueRogueC__include_native__Token_String_String( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* filepath_1, RogueString* native_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_3,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 )))));
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_788_9,(THIS->prefix_path_list));
      RogueInt32 _auto_789_10 = (0);
      for (;_auto_789_10 < _auto_788_9->count;++_auto_789_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_11,(((RogueString*)(_auto_788_9->data->objects[_auto_789_10]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_4,(((RogueString__operatorPLUS__String( prefix_11, filepath_1 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_5,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_4 )))));
        if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_5->filepath) )))
        {
          filepath_1 = ((RogueString*)prefixed_filepath_4);
          file_3 = ((RogueClassFile*)prefixed_file_5);
          goto _auto_790;
        }
      }
    }
    _auto_790:;
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_6,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[72] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[19] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_6 ))));
    }
    else
    {
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_6, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_3->filepath) )))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_7,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[83] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(file_3->filepath) )))) )))), Rogue_literal_strings[84] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_7 ))));
    }
    else
    {
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_7, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_3->filepath) )));
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  ROGUE_DEF_LOCAL_REF(RogueString*,prefix_8,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[73] )))));
  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8 )))))
  {
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8, true );
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_8 );
  }
  if (((RogueString__operatorEQUALSEQUALS__String( native_type_2, Rogue_literal_strings[85] ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_792_12,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_792_12 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_13,(((RogueLineReader__read( _auto_792_12 )))));
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), line_13 );
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_793_14,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_793_14 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_15,(((RogueLineReader__read( _auto_793_14 )))));
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), line_15 );
      }
    }
  }
}

void RogueRogueC__process_command_line_arguments( RogueClassRogueC* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_794_4,(RogueSystem_command_line_arguments));
    RogueInt32 _auto_795_5 = (0);
    for (;_auto_795_5 < _auto_794_4->count;++_auto_795_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,arg_6,(((RogueString*)(_auto_794_4->data->objects[_auto_795_5]))));
      ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueString__after_first__Character( arg_6, (RogueCharacter)'=' )))));
      arg_6 = ((RogueString*)((RogueString__before_first__Character( arg_6, (RogueCharacter)'=' ))));
      if (((RogueString__begins_with__String( arg_6, Rogue_literal_strings[3] ))))
      {
        {
          if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[4] ))))
          {
            if (value_0->character_count == 0)
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[13], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->output_filepath = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[14] ))))
          {
            THIS->generate_main = true;
            THIS->execute_args = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[15] ))))
          {
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[16] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[17], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            {
              ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_796_7,(((RogueString__split__Character( value_0, (RogueCharacter)';' )))));
              RogueInt32 _auto_797_8 = (0);
              for (;_auto_797_8 < _auto_796_7->count;++_auto_797_8)
              {
                ROGUE_DEF_LOCAL_REF(RogueString*,path_9,(((RogueString*)(_auto_796_7->data->objects[_auto_797_8]))));
                if (!((RogueFile__exists__String( path_9 ))))
                {
                  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[18] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], path_9 )))) )))), Rogue_literal_strings[19] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
                }
                if ((RogueFile__is_folder__String( path_9 )))
                {
                  if (!(((RogueString__ends_with__Character( path_9, (RogueCharacter)'/' )))))
                  {
                    path_9 = ((RogueString*)((RogueString__operatorPLUS__Character( path_9, (RogueCharacter)'/' ))));
                  }
                  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), path_9 )))))
                  {
                    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), path_9 );
                    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), path_9, true );
                  }
                }
                else
                {
                  RogueString_List__add__String( ROGUE_ARG(THIS->source_files), path_9 );
                }
              }
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[20] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[21], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->generate_main = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[22] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[23], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->package_name = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[24] ))))
          {
            if (!!(value_0->character_count))
            {
              RogueString_List__add__String_List( ROGUE_ARG(THIS->requisite_declarations), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
            }
            else
            {
              THIS->all_requisite = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[25] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[26], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            RogueString_List__add__String_List( ROGUE_ARG(THIS->target_list), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[27] ))))
          {
            if ((!(!!(value_0->character_count)) || ((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[28] )))))
            {
              THIS->gc_mode = 1;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[29] ))))
            {
              THIS->gc_mode = 0;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[30] ))))
            {
              THIS->gc_mode = 2;
            }
            else
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[31] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], value_0 )))) )))), Rogue_literal_strings[32] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[33] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[34], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            value_0 = ((RogueString*)((RogueString__to_lowercase( value_0 ))));
            RogueReal64 n_1 = (strtod( (char*)value_0->utf8, 0 ));
            if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'m' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[35] )))))
            {
              n_1 *= 1048576.0;
            }
            else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'k' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[36] )))))
            {
              n_1 *= 1024.0;
            }
            RogueInt32 thresh_2 = (((RogueInt32)(n_1)));
            if (thresh_2 < 1)
            {
              thresh_2 = ((RogueInt32)2147483647);
            }
            THIS->gc_threshold = thresh_2;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[37] ))))
          {
            RoguePlugin_List__add__Plugin( ROGUE_ARG(THIS->plugins), ROGUE_ARG(((RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( ROGUE_ARG(((RoguePlugin__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPlugin*,ROGUE_CREATE_OBJECT(Plugin))), Rogue_literal_strings[38] )))), ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)(((RogueClassFunction_798*)ROGUE_SINGLETON(Function_798))))) )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[39] ))))
          {
            THIS->run_tests = true;
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[40] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[41], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->print_version = true;
          }
          else
          {
            ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[42] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_6 )))) )))), Rogue_literal_strings[43] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
          }
        }
      }
      else
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->source_files), arg_6 );
      }
    }
  }
}

void RogueRogueC__write_cpp( RogueClassRogueC* THIS )
{
  if (((void*)THIS->output_filepath) == ((void*)NULL))
  {
    THIS->output_filepath = (RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ));
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[71] ))))
    {
      THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -6 )));
    }
  }
  else if ((RogueFile__is_folder__String( ROGUE_ARG(THIS->output_filepath) )))
  {
    THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[73] )));
    ROGUE_DEF_LOCAL_REF(RogueString*,filename_0,((RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ))));
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( filename_0 )))), Rogue_literal_strings[71] ))))
    {
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), ROGUE_ARG(((RogueString__leftmost__Int32( filename_0, -6 )))) )));
    }
    else
    {
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[521] )));
    }
  }
  else if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[522] ))))
  {
    THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -4 )));
  }
  RogueProgram__write_cpp__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->output_filepath) );
  RogueRogueC__on_compile_finished( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
  if (!!(THIS->execute_args))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,exe_1,(THIS->output_filepath));
    if (((RogueString__contains__Character( exe_1, (RogueCharacter)'/' ))))
    {
      exe_1 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( exe_1 ))), Rogue_literal_strings[73] )))), ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG((RogueFile__filename__String( exe_1 ))) )))) ))));
    }
    else
    {
      exe_1 = ((RogueString*)((RogueString__to_lowercase( exe_1 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,cmd_2,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[729] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->output_filepath) )))) )))), Rogue_literal_strings[730] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))), Rogue_literal_strings[731] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->execute_args) )))) )))) )))));
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), cmd_2 );
    RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
    RogueSystem__run__String( cmd_2 );
  }
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init_object( RogueClassTable_String_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init( RogueClassTable_String_Logical_* THIS )
{
  RogueTable_String_Logical___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueString* RogueTable_String_Logical___to_String( RogueClassTable_String_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Logical___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Logical___type_name( RogueClassTable_String_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[769]);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init__Int32( RogueClassTable_String_Logical_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Logical__List__init__Int32_TableEntry_String_Logical_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Logical__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Logical__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Logical_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueLogical RogueTable_String_Logical___contains__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Logical_* RogueTable_String_Logical___find__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_2,(((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Logical_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Logical_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Logical_*)(((RogueClassTableEntry_String_Logical_*)(NULL)));
}

RogueLogical RogueTable_String_Logical___get__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_1,(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueLogical)(entry_1->value);
  }
  else
  {
    RogueLogical default_value_2 = 0;
    return (RogueLogical)(default_value_2);
  }
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___set__String_Logical( RogueClassTable_String_Logical_* THIS, RogueString* key_0, RogueLogical value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_4,(((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Logical_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Logical_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Logical_*)((RogueTableEntry_String_Logical___init__String_Logical_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Logical_*,ROGUE_CREATE_OBJECT(TableEntry_String_Logical_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Logical___print_to__StringBuilder( RogueClassTable_String_Logical_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Logical( buffer_0, ROGUE_ARG(((RogueTable_String_Logical___get__String( ROGUE_ARG(THIS), key_2 )))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init_object( RogueTableEntry_String_Logical__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init( RogueTableEntry_String_Logical__List* THIS )
{
  RogueTableEntry_String_Logical__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueString* RogueTableEntry_String_Logical__List__to_String( RogueTableEntry_String_Logical__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Logical__List*,_auto_821_2,(THIS));
    RogueInt32 _auto_822_3 = (0);
    for (;_auto_822_3 < _auto_821_2->count;++_auto_822_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,value_4,(((RogueClassTableEntry_String_Logical_*)(_auto_821_2->data->objects[_auto_822_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Logical___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Logical__List__type_name( RogueTableEntry_String_Logical__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[840]);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init__Int32( RogueTableEntry_String_Logical__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Logical_*), true );
  }
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init__Int32_TableEntry_String_Logical_( RogueTableEntry_String_Logical__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Logical_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Logical_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_96_3 = (initial_capacity_0);
      for (;i_2 <= _auto_96_3;++i_2)
      {
        RogueTableEntry_String_Logical__List__add__TableEntry_String_Logical_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__add__TableEntry_String_Logical_( RogueTableEntry_String_Logical__List* THIS, RogueClassTableEntry_String_Logical_* value_0 )
{
  ((RogueTableEntry_String_Logical__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Logical__List__capacity( RogueTableEntry_String_Logical__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__reserve__Int32( RogueTableEntry_String_Logical__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Logical_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Logical__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Logical_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init_object( RogueClassTableEntry_String_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueString* RogueTableEntry_String_Logical___to_String( RogueClassTableEntry_String_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Logical___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Logical___type_name( RogueClassTableEntry_String_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[740]);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init__String_Logical_Int32( RogueClassTableEntry_String_Logical_* THIS, RogueString* _key_0, RogueLogical _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Logical____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[890]);
}

RogueParser_List* RogueParser_List__init_object( RogueParser_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__init( RogueParser_List* THIS )
{
  RogueParser_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueParser_List*)(THIS);
}

RogueString* RogueParser_List__to_String( RogueParser_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_849_2,(THIS));
    RogueInt32 _auto_850_3 = (0);
    for (;_auto_850_3 < _auto_849_2->count;++_auto_850_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassParser*,value_4,(((RogueClassParser*)(_auto_849_2->data->objects[_auto_850_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueParser_List__type_name( RogueParser_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[860]);
}

RogueParser_List* RogueParser_List__init__Int32( RogueParser_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassParser*), true );
  }
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__add__Parser( RogueParser_List* THIS, RogueClassParser* value_0 )
{
  ((RogueParser_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueParser_List*)(THIS);
}

RogueInt32 RogueParser_List__capacity( RogueParser_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueParser_List* RogueParser_List__reserve__Int32( RogueParser_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueParser_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueParser_List*)(THIS);
}

RogueClassParser* RogueParser__init_object( RogueClassParser* THIS )
{
  THIS->local_declarations = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->used_modules = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassParser*)(THIS);
}

RogueString* RogueParser__type_name( RogueClassParser* THIS )
{
  return (RogueString*)(Rogue_literal_strings[791]);
}

RogueClassParser* RogueParser__init__String( RogueClassParser* THIS, RogueString* _auto_226_0 )
{
  THIS->filepath = _auto_226_0;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath) )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__String_String( RogueClassParser* THIS, RogueString* _auto_227_0, RogueString* content_1 )
{
  THIS->filepath = _auto_227_0;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath), content_1 )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_String_String( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* _auto_228_1, RogueString* data_2 )
{
  THIS->filepath = _auto_228_1;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__Token_String_String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), t_0, ROGUE_ARG(THIS->filepath), data_2 )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_List_Logical( RogueClassParser* THIS, RogueToken_List* tokens_0, RogueLogical skip_reprocess_1 )
{
  if (!(skip_reprocess_1))
  {
    tokens_0 = ((RogueToken_List*)((RoguePreprocessor__reprocess__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), tokens_0 ))));
  }
  THIS->reader = ((RogueTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenReader*,ROGUE_CREATE_OBJECT(TokenReader))), tokens_0 )));
  return (RogueClassParser*)(THIS);
}

void RogueParser__add_used_module__String( RogueClassParser* THIS, RogueString* module_name_0 )
{
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->used_modules), module_name_0 ))).exists)
  {
    return;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->used_modules), module_name_0 );
  ROGUE_DEF_LOCAL_REF(RogueString_List*,module_ids_1,(((RogueTable_String_String_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->ids_by_module), module_name_0 )))));
  if (!!(module_ids_1))
  {
    if (!(!!(THIS->module_id_map)))
    {
      THIS->module_id_map = ((RogueTable_String_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_*,ROGUE_CREATE_OBJECT(Table_String_String_))) )));
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_898_2,(module_ids_1));
      RogueInt32 _auto_899_3 = (0);
      for (;_auto_899_3 < _auto_898_2->count;++_auto_899_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,m_id_4,(((RogueString*)(_auto_898_2->data->objects[_auto_899_3]))));
        RogueTable_String_String___set__String_String( ROGUE_ARG(THIS->module_id_map), m_id_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], module_name_0 )))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_id_4 )))) )))) )))) );
      }
    }
  }
}

RogueLogical RogueParser__consume__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  if (!(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 )))))
  {
    return (RogueLogical)(false);
  }
  RogueTokenReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume__String( RogueClassParser* THIS, RogueString* identifier_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_1->_type) != ((void*)RogueTokenType_identifier))
  {
    return (RogueLogical)(false);
  }
  if (((RogueString__operatorLTGT__String( ROGUE_ARG((call_ROGUEM71( 2, t_1 ))), identifier_0 ))) != 0)
  {
    return (RogueLogical)(false);
  }
  RogueParser__read( ROGUE_ARG(THIS) );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume_end_commands( RogueClassParser* THIS )
{
  RogueLogical found_0 = (false);
  while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
  {
    found_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_0);
}

RogueLogical RogueParser__consume_eols( RogueClassParser* THIS )
{
  RogueLogical found_any_0 = (false);
  while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
  {
    found_any_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_any_0);
}

RogueClassRogueError* RogueParser__error__String( RogueClassParser* THIS, RogueString* message_0 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))), message_0 ))));
}

void RogueParser__insert_module_prefixes( RogueClassParser* THIS )
{
  if (THIS->inserted_module_prefixes)
  {
    return;
  }
  THIS->inserted_module_prefixes = true;
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,name_1,((call_ROGUEM71( 2, t_0 ))));
      if (RogueString_character_at(name_1,0) == (RogueCharacter)':')
      {
        THIS->reader->tokens->data->objects[(THIS->reader->position - 1)] = (call_ROGUEM81( 18, ROGUE_ARG(t_0->_type), t_0, ROGUE_ARG(((RogueString__from__Int32( name_1, 2 )))) ));
      }
      else if (!!(THIS->module_id_map))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,mapping_2,((call_ROGUEM27( 19, ROGUE_ARG(THIS->module_id_map), name_1 ))));
        if (!!(mapping_2))
        {
          THIS->reader->tokens->data->objects[(THIS->reader->position - 1)] = (call_ROGUEM81( 18, ROGUE_ARG(t_0->_type), t_0, mapping_2 ));
        }
      }
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
    {
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
    {
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
  }
  THIS->reader->position = 0;
}

void RogueParser__must_consume__TokenType_String( RogueClassParser* THIS, RogueClassTokenType* type_0, RogueString* error_message_1 )
{
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), type_0 ))))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!(!!(error_message_1)))
  {
    error_message_1 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( type_0 )))) )))) )))), Rogue_literal_strings[295] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 16, t_2 ))) )))) )))), Rogue_literal_strings[76] )))) ))));
  }
  ROGUE_THROW(((RogueToken__error__String( t_2, error_message_1 ))));
}

void RogueParser__must_consume_eols( RogueClassParser* THIS )
{
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
}

RogueClassToken* RogueParser__must_read__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_1->_type) != ((void*)type_0))
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), type_0, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueLogical RogueParser__next_is__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  return (RogueLogical)(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 ))));
}

RogueLogical RogueParser__next_is_end_command( RogueClassParser* THIS )
{
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,type_0,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type));
  return (RogueLogical)(type_0->is_end_command);
}

RogueLogical RogueParser__next_is_identifier__String( RogueClassParser* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!(((RogueObject__operatorEQUALSEQUALS__Object( ROGUE_ARG(((RogueObject*)t_1->_type)), ROGUE_ARG(((RogueObject*)(RogueTokenType_identifier))) )))))
  {
    return (RogueLogical)(false);
  }
  if (!(!!(name_0)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM71( 2, t_1 ))), name_0 ))));
}

RogueLogical RogueParser__next_is_statement( RogueClassParser* THIS )
{
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((RogueTokenReader__next_is_statement_token( ROGUE_ARG(THIS->reader) ))));
}

void RogueParser__parse_elements( RogueClassParser* THIS )
{
  RogueParser__insert_module_prefixes( ROGUE_ARG(THIS) );
  while (((RogueParser__parse_element( ROGUE_ARG(THIS) ))))
  {
  }
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[359] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 16, t_0 ))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_element( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  if (((RogueParser__parse_native_element( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_class))
  {
    RogueParser__parse_class_template( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_routine))
  {
    RogueParser__parse_routine( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_augment))
  {
    RogueParser__parse_augment( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[69] )));
    THIS->this_method = ((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

void RogueParser__parse_class_template( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 0 )))));
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endClass) );
  switch (((Rogue_Template__element_type( template_2 ))))
  {
    case 3:
    {
      RogueAttributes__add__Int32( ROGUE_ARG(template_2->attributes), 16 );
      break;
    }
  }
}

void RogueParser__parse_routine( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 262144 )))));
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endRoutine) );
}

void RogueParser__parse_template_tokens__Template_TokenType( RogueClassParser* THIS, RogueClassTemplate* template_0, RogueClassTokenType* end_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueLogical is_routine_3 = (((void*)end_type_1) == ((void*)RogueTokenType_keyword_endRoutine));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    RogueLogical first_4 = (true);
    while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_4 = ((RogueLogical)false);
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_6,(((RogueTemplate__add_type_parameter__Token_String( template_0, t_5, ROGUE_ARG((call_ROGUEM71( 2, t_5 ))) )))));
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  RogueInt32 starting_pos_7 = (THIS->reader->position);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      RogueLogical first_8 = (true);
      while ((first_8 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_8 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) );
        RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          RogueParser__parse_expression( ROGUE_ARG(THIS) );
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))))
          {
            RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
          }
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    }
  }
  RogueInt32 final_pos_9 = (THIS->reader->position);
  if (is_routine_3)
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      template_0->_routine_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
    }
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    THIS->reader->position = starting_pos_7;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_GLOBAL), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_METHODS), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(RogueTokenType_identifier), first_t_2, Rogue_literal_strings[301] ))) );
  }
  else
  {
    THIS->reader->position = starting_pos_7;
    while (THIS->reader->position < final_pos_9)
    {
      RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) );
    }
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,semi_t_10,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
      if (template_0->tokens->count == 0)
      {
        RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eol), semi_t_10 )))) );
      }
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      return;
    }
  }
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_11,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((void*)t_11->_type) == ((void*)end_type_1))
    {
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      return;
    }
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), t_11 );
  }
  ROGUE_THROW(((RogueTokenReader__error__String( ROGUE_ARG(THIS->reader), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( end_type_1 )))) )))) )))), Rogue_literal_strings[355] )))) )))) ))));
}

void RogueParser__parse_augment( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
  if (((RogueString__contains__Character( name_1, (RogueCharacter)'$' ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__before_first__Character( name_1, (RogueCharacter)'<' )))));
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[356] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[357] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[358] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_3,(((RogueAugment__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAugment*,ROGUE_CREATE_OBJECT(Augment))), t_0, name_1 )))));
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_4,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1 )))));
  if (!(!!(augments_4)))
  {
    augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
    RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1, augments_4 );
  }
  RogueAugment_List__add__Augment( augments_4, aug_3 );
  ROGUE_DEF_LOCAL_REF(RogueString*,base_name_5,(((RogueString__after_any__String( name_1, Rogue_literal_strings[94] )))));
  if (base_name_5->character_count < name_1->character_count)
  {
    augments_4 = ((RogueAugment_List*)((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5 ))));
    if (!(!!(augments_4)))
    {
      augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
      RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5, augments_4 );
    }
    RogueAugment_List__add__Augment( augments_4, aug_3 );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
  {
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment) ))))))
  {
    RogueToken_List__add__Token( ROGUE_ARG(aug_3->tokens), ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__parse_attributes__Attributes( RogueClassParser* THIS, RogueClassAttributes* attributes_0 )
{
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) )))))
  {
    return;
  }
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      RogueAttributes__add__Int32( attributes_0, 32 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[337] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 131072 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[338] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 1 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[342] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 3 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[343] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 524288 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[344] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 48 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[345] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 256 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[346] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 64 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[341] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 2 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[347] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 2097152 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[278] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 8192 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[348] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 1024 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[349] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 1048576 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[350] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 16384 );
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))))
    {
      RogueAttributes__add__String( attributes_0, ROGUE_ARG((call_ROGUEM71( 2, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))) );
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[351], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))) ))));
    }
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__ensure_unspecialized_element_type__Token_Attributes( RogueClassParser* THIS, RogueClassToken* t_0, RogueClassAttributes* attributes_1 )
{
  if ((attributes_1->flags & 7) != 0)
  {
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[339] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 2, t_0 ))) )))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueAttributes__element_type_name( attributes_1 )))) )))) )))), Rogue_literal_strings[43] )))) )))) ))));
  }
}

void RogueParser__parse_type_def__Type( RogueClassParser* THIS, RogueClassType* _auto_229_0 )
{
  THIS->_this_type = _auto_229_0;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueLogical compound_has_create_2 = (false);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,0);
      if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
      {
        compound_has_create_2 = ((RogueLogical)true);
        m_3 = ((RogueClassMethod*)((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[401] ))));
        RogueAttributes__add__Int32( ROGUE_ARG(m_3->attributes), 4096 );
      }
      else
      {
        m_3 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[388] ))));
      }
      m_3->_return_type = THIS->_this_type;
      RogueLogical first_4 = (true);
      while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_4 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        RogueLogical is_flag_5 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,p_name_6,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueMethod__add_parameter__Token_String_Type( m_3, t_1, p_name_6, ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          param_7->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_8,0);
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          p_type_8 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            param_7->_type = p_type_8;
          }
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        else if (is_flag_5)
        {
          p_type_8 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            param_7->_type = p_type_8;
          }
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        if ((is_flag_5 && !(!!(param_7->initial_value))))
        {
          if (((void*)p_type_8) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
          {
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_1, false )))));
          }
          else
          {
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, 0 )))));
          }
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
  {
    RogueType_List__add__Type( ROGUE_ARG(THIS->_this_type->base_types), ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, Rogue_literal_strings[402] )))) );
    if (!(compound_has_create_2))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[401] )))));
      RogueAttributes__add__Int32( ROGUE_ARG(m_9->attributes), 4096 );
      m_9->_return_type = THIS->_this_type;
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueLogical first_10 = (true);
    while ((first_10 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_10 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueType_List__add__Type( ROGUE_ARG(THIS->_this_type->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  while (((RogueParser__parse_section( ROGUE_ARG(THIS) ))))
  {
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[359] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 16, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_section( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_CLASS) ))))
  {
    while (((RogueParser__parse_class_level_element( ROGUE_ARG(THIS) ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_begin_augment_tokens) ))))
  {
    THIS->parsing_augment = true;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ENUMERATE) ))))
  {
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), true ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_DEFINITIONS) ))))
  {
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_GLOBAL) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
    {
      while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), true ))))
      {
      }
      return (RogueLogical)(true);
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
    {
      while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), true, false ))))
      {
      }
      return (RogueLogical)(true);
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
  {
    while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
  {
    while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), false, false ))))
    {
    }
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueParser__parse_definitions__Logical( RogueClassParser* THIS, RogueLogical enumerate_0 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  else if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  if ((!(enumerate_0) && !(!!(value_3))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[403] ))));
  }
  if (!!(value_3))
  {
    if (RogueObject_instance_of(value_3,RogueTypeCmdLiteralInt32))
    {
      THIS->_this_type->prev_enum_cmd = ((RogueClassCmd*)(NULL));
      THIS->_this_type->next_enum_offset = (((RogueClassCmdLiteralInt32*)(RogueObject_as(value_3,RogueTypeCmdLiteralInt32)))->value + 1);
    }
    else
    {
      THIS->_this_type->prev_enum_cmd = value_3;
      THIS->_this_type->next_enum_offset = 1;
    }
  }
  else
  {
    if (!!(THIS->_this_type->prev_enum_cmd))
    {
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->_this_type->prev_enum_cmd), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) )))))) ))))))));
    }
    else
    {
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) ))))));
    }
    ++THIS->_this_type->next_enum_offset;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_4,(((RogueDefinition__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassDefinition*,ROGUE_CREATE_OBJECT(Definition))), t_1, name_2, value_3, enumerate_0 )))));
  RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->_this_type->definition_lookup), name_2, def_4 );
  RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->_this_type->definition_list), def_4 );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_properties__Logical( RogueClassParser* THIS, RogueLogical as_global_0 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[331] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,native_t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
    RogueProperty__mark_native( ROGUE_ARG(((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), native_t_1, ROGUE_ARG((call_ROGUEM71( 2, native_t_1 ))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  RogueProperty_List__clear( ROGUE_ARG(THIS->property_list) );
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,0);
    if (as_global_0)
    {
      p_5 = ((RogueClassProperty*)((RogueType__add_global__Token_String( ROGUE_ARG(THIS->_this_type), t_3, name_4 ))));
    }
    else
    {
      p_5 = ((RogueClassProperty*)((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_3, name_4, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
    }
    RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_5 );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      p_5->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_6,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_922_8,(THIS->property_list));
      RogueInt32 _auto_923_9 = (0);
      for (;_auto_923_9 < _auto_922_8->count;++_auto_923_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_922_8->data->objects[_auto_923_9]))));
        p_10->_type = p_type_6;
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_924_11,(THIS->property_list));
      RogueInt32 _auto_925_12 = (0);
      for (;_auto_925_12 < _auto_924_11->count;++_auto_925_12)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_924_11->data->objects[_auto_925_12]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,name_7,(Rogue_literal_strings[404]));
        if (as_global_0)
        {
          name_7 = ((RogueString*)Rogue_literal_strings[405]);
        }
        if (!!(p_13->initial_value))
        {
          p_13->_type = (call_ROGUEM127( 26, ROGUE_ARG(p_13->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          if (((void*)p_13->_type) == ((void*)NULL))
          {
            RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(p_13->initial_value) ))) );
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_13->initial_value->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[406] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[407] )))) )))) ))));
          }
        }
        else
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_13->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[408] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[409] )))) )))) ))));
        }
      }
    }
  }
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_method__Logical_Logical( RogueClassParser* THIS, RogueLogical as_global_0, RogueLogical skip_add_to_type_1 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_method) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[410] ))))
    {
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG((call_ROGUEM71( 2, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) ))));
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[411] ))))
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow), ROGUE_ARG(((RogueString*)(NULL))) );
      return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[412], ROGUE_ARG(return_type_4->name) ))));
    }
    else
    {
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassPropertyTable*,specialization_info_5,0);
  ROGUE_DEF_LOCAL_REF(RogueString*,unspecialized_name_6,(name_3));
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    if (((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) == ((void*)RogueTokenType_placeholder_id))
    {
      RogueParser__parse_method_template__Token_String_Logical( ROGUE_ARG(THIS), t_2, name_3, as_global_0 );
      return (RogueLogical)(true);
    }
    else
    {
      specialization_info_5 = ((RogueClassPropertyTable*)((RogueParser__parse_specialization_info( ROGUE_ARG(THIS) ))));
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG(((RoguePropertyValue__get_string__String( ((RogueClassPropertyValue*)specialization_info_5), Rogue_literal_strings[417] )))) ))));
    }
  }
  THIS->this_method = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_2, ROGUE_ARG(THIS->_this_type), name_3 )));
  THIS->this_method->_return_type = return_type_4;
  if (!!(specialization_info_5))
  {
    THIS->this_method->specializer_count = ((RoguePropertyValue__get_int32__String( ((RogueClassPropertyValue*)specialization_info_5), Rogue_literal_strings[418] )));
    THIS->this_method->unspecialized_name = unspecialized_name_6;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      RogueLogical first_7 = (true);
      while ((first_7 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_7 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueLogical is_flag_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_9,(((RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), true )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          param_9->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          param_9->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
        }
        if (is_flag_8)
        {
          if (!(!!(param_9->_type)))
          {
            param_9->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
          }
          if (!(!!(param_9->initial_value)))
          {
            param_9->initial_value = ((RogueType__create_default_value__Token( ROGUE_ARG(param_9->_type), ROGUE_ARG(param_9->t) )));
          }
        }
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (!(!!(return_type_4)))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
      {
        THIS->this_method->_return_type = THIS->_this_type;
        RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 8388608 );
      }
      else
      {
        THIS->this_method->_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
      }
    }
  }
  RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->attributes) );
  if (THIS->parsing_augment)
  {
    RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 65536 );
  }
  if (!(skip_add_to_type_1))
  {
    if (as_global_0)
    {
      RogueType__add_global_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
    }
    else
    {
      RogueType__add_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
    }
  }
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 32 );
    }
    if (((RogueMethod__is_native( ROGUE_ARG(THIS->this_method) ))))
    {
      RogueLogical has_parens_10 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[331] ))));
      }
      THIS->this_method->native_code = (call_ROGUEM71( 2, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ));
      if (has_parens_10)
      {
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
      {
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) );
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_11,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[419] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(type_11))) )))) )))), Rogue_literal_strings[19] )))) )))) ))));
      }
    }
    else
    {
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    }
  }
  else if (THIS->parsing_augment)
  {
    RogueParser__parse_augment_statements( ROGUE_ARG(THIS) );
  }
  else
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[291], false )))))) );
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[293], false )))))) );
  }
  return (RogueLogical)(true);
}

void RogueParser__parse_method_template__Token_String_Logical( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* name_1, RogueLogical is_global_2 )
{
  RogueParser__read( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueMethodTemplate__init__Token_Type_String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplate*,ROGUE_CREATE_OBJECT(MethodTemplate))), t_0, ROGUE_ARG(THIS->_this_type), name_1, is_global_2 )))));
  RogueLogical first_4 = (true);
  while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_4 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,param_6,(((RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(m_3->type_parameters), ROGUE_ARG(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), t2_5, ROGUE_ARG((call_ROGUEM71( 2, t2_5 ))) )))) )))));
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(m_3->template_tokens));
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__peek( ROGUE_ARG(THIS) )))->_type->is_non_method)))
  {
    RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,temp_tokens_8,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(tokens_7->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_931_9,(tokens_7));
    RogueInt32 _auto_932_10 = (0);
    for (;_auto_932_10 < _auto_931_9->count;++_auto_932_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_11,(((RogueClassToken*)(_auto_931_9->data->objects[_auto_932_10]))));
      if (((void*)t2_11->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        RogueToken_List__add__Token( temp_tokens_8, ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(RogueTokenType_identifier), t2_11, Rogue_literal_strings[63] ))) );
      }
      else
      {
        RogueToken_List__add__Token( temp_tokens_8, t2_11 );
      }
    }
  }
  m_3->parameter_count = ((RogueParser__parse_method_template_parameter_count( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), temp_tokens_8, false )))) )));
  if (!(!!(THIS->_this_type->method_templates)))
  {
    THIS->_this_type->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS->_this_type) )));
  }
  RogueMethodTemplates__add__MethodTemplate( ROGUE_ARG(THIS->_this_type->method_templates), m_3 );
}

RogueInt32 RogueParser__parse_method_template_parameter_count( RogueClassParser* THIS )
{
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) )))))
  {
    return (RogueInt32)(0);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
  {
    return (RogueInt32)(0);
  }
  RogueInt32 parameter_count_0 = (0);
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_1 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ++parameter_count_0;
    RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), true );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      RogueParser__parse_expression( ROGUE_ARG(THIS) );
    }
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      Rogue_Parser__parse_type( ROGUE_ARG(THIS) );
    }
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueInt32)(parameter_count_0);
}

void RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueClassTokenType* end_type_1 )
{
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_1, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
}

void RogueParser__parse_multi_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  THIS->cur_statement_list = statements_0;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, true );
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_augment_statements( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_0,(THIS->cur_statement_list));
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[291], true );
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[293], true );
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,cur_label_1,(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[291], true )))));
  THIS->cur_statement_list = cur_label_1->statements;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      cur_label_1 = ((RogueClassCmdLabel*)((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), true ))));
      THIS->cur_statement_list = cur_label_1->statements;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
      continue;
    }
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), ROGUE_ARG(cur_label_1->statements), true );
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  THIS->cur_statement_list = prev_statement_list_0;
}

void RogueParser__parse_single_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  THIS->cur_statement_list = statements_0;
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, false );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
      THIS->cur_statement_list = prev_statement_list_1;
      return;
    }
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
    }
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      goto _auto_934;
    }
  }
  _auto_934:;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) )))))
  {
    if (!(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) )))))
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_statement__CmdStatementList_Logical( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueLogical allow_control_structures_1 )
{
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), t_2, ROGUE_ARG((call_ROGUEM71( 2, t_2 ))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), t_2, ROGUE_ARG((call_ROGUEM71( 2, t_2 ))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, ROGUE_ARG((call_ROGUEM71( 2, t_2 ))) )))))) );
    return;
  }
  if (allow_control_structures_1)
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_if) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_if( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_which) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_which( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_forEach) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_for_each( ROGUE_ARG(THIS) )))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_block) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_block( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_contingent) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_contingent( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_while) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_while( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_loop) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_loop( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_try) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_try( ROGUE_ARG(THIS) )))))) );
      return;
    }
  }
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_local) ))))
  {
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_global) ))))
  {
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_return) ))))
  {
    if ((((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) ))) && !!(THIS->this_method->_return_type)))
    {
      ROGUE_THROW(((RogueToken__error__String( t_2, Rogue_literal_strings[325] ))));
    }
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))) );
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    }
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_3,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_3, ROGUE_ARG(((RogueClassLocal*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_yield) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), t_2 )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_throw) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_noAction) ))))
  {
    return;
  }
  else if ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace_position) )))))
  {
    RogueLogical include_position_4 = (((void*)t_2->_type) == ((void*)RogueTokenType_keyword_trace_position));
    ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_5,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)'[', true )))), ROGUE_ARG(THIS->_this_type->name) );
    if (!!(THIS->this_method))
    {
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[76] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[326] );
    }
    RogueStringBuilder__print__String( buffer_5, ROGUE_ARG(((RogueFile__filename( ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(t_2->filepath) )))) )))) );
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)':', true )))), ROGUE_ARG(t_2->line) )))), (RogueCharacter)']', true );
    RogueInt32 data_pos_6 = ((buffer_5->count + 2));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueLogical needs_space_8 = (false);
    RogueLogical first_9 = (true);
    while (((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))) && (first_9 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))))
    {
      if (first_9)
      {
        if (include_position_4)
        {
          RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[327] );
        }
        else
        {
          RogueStringBuilder__clear( buffer_5 );
        }
      }
      first_9 = ((RogueLogical)false);
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_10,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_11,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (RogueObject_instance_of(expr_11,RogueTypeCmdLiteralString))
      {
        RogueStringBuilder__print__String( buffer_5, ROGUE_ARG(((RogueClassCmdLiteralString*)(RogueObject_as(expr_11,RogueTypeCmdLiteralString)))->value) );
        needs_space_8 = ((RogueLogical)false);
      }
      else
      {
        if (needs_space_8)
        {
          RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)' ', true );
        }
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_12,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_13,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_10->filepath) )))));
        if ((((!!(parse_reader_13) && !!(start_t_10->line)) && !!(start_t_10->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_10->filepath), ROGUE_ARG(end_t_12->filepath) )))))
        {
          RogueParseReader__seek_location__Int32_Int32( parse_reader_13, ROGUE_ARG(start_t_10->line), ROGUE_ARG(start_t_10->column) );
          while ((((RogueParseReader__has_another( parse_reader_13 ))) && (parse_reader_13->line < end_t_12->line || (parse_reader_13->line == end_t_12->line && parse_reader_13->column < end_t_12->column))))
          {
            RogueCharacter ch_14 = (((RogueParseReader__read( parse_reader_13 ))));
            if (((RogueString__operatorEQUALSEQUALS__String( Rogue_literal_strings[279], ROGUE_ARG(((RogueCharacter__to_String( ch_14 )))) ))))
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_2, Rogue_literal_strings[279], 0 )))))) );
            }
            RogueStringBuilder__print__Character_Logical( buffer_5, ch_14, true );
          }
          RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[328] );
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), expr_11 );
          needs_space_8 = ((RogueLogical)true);
        }
      }
    }
    if ((include_position_4 && !!(args_7->count)))
    {
      RogueStringBuilder__insert_spaces__Int32_Int32( buffer_5, data_pos_6, ROGUE_ARG((((data_pos_6 + 3) & -4) - data_pos_6)) );
    }
    if ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[329] ))));
    }
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_5 )))), args_7 )))))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_15 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_16,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_17,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_18,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_18 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_19,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_15)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return;
    }
    if (!(!!(message_18)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_20,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_21,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_16->filepath) )))));
      if ((((!!(parse_reader_21) && !!(start_t_16->line)) && !!(start_t_16->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_16->filepath), ROGUE_ARG(end_t_19->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_21, ROGUE_ARG(start_t_16->line), ROGUE_ARG(start_t_16->column) );
        while ((((RogueParseReader__has_another( parse_reader_21 ))) && (parse_reader_21->line < end_t_19->line || (parse_reader_21->line == end_t_19->line && parse_reader_21->column < end_t_19->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_20, ROGUE_ARG(((RogueParseReader__read( parse_reader_21 )))), true );
        }
      }
      message_18 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_20 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_22,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_22->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_2, temp_var_22, true )))))) );
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_2, expr_17, message_18, temp_var_22 )))))) );
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ensure) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_ensure( ROGUE_ARG(THIS) )))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    if (THIS->parsing_augment)
    {
      ROGUE_THROW(((RogueToken__error__String( t_2, Rogue_literal_strings[330] ))));
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), false )))))) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhile) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 8, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeForEach) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 9, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeBlock) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 0, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeContingent) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 1, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeLoop) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 7, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeIf) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeTry) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 4, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhich) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 5, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nextIteration) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), t_2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_necessary) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_sufficient) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), 1 )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), -1 )))))) );
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expression_23,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_2, expression_23, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  if ((call_ROGUEM82( 21, ROGUE_ARG(t_2->_type) )))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, expression_23, ROGUE_ARG(t_2->_type), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_23, 1 )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_23, -1 )))))) );
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,t_type_24,(t_2->_type));
  if ((call_ROGUEM82( 21, t_type_24 )))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,target_25,(expression_23));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_26,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, target_25, t_type_24, new_value_26 )))))) );
    return;
  }
  if (!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_27,(((RogueClassCmdAccess*)(RogueObject_as(expression_23,RogueTypeCmdAccess)))));
    if ((!!(access_27) && ((void*)access_27->args) == ((void*)NULL)))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_28,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      while ((!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))) && !(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))))))
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_28), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      access_27->args = args_28;
    }
  }
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), expression_23 );
}

RogueClassCmdWhich* RogueParser__parse_which( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,cmd_which_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdWhichCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))) )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_case) ))))
  {
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_2,(((RogueCmdWhich__add_case__Token( cmd_which_1, t_0 )))));
    RogueLogical first_3 = (true);
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_3 = ((RogueLogical)false);
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_case_2->conditions)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_2->statements) );
  }
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
  {
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_4,(((RogueCmdWhich__add_case_others__Token( cmd_which_1, t_0 )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_4->statements) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhich), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdWhich*)(cmd_which_1);
}

RogueLogical RogueParser__parse_class_level_element( RogueClassParser* THIS )
{
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueParser__parse_native_element( ROGUE_ARG(THIS) ))));
}

RogueLogical RogueParser__parse_unit_test( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unitTest) )))))
  {
    return (RogueLogical)(false);
  }
  RogueLogical is_multi_line_1 = (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,original_type_2,(THIS->_this_type));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,original_method_3,(THIS->this_method));
  THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[69] )));
  THIS->this_method = ((RogueProgram__get_run_tests_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_4,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  if (is_multi_line_1)
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endUnitTest), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
  }
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_block_4))) );
  }
  THIS->_this_type = original_type_2;
  THIS->this_method = original_method_3;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_native_element( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,code_1,((call_ROGUEM71( 2, t_0 ))));
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 );
    }
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,code_2,((call_ROGUEM71( 2, t_0 ))));
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_2 ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), code_2 );
    }
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,pattern_3,((call_ROGUEM71( 2, t_0 ))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_0, pattern_3 )))))) );
    return (RogueLogical)(true);
  }
  else
  {
    return (RogueLogical)(false);
  }
}

RogueClassCmdContingent* RogueParser__parse_contingent( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_1,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->statements) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_satisfied) ))))
  {
    cmd_contingent_1->satisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->satisfied_statements) );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unsatisfied) ))))
  {
    cmd_contingent_1->unsatisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->unsatisfied_statements) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endContingent), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdContingent*)(cmd_contingent_1);
}

RogueClassCmdTry* RogueParser__parse_try( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,cmd_try_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))) )))));
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_try_1->statements) );
  while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_catch) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,cmd_catch_2,(((RogueCmdTry__add_catch__Token( cmd_try_1, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,error_t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,error_name_4,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    cmd_catch_2->error_var = ((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), error_t_3, error_name_4, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_catch_2->statements) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endTry), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdTry*)(cmd_try_1);
}

void RogueParser__parse_local_or_global__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueLocal_List__clear( ROGUE_ARG(THIS->local_declarations) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_1, name_3, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_declarations), v_4 );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      v_4->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1029_6,(THIS->local_declarations));
      RogueInt32 _auto_1030_7 = (0);
      for (;_auto_1030_7 < _auto_1029_6->count;++_auto_1030_7)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueClassLocal*)(_auto_1029_6->data->objects[_auto_1030_7]))));
        v_8->_type = type_5;
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1031_9,(THIS->local_declarations));
      RogueInt32 _auto_1032_10 = (0);
      for (;_auto_1032_10 < _auto_1031_9->count;++_auto_1032_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_11,(((RogueClassLocal*)(_auto_1031_9->data->objects[_auto_1032_10]))));
        if ((((void*)v_11->_type) == ((void*)NULL) && !!(v_11->initial_value)))
        {
          v_11->_type = (call_ROGUEM127( 26, ROGUE_ARG(v_11->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
        }
      }
    }
  }
  if (!!(statements_0))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1033_12,(THIS->local_declarations));
      RogueInt32 _auto_1034_13 = (0);
      for (;_auto_1034_13 < _auto_1033_12->count;++_auto_1034_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_1033_12->data->objects[_auto_1034_13]))));
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_14->t), v_14, false )))))) );
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1035_15,(THIS->local_declarations));
      RogueInt32 _auto_1036_16 = (0);
      for (;_auto_1036_16 < _auto_1035_15->count;++_auto_1036_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_17,(((RogueClassLocal*)(_auto_1035_15->data->objects[_auto_1036_16]))));
        RogueProperty_List__add__Property( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->global_properties), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(v_17->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(v_17->name), ROGUE_ARG(v_17->_type), ROGUE_ARG(v_17->initial_value) )))) );
      }
    }
  }
}

RogueClassType* Rogue_Parser__parse_type( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_0,0);
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!!((call_ROGUEM76( 23, t_1 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,((call_ROGUEM76( 23, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) )))))
    {
      name_0 = ((RogueString*)type_2->name);
      for (;;)
      {
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
        {
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[220] ))));
        }
        else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
        {
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[240] ))));
        }
        else
        {
          goto _auto_1037;
        }
      }
      _auto_1037:;
    }
    else
    {
      return (RogueClassType*)(type_2);
    }
  }
  else
  {
    name_0 = ((RogueString*)((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, name_0 )))));
  return (RogueClassType*)(type_3);
}

RogueString* RogueParser__parse_possible_type__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), allow_at_sign_0 )))));
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, ROGUE_ARG(((RogueParser__parse_specialization_string( ROGUE_ARG(THIS) )))) ))));
  }
  else if (((RogueString__operatorEQUALSEQUALS__String( name_2, Rogue_literal_strings[300] ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_3,0);
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        parameter_types_3 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
        RogueLogical first_5 = (true);
        while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          first_5 = ((RogueLogical)false);
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,type_t_6,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
          ROGUE_DEF_LOCAL_REF(RogueString*,type_name_7,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
          }
          else
          {
            RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), type_t_6, type_name_7 )))) );
          }
        }
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      RogueLogical has_parens_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
      return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
      if (has_parens_8)
      {
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    name_2 = ((RogueString*)((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, parameter_types_3, return_type_4 )))->name);
  }
  for (;;)
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
    {
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[220] ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
    {
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[240] ))));
    }
    else
    {
      goto _auto_1038;
    }
  }
  _auto_1038:;
  return (RogueString*)(name_2);
}

RogueClassCmdIf* RogueParser__parse_if( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_1,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))), 2 )))));
  cmd_if_1->condition = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_2,(cmd_if_1));
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      RogueInt32 starting_position_3 = (THIS->reader->position);
      RogueParser__read( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_5,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_4, 3 )))));
        RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_5->statements) );
        cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_2->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_5))) );
        cur_if_2 = ((RogueClassCmdIf*)cmd_else_if_5);
      }
      else
      {
        THIS->reader->position = starting_position_3;
        goto _auto_1039;
      }
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1039:;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) == ((void*)RogueTokenType_eol)))
    {
      RogueParser__read( ROGUE_ARG(THIS) );
      cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_2->else_statements) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endIf), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_6,(cmd_if_1));
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      RogueInt32 starting_position_7 = (THIS->reader->position);
      RogueParser__read( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_8,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        THIS->reader->position = starting_position_7;
        goto _auto_1040;
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_8, 3 )))));
        RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_9->statements) );
        cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_6->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) );
        cur_if_6 = ((RogueClassCmdIf*)cmd_else_if_9);
        RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
      }
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1040:;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) != ((void*)RogueTokenType_eol)))
    {
      RogueParser__read( ROGUE_ARG(THIS) );
      cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_6->else_statements) );
    }
  }
  return (RogueClassCmdIf*)(cmd_if_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_loop( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 7, ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_2,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    control_var_2->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, 1 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    last_var_3->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAdjustLocal*,step_cmd_4,(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), t_0, control_var_2, 1 )))));
    cmd_loop_1->condition = ((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_2 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_3 )))))) )))))));
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, control_var_2 );
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, last_var_3 );
    RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_1, ROGUE_ARG(((RogueClassCmd*)(step_cmd_4))) );
  }
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_loop_1->statements) );
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endLoop), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdGenericLoop*)(cmd_loop_1);
}

RogueClassCmdBlock* RogueParser__parse_block( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_1,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_1->statements) );
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endBlock), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdBlock*)(cmd_block_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_while( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 8, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhile), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  return (RogueClassCmdGenericLoop*)(cmd_while_1);
}

RogueClassCmd* RogueParser__parse_for_each( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_2,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(expr_2,RogueTypeCmdAccess)))));
  if (!!(access_3))
  {
    if ((!!(access_3->context) || !!(access_3->args)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[315] ))));
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,index_var_name_4,0);
      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_3->name), Rogue_literal_strings[316] ))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[317] ))));
      }
      else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[316] ))))
      {
        index_var_name_4 = ((RogueString*)((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false ))));
      }
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_in) ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_5,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_6,(((RogueClassCmdRange*)(RogueObject_as(collection_5,RogueTypeCmdRange)))));
        if (!!(range_6))
        {
          if (!!(index_var_name_4))
          {
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(range_6->t), Rogue_literal_strings[318] ))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_7,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(access_3->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          control_var_7->initial_value = range_6->first;
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_8,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          last_var_8->initial_value = range_6->last;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_9,(((RogueClassCmd*)(NULL))));
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_value_10,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_6->t), control_var_7, ROGUE_ARG(RogueTokenType_symbol_plus_equals), step_value_10 ))))));
          }
          else if ((RogueObject_instance_of(range_6,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_6,RogueTypeCmdRangeUpToLessThan)))
          {
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_6->t), control_var_7, 1 ))))));
          }
          else
          {
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_6->t), control_var_7, -1 ))))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_11,0);
          if (RogueObject_instance_of(range_6,RogueTypeCmdRangeUpTo))
          {
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          else if (RogueObject_instance_of(range_6,RogueTypeCmdRangeUpToLessThan))
          {
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          else
          {
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_12,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_11, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_12, control_var_7 );
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_12, last_var_8 );
          RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_12, step_cmd_9 );
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_12->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_12)));
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_13,0);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            step_cmd_13 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_14,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(access_3->name), index_var_name_4, collection_5, step_cmd_13, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_14->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_14)));
        }
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_of) ))))
      {
        if (!!(index_var_name_4))
        {
          ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[319] ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_15,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_16,(((RogueClassCmdRange*)(RogueObject_as(collection_15,RogueTypeCmdRange)))));
        if (!!(range_16))
        {
          ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[320] ))));
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_17,0);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            step_cmd_17 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_18,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(((RogueString*)(NULL))), ROGUE_ARG(access_3->name), collection_15, step_cmd_17, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_18->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_18)));
        }
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[321] ))));
      }
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_19,(((RogueClassCmdRange*)(RogueObject_as(expr_2,RogueTypeCmdRange)))));
    if (!!(range_19))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_20,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      control_var_20->initial_value = range_19->first;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_21,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      last_var_21->initial_value = range_19->last;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_22,0);
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_value_23,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_19->t), control_var_20, ROGUE_ARG(RogueTokenType_symbol_plus_equals), step_value_23 ))))));
      }
      else if ((RogueObject_instance_of(range_19,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_19,RogueTypeCmdRangeUpToLessThan)))
      {
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_19->t), control_var_20, 1 ))))));
      }
      else
      {
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_19->t), control_var_20, -1 ))))));
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_24,0);
      if (RogueObject_instance_of(range_19,RogueTypeCmdRangeUpTo))
      {
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      else if (RogueObject_instance_of(range_19,RogueTypeCmdRangeUpToLessThan))
      {
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      else
      {
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_25,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_24, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_25, control_var_20 );
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_25, last_var_21 );
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_25, step_cmd_22 );
      if (has_parens_1)
      {
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_25->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
      return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_25)));
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[322] ))));
    }
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[323] )))) )))) );
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(expr_2->t), Rogue_literal_strings[324] ))));
}

RogueClassToken* RogueParser__peek( RogueClassParser* THIS )
{
  return (RogueClassToken*)(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) ))));
}

RogueClassToken* RogueParser__read( RogueClassParser* THIS )
{
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueString* RogueParser__read_identifier__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  RogueLogical direct_access_1 = (false);
  if (allow_at_sign_0)
  {
    direct_access_1 = ((RogueLogical)((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) ))));
  }
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_type_identifier) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,result_2,((call_ROGUEM76( 23, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))->name));
      if (direct_access_1)
      {
        result_2 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[209], result_2 ))));
      }
      return (RogueString*)(result_2);
    }
    ROGUE_THROW(((RogueParser__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[80] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 16, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,result_3,((call_ROGUEM71( 2, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
  if (direct_access_1)
  {
    result_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[209], result_3 ))));
  }
  return (RogueString*)(result_3);
}

RogueClassCmd* RogueParser__parse_expression( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  return (RogueClassCmd*)(((RogueParser__parse_range( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_range( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_range__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_range__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upTo) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpTo*,result_2,(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_2->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upToLessThan) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpToLessThan*,result_3,(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_3->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_downTo) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeDownTo*,result_4,(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_4->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
  else
  {
    return (RogueClassCmd*)(lhs_0);
  }
}

RogueClassCmd* RogueParser__parse_logical_xor( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_xor) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_or( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_and( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_comparison( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_comparison__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_eq) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_is) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ne) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_isNot) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_lt) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_gt) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_le) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ge) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_instanceOf) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_notInstanceOf) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) )))))))) ))))))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_xor( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_tilde) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_or( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueInt32 starting_pos_2 = (THIS->reader->position);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_vertical_bar) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,rhs_3,(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))));
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), t_1, lhs_0, rhs_3 )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_and( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_shift( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_shift__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_shift__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_left) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right_x) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_add_subtract( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_add_subtract__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_times) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_slash) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_percent) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_power( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_power__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_caret) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_pre_unary( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  return (RogueClassCmd*)(((RogueParser__parse_post_unary( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_post_unary( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_member_access( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_post_unary__Cmd( RogueClassParser* THIS, RogueClassCmd* operand_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), t_1, operand_0 )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_isReference) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdIsReference__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIsReference*,ROGUE_CREATE_OBJECT(CmdIsReference))), t_1, operand_0 )))))) ))));
  }
  return (RogueClassCmd*)(operand_0);
}

RogueClassCmd* RogueParser__parse_member_access( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_term( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_member_access__Cmd( RogueClassParser* THIS, RogueClassCmd* context_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,access_2,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_1, context_0 )))));
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), access_2 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdElementAccess*,access_3,(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), t_1, context_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(access_3))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,to_type_4,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[303] ))));
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,convert_fn_5,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdListConvert__init__Token_Cmd_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdListConvert*,ROGUE_CREATE_OBJECT(CmdListConvert))), t_1, context_0, to_type_4, convert_fn_5 )))))) ))));
    }
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), t_1, context_0, to_type_4 )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueString*,name_6,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueType_List*,arg_types_7,0);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      arg_types_7 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
      RogueLogical first_8 = (true);
      while ((first_8 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_8 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueType_List__add__Type( arg_types_7, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_9,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      return_type_9 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), t_1, context_0, name_6, ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), arg_types_7 )))), return_type_9 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_as) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_10,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), t_1, context_0, as_type_10 )))))))) ))));
  }
  return (RogueClassCmd*)(context_0);
}

RogueClassCmd* RogueParser__parse_access__Token_Cmd( RogueClassParser* THIS, RogueClassToken* t_0, RogueClassCmd* context_1 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,0);
    if (!!(context_1))
    {
      context_type_2 = ((RogueClassType*)(call_ROGUEM127( 26, context_1, ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) )));
    }
    else
    {
      context_type_2 = ((RogueClassType*)THIS->_this_type);
    }
    if (!(!!(context_type_2)))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[296] ))));
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,id_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_3, Rogue_literal_strings[297] ))))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), t_0, context_type_2 ))))));
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[298] ))));
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_4,(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), true )))) )))));
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    access_4->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
    access_4->named_args = ((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), ROGUE_ARG(access_4->args) )));
  }
  access_4->context = context_1;
  return (RogueClassCmd*)(((RogueClassCmd*)(access_4)));
}

RogueCmdNamedArg_List* RogueParser__parse_args__CmdArgs( RogueClassParser* THIS, RogueClassCmdArgs* args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_1,0);
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,end_type_2,(RogueTokenType_symbol_close_paren));
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), end_type_2 )))))
  {
    RogueLogical first_3 = (true);
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_3 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
      {
        if (!(!!(named_args_1)))
        {
          named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) ))));
        }
        RogueLogical is_negative_4 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,arg_t_5,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_6,(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), arg_t_5, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), ROGUE_ARG(((RogueClassCmd*)(NULL))), false )))));
        arg_6->is_negative = is_negative_4;
        RogueCmdNamedArg_List__add__CmdNamedArg( named_args_1, arg_6 );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          arg_6->value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
      }
      else
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_0), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_2, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  return (RogueCmdNamedArg_List*)(named_args_1);
}

RogueString* RogueParser__parse_specialization_string( RogueClassParser* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[234] );
  RogueLogical first_0 = (true);
  while ((first_0 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_0)
    {
      first_0 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueToken_List*)(NULL))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[143] );
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueClassType* RogueParser__parse_specialization_type__Int32( RogueClassParser* THIS, RogueInt32 index_0 )
{
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueInt32 i_1 = (index_0);
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_2)
    {
      first_2 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), ROGUE_ARG(((RogueToken_List*)(NULL))) );
    if (i_1 == 0)
    {
      return (RogueClassType*)(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) )))) ))));
    }
    --i_1;
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[577] )))) )))) );
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[578] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], index_0 )))) )))), Rogue_literal_strings[76] )))) )))) ))));
}

RogueClassPropertyTable* RogueParser__parse_specialization_info( RogueClassParser* THIS )
{
  RogueInt32 count_0 = (0);
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[234] );
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_1)
    {
      first_1 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    ++count_0;
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueToken_List*)(NULL))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[143] );
  return (RogueClassPropertyTable*)(((RoguePropertyTable__set__String_PropertyValue( ROGUE_ARG(((RoguePropertyTable__set__String_PropertyValue( ROGUE_ARG(((RoguePropertyTable__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPropertyTable*,ROGUE_CREATE_OBJECT(PropertyTable))) )))), Rogue_literal_strings[417], ROGUE_ARG((RoguePropertyValue__create__String( ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) )))) ))) )))), Rogue_literal_strings[418], ROGUE_ARG((RoguePropertyValue__create__Int32( count_0 ))) ))));
}

RogueInt32 RogueParser__parse_specializer_count( RogueClassParser* THIS )
{
  RogueInt32 num_specializers_0 = (0);
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_1)
    {
      first_1 = ((RogueLogical)false);
    }
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), ROGUE_ARG(((RogueToken_List*)(NULL))) );
    ++num_specializers_0;
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueInt32)(num_specializers_0);
}

void RogueParser__parse_specializer__StringBuilder_Token_List( RogueClassParser* THIS, RogueStringBuilder* buffer_0, RogueToken_List* tokens_1 )
{
  RogueInt32 nesting_level_2 = (1);
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[299] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_backslash) ))))
    {
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[212] );
      if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
      {
        ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[79] ))));
      }
      t_3 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
      RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(t_3))) );
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
    }
    else if (((void*)t_3->_type) == ((void*)RogueTokenType_symbol_comma))
    {
      if (nesting_level_2 == 1)
      {
        return;
      }
      RogueParser__read( ROGUE_ARG(THIS) );
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[234] );
      ++nesting_level_2;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize) ))))
    {
      --nesting_level_2;
      if (nesting_level_2 == 0)
      {
        return;
      }
      else
      {
        RogueParser__read( ROGUE_ARG(THIS) );
        if (!!(tokens_1))
        {
          RogueToken_List__add__Token( tokens_1, t_3 );
        }
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[143] );
      }
    }
    else
    {
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,st_4,((call_ROGUEM71( 2, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
      if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'"', true )))), st_4 )))), (RogueCharacter)'"', true );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, st_4 );
      }
    }
  }
}

RogueClassCmd* RogueParser__parse_term( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[304] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    return (RogueClassCmd*)(result_1);
  }
  else if (((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_2,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(result_2,RogueTypeCmdAccess)))));
    if (((!!(access_3) && ((RogueString__ends_with__Character( ROGUE_ARG(access_3->name), (RogueCharacter)']' )))) && !(!!(access_3->args))))
    {
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        return (RogueClassCmd*)(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(access_3->t), ROGUE_ARG(access_3->name) ))));
      }
    }
    return (RogueClassCmd*)(result_2);
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_type_identifier) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_4,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    return (RogueClassCmd*)(result_4);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueLogical first_5 = (true);
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_5 = ((RogueLogical)false);
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_0, ROGUE_ARG((call_ROGUEM71( 2, t_0 ))), args_6 ))))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG((call_ROGUEM71( 2, t_0 ))), 0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_null) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), t_0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, ROGUE_ARG((call_ROGUEM75( 22, t_0 ))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer) ))))
  {
    RogueInt32 value_7 = ((call_ROGUEM73( 20, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, value_7 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long) ))))
  {
    RogueInt64 value_8 = ((call_ROGUEM74( 21, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), t_0, value_8 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character) ))))
  {
    RogueCharacter value_9 = ((call_ROGUEM72( 19, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), t_0, value_9 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), t_0, ROGUE_ARG(THIS->_this_type) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_pi) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, 3.141592653589793 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_infinity) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (1.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_NaN) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (0.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateList*,list_10,(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) )))))
    {
      RogueLogical first_11 = (true);
      while ((first_11 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_11 = ((RogueLogical)false);
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)list_10->args)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(list_10)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_brace) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_bracket) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_braces) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[307], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[308], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_prior) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueString*,name_12,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      name_12 = ((RogueString*)((RogueString__operatorPLUS__String( name_12, ROGUE_ARG(((RogueParser__parse_specialization_string( ROGUE_ARG(THIS) )))) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_13,0);
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_14,0);
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      args_13 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
      named_args_14 = ((RogueCmdNamedArg_List*)((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_13 ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), t_0, name_12, args_13, named_args_14 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_var_15,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_16,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, result_var_15, false )))))) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_16, result_var_15 )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(result_var_15->name) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_function) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_17,0);
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_18,0);
    RogueLogical is_generic_19 = (false);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        parameters_17 = ((RogueFnParam_List*)((RogueFnParam_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))) ))));
        RogueLogical first_20 = (true);
        while ((first_20 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          first_20 = ((RogueLogical)false);
          ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_21,(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) )))));
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_22,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
          RogueLogical cur_generic_23 = (false);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            param_21->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
          }
          else
          {
            cur_generic_23 = ((RogueLogical)true);
          }
          if ((!!(parameters_17->count) && is_generic_19 != cur_generic_23))
          {
            ROGUE_THROW(((RogueToken__error__String( t2_22, Rogue_literal_strings[312] ))));
          }
          is_generic_19 = ((RogueLogical)cur_generic_23);
          RogueFnParam_List__add__FnParam( parameters_17, param_21 );
        }
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    RogueLogical parsed_arrow_24 = (false);
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_25,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      if (is_generic_19)
      {
        ROGUE_THROW(((RogueToken__error__String( t2_25, Rogue_literal_strings[313] ))));
      }
      parsed_arrow_24 = ((RogueLogical)true);
      return_type_18 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,with_args_26,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_with) ))))
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        with_args_26 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
        RogueLogical first_27 = (true);
        while ((first_27 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          first_27 = ((RogueLogical)false);
          t2_25 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
          ROGUE_DEF_LOCAL_REF(RogueString*,name_28,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_29,0);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
          {
            value_29 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          else
          {
            value_29 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t2_25, name_28 ))))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_30,(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), name_28, value_29 )))));
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            RogueFnArg__set_type__Type( arg_30, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
          }
          RogueFnArg_List__add__FnArg( with_args_26, arg_30 );
        }
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
    if (!(parsed_arrow_24))
    {
      t2_25 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
      {
        if (((!!(parameters_17) && !!(parameters_17->count)) && !(is_generic_19)))
        {
          ROGUE_THROW(((RogueToken__error__String( t2_25, Rogue_literal_strings[314] ))));
        }
        is_generic_19 = ((RogueLogical)true);
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_31,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    if ((!(is_generic_19) && ((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
    {
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_31 );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endFunction), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    else
    {
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_31 );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), t_0, parameters_17, return_type_18, with_args_26, statements_31, is_generic_19 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_32 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    if (has_parens_32)
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[331] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,code_33,((call_ROGUEM71( 2, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    if (has_parens_32)
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,result_type_34,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      result_type_34 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_0, code_33, result_type_34 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_select) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,cmd_select_35,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdSelectCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))) )))) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,comparison_var_36,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, comparison_var_36, true )))))) );
      comparison_var_36->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
      cmd_select_35->local_info = comparison_var_36;
      cmd_select_35->expression = comparison_var_36->initial_value;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueLogical first_37 = (true);
    while ((first_37 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) )))))
    {
      first_37 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_38,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG((call_ROGUEM163( 10, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), 1 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(cmd_select_35->cases), select_case_38 );
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
      {
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        goto _auto_1133;
      }
      else
      {
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          select_case_38->value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        else if (select_case_38->conditions->count > 1)
        {
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        }
      }
    }
    _auto_1133:;
    if (((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions->count > 1)
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[332] ))));
    }
    else if (!!(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->value))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[333] ))));
    }
    else
    {
      ((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->value = ((RogueCmd_List__remove_at__Int32( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions), 0 )));
      RogueCmd_List__clear( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_select_35)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_39 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_40,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_41,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_42,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_42 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_43,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_39)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return (RogueClassCmd*)(expr_41);
    }
    if (!(!!(message_42)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_44,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_45,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_40->filepath) )))));
      if ((((!!(parse_reader_45) && !!(start_t_40->line)) && !!(start_t_40->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_40->filepath), ROGUE_ARG(end_t_43->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_45, ROGUE_ARG(start_t_40->line), ROGUE_ARG(start_t_40->column) );
        while ((((RogueParseReader__has_another( parse_reader_45 ))) && (parse_reader_45->line < end_t_43->line || (parse_reader_45->line == end_t_43->line && parse_reader_45->column < end_t_43->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_44, ROGUE_ARG(((RogueParseReader__read( parse_reader_45 )))), true );
        }
      }
      message_42 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_44 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_46,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_46->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_46, true )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_0, expr_41, message_42, temp_var_46 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_require) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_47 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_48,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_49,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_50,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_50 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_51,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_47)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(!!(message_50)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_52,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_53,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_48->filepath) )))));
      if ((((!!(parse_reader_53) && !!(start_t_48->line)) && !!(start_t_48->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_48->filepath), ROGUE_ARG(end_t_51->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_53, ROGUE_ARG(start_t_48->line), ROGUE_ARG(start_t_48->column) );
        while ((((RogueParseReader__has_another( parse_reader_53 ))) && (parse_reader_53->line < end_t_51->line || (parse_reader_53->line == end_t_51->line && parse_reader_53->column < end_t_51->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_52, ROGUE_ARG(((RogueParseReader__read( parse_reader_53 )))), true );
        }
      }
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_52, Rogue_literal_strings[334] )))), ROGUE_ARG(THIS->_this_type->name) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[335] );
      message_50 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_52 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_54,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_54->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_54, true )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), t_0, expr_49, message_50, temp_var_54 ))))));
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[336], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))), Rogue_literal_strings[43] )))) ))));
  }
}

RogueClassCmd* RogueParser__parse_ensure( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueLogical first_3 = (true);
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_ampersand) )))))
  {
    first_3 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,cmd_ensure_5,0);
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_7,(((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_6 )))));
      cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, args_6, named_args_7 ))));
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_8,(((RogueClassCmdAccess*)(RogueObject_as(expr_4,RogueTypeCmdAccess)))));
      if (!!(access_8))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(access_8->args));
        if (!(!!(args_9)))
        {
          args_9 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_10,(access_8->named_args));
        access_8->args = ((RogueClassCmdArgs*)(NULL));
        access_8->named_args = ((RogueCmdNamedArg_List*)(NULL));
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, ROGUE_ARG(((RogueClassCmd*)(access_8))), args_9, named_args_10 ))));
      }
      else
      {
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) ))));
      }
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_block_2->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_ensure_5))) );
  }
  if (has_parens_1)
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  if (cmd_block_2->statements->count == 1)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2->statements->data->objects[0])));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2)));
  }
}

RogueClassCmd* RogueParser__parse_property_table__Token( RogueClassParser* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,table_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[307], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace) ))))
  {
    return (RogueClassCmd*)(table_1);
  }
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,key_3,0);
    if (((RogueParser__next_is_identifier__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString*)(NULL))) ))))
    {
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      key_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), 0 ))))));
    }
    else
    {
      key_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
      }
    }
    else
    {
      value_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
    }
    table_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(key_3->t), table_1, Rogue_literal_strings[310], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), key_3, value_4 )))) ))))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(table_1);
}

RogueClassCmd* RogueParser__parse_property_list__Token( RogueClassParser* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,list_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[308], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))
  {
    return (RogueClassCmd*)(list_1);
  }
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    list_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(value_3->t), list_1, Rogue_literal_strings[309], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), value_3 )))) ))))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(list_1);
}

RogueClassCmd* RogueParser__parse_typed_literal_list__Token_String( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* list_type_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTypedLiteralList*,list_2,(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), t_0, list_type_name_1, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  RogueLogical first_3 = (true);
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_3 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      if (((RogueString__ends_with__String( list_type_name_1, Rogue_literal_strings[305] ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,item_4,(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueString__leftmost__Int32( list_type_name_1, -2 )))) )))));
        RogueCmdTypedLiteralList__add__Cmd( list_2, item_4 );
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[306] ))));
      }
    }
    else
    {
      RogueCmdTypedLiteralList__add__Cmd( list_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(list_2)));
}

RogueClassTokenReader* RogueTokenReader__init_object( RogueClassTokenReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTokenReader*)(THIS);
}

RogueString* RogueTokenReader__type_name( RogueClassTokenReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[773]);
}

RogueClassTokenReader* RogueTokenReader__init__Token_List( RogueClassTokenReader* THIS, RogueToken_List* _auto_113_0 )
{
  THIS->tokens = _auto_113_0;
  THIS->count = THIS->tokens->count;
  return (RogueClassTokenReader*)(THIS);
}

RogueClassError* RogueTokenReader__error__String( RogueClassTokenReader* THIS, RogueString* message_0 )
{
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))), message_0 ))))));
  }
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

RogueLogical RogueTokenReader__has_another( RogueClassTokenReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueLogical RogueTokenReader__next_is__TokenType( RogueClassTokenReader* THIS, RogueClassTokenType* type_0 )
{
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((void*)((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))->_type) == ((void*)type_0));
}

RogueLogical RogueTokenReader__next_is_statement_token( RogueClassTokenReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  if ((call_ROGUEM82( 22, ROGUE_ARG(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))->_type) )))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(true);
}

RogueClassToken* RogueTokenReader__peek( RogueClassTokenReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position])));
}

RogueClassToken* RogueTokenReader__peek__Int32( RogueClassTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  if ((THIS->position + num_ahead_0) >= THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[(THIS->position + num_ahead_0)])));
}

RogueClassToken* RogueTokenReader__read( RogueClassTokenReader* THIS )
{
  ++THIS->position;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[(THIS->position - 1)])));
}

RogueToken_List* RogueToken_List__init_object( RogueToken_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__init( RogueToken_List* THIS )
{
  RogueToken_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueToken_List*)(THIS);
}

RogueString* RogueToken_List__to_String( RogueToken_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1146_2,(THIS));
    RogueInt32 _auto_1147_3 = (0);
    for (;_auto_1147_3 < _auto_1146_2->count;++_auto_1147_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_4,(((RogueClassToken*)(_auto_1146_2->data->objects[_auto_1147_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM71( 2, value_4 ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List__type_name( RogueToken_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[842]);
}

RogueToken_List* RogueToken_List__init__Int32( RogueToken_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassToken*), true );
  }
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token( RogueToken_List* THIS, RogueClassToken* value_0 )
{
  ((RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token_List( RogueToken_List* THIS, RogueToken_List* other_0 )
{
  RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1152_1,(other_0));
    RogueInt32 _auto_1153_2 = (0);
    for (;_auto_1153_2 < _auto_1152_1->count;++_auto_1153_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_3,(((RogueClassToken*)(_auto_1152_1->data->objects[_auto_1153_2]))));
      RogueToken_List__add__Token( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueToken_List*)(THIS);
}

RogueInt32 RogueToken_List__capacity( RogueToken_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

void RogueToken_List__discard_from__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueClassToken* RogueToken_List__last( RogueToken_List* THIS )
{
  return (RogueClassToken*)(((RogueClassToken*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueClassListRebuilder_Token_* RogueToken_List__rebuilder( RogueToken_List* THIS )
{
  return (RogueClassListRebuilder_Token_*)(((RogueListRebuilder_Token___init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRebuilder_Token_*,ROGUE_CREATE_OBJECT(ListRebuilder_Token_))), ROGUE_ARG(THIS) ))));
}

RogueToken_List* RogueToken_List__reserve__Int32( RogueToken_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueToken_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueToken_List*)(THIS);
}

RogueClassToken* RogueToken_List__remove_at__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,result_1,(((RogueClassToken*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassToken*)(result_1);
}

RogueClassToken* RogueToken_List__remove_last( RogueToken_List* THIS )
{
  return (RogueClassToken*)(((RogueToken_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassToken* RogueToken__init_object( RogueClassToken* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassToken*)(THIS);
}

RogueString* RogueToken__to_String( RogueClassToken* THIS )
{
  return (RogueString*)(((RogueTokenType__to_String__Token( ROGUE_ARG(THIS->_type), ROGUE_ARG(THIS) ))));
}

RogueString* RogueToken__type_name( RogueClassToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[772]);
}

RogueClassToken* RogueToken__init__TokenType( RogueClassToken* THIS, RogueClassTokenType* _auto_105_0 )
{
  THIS->_type = _auto_105_0;
  return (RogueClassToken*)(THIS);
}

RogueClassRogueError* RogueToken__error__String( RogueClassToken* THIS, RogueString* message_0 )
{
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->line), ROGUE_ARG(THIS->column) ))));
}

RogueString* RogueToken__filename( RogueClassToken* THIS )
{
  if (!(!!(THIS->filepath)))
  {
    return (RogueString*)(Rogue_literal_strings[703]);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,f_0,((call_ROGUEM27( 19, ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath) ))));
  if (!!(f_0))
  {
    return (RogueString*)(f_0);
  }
  f_0 = ((RogueString*)(RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
  RogueTable_String_String___set__String_String( ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath), f_0 );
  return (RogueString*)(f_0);
}

RogueLogical RogueToken__is_directive( RogueClassToken* THIS )
{
  return (RogueLogical)((call_ROGUEM82( 20, ROGUE_ARG(THIS->_type) )));
}

RogueLogical RogueToken__is_structure( RogueClassToken* THIS )
{
  return (RogueLogical)((call_ROGUEM82( 22, ROGUE_ARG(THIS->_type) )));
}

RogueString* RogueToken__quoted_name( RogueClassToken* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[81] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 2, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[81] )))) ))));
}

RogueClassToken* RogueToken__set_location__String_Int32_Int32( RogueClassToken* THIS, RogueString* _auto_106_0, RogueInt32 _auto_107_1, RogueInt32 _auto_108_2 )
{
  THIS->column = _auto_108_2;
  THIS->line = _auto_107_1;
  THIS->filepath = _auto_106_0;
  return (RogueClassToken*)(THIS);
}

RogueClassToken* RogueToken__set_location__Token( RogueClassToken* THIS, RogueClassToken* existing_0 )
{
  THIS->filepath = existing_0->filepath;
  THIS->line = existing_0->line;
  THIS->column = existing_0->column;
  return (RogueClassToken*)(THIS);
}

RogueCharacter RogueToken__to_Character( RogueClassToken* THIS )
{
  return (RogueCharacter)(((RogueCharacter)(0)));
}

RogueInt32 RogueToken__to_Int32( RogueClassToken* THIS )
{
  return (RogueInt32)(0);
}

RogueInt64 RogueToken__to_Int64( RogueClassToken* THIS )
{
  return (RogueInt64)(((RogueInt64)((call_ROGUEM73( 20, ROGUE_ARG(THIS) )))));
}

RogueReal64 RogueToken__to_Real64( RogueClassToken* THIS )
{
  return (RogueReal64)(0.0);
}

RogueClassType* RogueToken__to_Type( RogueClassToken* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassTokenType* RogueTokenType__init_object( RogueClassTokenType* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueTokenType__to_String( RogueClassTokenType* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueTokenType__type_name( RogueClassTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[771]);
}

RogueClassTokenType* RogueTokenType__init__String( RogueClassTokenType* THIS, RogueString* _auto_104_0 )
{
  THIS->name = _auto_104_0;
  return (RogueClassTokenType*)(THIS);
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(THIS) )))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Character( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueCharacter value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralCharacterToken__init__TokenType_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralCharacterToken*,ROGUE_CREATE_OBJECT(LiteralCharacterToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt64 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt64Token__init__TokenType_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt64Token*,ROGUE_CREATE_OBJECT(LiteralInt64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt32 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt32Token__init__TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt32Token*,ROGUE_CREATE_OBJECT(LiteralInt32Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Real64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueReal64 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralReal64Token__init__TokenType_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralReal64Token*,ROGUE_CREATE_OBJECT(LiteralReal64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_String( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueStringDataToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringDataToken*,ROGUE_CREATE_OBJECT(StringDataToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__Token( RogueClassTokenType* THIS, RogueClassToken* existing_0 )
{
  return (RogueClassToken*)((call_ROGUEM79( 11, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) )));
}

RogueClassToken* RogueTokenType__create_token__Token_String( RogueClassTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  return (RogueClassToken*)((call_ROGUEM80( 16, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column), value_1 )));
}

RogueLogical RogueTokenType__is_directive( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_op_with_assign( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_structure( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueClassTokenType* RogueTokenType__mark_end_command( RogueClassTokenType* THIS )
{
  THIS->is_end_command = true;
  return (RogueClassTokenType*)(THIS);
}

RogueClassTokenType* RogueTokenType__mark_non_method( RogueClassTokenType* THIS )
{
  THIS->is_non_method = true;
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueTokenType__quoted_name( RogueClassTokenType* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[81] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[81] )))) ))));
}

RogueString* RogueTokenType__to_String__Token( RogueClassTokenType* THIS, RogueClassToken* t_0 )
{
  return (RogueString*)(THIS->name);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init_object( RogueClassTable_String_TokenType_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init( RogueClassTable_String_TokenType_* THIS )
{
  RogueTable_String_TokenType___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueString* RogueTable_String_TokenType___to_String( RogueClassTable_String_TokenType_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TokenType___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TokenType___type_name( RogueClassTable_String_TokenType_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[770]);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init__Int32( RogueClassTable_String_TokenType_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_TokenType__List__init__Int32_TableEntry_String_TokenType_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TokenType__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TokenType__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TokenType_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueClassTableEntry_String_TokenType_* RogueTable_String_TokenType___find__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_2,(((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TokenType_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_TokenType_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_TokenType_*)(((RogueClassTableEntry_String_TokenType_*)(NULL)));
}

RogueClassTokenType* RogueTable_String_TokenType___get__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_1,(((RogueTable_String_TokenType___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTokenType*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,default_value_2,0);
    return (RogueClassTokenType*)(default_value_2);
  }
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___set__String_TokenType( RogueClassTable_String_TokenType_* THIS, RogueString* key_0, RogueClassTokenType* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_4,(((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_TokenType_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_TokenType_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_TokenType_*)((RogueTableEntry_String_TokenType___init__String_TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TokenType_*,ROGUE_CREATE_OBJECT(TableEntry_String_TokenType_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TokenType___print_to__StringBuilder( RogueClassTable_String_TokenType_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TokenType___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init_object( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueTableEntry_String_TokenType__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueString* RogueTableEntry_String_TokenType__List__to_String( RogueTableEntry_String_TokenType__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TokenType__List*,_auto_1201_2,(THIS));
    RogueInt32 _auto_1202_3 = (0);
    for (;_auto_1202_3 < _auto_1201_2->count;++_auto_1202_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,value_4,(((RogueClassTableEntry_String_TokenType_*)(_auto_1201_2->data->objects[_auto_1202_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TokenType___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TokenType__List__type_name( RogueTableEntry_String_TokenType__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[841]);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init__Int32( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TokenType_*), true );
  }
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init__Int32_TableEntry_String_TokenType_( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TokenType_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TokenType_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_100_3 = (initial_capacity_0);
      for (;i_2 <= _auto_100_3;++i_2)
      {
        RogueTableEntry_String_TokenType__List__add__TableEntry_String_TokenType_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__add__TableEntry_String_TokenType_( RogueTableEntry_String_TokenType__List* THIS, RogueClassTableEntry_String_TokenType_* value_0 )
{
  ((RogueTableEntry_String_TokenType__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TokenType__List__capacity( RogueTableEntry_String_TokenType__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__reserve__Int32( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TokenType_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_TokenType__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TokenType_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init_object( RogueClassTableEntry_String_TokenType_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueString* RogueTableEntry_String_TokenType___to_String( RogueClassTableEntry_String_TokenType_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TokenType___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_TokenType___type_name( RogueClassTableEntry_String_TokenType_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[741]);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init__String_TokenType_Int32( RogueClassTableEntry_String_TokenType_* THIS, RogueString* _key_0, RogueClassTokenType* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_TokenType____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[891]);
}

RogueString* RogueArray_Token___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[892]);
}

RogueClassType* RogueType__init_object( RogueClassType* THIS )
{
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  THIS->index = -1;
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->extended_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->definition_list = ((RogueDefinition_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueDefinition_List*,ROGUE_CREATE_OBJECT(Definition_List))) )));
  THIS->definition_lookup = ((RogueTable_String_Definition___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Definition_*,ROGUE_CREATE_OBJECT(Table_String_Definition_))) )));
  THIS->next_enum_offset = 0;
  THIS->global_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->global_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->property_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  THIS->global_method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->global_method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->global_method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  THIS->method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  THIS->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassType*)(THIS);
}

RogueString* RogueType__to_String( RogueClassType* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueType__type_name( RogueClassType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[790]);
}

RogueClassType* RogueType__init__Token_String( RogueClassType* THIS, RogueClassToken* _auto_224_0, RogueString* _auto_225_1 )
{
  THIS->name = _auto_225_1;
  THIS->t = _auto_224_0;
  return (RogueClassType*)(THIS);
}

RogueClassMethod* RogueType__add_method__Token_String( RogueClassType* THIS, RogueClassToken* m_t_0, RogueString* m_name_1 )
{
  return (RogueClassMethod*)(((RogueType__add_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), m_t_0, ROGUE_ARG(THIS), m_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->method_list), m_0 );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  if (!(!!(list_1)))
  {
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  RogueMethod_List__add__Method( list_1, m_0 );
  return (RogueClassMethod*)(m_0);
}

RogueClassMethod* RogueType__add_global_method__Token_String( RogueClassType* THIS, RogueClassToken* r_t_0, RogueString* r_name_1 )
{
  return (RogueClassMethod*)(((RogueType__add_global_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), r_t_0, ROGUE_ARG(THIS), r_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_global_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueAttributes__add__Int32( ROGUE_ARG(m_0->attributes), 512 );
  if ((THIS->organized && !(THIS->organizing)))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, ROGUE_ARG((RogueOptionalInt32__create())) );
    return (RogueClassMethod*)(m_0);
  }
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->global_method_list), m_0 );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  if (!(!!(list_1)))
  {
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  RogueMethod_List__add__Method( list_1, m_0 );
  return (RogueClassMethod*)(m_0);
}

RogueClassProperty* RogueType__add_global__Token_String( RogueClassType* THIS, RogueClassToken* s_t_0, RogueString* s_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), s_t_0, ROGUE_ARG(THIS), s_name_1, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->global_list), s_2 );
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->global_lookup), s_name_1, s_2 );
  return (RogueClassProperty*)(s_2);
}

RogueClassProperty* RogueType__add_property__Token_String_Type_Cmd( RogueClassType* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2, RogueClassCmd* initial_value_3 )
{
  return (RogueClassProperty*)(((RogueType__add_property__Property( ROGUE_ARG(THIS), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), p_t_0, ROGUE_ARG(THIS), p_name_1, p_type_2, initial_value_3 )))) ))));
}

RogueClassProperty* RogueType__add_property__Property( RogueClassType* THIS, RogueClassProperty* p_0 )
{
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_0 );
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->property_lookup), ROGUE_ARG(p_0->name), p_0 );
  return (RogueClassProperty*)(p_0);
}

void RogueType__collect_type_info__Int32_List( RogueClassType* THIS, RogueInt32_List* info_0 )
{
  RogueInt32_List__add__Int32( info_0, 0 );
  if (((RogueType__is_primitive( ROGUE_ARG(THIS) ))))
  {
    RogueInt32_List__add__Int32( info_0, 0 );
  }
  else
  {
    RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->dynamic_method_table_index) );
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,flat_base_types_1,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  if (!!(THIS->base_class))
  {
    RogueType__collect_base_types__Type_List( ROGUE_ARG(THIS->base_class), flat_base_types_1 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1229_2,(THIS->base_types));
    RogueInt32 _auto_1230_3 = (0);
    for (;_auto_1230_3 < _auto_1229_2->count;++_auto_1230_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1229_2->data->objects[_auto_1230_3]))));
      RogueType__collect_base_types__Type_List( base_type_4, flat_base_types_1 );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(flat_base_types_1->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1231_5,(flat_base_types_1));
    RogueInt32 _auto_1232_6 = (0);
    for (;_auto_1232_6 < _auto_1231_5->count;++_auto_1232_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueClassType*)(_auto_1231_5->data->objects[_auto_1232_6]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(base_type_7->index) );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->global_list->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1233_8,(THIS->global_list));
    RogueInt32 _auto_1234_9 = (0);
    for (;_auto_1234_9 < _auto_1233_8->count;++_auto_1234_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1233_8->data->objects[_auto_1234_9]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_10->name) )))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1235_11,(THIS->global_list));
    RogueInt32 _auto_1236_12 = (0);
    for (;_auto_1236_12 < _auto_1235_11->count;++_auto_1236_12)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_1235_11->data->objects[_auto_1236_12]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(p_13->_type->index) );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->property_list->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1237_14,(THIS->property_list));
    RogueInt32 _auto_1238_15 = (0);
    for (;_auto_1238_15 < _auto_1237_14->count;++_auto_1238_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_16,(((RogueClassProperty*)(_auto_1237_14->data->objects[_auto_1238_15]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_16->name) )))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1239_17,(THIS->property_list));
    RogueInt32 _auto_1240_18 = (0);
    for (;_auto_1240_18 < _auto_1239_17->count;++_auto_1240_18)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_19,(((RogueClassProperty*)(_auto_1239_17->data->objects[_auto_1240_18]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(p_19->_type->index) );
    }
  }
}

RogueClassCmd* RogueType__create_default_value__Token( RogueClassType* THIS, RogueClassToken* _t_0 )
{
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), _t_0 ))))));
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), _t_0, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdArgs*)(NULL))) ))))));
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), _t_0, false ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), _t_0, 0 ))))));
}

void RogueType__dispatch__Visitor( RogueClassType* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Type( v_0, ROGUE_ARG(THIS) );
}

RogueClassMethod* RogueType__find_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->method_lookup_by_signature), signature_0 )))));
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  return (RogueClassMethod*)(((RogueType__find_global_method__String( ROGUE_ARG(THIS), signature_0 ))));
}

RogueClassMethod* RogueType__find_global_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->global_method_lookup_by_signature), signature_0 )))));
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueClassProperty* RogueType__find_property__String( RogueClassType* THIS, RogueString* p_name_0 )
{
  if (RogueString_character_at(p_name_0,0) == (RogueCharacter)'@')
  {
    p_name_0 = ((RogueString*)((RogueString__rightmost__Int32( p_name_0, -1 ))));
  }
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->property_lookup), p_name_0 ))));
}

RogueClassProperty* RogueType__find_global__String( RogueClassType* THIS, RogueString* s_name_0 )
{
  if (RogueString_character_at(s_name_0,0) == (RogueCharacter)'@')
  {
    s_name_0 = ((RogueString*)((RogueString__rightmost__Int32( s_name_0, -1 ))));
  }
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->global_lookup), s_name_0 ))));
}

RogueLogical RogueType__has_extended_class( RogueClassType* THIS )
{
  return (RogueLogical)(!!(THIS->extended_types->count));
}

RogueLogical RogueType__has_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), m_name_0 )))));
  if ((!!(list_1) && !!(list_1->count)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueType__has_global_method_named__String( ROGUE_ARG(THIS), m_name_0 ))));
}

RogueLogical RogueType__has_global_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), m_name_0 )))));
  return (RogueLogical)((!!(list_1) && !!(list_1->count)));
}

RogueLogical RogueType__instance_of__Type( RogueClassType* THIS, RogueClassType* ancestor_type_0 )
{
  if (((void*)THIS) == ((void*)ancestor_type_0))
  {
    return (RogueLogical)(true);
  }
  if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null) && ((RogueType__is_reference( ancestor_type_0 )))))
  {
    return (RogueLogical)(true);
  }
  if (((((RogueType__is_reference( ROGUE_ARG(THIS) ))) && ((void*)ancestor_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)) && !(((RogueType__is_foreign( ROGUE_ARG(THIS) ))))))
  {
    return (RogueLogical)(true);
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1314_1,(THIS->base_types));
    RogueInt32 _auto_1315_2 = (0);
    for (;_auto_1315_2 < _auto_1314_1->count;++_auto_1315_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1314_1->data->objects[_auto_1315_2]))));
      if (((RogueType__instance_of__Type( base_type_3, ancestor_type_0 ))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_compatible_with__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) ^ ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical)))
    {
      return (RogueLogical)(false);
    }
    return (RogueLogical)(true);
  }
  if (other_0->is_optional)
  {
    if (((void*)other_0->_element_type) == ((void*)THIS))
    {
      return (RogueLogical)(true);
    }
    if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
    {
      return (RogueLogical)(true);
    }
  }
  if ((((RogueType__is_aspect( ROGUE_ARG(THIS) ))) && ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))));
}

RogueLogical RogueType__is_equivalent_or_more_specific_than__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    return (RogueLogical)(((RogueType__primitive_rank( ROGUE_ARG(THIS) ))) >= ((RogueType__primitive_rank( other_0 ))));
  }
  if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))))
  {
    return (RogueLogical)(true);
  }
  if ((other_0->is_list && ((void*)other_0->_element_type) == ((void*)THIS)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_aspect( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 1);
}

RogueLogical RogueType__is_class( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 0);
}

RogueLogical RogueType__is_compound( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 3);
}

RogueLogical RogueType__is_foreign( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16)) )));
}

RogueLogical RogueType__is_native( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueType__is_primitive( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 2);
}

RogueLogical RogueType__is_reference( RogueClassType* THIS )
{
  switch ((THIS->attributes->flags & 7))
  {
    case 0:
    case 1:
    {
      return (RogueLogical)(true);
      break;
    }
    default:
    {
      return (RogueLogical)(false);
    }
  }
}

RogueLogical RogueType__is_requisite( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8192)) )));
}

RogueLogical RogueType__is_routine( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 262144)) )));
}

RogueLogical RogueType__is_singleton( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 1024)) )));
}

RogueClassType* RogueType__make_requisite( RogueClassType* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  return (RogueClassType*)(THIS);
}

RogueClassType* RogueType__organize__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  if (THIS->organized)
  {
    return (RogueClassType*)(THIS);
  }
  THIS->organized = true;
  THIS->organizing = true;
  THIS->index = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list->count;
  RogueType_List__add__Type( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list), ROGUE_ARG(THIS) );
  if (!(THIS->defined))
  {
    THIS->defined = true;
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
    if (!!(template_1))
    {
      RogueTemplate__instantiate__Type_Scope( template_1, ROGUE_ARG(THIS), scope_0 );
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[429] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[43] )))) )))) ))));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1318_17,(THIS->base_types));
    RogueInt32 _auto_1319_18 = (0);
    for (;_auto_1319_18 < _auto_1318_17->count;++_auto_1319_18)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_19,(((RogueClassType*)(_auto_1318_17->data->objects[_auto_1319_18]))));
      RogueType__organize__Scope( base_type_19, scope_0 );
      if (!(((RogueType__is_aspect( base_type_19 )))))
      {
        if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[430] ))));
        }
        else if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[431] ))));
        }
      }
      if (((RogueType__instance_of__Type( base_type_19, ROGUE_ARG(THIS) ))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[432] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[433] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_19))) )))) )))), Rogue_literal_strings[434] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_19))) )))) )))), Rogue_literal_strings[435] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
      }
    }
  }
  if (((RogueType__is_class( ROGUE_ARG(THIS) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1320_20,(THIS->base_types));
      RogueInt32 _auto_1321_21 = (0);
      for (;_auto_1321_21 < _auto_1320_20->count;++_auto_1321_21)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_22,(((RogueClassType*)(_auto_1320_20->data->objects[_auto_1321_21]))));
        if (((RogueType__is_class( base_type_22 ))))
        {
          if ((!!(THIS->base_class) && ((void*)THIS->base_class) != ((void*)base_type_22)))
          {
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[436] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[437] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->base_class))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_22))) )))) )))), Rogue_literal_strings[439] )))) )))) ))));
          }
          else
          {
            THIS->base_class = base_type_22;
          }
        }
      }
    }
    if (((!(!!(THIS->base_class)) && !(((RogueType__is_foreign( ROGUE_ARG(THIS) ))))) && ((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
    {
      RogueType__organize__Scope( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      THIS->base_class = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object;
      RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class), 0 );
    }
  }
  if (!!(THIS->base_class))
  {
    RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(((RogueType_List__remove__Type( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class) )))), 0 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1322_23,(THIS->base_types));
    RogueInt32 _auto_1323_24 = (0);
    for (;_auto_1323_24 < _auto_1322_23->count;++_auto_1323_24)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_25,(((RogueClassType*)(_auto_1322_23->data->objects[_auto_1323_24]))));
      RogueType_List__add__Type( ROGUE_ARG(base_type_25->extended_types), ROGUE_ARG(THIS) );
    }
  }
  if (!!(THIS->_element_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_element_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1324_26,(THIS->global_list));
    RogueInt32 _auto_1325_27 = (0);
    for (;_auto_1325_27 < _auto_1324_26->count;++_auto_1325_27)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_28,(((RogueClassProperty*)(_auto_1324_26->data->objects[_auto_1325_27]))));
      RogueType__organize__Scope( ROGUE_ARG(s_28->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1326_29,(THIS->property_list));
    RogueInt32 _auto_1327_30 = (0);
    for (;_auto_1327_30 < _auto_1326_29->count;++_auto_1327_30)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_31,(((RogueClassProperty*)(_auto_1326_29->data->objects[_auto_1327_30]))));
      RogueType__organize__Scope( ROGUE_ARG(p_31->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1328_32,(THIS->base_types));
    RogueInt32 _auto_1329_33 = (0);
    for (;_auto_1329_33 < _auto_1328_32->count;++_auto_1329_33)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_34,(((RogueClassType*)(_auto_1328_32->data->objects[_auto_1329_33]))));
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_34 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueProperty_List*,full_property_list_2,(((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )))));
  RogueTable_String_Property___clear( ROGUE_ARG(THIS->property_lookup) );
  RogueType__inherit_properties__Property_List_Table_String_Property_( ROGUE_ARG(THIS), full_property_list_2, ROGUE_ARG(THIS->property_lookup) );
  THIS->property_list = full_property_list_2;
  RogueType__create_introspection_methods__Scope( ROGUE_ARG(THIS), scope_0 );
  RogueType__inherit_methods__Scope( ROGUE_ARG(THIS), scope_0 );
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    RogueType_List__clear( ROGUE_ARG(THIS->base_types) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_class_3,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[448] )))));
  if (!!(m_init_class_3))
  {
    if (((void*)m_init_class_3->type_context) == ((void*)THIS))
    {
      RogueMethod__make_requisite( m_init_class_3 );
    }
  }
  else
  {
    m_init_class_3 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[448] ))));
    if (!!(m_init_class_3))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_init_class_3->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[449] )))) )))) ))));
    }
  }
  if (!!(THIS->global_list->count))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[448] )))));
    if ((!(!!(m_4)) || ((void*)m_4->type_context) != ((void*)THIS)))
    {
      m_4 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[450] )))), scope_0, true ))));
    }
    RogueMethod__make_requisite( m_4 );
    RogueInt32 i_5 = ((THIS->global_list->count - 1));
    while (i_5 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_6,(((RogueClassProperty*)(THIS->global_list->data->objects[i_5]))));
      if (!!(s_6->initial_value))
      {
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_4->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(s_6->t), s_6, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(s_6->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      --i_5;
    }
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_7,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[451] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,prior_m_8,(m_7));
    if ((!!(m_7) && ((void*)m_7->type_context) == ((void*)THIS)))
    {
      RogueMethod__make_requisite( m_7 );
    }
    else
    {
      m_7 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[452] )))), scope_0, true ))));
      RogueMethod__make_requisite( m_7 );
      RogueAttributes__add__Int32( ROGUE_ARG(m_7->attributes), 4194304 );
      if (!!(prior_m_8))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_7 );
        THIS->method_list->data->objects[((RogueMethod_List__locate__Method( ROGUE_ARG(THIS->method_list), prior_m_8 ))).value] = m_7;
        RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_7->name) )))), prior_m_8 );
        RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->method_lookup_by_signature), ROGUE_ARG(m_7->signature), m_7 );
        m_7->overridden_method = prior_m_8;
        RogueMethod_List__add__Method( ROGUE_ARG(prior_m_8->overriding_methods), m_7 );
      }
    }
    m_7->_return_type = THIS;
    if (!!(m_7->overridden_method))
    {
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_7->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), ROGUE_ARG(THIS->t), Rogue_literal_strings[452], ROGUE_ARG(((RogueClassCmdArgs*)(NULL))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) )))))), 0 );
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_7->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))))) )))))) );
    RogueInt32 i_9 = ((THIS->property_list->count - 1));
    while (i_9 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(THIS->property_list->data->objects[i_9]))));
      if ((!!(p_10->initial_value) && ((void*)p_10->type_context) == ((void*)THIS)))
      {
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_7->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(p_10->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_10->t), ROGUE_ARG(p_10->type_context) )))))))), p_10, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(p_10->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      --i_9;
    }
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_7->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_7 )))))) );
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[453] )))));
    if ((!!(m_11) && ((void*)m_11->type_context) == ((void*)THIS)))
    {
      if (!!(m_11->_return_type))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_11->t), Rogue_literal_strings[454] ))));
      }
      RogueMethod__make_requisite( m_11 );
    }
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_12,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[455] )))));
    if (!!(m_12))
    {
      RogueMethod__make_requisite( m_12 );
    }
  }
  if (((((RogueType__is_compound( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))) || ((RogueType__is_foreign( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_13,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[455] )))));
    if (!(!!(m_13)))
    {
      m_13 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[456] ))));
      m_13->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_13->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[32] )))) )))), 0 )))))) )))))) );
      RogueMethod__organize__Scope_Logical( m_13, scope_0, true );
    }
  }
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1332_35,(THIS->property_list));
      RogueInt32 _auto_1333_36 = (0);
      for (;_auto_1333_36 < _auto_1332_35->count;++_auto_1333_36)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_37,(((RogueClassProperty*)(_auto_1332_35->data->objects[_auto_1333_36]))));
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(p_37->name), Rogue_literal_strings[335] )))) )))));
        if (!(!!(m_14)))
        {
          m_14 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_37->t), ROGUE_ARG(p_37->name) ))));
          RogueAttributes__add__Int32( ROGUE_ARG(m_14->attributes), 524288 );
          m_14->_return_type = p_37->_type;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_14->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_37->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(p_37->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[209], ROGUE_ARG(p_37->name) )))) )))))) )))))) );
          RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
        }
        m_14 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[457] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_37->name) )))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_37->_type))) )))) )))), Rogue_literal_strings[32] )))) )))) ))));
        if (!(!!(m_14)))
        {
          m_14 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_37->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[457], ROGUE_ARG(p_37->name) )))) ))));
          RogueMethod__add_parameter__Token_String_Type( m_14, ROGUE_ARG(p_37->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[209], ROGUE_ARG(p_37->name) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
          RogueAttributes__add__Int32( ROGUE_ARG(m_14->attributes), 524288 );
          m_14->_return_type = THIS;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_14->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_37->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_37->t), ROGUE_ARG(THIS) )))))))) )))))) );
          RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
        }
      }
    }
  }
  if (((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray))
  {
    THIS->is_array = ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray) )));
    if (THIS->is_array)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,cur_type_15,(THIS));
      while (!(((RogueString__begins_with__String( ROGUE_ARG(cur_type_15->name), Rogue_literal_strings[459] )))))
      {
        cur_type_15 = ((RogueClassType*)cur_type_15->base_class);
        if (((void*)cur_type_15) == ((void*)NULL))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[458] ))));
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,element_type_name_16,(((RogueString__before_last__String( ROGUE_ARG(((RogueString__after_first__String( ROGUE_ARG(cur_type_15->name), Rogue_literal_strings[234] )))), Rogue_literal_strings[143] )))));
      THIS->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), element_type_name_16 )))), scope_0 )));
    }
  }
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_method_list) );
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->method_list) );
  THIS->organizing = false;
  return (RogueClassType*)(THIS);
}

RogueInt32 RogueType__primitive_rank( RogueClassType* THIS )
{
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueInt32)(7);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))
  {
    return (RogueInt32)(6);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    return (RogueInt32)(5);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    return (RogueInt32)(4);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueInt32)(3);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueInt32)(2);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueInt32)(1);
  }
  return (RogueInt32)(0);
}

void RogueType__collect_base_types__Type_List( RogueClassType* THIS, RogueType_List* list_0 )
{
  if (((RogueType_List__locate__Type( list_0, ROGUE_ARG(THIS) ))).exists)
  {
    return;
  }
  RogueType_List__add__Type( list_0, ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1334_1,(THIS->base_types));
    RogueInt32 _auto_1335_2 = (0);
    for (;_auto_1335_2 < _auto_1334_1->count;++_auto_1335_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1334_1->data->objects[_auto_1335_2]))));
      RogueType__collect_base_types__Type_List( base_type_3, list_0 );
    }
  }
}

void RogueType__cull_unused_methods( RogueClassType* THIS )
{
  if (THIS->culled)
  {
    return;
  }
  THIS->culled = true;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1336_3,(THIS->base_types));
    RogueInt32 _auto_1337_4 = (0);
    for (;_auto_1337_4 < _auto_1336_3->count;++_auto_1337_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_5,(((RogueClassType*)(_auto_1336_3->data->objects[_auto_1337_4]))));
      RogueType__cull_unused_methods( base_type_5 );
    }
  }
  RogueInt32 i_0 = ((THIS->method_list->count - 1));
  while (i_0 >= 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueClassMethod*)(THIS->method_list->data->objects[i_0]))));
    if (((RogueMethod__is_macro( m_1 ))))
    {
      RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_1 );
    }
    --i_0;
  }
  if (!(((RogueType__has_extended_class( ROGUE_ARG(THIS) )))))
  {
    i_0 = ((RogueInt32)(THIS->method_list->count - 1));
    while (i_0 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(THIS->method_list->data->objects[i_0]))));
      if (!(m_2->is_used))
      {
        if ((!(!!(THIS->base_class)) || THIS->base_class->method_list->count <= i_0))
        {
          RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_2 );
        }
      }
      --i_0;
    }
  }
  i_0 = ((RogueInt32)0);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1338_6,(THIS->method_list));
    RogueInt32 _auto_1339_7 = (0);
    for (;_auto_1339_7 < _auto_1338_6->count;++_auto_1339_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1338_6->data->objects[_auto_1339_7]))));
      m_8->index = i_0;
      ++i_0;
    }
  }
}

RogueLogical RogueType__has_global_references( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1340_0,(THIS->global_list));
    RogueInt32 _auto_1341_1 = (0);
    for (;_auto_1341_1 < _auto_1340_0->count;++_auto_1341_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_2,(((RogueClassProperty*)(_auto_1340_0->data->objects[_auto_1341_1]))));
      if (((RogueType__is_reference( ROGUE_ARG(g_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      if ((((RogueType__is_compound( ROGUE_ARG(g_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__has_object_references( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1342_0,(THIS->property_list));
    RogueInt32 _auto_1343_1 = (0);
    for (;_auto_1343_1 < _auto_1342_0->count;++_auto_1343_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_2,(((RogueClassProperty*)(_auto_1342_0->data->objects[_auto_1343_1]))));
      if (((RogueType__is_reference( ROGUE_ARG(p_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      if ((((RogueType__is_compound( ROGUE_ARG(p_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)((THIS->is_array && ((RogueType__has_object_references( ROGUE_ARG(THIS->_element_type) )))));
}

RogueLogical RogueType__is_reference_array( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->is_array && ((RogueType__is_reference( ROGUE_ARG(THIS->_element_type) )))));
}

void RogueType__inherit_definitions__Type( RogueClassType* THIS, RogueClassType* from_type_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_1344_1,(from_type_0->definition_list));
    RogueInt32 _auto_1345_2 = (0);
    for (;_auto_1345_2 < _auto_1344_1->count;++_auto_1345_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_3,(((RogueClassDefinition*)(_auto_1344_1->data->objects[_auto_1345_2]))));
      if (!(((RogueTable_String_Definition___contains__String( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name) )))))
      {
        RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->definition_list), def_3 );
        RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name), ROGUE_ARG(((RogueTable_String_Definition___get__String( ROGUE_ARG(from_type_0->definition_lookup), ROGUE_ARG(def_3->name) )))) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1346_4,(from_type_0->base_types));
    RogueInt32 _auto_1347_5 = (0);
    for (;_auto_1347_5 < _auto_1346_4->count;++_auto_1347_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_6,(((RogueClassType*)(_auto_1346_4->data->objects[_auto_1347_5]))));
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_6 );
    }
  }
}

void RogueType__inherit_properties__Property_List_Table_String_Property_( RogueClassType* THIS, RogueProperty_List* list_0, RogueClassTable_String_Property_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1348_2,(THIS->base_types));
    RogueInt32 _auto_1349_3 = (0);
    for (;_auto_1349_3 < _auto_1348_2->count;++_auto_1349_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1348_2->data->objects[_auto_1349_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1350_5,(base_type_4->property_list));
        RogueInt32 _auto_1351_6 = (0);
        for (;_auto_1351_6 < _auto_1350_5->count;++_auto_1351_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,base_p_7,(((RogueClassProperty*)(_auto_1350_5->data->objects[_auto_1351_6]))));
          RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), base_p_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1352_8,(THIS->property_list));
    RogueInt32 _auto_1353_9 = (0);
    for (;_auto_1353_9 < _auto_1352_8->count;++_auto_1353_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1352_8->data->objects[_auto_1353_9]))));
      RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), p_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_property__Property_Property_List_Table_String_Property_( RogueClassType* THIS, RogueClassProperty* p_0, RogueProperty_List* list_1, RogueClassTable_String_Property_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,existing_p_3,(((RogueTable_String_Property___get__String( lookup_2, ROGUE_ARG(p_0->name) )))));
  if (!!(existing_p_3))
  {
    RogueInt32 i_4 = (((RogueProperty_List__locate__Property( list_1, existing_p_3 ))).value);
    if (((((void*)p_0->type_context) == ((void*)existing_p_3->type_context) && !(((RogueProperty__is_incorporated( p_0 ))))) && !(((RogueProperty__is_incorporated( existing_p_3 ))))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[394] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[395] )))) )))) ))));
    }
    else if (((void*)p_0->_type) == ((void*)existing_p_3->_type))
    {
      if (!!(p_0->initial_value))
      {
        if (!!(existing_p_3->initial_value))
        {
          if (((RogueType__instance_of__Type( ROGUE_ARG(p_0->_type), ROGUE_ARG(existing_p_3->_type) ))))
          {
            if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
            {
              p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
              RogueProperty__mark_incorporated( p_0 );
            }
            list_1->data->objects[i_4] = p_0;
            RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
          }
          else
          {
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[440] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[441] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
          }
        }
        else
        {
          if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
          {
            p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
            RogueProperty__mark_incorporated( p_0 );
          }
          list_1->data->objects[i_4] = p_0;
          RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
        }
      }
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[442] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[443] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->_type))) )))) )))), Rogue_literal_strings[334] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->_type))) )))) )))), Rogue_literal_strings[334] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
    }
  }
  else
  {
    if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
    {
      p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
      RogueProperty__mark_incorporated( p_0 );
    }
    RogueProperty_List__add__Property( list_1, p_0 );
    RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
  }
}

void RogueType__create_introspection_methods__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_type_name_1,(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[444] )))));
  m_type_name_1->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_type_name_1->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) )))))) );
  if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_type_info_2,(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[445] )))));
    m_type_info_2->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), Rogue_literal_strings[66] )));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_type_info_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[446] )))))), Rogue_literal_strings[445], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) )))) )))))) )))))) );
  }
}

void RogueType__inherit_methods__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1354_6,(THIS->base_types));
    RogueInt32 _auto_1355_7 = (0);
    for (;_auto_1355_7 < _auto_1354_6->count;++_auto_1355_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_8,(((RogueClassType*)(_auto_1354_6->data->objects[_auto_1355_7]))));
      if (!!(base_type_8->method_templates))
      {
        if (!(!!(THIS->method_templates)))
        {
          THIS->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS) )));
        }
        RogueMethodTemplates__inherit__MethodTemplates_Type( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(base_type_8->method_templates), ROGUE_ARG(THIS) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1356_9,(THIS->global_method_list));
    RogueInt32 _auto_1357_10 = (0);
    for (;_auto_1357_10 < _auto_1356_9->count;++_auto_1357_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_1356_9->data->objects[_auto_1357_10]))));
      RogueMethod__organize__Scope_Logical( m_11, scope_0, true );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1358_12,(THIS->method_list));
    RogueInt32 _auto_1359_13 = (0);
    for (;_auto_1359_13 < _auto_1358_12->count;++_auto_1359_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_1358_12->data->objects[_auto_1359_13]))));
      RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
    }
  }
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->global_method_lookup_by_name) );
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->method_lookup_by_signature) );
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->method_lookup_by_name) );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_routine_list_1,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  RogueType__inherit_global_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_routine_list_1, ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  THIS->global_method_list = full_routine_list_1;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1360_15,(THIS->global_method_list));
    RogueInt32 _auto_1361_16 = (0);
    for (;_auto_1361_16 < _auto_1360_15->count;++_auto_1361_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_17,(((RogueClassMethod*)(_auto_1360_15->data->objects[_auto_1361_16]))));
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_2,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name) )))));
      if (!(!!(list_2)))
      {
        list_2 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name), list_2 );
      }
      RogueMethod_List__add__Method( list_2, r_17 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_method_list_3,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  RogueType__inherit_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_method_list_3, ROGUE_ARG(THIS->method_lookup_by_signature) );
  THIS->method_list = full_method_list_3;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1362_18,(THIS->method_list));
    RogueInt32 _auto_1363_19 = (0);
    for (;_auto_1363_19 < _auto_1362_18->count;++_auto_1363_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_20,(((RogueClassMethod*)(_auto_1362_18->data->objects[_auto_1363_19]))));
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name) )))));
      if (!(!!(list_4)))
      {
        list_4 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name), list_4 );
      }
      RogueMethod_List__add__Method( list_4, m_20 );
    }
  }
  if (!!(THIS->method_templates))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1364_21,(THIS->method_list));
      RogueInt32 _auto_1365_22 = (0);
      for (;_auto_1365_22 < _auto_1364_21->count;++_auto_1365_22)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_23,(((RogueClassMethod*)(_auto_1364_21->data->objects[_auto_1365_22]))));
        if (((void*)m_23->type_context) != ((void*)THIS))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,st_5,(m_23->source_template));
          if (!!(st_5))
          {
            RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(st_5->name), ROGUE_ARG(st_5->type_parameters->count), ROGUE_ARG(st_5->parameter_count), ROGUE_ARG(st_5->t), ROGUE_ARG(m_23->name) );
          }
        }
      }
    }
  }
}

void RogueType__inherit_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1366_2,(THIS->base_types));
    RogueInt32 _auto_1367_3 = (0);
    for (;_auto_1367_3 < _auto_1366_2->count;++_auto_1367_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1366_2->data->objects[_auto_1367_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1368_5,(base_type_4->method_list));
        RogueInt32 _auto_1369_6 = (0);
        for (;_auto_1369_6 < _auto_1368_5->count;++_auto_1369_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1368_5->data->objects[_auto_1369_6]))));
          RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1370_8,(THIS->method_list));
    RogueInt32 _auto_1371_9 = (0);
    for (;_auto_1371_9 < _auto_1370_8->count;++_auto_1371_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1370_8->data->objects[_auto_1371_9]))));
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_3))
  {
    if (((void*)m_0->_return_type) != ((void*)existing_m_3->_return_type))
    {
      if (((((void*)m_0->_return_type) == ((void*)NULL) || ((void*)existing_m_3->_return_type) == ((void*)NULL)) || !(((RogueType__instance_of__Type( ROGUE_ARG(m_0->_return_type), ROGUE_ARG(existing_m_3->_return_type) ))))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[375] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->type_context->name) )))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[376] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->_return_type))) )))) )))), Rogue_literal_strings[377] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_m_3->_return_type))) )))) )))), Rogue_literal_strings[378] )))) )))) ))));
      }
    }
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    if (!(((RogueMethod__is_incorporated( existing_m_3 )))))
    {
      if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
      {
        if (((RogueMethod__is_augment( m_0 ))))
        {
          RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
          return;
        }
        else
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[381] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[382] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
        }
      }
    }
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_3 );
      if (((RogueMethod__is_abstract( m_0 ))))
      {
        return;
      }
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    m_0->overridden_method = existing_m_3;
    while ((!!(m_0->overridden_method) && ((void*)m_0->type_context) == ((void*)m_0->overridden_method->type_context)))
    {
      if (!!(m_0->overridden_method->overridden_method))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(m_0->overridden_method->overridden_method->overriding_methods), ROGUE_ARG(m_0->overridden_method) );
      }
      m_0->overridden_method = m_0->overridden_method->overridden_method;
    }
    if (!!(m_0->overridden_method))
    {
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overridden_method->overriding_methods), m_0 );
    }
    if (((RogueMethod__is_requisite( existing_m_3 ))))
    {
      RogueMethod__make_requisite( m_0 );
    }
    list_1->data->objects[i_4] = m_0;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
  else
  {
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    RogueMethod_List__add__Method( list_1, m_0 );
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  if ((((RogueMethod__is_propagated( m_0 ))) && ((void*)m_0->type_context) != ((void*)THIS)))
  {
    m_0 = ((RogueClassMethod*)((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__clone( m_0 )))), ROGUE_ARG(THIS) ))));
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__inherit_global_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1372_2,(THIS->base_types));
    RogueInt32 _auto_1373_3 = (0);
    for (;_auto_1373_3 < _auto_1372_2->count;++_auto_1373_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1372_2->data->objects[_auto_1373_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1374_5,(base_type_4->global_method_list));
        RogueInt32 _auto_1375_6 = (0);
        for (;_auto_1375_6 < _auto_1374_5->count;++_auto_1375_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1374_5->data->objects[_auto_1375_6]))));
          RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1376_8,(THIS->global_method_list));
    RogueInt32 _auto_1377_9 = (0);
    for (;_auto_1377_9 < _auto_1376_8->count;++_auto_1377_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1376_8->data->objects[_auto_1377_9]))));
      RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_3))
  {
    if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
    {
      if (((RogueMethod__is_augment( m_0 ))))
      {
        RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
        return;
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[381] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[447] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
      }
    }
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      return;
    }
    if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    list_1->data->objects[i_4] = m_0;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
  else
  {
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      return;
    }
    if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    RogueMethod_List__add__Method( list_1, m_0 );
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
}

void RogueType__inject_global_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__assign_signature( m_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_2))
  {
    if (((void*)m_0) == ((void*)existing_m_2))
    {
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), m_0 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), m_0, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_3 = (at_index_1.value);
          RogueInt32 _auto_114_4 = (THIS->global_method_list->count);
          for (;adjust_i_3 < _auto_114_4;++adjust_i_3)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->objects[adjust_i_3]))->index = adjust_i_3;
          }
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1378_12,(THIS->extended_types));
          RogueInt32 _auto_1379_13 = (0);
          for (;_auto_1379_13 < _auto_1378_12->count;++_auto_1379_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_14,(((RogueClassType*)(_auto_1378_12->data->objects[_auto_1379_13]))));
            if (extended_class_14->organized)
            {
              RogueType__inject_global_method__Method_OptionalInt32( extended_class_14, m_0, at_index_1 );
            }
          }
        }
      }
    }
    else if (((RogueType__instance_of__Type( ROGUE_ARG(m_0->type_context), ROGUE_ARG(existing_m_2->type_context) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,overrides_5,(existing_m_2->overriding_methods));
      existing_m_2->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_6 = (at_index_1.value);
          RogueInt32 _auto_115_7 = (THIS->global_method_list->count);
          for (;adjust_i_6 < _auto_115_7;++adjust_i_6)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->objects[adjust_i_6]))->index = adjust_i_6;
          }
        }
      }
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
      m_0->overriding_methods = overrides_5;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1380_15,(overrides_5));
        RogueInt32 _auto_1381_16 = (0);
        for (;_auto_1381_16 < _auto_1380_15->count;++_auto_1381_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_17,(((RogueClassMethod*)(_auto_1380_15->data->objects[_auto_1381_16]))));
          overriding_m_17->overridden_method = m_0;
        }
      }
      RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
      RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1382_18,(THIS->extended_types));
        RogueInt32 _auto_1383_19 = (0);
        for (;_auto_1383_19 < _auto_1382_18->count;++_auto_1383_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_20,(((RogueClassType*)(_auto_1382_18->data->objects[_auto_1383_19]))));
          if (extended_class_20->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_20, m_0, at_index_1 );
          }
        }
      }
    }
    else
    {
      existing_m_2->overridden_method = m_0;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_2 );
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_8 = (at_index_1.value);
          RogueInt32 _auto_116_9 = (THIS->global_method_list->count);
          for (;adjust_i_8 < _auto_116_9;++adjust_i_8)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->objects[adjust_i_8]))->index = adjust_i_8;
          }
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1384_21,(THIS->extended_types));
        RogueInt32 _auto_1385_22 = (0);
        for (;_auto_1385_22 < _auto_1384_21->count;++_auto_1385_22)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_23,(((RogueClassType*)(_auto_1384_21->data->objects[_auto_1385_22]))));
          if (extended_class_23->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_23, existing_m_2, at_index_1 );
          }
        }
      }
    }
  }
  else if (at_index_1.exists)
  {
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->global_method_list) )))), ROGUE_ARG(at_index_1.value) );
    {
      RogueInt32 adjust_i_10 = (at_index_1.value);
      RogueInt32 _auto_117_11 = (THIS->global_method_list->count);
      for (;adjust_i_10 < _auto_117_11;++adjust_i_10)
      {
        ((RogueClassMethod*)(THIS->global_method_list->data->objects[adjust_i_10]))->index = adjust_i_10;
      }
    }
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1386_24,(THIS->extended_types));
        RogueInt32 _auto_1387_25 = (0);
        for (;_auto_1387_25 < _auto_1386_24->count;++_auto_1387_25)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_26,(((RogueClassType*)(_auto_1386_24->data->objects[_auto_1387_25]))));
          if (extended_class_26->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_26, m_0, at_index_1 );
          }
        }
      }
    }
  }
  else
  {
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    m_0->index = THIS->global_method_list->count;
    at_index_1 = ((RogueOptionalInt32)RogueOptionalInt32( THIS->global_method_list->count, true ));
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1388_27,(THIS->extended_types));
        RogueInt32 _auto_1389_28 = (0);
        for (;_auto_1389_28 < _auto_1388_27->count;++_auto_1389_28)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_29,(((RogueClassType*)(_auto_1388_27->data->objects[_auto_1389_28]))));
          if (extended_class_29->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_29, m_0, at_index_1 );
          }
        }
      }
    }
  }
}

void RogueType__inject_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  if (((RogueMethod__is_global( m_0 ))))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, at_index_1 );
    return;
  }
  RogueMethod__assign_signature( m_0 );
  if (!(!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) ))))))
  {
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), ROGUE_ARG(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_2))
  {
    if (((void*)m_0) == ((void*)existing_m_2))
    {
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_0 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), m_0, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_3 = (at_index_1.value);
          RogueInt32 _auto_118_4 = (THIS->method_list->count);
          for (;adjust_i_3 < _auto_118_4;++adjust_i_3)
          {
            ((RogueClassMethod*)(THIS->method_list->data->objects[adjust_i_3]))->index = adjust_i_3;
          }
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1390_12,(THIS->extended_types));
          RogueInt32 _auto_1391_13 = (0);
          for (;_auto_1391_13 < _auto_1390_12->count;++_auto_1391_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_14,(((RogueClassType*)(_auto_1390_12->data->objects[_auto_1391_13]))));
            if (extended_class_14->organized)
            {
              RogueType__inject_method__Method_OptionalInt32( extended_class_14, m_0, at_index_1 );
            }
          }
        }
      }
    }
    else if (((RogueType__instance_of__Type( ROGUE_ARG(m_0->type_context), ROGUE_ARG(existing_m_2->type_context) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,overrides_5,(existing_m_2->overriding_methods));
      existing_m_2->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_6 = (at_index_1.value);
          RogueInt32 _auto_119_7 = (THIS->method_list->count);
          for (;adjust_i_6 < _auto_119_7;++adjust_i_6)
          {
            ((RogueClassMethod*)(THIS->method_list->data->objects[adjust_i_6]))->index = adjust_i_6;
          }
        }
      }
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
      m_0->overriding_methods = overrides_5;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1392_15,(overrides_5));
        RogueInt32 _auto_1393_16 = (0);
        for (;_auto_1393_16 < _auto_1392_15->count;++_auto_1393_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_17,(((RogueClassMethod*)(_auto_1392_15->data->objects[_auto_1393_16]))));
          overriding_m_17->overridden_method = m_0;
        }
      }
      RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
      RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1394_18,(THIS->extended_types));
        RogueInt32 _auto_1395_19 = (0);
        for (;_auto_1395_19 < _auto_1394_18->count;++_auto_1395_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_20,(((RogueClassType*)(_auto_1394_18->data->objects[_auto_1395_19]))));
          if (extended_class_20->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_20, m_0, at_index_1 );
          }
        }
      }
    }
    else
    {
      existing_m_2->overridden_method = m_0;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_2 );
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_8 = (at_index_1.value);
          RogueInt32 _auto_120_9 = (THIS->method_list->count);
          for (;adjust_i_8 < _auto_120_9;++adjust_i_8)
          {
            ((RogueClassMethod*)(THIS->method_list->data->objects[adjust_i_8]))->index = adjust_i_8;
          }
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1396_21,(THIS->extended_types));
        RogueInt32 _auto_1397_22 = (0);
        for (;_auto_1397_22 < _auto_1396_21->count;++_auto_1397_22)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_23,(((RogueClassType*)(_auto_1396_21->data->objects[_auto_1397_22]))));
          if (extended_class_23->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_23, existing_m_2, at_index_1 );
          }
        }
      }
    }
  }
  else if (at_index_1.exists)
  {
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->method_list) )))), ROGUE_ARG(at_index_1.value) );
    {
      RogueInt32 adjust_i_10 = (at_index_1.value);
      RogueInt32 _auto_121_11 = (THIS->method_list->count);
      for (;adjust_i_10 < _auto_121_11;++adjust_i_10)
      {
        ((RogueClassMethod*)(THIS->method_list->data->objects[adjust_i_10]))->index = adjust_i_10;
      }
    }
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1398_24,(THIS->extended_types));
        RogueInt32 _auto_1399_25 = (0);
        for (;_auto_1399_25 < _auto_1398_24->count;++_auto_1399_25)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_26,(((RogueClassType*)(_auto_1398_24->data->objects[_auto_1399_25]))));
          if (extended_class_26->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_26, m_0, at_index_1 );
          }
        }
      }
    }
  }
  else
  {
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    m_0->index = THIS->method_list->count;
    at_index_1 = ((RogueOptionalInt32)RogueOptionalInt32( THIS->method_list->count, true ));
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1400_27,(THIS->extended_types));
        RogueInt32 _auto_1401_28 = (0);
        for (;_auto_1401_28 < _auto_1400_27->count;++_auto_1401_28)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_29,(((RogueClassType*)(_auto_1400_27->data->objects[_auto_1401_28]))));
          if (extended_class_29->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_29, m_0, at_index_1 );
          }
        }
      }
    }
  }
}

void RogueType__apply_augment_labels__Method_Method( RogueClassType* THIS, RogueClassMethod* aug_m_0, RogueClassMethod* existing_m_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1402_3,(existing_m_1->label_list));
    RogueInt32 _auto_1403_4 = (0);
    for (;_auto_1403_4 < _auto_1402_3->count;++_auto_1403_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,method_label_5,(((RogueClassCmdLabel*)(_auto_1402_3->data->objects[_auto_1403_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,aug_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(aug_m_0->label_lookup), ROGUE_ARG(method_label_5->name) )))));
      if (!!(aug_label_2))
      {
        RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)method_label_5->statements)), ROGUE_ARG(((RogueCmd_List*)(aug_label_2->statements))) );
        aug_label_2->is_referenced = true;
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1404_6,(aug_m_0->label_list));
    RogueInt32 _auto_1405_7 = (0);
    for (;_auto_1405_7 < _auto_1404_6->count;++_auto_1405_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_8,(((RogueClassCmdLabel*)(_auto_1404_6->data->objects[_auto_1405_7]))));
      if (!(label_8->is_referenced))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(label_8->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[379] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_8->name) )))) )))), Rogue_literal_strings[380] )))) )))) ))));
      }
    }
  }
}

void RogueType__index_and_move_inline_to_end__Method_List( RogueClassType* THIS, RogueMethod_List* list_0 )
{
  RogueInt32 i_1 = ((list_0->count - 1));
  while (i_1 >= 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(list_0->data->objects[i_1]))));
    if (((RogueMethod__is_macro( m_2 ))))
    {
      RogueMethod_List__remove__Method( list_0, m_2 );
      RogueMethod_List__add__Method( list_0, m_2 );
    }
    --i_1;
  }
  i_1 = ((RogueInt32)0);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1406_3,(list_0));
    RogueInt32 _auto_1407_4 = (0);
    for (;_auto_1407_4 < _auto_1406_3->count;++_auto_1407_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueClassMethod*)(_auto_1406_3->data->objects[_auto_1407_4]))));
      m_5->index = i_1;
      ++i_1;
    }
  }
}

RogueLogical RogueType__omit_output( RogueClassType* THIS )
{
  return (RogueLogical)((((RogueType__is_native( ROGUE_ARG(THIS) ))) || !(THIS->is_used)));
}

RogueClassType* RogueType__resolve( RogueClassType* THIS )
{
  if (THIS->resolved)
  {
    return (RogueClassType*)(THIS);
  }
  THIS->resolved = true;
  RogueType__organize__Scope( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1408_0,(THIS->global_method_list));
    RogueInt32 _auto_1409_1 = (0);
    for (;_auto_1409_1 < _auto_1408_0->count;++_auto_1409_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_2,(((RogueClassMethod*)(_auto_1408_0->data->objects[_auto_1409_1]))));
      RogueMethod__resolve( r_2 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1410_3,(THIS->method_list));
    RogueInt32 _auto_1411_4 = (0);
    for (;_auto_1411_4 < _auto_1410_3->count;++_auto_1411_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueClassMethod*)(_auto_1410_3->data->objects[_auto_1411_4]))));
      RogueMethod__resolve( m_5 );
    }
  }
  return (RogueClassType*)(THIS);
}

RogueLogical RogueType__should_cull( RogueClassType* THIS )
{
  return (RogueLogical)(!(THIS->is_used));
}

void RogueType__trace_used_code( RogueClassType* THIS )
{
  if (THIS->is_used)
  {
    return;
  }
  THIS->is_used = true;
  if (((RogueType__is_singleton( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_0,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[513] )))));
    if (!!(m_0))
    {
      RogueMethod__make_requisite( m_0 );
    }
  }
  if (!!(THIS->_element_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_element_type) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1412_1,(THIS->base_types));
    RogueInt32 _auto_1413_2 = (0);
    for (;_auto_1413_2 < _auto_1412_1->count;++_auto_1413_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1412_1->data->objects[_auto_1413_2]))));
      RogueType__trace_used_code( base_type_3 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1414_4,(THIS->global_list));
    RogueInt32 _auto_1415_5 = (0);
    for (;_auto_1415_5 < _auto_1414_4->count;++_auto_1415_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_6,(((RogueClassProperty*)(_auto_1414_4->data->objects[_auto_1415_5]))));
      RogueType__trace_used_code( ROGUE_ARG(s_6->_type) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1416_7,(THIS->property_list));
    RogueInt32 _auto_1417_8 = (0);
    for (;_auto_1417_8 < _auto_1416_7->count;++_auto_1417_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_9,(((RogueClassProperty*)(_auto_1416_7->data->objects[_auto_1417_8]))));
      RogueType__trace_used_code( ROGUE_ARG(p_9->_type) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1418_10,(THIS->global_method_list));
    RogueInt32 _auto_1419_11 = (0);
    for (;_auto_1419_11 < _auto_1418_10->count;++_auto_1419_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_12,(((RogueClassMethod*)(_auto_1418_10->data->objects[_auto_1419_11]))));
      if (((RogueMethod__is_requisite( r_12 ))))
      {
        RogueMethod__trace_used_code( r_12 );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1420_13,(THIS->method_list));
    RogueInt32 _auto_1421_14 = (0);
    for (;_auto_1421_14 < _auto_1420_13->count;++_auto_1421_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueClassMethod*)(_auto_1420_13->data->objects[_auto_1421_14]))));
      if (((RogueMethod__is_requisite( m_15 ))))
      {
        RogueMethod__trace_used_code( m_15 );
      }
    }
  }
}

void RogueType__validate( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1422_0,(THIS->method_list));
    RogueInt32 _auto_1423_1 = (0);
    for (;_auto_1423_1 < _auto_1422_0->count;++_auto_1423_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(_auto_1422_0->data->objects[_auto_1423_1]))));
      RogueMethod__validate( m_2 );
    }
  }
}

void RogueType__assign_cpp_name( RogueClassType* THIS )
{
  THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )));
  if ((THIS->is_array || ((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray)))
  {
    THIS->cpp_class_name = Rogue_literal_strings[541];
    THIS->cpp_name = Rogue_literal_strings[542];
  }
  else if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) || THIS->simplify_name))
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[52], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_list)
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[52], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_optional)
  {
    THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[365], ROGUE_ARG(THIS->_element_type->cpp_name) )))) )));
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[52], ROGUE_ARG(THIS->cpp_name) )));
  }
  else
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[543], ROGUE_ARG(THIS->cpp_name) )));
  }
  THIS->cpp_type_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[544], ROGUE_ARG(THIS->cpp_name) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1424_0,(THIS->global_list));
    RogueInt32 _auto_1425_1 = (0);
    for (;_auto_1425_1 < _auto_1424_0->count;++_auto_1425_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueClassProperty*)(_auto_1424_0->data->objects[_auto_1425_1]))));
      s_2->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(s_2->name) )));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1426_3,(THIS->property_list));
    RogueInt32 _auto_1427_4 = (0);
    for (;_auto_1427_4 < _auto_1426_3->count;++_auto_1427_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1426_3->data->objects[_auto_1427_4]))));
      if (((RogueProperty__is_native( p_5 ))))
      {
        p_5->cpp_name = p_5->name;
      }
      else
      {
        p_5->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->name) )));
      }
    }
  }
}

void RogueType__print_data_definition__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  if ((((RogueType__omit_output( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    return;
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[562] )))), ROGUE_ARG(THIS->cpp_class_name) );
  RogueLogical is_error_1 = (false);
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))))
    {
      is_error_1 = ((RogueLogical)true);
      RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[564] )))), ROGUE_ARG(THIS->base_class) );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[566] );
    }
  }
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__println( writer_0 )))), Rogue_literal_strings[232] );
  writer_0->indent += 2;
  if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[567] );
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1428_3,(THIS->property_list));
      RogueInt32 _auto_1429_4 = (0);
      for (;_auto_1429_4 < _auto_1428_3->count;++_auto_1429_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1428_3->data->objects[_auto_1429_4]))));
        if ((!(is_error_1) || ((void*)p_5->type_context) == ((void*)THIS)))
        {
          if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) && ((RogueType__is_reference( ROGUE_ARG(p_5->_type) )))))
          {
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[568] );
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_5->_type) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(p_5->cpp_name) );
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[569] );
          }
          else if (((RogueProperty__is_native( p_5 ))))
          {
            RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( writer_0, ROGUE_ARG(p_5->t), ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassMethod*)(NULL))), ROGUE_ARG(p_5->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
          }
          else
          {
            RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_5->_type) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(p_5->cpp_name) )))), Rogue_literal_strings[241] );
          }
        }
      }
    }
    RogueCPPWriter__println( writer_0 );
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    if (!!(THIS->property_list->count))
    {
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[581] );
      RogueLogical first_2 = (true);
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1430_6,(THIS->property_list));
        RogueInt32 _auto_1431_7 = (0);
        for (;_auto_1431_7 < _auto_1430_6->count;++_auto_1431_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_8,(((RogueClassProperty*)(_auto_1430_6->data->objects[_auto_1431_7]))));
          if (first_2)
          {
            first_2 = ((RogueLogical)false);
          }
          else
          {
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
          }
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(p_8->cpp_name) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(p_8->_type) )))), Rogue_literal_strings[32] );
        }
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[583] );
      RogueCPPWriter__println( writer_0 );
      if (THIS->is_optional)
      {
        RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[584] )))), ROGUE_ARG(((RogueClassProperty*)(THIS->property_list->data->objects[0]))->_type) );
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[585] );
      }
      else
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[584] );
        first_2 = ((RogueLogical)true);
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1432_9,(THIS->property_list));
          RogueInt32 _auto_1433_10 = (0);
          for (;_auto_1433_10 < _auto_1432_9->count;++_auto_1433_10)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_11,(((RogueClassProperty*)(_auto_1432_9->data->objects[_auto_1433_10]))));
            if (first_2)
            {
              first_2 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
            }
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_11->_type) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(p_11->cpp_name) );
          }
        }
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[586] );
        first_2 = ((RogueLogical)true);
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1434_12,(THIS->property_list));
          RogueInt32 _auto_1435_13 = (0);
          for (;_auto_1435_13 < _auto_1434_12->count;++_auto_1435_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_14,(((RogueClassProperty*)(_auto_1434_12->data->objects[_auto_1435_13]))));
            if (first_2)
            {
              first_2 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
            }
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(p_14->cpp_name) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(p_14->cpp_name) )))), Rogue_literal_strings[32] );
          }
        }
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[583] );
        RogueCPPWriter__println( writer_0 );
      }
    }
    if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
    {
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[587] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[588] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
      if (THIS->is_optional)
      {
        writer_0->indent += 2;
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[589] );
        writer_0->indent -= 2;
      }
      else
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1436_15,(THIS->property_list));
          RogueInt32 _auto_1437_16 = (0);
          for (;_auto_1437_16 < _auto_1436_15->count;++_auto_1437_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_17,(((RogueClassProperty*)(_auto_1436_15->data->objects[_auto_1437_16]))));
            RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[590] )))), ROGUE_ARG(p_17->cpp_name) )))), Rogue_literal_strings[591] )))), ROGUE_ARG(p_17->cpp_name) )))), Rogue_literal_strings[592] );
          }
        }
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[593] );
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
      RogueCPPWriter__println( writer_0 );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[594] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[588] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[595] );
    }
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[596] );
}

void RogueType__print_global_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1438_1,(THIS->global_method_list));
    RogueInt32 _auto_1439_2 = (0);
    for (;_auto_1439_2 < _auto_1438_1->count;++_auto_1439_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1438_1->data->objects[_auto_1439_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__print_global_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1440_1,(THIS->global_method_list));
    RogueInt32 _auto_1441_2 = (0);
    for (;_auto_1441_2 < _auto_1440_1->count;++_auto_1441_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1440_1->data->objects[_auto_1441_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueCPPWriter__mark_routine_start__Method( writer_0, m_3 );
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        RogueCPPWriter__mark_routine_end( writer_0 );
      }
    }
  }
}

void RogueType__print_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1442_1,(THIS->method_list));
    RogueInt32 _auto_1443_2 = (0);
    for (;_auto_1443_2 < _auto_1442_1->count;++_auto_1443_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1442_1->data->objects[_auto_1443_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( RogueClassType* THIS, RogueString_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1444_6,(THIS->method_list));
    RogueInt32 _auto_1445_7 = (0);
    for (;_auto_1445_7 < _auto_1444_6->count;++_auto_1445_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1444_6->data->objects[_auto_1445_7]))));
      if (((!(((RogueMethod__is_macro( m_8 )))) && ((RogueMethod__is_dynamic( m_8 )))) && m_8->is_used))
      {
        RogueStringBuilder__clear( buffer_2 );
        if (!!(m_8->_return_type))
        {
          RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->_return_type->cpp_class_name) );
          if (((RogueType__is_reference( ROGUE_ARG(m_8->_return_type) ))))
          {
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
          }
        }
        else
        {
          RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[565] );
        }
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[612] );
        RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->type_context->cpp_class_name) )))), Rogue_literal_strings[248] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1446_9,(m_8->parameters));
          RogueInt32 i_10 = (0);
          for (;i_10 < _auto_1446_9->count;++i_10)
          {
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)',', true );
            ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_3,(((RogueClassLocal*)(m_8->parameters->data->objects[i_10]))->_type));
            RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(param_type_3->cpp_class_name) );
            if (((RogueType__is_reference( param_type_3 ))))
            {
              RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
            }
          }
        }
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[32] );
        ROGUE_DEF_LOCAL_REF(RogueString*,sig_4,(((RogueStringBuilder__to_String( buffer_2 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,mapping_5,(((RogueTable_String_Method___get__String( lookup_1, sig_4 )))));
        if (!!(mapping_5))
        {
          m_8->cpp_typedef = mapping_5->cpp_typedef;
          if ((!(mapping_5->called_dynamically) && m_8->called_dynamically))
          {
            RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          }
        }
        else
        {
          m_8->cpp_typedef = ((RogueString__operatorPLUS__Int32( Rogue_literal_strings[613], ROGUE_ARG(list_0->count) )));
          RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          RogueString_List__add__String( list_0, sig_4 );
        }
      }
    }
  }
}

RogueInt32 RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( RogueClassType* THIS, RogueInt32 at_index_0, RogueClassCPPWriter* writer_1 )
{
  if (!(((RogueType__is_reference( ROGUE_ARG(THIS) )))))
  {
    return (RogueInt32)(at_index_0);
  }
  THIS->dynamic_method_table_index = at_index_0;
  RogueInt32 i2_2 = ((THIS->method_list->count - 1));
  while (i2_2 > 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(THIS->method_list->data->objects[i2_2]))));
    if (((!(((RogueMethod__is_macro( m_3 )))) && ((RogueMethod__is_dynamic( m_3 )))) && m_3->is_used))
    {
      goto _auto_1447;
    }
    --i2_2;
  }
  _auto_1447:;
  RogueLogical print_type_name_4 = (true);
  {
    RogueInt32 i_5 = (0);
    RogueInt32 _auto_122_6 = (i2_2);
    for (;i_5 <= _auto_122_6;++i_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_7,(((RogueClassMethod*)(THIS->method_list->data->objects[i_5]))));
      if (!(((RogueMethod__is_macro( m_7 )))))
      {
        if ((((RogueMethod__is_dynamic( m_7 ))) && m_7->is_used))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[665] )))), ROGUE_ARG(m_7->cpp_typedef) )))), Rogue_literal_strings[666] )))), ROGUE_ARG(m_7->cpp_name) )))), Rogue_literal_strings[5] );
        }
        else
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[667] );
        }
        if (print_type_name_4)
        {
          print_type_name_4 = ((RogueLogical)false);
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[668] )))), ROGUE_ARG(THIS->name) );
        }
        RogueCPPWriter__println( writer_1 );
        ++at_index_0;
      }
    }
  }
  return (RogueInt32)(at_index_0);
}

void RogueType__print_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1448_1,(THIS->method_list));
    RogueInt32 _auto_1449_2 = (0);
    for (;_auto_1449_2 < _auto_1448_1->count;++_auto_1449_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1448_1->data->objects[_auto_1449_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueCPPWriter__mark_method_start__Type_Method( writer_0, ROGUE_ARG(THIS), m_3 );
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        RogueCPPWriter__mark_method_end( writer_0 );
      }
    }
  }
}

RogueClassAttributes* RogueAttributes__init_object( RogueClassAttributes* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__init( RogueClassAttributes* THIS )
{
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__type_name( RogueClassAttributes* THIS )
{
  return (RogueString*)(Rogue_literal_strings[774]);
}

RogueClassAttributes* RogueAttributes__init__Int32( RogueClassAttributes* THIS, RogueInt32 _auto_123_0 )
{
  THIS->flags = _auto_123_0;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__clone( RogueClassAttributes* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassAttributes*,result_0,(((RogueAttributes__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))), ROGUE_ARG(THIS->flags) )))));
  if (!!(THIS->tags))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1450_1,(THIS->tags));
      RogueInt32 _auto_1451_2 = (0);
      for (;_auto_1451_2 < _auto_1450_1->count;++_auto_1451_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1450_1->data->objects[_auto_1451_2]))));
        RogueAttributes__add__String( result_0, tag_3 );
      }
    }
  }
  return (RogueClassAttributes*)(result_0);
}

RogueClassAttributes* RogueAttributes__add__Int32( RogueClassAttributes* THIS, RogueInt32 flag_0 )
{
  THIS->flags |= flag_0;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__String( RogueClassAttributes* THIS, RogueString* tag_0 )
{
  if (((void*)THIS->tags) == ((void*)NULL))
  {
    THIS->tags = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->tags), tag_0 );
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__Attributes( RogueClassAttributes* THIS, RogueClassAttributes* other_0 )
{
  THIS->flags |= other_0->flags;
  if (!!(other_0->tags))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1452_1,(other_0->tags));
      RogueInt32 _auto_1453_2 = (0);
      for (;_auto_1453_2 < _auto_1452_1->count;++_auto_1453_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1452_1->data->objects[_auto_1453_2]))));
        RogueAttributes__add__String( ROGUE_ARG(THIS), tag_3 );
      }
    }
  }
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__element_type_name( RogueClassAttributes* THIS )
{
  switch ((THIS->flags & 7))
  {
    case 2:
    {
      return (RogueString*)(Rogue_literal_strings[341]);
      break;
    }
    case 1:
    {
      return (RogueString*)(Rogue_literal_strings[338]);
      break;
    }
    case 3:
    {
      return (RogueString*)(Rogue_literal_strings[342]);
      break;
    }
    default:
    {
      return (RogueString*)(Rogue_literal_strings[114]);
    }
  }
}

RogueClassTemplate* RogueTemplate__init_object( RogueClassTemplate* THIS )
{
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTemplate*)(THIS);
}

RogueString* RogueTemplate__type_name( RogueClassTemplate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[777]);
}

RogueClassTemplate* RogueTemplate__init__Token_String_Int32( RogueClassTemplate* THIS, RogueClassToken* _auto_142_0, RogueString* _auto_143_1, RogueInt32 attribute_flags_2 )
{
  THIS->name = _auto_143_1;
  THIS->t = _auto_142_0;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), attribute_flags_2 );
  return (RogueClassTemplate*)(THIS);
}

RogueClassTypeParameter* RogueTemplate__add_type_parameter__Token_String( RogueClassTemplate* THIS, RogueClassToken* p_t_0, RogueString* p_name_1 )
{
  if (((void*)THIS->type_parameters) == ((void*)NULL))
  {
    THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_2,(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), p_t_0, p_name_1 )))));
  RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(THIS->type_parameters), param_2 );
  return (RogueClassTypeParameter*)(param_2);
}

RogueInt32 Rogue_Template__element_type( RogueClassTemplate* THIS )
{
  return (RogueInt32)((THIS->attributes->flags & 7));
}

void RogueTemplate__instantiate__Type_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueClassScope* scope_1 )
{
  if (!!(THIS->alternates_by_param_count))
  {
    RogueInt32 specializer_count_2 = (0);
    if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
    {
      specializer_count_2 = ((RogueInt32)((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(type_0->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))) ))));
    }
    if (((RogueTemplate__type_parameter_count( ROGUE_ARG(THIS) ))) != specializer_count_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,alternate_3,(((RogueTable_Int32_Template___get__Int32( ROGUE_ARG(THIS->alternates_by_param_count), specializer_count_2 )))));
      if (!!(alternate_3))
      {
        RogueTemplate__instantiate__Type_Scope( alternate_3, type_0, scope_1 );
        return;
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[367] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[368] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__pluralized__Int32( Rogue_literal_strings[369], specializer_count_2 )))) )))) )))), Rogue_literal_strings[373] )))) )))) ))));
      }
    }
  }
  type_0->t = THIS->t;
  RogueAttributes__add__Attributes( ROGUE_ARG(type_0->attributes), ROGUE_ARG(THIS->attributes) );
  type_0->source_template = THIS;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,augmented_tokens_4,(THIS->tokens));
  augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(THIS->name), augmented_tokens_4 ))));
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(type_0->name), ROGUE_ARG(THIS->name) ))) != 0)
  {
    augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(type_0->name), augmented_tokens_4 ))));
  }
  if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)']' ))))
  {
    RogueTemplate__instantiate_list__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'?' ))))
  {
    RogueTemplate__instantiate_optional__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (!!(THIS->type_parameters))
  {
    RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( ROGUE_ARG(THIS), type_0, augmented_tokens_4, scope_1 );
  }
  else
  {
    RogueTemplate__instantiate_standard_type__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
}

RogueToken_List* RogueTemplate__add_augmented_tokens__Type_String_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueString* augment_name_1, RogueToken_List* augmented_tokens_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_3,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), augment_name_1 )))));
  if (!(!!(augments_3)))
  {
    return (RogueToken_List*)(augmented_tokens_2);
  }
  RogueInt32 t_count_4 = (2);
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_1454_5,(augments_3));
    RogueInt32 _auto_1455_6 = (0);
    for (;_auto_1455_6 < _auto_1454_5->count;++_auto_1455_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_7,(((RogueClassAugment*)(_auto_1454_5->data->objects[_auto_1455_6]))));
      t_count_4 += aug_7->tokens->count;
    }
  }
  if (((void*)augmented_tokens_2) == ((void*)THIS->tokens))
  {
    augmented_tokens_2 = ((RogueToken_List*)((RogueToken_List__add__Token_List( ROGUE_ARG(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((THIS->tokens->count + t_count_4)) )))), augmented_tokens_2 ))));
  }
  else
  {
    RogueToken_List__reserve__Int32( augmented_tokens_2, t_count_4 );
  }
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(RogueTokenType_begin_augment_tokens) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_1456_8,(augments_3));
    RogueInt32 _auto_1457_9 = (0);
    for (;_auto_1457_9 < _auto_1456_8->count;++_auto_1457_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_10,(((RogueClassAugment*)(_auto_1456_8->data->objects[_auto_1457_9]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1458_11,(aug_10->base_types));
        RogueInt32 _auto_1459_12 = (0);
        for (;_auto_1459_12 < _auto_1458_11->count;++_auto_1459_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_13,(((RogueClassType*)(_auto_1458_11->data->objects[_auto_1459_12]))));
          RogueType_List__add__Type( ROGUE_ARG(type_0->base_types), base_type_13 );
        }
      }
      RogueToken_List__add__Token_List( augmented_tokens_2, ROGUE_ARG(aug_10->tokens) );
    }
  }
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) );
  return (RogueToken_List*)(augmented_tokens_2);
}

void RogueTemplate__instantiate_list__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  type_0->is_list = true;
  type_0->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -2 )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )));
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1460_3,(augmented_tokens_1));
    RogueInt32 _auto_1461_4 = (0);
    for (;_auto_1461_4 < _auto_1460_3->count;++_auto_1461_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_1460_3->data->objects[_auto_1461_4]))));
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM71( 2, template_t_5 ))), Rogue_literal_strings[374] ))))
        {
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_optional__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  type_0->is_optional = true;
  type_0->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -1 )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )));
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1462_3,(augmented_tokens_1));
    RogueInt32 _auto_1463_4 = (0);
    for (;_auto_1463_4 < _auto_1462_3->count;++_auto_1463_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_1462_3->data->objects[_auto_1463_4]))));
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM71( 2, template_t_5 ))), Rogue_literal_strings[374] ))))
        {
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1, RogueClassScope* scope_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_3,(augmented_tokens_1));
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_TypeSpecializer_*,type_specializers_4,(((RogueTable_String_TypeSpecializer___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(Table_String_TypeSpecializer_))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,specialization_string_5,(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))));
  if (specialization_string_5->character_count == 0)
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[420] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[421] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[422] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_6,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(THIS->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))));
  RogueParser__read( parser_6 );
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_7,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueLogical first_8 = (true);
  while ((first_8 || ((RogueParser__consume__TokenType( parser_6, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_8 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,specializer_tokens_9,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_6, ROGUE_ARG(((RogueStringBuilder__clear( buffer_7 )))), specializer_tokens_9 );
    RogueInt32 index_10 = (((RogueTable_String_TypeSpecializer___count( type_specializers_4 ))));
    if (index_10 >= THIS->type_parameters->count)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[423] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_11,(((RogueClassTypeParameter*)(THIS->type_parameters->data->objects[index_10]))));
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_12,(((RogueTypeSpecializer__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeSpecializer*,ROGUE_CREATE_OBJECT(TypeSpecializer))), ROGUE_ARG(param_11->name), index_10 )))));
    specializer_12->tokens = specializer_tokens_9;
    RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( type_specializers_4, ROGUE_ARG(specializer_12->name), specializer_12 );
    if (!(!!(type_0->specializers)))
    {
      type_0->specializers = ((RogueTypeSpecializer_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeSpecializer_List*,ROGUE_CREATE_OBJECT(TypeSpecializer_List))) )));
    }
    RogueTypeSpecializer_List__add__TypeSpecializer( ROGUE_ARG(type_0->specializers), specializer_12 );
  }
  if (((RogueTable_String_TypeSpecializer___count( type_specializers_4 ))) < THIS->type_parameters->count)
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[424] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[425] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueTable_String_TypeSpecializer___count( type_specializers_4 )))) )))) )))), Rogue_literal_strings[426] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[427] )))) )))) ))));
  }
  instance_tokens_3 = ((RogueToken_List*)((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((augmented_tokens_1->count * 2)) ))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1468_14,(augmented_tokens_1));
    RogueInt32 _auto_1469_15 = (0);
    for (;_auto_1469_15 < _auto_1468_14->count;++_auto_1469_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_16,(((RogueClassToken*)(_auto_1468_14->data->objects[_auto_1469_15]))));
      if (((void*)template_t_16->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_13,(((RogueTable_String_TypeSpecializer___get__String( type_specializers_4, ROGUE_ARG((call_ROGUEM71( 2, template_t_16 ))) )))));
        if (!!(specializer_13))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1470_17,(specializer_13->tokens));
            RogueInt32 _auto_1471_18 = (0);
            for (;_auto_1471_18 < _auto_1470_17->count;++_auto_1471_18)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_19,(((RogueClassToken*)(_auto_1470_17->data->objects[_auto_1471_18]))));
              RogueToken_List__add__Token( instance_tokens_3, specializer_t_19 );
            }
          }
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_3, false )))), type_0 );
}

void RogueTemplate__instantiate_standard_type__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[428] ))));
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), augmented_tokens_1, false )))), type_0 );
}

RogueInt32 RogueTemplate__type_parameter_count( RogueClassTemplate* THIS )
{
  if (!!(THIS->type_parameters))
  {
    return (RogueInt32)(THIS->type_parameters->count);
  }
  return (RogueInt32)(0);
}

RogueTypeParameter_List* RogueTypeParameter_List__init_object( RogueTypeParameter_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__init( RogueTypeParameter_List* THIS )
{
  RogueTypeParameter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTypeParameter_List*)(THIS);
}

RogueString* RogueTypeParameter_List__to_String( RogueTypeParameter_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_1472_2,(THIS));
    RogueInt32 _auto_1473_3 = (0);
    for (;_auto_1473_3 < _auto_1472_2->count;++_auto_1473_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,value_4,(((RogueClassTypeParameter*)(_auto_1472_2->data->objects[_auto_1473_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeParameter_List__type_name( RogueTypeParameter_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[843]);
}

RogueTypeParameter_List* RogueTypeParameter_List__init__Int32( RogueTypeParameter_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeParameter*), true );
  }
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__add__TypeParameter( RogueTypeParameter_List* THIS, RogueClassTypeParameter* value_0 )
{
  ((RogueTypeParameter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTypeParameter_List*)(THIS);
}

RogueInt32 RogueTypeParameter_List__capacity( RogueTypeParameter_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTypeParameter_List* RogueTypeParameter_List__reserve__Int32( RogueTypeParameter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTypeParameter_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTypeParameter_List*)(THIS);
}

RogueClassTypeParameter* RogueTypeParameter__init_object( RogueClassTypeParameter* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTypeParameter*)(THIS);
}

RogueString* RogueTypeParameter__type_name( RogueClassTypeParameter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[775]);
}

RogueClassTypeParameter* RogueTypeParameter__init__Token_String( RogueClassTypeParameter* THIS, RogueClassToken* _auto_124_0, RogueString* _auto_125_1 )
{
  THIS->name = _auto_125_1;
  THIS->t = _auto_124_0;
  return (RogueClassTypeParameter*)(THIS);
}

RogueString* RogueArray_TypeParameter___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[893]);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init_object( RogueClassTable_Int32_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init( RogueClassTable_Int32_Template_* THIS )
{
  RogueTable_Int32_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueString* RogueTable_Int32_Template___to_String( RogueClassTable_Int32_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Int32_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Int32_Template___type_name( RogueClassTable_Int32_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[776]);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_Int32_Template__List__init__Int32_TableEntry_Int32_Template_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_Int32_Template__List*,ROGUE_CREATE_OBJECT(TableEntry_Int32_Template__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_Int32_Template_*)(NULL))) )));
  THIS->keys = ((RogueInt32_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueInt32_List*,ROGUE_CREATE_OBJECT(Int32_List))) )));
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueLogical RogueTable_Int32_Template___contains__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  return (RogueLogical)(!!(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_Int32_Template_* RogueTable_Int32_Template___find__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  RogueInt32 hash_1 = (((RogueInt32__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_2,(((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && entry_2->key == key_0))
    {
      return (RogueClassTableEntry_Int32_Template_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_Int32_Template_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_Int32_Template_*)(((RogueClassTableEntry_Int32_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_Int32_Template___get__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_1,(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___set__Int32_Template( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0, RogueClassTemplate* value_1 )
{
  RogueInt32 hash_2 = (((RogueInt32__hash_code( key_0 ))));
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_4,(((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && entry_4->key == key_0))
    {
      entry_4->value = value_1;
      return (RogueClassTable_Int32_Template_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_Int32_Template_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_Int32_Template_*)((RogueTableEntry_Int32_Template___init__Int32_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Int32_Template_*,ROGUE_CREATE_OBJECT(TableEntry_Int32_Template_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueInt32_List__add__Int32( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_Int32_Template___print_to__StringBuilder( RogueClassTable_Int32_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueInt32 key_2 = (THIS->keys->data->integers[i_1]);
    RogueStringBuilder__print__Int32( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_Int32_Template___get__Int32( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init_object( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueTableEntry_Int32_Template__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueString* RogueTableEntry_Int32_Template__List__to_String( RogueTableEntry_Int32_Template__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_Int32_Template__List*,_auto_1528_2,(THIS));
    RogueInt32 _auto_1529_3 = (0);
    for (;_auto_1529_3 < _auto_1528_2->count;++_auto_1529_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,value_4,(((RogueClassTableEntry_Int32_Template_*)(_auto_1528_2->data->objects[_auto_1529_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_Int32_Template___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_Int32_Template__List__type_name( RogueTableEntry_Int32_Template__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[844]);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init__Int32( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_Int32_Template_*), true );
  }
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init__Int32_TableEntry_Int32_Template_( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_Int32_Template_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_Int32_Template_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_130_3 = (initial_capacity_0);
      for (;i_2 <= _auto_130_3;++i_2)
      {
        RogueTableEntry_Int32_Template__List__add__TableEntry_Int32_Template_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__add__TableEntry_Int32_Template_( RogueTableEntry_Int32_Template__List* THIS, RogueClassTableEntry_Int32_Template_* value_0 )
{
  ((RogueTableEntry_Int32_Template__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueInt32 RogueTableEntry_Int32_Template__List__capacity( RogueTableEntry_Int32_Template__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__reserve__Int32( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_Int32_Template_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_Int32_Template__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_Int32_Template_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init_object( RogueClassTableEntry_Int32_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueString* RogueTableEntry_Int32_Template___to_String( RogueClassTableEntry_Int32_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Int32_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_Int32_Template___type_name( RogueClassTableEntry_Int32_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[742]);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init__Int32_Template_Int32( RogueClassTableEntry_Int32_Template_* THIS, RogueInt32 _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueString* RogueArray_TableEntry_Int32_Template____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[894]);
}

RogueInt32_List* RogueInt32_List__init_object( RogueInt32_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__init( RogueInt32_List* THIS )
{
  RogueInt32_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueInt32_List__to_String( RogueInt32_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_1556_2,(THIS));
    RogueInt32 _auto_1557_3 = (0);
    for (;_auto_1557_3 < _auto_1556_2->count;++_auto_1557_3)
    {
      RogueInt32 value_4 = (_auto_1556_2->data->integers[_auto_1557_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueInt32__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueInt32_List__type_name( RogueInt32_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[845]);
}

RogueInt32_List* RogueInt32_List__init__Int32( RogueInt32_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueInt32) );
  }
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__add__Int32( RogueInt32_List* THIS, RogueInt32 value_0 )
{
  ((RogueInt32_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->integers[THIS->count] = value_0;
  ++THIS->count;
  return (RogueInt32_List*)(THIS);
}

RogueInt32 RogueInt32_List__capacity( RogueInt32_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueInt32_List* RogueInt32_List__reserve__Int32( RogueInt32_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueInt32) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueInt32_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueInt32) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueArray_Int32___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[895]);
}

RogueType_List* RogueType_List__init_object( RogueType_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__init( RogueType_List* THIS )
{
  RogueType_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueType_List*)(THIS);
}

RogueString* RogueType_List__to_String( RogueType_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1584_2,(THIS));
    RogueInt32 _auto_1585_3 = (0);
    for (;_auto_1585_3 < _auto_1584_2->count;++_auto_1585_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_4,(((RogueClassType*)(_auto_1584_2->data->objects[_auto_1585_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueType__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueType_List__type_name( RogueType_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[846]);
}

RogueType_List* RogueType_List__init__Int32( RogueType_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassType*), true );
  }
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__clone( RogueType_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,result_0,(((RogueType_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1588_1,(THIS));
    RogueInt32 _auto_1589_2 = (0);
    for (;_auto_1589_2 < _auto_1588_1->count;++_auto_1589_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_3,(((RogueClassType*)(_auto_1588_1->data->objects[_auto_1589_2]))));
      RogueType_List__add__Type( result_0, value_3 );
    }
  }
  return (RogueType_List*)(result_0);
}

RogueType_List* RogueType_List__add__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  ((RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueType_List*)(THIS);
}

RogueInt32 RogueType_List__capacity( RogueType_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueType_List* RogueType_List__clear( RogueType_List* THIS )
{
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueType_List*)(THIS);
}

void RogueType_List__discard_from__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueType_List* RogueType_List__filter__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* fn_0 )
{
  RogueInt32 write_pos_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1602_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_1602_3->count;++i_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_2,(((RogueClassType*)(THIS->data->objects[i_4]))));
      if ((call_ROGUEM298( 10, fn_0, value_2 )))
      {
        THIS->data->objects[write_pos_1] = value_2;
        ++write_pos_1;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), write_pos_1 );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__filtered__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* fn_0 )
{
  return (RogueType_List*)(((RogueType_List__filter__Function_Type_RETURNSLogical( ROGUE_ARG(((RogueType_List__clone( ROGUE_ARG(THIS) )))), fn_0 ))));
}

RogueType_List* RogueType_List__insert__Type_Int32( RogueType_List* THIS, RogueClassType* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueType_List*)(((RogueType_List__add__Type( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    ++THIS->count;
    THIS->data->objects[before_index_1] = value_0;
  }
  return (RogueType_List*)(THIS);
}

RogueOptionalInt32 RogueType_List__locate__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1605_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_1605_1->count;++i_2)
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassType*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueType_List* RogueType_List__reserve__Int32( RogueType_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueType_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueType_List*)(THIS);
}

RogueClassType* RogueType_List__remove__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueType_List__locate__Type( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassType*)(((RogueType_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_2,0);
    return (RogueClassType*)(zero_value_2);
  }
}

RogueClassType* RogueType_List__remove_at__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueClassType*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassType*)(result_1);
}

RogueType_List* RogueType_List__swap__Int32_Int32( RogueType_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,temp_2,(((RogueClassType*)(THIS->data->objects[i1_0]))));
  THIS->data->objects[i1_0] = ((RogueClassType*)(THIS->data->objects[i2_1]));
  THIS->data->objects[i2_1] = temp_2;
  return (RogueType_List*)(THIS);
}

RogueString* RogueArray_Type___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[896]);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init_object( RogueTypeSpecializer_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init( RogueTypeSpecializer_List* THIS )
{
  RogueTypeSpecializer_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueString* RogueTypeSpecializer_List__to_String( RogueTypeSpecializer_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_1617_2,(THIS));
    RogueInt32 _auto_1618_3 = (0);
    for (;_auto_1618_3 < _auto_1617_2->count;++_auto_1618_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,value_4,(((RogueClassTypeSpecializer*)(_auto_1617_2->data->objects[_auto_1618_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeSpecializer_List__type_name( RogueTypeSpecializer_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[847]);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeSpecializer*), true );
  }
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__add__TypeSpecializer( RogueTypeSpecializer_List* THIS, RogueClassTypeSpecializer* value_0 )
{
  ((RogueTypeSpecializer_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueInt32 RogueTypeSpecializer_List__capacity( RogueTypeSpecializer_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__reserve__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTypeSpecializer_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init_object( RogueClassTypeSpecializer* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueString* RogueTypeSpecializer__type_name( RogueClassTypeSpecializer* THIS )
{
  return (RogueString*)(Rogue_literal_strings[778]);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init__String_Int32( RogueClassTypeSpecializer* THIS, RogueString* _auto_144_0, RogueInt32 _auto_145_1 )
{
  THIS->index = _auto_145_1;
  THIS->name = _auto_144_0;
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueString* RogueArray_TypeSpecializer___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[897]);
}

RogueDefinition_List* RogueDefinition_List__init_object( RogueDefinition_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__init( RogueDefinition_List* THIS )
{
  RogueDefinition_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueDefinition_List*)(THIS);
}

RogueString* RogueDefinition_List__to_String( RogueDefinition_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_1650_2,(THIS));
    RogueInt32 _auto_1651_3 = (0);
    for (;_auto_1651_3 < _auto_1650_2->count;++_auto_1651_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,value_4,(((RogueClassDefinition*)(_auto_1650_2->data->objects[_auto_1651_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueDefinition_List__type_name( RogueDefinition_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[848]);
}

RogueDefinition_List* RogueDefinition_List__init__Int32( RogueDefinition_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassDefinition*), true );
  }
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__add__Definition( RogueDefinition_List* THIS, RogueClassDefinition* value_0 )
{
  ((RogueDefinition_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueDefinition_List*)(THIS);
}

RogueInt32 RogueDefinition_List__capacity( RogueDefinition_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueDefinition_List* RogueDefinition_List__reserve__Int32( RogueDefinition_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueDefinition_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueDefinition_List*)(THIS);
}

RogueClassDefinition* RogueDefinition__init_object( RogueClassDefinition* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassDefinition*)(THIS);
}

RogueString* RogueDefinition__type_name( RogueClassDefinition* THIS )
{
  return (RogueString*)(Rogue_literal_strings[779]);
}

RogueClassDefinition* RogueDefinition__init__Token_String_Cmd_Logical( RogueClassDefinition* THIS, RogueClassToken* _auto_150_0, RogueString* _auto_151_1, RogueClassCmd* _auto_152_2, RogueLogical _auto_153_3 )
{
  THIS->is_enumeration = _auto_153_3;
  THIS->expression = _auto_152_2;
  THIS->name = _auto_151_1;
  THIS->t = _auto_150_0;
  return (RogueClassDefinition*)(THIS);
}

RogueClassCmd* RogueCmd__init_object( RogueClassCmd* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCmd*)(THIS);
}

RogueString* RogueCmd__type_name( RogueClassCmd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[384]);
}

void RogueCmd__add_to__CmdStatementList( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmd__call_prior__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1069] ))));
}

RogueClassCmd* RogueCmd__cast_to__Type_Scope( RogueClassCmd* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,this_type_2,((call_ROGUEM129( 31, ROGUE_ARG(THIS) ))));
  if (((void*)this_type_2) == ((void*)target_type_0))
  {
    return (RogueClassCmd*)(THIS);
  }
  RogueType__organize__Scope( this_type_2, scope_1 );
  RogueType__organize__Scope( target_type_0, scope_1 );
  if ((((RogueType__instance_of__Type( this_type_2, target_type_0 ))) || ((RogueType__instance_of__Type( target_type_0, this_type_2 )))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_0 ))))))));
  }
  else
  {
    if ((((RogueType__is_primitive( this_type_2 ))) && ((RogueType__is_primitive( target_type_0 )))))
    {
      if (!((((void*)this_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) || ((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_0 ))))))));
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,m_name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[412], ROGUE_ARG(target_type_0->name) )))));
    if (((RogueType__has_method_named__String( this_type_2, m_name_3 ))))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), m_name_3 ))))));
    }
    if ((!!(((RogueType__find_method__String( target_type_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[476] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[32] )))) )))) )))) || !!(((RogueType__find_global_method__String( target_type_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[477] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[32] )))) )))) ))))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(target_type_0->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) )))), scope_1 ))));
    }
    if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) ))))))));
    }
    if (target_type_0->is_optional)
    {
      if (((void*)this_type_2) == ((void*)target_type_0->_element_type))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[240] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) ))))));
      }
      else if (((void*)this_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[240] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
      }
    }
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[381] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(this_type_2))) )))) )))), Rogue_literal_strings[511] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(target_type_0))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
}

RogueClassCmd* RogueCmd__clone__CloneArgs( RogueClassCmd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[385] )))) )))) ))));
}

RogueClassCmd* RogueCmd__clone__Cmd_CloneArgs( RogueClassCmd* THIS, RogueClassCmd* other_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(other_0))
  {
    return (RogueClassCmd*)((call_ROGUEM122( 13, other_0, clone_args_1 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueClassCmdArgs* RogueCmd__clone__CmdArgs_CloneArgs( RogueClassCmd* THIS, RogueClassCmdArgs* args_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(args_0))
  {
    return (RogueClassCmdArgs*)(((RogueCmdArgs__clone__CloneArgs( args_0, clone_args_1 ))));
  }
  return (RogueClassCmdArgs*)(((RogueClassCmdArgs*)(NULL)));
}

RogueClassCmdStatementList* RogueCmd__clone__CmdStatementList_CloneArgs( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(statements_0))
  {
    return (RogueClassCmdStatementList*)(((RogueCmdStatementList__clone__CloneArgs( statements_0, clone_args_1 ))));
  }
  return (RogueClassCmdStatementList*)(((RogueClassCmdStatementList*)(NULL)));
}

RogueClassCmd* RogueCmd__combine_literal_operands__Type( RogueClassCmd* THIS, RogueClassType* common_type_0 )
{
  return (RogueClassCmd*)(THIS);
}

void RogueCmd__dispatch__Visitor( RogueClassCmd* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(THIS) );
}

void RogueCmd__exit_scope__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
}

RogueClassType* RogueCmd__find_operation_result_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  if (!(!!(result_2)))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (((void*)result_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
  }
  return (RogueClassType*)(result_2);
}

RogueClassType* RogueCmd__find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  if (((void*)left_type_0) == ((void*)NULL))
  {
    return (RogueClassType*)(right_type_1);
  }
  if (((void*)right_type_1) == ((void*)NULL))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (((void*)left_type_0) == ((void*)right_type_1))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (((RogueType__is_primitive( left_type_0 ))))
  {
    if (((RogueType__is_primitive( right_type_1 ))))
    {
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
      }
    }
  }
  if (((RogueType__instance_of__Type( left_type_0, right_type_1 ))))
  {
    return (RogueClassType*)(right_type_1);
  }
  if (((RogueType__instance_of__Type( right_type_1, left_type_0 ))))
  {
    return (RogueClassType*)(left_type_0);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__generates_output( RogueClassCmd* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueCmd__is_generic_function( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

RogueClassType* RogueCmd__must_find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  if (!!(common_type_2))
  {
    return (RogueClassType*)(common_type_2);
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1017] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_0))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_1))) )))) )))), Rogue_literal_strings[1018] )))) )))) ))));
}

RogueClassType* RogueCmd__implicit_type__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__is_literal( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

void RogueCmd__require_type_context( RogueClassCmd* THIS )
{
  if (!!((call_ROGUEM129( 40, ROGUE_ARG(THIS) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[497] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM129( 40, ROGUE_ARG(THIS) ))))) )))) )))), Rogue_literal_strings[498] )))) )))) ))));
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[499] ))));
  }
}

RogueClassCmd* RogueCmd__require_integer( RogueClassCmd* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,_type_0,((call_ROGUEM129( 40, ROGUE_ARG(THIS) ))));
  if ((((void*)_type_0) == ((void*)NULL) || ((void*)_type_0) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[482] ))));
  }
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__require_logical__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  if (((void*)(call_ROGUEM129( 31, ROGUE_ARG(THIS) ))) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))), scope_0 ))));
  }
  return (RogueClassCmd*)(THIS);
}

RogueClassType* Rogue_Cmd__require_type( RogueClassCmd* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((call_ROGUEM129( 40, ROGUE_ARG(THIS) ))));
  if (((void*)result_0) == ((void*)NULL))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[475] ))));
  }
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmd__require_value( RogueClassCmd* THIS )
{
  call_ROGUEM129( 31, ROGUE_ARG(THIS) );
  return (RogueClassCmd*)(THIS);
}

RogueLogical RogueCmd__requires_semicolon( RogueClassCmd* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmd__resolve__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[470] )))) )))) ))));
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__resolve_assignment__Scope_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1036] ))));
}

RogueClassCmd* RogueCmd__resolve_adjust__Scope_Int32( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1035] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[32] )))) )))) ))));
}

RogueClassCmd* RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1036] ))));
}

RogueLogical RogueCmd__to_Logical( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

RogueClassType* Rogue_Cmd__type( RogueClassCmd* THIS )
{
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[474] )))) )))) ))));
}

void RogueCmd__write_cpp__CPPWriter_Logical( RogueClassCmd* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[708] )))) )))) ))));
}

RogueString* RogueArray_Definition___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[898]);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init_object( RogueClassTable_String_Definition_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init( RogueClassTable_String_Definition_* THIS )
{
  RogueTable_String_Definition___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueString* RogueTable_String_Definition___to_String( RogueClassTable_String_Definition_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Definition___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Definition___type_name( RogueClassTable_String_Definition_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[780]);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init__Int32( RogueClassTable_String_Definition_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Definition__List__init__Int32_TableEntry_String_Definition_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Definition__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Definition__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Definition_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueLogical RogueTable_String_Definition___contains__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Definition_* RogueTable_String_Definition___find__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_2,(((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Definition_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Definition_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Definition_*)(((RogueClassTableEntry_String_Definition_*)(NULL)));
}

RogueClassDefinition* RogueTable_String_Definition___get__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_1,(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassDefinition*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,default_value_2,0);
    return (RogueClassDefinition*)(default_value_2);
  }
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___set__String_Definition( RogueClassTable_String_Definition_* THIS, RogueString* key_0, RogueClassDefinition* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_4,(((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Definition_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Definition_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Definition_*)((RogueTableEntry_String_Definition___init__String_Definition_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Definition_*,ROGUE_CREATE_OBJECT(TableEntry_String_Definition_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Definition___print_to__StringBuilder( RogueClassTable_String_Definition_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Definition___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init_object( RogueTableEntry_String_Definition__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init( RogueTableEntry_String_Definition__List* THIS )
{
  RogueTableEntry_String_Definition__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueString* RogueTableEntry_String_Definition__List__to_String( RogueTableEntry_String_Definition__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Definition__List*,_auto_1696_2,(THIS));
    RogueInt32 _auto_1697_3 = (0);
    for (;_auto_1697_3 < _auto_1696_2->count;++_auto_1697_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,value_4,(((RogueClassTableEntry_String_Definition_*)(_auto_1696_2->data->objects[_auto_1697_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Definition___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Definition__List__type_name( RogueTableEntry_String_Definition__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[849]);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init__Int32( RogueTableEntry_String_Definition__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Definition_*), true );
  }
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init__Int32_TableEntry_String_Definition_( RogueTableEntry_String_Definition__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Definition_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Definition_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_158_3 = (initial_capacity_0);
      for (;i_2 <= _auto_158_3;++i_2)
      {
        RogueTableEntry_String_Definition__List__add__TableEntry_String_Definition_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__add__TableEntry_String_Definition_( RogueTableEntry_String_Definition__List* THIS, RogueClassTableEntry_String_Definition_* value_0 )
{
  ((RogueTableEntry_String_Definition__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Definition__List__capacity( RogueTableEntry_String_Definition__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__reserve__Int32( RogueTableEntry_String_Definition__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Definition_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Definition__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Definition_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init_object( RogueClassTableEntry_String_Definition_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueString* RogueTableEntry_String_Definition___to_String( RogueClassTableEntry_String_Definition_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Definition___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Definition___type_name( RogueClassTableEntry_String_Definition_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[743]);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init__String_Definition_Int32( RogueClassTableEntry_String_Definition_* THIS, RogueString* _key_0, RogueClassDefinition* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Definition____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[899]);
}

RogueProperty_List* RogueProperty_List__init_object( RogueProperty_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__init( RogueProperty_List* THIS )
{
  RogueProperty_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueProperty_List*)(THIS);
}

RogueString* RogueProperty_List__to_String( RogueProperty_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1724_2,(THIS));
    RogueInt32 _auto_1725_3 = (0);
    for (;_auto_1725_3 < _auto_1724_2->count;++_auto_1725_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,value_4,(((RogueClassProperty*)(_auto_1724_2->data->objects[_auto_1725_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueProperty__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueProperty_List__type_name( RogueProperty_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[850]);
}

RogueProperty_List* RogueProperty_List__init__Int32( RogueProperty_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassProperty*), true );
  }
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__add__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  ((RogueProperty_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueProperty_List*)(THIS);
}

RogueInt32 RogueProperty_List__capacity( RogueProperty_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueProperty_List* RogueProperty_List__clear( RogueProperty_List* THIS )
{
  RogueProperty_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueProperty_List*)(THIS);
}

void RogueProperty_List__discard_from__Int32( RogueProperty_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueOptionalInt32 RogueProperty_List__locate__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1745_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_1745_1->count;++i_2)
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassProperty*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueProperty_List* RogueProperty_List__reserve__Int32( RogueProperty_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueProperty_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueProperty_List*)(THIS);
}

RogueClassProperty* RogueProperty__init_object( RogueClassProperty* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassProperty*)(THIS);
}

RogueString* RogueProperty__to_String( RogueClassProperty* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueProperty__type_name( RogueClassProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[781]);
}

RogueClassProperty* RogueProperty__init__Token_Type_String_Type_Cmd( RogueClassProperty* THIS, RogueClassToken* _auto_162_0, RogueClassType* _auto_163_1, RogueString* _auto_164_2, RogueClassType* _auto_165_3, RogueClassCmd* _auto_166_4 )
{
  THIS->initial_value = _auto_166_4;
  THIS->_type = _auto_165_3;
  THIS->name = _auto_164_2;
  RogueProperty__set_type_context__Type( ROGUE_ARG(THIS), _auto_163_1 );
  THIS->t = _auto_162_0;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__clone( RogueClassProperty* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,result_0,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  result_0->cpp_name = THIS->cpp_name;
  result_0->_type = THIS->_type;
  result_0->attributes = THIS->attributes;
  if (!!(THIS->initial_value))
  {
    result_0->initial_value = (call_ROGUEM122( 13, ROGUE_ARG(THIS->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  return (RogueClassProperty*)(result_0);
}

RogueLogical RogueProperty__is_incorporated( RogueClassProperty* THIS )
{
  return (RogueLogical)(!!((THIS->attributes & 2048)));
}

RogueLogical RogueProperty__is_native( RogueClassProperty* THIS )
{
  return (RogueLogical)(!!((THIS->attributes & 32)));
}

RogueClassProperty* RogueProperty__mark_incorporated( RogueClassProperty* THIS )
{
  THIS->attributes |= 2048;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__mark_native( RogueClassProperty* THIS )
{
  THIS->attributes |= 32;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__set_type_context__Type( RogueClassProperty* THIS, RogueClassType* _auto_167_0 )
{
  THIS->type_context = _auto_167_0;
  return (RogueClassProperty*)(THIS);
}

RogueString* RogueArray_Property___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[900]);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init_object( RogueClassTable_String_Property_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init( RogueClassTable_String_Property_* THIS )
{
  RogueTable_String_Property___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueString* RogueTable_String_Property___to_String( RogueClassTable_String_Property_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Property___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Property___type_name( RogueClassTable_String_Property_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[782]);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init__Int32( RogueClassTable_String_Property_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Property__List__init__Int32_TableEntry_String_Property_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Property__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Property__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Property_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Property_*)(THIS);
}

void RogueTable_String_Property___clear( RogueClassTable_String_Property_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Property__List*,_auto_1759_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_1759_0->count;++i_1)
    {
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Property_*)(NULL));
    }
  }
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Property_* RogueTable_String_Property___find__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_2,(((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Property_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Property_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Property_*)(((RogueClassTableEntry_String_Property_*)(NULL)));
}

RogueClassProperty* RogueTable_String_Property___get__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_1,(((RogueTable_String_Property___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassProperty*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,default_value_2,0);
    return (RogueClassProperty*)(default_value_2);
  }
}

RogueClassTable_String_Property_* RogueTable_String_Property___set__String_Property( RogueClassTable_String_Property_* THIS, RogueString* key_0, RogueClassProperty* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_4,(((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Property_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Property_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Property_*)((RogueTableEntry_String_Property___init__String_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Property_*,ROGUE_CREATE_OBJECT(TableEntry_String_Property_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Property___print_to__StringBuilder( RogueClassTable_String_Property_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init_object( RogueTableEntry_String_Property__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init( RogueTableEntry_String_Property__List* THIS )
{
  RogueTableEntry_String_Property__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueString* RogueTableEntry_String_Property__List__to_String( RogueTableEntry_String_Property__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Property__List*,_auto_1770_2,(THIS));
    RogueInt32 _auto_1771_3 = (0);
    for (;_auto_1771_3 < _auto_1770_2->count;++_auto_1771_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,value_4,(((RogueClassTableEntry_String_Property_*)(_auto_1770_2->data->objects[_auto_1771_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Property___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Property__List__type_name( RogueTableEntry_String_Property__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[851]);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init__Int32( RogueTableEntry_String_Property__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Property_*), true );
  }
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init__Int32_TableEntry_String_Property_( RogueTableEntry_String_Property__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Property_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Property_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_172_3 = (initial_capacity_0);
      for (;i_2 <= _auto_172_3;++i_2)
      {
        RogueTableEntry_String_Property__List__add__TableEntry_String_Property_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__add__TableEntry_String_Property_( RogueTableEntry_String_Property__List* THIS, RogueClassTableEntry_String_Property_* value_0 )
{
  ((RogueTableEntry_String_Property__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Property__List__capacity( RogueTableEntry_String_Property__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__reserve__Int32( RogueTableEntry_String_Property__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Property_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Property__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Property_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init_object( RogueClassTableEntry_String_Property_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueString* RogueTableEntry_String_Property___to_String( RogueClassTableEntry_String_Property_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Property___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Property___type_name( RogueClassTableEntry_String_Property_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[744]);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init__String_Property_Int32( RogueClassTableEntry_String_Property_* THIS, RogueString* _key_0, RogueClassProperty* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Property____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[901]);
}

RogueMethod_List* RogueMethod_List__init_object( RogueMethod_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__init( RogueMethod_List* THIS )
{
  RogueMethod_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethod_List*)(THIS);
}

RogueString* RogueMethod_List__to_String( RogueMethod_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1798_2,(THIS));
    RogueInt32 _auto_1799_3 = (0);
    for (;_auto_1799_3 < _auto_1798_2->count;++_auto_1799_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_4,(((RogueClassMethod*)(_auto_1798_2->data->objects[_auto_1799_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethod__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethod_List__type_name( RogueMethod_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[857]);
}

RogueMethod_List* RogueMethod_List__init__Int32( RogueMethod_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethod*), true );
  }
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  ((RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method_List( RogueMethod_List* THIS, RogueMethod_List* other_0 )
{
  RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1804_1,(other_0));
    RogueInt32 _auto_1805_2 = (0);
    for (;_auto_1805_2 < _auto_1804_1->count;++_auto_1805_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_3,(((RogueClassMethod*)(_auto_1804_1->data->objects[_auto_1805_2]))));
      RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueMethod_List*)(THIS);
}

RogueInt32 RogueMethod_List__capacity( RogueMethod_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueMethod_List* RogueMethod_List__clear( RogueMethod_List* THIS )
{
  RogueMethod_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethod_List*)(THIS);
}

void RogueMethod_List__discard_from__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueMethod_List* RogueMethod_List__insert__Method_Int32( RogueMethod_List* THIS, RogueClassMethod* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueMethod_List*)(((RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    ++THIS->count;
    THIS->data->objects[before_index_1] = value_0;
  }
  return (RogueMethod_List*)(THIS);
}

RogueOptionalInt32 RogueMethod_List__locate__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1819_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_1819_1->count;++i_2)
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassMethod*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueMethod_List* RogueMethod_List__reserve__Int32( RogueMethod_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueMethod_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueMethod_List*)(THIS);
}

RogueClassMethod* RogueMethod_List__remove__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueMethod_List__locate__Method( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_2,0);
    return (RogueClassMethod*)(zero_value_2);
  }
}

RogueClassMethod* RogueMethod_List__remove_at__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_1,(((RogueClassMethod*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassMethod*)(result_1);
}

RogueClassMethod* RogueMethod_List__remove_last( RogueMethod_List* THIS )
{
  return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassMethod* RogueMethod__init_object( RogueClassMethod* THIS )
{
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  THIS->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->label_list = ((RogueCmdLabel_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))) )));
  THIS->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassMethod*)(THIS);
}

RogueString* RogueMethod__to_String( RogueClassMethod* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))) ))));
}

RogueString* RogueMethod__type_name( RogueClassMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[786]);
}

RogueClassMethod* RogueMethod__init__Token_Type_String( RogueClassMethod* THIS, RogueClassToken* _auto_207_0, RogueClassType* _auto_208_1, RogueString* _auto_209_2 )
{
  THIS->name = _auto_209_2;
  RogueMethod__set_type_context__Type( ROGUE_ARG(THIS), _auto_208_1 );
  THIS->t = _auto_207_0;
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__clone( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_0,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name) )))));
  result_0->cpp_name = THIS->cpp_name;
  result_0->cpp_typedef = THIS->cpp_typedef;
  result_0->signature = THIS->signature;
  result_0->attributes = ((RogueAttributes__clone( ROGUE_ARG(THIS->attributes) )));
  result_0->_return_type = THIS->_return_type;
  result_0->_task_result_type = THIS->_task_result_type;
  result_0->source_template = THIS->source_template;
  result_0->specializer_count = THIS->specializer_count;
  result_0->unspecialized_name = THIS->unspecialized_name;
  result_0->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1831_1,(THIS->locals));
    RogueInt32 _auto_1832_2 = (0);
    for (;_auto_1832_2 < _auto_1831_1->count;++_auto_1832_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_3,(((RogueClassLocal*)(_auto_1831_1->data->objects[_auto_1832_2]))));
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->locals), ROGUE_ARG(((RogueLocal__clone__CloneArgs( v_3, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
    }
  }
  result_0->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1833_4,(THIS->parameters));
    RogueInt32 i_5 = (0);
    for (;i_5 < _auto_1833_4->count;++i_5)
    {
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->parameters), ROGUE_ARG(((RogueClassLocal*)(THIS->locals->data->objects[i_5]))) );
    }
  }
  result_0->label_list = ((RogueCmdLabel_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))), ROGUE_ARG(THIS->label_list->count) )));
  result_0->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  result_0->min_args = THIS->min_args;
  result_0->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCloneArgs*)(((RogueCloneMethodArgs__init__Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCloneMethodArgs*,ROGUE_CREATE_OBJECT(CloneMethodArgs))), result_0 )))))) )));
  result_0->native_code = THIS->native_code;
  result_0->index = THIS->index;
  return (RogueClassMethod*)(result_0);
}

void RogueMethod__dispatch__Visitor( RogueClassMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Method( v_0, ROGUE_ARG(THIS) );
}

RogueClassMethod* RogueMethod__incorporate__Type( RogueClassMethod* THIS, RogueClassType* into_type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueMethod__set_incorporated( ROGUE_ARG(((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__clone( ROGUE_ARG(THIS) )))), into_type_0 )))) )))));
  m_1->cpp_name = ((RogueString*)(NULL));
  if (!!(THIS->aspect_statements))
  {
    m_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->aspect_statements), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )));
  }
  if (((void*)THIS->incorporating_classes) == ((void*)NULL))
  {
    THIS->incorporating_classes = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  }
  RogueType_List__add__Type( ROGUE_ARG(THIS->incorporating_classes), into_type_0 );
  m_1->signature = ((RogueString*)(NULL));
  RogueMethod__assign_signature( m_1 );
  return (RogueClassMethod*)(m_1);
}

RogueLogical RogueMethod__accepts_arg_count__Int32( RogueClassMethod* THIS, RogueInt32 n_0 )
{
  return (RogueLogical)((n_0 >= THIS->min_args && n_0 <= THIS->parameters->count));
}

RogueClassLocal* RogueMethod__add_local__Token_String_Type_Cmd( RogueClassMethod* THIS, RogueClassToken* v_t_0, RogueString* v_name_1, RogueClassType* v_type_2, RogueClassCmd* v_initial_value_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), v_t_0, v_name_1 )))));
  v_4->index = THIS->locals->count;
  v_4->_type = v_type_2;
  v_4->initial_value = v_initial_value_3;
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->locals), v_4 );
  return (RogueClassLocal*)(v_4);
}

RogueClassLocal* RogueMethod__add_parameter__Token_String_Type( RogueClassMethod* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS), p_t_0, p_name_1, p_type_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->parameters), p_3 );
  return (RogueClassLocal*)(p_3);
}

void RogueMethod__assign_signature( RogueClassMethod* THIS )
{
  if (!!(THIS->signature))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[92] );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1835_2,(THIS->parameters));
    RogueInt32 _auto_1836_3 = (0);
    for (;_auto_1836_3 < _auto_1835_2->count;++_auto_1836_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_1835_2->data->objects[_auto_1836_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[5] );
      }
      RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_4->_type->name) );
    }
  }
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[32] );
  THIS->signature = ((RogueStringBuilder__to_String( buffer_0 )));
}

RogueClassCmdLabel* RogueMethod__begin_label__Token_String_Logical( RogueClassMethod* THIS, RogueClassToken* label_t_0, RogueString* label_name_1, RogueLogical consolidate_duplicates_2 )
{
  if (consolidate_duplicates_2)
  {
    THIS->cur_label = ((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )));
    if (!!(THIS->cur_label))
    {
      return (RogueClassCmdLabel*)(THIS->cur_label);
    }
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[291] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    ROGUE_THROW(((RogueToken__error__String( label_t_0, Rogue_literal_strings[292] ))));
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[293] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))->t), Rogue_literal_strings[294] ))));
  }
  THIS->cur_label = ((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), label_t_0, label_name_1, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )));
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->label_lookup), label_name_1, ROGUE_ARG(THIS->cur_label) );
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->label_list), ROGUE_ARG(THIS->cur_label) );
  return (RogueClassCmdLabel*)(THIS->cur_label);
}

RogueLogical RogueMethod__is_abstract( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 131072)) )));
}

RogueLogical RogueMethod__is_augment( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 65536)) )));
}

RogueLogical RogueMethod__is_dynamic( RogueClassMethod* THIS )
{
  return (RogueLogical)(((!!(THIS->overridden_method) || !!(THIS->overriding_methods->count)) || !!((THIS->attributes->flags & 4194304))));
}

RogueLogical RogueMethod__is_fallback( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 524288)) )));
}

RogueLogical RogueMethod__is_generated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 4096)) )));
}

RogueLogical RogueMethod__is_incorporated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2048)) )));
}

RogueLogical RogueMethod__is_initializer( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 128)) )));
}

RogueLogical RogueMethod__is_macro( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 64)) )));
}

RogueLogical RogueMethod__is_native( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueMethod__is_overridden( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG(THIS->overriding_methods->count) )));
}

RogueLogical RogueMethod__is_requisite( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8192)) )));
}

RogueLogical RogueMethod__is_global( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 512)) )));
}

RogueLogical RogueMethod__is_propagated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2097152)) )));
}

RogueLogical RogueMethod__is_task( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16384)) )));
}

RogueLogical RogueMethod__is_task_conversion( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32768)) )));
}

RogueClassMethod* RogueMethod__make_requisite( RogueClassMethod* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  return (RogueClassMethod*)(THIS);
}

RogueLogical RogueMethod__omit_output( RogueClassMethod* THIS )
{
  return (RogueLogical)((((((RogueMethod__is_native( ROGUE_ARG(THIS) ))) || ((RogueMethod__is_macro( ROGUE_ARG(THIS) )))) || !(THIS->is_used)) || ((((RogueMethod__is_generated( ROGUE_ARG(THIS) ))) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[401] )))) && ((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))));
}

RogueClassMethod* RogueMethod__organize__Scope_Logical( RogueClassMethod* THIS, RogueClassScope* scope_0, RogueLogical add_to_lookup_1 )
{
  if (THIS->organized)
  {
    return (RogueClassMethod*)(THIS);
  }
  THIS->organized = true;
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[388] ))))
  {
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[389] ))));
    }
    else if (((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[390] ))));
    }
    THIS->attributes->flags |= 128;
    THIS->_return_type = THIS->type_context;
  }
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[391] ))));
    }
    THIS->_task_result_type = THIS->_return_type;
    if (!!(THIS->_return_type))
    {
      RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[392] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_return_type->name) )))) )))), Rogue_literal_strings[143] )))) )))) )));
    }
    else
    {
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), Rogue_literal_strings[393] )));
    }
    RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1837_8,(THIS->parameters));
    RogueInt32 _auto_1838_9 = (0);
    for (;_auto_1838_9 < _auto_1837_8->count;++_auto_1838_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_10,(((RogueClassLocal*)(_auto_1837_8->data->objects[_auto_1838_9]))));
      if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,property_2,(((RogueType__find_property__String( ROGUE_ARG(THIS->type_context), ROGUE_ARG(param_10->name) )))));
        if (!!(property_2))
        {
          if (((void*)param_10->_type) == ((void*)NULL))
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,new_name_3,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
            ROGUE_DEF_LOCAL_REF(RogueClassToken*,pt_4,(param_10->t));
            RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), pt_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, ROGUE_ARG(param_10->name) )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, new_name_3 )))))) )))))), 0 );
            param_10->name = new_name_3;
            param_10->_type = property_2->_type;
          }
          else if ((((void*)property_2->type_context) == ((void*)THIS->type_context) && ((RogueProperty__is_incorporated( property_2 ))) == ((RogueMethod__is_incorporated( ROGUE_ARG(THIS) )))))
          {
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[394] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[395] )))) )))) ))));
          }
        }
      }
      if (!(!!(param_10->_type)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[396] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[19] )))) )))) ))));
      }
    }
  }
  RogueMethod__assign_signature( ROGUE_ARG(THIS) );
  if ((add_to_lookup_1 && !(((RogueMethod__is_augment( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_5,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature) )))));
    if (!(!!(list_5)))
    {
      list_5 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
      RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature), list_5 );
    }
    RogueMethod_List__add__Method( list_5, ROGUE_ARG(THIS) );
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_6,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      if ((!!(existing_m_6) && ((void*)existing_m_6->type_context) == ((void*)THIS->type_context)))
      {
        if (((RogueType__is_routine( ROGUE_ARG(THIS->type_context) ))))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[397] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(THIS->signature), (RogueCharacter)'(' )))) )))) )))), Rogue_literal_strings[398] )))) )))) ))));
        }
        else
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[399] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[398] )))) )))) ))));
        }
      }
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_7,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      if ((!!(existing_m_7) && ((void*)existing_m_7->type_context) == ((void*)THIS->type_context)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[400] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[398] )))) )))) ))));
      }
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
  }
  THIS->min_args = THIS->parameters->count;
  while ((THIS->min_args >= 1 && !!(((RogueClassLocal*)(THIS->parameters->data->objects[(THIS->min_args - 1)]))->initial_value)))
  {
    --THIS->min_args;
  }
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__resolve( RogueClassMethod* THIS )
{
  if (THIS->resolved)
  {
    return;
  }
  THIS->resolved = true;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1839_2,(THIS->parameters));
    RogueInt32 _auto_1840_3 = (0);
    for (;_auto_1840_3 < _auto_1839_2->count;++_auto_1840_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_1839_2->data->objects[_auto_1840_3]))));
      RogueType__organize__Scope( ROGUE_ARG(param_4->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  if (!!(THIS->_return_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
  {
    THIS->aspect_statements = THIS->statements;
    THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    RogueMethod__convert_to_task( ROGUE_ARG(THIS) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassScope*,scope_0,(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1841_5,(THIS->parameters));
    RogueInt32 _auto_1842_6 = (0);
    for (;_auto_1842_6 < _auto_1841_5->count;++_auto_1842_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_7,(((RogueClassLocal*)(_auto_1841_5->data->objects[_auto_1842_6]))));
      RogueScope__push_local__Local_Logical( scope_0, p_7, true );
    }
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, ROGUE_ARG(((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->m_on_launch)) );
  if (scope_0->local_list->count > THIS->parameters->count)
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[471] ))));
  }
  if (!!(scope_0->control_stack->count))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[472] ))));
  }
  if (((RogueMethod__is_initializer( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,return_t_1,(THIS->t));
    if (!!(THIS->statements->count))
    {
      return_t_1 = ((RogueClassToken*)((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) )))->t);
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmdReturn__resolve__Scope( ROGUE_ARG(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), return_t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), return_t_1, ROGUE_ARG(THIS->type_context) )))))))) )))), scope_0 )))) );
  }
}

RogueLogical RogueMethod__returns_this( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8388608)) )));
}

void RogueMethod__convert_augment_to_standalone( RogueClassMethod* THIS )
{
  THIS->attributes->flags &= -65537;
  if (!(!!(THIS->native_code)))
  {
    if (THIS->label_list->count > 2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_0,(((RogueClassCmdLabel*)(THIS->label_list->data->objects[2]))));
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(label_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[379] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_0->name) )))) )))), Rogue_literal_strings[380] )))) )))) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,insert_label_1,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[291] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,append_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[293] )))));
    RogueTable_String_CmdLabel___clear( ROGUE_ARG(THIS->label_lookup) );
    RogueCmdLabel_List__clear( ROGUE_ARG(THIS->label_list) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[291], false )))))) );
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(insert_label_1->statements))) );
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(append_label_2->statements))) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[293], false )))))) );
  }
}

void RogueMethod__convert_to_task( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_0,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[460] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))) )))) )))) )))));
  RogueAttributes__add__Int32( ROGUE_ARG(task_type_0->attributes), 0 );
  RogueType_List__add__Type( ROGUE_ARG(task_type_0->base_types), ROGUE_ARG(THIS->_return_type) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_1,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[388] )))));
  RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), Rogue_literal_strings[462], ROGUE_ARG(((RogueClassType*)(NULL))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1843_9,(THIS->parameters));
    RogueInt32 _auto_1844_10 = (0);
    for (;_auto_1844_10 < _auto_1843_9->count;++_auto_1844_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_11,(((RogueClassLocal*)(_auto_1843_9->data->objects[_auto_1844_10]))));
      RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_11->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(p_11->index) )))) )))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_update_2,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[464] )))));
  m_update_2->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[465], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[466] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) )))))))) )))))) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_execute_3,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[465] )))));
  m_execute_3->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  task_type_0->defined = true;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_4,(((RogueString__operatorPLUS__String( Rogue_literal_strings[467], ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_temp_5,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), m_name_4 )))));
  m_temp_5->_return_type = THIS->_task_result_type;
  RogueAttributes__add__Int32( ROGUE_ARG(m_temp_5->attributes), 32768 );
  m_temp_5->parameters = THIS->parameters;
  m_temp_5->locals = THIS->locals;
  m_temp_5->statements = THIS->statements;
  RogueMethod__organize__Scope_Logical( m_temp_5, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
  RogueMethod__resolve( m_temp_5 );
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1845_12,(m_temp_5->locals));
    RogueInt32 _auto_1846_13 = (0);
    for (;_auto_1846_13 < _auto_1845_12->count;++_auto_1846_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_1845_12->data->objects[_auto_1846_13]))));
      if (v_14->index < m_temp_5->parameters->count)
      {
        RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS), ROGUE_ARG(v_14->t), ROGUE_ARG(v_14->name), ROGUE_ARG(v_14->_type) );
      }
    }
  }
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context) )))))))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1847_15,(m_temp_5->parameters));
    RogueInt32 _auto_1848_16 = (0);
    for (;_auto_1848_16 < _auto_1847_15->count;++_auto_1848_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_17,(((RogueClassLocal*)(_auto_1847_15->data->objects[_auto_1848_16]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(p_17->name) )))))) );
    }
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_type_0->name), args_6 )))))) )))))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1849_18,(m_temp_5->locals));
    RogueInt32 _auto_1850_19 = (0);
    for (;_auto_1850_19 < _auto_1849_18->count;++_auto_1850_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_20,(((RogueClassLocal*)(_auto_1849_18->data->objects[_auto_1850_19]))));
      ROGUE_DEF_LOCAL_REF(RogueString*,p_name_7,(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(v_20->name), Rogue_literal_strings[463] )))), ROGUE_ARG(v_20->index) )))));
      RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(v_20->t), p_name_7, ROGUE_ARG(v_20->_type), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_8,(((RogueTaskArgs__init__Type_Method_Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTaskArgs*,ROGUE_CREATE_OBJECT(TaskArgs))), task_type_0, m_execute_3, ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  task_args_8->context_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[462], ROGUE_ARG(THIS->type_context), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  task_args_8->ip_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[466], ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1855_21,(m_temp_5->statements));
    RogueInt32 _auto_1856_22 = (0);
    for (;_auto_1856_22 < _auto_1855_21->count;++_auto_1856_22)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_23,(((RogueClassCmd*)(_auto_1855_21->data->objects[_auto_1856_22]))));
      statement_23 = ((RogueClassCmd*)(call_ROGUEM122( 13, statement_23, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_8))) )));
      if (!!(statement_23))
      {
        RogueTaskArgs__add__Cmd( task_args_8, statement_23 );
      }
    }
  }
  if (task_args_8->cmd_task_control->current_section->statements->count == 0)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)task_args_8->cmd_task_control->current_section->statements)), ROGUE_ARG(((RogueTaskArgs__create_return__Token_Cmd( task_args_8, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_execute_3->statements)), ROGUE_ARG(((RogueClassCmd*)(task_args_8->cmd_task_control))) );
  RogueType__organize__Scope( task_type_0, ROGUE_ARG(((RogueClassScope*)(NULL))) );
}

RogueClassMethod* RogueMethod__set_incorporated( RogueClassMethod* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 2048 );
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__set_type_context__Type( RogueClassMethod* THIS, RogueClassType* _auto_210_0 )
{
  THIS->type_context = _auto_210_0;
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__trace_used_code( RogueClassMethod* THIS )
{
  if (THIS->is_used)
  {
    return;
  }
  THIS->is_used = true;
  RogueType__trace_used_code( ROGUE_ARG(THIS->type_context) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1857_0,(THIS->parameters));
    RogueInt32 _auto_1858_1 = (0);
    for (;_auto_1858_1 < _auto_1857_0->count;++_auto_1858_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_2,(((RogueClassLocal*)(_auto_1857_0->data->objects[_auto_1858_1]))));
      RogueType__trace_used_code( ROGUE_ARG(param_2->_type) );
    }
  }
  if (!!(THIS->_return_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_return_type) );
  }
  RogueCmdStatementList__trace_used_code( ROGUE_ARG(THIS->statements) );
}

void RogueMethod__validate( RogueClassMethod* THIS )
{
  if ((THIS->is_used && !(((RogueMethod__is_macro( ROGUE_ARG(THIS) ))))))
  {
    if (!!(THIS->overridden_method))
    {
      if (THIS->index != THIS->overridden_method->index)
      {
        RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[514] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[515] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->index) )))) )))), Rogue_literal_strings[516] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->overridden_method))) )))) )))), Rogue_literal_strings[517] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->overridden_method->index) )))) )))) )))) );
      }
      RogueLogical _auto_176_0;
      ((_auto_176_0=(THIS->index == THIS->overridden_method->index))?_auto_176_0:ROGUE_THROW(((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[518] )))));
    }
  }
}

void RogueMethod__assign_cpp_name( RogueClassMethod* THIS )
{
  if (!!(THIS->cpp_name))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[460] );
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  if (!!(THIS->parameters->count))
  {
    RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[463] );
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1859_1,(THIS->parameters));
      RogueInt32 _auto_1860_2 = (0);
      for (;_auto_1860_2 < _auto_1859_1->count;++_auto_1860_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_3,(((RogueClassLocal*)(_auto_1859_1->data->objects[_auto_1860_2]))));
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[463] );
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_3->_type->cpp_name) );
      }
    }
  }
  THIS->cpp_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[52], ROGUE_ARG(((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) )));
}

void RogueMethod__print_prototype__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
}

void RogueMethod__print_signature__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(THIS->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
  RogueLogical first_1 = (true);
  if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
  {
    first_1 = ((RogueLogical)false);
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
    if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
    {
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
    }
    else
    {
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->type_context) );
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[604] );
  }
  if (!!(THIS->parameters->count))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1861_2,(THIS->parameters));
      RogueInt32 _auto_1862_3 = (0);
      for (;_auto_1862_3 < _auto_1861_2->count;++_auto_1862_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_1861_2->data->objects[_auto_1862_3]))));
        if (first_1)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
          first_1 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
        }
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(param_4->_type) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_4 )))) );
      }
    }
  }
  if (!(first_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

void RogueMethod__print_definition__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  RogueCPPWriter__println( writer_0 );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[695] );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
    writer_0->indent += 2;
    if (!!(THIS->incorporating_classes))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1863_2,(THIS->incorporating_classes));
        RogueInt32 _auto_1864_3 = (0);
        for (;_auto_1864_3 < _auto_1863_2->count;++_auto_1864_3)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_4,(((RogueClassType*)(_auto_1863_2->data->objects[_auto_1864_3]))));
          if (ic_4->is_used)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueType__find_method__String( ic_4, ROGUE_ARG(THIS->signature) )))));
            if (m_1->is_used)
            {
              RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[696] )))), ROGUE_ARG(ic_4->index) )))), Rogue_literal_strings[215] );
              if (!!(THIS->_return_type))
              {
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[697] );
                if (((void*)THIS->_return_type) != ((void*)m_1->_return_type))
                {
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[32] );
                }
              }
              else
              {
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[327] );
              }
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(m_1->cpp_name) )))), Rogue_literal_strings[698] )))), ROGUE_ARG(m_1->type_context) )))), Rogue_literal_strings[699] );
              {
                ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1865_5,(THIS->parameters));
                RogueInt32 _auto_1866_6 = (0);
                for (;_auto_1866_6 < _auto_1865_5->count;++_auto_1866_6)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueClassLocal*)(_auto_1865_5->data->objects[_auto_1866_6]))));
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_7 )))) );
                }
              }
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[625] );
            }
          }
        }
      }
    }
    if (!!(THIS->_return_type))
    {
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[700] );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[697] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[241] );
    }
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  }
  else
  {
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
    {
      writer_0->trace_token = THIS->t;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[701] );
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(THIS->signature) )))), Rogue_literal_strings[702] );
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueToken__filename( ROGUE_ARG(THIS->t) )))) )))), Rogue_literal_strings[704] )))), ROGUE_ARG(THIS->t->line) );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[625] );
    }
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  RogueCPPWriter__println( writer_0 );
}

RogueLocal_List* RogueLocal_List__init_object( RogueLocal_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__init( RogueLocal_List* THIS )
{
  RogueLocal_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueLocal_List*)(THIS);
}

RogueString* RogueLocal_List__to_String( RogueLocal_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1867_2,(THIS));
    RogueInt32 _auto_1868_3 = (0);
    for (;_auto_1868_3 < _auto_1867_2->count;++_auto_1868_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,value_4,(((RogueClassLocal*)(_auto_1867_2->data->objects[_auto_1868_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueLocal_List__type_name( RogueLocal_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[852]);
}

RogueLocal_List* RogueLocal_List__init__Int32( RogueLocal_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassLocal*), true );
  }
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__add__Local( RogueLocal_List* THIS, RogueClassLocal* value_0 )
{
  ((RogueLocal_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueLocal_List*)(THIS);
}

RogueInt32 RogueLocal_List__capacity( RogueLocal_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueLocal_List* RogueLocal_List__clear( RogueLocal_List* THIS )
{
  RogueLocal_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueLocal_List*)(THIS);
}

void RogueLocal_List__discard_from__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueLocal_List* RogueLocal_List__reserve__Int32( RogueLocal_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueLocal_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueLocal_List*)(THIS);
}

RogueClassLocal* RogueLocal_List__remove_at__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueClassLocal*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassLocal*)(result_1);
}

RogueClassLocal* RogueLocal_List__remove_last( RogueLocal_List* THIS )
{
  return (RogueClassLocal*)(((RogueLocal_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassLocal* RogueLocal__init_object( RogueClassLocal* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassLocal*)(THIS);
}

RogueString* RogueLocal__type_name( RogueClassLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[783]);
}

RogueClassLocal* RogueLocal__init__Token_String( RogueClassLocal* THIS, RogueClassToken* _auto_177_0, RogueString* _auto_178_1 )
{
  THIS->name = _auto_178_1;
  THIS->t = _auto_177_0;
  THIS->original_name = THIS->name;
  return (RogueClassLocal*)(THIS);
}

RogueClassLocal* RogueLocal__clone__CloneArgs( RogueClassLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name) )))));
  result_1->original_name = THIS->original_name;
  result_1->_cpp_name = THIS->_cpp_name;
  result_1->_type = THIS->_type;
  result_1->index = THIS->index;
  if (!!(THIS->initial_value))
  {
    result_1->initial_value = (call_ROGUEM122( 13, ROGUE_ARG(THIS->initial_value), clone_args_0 ));
  }
  return (RogueClassLocal*)(result_1);
}

RogueString* RogueLocal__cpp_name( RogueClassLocal* THIS )
{
  if (!(!!(THIS->_cpp_name)))
  {
    THIS->_cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[463] )))), ROGUE_ARG(THIS->index) )))) )));
  }
  return (RogueString*)(THIS->_cpp_name);
}

RogueString* RogueArray_Local___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[902]);
}

RogueClassCmdStatementList* RogueCmdStatementList__init_object( RogueClassCmdStatementList* THIS )
{
  RogueCmd_List__init_object( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init( RogueClassCmdStatementList* THIS )
{
  RogueCmd_List__init( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueString* RogueCmdStatementList__type_name( RogueClassCmdStatementList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1161]);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Int32( RogueClassCmdStatementList* THIS, RogueInt32 initial_capacity_0 )
{
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Cmd( RogueClassCmdStatementList* THIS, RogueClassCmd* statement_0 )
{
  RogueCmdStatementList__init( ROGUE_ARG(THIS) );
  if (!!(statement_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), statement_0 );
  }
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__clone__CloneArgs( RogueClassCmdStatementList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_1,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1933_2,(THIS));
    RogueInt32 _auto_1934_3 = (0);
    for (;_auto_1934_3 < _auto_1933_2->count;++_auto_1934_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_1933_2->data->objects[_auto_1934_3]))));
      cmd_4 = ((RogueClassCmd*)(call_ROGUEM122( 13, cmd_4, clone_args_0 )));
      if (!!(cmd_4))
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), cmd_4 );
      }
    }
  }
  return (RogueClassCmdStatementList*)(result_1);
}

void RogueCmdStatementList__dispatch__Visitor( RogueClassCmdStatementList* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdStatementList( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdStatementList__resolve__Scope_Logical( RogueClassCmdStatementList* THIS, RogueClassScope* scope_0, RogueLogical use_separate_results_list_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,original_body_2,(scope_0->this_body));
  scope_0->this_body = THIS;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,original_statement_3,(scope_0->this_statement));
  if (use_separate_results_list_1)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_4,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1935_9,(THIS));
      RogueInt32 _auto_1936_10 = (0);
      for (;_auto_1936_10 < _auto_1935_9->count;++_auto_1936_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,(((RogueClassCmd*)(_auto_1935_9->data->objects[_auto_1936_10]))));
        scope_0->this_statement = cmd_11;
        call_ROGUEM119( 10, ROGUE_ARG((call_ROGUEM120( 34, cmd_11, scope_0 ))), result_4 );
      }
    }
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List__clear( ROGUE_ARG(((RogueCmd_List*)THIS)) )))), ROGUE_ARG(((RogueCmd_List*)(result_4))) );
  }
  else
  {
    RogueInt32 n_5 = (THIS->count);
    {
      RogueInt32 i_6 = (0);
      RogueInt32 _auto_183_7 = ((n_5 - 1));
      for (;i_6 <= _auto_183_7;++i_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_8,(((RogueClassCmd*)(THIS->data->objects[i_6]))));
        scope_0->this_statement = cmd_8;
        call_ROGUEM119( 10, ROGUE_ARG((call_ROGUEM120( 34, cmd_8, scope_0 ))), ROGUE_ARG(THIS) );
      }
    }
    RogueCmd_List__discard__Int32_Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), 0, n_5 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1937_12,(THIS));
    RogueInt32 _auto_1938_13 = (0);
    for (;_auto_1938_13 < _auto_1937_12->count;++_auto_1938_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_14,(((RogueClassCmd*)(_auto_1937_12->data->objects[_auto_1938_13]))));
      call_ROGUEM125( 20, statement_14, scope_0 );
    }
  }
  scope_0->this_statement = original_statement_3;
  scope_0->this_body = original_body_2;
}

void RogueCmdStatementList__trace_used_code( RogueClassCmdStatementList* THIS )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassVisitor*)(((RogueClassTraceUsedCodeVisitor*)ROGUE_SINGLETON(TraceUsedCodeVisitor))))) );
}

void RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( RogueClassCmdStatementList* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1, RogueLogical skip_trace_update_2 )
{
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_start__String_Int32_Int32( writer_0, ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[0]))->t->filepath), ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[0]))->t->line), ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[(THIS->count - 1)]))->t->line) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1939_3,(THIS));
    RogueInt32 _auto_1940_4 = (0);
    for (;_auto_1940_4 < _auto_1939_3->count;++_auto_1940_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_1939_3->data->objects[_auto_1940_4]))));
      if ((!(skip_trace_update_2) && (call_ROGUEM126( 23, statement_5 ))))
      {
        RogueCPPWriter__update_trace_info__Token( writer_0, ROGUE_ARG(statement_5->t) );
      }
      call_ROGUEM133( 41, statement_5, writer_0, true );
      if ((call_ROGUEM126( 33, statement_5 )))
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
      }
    }
  }
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_end( writer_0 );
  }
}

RogueCmd_List* RogueCmd_List__init_object( RogueCmd_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__init( RogueCmd_List* THIS )
{
  call_ROGUEM163( 10, ROGUE_ARG(THIS), 0 );
  return (RogueCmd_List*)(THIS);
}

RogueString* RogueCmd_List__to_String( RogueCmd_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_1900_2,(THIS));
    RogueInt32 _auto_1901_3 = (0);
    for (;_auto_1901_3 < _auto_1900_2->count;++_auto_1901_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,(((RogueClassCmd*)(_auto_1900_2->data->objects[_auto_1901_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmd_List__type_name( RogueCmd_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[853]);
}

RogueCmd_List* RogueCmd_List__init__Int32( RogueCmd_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmd*), true );
  }
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd( RogueCmd_List* THIS, RogueClassCmd* value_0 )
{
  ((RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd_List( RogueCmd_List* THIS, RogueCmd_List* other_0 )
{
  RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_1906_1,(other_0));
    RogueInt32 _auto_1907_2 = (0);
    for (;_auto_1907_2 < _auto_1906_1->count;++_auto_1907_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,(((RogueClassCmd*)(_auto_1906_1->data->objects[_auto_1907_2]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueCmd_List*)(THIS);
}

RogueInt32 RogueCmd_List__capacity( RogueCmd_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmd_List* RogueCmd_List__clear( RogueCmd_List* THIS )
{
  RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmd_List*)(THIS);
}

void RogueCmd_List__discard__Int32_Int32( RogueCmd_List* THIS, RogueInt32 i1_0, RogueInt32 n_1 )
{
  RogueInt32 i2_2 = ((i1_0 + n_1));
  RogueArray_set(THIS->data,i1_0,((RogueArray*)(THIS->data)),i2_2,(THIS->count - i2_2));
  RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - n_1)) );
}

void RogueCmd_List__discard_from__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueCmd_List* RogueCmd_List__insert__Cmd_Int32( RogueCmd_List* THIS, RogueClassCmd* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueCmd_List*)(((RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    ++THIS->count;
    THIS->data->objects[before_index_1] = value_0;
  }
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__last( RogueCmd_List* THIS )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueCmd_List* RogueCmd_List__reserve__Int32( RogueCmd_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmd_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__remove_at__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassCmd*)(result_1);
}

RogueString* RogueArray_Cmd___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[903]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init_object( RogueCmdLabel_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__init( RogueCmdLabel_List* THIS )
{
  RogueCmdLabel_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdLabel_List*)(THIS);
}

RogueString* RogueCmdLabel_List__to_String( RogueCmdLabel_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1941_2,(THIS));
    RogueInt32 _auto_1942_3 = (0);
    for (;_auto_1942_3 < _auto_1941_2->count;++_auto_1942_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,value_4,(((RogueClassCmdLabel*)(_auto_1941_2->data->objects[_auto_1942_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdLabel_List__type_name( RogueCmdLabel_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[854]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init__Int32( RogueCmdLabel_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdLabel*), true );
  }
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__add__CmdLabel( RogueCmdLabel_List* THIS, RogueClassCmdLabel* value_0 )
{
  ((RogueCmdLabel_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdLabel_List*)(THIS);
}

RogueInt32 RogueCmdLabel_List__capacity( RogueCmdLabel_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdLabel_List* RogueCmdLabel_List__clear( RogueCmdLabel_List* THIS )
{
  RogueCmdLabel_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdLabel_List*)(THIS);
}

void RogueCmdLabel_List__discard_from__Int32( RogueCmdLabel_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueCmdLabel_List* RogueCmdLabel_List__reserve__Int32( RogueCmdLabel_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdLabel_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdLabel_List*)(THIS);
}

RogueClassCmdLabel* RogueCmdLabel__init_object( RogueClassCmdLabel* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdLabel*)(THIS);
}

RogueString* RogueCmdLabel__type_name( RogueClassCmdLabel* THIS )
{
  return (RogueString*)(Rogue_literal_strings[948]);
}

RogueClassCmdLabel* RogueCmdLabel__clone__CloneArgs( RogueClassCmdLabel* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,result_1,(((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) )))));
  if (!!(clone_args_0))
  {
    call_ROGUEM381( 10, clone_args_0, result_1 );
  }
  return (RogueClassCmdLabel*)(result_1);
}

void RogueCmdLabel__dispatch__Visitor( RogueClassCmdLabel* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLabel( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdLabel__generates_output( RogueClassCmdLabel* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1974_0,(THIS->statements));
    RogueInt32 _auto_1975_1 = (0);
    for (;_auto_1975_1 < _auto_1974_0->count;++_auto_1975_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_2,(((RogueClassCmd*)(_auto_1974_0->data->objects[_auto_1975_1]))));
      if ((call_ROGUEM126( 23, statement_2 )))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueCmdLabel__requires_semicolon( RogueClassCmdLabel* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdLabel__resolve__Scope( RogueClassCmdLabel* THIS, RogueClassScope* scope_0 )
{
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLabel__write_cpp__CPPWriter_Logical( RogueClassCmdLabel* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, is_statement_1, false );
}

RogueClassCmdLabel* RogueCmdLabel__init__Token_String_CmdStatementList( RogueClassCmdLabel* THIS, RogueClassToken* _auto_188_0, RogueString* _auto_189_1, RogueClassCmdStatementList* _auto_190_2 )
{
  THIS->statements = _auto_190_2;
  THIS->name = _auto_189_1;
  THIS->t = _auto_188_0;
  return (RogueClassCmdLabel*)(THIS);
}

RogueString* RogueArray_CmdLabel___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[904]);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init_object( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueTable_String_CmdLabel___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueString* RogueTable_String_CmdLabel___to_String( RogueClassTable_String_CmdLabel_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_CmdLabel___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_CmdLabel___type_name( RogueClassTable_String_CmdLabel_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[784]);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init__Int32( RogueClassTable_String_CmdLabel_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_CmdLabel__List__init__Int32_TableEntry_String_CmdLabel_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_CmdLabel__List*,ROGUE_CREATE_OBJECT(TableEntry_String_CmdLabel__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_CmdLabel_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

void RogueTable_String_CmdLabel___clear( RogueClassTable_String_CmdLabel_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_CmdLabel__List*,_auto_1978_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_1978_0->count;++i_1)
    {
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
    }
  }
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueLogical RogueTable_String_CmdLabel___contains__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_CmdLabel_* RogueTable_String_CmdLabel___find__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_2,(((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_CmdLabel_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_CmdLabel_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_CmdLabel_*)(((RogueClassTableEntry_String_CmdLabel_*)(NULL)));
}

RogueClassCmdLabel* RogueTable_String_CmdLabel___get__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_1,(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassCmdLabel*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,default_value_2,0);
    return (RogueClassCmdLabel*)(default_value_2);
  }
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___set__String_CmdLabel( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0, RogueClassCmdLabel* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_4,(((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_CmdLabel_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_CmdLabel_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_CmdLabel_*)((RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_CmdLabel_*,ROGUE_CREATE_OBJECT(TableEntry_String_CmdLabel_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueStringBuilder* RogueTable_String_CmdLabel___print_to__StringBuilder( RogueClassTable_String_CmdLabel_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init_object( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueTableEntry_String_CmdLabel__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueString* RogueTableEntry_String_CmdLabel__List__to_String( RogueTableEntry_String_CmdLabel__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_CmdLabel__List*,_auto_1989_2,(THIS));
    RogueInt32 _auto_1990_3 = (0);
    for (;_auto_1990_3 < _auto_1989_2->count;++_auto_1990_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,value_4,(((RogueClassTableEntry_String_CmdLabel_*)(_auto_1989_2->data->objects[_auto_1990_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_CmdLabel___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_CmdLabel__List__type_name( RogueTableEntry_String_CmdLabel__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[855]);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init__Int32( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  }
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init__Int32_TableEntry_String_CmdLabel_( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_CmdLabel_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_195_3 = (initial_capacity_0);
      for (;i_2 <= _auto_195_3;++i_2)
      {
        RogueTableEntry_String_CmdLabel__List__add__TableEntry_String_CmdLabel_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__add__TableEntry_String_CmdLabel_( RogueTableEntry_String_CmdLabel__List* THIS, RogueClassTableEntry_String_CmdLabel_* value_0 )
{
  ((RogueTableEntry_String_CmdLabel__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_CmdLabel__List__capacity( RogueTableEntry_String_CmdLabel__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__reserve__Int32( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_CmdLabel__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_CmdLabel_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init_object( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueString* RogueTableEntry_String_CmdLabel___to_String( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_CmdLabel___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_CmdLabel___type_name( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[745]);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( RogueClassTableEntry_String_CmdLabel_* THIS, RogueString* _key_0, RogueClassCmdLabel* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_CmdLabel____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[905]);
}

RogueClassMethodTemplate* RogueMethodTemplate__init_object( RogueClassMethodTemplate* THIS )
{
  THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  THIS->template_tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->overrides = ((RogueMethodTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethodTemplate_List*,ROGUE_CREATE_OBJECT(MethodTemplate_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassMethodTemplate*)(THIS);
}

RogueString* RogueMethodTemplate__to_String( RogueClassMethodTemplate* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[414] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[415] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->parameter_count) )))) )))), Rogue_literal_strings[746] )))) ))));
}

RogueString* RogueMethodTemplate__type_name( RogueClassMethodTemplate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[785]);
}

RogueClassMethodTemplate* RogueMethodTemplate__init__Token_Type_String_Logical( RogueClassMethodTemplate* THIS, RogueClassToken* _auto_203_0, RogueClassType* _auto_204_1, RogueString* _auto_205_2, RogueLogical _auto_206_3 )
{
  THIS->is_global = _auto_206_3;
  THIS->name = _auto_205_2;
  THIS->type_context = _auto_204_1;
  THIS->t = _auto_203_0;
  return (RogueClassMethodTemplate*)(THIS);
}

RogueClassMethodTemplate* RogueMethodTemplate__clone( RogueClassMethodTemplate* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,result_0,(((RogueMethodTemplate__init__Token_Type_String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplate*,ROGUE_CREATE_OBJECT(MethodTemplate))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->is_global) )))));
  result_0->type_parameters = THIS->type_parameters;
  result_0->template_tokens = THIS->template_tokens;
  result_0->parameter_count = THIS->parameter_count;
  return (RogueClassMethodTemplate*)(result_0);
}

void RogueMethodTemplate__instantiate__Token_String( RogueClassMethodTemplate* THIS, RogueClassToken* ref_t_0, RogueString* ref_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_2,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ref_t_0, ref_name_1, ROGUE_ARG(((RogueString__from_first__Character( ref_name_1, (RogueCharacter)'<' )))) )))));
  RogueParser__read( parser_2 );
  ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,specializer_tokens_3,(((RogueToken_List_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List_List*,ROGUE_CREATE_OBJECT(Token_List_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueLogical first_5 = (true);
  while ((first_5 || ((RogueParser__consume__TokenType( parser_2, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_5 = ((RogueLogical)false);
    RogueToken_List_List__add__Token_List( specializer_tokens_3, ROGUE_ARG(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))) );
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_2, ROGUE_ARG(((RogueStringBuilder__clear( buffer_4 )))), ROGUE_ARG(((RogueToken_List_List__last( specializer_tokens_3 )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Token_List_*,mappings_6,(((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_2021_10,(THIS->type_parameters));
    RogueInt32 i_11 = (0);
    for (;i_11 < _auto_2021_10->count;++i_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,type_param_12,(((RogueClassTypeParameter*)(_auto_2021_10->data->objects[i_11]))));
      RogueTable_String_Token_List___set__String_Token_List( mappings_6, ROGUE_ARG(type_param_12->name), ROGUE_ARG(((RogueToken_List*)(specializer_tokens_3->data->objects[i_11]))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((specializer_tokens_3->count + 10)) )))));
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), ROGUE_ARG(THIS->t) )))) );
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(THIS->t), ref_name_1 ))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2022_13,(THIS->template_tokens));
    RogueInt32 _auto_2023_14 = (0);
    for (;_auto_2023_14 < _auto_2022_13->count;++_auto_2023_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,mt_15,(((RogueClassToken*)(_auto_2022_13->data->objects[_auto_2023_14]))));
      if (((void*)mt_15->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,mapping_8,(((RogueTable_String_Token_List___get__String( mappings_6, ROGUE_ARG((call_ROGUEM71( 2, mt_15 ))) )))));
        if (!!(mapping_8))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2024_16,(mapping_8));
            RogueInt32 _auto_2025_17 = (0);
            for (;_auto_2025_17 < _auto_2024_16->count;++_auto_2025_17)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_18,(((RogueClassToken*)(_auto_2024_16->data->objects[_auto_2025_17]))));
              RogueToken_List__add__Token( tokens_7, specializer_t_18 );
            }
          }
        }
        else
        {
          RogueToken_List__add__Token( tokens_7, mt_15 );
        }
      }
      else
      {
        RogueToken_List__add__Token( tokens_7, mt_15 );
      }
    }
  }
  parser_2 = ((RogueClassParser*)((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), tokens_7, false ))));
  parser_2->_this_type = THIS->type_context;
  RogueParser__parse_method__Logical_Logical( parser_2, ROGUE_ARG(THIS->is_global), true );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(parser_2->this_method));
  m_9->source_template = THIS;
  m_9->specializer_count = THIS->type_parameters->count;
  m_9->unspecialized_name = THIS->name;
  RogueMethod__assign_signature( m_9 );
  RogueType__inject_method__Method_OptionalInt32( ROGUE_ARG(THIS->type_context), m_9, ROGUE_ARG((RogueOptionalInt32__create())) );
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init_object( RogueMethodTemplate_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init( RogueMethodTemplate_List* THIS )
{
  RogueMethodTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueMethodTemplate_List__to_String( RogueMethodTemplate_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2026_2,(THIS));
    RogueInt32 _auto_2027_3 = (0);
    for (;_auto_2027_3 < _auto_2026_2->count;++_auto_2027_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,value_4,(((RogueClassMethodTemplate*)(_auto_2026_2->data->objects[_auto_2027_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethodTemplate__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethodTemplate_List__type_name( RogueMethodTemplate_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[856]);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init__Int32( RogueMethodTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethodTemplate*), true );
  }
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__add__MethodTemplate( RogueMethodTemplate_List* THIS, RogueClassMethodTemplate* value_0 )
{
  ((RogueMethodTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueMethodTemplate_List*)(THIS);
}

RogueInt32 RogueMethodTemplate_List__capacity( RogueMethodTemplate_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__reserve__Int32( RogueMethodTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueMethodTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueArray_MethodTemplate___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[906]);
}

RogueString* RogueArray_Method___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[907]);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init_object( RogueClassTable_String_Method_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init( RogueClassTable_String_Method_List_* THIS )
{
  RogueTable_String_Method_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueString* RogueTable_String_Method_List___to_String( RogueClassTable_String_Method_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method_List___type_name( RogueClassTable_String_Method_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[787]);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init__Int32( RogueClassTable_String_Method_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Method_List__List__init__Int32_TableEntry_String_Method_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Method_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Method_List_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Method_List_*)(THIS);
}

void RogueTable_String_Method_List___clear( RogueClassTable_String_Method_List_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method_List__List*,_auto_2061_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2061_0->count;++i_1)
    {
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Method_List_*)(NULL));
    }
  }
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Method_List_* RogueTable_String_Method_List___find__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_2,(((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Method_List_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Method_List_*)(((RogueClassTableEntry_String_Method_List_*)(NULL)));
}

RogueMethod_List* RogueTable_String_Method_List___get__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_1,(((RogueTable_String_Method_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueMethod_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,default_value_2,0);
    return (RogueMethod_List*)(default_value_2);
  }
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___set__String_Method_List( RogueClassTable_String_Method_List_* THIS, RogueString* key_0, RogueMethod_List* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_4,(((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Method_List_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Method_List_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Method_List_*)((RogueTableEntry_String_Method_List___init__String_Method_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_List_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method_List___print_to__StringBuilder( RogueClassTable_String_Method_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init_object( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueTableEntry_String_Method_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method_List__List__to_String( RogueTableEntry_String_Method_List__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method_List__List*,_auto_2081_2,(THIS));
    RogueInt32 _auto_2082_3 = (0);
    for (;_auto_2082_3 < _auto_2081_2->count;++_auto_2082_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,value_4,(((RogueClassTableEntry_String_Method_List_*)(_auto_2081_2->data->objects[_auto_2082_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Method_List___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Method_List__List__type_name( RogueTableEntry_String_Method_List__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[858]);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init__Int32( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_List_*), true );
  }
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init__Int32_TableEntry_String_Method_List_( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Method_List_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_List_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_215_3 = (initial_capacity_0);
      for (;i_2 <= _auto_215_3;++i_2)
      {
        RogueTableEntry_String_Method_List__List__add__TableEntry_String_Method_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__add__TableEntry_String_Method_List_( RogueTableEntry_String_Method_List__List* THIS, RogueClassTableEntry_String_Method_List_* value_0 )
{
  ((RogueTableEntry_String_Method_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Method_List__List__capacity( RogueTableEntry_String_Method_List__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__reserve__Int32( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Method_List__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_List_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init_object( RogueClassTableEntry_String_Method_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Method_List___to_String( RogueClassTableEntry_String_Method_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Method_List___type_name( RogueClassTableEntry_String_Method_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[747]);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init__String_Method_List_Int32( RogueClassTableEntry_String_Method_List_* THIS, RogueString* _key_0, RogueMethod_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Method_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[908]);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init_object( RogueClassTable_String_Method_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init( RogueClassTable_String_Method_* THIS )
{
  RogueTable_String_Method___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueString* RogueTable_String_Method___to_String( RogueClassTable_String_Method_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method___type_name( RogueClassTable_String_Method_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[788]);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init__Int32( RogueClassTable_String_Method_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Method__List__init__Int32_TableEntry_String_Method_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Method__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Method__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Method_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Method_*)(THIS);
}

void RogueTable_String_Method___clear( RogueClassTable_String_Method_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method__List*,_auto_2111_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2111_0->count;++i_1)
    {
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Method_*)(NULL));
    }
  }
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Method_* RogueTable_String_Method___find__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_2,(((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Method_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Method_*)(((RogueClassTableEntry_String_Method_*)(NULL)));
}

RogueClassMethod* RogueTable_String_Method___get__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_1,(((RogueTable_String_Method___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassMethod*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,default_value_2,0);
    return (RogueClassMethod*)(default_value_2);
  }
}

RogueClassTable_String_Method_* RogueTable_String_Method___set__String_Method( RogueClassTable_String_Method_* THIS, RogueString* key_0, RogueClassMethod* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_4,(((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Method_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Method_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Method_*)((RogueTableEntry_String_Method___init__String_Method_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method___print_to__StringBuilder( RogueClassTable_String_Method_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init_object( RogueTableEntry_String_Method__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init( RogueTableEntry_String_Method__List* THIS )
{
  RogueTableEntry_String_Method__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method__List__to_String( RogueTableEntry_String_Method__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method__List*,_auto_2122_2,(THIS));
    RogueInt32 _auto_2123_3 = (0);
    for (;_auto_2123_3 < _auto_2122_2->count;++_auto_2123_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,value_4,(((RogueClassTableEntry_String_Method_*)(_auto_2122_2->data->objects[_auto_2123_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Method___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Method__List__type_name( RogueTableEntry_String_Method__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[859]);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init__Int32( RogueTableEntry_String_Method__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_*), true );
  }
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init__Int32_TableEntry_String_Method_( RogueTableEntry_String_Method__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Method_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_219_3 = (initial_capacity_0);
      for (;i_2 <= _auto_219_3;++i_2)
      {
        RogueTableEntry_String_Method__List__add__TableEntry_String_Method_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__add__TableEntry_String_Method_( RogueTableEntry_String_Method__List* THIS, RogueClassTableEntry_String_Method_* value_0 )
{
  ((RogueTableEntry_String_Method__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Method__List__capacity( RogueTableEntry_String_Method__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__reserve__Int32( RogueTableEntry_String_Method__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Method__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init_object( RogueClassTableEntry_String_Method_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueString* RogueTableEntry_String_Method___to_String( RogueClassTableEntry_String_Method_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Method___type_name( RogueClassTableEntry_String_Method_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[748]);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init__String_Method_Int32( RogueClassTableEntry_String_Method_* THIS, RogueString* _key_0, RogueClassMethod* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Method____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[909]);
}

RogueClassMethodTemplates* RogueMethodTemplates__init_object( RogueClassMethodTemplates* THIS )
{
  THIS->templates = ((RogueMethodTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethodTemplate_List*,ROGUE_CREATE_OBJECT(MethodTemplate_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassMethodTemplates*)(THIS);
}

RogueString* RogueMethodTemplates__type_name( RogueClassMethodTemplates* THIS )
{
  return (RogueString*)(Rogue_literal_strings[789]);
}

RogueClassMethodTemplates* RogueMethodTemplates__init__Type( RogueClassMethodTemplates* THIS, RogueClassType* _auto_223_0 )
{
  THIS->type_context = _auto_223_0;
  return (RogueClassMethodTemplates*)(THIS);
}

void RogueMethodTemplates__add__MethodTemplate( RogueClassMethodTemplates* THIS, RogueClassMethodTemplate* m_0 )
{
  if (((RogueMethodTemplates__has_template__String_Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG(m_0->name), ROGUE_ARG(m_0->type_parameters->count), ROGUE_ARG(m_0->parameter_count) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[413] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->name) )))) )))), Rogue_literal_strings[414] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(m_0->type_parameters->count) )))) )))), Rogue_literal_strings[415] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(m_0->parameter_count) )))) )))), Rogue_literal_strings[416] )))) )))) ))));
  }
  RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), m_0 );
}

RogueClassMethodTemplate* RogueMethodTemplates__find__String_Int32_Int32( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2150_3,(THIS->templates));
    RogueInt32 _auto_2151_4 = (0);
    for (;_auto_2151_4 < _auto_2150_3->count;++_auto_2151_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,template_5,(((RogueClassMethodTemplate*)(_auto_2150_3->data->objects[_auto_2151_4]))));
      if (((template_5->type_parameters->count == specializer_count_1 && template_5->parameter_count == parameter_count_2) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(template_5->name), name_0 )))))
      {
        return (RogueClassMethodTemplate*)(template_5);
      }
    }
  }
  return (RogueClassMethodTemplate*)(((RogueClassMethodTemplate*)(NULL)));
}

RogueLogical RogueMethodTemplates__has_template__String_Int32_Int32( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2 )
{
  return (RogueLogical)(!!(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), name_0, specializer_count_1, parameter_count_2 )))));
}

RogueLogical RogueMethodTemplates__has_templates_named__String( RogueClassMethodTemplates* THIS, RogueString* name_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2152_1,(THIS->templates));
    RogueInt32 _auto_2153_2 = (0);
    for (;_auto_2153_2 < _auto_2152_1->count;++_auto_2153_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueClassMethodTemplate*)(_auto_2152_1->data->objects[_auto_2153_2]))));
      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_3->name), name_0 ))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

void RogueMethodTemplates__inherit__MethodTemplates_Type( RogueClassMethodTemplates* THIS, RogueClassMethodTemplates* other_0, RogueClassType* extended_type_1 )
{
  if (!(!!(other_0)))
  {
    return;
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2154_3,(other_0->templates));
    RogueInt32 _auto_2155_4 = (0);
    for (;_auto_2155_4 < _auto_2154_3->count;++_auto_2155_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,base_m_5,(((RogueClassMethodTemplate*)(_auto_2154_3->data->objects[_auto_2155_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_2,(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG(base_m_5->name), ROGUE_ARG(base_m_5->type_parameters->count), ROGUE_ARG(base_m_5->parameter_count) )))));
      if (((!(!!(m_2)) && ((RogueType__is_aspect( ROGUE_ARG(base_m_5->type_context) )))) && !(((RogueType__is_aspect( extended_type_1 ))))))
      {
        m_2 = ((RogueClassMethodTemplate*)((RogueMethodTemplate__clone( base_m_5 ))));
        m_2->type_context = extended_type_1;
      }
      if (!!(m_2))
      {
        m_2->overridden_m = base_m_5;
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(base_m_5->overrides), m_2 );
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), m_2 );
      }
      else
      {
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), base_m_5 );
      }
    }
  }
}

RogueLogical RogueMethodTemplates__instantiate__Token_String( RogueClassMethodTemplates* THIS, RogueClassToken* t_0, RogueString* specialized_name_1 )
{
  if (!(((RogueString__contains__String( specialized_name_1, Rogue_literal_strings[234] )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__before_first__String( specialized_name_1, Rogue_literal_strings[234] )))));
  if (!(((RogueMethodTemplates__has_templates_named__String( ROGUE_ARG(THIS), base_name_2 )))))
  {
    return (RogueLogical)(false);
  }
  RogueInt32 specializer_count_3 = (((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), t_0, specialized_name_1, ROGUE_ARG(((RogueString__from_first__String( specialized_name_1, Rogue_literal_strings[234] )))) )))) ))));
  return (RogueLogical)(((RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(THIS), base_name_2, specializer_count_3, t_0, specialized_name_1 ))));
}

RogueLogical RogueMethodTemplates__instantiate__String_Int32_Token_String( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueClassToken* t_2, RogueString* specialized_name_3 )
{
  RogueLogical found_any_4 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2156_5,(THIS->templates));
    RogueInt32 _auto_2157_6 = (0);
    for (;_auto_2157_6 < _auto_2156_5->count;++_auto_2157_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_7,(((RogueClassMethodTemplate*)(_auto_2156_5->data->objects[_auto_2157_6]))));
      if ((m_7->type_parameters->count == specializer_count_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_7->name), name_0 )))))
      {
        found_any_4 = ((RogueLogical)true);
        RogueMethodTemplate__instantiate__Token_String( m_7, t_2, specialized_name_3 );
      }
    }
  }
  return (RogueLogical)(found_any_4);
}

void RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2, RogueClassToken* t_3, RogueString* specialized_name_4 )
{
  if (!(THIS->type_context->organized))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_5,(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), name_0, specializer_count_1, parameter_count_2 )))));
  if (!!(m_5))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,possible_existing_6,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->type_context->method_lookup_by_name), specialized_name_4 )))));
    if (!!(possible_existing_6))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2158_7,(possible_existing_6));
        RogueInt32 _auto_2159_8 = (0);
        for (;_auto_2159_8 < _auto_2158_7->count;++_auto_2159_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_9,(((RogueClassMethod*)(_auto_2158_7->data->objects[_auto_2159_8]))));
          if (existing_m_9->parameters->count == parameter_count_2)
          {
            return;
          }
        }
      }
    }
    RogueMethodTemplate__instantiate__Token_String( m_5, t_3, specialized_name_4 );
    if (!!(m_5->overrides->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2160_10,(m_5->overrides));
        RogueInt32 _auto_2161_11 = (0);
        for (;_auto_2161_11 < _auto_2160_10->count;++_auto_2161_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,override_m_12,(((RogueClassMethodTemplate*)(_auto_2160_10->data->objects[_auto_2161_11]))));
          RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( ROGUE_ARG(override_m_12->type_context->method_templates), name_0, specializer_count_1, parameter_count_2, t_3, specialized_name_4 );
        }
      }
    }
  }
}

RogueString* RogueArray_Parser___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[910]);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init_object( RogueClassTable_String_ParseReader_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init( RogueClassTable_String_ParseReader_* THIS )
{
  RogueTable_String_ParseReader___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueString* RogueTable_String_ParseReader___to_String( RogueClassTable_String_ParseReader_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_ParseReader___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_ParseReader___type_name( RogueClassTable_String_ParseReader_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[793]);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init__Int32( RogueClassTable_String_ParseReader_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_ParseReader__List__init__Int32_TableEntry_String_ParseReader_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_ParseReader__List*,ROGUE_CREATE_OBJECT(TableEntry_String_ParseReader__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_ParseReader_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueClassTableEntry_String_ParseReader_* RogueTable_String_ParseReader___find__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_2,(((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_ParseReader_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_ParseReader_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_ParseReader_*)(((RogueClassTableEntry_String_ParseReader_*)(NULL)));
}

RogueClassParseReader* RogueTable_String_ParseReader___get__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_1,(((RogueTable_String_ParseReader___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassParseReader*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,default_value_2,0);
    return (RogueClassParseReader*)(default_value_2);
  }
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___set__String_ParseReader( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0, RogueClassParseReader* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_4,(((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_ParseReader_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_ParseReader_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_ParseReader_*)((RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_ParseReader_*,ROGUE_CREATE_OBJECT(TableEntry_String_ParseReader_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueStringBuilder* RogueTable_String_ParseReader___print_to__StringBuilder( RogueClassTable_String_ParseReader_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init_object( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueTableEntry_String_ParseReader__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueString* RogueTableEntry_String_ParseReader__List__to_String( RogueTableEntry_String_ParseReader__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_ParseReader__List*,_auto_2184_2,(THIS));
    RogueInt32 _auto_2185_3 = (0);
    for (;_auto_2185_3 < _auto_2184_2->count;++_auto_2185_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,value_4,(((RogueClassTableEntry_String_ParseReader_*)(_auto_2184_2->data->objects[_auto_2185_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_ParseReader___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_ParseReader__List__type_name( RogueTableEntry_String_ParseReader__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[861]);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init__Int32( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  }
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init__Int32_TableEntry_String_ParseReader_( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_ParseReader_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_243_3 = (initial_capacity_0);
      for (;i_2 <= _auto_243_3;++i_2)
      {
        RogueTableEntry_String_ParseReader__List__add__TableEntry_String_ParseReader_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__add__TableEntry_String_ParseReader_( RogueTableEntry_String_ParseReader__List* THIS, RogueClassTableEntry_String_ParseReader_* value_0 )
{
  ((RogueTableEntry_String_ParseReader__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_ParseReader__List__capacity( RogueTableEntry_String_ParseReader__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__reserve__Int32( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_ParseReader__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_ParseReader_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init_object( RogueClassTableEntry_String_ParseReader_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueString* RogueTableEntry_String_ParseReader___to_String( RogueClassTableEntry_String_ParseReader_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_ParseReader___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_ParseReader___type_name( RogueClassTableEntry_String_ParseReader_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[749]);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( RogueClassTableEntry_String_ParseReader_* THIS, RogueString* _key_0, RogueClassParseReader* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueClassParseReader* RogueParseReader__init_object( RogueClassParseReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassParseReader*)(THIS);
}

RogueString* RogueParseReader__type_name( RogueClassParseReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[792]);
}

RogueLogical RogueParseReader__has_another( RogueClassParseReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueParseReader__peek( RogueClassParseReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  return (RogueCharacter)(THIS->data->data->characters[THIS->position]);
}

RogueCharacter RogueParseReader__read( RogueClassParseReader* THIS )
{
  RogueCharacter result_0 = (THIS->data->data->characters[THIS->position]);
  ++THIS->position;
  if (result_0 == ((RogueCharacter)(10)))
  {
    ++THIS->line;
    THIS->column = 1;
  }
  else
  {
    ++THIS->column;
  }
  return (RogueCharacter)(result_0);
}

RogueClassParseReader* RogueParseReader__init__String_Int32( RogueClassParseReader* THIS, RogueString* source_0, RogueInt32 _auto_238_1 )
{
  THIS->spaces_per_tab = _auto_238_1;
  RogueInt32 tab_count_2 = (0);
  if (!!(THIS->spaces_per_tab))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2212_5,(source_0));
      RogueInt32 _auto_2213_6 = (0);
      for (;_auto_2213_6 < _auto_2212_5->character_count;++_auto_2213_6)
      {
        RogueCharacter b_7 = (RogueString_character_at(_auto_2212_5,_auto_2213_6));
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->character_count + tab_count_2)) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2214_8,(source_0));
    RogueInt32 _auto_2215_9 = (0);
    for (;_auto_2215_9 < _auto_2214_8->character_count;++_auto_2215_9)
    {
      RogueCharacter b_10 = (RogueString_character_at(_auto_2214_8,_auto_2215_9));
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        {
          RogueInt32 _auto_234_3 = (1);
          RogueInt32 _auto_235_4 = (THIS->spaces_per_tab);
          for (;_auto_234_3 <= _auto_235_4;++_auto_234_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  THIS->count = THIS->data->count;
  THIS->line = 1;
  THIS->column = 1;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__File_Int32( RogueClassParseReader* THIS, RogueClassFile* file_0, RogueInt32 _auto_239_1 )
{
  THIS->spaces_per_tab = _auto_239_1;
  RogueParseReader__init__String_Int32( ROGUE_ARG(THIS), ROGUE_ARG((RogueFile__load_as_string__String( ROGUE_ARG(file_0->filepath) ))), ROGUE_ARG(THIS->spaces_per_tab) );
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__Character_List_Int32( RogueClassParseReader* THIS, RogueCharacter_List* source_0, RogueInt32 _auto_240_1 )
{
  THIS->spaces_per_tab = _auto_240_1;
  RogueInt32 tab_count_2 = (0);
  if (!!(THIS->spaces_per_tab))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2216_5,(source_0));
      RogueInt32 _auto_2217_6 = (0);
      for (;_auto_2217_6 < _auto_2216_5->count;++_auto_2217_6)
      {
        RogueCharacter b_7 = (_auto_2216_5->data->characters[_auto_2217_6]);
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->count + tab_count_2)) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2218_8,(source_0));
    RogueInt32 _auto_2219_9 = (0);
    for (;_auto_2219_9 < _auto_2218_8->count;++_auto_2219_9)
    {
      RogueCharacter b_10 = (_auto_2218_8->data->characters[_auto_2219_9]);
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        {
          RogueInt32 _auto_236_3 = (1);
          RogueInt32 _auto_237_4 = (THIS->spaces_per_tab);
          for (;_auto_236_3 <= _auto_237_4;++_auto_236_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  THIS->count = THIS->data->count;
  THIS->line = 1;
  THIS->column = 1;
  return (RogueClassParseReader*)(THIS);
}

RogueLogical RogueParseReader__consume__Character( RogueClassParseReader* THIS, RogueCharacter ch_0 )
{
  if (((RogueParseReader__peek( ROGUE_ARG(THIS) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  RogueParseReader__read( ROGUE_ARG(THIS) );
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueInt32 limit_1 = (text_0->character_count);
  RogueInt32 i_2 = (0);
  while (i_2 < limit_1)
  {
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), i_2 ))) != RogueString_character_at(text_0,i_2))
    {
      return (RogueLogical)(false);
    }
    ++i_2;
  }
  i_2 = ((RogueInt32)0);
  while (i_2 < limit_1)
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
    ++i_2;
  }
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume_id__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueCharacter ch_1 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), ROGUE_ARG(text_0->character_count) ))));
  if ((((RogueCharacter__is_alphanumeric( ch_1 ))) || ch_1 == (RogueCharacter)'_'))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS), text_0 ))));
}

RogueLogical RogueParseReader__consume_spaces( RogueClassParseReader* THIS )
{
  RogueLogical found_0 = (false);
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
  {
    found_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_0);
}

RogueLogical RogueParseReader__has_another__Int32( RogueClassParseReader* THIS, RogueInt32 n_0 )
{
  return (RogueLogical)((THIS->position + n_0) <= THIS->count);
}

RogueCharacter RogueParseReader__peek__Int32( RogueClassParseReader* THIS, RogueInt32 num_ahead_0 )
{
  RogueInt32 peek_pos_1 = ((THIS->position + num_ahead_0));
  if (peek_pos_1 >= THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  return (RogueCharacter)(THIS->data->data->characters[peek_pos_1]);
}

RogueClassParseReader* RogueParseReader__seek_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 new_line_0, RogueInt32 new_column_1 )
{
  if ((new_line_0 < THIS->line || (new_line_0 == THIS->line && new_column_1 < THIS->column)))
  {
    THIS->position = 0;
    THIS->line = 1;
    THIS->column = 1;
  }
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->line < new_line_0))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->column < new_column_1))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__set_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 _auto_241_0, RogueInt32 _auto_242_1 )
{
  THIS->column = _auto_242_1;
  THIS->line = _auto_241_0;
  return (RogueClassParseReader*)(THIS);
}

RogueString* RogueArray_TableEntry_String_ParseReader____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[911]);
}

RogueClassStopwatch* RogueStopwatch__init_object( RogueClassStopwatch* THIS )
{
  THIS->start_time = (RogueSystem__time());
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassStopwatch*)(THIS);
}

RogueString* RogueStopwatch__to_String( RogueClassStopwatch* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Real64_Int32( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueStopwatch__elapsed( ROGUE_ARG(THIS) )))), 2 )))), Rogue_literal_strings[751] )))) ))));
}

RogueString* RogueStopwatch__type_name( RogueClassStopwatch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[794]);
}

RogueReal64 RogueStopwatch__elapsed( RogueClassStopwatch* THIS )
{
  return (RogueReal64)(((RogueSystem__time()) - THIS->start_time));
}

RoguePlugin_List* RoguePlugin_List__init_object( RoguePlugin_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__init( RoguePlugin_List* THIS )
{
  RoguePlugin_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RoguePlugin_List*)(THIS);
}

RogueString* RoguePlugin_List__to_String( RoguePlugin_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_2220_2,(THIS));
    RogueInt32 _auto_2221_3 = (0);
    for (;_auto_2221_3 < _auto_2220_2->count;++_auto_2221_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,value_4,(((RogueClassPlugin*)(_auto_2220_2->data->objects[_auto_2221_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RoguePlugin_List__type_name( RoguePlugin_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[862]);
}

RoguePlugin_List* RoguePlugin_List__init__Int32( RoguePlugin_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassPlugin*), true );
  }
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__add__Plugin( RoguePlugin_List* THIS, RogueClassPlugin* value_0 )
{
  ((RoguePlugin_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RoguePlugin_List*)(THIS);
}

RogueInt32 RoguePlugin_List__capacity( RoguePlugin_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RoguePlugin_List* RoguePlugin_List__reserve__Int32( RoguePlugin_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RoguePlugin_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RoguePlugin_List*)(THIS);
}

RogueClassPlugin* RoguePlugin__init_object( RogueClassPlugin* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPlugin*)(THIS);
}

RogueString* RoguePlugin__type_name( RogueClassPlugin* THIS )
{
  return (RogueString*)(Rogue_literal_strings[796]);
}

RogueClassPlugin* RoguePlugin__init__String( RogueClassPlugin* THIS, RogueString* _auto_247_0 )
{
  THIS->name = _auto_247_0;
  return (RogueClassPlugin*)(THIS);
}

void RoguePlugin__collect_supported_targets( RogueClassPlugin* THIS )
{
  if (!!(THIS->collect_supported_types_callback))
  {
    call_ROGUEM48( 10, ROGUE_ARG(THIS->collect_supported_types_callback) );
  }
}

RogueLogical RoguePlugin__generate_additional_types( RogueClassPlugin* THIS )
{
  if (!!(THIS->generate_additonal_types_callback))
  {
    return (RogueLogical)((call_ROGUEM213( 10, ROGUE_ARG(THIS->generate_additonal_types_callback) )));
  }
  return (RogueLogical)(false);
}

RogueClassPlugin* RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( RogueClassPlugin* THIS, RogueClassFunction__RETURNSLogical* _auto_249_0 )
{
  THIS->generate_additonal_types_callback = _auto_249_0;
  return (RogueClassPlugin*)(THIS);
}

RogueClassFunction__RETURNSLogical* RogueFunction__RETURNSLogical__init_object( RogueClassFunction__RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction__RETURNSLogical*)(THIS);
}

RogueString* RogueFunction__RETURNSLogical__type_name( RogueClassFunction__RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[795]);
}

RogueLogical RogueFunction__RETURNSLogical__call( RogueClassFunction__RETURNSLogical* THIS )
{
  return (RogueLogical)(false);
}

RogueString* RogueArray_Plugin___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[912]);
}

RogueClassProgram* RogueProgram__init_object( RogueClassProgram* THIS )
{
  THIS->code_prefix = Rogue_literal_strings[52];
  THIS->program_name = Rogue_literal_strings[53];
  THIS->template_list = ((RogueTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTemplate_List*,ROGUE_CREATE_OBJECT(Template_List))) )));
  THIS->template_lookup = ((RogueTable_String_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Template_*,ROGUE_CREATE_OBJECT(Table_String_Template_))) )));
  THIS->augment_lookup = ((RogueTable_String_Augment_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Augment_List_*,ROGUE_CREATE_OBJECT(Table_String_Augment_List_))) )));
  THIS->all_requisite = false;
  THIS->first_filepath = Rogue_literal_strings[0];
  THIS->global_properties = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->native_header = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->native_code = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->methods_by_signature = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->type_list = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->type_lookup = ((RogueTable_String_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Type_*,ROGUE_CREATE_OBJECT(Table_String_Type_))) )));
  THIS->literal_string_lookup = ((RogueTable_String_Int32___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Int32_*,ROGUE_CREATE_OBJECT(Table_String_Int32_))) )));
  THIS->literal_string_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->ids_by_module = ((RogueTable_String_String_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_List_*,ROGUE_CREATE_OBJECT(Table_String_String_List_))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassProgram*)(THIS);
}

RogueString* RogueProgram__type_name( RogueClassProgram* THIS )
{
  return (RogueString*)(Rogue_literal_strings[804]);
}

RogueInt32 RogueProgram__add_literal_string__String( RogueClassProgram* THIS, RogueString* value_0 )
{
  if (!(!!(value_0)))
  {
    return (RogueInt32)(0);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_1,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS->literal_string_lookup), value_0 )))));
  if (!!(entry_1))
  {
    return (RogueInt32)(entry_1->value);
  }
  else
  {
    RogueInt32 index_2 = (THIS->literal_string_list->count);
    RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), value_0, index_2 );
    RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), value_0 );
    return (RogueInt32)(index_2);
  }
}

void RogueProgram__add_module_id__String_String( RogueClassProgram* THIS, RogueString* module_name_0, RogueString* id_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,list_2,(((RogueTable_String_String_List___get__String( ROGUE_ARG(THIS->ids_by_module), module_name_0 )))));
  if (!(!!(list_2)))
  {
    list_2 = ((RogueString_List*)((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) ))));
    RogueTable_String_String_List___set__String_String_List( ROGUE_ARG(THIS->ids_by_module), module_name_0, list_2 );
  }
  RogueString_List__add__String( list_2, id_name_1 );
}

void RogueProgram__add_template__Template( RogueClassProgram* THIS, RogueClassTemplate* template_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,existing_template_1,(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name) )))));
  {
    {
      RogueInt32 param_count_2 = (((RogueTemplate__type_parameter_count( template_0 ))));
      if (!(!!(existing_template_1))) goto _auto_289;
      if ( !(param_count_2 != ((RogueTemplate__type_parameter_count( existing_template_1 )))) ) goto _auto_290;
      if (!(!!(existing_template_1->alternates_by_param_count)))
      {
        existing_template_1->alternates_by_param_count = ((RogueTable_Int32_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Int32_Template_*,ROGUE_CREATE_OBJECT(Table_Int32_Template_))) )));
      }
      if ( !(!(((RogueTable_Int32_Template___contains__Int32( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2 ))))) ) goto _auto_290;
      RogueTable_Int32_Template___set__Int32_Template( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2, template_0 );
      goto _auto_288;
      _auto_289:;
      RogueTemplate_List__add__Template( ROGUE_ARG(THIS->template_list), template_0 );
      RogueTable_String_Template___set__String_Template( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name), template_0 );
      goto _auto_288;
    }
    _auto_290:;
    if ((!!((template_0->attributes->flags & 262144)) && !!((existing_template_1->attributes->flags & 262144))))
    {
      RogueToken_List__add__Token_List( ROGUE_ARG(existing_template_1->tokens), ROGUE_ARG(template_0->tokens) );
    }
    else if (!!((existing_template_1->attributes->flags & 262144)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[352] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[353] )))) )))) ))));
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[354] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[353] )))) )))) ))));
    }
  }
  _auto_288:;
}

void RogueProgram__configure( RogueClassProgram* THIS )
{
  THIS->type_null = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[1], 32 )));
  THIS->type_Real64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[56], 2 )));
  THIS->type_Real32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[57], 2 )));
  THIS->type_Int64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[58], 2 )));
  THIS->type_Int32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[59], 2 )));
  THIS->type_Character = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[60], 2 )));
  THIS->type_Byte = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[61], 2 )));
  THIS->type_Logical = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[62], 2 )));
  THIS->type_Object = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[63], 32 )));
  THIS->type_String = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[64], 48 )));
  THIS->type_StringBuilder = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[65], 0 )));
  THIS->type_TypeInfo = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[66], 0 )));
  THIS->type_NativeArray = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[67], 32 )));
  THIS->type_GenericList = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[68], 0 )));
  THIS->type_Global = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[69], 0 )));
  THIS->type_Exception = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[70], 0 )));
  THIS->type_Object->simplify_name = true;
  THIS->type_String->simplify_name = true;
  THIS->type_StringBuilder->simplify_name = true;
  THIS->type_TypeInfo->simplify_name = true;
  THIS->type_null->organized = true;
  THIS->type_null->defined = true;
  RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), Rogue_literal_strings[0] );
  RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), Rogue_literal_strings[0], 0 );
}

RogueString* RogueProgram__create_unique_id( RogueClassProgram* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[311], ROGUE_ARG(((RogueProgram__next_unique_integer( ROGUE_ARG(THIS) )))) ))));
}

RogueClassMethod* RogueProgram__get_on_launch_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[69] )))));
  if (!(!!(THIS->m_on_launch)))
  {
    THIS->m_on_launch = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[289] )));
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
    {
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[290] )))))) );
      RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), t_0 );
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), t_0, Rogue_literal_strings[291], false )))))) );
    RogueMethod__make_requisite( ROGUE_ARG(THIS->m_on_launch) );
  }
  return (RogueClassMethod*)(THIS->m_on_launch);
}

RogueClassMethod* RogueProgram__get_run_tests_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[69] )))));
  if (!(!!(THIS->m_run_tests)))
  {
    THIS->m_run_tests = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[290] )));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_run_tests->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_run_tests), t_0, Rogue_literal_strings[291], false )))))) );
    RogueMethod__make_requisite( ROGUE_ARG(THIS->m_run_tests) );
  }
  return (RogueClassMethod*)(THIS->m_run_tests);
}

RogueInt32 RogueProgram__next_unique_integer( RogueClassProgram* THIS )
{
  ++THIS->unique_integer;
  return (RogueInt32)((THIS->unique_integer - 1));
}

RogueClassTemplate* RogueProgram__find_template__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,0);
  switch (((RogueString__last( name_0 ))))
  {
    case (RogueCharacter)'?':
    {
      if (!!(((RogueProgram__find_type__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( name_0, -1 )))) )))))
      {
        return (RogueClassTemplate*)(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[365] ))));
      }
      else
      {
        return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
      }
      break;
    }
    case (RogueCharacter)']':
    {
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[366] ))));
      break;
    }
    default:
    {
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(((RogueString__before_first__Character( name_0, (RogueCharacter)'<' )))) ))));
    }
  }
  if (!!(template_1))
  {
    return (RogueClassTemplate*)(template_1);
  }
  return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
}

RogueClassType* RogueProgram__find_type__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ROGUE_ARG(THIS), name_0 )))));
  if (!!(template_2))
  {
    type_1 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), ROGUE_ARG(template_2->t), name_0 ))));
    RogueAttributes__add__Attributes( ROGUE_ARG(type_1->attributes), ROGUE_ARG(template_2->attributes) );
    RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_0, type_1 );
    return (RogueClassType*)(type_1);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassType* RogueProgram__get_type_reference__Token_String( RogueClassProgram* THIS, RogueClassToken* t_0, RogueString* name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_1 )))));
  if (!!(type_2))
  {
    return (RogueClassType*)(type_2);
  }
  type_2 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), t_0, name_1 ))));
  RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_1, type_2 );
  return (RogueClassType*)(type_2);
}

RogueString* RogueProgram__get_callback_type_signature__Type_List( RogueClassProgram* THIS, RogueType_List* parameter_types_0 )
{
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), Rogue_literal_strings[92] );
  if (!!(parameter_types_0))
  {
    RogueLogical first_1 = (true);
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_328_2,(parameter_types_0));
      RogueInt32 _auto_329_3 = (0);
      for (;_auto_329_3 < _auto_328_2->count;++_auto_329_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueClassType*)(_auto_328_2->data->objects[_auto_329_3]))));
        if (first_1)
        {
          first_1 = ((RogueLogical)false);
        }
        else
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
        }
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(type_4->name) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)')', true );
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueClassType* RogueProgram__get_callback_type_reference__Token_Type_List_Type( RogueClassProgram* THIS, RogueClassToken* t_0, RogueType_List* parameter_types_1, RogueClassType* return_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[300], ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ROGUE_ARG(THIS), parameter_types_1 )))) )))));
  if (!!(return_type_2))
  {
    name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[208], ROGUE_ARG(return_type_2->name) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, name_3 )))));
  if (type_4->defined)
  {
    return (RogueClassType*)(type_4);
  }
  type_4->defined = true;
  type_4->callback_parameter_types = parameter_types_1;
  type_4->_callback_return_type = return_type_2;
  RogueAttributes__add__Int32( ROGUE_ARG(type_4->attributes), 0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( type_4, t_0, Rogue_literal_strings[301] )))));
  if (!!(parameter_types_1))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_330_6,(parameter_types_1));
      RogueInt32 i_7 = (0);
      for (;i_7 < _auto_330_6->count;++i_7)
      {
        RogueMethod__add_parameter__Token_String_Type( m_call_5, t_0, ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[302], ROGUE_ARG((i_7 + 1)) )))), ROGUE_ARG(((RogueClassType*)(parameter_types_1->data->objects[i_7]))) );
      }
    }
  }
  if (!!(return_type_2))
  {
    m_call_5->_return_type = return_type_2;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_5->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueType__create_default_value__Token( return_type_2, t_0 )))) )))))) );
  }
  return (RogueClassType*)(type_4);
}

RogueLogical RogueProgram__is_type_defined__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  if (!(!!(type_1)))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(type_1->defined);
}

RogueClassType* RogueProgram__create_built_in_type__String_Int32( RogueClassProgram* THIS, RogueString* name_0, RogueInt32 attributes_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((call_ROGUEM79( 11, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[54] )))), Rogue_literal_strings[55], 0, 0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_2, name_0 )))));
  RogueAttributes__add__Int32( ROGUE_ARG(type_3->attributes), attributes_1 );
  return (RogueClassType*)(type_3);
}

void RogueProgram__resolve( RogueClassProgram* THIS )
{
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_on_launch_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), ROGUE_ARG(THIS->m_on_launch->t), Rogue_literal_strings[293], false )))))) );
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_333_5,(THIS->global_properties));
    RogueInt32 _auto_334_6 = (0);
    for (;_auto_334_6 < _auto_333_5->count;++_auto_334_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueClassProperty*)(_auto_333_5->data->objects[_auto_334_6]))));
      if (!(!!(p_7->_type)))
      {
        if (!!(p_7->initial_value))
        {
          p_7->_type = (call_ROGUEM127( 26, ROGUE_ARG(p_7->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          if (!(!!(p_7->_type)))
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,mesg_0,(Rogue_literal_strings[361]));
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_7->t), mesg_0 ))));
          }
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,mesg_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[362] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->name) )))) )))), Rogue_literal_strings[363] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->name) )))) )))), Rogue_literal_strings[364] )))) )))));
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_7->t), mesg_1 ))));
        }
      }
      RogueType__add_property__Property( ROGUE_ARG(THIS->type_Global), p_7 );
    }
  }
  RogueType__resolve( ROGUE_ARG(THIS->type_null) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Exception) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Real64) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Real32) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Int64) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Int32) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Character) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Byte) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Logical) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Global) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Object) );
  RogueType__resolve( ROGUE_ARG(THIS->type_NativeArray) );
  RogueType__resolve( ROGUE_ARG(THIS->type_GenericList) );
  RogueType__resolve( ROGUE_ARG(THIS->type_String) );
  if (THIS->all_requisite)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Type_*,_auto_343_8,(THIS->type_lookup));
      RogueInt32 _auto_344_9 = (0);
      for (;_auto_344_9 < ((RogueTable_String_Type___count( _auto_343_8 )));++_auto_344_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,t_10,(((RogueTable_String_Type___at__Int32( _auto_343_8, _auto_344_9 )))));
        RogueType__resolve( t_10 );
        RogueAttributes__add__Int32( ROGUE_ARG(t_10->attributes), 8192 );
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_345_11,(t_10->global_method_list));
          RogueInt32 _auto_346_12 = (0);
          for (;_auto_346_12 < _auto_345_11->count;++_auto_346_12)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_13,(((RogueClassMethod*)(_auto_345_11->data->objects[_auto_346_12]))));
            RogueAttributes__add__Int32( ROGUE_ARG(r_13->attributes), 8192 );
          }
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_347_14,(t_10->method_list));
          RogueInt32 _auto_348_15 = (0);
          for (;_auto_348_15 < _auto_347_14->count;++_auto_348_15)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueClassMethod*)(_auto_347_14->data->objects[_auto_348_15]))));
            RogueAttributes__add__Int32( ROGUE_ARG(m_16->attributes), 8192 );
          }
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_349_17,(THIS->template_list));
      RogueInt32 _auto_350_18 = (0);
      for (;_auto_350_18 < _auto_349_17->count;++_auto_350_18)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,templ_19,(((RogueClassTemplate*)(_auto_349_17->data->objects[_auto_350_18]))));
        if (!(!!(templ_19->type_parameters)))
        {
          RogueAttributes__add__Int32( ROGUE_ARG(templ_19->attributes), 8192 );
          ROGUE_DEF_LOCAL_REF(RogueClassType*,t_2,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_19->t), ROGUE_ARG(templ_19->name) )))));
          RogueType__resolve( t_2 );
          {
            ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_351_20,(t_2->global_method_list));
            RogueInt32 _auto_352_21 = (0);
            for (;_auto_352_21 < _auto_351_20->count;++_auto_352_21)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_22,(((RogueClassMethod*)(_auto_351_20->data->objects[_auto_352_21]))));
              RogueAttributes__add__Int32( ROGUE_ARG(r_22->attributes), 8192 );
            }
          }
          {
            ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_353_23,(t_2->method_list));
            RogueInt32 _auto_354_24 = (0);
            for (;_auto_354_24 < _auto_353_23->count;++_auto_354_24)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_25,(((RogueClassMethod*)(_auto_353_23->data->objects[_auto_354_24]))));
              RogueAttributes__add__Int32( ROGUE_ARG(m_25->attributes), 8192 );
            }
          }
        }
      }
    }
  }
  RogueLogical resolve_types_3 = (true);
  while (resolve_types_3)
  {
    resolve_types_3 = ((RogueLogical)false);
    {
      ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_355_26,(THIS->template_list));
      RogueInt32 _auto_356_27 = (0);
      for (;_auto_356_27 < _auto_355_26->count;++_auto_356_27)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,templ_28,(((RogueClassTemplate*)(_auto_355_26->data->objects[_auto_356_27]))));
        if ((!!((templ_28->attributes->flags & 8192)) && !(!!(templ_28->type_parameters))))
        {
          RogueType__resolve( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_28->t), ROGUE_ARG(templ_28->name) )))) );
        }
      }
    }
    RogueInt32 i_4 = (0);
    while (i_4 < THIS->type_list->count)
    {
      RogueType__resolve( ROGUE_ARG(((RogueClassType*)(THIS->type_list->data->objects[i_4]))) );
      ++i_4;
      if (i_4 == THIS->type_list->count)
      {
        if (!!(THIS->m_run_tests))
        {
          THIS->m_run_tests->resolved = false;
          RogueMethod__resolve( ROGUE_ARG(THIS->m_run_tests) );
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_357_29,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
      RogueInt32 _auto_358_30 = (0);
      for (;_auto_358_30 < _auto_357_29->count;++_auto_358_30)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_31,(((RogueClassPlugin*)(_auto_357_29->data->objects[_auto_358_30]))));
        if (((RoguePlugin__generate_additional_types( plugin_31 ))))
        {
          resolve_types_3 = ((RogueLogical)true);
        }
      }
    }
  }
  RogueProgram__cull_unused_code( ROGUE_ARG(THIS) );
  RogueProgram__reorder_compounds( ROGUE_ARG(THIS) );
  RogueProgram__validate( ROGUE_ARG(THIS) );
}

void RogueProgram__validate( RogueClassProgram* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_359_0,(THIS->type_list));
    RogueInt32 _auto_360_1 = (0);
    for (;_auto_360_1 < _auto_359_0->count;++_auto_360_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(_auto_359_0->data->objects[_auto_360_1]))));
      RogueType__validate( type_2 );
    }
  }
}

void RogueProgram__reorder_compounds( RogueClassProgram* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,compounds_0,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  RogueInt32 write_i_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_361_5,(THIS->type_list));
    RogueInt32 read_i_6 = (0);
    for (;read_i_6 < _auto_361_5->count;++read_i_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(THIS->type_list->data->objects[read_i_6]))));
      if (((RogueType__is_compound( type_2 ))))
      {
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), type_2, compounds_0 );
      }
      else
      {
        THIS->type_list->data->objects[write_i_1] = type_2;
        type_2->index = write_i_1;
        ++write_i_1;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_362_7,(compounds_0));
    RogueInt32 _auto_363_8 = (0);
    for (;_auto_363_8 < _auto_362_7->count;++_auto_363_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_9,(((RogueClassType*)(_auto_362_7->data->objects[_auto_363_8]))));
      type_9->index = THIS->type_list->count;
      RogueType_List__add__Type( ROGUE_ARG(THIS->type_list), type_9 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_364_10,(THIS->type_list));
    RogueInt32 _auto_365_11 = (0);
    for (;_auto_365_11 < _auto_364_10->count;++_auto_365_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_12,(((RogueClassType*)(_auto_364_10->data->objects[_auto_365_11]))));
      if ((((RogueType__instance_of__Type( type_12, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))) && ((void*)type_12) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception)))
      {
        if (type_12->base_class->index > type_12->index)
        {
          RogueInt32 i1_3 = (type_12->base_class->index);
          RogueInt32 i2_4 = (type_12->index);
          RogueType_List__swap__Int32_Int32( ROGUE_ARG(THIS->type_list), i1_3, i2_4 );
          type_12->index = i1_3;
          type_12->base_class->index = i2_4;
        }
      }
    }
  }
}

void RogueProgram__collect_compound_dependencies__Type_Type_List( RogueClassProgram* THIS, RogueClassType* type_0, RogueType_List* compounds_1 )
{
  if (type_0->index == -1)
  {
    return;
  }
  type_0->index = -1;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_366_2,(type_0->property_list));
    RogueInt32 _auto_367_3 = (0);
    for (;_auto_367_3 < _auto_366_2->count;++_auto_367_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_4,(((RogueClassProperty*)(_auto_366_2->data->objects[_auto_367_3]))));
      if (((RogueType__is_compound( ROGUE_ARG(p_4->_type) ))))
      {
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), ROGUE_ARG(p_4->_type), compounds_1 );
      }
    }
  }
  RogueType_List__add__Type( compounds_1, type_0 );
}

void RogueProgram__cull_unused_code( RogueClassProgram* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_368_2,(THIS->type_list));
    RogueInt32 _auto_369_3 = (0);
    for (;_auto_369_3 < _auto_368_2->count;++_auto_369_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueClassType*)(_auto_368_2->data->objects[_auto_369_3]))));
      if (((RogueType__is_requisite( type_4 ))))
      {
        RogueType__trace_used_code( type_4 );
      }
    }
  }
  RogueProgram__trace_overridden_methods( ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_370_5,(THIS->type_list));
    RogueInt32 _auto_371_6 = (0);
    for (;_auto_371_6 < _auto_370_5->count;++_auto_371_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueClassType*)(_auto_370_5->data->objects[_auto_371_6]))));
      RogueType__cull_unused_methods( type_7 );
    }
  }
  RogueInt32 write_i_0 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_372_8,(THIS->type_list));
    RogueInt32 read_i_9 = (0);
    for (;read_i_9 < _auto_372_8->count;++read_i_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueClassType*)(THIS->type_list->data->objects[read_i_9]))));
      if (!(((RogueType__should_cull( type_1 )))))
      {
        THIS->type_list->data->objects[write_i_0] = type_1;
        type_1->index = write_i_0;
        ++write_i_0;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_0 );
}

void RogueProgram__trace_overridden_methods( RogueClassProgram* THIS )
{
  RogueLogical traced_new_methods_0 = (true);
  while (traced_new_methods_0)
  {
    traced_new_methods_0 = ((RogueLogical)false);
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_373_5,(THIS->type_list));
      RogueInt32 _auto_374_6 = (0);
      for (;_auto_374_6 < _auto_373_5->count;++_auto_374_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueClassType*)(_auto_373_5->data->objects[_auto_374_6]))));
        if (type_7->is_used)
        {
          if (((RogueType__is_aspect( type_7 ))))
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_375_8,(type_7->method_list));
              RogueInt32 _auto_376_9 = (0);
              for (;_auto_376_9 < _auto_375_8->count;++_auto_376_9)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_375_8->data->objects[_auto_376_9]))));
                if ((m_10->is_used && !!(m_10->incorporating_classes)))
                {
                  {
                    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_377_11,(m_10->incorporating_classes));
                    RogueInt32 _auto_378_12 = (0);
                    for (;_auto_378_12 < _auto_377_11->count;++_auto_378_12)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_13,(((RogueClassType*)(_auto_377_11->data->objects[_auto_378_12]))));
                      if (ic_13->is_used)
                      {
                        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,im_1,(((RogueType__find_method__String( ic_13, ROGUE_ARG(m_10->signature) )))));
                        if (!(im_1->is_used))
                        {
                          traced_new_methods_0 = ((RogueLogical)true);
                          RogueMethod__trace_used_code( im_1 );
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_379_14,(type_7->method_list));
              RogueInt32 _auto_380_15 = (0);
              for (;_auto_380_15 < _auto_379_14->count;++_auto_380_15)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueClassMethod*)(_auto_379_14->data->objects[_auto_380_15]))));
                if (m_16->is_used)
                {
                  {
                    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_381_17,(m_16->overriding_methods));
                    RogueInt32 _auto_382_18 = (0);
                    for (;_auto_382_18 < _auto_381_17->count;++_auto_382_18)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_19,(((RogueClassMethod*)(_auto_381_17->data->objects[_auto_382_18]))));
                      if ((!(overriding_m_19->is_used) && overriding_m_19->type_context->is_used))
                      {
                        traced_new_methods_0 = ((RogueLogical)true);
                        RogueMethod__trace_used_code( overriding_m_19 );
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,class_list_2,(((RogueType_List__filtered__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_383*)ROGUE_SINGLETON(Function_383))))) )))));
  ROGUE_DEF_LOCAL_REF(RogueType_List*,aspect_list_3,(((RogueType_List__filtered__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_384*)ROGUE_SINGLETON(Function_384))))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_385_20,(aspect_list_3));
    RogueInt32 _auto_386_21 = (0);
    for (;_auto_386_21 < _auto_385_20->count;++_auto_386_21)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_22,(((RogueClassType*)(_auto_385_20->data->objects[_auto_386_21]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_387_23,(aspect_22->method_list));
        RogueInt32 _auto_388_24 = (0);
        for (;_auto_388_24 < _auto_387_23->count;++_auto_388_24)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_25,(((RogueClassMethod*)(_auto_387_23->data->objects[_auto_388_24]))));
          if ((aspect_m_25->is_used && !!(aspect_m_25->incorporating_classes)))
          {
            RogueType_List__clear( ROGUE_ARG(aspect_m_25->incorporating_classes) );
          }
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_389_26,(aspect_list_3));
    RogueInt32 _auto_390_27 = (0);
    for (;_auto_390_27 < _auto_389_26->count;++_auto_390_27)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_28,(((RogueClassType*)(_auto_389_26->data->objects[_auto_390_27]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_391_29,(class_list_2));
        RogueInt32 _auto_392_30 = (0);
        for (;_auto_392_30 < _auto_391_29->count;++_auto_392_30)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,type_31,(((RogueClassType*)(_auto_391_29->data->objects[_auto_392_30]))));
          if (((RogueType__instance_of__Type( type_31, aspect_28 ))))
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_393_32,(aspect_28->method_list));
              RogueInt32 _auto_394_33 = (0);
              for (;_auto_394_33 < _auto_393_32->count;++_auto_394_33)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_34,(((RogueClassMethod*)(_auto_393_32->data->objects[_auto_394_33]))));
                if (aspect_m_34->is_used)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,class_m_4,(((RogueType__find_method__String( type_31, ROGUE_ARG(aspect_m_34->signature) )))));
                  if (((!!(class_m_4) && class_m_4->is_used) && !!(aspect_m_34->incorporating_classes)))
                  {
                    RogueType_List__add__Type( ROGUE_ARG(aspect_m_34->incorporating_classes), type_31 );
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

RogueString* RogueProgram__validate_cpp_name__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  RogueLogical begins_with_code_prefix_1 = (false);
  if (((RogueString__begins_with__String( name_0, ROGUE_ARG(THIS->code_prefix) ))))
  {
    begins_with_code_prefix_1 = ((RogueLogical)true);
    name_0 = ((RogueString*)((RogueString__from__Int32( name_0, ROGUE_ARG(THIS->code_prefix->character_count) ))));
  }
  RogueLogical all_underscores_2 = (true);
  if (((RogueString__ends_with__String( name_0, Rogue_literal_strings[523] ))))
  {
    {
      RogueInt32 i_3 = (0);
      RogueInt32 _auto_256_4 = ((name_0->character_count - 5));
      for (;i_3 <= _auto_256_4;++i_3)
      {
        if (RogueString_character_at(name_0,i_3) != (RogueCharacter)'_')
        {
          all_underscores_2 = ((RogueLogical)false);
          goto _auto_395;
        }
      }
    }
    _auto_395:;
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[463], name_0 ))));
  }
  RogueOptionalInt32 i1_5 = (((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[365], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))), ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 1)) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[208], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))) )))), Rogue_literal_strings[524] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[208], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[234], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    RogueOptionalInt32 i2_6 = (((RogueProgram__locate_matching_close_specialize__String_OptionalInt32( ROGUE_ARG(THIS), name_0, i1_5 ))));
    if (!(i2_6.exists))
    {
      goto _auto_396;
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,before_7,(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,after_8,(((RogueString__from__Int32( name_0, ROGUE_ARG((i2_6.value + 2)) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,middle_9,(((RogueString__from__Int32_Int32( name_0, ROGUE_ARG((i1_5.value + 2)), ROGUE_ARG((i2_6.value - 1)) )))));
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], before_7 )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], middle_9 )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], after_8 )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[234], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  _auto_396:;
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[220], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))) )))) )))), Rogue_literal_strings[525] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[220], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  if (begins_with_code_prefix_1)
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->code_prefix) );
  }
  RogueInt32 count_10 = (name_0->character_count);
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_397_12,(name_0));
    RogueInt32 i_13 = (0);
    for (;i_13 < _auto_397_12->character_count;++i_13)
    {
      RogueCharacter ch_11 = (RogueString_character_at(name_0,i_13));
      if ((((RogueCharacter__is_alphanumeric( ch_11 ))) || ch_11 == (RogueCharacter)'$'))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), ch_11, true );
      }
      else
      {
        switch (ch_11)
        {
          case (RogueCharacter)'!':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[526] );
            break;
          }
          case (RogueCharacter)'%':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[527] );
            break;
          }
          case (RogueCharacter)'&':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[528] );
            break;
          }
          case (RogueCharacter)'*':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[529] );
            break;
          }
          case (RogueCharacter)'+':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[530] );
            break;
          }
          case (RogueCharacter)'-':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'>':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[524] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[531] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'.':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[463] );
            break;
          }
          case (RogueCharacter)'/':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[532] );
            break;
          }
          case (RogueCharacter)'<':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[533] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[534] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'=':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[535] );
            break;
          }
          case (RogueCharacter)'>':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[536] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[537] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'^':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[538] );
            break;
          }
          case (RogueCharacter)'|':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[539] );
            break;
          }
          case (RogueCharacter)'~':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[540] );
            break;
          }
          default:
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)'_', true );
          }
        }
      }
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueOptionalInt32 RogueProgram__locate_matching_close_specialize__String_OptionalInt32( RogueClassProgram* THIS, RogueString* st_0, RogueOptionalInt32 i1_1 )
{
  RogueInt32 nesting_level_2 = (1);
  {
    RogueInt32 i_3 = ((i1_1.value + 2));
    RogueInt32 _auto_257_4 = ((st_0->character_count - 2));
    for (;i_3 <= _auto_257_4;++i_3)
    {
      if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'<' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'<'))
      {
        ++nesting_level_2;
        ++i_3;
      }
      else if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'>' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'>'))
      {
        --nesting_level_2;
        if (nesting_level_2 == 0)
        {
          return (RogueOptionalInt32)(RogueOptionalInt32( i_3, true ));
        }
        ++i_3;
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

void RogueProgram__write_cpp__String( RogueClassProgram* THIS, RogueString* filepath_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_398_25,(THIS->type_list));
    RogueInt32 _auto_399_26 = (0);
    for (;_auto_399_26 < _auto_398_25->count;++_auto_399_26)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_27,(((RogueClassType*)(_auto_398_25->data->objects[_auto_399_26]))));
      RogueType__assign_cpp_name( type_27 );
    }
  }
  THIS->type_NativeArray->cpp_class_name = Rogue_literal_strings[541];
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_400_28,(THIS->type_list));
    RogueInt32 _auto_401_29 = (0);
    for (;_auto_401_29 < _auto_400_28->count;++_auto_401_29)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_30,(((RogueClassType*)(_auto_400_28->data->objects[_auto_401_29]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_402_31,(type_30->global_method_list));
        RogueInt32 _auto_403_32 = (0);
        for (;_auto_403_32 < _auto_402_31->count;++_auto_403_32)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_33,(((RogueClassMethod*)(_auto_402_31->data->objects[_auto_403_32]))));
          RogueMethod__assign_cpp_name( r_33 );
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_404_34,(type_30->method_list));
        RogueInt32 _auto_405_35 = (0);
        for (;_auto_405_35 < _auto_404_34->count;++_auto_405_35)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_36,(((RogueClassMethod*)(_auto_404_34->data->objects[_auto_405_35]))));
          RogueMethod__assign_cpp_name( m_36 );
        }
      }
    }
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[545] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[546] )))) )))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_1,(((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[547] )))) )))));
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[548] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[549] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[548] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[550] );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[551] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 0))) ? (Rogue_literal_strings[552]) : Rogue_literal_strings[553])) );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[554] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 1))) ? (Rogue_literal_strings[552]) : Rogue_literal_strings[553])) );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[555] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 2))) ? (Rogue_literal_strings[552]) : Rogue_literal_strings[553])) );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[556] );
  RogueCPPWriter__println__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[557] )))), ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_threshold) );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[558] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[559] );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_409_37,(THIS->native_header));
    RogueInt32 _auto_410_38 = (0);
    for (;_auto_410_38 < _auto_409_37->count;++_auto_410_38)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_39,(((RogueString*)(_auto_409_37->data->objects[_auto_410_38]))));
      RogueCPPWriter__println__String( writer_1, line_39 );
    }
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[560] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[561] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_411_40,(THIS->type_list));
    RogueInt32 _auto_412_41 = (0);
    for (;_auto_412_41 < _auto_411_40->count;++_auto_412_41)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_42,(((RogueClassType*)(_auto_411_40->data->objects[_auto_412_41]))));
      if ((!(((RogueType__omit_output( type_42 )))) && !(((RogueType__is_primitive( type_42 ))))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[562] )))), ROGUE_ARG(type_42->cpp_class_name) )))), Rogue_literal_strings[241] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[563] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_413_43,(THIS->type_list));
    RogueInt32 _auto_414_44 = (0);
    for (;_auto_414_44 < _auto_413_43->count;++_auto_414_44)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_45,(((RogueClassType*)(_auto_413_43->data->objects[_auto_414_44]))));
      if ((((RogueType__is_compound( type_45 ))) && !(((RogueType__omit_output( type_45 ))))))
      {
        RogueType__print_data_definition__CPPWriter( type_45, writer_1 );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[597] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_415_46,(THIS->type_list));
    RogueInt32 _auto_416_47 = (0);
    for (;_auto_416_47 < _auto_415_46->count;++_auto_416_47)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_48,(((RogueClassType*)(_auto_415_46->data->objects[_auto_416_47]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_417_49,(type_48->global_list));
        RogueInt32 _auto_418_50 = (0);
        for (;_auto_418_50 < _auto_417_49->count;++_auto_418_50)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_51,(((RogueClassProperty*)(_auto_417_49->data->objects[_auto_418_50]))));
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[598] )))), ROGUE_ARG(g_51->_type) )))), Rogue_literal_strings[599] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_48->cpp_name) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(g_51->cpp_name) )))), Rogue_literal_strings[241] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[600] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_419_52,(THIS->type_list));
    RogueInt32 _auto_420_53 = (0);
    for (;_auto_420_53 < _auto_419_52->count;++_auto_420_53)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_54,(((RogueClassType*)(_auto_419_52->data->objects[_auto_420_53]))));
      if ((!(((RogueType__is_compound( type_54 )))) && !(((RogueType__omit_output( type_54 ))))))
      {
        RogueType__print_data_definition__CPPWriter( type_54, writer_1 );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[601] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_421_55,(THIS->type_list));
    RogueInt32 _auto_422_56 = (0);
    for (;_auto_422_56 < _auto_421_55->count;++_auto_422_56)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_57,(((RogueClassType*)(_auto_421_55->data->objects[_auto_422_56]))));
      if ((!(((RogueType__omit_output( type_57 )))) || (((RogueType__is_native( type_57 ))) && !(type_57->is_array))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[602] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_57->cpp_name) )))), Rogue_literal_strings[241] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[603] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_423_58,(THIS->type_list));
    RogueInt32 _auto_424_59 = (0);
    for (;_auto_424_59 < _auto_423_58->count;++_auto_424_59)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_60,(((RogueClassType*)(_auto_423_58->data->objects[_auto_424_59]))));
      RogueType__print_global_method_prototypes__CPPWriter( type_60, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[605] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_425_61,(THIS->type_list));
    RogueInt32 _auto_426_62 = (0);
    for (;_auto_426_62 < _auto_425_61->count;++_auto_426_62)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_63,(((RogueClassType*)(_auto_425_61->data->objects[_auto_426_62]))));
      RogueType__print_method_prototypes__CPPWriter( type_63, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[606] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[607] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__close( writer_1 );
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[545] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[608] )))) )))) );
  writer_1 = ((RogueClassCPPWriter*)((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[522] )))) ))));
  ROGUE_DEF_LOCAL_REF(RogueString*,base_filename_2,(filepath_0));
  if (((RogueString__contains__Character( base_filename_2, (RogueCharacter)'/' ))))
  {
    base_filename_2 = ((RogueString*)((RogueString__after_last__Character( base_filename_2, (RogueCharacter)'/' ))));
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[609] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[610] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_filename_2 )))) )))), Rogue_literal_strings[611] )))) )))) );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_427_64,(THIS->native_code));
    RogueInt32 _auto_428_65 = (0);
    for (;_auto_428_65 < _auto_427_64->count;++_auto_428_65)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_66,(((RogueString*)(_auto_427_64->data->objects[_auto_428_65]))));
      RogueCPPWriter__println__String( writer_1, line_66 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString_List*,native_method_signature_list_3,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Method_*,native_method_signature_lookup_4,(((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_429_67,(THIS->type_list));
    RogueInt32 _auto_430_68 = (0);
    for (;_auto_430_68 < _auto_429_67->count;++_auto_430_68)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_69,(((RogueClassType*)(_auto_429_67->data->objects[_auto_430_68]))));
      if (type_69->is_used)
      {
        RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( type_69, native_method_signature_list_3, native_method_signature_lookup_4 );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_431_70,(native_method_signature_list_3));
    RogueInt32 _auto_432_71 = (0);
    for (;_auto_432_71 < _auto_431_70->count;++_auto_432_71)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_72,(((RogueString*)(_auto_431_70->data->objects[_auto_432_71]))));
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[614] )))), ROGUE_ARG(((RogueString__before_first__String( sig_72, Rogue_literal_strings[615] )))) )))), Rogue_literal_strings[616] );
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueTable_String_Method___get__String( native_method_signature_lookup_4, sig_72 )))->cpp_typedef) )))), Rogue_literal_strings[32] );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueString__after_first__String( sig_72, Rogue_literal_strings[615] )))) )))), Rogue_literal_strings[241] );
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_433_73,(native_method_signature_list_3));
    RogueInt32 _auto_434_74 = (0);
    for (;_auto_434_74 < _auto_433_73->count;++_auto_434_74)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_75,(((RogueString*)(_auto_433_73->data->objects[_auto_434_74]))));
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueTable_String_Method___get__String( native_method_signature_lookup_4, sig_75 )))));
      if (m_5->called_dynamically)
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(m_5->_return_type) )))), Rogue_literal_strings[617] )))), ROGUE_ARG(m_5->cpp_typedef) );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[618] )))), ROGUE_ARG(m_5->type_context) )))), Rogue_literal_strings[604] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_435_76,(m_5->parameters));
          RogueInt32 i_77 = (0);
          for (;i_77 < _auto_435_76->count;++i_77)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_6,(((RogueClassLocal*)(m_5->parameters->data->objects[i_77]))));
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[582] )))), ROGUE_ARG(p_6->_type) )))), Rogue_literal_strings[619] )))), i_77 );
          }
        }
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[620] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[327] );
        if (!!(m_5->_return_type))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[621] );
        }
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[622] )))), ROGUE_ARG(m_5->cpp_typedef) );
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[623] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_436_78,(m_5->parameters));
          RogueInt32 i_79 = (0);
          for (;i_79 < _auto_436_78->count;++i_79)
          {
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[624] )))), i_79 );
          }
        }
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[625] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[597] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_437_80,(THIS->type_list));
    RogueInt32 _auto_438_81 = (0);
    for (;_auto_438_81 < _auto_437_80->count;++_auto_438_81)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_82,(((RogueClassType*)(_auto_437_80->data->objects[_auto_438_81]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_439_83,(type_82->global_list));
        RogueInt32 _auto_440_84 = (0);
        for (;_auto_440_84 < _auto_439_83->count;++_auto_440_84)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_85,(((RogueClassProperty*)(_auto_439_83->data->objects[_auto_440_84]))));
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(g_85->_type) )))), Rogue_literal_strings[599] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_82->cpp_name) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(g_85->cpp_name) );
          RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[626] )))), ROGUE_ARG(g_85->_type) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[241] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_441_86,(THIS->type_list));
    RogueInt32 _auto_442_87 = (0);
    for (;_auto_442_87 < _auto_441_86->count;++_auto_442_87)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_88,(((RogueClassType*)(_auto_441_86->data->objects[_auto_442_87]))));
      if (((((RogueType__has_object_references( type_88 ))) && !(((RogueType__is_reference_array( type_88 ))))) && !(((RogueType__is_aspect( type_88 ))))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_7,(type_88->cpp_name));
        if ((type_88->is_array && ((RogueType__is_compound( ROGUE_ARG(type_88->_element_type) )))))
        {
          trace_name_7 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_88->name) ))));
        }
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[627] )))), trace_name_7 )))), Rogue_literal_strings[628] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_443_89,(THIS->type_list));
    RogueInt32 _auto_444_90 = (0);
    for (;_auto_444_90 < _auto_443_89->count;++_auto_444_90)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_91,(((RogueClassType*)(_auto_443_89->data->objects[_auto_444_90]))));
      if (((((RogueType__has_object_references( type_91 ))) && !(((RogueType__is_reference_array( type_91 ))))) && !(((RogueType__is_aspect( type_91 ))))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_8,(type_91->cpp_name));
        if ((type_91->is_array && ((RogueType__is_compound( ROGUE_ARG(type_91->_element_type) )))))
        {
          trace_name_8 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_91->name) ))));
        }
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[627] )))), trace_name_8 )))), Rogue_literal_strings[629] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
        writer_1->indent += 2;
        if (((RogueType__is_compound( type_91 ))))
        {
          RogueLogical uses_link_9 = (false);
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_445_92,(type_91->property_list));
            RogueInt32 _auto_446_93 = (0);
            for (;_auto_446_93 < _auto_445_92->count;++_auto_446_93)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_94,(((RogueClassProperty*)(_auto_445_92->data->objects[_auto_446_93]))));
              if (((RogueType__is_reference( ROGUE_ARG(p_94->_type) ))))
              {
                uses_link_9 = ((RogueLogical)true);
                goto _auto_447;
              }
            }
          }
          _auto_447:;
          if (uses_link_9)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[630] );
          }
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_91, writer_1 );
        }
        else if (type_91->is_array)
        {
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[638] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(type_91->_element_type) )))), Rogue_literal_strings[639] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[641] )))), ROGUE_ARG(type_91->_element_type->cpp_class_name) )))), Rogue_literal_strings[642] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[643] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[644] )))), ROGUE_ARG(type_91->_element_type->cpp_name) )))), Rogue_literal_strings[645] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
        }
        else
        {
          RogueLogical uses_link_10 = (false);
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_448_95,(type_91->property_list));
            RogueInt32 _auto_449_96 = (0);
            for (;_auto_449_96 < _auto_448_95->count;++_auto_449_96)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_97,(((RogueClassProperty*)(_auto_448_95->data->objects[_auto_449_96]))));
              if (((RogueType__is_reference( ROGUE_ARG(p_97->_type) ))))
              {
                uses_link_10 = ((RogueLogical)true);
                goto _auto_450;
              }
            }
          }
          _auto_450:;
          if (uses_link_10)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[630] );
          }
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[646] );
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_91, writer_1 );
        }
        writer_1->indent -= 2;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[647] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_451_98,(THIS->type_list));
    RogueInt32 i_99 = (0);
    for (;i_99 < _auto_451_98->count;++i_99)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_11,(((RogueClassType*)(THIS->type_list->data->objects[i_99]))));
      if (i_99 > 0)
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[5] );
        if ((i_99 & 15) == 0)
        {
          RogueCPPWriter__println( writer_1 );
        }
      }
      RogueCPPWriter__print__Int32( writer_1, ROGUE_ARG(((RogueProgram__add_literal_string__String( ROGUE_ARG(THIS), ROGUE_ARG(type_11->name) )))) );
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[648] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  RogueLogical first_12 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_452_100,(THIS->type_list));
    RogueInt32 _auto_453_101 = (0);
    for (;_auto_453_101 < _auto_452_100->count;++_auto_453_101)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_102,(((RogueClassType*)(_auto_452_100->data->objects[_auto_453_101]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_13,(((RogueType__find_method__String( type_102, Rogue_literal_strings[451] )))));
      if ((((!!(m_13) && !(((RogueType__omit_output( type_102 ))))) && m_13->is_used) && m_13->statements->count > 1))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[649] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_13->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[650] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_454_103,(THIS->type_list));
    RogueInt32 _auto_455_104 = (0);
    for (;_auto_455_104 < _auto_454_103->count;++_auto_455_104)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_105,(((RogueClassType*)(_auto_454_103->data->objects[_auto_455_104]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueType__find_method__String( type_105, Rogue_literal_strings[513] )))));
      if ((((!!(m_14) && !(((RogueType__omit_output( type_105 ))))) && m_14->is_used) && m_14->statements->count > 1))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[649] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_14->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[651] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_456_106,(THIS->type_list));
    RogueInt32 _auto_457_107 = (0);
    for (;_auto_457_107 < _auto_456_106->count;++_auto_457_107)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_108,(((RogueClassType*)(_auto_456_106->data->objects[_auto_457_107]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueType__find_method__String( type_108, Rogue_literal_strings[453] )))));
      if ((((!!(m_15) && !(((RogueType__omit_output( type_108 ))))) && m_15->is_used) && !!(m_15->statements->count)))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[652] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_15->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[653] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_458_109,(THIS->type_list));
    RogueInt32 _auto_459_110 = (0);
    for (;_auto_459_110 < _auto_458_109->count;++_auto_459_110)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_111,(((RogueClassType*)(_auto_458_109->data->objects[_auto_459_110]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      if (((RogueType__is_reference( type_111 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueType__find_method__String( type_111, Rogue_literal_strings[455] )))));
        if ((((!!(m_16) && !(((RogueType__omit_output( type_111 ))))) && m_16->is_used) && !!(m_16->statements->count)))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[654] );
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_16->cpp_name) );
        }
        else
        {
          RogueCPPWriter__print__Int32( writer_1, 0 );
        }
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[655] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_460_112,(THIS->type_list));
    RogueInt32 _auto_461_113 = (0);
    for (;_auto_461_113 < _auto_460_112->count;++_auto_461_113)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_114,(((RogueClassType*)(_auto_460_112->data->objects[_auto_461_113]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      if ((((RogueType__has_object_references( type_114 ))) && !(((RogueType__is_aspect( type_114 ))))))
      {
        if (((RogueType__is_reference_array( type_114 ))))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[656] );
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_17,(type_114->cpp_name));
          if ((type_114->is_array && ((RogueType__is_compound( ROGUE_ARG(type_114->_element_type) )))))
          {
            trace_name_17 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_114->name) ))));
          }
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[52] )))), trace_name_17 )))), Rogue_literal_strings[657] );
        }
      }
      else if (((RogueType__is_class( type_114 ))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[658] );
      }
      else
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[553] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[659] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[630] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[660] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[661] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_462_115,(THIS->type_list));
    RogueInt32 _auto_463_116 = (0);
    for (;_auto_463_116 < _auto_462_115->count;++_auto_463_116)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_117,(((RogueClassType*)(_auto_462_115->data->objects[_auto_463_116]))));
      if (((RogueType__has_global_references( type_117 ))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_464_118,(type_117->global_list));
          RogueInt32 _auto_465_119 = (0);
          for (;_auto_465_119 < _auto_464_118->count;++_auto_465_119)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_120,(((RogueClassProperty*)(_auto_464_118->data->objects[_auto_465_119]))));
            if ((((RogueType__is_reference( ROGUE_ARG(g_120->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(g_120->_type) )))))
            {
              if (((((RogueType__is_reference( ROGUE_ARG(g_120->_type) ))) && !(((RogueType__is_foreign( ROGUE_ARG(g_120->_type) ))))) && !(g_120->_type->is_array)))
              {
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[662] )))), ROGUE_ARG(type_117->cpp_name) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(g_120->cpp_name) );
                RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[633] );
              }
              else
              {
                ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_18,(Rogue_literal_strings[63]));
                if (g_120->_type->is_array)
                {
                  if ((((RogueType__is_compound( ROGUE_ARG(g_120->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_120->_type->_element_type) )))))
                  {
                    trace_class_name_18 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_120->_type->name) ))));
                  }
                  else
                  {
                    trace_class_name_18 = ((RogueString*)Rogue_literal_strings[542]);
                  }
                }
                else
                {
                  trace_class_name_18 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_120->_type->cpp_name) ))));
                }
                RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[635] );
                if (!(((RogueType__is_reference( ROGUE_ARG(g_120->_type) )))))
                {
                  RogueCPPWriter__print__Character( writer_1, (RogueCharacter)'&' );
                }
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[52] )))), ROGUE_ARG(type_117->cpp_name) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(g_120->cpp_name) );
                RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[636] )))), trace_class_name_18 )))), Rogue_literal_strings[637] );
              }
            }
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[663] );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[664] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  RogueInt32 table_index_19 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_466_121,(THIS->type_list));
    RogueInt32 _auto_467_122 = (0);
    for (;_auto_467_122 < _auto_466_121->count;++_auto_467_122)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_123,(((RogueClassType*)(_auto_466_121->data->objects[_auto_467_122]))));
      if (!(((RogueType__omit_output( type_123 )))))
      {
        table_index_19 = ((RogueInt32)((RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( type_123, table_index_19, writer_1 ))));
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  ROGUE_DEF_LOCAL_REF(RogueInt32_List*,info_20,(((RogueInt32_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueInt32_List*,ROGUE_CREATE_OBJECT(Int32_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_468_124,(THIS->type_list));
    RogueInt32 _auto_469_125 = (0);
    for (;_auto_469_125 < _auto_468_124->count;++_auto_469_125)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_126,(((RogueClassType*)(_auto_468_124->data->objects[_auto_469_125]))));
      RogueType__collect_type_info__Int32_List( type_126, info_20 );
    }
  }
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[669] )))), ROGUE_ARG(info_20->count) )))), Rogue_literal_strings[670] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[671] );
  first_12 = ((RogueLogical)true);
  RogueInt32 items_21 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_470_127,(info_20));
    RogueInt32 _auto_471_128 = (0);
    for (;_auto_471_128 < _auto_470_127->count;++_auto_471_128)
    {
      RogueInt32 n_129 = (_auto_470_127->data->integers[_auto_471_128]);
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__print_literal_character__Character_Logical( writer_1, (RogueCharacter)',', false );
      }
      ++items_21;
      if (items_21 == 25)
      {
        RogueCPPWriter__println( writer_1 );
        items_21 = ((RogueInt32)0);
      }
      RogueCPPWriter__print__Int32( writer_1, n_129 );
    }
  }
  if (items_21 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[679] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_472_130,(THIS->type_list));
    RogueInt32 _auto_473_131 = (0);
    for (;_auto_473_131 < _auto_472_130->count;++_auto_473_131)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_132,(((RogueClassType*)(_auto_472_130->data->objects[_auto_473_131]))));
      if ((((RogueType__is_class( type_132 ))) || ((RogueType__is_compound( type_132 )))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_474_133,(type_132->global_list));
          RogueInt32 _auto_475_134 = (0);
          for (;_auto_475_134 < _auto_474_133->count;++_auto_475_134)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_135,(((RogueClassProperty*)(_auto_474_133->data->objects[_auto_475_134]))));
            if (first_12)
            {
              first_12 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
            }
            if (((RogueProperty__is_native( p_135 ))))
            {
              RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[553] );
            }
            else
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[680] )))), ROGUE_ARG(p_135->type_context->cpp_name) )))), Rogue_literal_strings[463] );
            }
            RogueCPPWriter__print__String( writer_1, ROGUE_ARG(p_135->cpp_name) );
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[681] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_476_136,(THIS->type_list));
    RogueInt32 _auto_477_137 = (0);
    for (;_auto_477_137 < _auto_476_136->count;++_auto_477_137)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_138,(((RogueClassType*)(_auto_476_136->data->objects[_auto_477_137]))));
      if ((((RogueType__is_class( type_138 ))) || ((RogueType__is_compound( type_138 )))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_478_139,(type_138->property_list));
          RogueInt32 _auto_479_140 = (0);
          for (;_auto_479_140 < _auto_478_139->count;++_auto_479_140)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_141,(((RogueClassProperty*)(_auto_478_139->data->objects[_auto_479_140]))));
            if (first_12)
            {
              first_12 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
            }
            if (((RogueProperty__is_native( p_141 ))))
            {
              RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[553] );
            }
            else
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[682] )))), ROGUE_ARG(type_138->cpp_class_name) )))), Rogue_literal_strings[683] )))), ROGUE_ARG(p_141->cpp_name) );
            }
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[684] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[670] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_480_142,(THIS->type_list));
    RogueInt32 _auto_481_143 = (0);
    for (;_auto_481_143 < _auto_480_142->count;++_auto_481_143)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_144,(((RogueClassType*)(_auto_480_142->data->objects[_auto_481_143]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[685] )))), ROGUE_ARG(type_144->cpp_class_name) )))), Rogue_literal_strings[32] );
    }
  }
  if (items_21 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[686] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[670] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  first_12 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_482_145,(THIS->type_list));
    RogueInt32 _auto_483_146 = (0);
    for (;_auto_483_146 < _auto_482_145->count;++_auto_483_146)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_147,(((RogueClassType*)(_auto_482_145->data->objects[_auto_483_146]))));
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[5] );
      }
      RogueCPPWriter__print__Int32( writer_1, ROGUE_ARG(type_147->attributes->flags) );
    }
  }
  if (items_21 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[687] )))), 1 )))), Rogue_literal_strings[241] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[688] )))), 1 )))), Rogue_literal_strings[689] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[690] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[241] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[691] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[689] );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_484_148,(THIS->type_list));
    RogueInt32 _auto_485_149 = (0);
    for (;_auto_485_149 < _auto_484_148->count;++_auto_485_149)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_150,(((RogueClassType*)(_auto_484_148->data->objects[_auto_485_149]))));
      if ((!(((RogueType__omit_output( type_150 )))) || (((RogueType__is_native( type_150 ))) && !(type_150->is_array))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[692] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_150->cpp_name) )))), Rogue_literal_strings[241] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[693] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[241] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[694] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[689] );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_486_151,(THIS->type_list));
    RogueInt32 _auto_487_152 = (0);
    for (;_auto_487_152 < _auto_486_151->count;++_auto_487_152)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_153,(((RogueClassType*)(_auto_486_151->data->objects[_auto_487_152]))));
      RogueType__print_global_method_definitions__CPPWriter( type_153, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_488_154,(THIS->type_list));
    RogueInt32 _auto_489_155 = (0);
    for (;_auto_489_155 < _auto_488_154->count;++_auto_489_155)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_156,(((RogueClassType*)(_auto_488_154->data->objects[_auto_489_155]))));
      RogueType__print_method_definitions__CPPWriter( type_156, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[709] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[710] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_490_157,(THIS->type_list));
    RogueInt32 _auto_491_158 = (0);
    for (;_auto_491_158 < _auto_490_157->count;++_auto_491_158)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_159,(((RogueClassType*)(_auto_490_157->data->objects[_auto_491_158]))));
      if ((!(((RogueType__omit_output( type_159 )))) || (((RogueType__is_native( type_159 ))) && !(type_159->is_array))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[544] )))), ROGUE_ARG(type_159->cpp_name) )))), Rogue_literal_strings[711] )))), ROGUE_ARG(type_159->index) )))), Rogue_literal_strings[712] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_492_160,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list));
    RogueInt32 i_161 = (0);
    for (;i_161 < _auto_492_160->count;++i_161)
    {
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[713] )))), i_161 );
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[714] );
      ROGUE_DEF_LOCAL_REF(RogueString*,st_22,(((RogueString*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->data->objects[i_161]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,encoded_count_23,(((RogueCPPWriter__print_literal_string__String( writer_1, st_22 )))));
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[582] )))), ROGUE_ARG(st_22->byte_count) );
      RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[715] );
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[716] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[232] );
  writer_1->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_493_162,(THIS->type_list));
    RogueInt32 _auto_494_163 = (0);
    for (;_auto_494_163 < _auto_493_162->count;++_auto_494_163)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_164,(((RogueClassType*)(_auto_493_162->data->objects[_auto_494_163]))));
      if (type_164->is_used)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_24,(((RogueType__find_global_method__String( type_164, Rogue_literal_strings[448] )))));
        if ((!!(m_24) && ((void*)m_24->type_context) == ((void*)type_164)))
        {
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_24->cpp_name) )))), Rogue_literal_strings[717] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[718] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[719] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_495_165,(THIS->type_list));
    RogueInt32 _auto_496_166 = (0);
    for (;_auto_496_166 < _auto_495_165->count;++_auto_496_166)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_167,(((RogueClassType*)(_auto_495_165->data->objects[_auto_496_166]))));
      if ((!(((RogueType__omit_output( type_167 )))) && ((RogueType__is_singleton( type_167 )))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[720] )))), ROGUE_ARG(type_167->cpp_name) )))), Rogue_literal_strings[625] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[721] );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[141] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[722] );
  if (((RogueProgram__is_type_defined__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[723] ))))
  {
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[724] );
  }
  else
  {
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[725] );
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[726] );
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->generate_main)
  {
    RogueCPPWriter__println( writer_1 );
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[727] );
  }
  RogueCPPWriter__close( writer_1 );
}

void RogueProgram__print_property_trace_code__Type_CPPWriter( RogueClassProgram* THIS, RogueClassType* type_0, RogueClassCPPWriter* writer_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_497_3,(type_0->property_list));
    RogueInt32 _auto_498_4 = (0);
    for (;_auto_498_4 < _auto_497_3->count;++_auto_498_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_497_3->data->objects[_auto_498_4]))));
      if ((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(p_5->_type) )))))
      {
        if (((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) && !(((RogueType__is_foreign( ROGUE_ARG(p_5->_type) ))))) && !(p_5->_type->is_array)))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[631] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[633] );
        }
        else if (((RogueType__is_compound( ROGUE_ARG(p_5->_type) ))))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[52] )))), ROGUE_ARG(p_5->_type->cpp_name) )))), Rogue_literal_strings[634] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[622] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[625] );
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_2,(Rogue_literal_strings[63]));
          if (p_5->_type->is_array)
          {
            if ((((RogueType__is_compound( ROGUE_ARG(p_5->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_5->_type->_element_type) )))))
            {
              trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->name) ))));
            }
            else
            {
              trace_class_name_2 = ((RogueString*)Rogue_literal_strings[542]);
            }
          }
          else
          {
            trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->cpp_name) ))));
          }
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[635] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[622] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[636] )))), trace_class_name_2 )))), Rogue_literal_strings[637] );
        }
      }
    }
  }
}

RogueTemplate_List* RogueTemplate_List__init_object( RogueTemplate_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__init( RogueTemplate_List* THIS )
{
  RogueTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueTemplate_List__to_String( RogueTemplate_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_2253_2,(THIS));
    RogueInt32 _auto_2254_3 = (0);
    for (;_auto_2254_3 < _auto_2253_2->count;++_auto_2254_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,value_4,(((RogueClassTemplate*)(_auto_2253_2->data->objects[_auto_2254_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTemplate_List__type_name( RogueTemplate_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[863]);
}

RogueTemplate_List* RogueTemplate_List__init__Int32( RogueTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTemplate*), true );
  }
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__add__Template( RogueTemplate_List* THIS, RogueClassTemplate* value_0 )
{
  ((RogueTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTemplate_List*)(THIS);
}

RogueInt32 RogueTemplate_List__capacity( RogueTemplate_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTemplate_List* RogueTemplate_List__reserve__Int32( RogueTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueArray_Template___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[913]);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init_object( RogueClassTable_String_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init( RogueClassTable_String_Template_* THIS )
{
  RogueTable_String_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueString* RogueTable_String_Template___to_String( RogueClassTable_String_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Template___type_name( RogueClassTable_String_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[798]);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init__Int32( RogueClassTable_String_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Template__List__init__Int32_TableEntry_String_Template_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Template__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Template__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Template_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTableEntry_String_Template_* RogueTable_String_Template___find__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_2,(((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Template_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Template_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Template_*)(((RogueClassTableEntry_String_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_String_Template___get__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_1,(((RogueTable_String_Template___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_String_Template_* RogueTable_String_Template___set__String_Template( RogueClassTable_String_Template_* THIS, RogueString* key_0, RogueClassTemplate* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_4,(((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Template_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Template_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Template_*)((RogueTableEntry_String_Template___init__String_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Template_*,ROGUE_CREATE_OBJECT(TableEntry_String_Template_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Template___print_to__StringBuilder( RogueClassTable_String_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init_object( RogueTableEntry_String_Template__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init( RogueTableEntry_String_Template__List* THIS )
{
  RogueTableEntry_String_Template__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueString* RogueTableEntry_String_Template__List__to_String( RogueTableEntry_String_Template__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Template__List*,_auto_2294_2,(THIS));
    RogueInt32 _auto_2295_3 = (0);
    for (;_auto_2295_3 < _auto_2294_2->count;++_auto_2295_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,value_4,(((RogueClassTableEntry_String_Template_*)(_auto_2294_2->data->objects[_auto_2295_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Template___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Template__List__type_name( RogueTableEntry_String_Template__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[864]);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init__Int32( RogueTableEntry_String_Template__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Template_*), true );
  }
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init__Int32_TableEntry_String_Template_( RogueTableEntry_String_Template__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Template_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Template_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_262_3 = (initial_capacity_0);
      for (;i_2 <= _auto_262_3;++i_2)
      {
        RogueTableEntry_String_Template__List__add__TableEntry_String_Template_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__add__TableEntry_String_Template_( RogueTableEntry_String_Template__List* THIS, RogueClassTableEntry_String_Template_* value_0 )
{
  ((RogueTableEntry_String_Template__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Template__List__capacity( RogueTableEntry_String_Template__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__reserve__Int32( RogueTableEntry_String_Template__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Template_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Template__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Template_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init_object( RogueClassTableEntry_String_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueString* RogueTableEntry_String_Template___to_String( RogueClassTableEntry_String_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Template___type_name( RogueClassTableEntry_String_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[752]);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init__String_Template_Int32( RogueClassTableEntry_String_Template_* THIS, RogueString* _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Template____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[914]);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init_object( RogueClassTable_String_Augment_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init( RogueClassTable_String_Augment_List_* THIS )
{
  RogueTable_String_Augment_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueString* RogueTable_String_Augment_List___to_String( RogueClassTable_String_Augment_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Augment_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Augment_List___type_name( RogueClassTable_String_Augment_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[800]);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init__Int32( RogueClassTable_String_Augment_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Augment_List__List__init__Int32_TableEntry_String_Augment_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Augment_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Augment_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Augment_List_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueClassTableEntry_String_Augment_List_* RogueTable_String_Augment_List___find__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_2,(((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Augment_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Augment_List_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Augment_List_*)(((RogueClassTableEntry_String_Augment_List_*)(NULL)));
}

RogueAugment_List* RogueTable_String_Augment_List___get__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_1,(((RogueTable_String_Augment_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueAugment_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,default_value_2,0);
    return (RogueAugment_List*)(default_value_2);
  }
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___set__String_Augment_List( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0, RogueAugment_List* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_4,(((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Augment_List_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Augment_List_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Augment_List_*)((RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Augment_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Augment_List_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Augment_List___print_to__StringBuilder( RogueClassTable_String_Augment_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init_object( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueTableEntry_String_Augment_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Augment_List__List__to_String( RogueTableEntry_String_Augment_List__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Augment_List__List*,_auto_2344_2,(THIS));
    RogueInt32 _auto_2345_3 = (0);
    for (;_auto_2345_3 < _auto_2344_2->count;++_auto_2345_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,value_4,(((RogueClassTableEntry_String_Augment_List_*)(_auto_2344_2->data->objects[_auto_2345_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Augment_List___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Augment_List__List__type_name( RogueTableEntry_String_Augment_List__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[866]);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init__Int32( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  }
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init__Int32_TableEntry_String_Augment_List_( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Augment_List_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_272_3 = (initial_capacity_0);
      for (;i_2 <= _auto_272_3;++i_2)
      {
        RogueTableEntry_String_Augment_List__List__add__TableEntry_String_Augment_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__add__TableEntry_String_Augment_List_( RogueTableEntry_String_Augment_List__List* THIS, RogueClassTableEntry_String_Augment_List_* value_0 )
{
  ((RogueTableEntry_String_Augment_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Augment_List__List__capacity( RogueTableEntry_String_Augment_List__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__reserve__Int32( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Augment_List__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Augment_List_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init_object( RogueClassTableEntry_String_Augment_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Augment_List___to_String( RogueClassTableEntry_String_Augment_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Augment_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Augment_List___type_name( RogueClassTableEntry_String_Augment_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[753]);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( RogueClassTableEntry_String_Augment_List_* THIS, RogueString* _key_0, RogueAugment_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueAugment_List* RogueAugment_List__init_object( RogueAugment_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__init( RogueAugment_List* THIS )
{
  RogueAugment_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueAugment_List*)(THIS);
}

RogueString* RogueAugment_List__to_String( RogueAugment_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_2372_2,(THIS));
    RogueInt32 _auto_2373_3 = (0);
    for (;_auto_2373_3 < _auto_2372_2->count;++_auto_2373_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,value_4,(((RogueClassAugment*)(_auto_2372_2->data->objects[_auto_2373_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueAugment_List__type_name( RogueAugment_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[865]);
}

RogueAugment_List* RogueAugment_List__init__Int32( RogueAugment_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassAugment*), true );
  }
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__add__Augment( RogueAugment_List* THIS, RogueClassAugment* value_0 )
{
  ((RogueAugment_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueAugment_List*)(THIS);
}

RogueInt32 RogueAugment_List__capacity( RogueAugment_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueAugment_List* RogueAugment_List__reserve__Int32( RogueAugment_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueAugment_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueAugment_List*)(THIS);
}

RogueClassAugment* RogueAugment__init_object( RogueClassAugment* THIS )
{
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassAugment*)(THIS);
}

RogueString* RogueAugment__type_name( RogueClassAugment* THIS )
{
  return (RogueString*)(Rogue_literal_strings[799]);
}

RogueClassAugment* RogueAugment__init__Token_String( RogueClassAugment* THIS, RogueClassToken* _auto_266_0, RogueString* _auto_267_1 )
{
  THIS->name = _auto_267_1;
  THIS->t = _auto_266_0;
  return (RogueClassAugment*)(THIS);
}

RogueString* RogueArray_Augment___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[915]);
}

RogueString* RogueArray_TableEntry_String_Augment_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[916]);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init_object( RogueClassTable_String_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init( RogueClassTable_String_Type_* THIS )
{
  RogueTable_String_Type___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueString* RogueTable_String_Type___to_String( RogueClassTable_String_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Type___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Type___type_name( RogueClassTable_String_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[801]);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Type__List__init__Int32_TableEntry_String_Type_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Type__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Type__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Type_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassType* RogueTable_String_Type___at__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 index_0 )
{
  return (RogueClassType*)(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString*)(THIS->keys->data->objects[index_0]))) ))));
}

RogueInt32 RogueTable_String_Type___count( RogueClassTable_String_Type_* THIS )
{
  return (RogueInt32)(THIS->keys->count);
}

RogueClassTableEntry_String_Type_* RogueTable_String_Type___find__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_2,(((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Type_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Type_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Type_*)(((RogueClassTableEntry_String_Type_*)(NULL)));
}

RogueClassType* RogueTable_String_Type___get__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_1,(((RogueTable_String_Type___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassType*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_2,0);
    return (RogueClassType*)(default_value_2);
  }
}

RogueClassTable_String_Type_* RogueTable_String_Type___set__String_Type( RogueClassTable_String_Type_* THIS, RogueString* key_0, RogueClassType* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_4,(((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Type_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Type_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Type_*)((RogueTableEntry_String_Type___init__String_Type_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Type_*,ROGUE_CREATE_OBJECT(TableEntry_String_Type_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Type___print_to__StringBuilder( RogueClassTable_String_Type_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init_object( RogueTableEntry_String_Type__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init( RogueTableEntry_String_Type__List* THIS )
{
  RogueTableEntry_String_Type__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueString* RogueTableEntry_String_Type__List__to_String( RogueTableEntry_String_Type__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Type__List*,_auto_2418_2,(THIS));
    RogueInt32 _auto_2419_3 = (0);
    for (;_auto_2419_3 < _auto_2418_2->count;++_auto_2419_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,value_4,(((RogueClassTableEntry_String_Type_*)(_auto_2418_2->data->objects[_auto_2419_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Type___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Type__List__type_name( RogueTableEntry_String_Type__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[867]);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init__Int32( RogueTableEntry_String_Type__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Type_*), true );
  }
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init__Int32_TableEntry_String_Type_( RogueTableEntry_String_Type__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Type_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Type_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_276_3 = (initial_capacity_0);
      for (;i_2 <= _auto_276_3;++i_2)
      {
        RogueTableEntry_String_Type__List__add__TableEntry_String_Type_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__add__TableEntry_String_Type_( RogueTableEntry_String_Type__List* THIS, RogueClassTableEntry_String_Type_* value_0 )
{
  ((RogueTableEntry_String_Type__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Type__List__capacity( RogueTableEntry_String_Type__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__reserve__Int32( RogueTableEntry_String_Type__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Type_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Type__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Type_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init_object( RogueClassTableEntry_String_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueString* RogueTableEntry_String_Type___to_String( RogueClassTableEntry_String_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Type___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Type___type_name( RogueClassTableEntry_String_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[754]);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init__String_Type_Int32( RogueClassTableEntry_String_Type_* THIS, RogueString* _key_0, RogueClassType* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Type____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[917]);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init_object( RogueClassTable_String_Int32_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init( RogueClassTable_String_Int32_* THIS )
{
  RogueTable_String_Int32___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueString* RogueTable_String_Int32___to_String( RogueClassTable_String_Int32_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Int32___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Int32___type_name( RogueClassTable_String_Int32_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[802]);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init__Int32( RogueClassTable_String_Int32_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Int32__List__init__Int32_TableEntry_String_Int32_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Int32__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Int32__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Int32_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTableEntry_String_Int32_* RogueTable_String_Int32___find__String( RogueClassTable_String_Int32_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_2,(((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Int32_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Int32_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Int32_*)(((RogueClassTableEntry_String_Int32_*)(NULL)));
}

RogueInt32 RogueTable_String_Int32___get__String( RogueClassTable_String_Int32_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_1,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueInt32)(entry_1->value);
  }
  else
  {
    RogueInt32 default_value_2 = 0;
    return (RogueInt32)(default_value_2);
  }
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___set__String_Int32( RogueClassTable_String_Int32_* THIS, RogueString* key_0, RogueInt32 value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_4,(((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Int32_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Int32_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Int32_*)((RogueTableEntry_String_Int32___init__String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Int32_*,ROGUE_CREATE_OBJECT(TableEntry_String_Int32_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Int32___print_to__StringBuilder( RogueClassTable_String_Int32_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Int32( buffer_0, ROGUE_ARG(((RogueTable_String_Int32___get__String( ROGUE_ARG(THIS), key_2 )))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init_object( RogueTableEntry_String_Int32__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init( RogueTableEntry_String_Int32__List* THIS )
{
  RogueTableEntry_String_Int32__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueString* RogueTableEntry_String_Int32__List__to_String( RogueTableEntry_String_Int32__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Int32__List*,_auto_2459_2,(THIS));
    RogueInt32 _auto_2460_3 = (0);
    for (;_auto_2460_3 < _auto_2459_2->count;++_auto_2460_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,value_4,(((RogueClassTableEntry_String_Int32_*)(_auto_2459_2->data->objects[_auto_2460_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Int32___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Int32__List__type_name( RogueTableEntry_String_Int32__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[868]);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init__Int32( RogueTableEntry_String_Int32__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Int32_*), true );
  }
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init__Int32_TableEntry_String_Int32_( RogueTableEntry_String_Int32__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Int32_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Int32_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_280_3 = (initial_capacity_0);
      for (;i_2 <= _auto_280_3;++i_2)
      {
        RogueTableEntry_String_Int32__List__add__TableEntry_String_Int32_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__add__TableEntry_String_Int32_( RogueTableEntry_String_Int32__List* THIS, RogueClassTableEntry_String_Int32_* value_0 )
{
  ((RogueTableEntry_String_Int32__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Int32__List__capacity( RogueTableEntry_String_Int32__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__reserve__Int32( RogueTableEntry_String_Int32__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Int32_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Int32__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Int32_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init_object( RogueClassTableEntry_String_Int32_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueString* RogueTableEntry_String_Int32___to_String( RogueClassTableEntry_String_Int32_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Int32___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Int32___type_name( RogueClassTableEntry_String_Int32_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[755]);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init__String_Int32_Int32( RogueClassTableEntry_String_Int32_* THIS, RogueString* _key_0, RogueInt32 _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Int32____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[918]);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init_object( RogueClassTable_String_String_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init( RogueClassTable_String_String_List_* THIS )
{
  RogueTable_String_String_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueString* RogueTable_String_String_List___to_String( RogueClassTable_String_String_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String_List___type_name( RogueClassTable_String_String_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[803]);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init__Int32( RogueClassTable_String_String_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_String_List__List__init__Int32_TableEntry_String_String_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_String_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_String_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_String_List_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueClassTableEntry_String_String_List_* RogueTable_String_String_List___find__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_2,(((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_String_List_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_String_List_*)(((RogueClassTableEntry_String_String_List_*)(NULL)));
}

RogueString_List* RogueTable_String_String_List___get__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_1,(((RogueTable_String_String_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueString_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,default_value_2,0);
    return (RogueString_List*)(default_value_2);
  }
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___set__String_String_List( RogueClassTable_String_String_List_* THIS, RogueString* key_0, RogueString_List* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_4,(((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_String_List_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_String_List_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_String_List_*)((RogueTableEntry_String_String_List___init__String_String_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_List_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String_List___print_to__StringBuilder( RogueClassTable_String_String_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_String_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init_object( RogueTableEntry_String_String_List__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init( RogueTableEntry_String_String_List__List* THIS )
{
  RogueTableEntry_String_String_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_String_List__List__to_String( RogueTableEntry_String_String_List__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_String_List__List*,_auto_2509_2,(THIS));
    RogueInt32 _auto_2510_3 = (0);
    for (;_auto_2510_3 < _auto_2509_2->count;++_auto_2510_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,value_4,(((RogueClassTableEntry_String_String_List_*)(_auto_2509_2->data->objects[_auto_2510_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_String_List___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_String_List__List__type_name( RogueTableEntry_String_String_List__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[869]);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init__Int32( RogueTableEntry_String_String_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_List_*), true );
  }
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init__Int32_TableEntry_String_String_List_( RogueTableEntry_String_String_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_String_List_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_List_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_284_3 = (initial_capacity_0);
      for (;i_2 <= _auto_284_3;++i_2)
      {
        RogueTableEntry_String_String_List__List__add__TableEntry_String_String_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__add__TableEntry_String_String_List_( RogueTableEntry_String_String_List__List* THIS, RogueClassTableEntry_String_String_List_* value_0 )
{
  ((RogueTableEntry_String_String_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_String_List__List__capacity( RogueTableEntry_String_String_List__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__reserve__Int32( RogueTableEntry_String_String_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_String_List__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_List_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init_object( RogueClassTableEntry_String_String_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueString* RogueTableEntry_String_String_List___to_String( RogueClassTableEntry_String_String_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_String_List___type_name( RogueClassTableEntry_String_String_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[756]);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init__String_String_List_Int32( RogueClassTableEntry_String_String_List_* THIS, RogueString* _key_0, RogueString_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_String_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[919]);
}

RogueClassError* RogueError__init_object( RogueClassError* THIS )
{
  RogueException__init_object( ROGUE_ARG(((RogueClassException*)THIS)) );
  return (RogueClassError*)(THIS);
}

RogueString* RogueError__type_name( RogueClassError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1286]);
}

RogueClassRogueError* RogueRogueError__init_object( RogueClassRogueError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassRogueError*)(THIS);
}

RogueString* RogueRogueError__to_String( RogueClassRogueError* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,m_1,(((RogueString_List__joined__String( ROGUE_ARG(((RogueString__word_wrapped__Int32_String( ROGUE_ARG(THIS->message), 79, Rogue_literal_strings[5] )))), Rogue_literal_strings[6] )))));
  if (!!(THIS->filepath))
  {
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[7] );
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[8] )))), ROGUE_ARG((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) ))) );
    RogueStringBuilder__println__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->line) )))), Rogue_literal_strings[11] )))), ROGUE_ARG(THIS->column) );
    RogueStringBuilder__println( builder_0 );
    RogueStringBuilder__println__String( builder_0, m_1 );
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[7] );
  }
  else
  {
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[7] );
    RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[12] );
    RogueStringBuilder__println( builder_0 );
    RogueStringBuilder__println__String( builder_0, m_1 );
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[7] );
  }
  return (RogueString*)(((RogueStringBuilder__to_String( builder_0 ))));
}

RogueString* RogueRogueError__type_name( RogueClassRogueError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1296]);
}

RogueClassRogueError* RogueRogueError__init__String_String_Int32_Int32( RogueClassRogueError* THIS, RogueString* _auto_291_0, RogueString* _auto_292_1, RogueInt32 _auto_293_2, RogueInt32 _auto_294_3 )
{
  THIS->column = _auto_294_3;
  THIS->line = _auto_293_2;
  THIS->filepath = _auto_292_1;
  THIS->message = _auto_291_0;
  return (RogueClassRogueError*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init_object( RogueClassCmdAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAccess*)(THIS);
}

RogueString* RogueCmdAccess__type_name( RogueClassCmdAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[950]);
}

RogueClassCmd* RogueCmdAccess__clone__CloneArgs( RogueClassCmdAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,result_1,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))) )))));
  if (!!(THIS->named_args))
  {
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2537_3,(THIS->named_args));
      RogueInt32 _auto_2538_4 = (0);
      for (;_auto_2538_4 < _auto_2537_3->count;++_auto_2538_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_5,(((RogueClassCmdNamedArg*)(_auto_2537_3->data->objects[_auto_2538_4]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_5, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_2,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_2))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_access__CmdAccess( macro_args_2, result_1 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdAccess__dispatch__Visitor( RogueClassCmdAccess* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAccess( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdAccess__implicit_type__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
  if ((!(!!(result_1)) || !(((RogueType__is_routine( result_1 ))))))
  {
    return (RogueClassType*)(result_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
  if (!!(template_2))
  {
    if (!!(template_2->_routine_return_type))
    {
      return (RogueClassType*)(template_2->_routine_return_type);
    }
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1005] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1006] )))) )))) ))));
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassCmd* RogueCmdAccess__resolve__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->args))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  }
  if (!!(THIS->context))
  {
    if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' ))))
    {
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_1,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if (!!(v_1))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      return (RogueClassCmd*)(((RogueCmdReadLocal__resolve__Scope( ROGUE_ARG(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), v_1 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,new_type_2,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(((RogueString__after_any__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' )))) )))));
    if (!!(new_type_2))
    {
      RogueType__organize__Scope( new_type_2, scope_0 );
      if (((RogueType__is_routine( new_type_2 ))))
      {
        if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,m_call_list_3,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(new_type_2->global_method_lookup_by_name), Rogue_literal_strings[301] )))));
          if ((!!(m_call_list_3) && m_call_list_3->count == 1))
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_4,(((RogueClassMethod*)(m_call_list_3->data->objects[0]))));
            ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_5,(((RogueFnParam_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))), ROGUE_ARG(m_call_4->parameters->count) )))));
            ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
            {
              ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2545_24,(m_call_4->parameters));
              RogueInt32 _auto_2546_25 = (0);
              for (;_auto_2546_25 < _auto_2545_24->count;++_auto_2546_25)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_26,(((RogueClassLocal*)(_auto_2545_24->data->objects[_auto_2546_25]))));
                RogueFnParam_List__add__FnParam( parameters_5, ROGUE_ARG(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(param_26->name) )))) );
                ((RogueFnParam_List__last( parameters_5 )))->_type = param_26->_type;
                RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(param_26->name) )))))) );
              }
            }
            ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_7,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), 1 )))));
            if (!!(m_call_4->_return_type))
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name), args_6 )))))) )))))) );
            }
            else
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name), args_6 )))))) );
            }
            return (RogueClassCmd*)(((RogueCmdCreateFunction__resolve__Scope( ROGUE_ARG(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), parameters_5, ROGUE_ARG(m_call_4->_return_type), ROGUE_ARG(((RogueFnArg_List*)(NULL))), statements_7, false )))), scope_0 ))));
          }
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_8,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), new_type_2 )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))));
          cmd_8->named_args = THIS->named_args;
          return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( cmd_8, scope_0 ))));
        }
      }
      if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
      {
        if (!!(THIS->args))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[480] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueString*,type_name_9,(((RogueString__from__Int32( ROGUE_ARG(THIS->name), 1 )))));
        RogueType__make_requisite( ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), type_name_9 )))), scope_0 )))) );
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[446] )))))), Rogue_literal_strings[445], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), type_name_9, 0 )))))) )))) )))), scope_0 ))));
      }
      if (((void*)THIS->args) == ((void*)NULL))
      {
        if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)']' ))))
        {
          THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
        }
        else
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), new_type_2 ))))));
        }
      }
      if (new_type_2->is_array)
      {
        return (RogueClassCmd*)(((RogueCmdCreateArray__resolve__Scope( ROGUE_ARG(((RogueCmdCreateArray__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), new_type_2, ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      if (((RogueType__is_compound( new_type_2 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_10,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[401], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, false )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdCall*,cmd_call_11,(((RogueClassCmdCall*)(RogueObject_as(cmd_10,RogueTypeCmdCall)))));
        if ((!!(cmd_call_11) && ((RogueMethod__is_generated( ROGUE_ARG(cmd_call_11->method_info) )))))
        {
          return (RogueClassCmd*)(((RogueCmdCreateCompound__resolve__Scope( ROGUE_ARG(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), new_type_2, ROGUE_ARG(cmd_call_11->args) )))), scope_0 ))));
        }
        else if (!!(cmd_call_11))
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_call_11)));
        }
        else
        {
          return (RogueClassCmd*)(cmd_10);
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateObject*,cmd_create_12,(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), new_type_2 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_new_13,(((RogueClassCmd*)(cmd_create_12))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_call_14,0);
      if (((RogueType__is_native( new_type_2 ))))
      {
        cmd_call_14 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name) )))))), Rogue_literal_strings[401], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, false ))));
      }
      else
      {
        cmd_call_14 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_new_13, Rogue_literal_strings[388], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, true ))));
      }
      if (!!(cmd_call_14))
      {
        return (RogueClassCmd*)((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, cmd_call_14, new_type_2, scope_0 ))), scope_0 )));
      }
      else
      {
        return (RogueClassCmd*)((call_ROGUEM120( 34, cmd_new_13, scope_0 )));
      }
    }
    else if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' ))))
    {
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_15,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), false, false )))));
    if (!!(result_15))
    {
      RogueCmdAccess__check_for_recursive_getter__Scope( ROGUE_ARG(THIS), scope_0 );
      return (RogueClassCmd*)(result_15);
    }
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_16,(((RogueType__find_global__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) )))));
    if (!!(p_16))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      else
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_16 ))))));
      }
    }
    p_16 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) ))));
    if (!!(p_16))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[506] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[507] )))) )))) ))));
      }
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_16 ))))));
    }
    if (!(!!(THIS->args)))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_17,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
      if ((!(!!(def_17)) && !!(scope_0->_implicit_type)))
      {
        def_17 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
      }
      if (!!(def_17))
      {
        return (RogueClassCmd*)((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(def_17->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 )));
      }
      p_16 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
      if (!!(p_16))
      {
        return (RogueClassCmd*)(((RogueCmdReadProperty__resolve__Scope( ROGUE_ARG(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_16 )))), scope_0 ))));
      }
    }
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), true, false ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_18,((call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_18, scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_19,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_18, ROGUE_ARG(THIS), false, false )))));
  if (!!(result_19))
  {
    return (RogueClassCmd*)(result_19);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_20,(((RogueType__find_global__String( context_type_18, ROGUE_ARG(THIS->name) )))));
  if (!!(p_20))
  {
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    call_ROGUEM128( 28, ROGUE_ARG(THIS->context) );
    return (RogueClassCmd*)(((RogueCmdReadGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_20 )))), scope_0 ))));
  }
  p_20 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_18, ROGUE_ARG(THIS->name) ))));
  if (!!(p_20))
  {
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[301], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_20 ))))));
  }
  if (!(!!(THIS->args)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_21,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_18->definition_lookup), ROGUE_ARG(THIS->name) )))));
    if (!!(def_21))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,old_implicit_type_22,(((RogueScope__set_implicit_type__Type( scope_0, context_type_18 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,def_result_23,((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(def_21->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))));
      RogueScope__set_implicit_type__Type( scope_0, old_implicit_type_22 );
      return (RogueClassCmd*)(def_result_23);
    }
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_18, ROGUE_ARG(THIS), true, false ))));
}

RogueClassCmd* RogueCmdAccess__resolve_assignment__Scope_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  if (!!(THIS->args))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1078] ))));
  }
  RogueLogical explicit_context_2 = (!!(THIS->context));
  RogueCharacter _auto_295_4;
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_3,(((((_auto_295_4=RogueString_character_at(THIS->name,0))==((RogueCharacter)'@'))) ? (((RogueString*)(NULL))) : ((RogueString__operatorPLUS__String( Rogue_literal_strings[457], ROGUE_ARG(THIS->name) ))))));
  RogueLogical context_was_null_5 = (((void*)THIS->context) == ((void*)NULL));
  if (((void*)THIS->context) == ((void*)NULL))
  {
    if (!!(setter_name_3))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, false )))));
      if (!!(setter_6))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(scope_0->this_method->name), setter_name_3 ))))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1079], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1080] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1081] )))) ))));
        }
        return (RogueClassCmd*)(setter_6);
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_7,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if ((!!(as_type_7) && ((RogueType__is_singleton( as_type_7 )))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), as_type_7, new_value_1 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if (!!(v_8))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), v_8, new_value_1 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_9,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
    if ((!(!!(def_9)) && !!(scope_0->_implicit_type)))
    {
      def_9 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
    }
    if (!!(def_9))
    {
      return (RogueClassCmd*)((call_ROGUEM130( 35, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(def_9->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueType__find_global__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) )))));
    if (!!(p_10))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_10, new_value_1 )))), scope_0 ))));
    }
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      p_10 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) ))));
      if (!!(p_10))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[506] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[507] )))) )))) ))));
      }
    }
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
  }
  else
  {
    THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_11,((call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_11, scope_0 );
  if (!!(setter_name_3))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_12,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, false )))));
    if (!!(setter_12))
    {
      return (RogueClassCmd*)(setter_12);
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueType__find_global__String( context_type_11, ROGUE_ARG(THIS->name) )))));
  if (!!(p_13))
  {
    call_ROGUEM128( 28, ROGUE_ARG(THIS->context) );
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_13, new_value_1 )))), scope_0 ))));
  }
  p_13 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_11, ROGUE_ARG(THIS->name) ))));
  if (!!(p_13))
  {
    if ((((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))) && !(explicit_context_2)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[506] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[507] )))) )))) ))));
    }
    else
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_14,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_11->definition_lookup), ROGUE_ARG(THIS->name) )))));
  if ((!(!!(def_14)) && !!(scope_0->_implicit_type)))
  {
    def_14 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  if (!!(def_14))
  {
    return (RogueClassCmd*)((call_ROGUEM130( 35, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(def_14->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
  }
  if (!!(setter_name_3))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_15,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), true, false )))));
    if (!!(setter_15))
    {
      return (RogueClassCmd*)(setter_15);
    }
  }
  if ((context_was_null_5 && ((void*)scope_0->_this_type) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global)))
  {
    p_13 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
    if (!!(p_13))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1082] )))) )))) ))));
}

RogueClassCmd* RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_3,0);
  if (!!(THIS->context))
  {
    THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
    context_type_3 = ((RogueClassType*)(call_ROGUEM129( 31, ROGUE_ARG(THIS->context) )));
  }
  else
  {
    if (((void*)THIS->args) == ((void*)NULL))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
      if (!!(v_4))
      {
        if (!!(THIS->args))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1086] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1087] )))) )))) ))));
        }
        return (RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), v_4, op_1, new_value_2 )))), scope_0 ))));
      }
    }
    context_type_3 = ((RogueClassType*)scope_0->_this_type);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_5,0);
  if (RogueString_character_at(THIS->name,0) != (RogueCharacter)'@')
  {
    setter_name_5 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[457], ROGUE_ARG(THIS->name) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), false, false )))));
    if (!!(setter_6))
    {
      return (RogueClassCmd*)((call_ROGUEM120( 34, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueType__find_global__String( context_type_3, ROGUE_ARG(THIS->name) )))));
  if (!!(p_7))
  {
    if (!!(THIS->context))
    {
      call_ROGUEM128( 28, ROGUE_ARG(THIS->context) );
    }
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  p_7 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_3, ROGUE_ARG(THIS->name) ))));
  if (!!(p_7))
  {
    if (!(!!(THIS->context)))
    {
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), context_type_3 )))));
    }
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[506] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[507] )))) )))) ))));
    }
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_8,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_3->definition_lookup), ROGUE_ARG(THIS->name) )))));
  if ((!(!!(def_8)) && !!(scope_0->_implicit_type)))
  {
    def_8 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  if (!!(def_8))
  {
    return (RogueClassCmd*)((call_ROGUEM132( 37, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(def_8->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, op_1, new_value_2 )));
  }
  if (!!(setter_name_5))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_9,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), true, false )))));
    if (!!(setter_9))
    {
      return (RogueClassCmd*)((call_ROGUEM120( 34, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1082] )))) )))) ))));
}

RogueClassType* Rogue_CmdAccess__type( RogueClassCmdAccess* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassRogueError*,err_0,(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1091] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1092] )))) )))) )))));
  ROGUE_THROW(err_0);
}

void RogueCmdAccess__write_cpp__CPPWriter_Logical( RogueClassCmdAccess* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1094] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[378] )))) )))) ))));
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_304_0, RogueString* _auto_305_1 )
{
  THIS->name = _auto_305_1;
  THIS->t = _auto_304_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_306_0, RogueString* _auto_307_1, RogueClassCmdArgs* _auto_308_2 )
{
  THIS->args = _auto_308_2;
  THIS->name = _auto_307_1;
  THIS->t = _auto_306_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_309_0, RogueString* _auto_310_1, RogueClassCmdArgs* _auto_311_2, RogueCmdNamedArg_List* _auto_312_3 )
{
  THIS->named_args = _auto_312_3;
  THIS->args = _auto_311_2;
  THIS->name = _auto_310_1;
  THIS->t = _auto_309_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_313_0, RogueClassCmd* _auto_314_1, RogueString* _auto_315_2 )
{
  THIS->name = _auto_315_2;
  THIS->context = _auto_314_1;
  THIS->t = _auto_313_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_316_0, RogueClassCmd* _auto_317_1, RogueString* _auto_318_2, RogueClassCmdArgs* _auto_319_3 )
{
  THIS->args = _auto_319_3;
  THIS->name = _auto_318_2;
  THIS->context = _auto_317_1;
  THIS->t = _auto_316_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_320_0, RogueClassCmd* _auto_321_1, RogueString* _auto_322_2, RogueClassCmdArgs* _auto_323_3, RogueCmdNamedArg_List* _auto_324_4 )
{
  THIS->named_args = _auto_324_4;
  THIS->args = _auto_323_3;
  THIS->name = _auto_322_2;
  THIS->context = _auto_321_1;
  THIS->t = _auto_320_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_Cmd( RogueClassCmdAccess* THIS, RogueClassToken* _auto_325_0, RogueClassCmd* _auto_326_1, RogueString* _auto_327_2, RogueClassCmd* arg_3 )
{
  THIS->name = _auto_327_2;
  THIS->context = _auto_326_1;
  THIS->t = _auto_325_0;
  THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), arg_3 );
  return (RogueClassCmdAccess*)(THIS);
}

void RogueCmdAccess__check_for_recursive_getter__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,this_type_1,(scope_0->_this_type));
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(THIS->name), ROGUE_ARG(scope_0->this_method->name) ))) != 0)
  {
    return;
  }
  if ((!!(THIS->args) && THIS->args->count > 0))
  {
    return;
  }
  if (!((!!(((RogueType__find_property__String( this_type_1, ROGUE_ARG(THIS->name) )))) || !!(((RogueType__find_global__String( this_type_1, ROGUE_ARG(THIS->name) )))))))
  {
    return;
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[503], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[504] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[505] )))) ))));
}

RogueClassCmd* RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_3,0);
  {
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_ampersand_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(THIS->name), new_value_2 ))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_minus_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_plus_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_slash_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_tilde_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_times_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_vertical_bar_equals))) ))))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else
    {
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1088] )))) )))) );
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1089] ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdAccess__clone__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), cmd_3 ))))));
}

RogueClassCmdArgs* RogueCmdArgs__init_object( RogueClassCmdArgs* THIS )
{
  RogueCmd_List__init_object( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init( RogueClassCmdArgs* THIS )
{
  RogueCmd_List__init( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdArgs*)(THIS);
}

RogueString* RogueCmdArgs__type_name( RogueClassCmdArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1162]);
}

RogueClassCmdArgs* RogueCmdArgs__init__Int32( RogueClassCmdArgs* THIS, RogueInt32 initial_capacity_0 )
{
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg_0 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg_0 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1, RogueClassCmd* arg3_2 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 )))), arg3_2 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__clone__CloneArgs( RogueClassCmdArgs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,result_1,(((RogueCmdArgs__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2547_2,(THIS));
    RogueInt32 _auto_2548_3 = (0);
    for (;_auto_2548_3 < _auto_2547_2->count;++_auto_2548_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_2547_2->data->objects[_auto_2548_3]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), ROGUE_ARG((call_ROGUEM122( 13, cmd_4, clone_args_0 ))) );
    }
  }
  return (RogueClassCmdArgs*)(result_1);
}

void RogueCmdArgs__dispatch__Visitor( RogueClassCmdArgs* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdArgs( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdArgs__resolve__Scope( RogueClassCmdArgs* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2549_2,(THIS));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_2549_2->count;++i_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,((call_ROGUEM120( 34, ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[i_3]))), scope_0 ))));
      THIS->data->objects[i_3] = arg_1;
      RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, arg_1 ))), scope_0 );
    }
  }
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init_object( RogueCmdNamedArg_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init( RogueCmdNamedArg_List* THIS )
{
  RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueString* RogueCmdNamedArg_List__to_String( RogueCmdNamedArg_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2550_2,(THIS));
    RogueInt32 _auto_2551_3 = (0);
    for (;_auto_2551_3 < _auto_2550_2->count;++_auto_2551_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueClassCmdNamedArg*)(_auto_2550_2->data->objects[_auto_2551_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdNamedArg_List__type_name( RogueCmdNamedArg_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[870]);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdNamedArg*), true );
  }
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__add__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  ((RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueInt32 RogueCmdNamedArg_List__capacity( RogueCmdNamedArg_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

void RogueCmdNamedArg_List__discard_from__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
}

RogueOptionalInt32 RogueCmdNamedArg_List__locate__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2571_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_2571_1->count;++i_2)
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassCmdNamedArg*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueClassListRebuilder_CmdNamedArg_* RogueCmdNamedArg_List__rebuilder( RogueCmdNamedArg_List* THIS )
{
  return (RogueClassListRebuilder_CmdNamedArg_*)(((RogueListRebuilder_CmdNamedArg___init__CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRebuilder_CmdNamedArg_*,ROGUE_CREATE_OBJECT(ListRebuilder_CmdNamedArg_))), ROGUE_ARG(THIS) ))));
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__reserve__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueCmdNamedArg_List__locate__CmdNamedArg( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_2,0);
    return (RogueClassCmdNamedArg*)(zero_value_2);
  }
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_RETURNSLogical* fn_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,result_1,(((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_CmdNamedArg_*,rewriter_2,(((RogueCmdNamedArg_List__rebuilder( ROGUE_ARG(THIS) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_CmdNamedArg_*,_auto_2577_3,(rewriter_2));
    while (((RogueListRebuilder_CmdNamedArg___has_another( _auto_2577_3 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueListRebuilder_CmdNamedArg___read( _auto_2577_3 )))));
      if ((call_ROGUEM1163( 10, fn_0, value_4 )))
      {
        RogueCmdNamedArg_List__add__CmdNamedArg( result_1, value_4 );
      }
      else
      {
        RogueListRebuilder_CmdNamedArg___write__CmdNamedArg( rewriter_2, value_4 );
      }
    }
  }
  return (RogueCmdNamedArg_List*)(result_1);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove_at__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,result_1,(((RogueClassCmdNamedArg*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassCmdNamedArg*)(result_1);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_0 )
{
  return (RogueCmdNamedArg_List*)((RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( ROGUE_ARG(THIS), compare_fn_0 )));
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init_object( RogueClassCmdNamedArg* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueString* RogueCmdNamedArg__type_name( RogueClassCmdNamedArg* THIS )
{
  return (RogueString*)(Rogue_literal_strings[949]);
}

RogueClassCmdNamedArg* RogueCmdNamedArg__clone__CloneArgs( RogueClassCmdNamedArg* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->is_negative) ))));
}

void RogueCmdNamedArg__dispatch__Visitor( RogueClassCmdNamedArg* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdNamedArg( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init__Token_String_Cmd_Logical( RogueClassCmdNamedArg* THIS, RogueClassToken* _auto_296_0, RogueString* _auto_297_1, RogueClassCmd* _auto_298_2, RogueLogical _auto_299_3 )
{
  THIS->is_negative = _auto_299_3;
  THIS->value = _auto_298_2;
  THIS->name = _auto_297_1;
  THIS->t = _auto_296_0;
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueClassCmd* RogueCmdNamedArg__to_value( RogueClassCmdNamedArg* THIS )
{
  if (!!(THIS->value))
  {
    if (THIS->is_negative)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[491] ))));
    }
    return (RogueClassCmd*)(THIS->value);
  }
  else if (THIS->is_negative)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), true ))))));
  }
}

RogueString* RogueArray_CmdNamedArg___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[920]);
}

RogueClassCmdReturn* RogueCmdReturn__init_object( RogueClassCmdReturn* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdReturn*)(THIS);
}

RogueString* RogueCmdReturn__type_name( RogueClassCmdReturn* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1173]);
}

RogueClassCmd* RogueCmdReturn__clone__CloneArgs( RogueClassCmdReturn* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__create_return__Token_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))))));
  }
}

void RogueCmdReturn__dispatch__Visitor( RogueClassCmdReturn* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReturn( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReturn__resolve__Scope( RogueClassCmdReturn* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->value))
  {
    if (!(!!(scope_0->this_method->_return_type)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(scope_0->this_method->signature) )))) )))), Rogue_literal_strings[473] )))) )))) ))));
    }
    THIS->value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->value), scope_0 ))), ROGUE_ARG(scope_0->this_method->_return_type), scope_0 ))), scope_0 ));
  }
  else if (((RogueMethod__is_initializer( ROGUE_ARG(scope_0->this_method) ))))
  {
    THIS->value = ((RogueCmdLiteralThis__resolve__Scope( ROGUE_ARG(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->this_method->type_context) )))))), scope_0 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReturn__type( RogueClassCmdReturn* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->value) )));
}

void RogueCmdReturn__write_cpp__CPPWriter_Logical( RogueClassCmdReturn* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->value))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1095] )))), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->value) ))) )))), Rogue_literal_strings[1096] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[175] );
  }
}

RogueClassCmdReturn* RogueCmdReturn__init__Token_Cmd( RogueClassCmdReturn* THIS, RogueClassToken* _auto_331_0, RogueClassCmd* _auto_332_1 )
{
  THIS->value = _auto_332_1;
  THIS->t = _auto_331_0;
  return (RogueClassCmdReturn*)(THIS);
}

RogueClassCmdStatement* RogueCmdStatement__init_object( RogueClassCmdStatement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdStatement*)(THIS);
}

RogueString* RogueCmdStatement__type_name( RogueClassCmdStatement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[951]);
}

void RogueCmdStatement__dispatch__Visitor( RogueClassCmdStatement* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(THIS) );
}

RogueClassScope* RogueScope__init_object( RogueClassScope* THIS )
{
  THIS->local_list = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->control_stack = ((RogueCmdControlStructure_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdControlStructure_List*,ROGUE_CREATE_OBJECT(CmdControlStructure_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassScope*)(THIS);
}

RogueString* RogueScope__type_name( RogueClassScope* THIS )
{
  return (RogueString*)(Rogue_literal_strings[806]);
}

RogueClassScope* RogueScope__init__Type_Method( RogueClassScope* THIS, RogueClassType* _auto_341_0, RogueClassMethod* _auto_342_1 )
{
  THIS->this_method = _auto_342_1;
  THIS->_this_type = _auto_341_0;
  return (RogueClassScope*)(THIS);
}

RogueClassLocal* RogueScope__find_local__String( RogueClassScope* THIS, RogueString* name_0 )
{
  RogueInt32 i_1 = ((THIS->local_list->count - 1));
  while (i_1 >= 0)
  {
    if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(((RogueClassLocal*)(THIS->local_list->data->objects[i_1]))->name), name_0 ))))
    {
      return (RogueClassLocal*)(((RogueClassLocal*)(THIS->local_list->data->objects[i_1])));
    }
    --i_1;
  }
  return (RogueClassLocal*)(((RogueClassLocal*)(NULL)));
}

RogueClassType* RogueScope__find_type__String( RogueClassScope* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), name_0 )))));
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueScope__push_local__Local_Logical( RogueClassScope* THIS, RogueClassLocal* v_0, RogueLogical validate_name_1 )
{
  if (validate_name_1)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,existing_2,(((RogueScope__find_local__String( ROGUE_ARG(THIS), ROGUE_ARG(v_0->name) )))));
    if (!!(existing_2))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(v_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[469] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(v_0->name) )))) )))), Rogue_literal_strings[395] )))) )))) ))));
    }
  }
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_list), v_0 );
}

void RogueScope__pop_local( RogueClassScope* THIS )
{
  RogueLocal_List__remove_last( ROGUE_ARG(THIS->local_list) );
}

RogueClassType* RogueScope__set_implicit_type__Type( RogueClassScope* THIS, RogueClassType* new_implicit_type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(THIS->_implicit_type));
  THIS->_implicit_type = new_implicit_type_0;
  return (RogueClassType*)(result_1);
}

RogueClassCmd* RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( RogueClassScope* THIS, RogueClassType* type_context_0, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueLogical suppress_inherited_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, ROGUE_ARG((error_on_fail_2 && !!(access_1->context))), suppress_inherited_3 )))));
  if ((!(!!(m_4)) && !(!!(access_1->context))))
  {
    if (error_on_fail_2)
    {
      m_4 = ((RogueClassMethod*)((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, false, suppress_inherited_3 ))));
    }
    if (!!(m_4))
    {
      type_context_0 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global);
      access_1->context = ((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(access_1->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))));
    }
    else if (error_on_fail_2)
    {
      if (((RogueType__has_method_named__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(access_1->name) ))))
      {
        RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, true, suppress_inherited_3 );
      }
      else
      {
        RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, true, suppress_inherited_3 );
      }
    }
  }
  if (!(!!(m_4)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  if (((!(error_on_fail_2) && ((RogueMethod__is_fallback( m_4 )))) && !(((RogueType__is_aspect( ROGUE_ARG(m_4->type_context) ))))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_5,(access_1->t));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,context_6,(access_1->context));
  if (!(!!(context_6)))
  {
    if ((((RogueMethod__is_global( ROGUE_ARG(THIS->this_method) ))) && !(((RogueMethod__is_global( m_4 ))))))
    {
      context_6 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), t_5, type_context_0 ))))));
    }
    else
    {
      context_6 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_5, type_context_0 ))))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_7,(access_1->args));
  if (!(!!(args_7)))
  {
    args_7 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
  }
  while (args_7->count < m_4->parameters->count)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_8,(((RogueClassLocal*)(m_4->parameters->data->objects[args_7->count]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_9,0);
    if (!!(access_1->named_args))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2583_18,(access_1->named_args));
        RogueInt32 _auto_2584_19 = (0);
        for (;_auto_2584_19 < _auto_2583_18->count;++_auto_2584_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_20,(((RogueClassCmdNamedArg*)(_auto_2583_18->data->objects[_auto_2584_19]))));
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(arg_20->name), ROGUE_ARG(param_8->original_name) ))))
          {
            named_arg_9 = ((RogueClassCmdNamedArg*)arg_20);
            RogueCmdNamedArg_List__remove__CmdNamedArg( ROGUE_ARG(access_1->named_args), arg_20 );
            goto _auto_2585;
          }
        }
      }
      _auto_2585:;
    }
    if (!!(named_arg_9))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_9 )))) );
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(param_8->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) );
    }
  }
  if ((!!(access_1->named_args) && !!(access_1->named_args->count)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_10,(((RogueClassCmdNamedArg*)(access_1->named_args->data->objects[0]))));
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(arg_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[496] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(arg_10->name) )))) )))), Rogue_literal_strings[43] )))) )))) ))));
  }
  RogueCmdArgs__resolve__Scope( args_7, ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2586_21,(args_7));
    RogueInt32 i_22 = (0);
    for (;i_22 < _auto_2586_21->count;++i_22)
    {
      args_7->data->objects[i_22] = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(((RogueClassCmd*)(args_7->data->objects[i_22]))), ROGUE_ARG(((RogueClassLocal*)(m_4->parameters->data->objects[i_22]))->_type), ROGUE_ARG(THIS) ))), ROGUE_ARG(THIS) ));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,0);
  if (((RogueMethod__is_global( m_4 ))))
  {
    if (((RogueMethod__is_native( m_4 ))))
    {
      if (!!(m_4->native_code))
      {
        context_6 = ((RogueClassCmd*)(call_ROGUEM120( 34, context_6, ROGUE_ARG(THIS) )));
        call_ROGUEM128( 28, context_6 );
        cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), t_5, m_4, args_7 ))))));
      }
      else
      {
        cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), t_5, m_4, args_7 ))))));
      }
    }
    else if (((RogueMethod__is_macro( m_4 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_12,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_6, m_4, args_7 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_13,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2594_23,(m_4->statements));
        RogueInt32 _auto_2595_24 = (0);
        for (;_auto_2595_24 < _auto_2594_23->count;++_auto_2595_24)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_25,(((RogueClassCmd*)(_auto_2594_23->data->objects[_auto_2595_24]))));
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_14,((call_ROGUEM122( 13, statement_25, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_12))) ))));
          if (!!(inline_statement_14))
          {
            RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_13), inline_statement_14 );
          }
        }
      }
      RogueCmdStatementList__resolve__Scope_Logical( inline_statements_13, ROGUE_ARG(THIS), false );
      switch (inline_statements_13->count)
      {
        case 0:
        {
          if (!!(m_4->_return_type))
          {
            ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[500] ))));
          }
          return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_5, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
          break;
        }
        case 1:
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_13->data->objects[0])));
          break;
        }
        case 2:
        {
          ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[501] ))));
          break;
        }
      }
    }
    else
    {
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), t_5, m_4, args_7 ))))));
    }
  }
  else if (((RogueMethod__is_native( m_4 ))))
  {
    if (type_context_0->is_array)
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2599_26,(m_4->name));
        if (((RogueString__operatorEQUALSEQUALS__String( _auto_2599_26, Rogue_literal_strings[418] ))))
        {
          if ((!!(args_7) && !!(args_7->count)))
          {
            ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[502] ))));
          }
          return (RogueClassCmd*)(((RogueCmdReadArrayCount__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), t_5, context_6 )))), ROGUE_ARG(THIS) ))));
        }
      }
    }
    if (!!(m_4->native_code))
    {
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), t_5, context_6, m_4, args_7 ))))))));
    }
    else
    {
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), t_5, context_6, m_4, args_7 ))))))));
    }
  }
  else if (((RogueMethod__is_macro( m_4 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_15,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_6, m_4, args_7 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_16,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2600_27,(m_4->statements));
      RogueInt32 _auto_2601_28 = (0);
      for (;_auto_2601_28 < _auto_2600_27->count;++_auto_2601_28)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_29,(((RogueClassCmd*)(_auto_2600_27->data->objects[_auto_2601_28]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_17,((call_ROGUEM122( 13, statement_29, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_15))) ))));
        if (!!(inline_statement_17))
        {
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_16), inline_statement_17 );
        }
      }
    }
    RogueCmdStatementList__resolve__Scope_Logical( inline_statements_16, ROGUE_ARG(THIS), false );
    switch (inline_statements_16->count)
    {
      case 0:
      {
        if (!!(m_4->_return_type))
        {
          ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[500] ))));
        }
        return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_5, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
        break;
      }
      case 1:
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_16->data->objects[0])));
        break;
      }
      case 2:
      {
        ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[501] ))));
        break;
      }
    }
  }
  else if (((RogueType__is_aspect( type_context_0 ))))
  {
    cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), t_5, context_6, m_4, args_7 ))))))));
  }
  else
  {
    cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), t_5, context_6, m_4, args_7 ))))))));
  }
  return (RogueClassCmd*)((call_ROGUEM120( 34, cmd_11, ROGUE_ARG(THIS) )));
}

RogueClassMethod* RogueScope__find_method__Type_CmdAccess_Logical_Logical( RogueClassScope* THIS, RogueClassType* type_context_0, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueLogical suppress_inherited_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCandidateMethods*,candidates_4,(((RogueCandidateMethods__init__Type_CmdAccess_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCandidateMethods*,ROGUE_CREATE_OBJECT(CandidateMethods))), type_context_0, access_1, error_on_fail_2 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_5,(access_1->args));
  RogueInt32 arg_count_6 = (0);
  if (!!(args_5))
  {
    arg_count_6 = ((RogueInt32)args_5->count);
  }
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_7,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), ROGUE_ARG(access_1->name) )))));
  if (!!(list_7))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2605_37,(list_7));
      RogueInt32 _auto_2606_38 = (0);
      for (;_auto_2606_38 < _auto_2605_37->count;++_auto_2606_38)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_39,(((RogueClassMethod*)(_auto_2605_37->data->objects[_auto_2606_38]))));
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_39 );
      }
    }
  }
  if ((suppress_inherited_3 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_1->name), Rogue_literal_strings[388] )))))
  {
    list_7 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), Rogue_literal_strings[401] ))));
    if (!!(list_7))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2607_40,(list_7));
        RogueInt32 _auto_2608_41 = (0);
        for (;_auto_2608_41 < _auto_2607_40->count;++_auto_2608_41)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_42,(((RogueClassMethod*)(_auto_2607_40->data->objects[_auto_2608_41]))));
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_42 );
        }
      }
    }
  }
  list_7 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->method_lookup_by_name), ROGUE_ARG(access_1->name) ))));
  if (!!(list_7))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2609_43,(list_7));
      RogueInt32 _auto_2610_44 = (0);
      for (;_auto_2610_44 < _auto_2609_43->count;++_auto_2610_44)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_45,(((RogueClassMethod*)(_auto_2609_43->data->objects[_auto_2610_44]))));
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_45 );
      }
    }
  }
  if (candidates_4->available->count == 0)
  {
    if (((RogueMethodTemplates__instantiate__Token_String( ROGUE_ARG(type_context_0->method_templates), ROGUE_ARG(access_1->t), ROGUE_ARG(access_1->name) ))))
    {
      return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, suppress_inherited_3 ))));
    }
  }
  if (!(((RogueCandidateMethods__update_available( candidates_4 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  if (suppress_inherited_3)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,most_specific_type_8,0);
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2611_46,(candidates_4->available));
      RogueInt32 _auto_2612_47 = (0);
      for (;_auto_2612_47 < _auto_2611_46->count;++_auto_2612_47)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_48,(((RogueClassMethod*)(_auto_2611_46->data->objects[_auto_2612_47]))));
        if ((((RogueMethod__is_initializer( m_48 ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_48->name), Rogue_literal_strings[401] )))))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,m_type_context_9,(m_48->type_context));
          if ((((void*)most_specific_type_8) == ((void*)NULL) || ((RogueType__instance_of__Type( m_type_context_9, most_specific_type_8 )))))
          {
            most_specific_type_8 = ((RogueClassType*)m_type_context_9);
          }
        }
      }
    }
    if (!!(most_specific_type_8))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2613_49,(candidates_4->available));
        RogueInt32 _auto_2614_50 = (0);
        for (;_auto_2614_50 < _auto_2613_49->count;++_auto_2614_50)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_51,(((RogueClassMethod*)(_auto_2613_49->data->objects[_auto_2614_50]))));
          if (((void*)m_51->type_context) == ((void*)most_specific_type_8))
          {
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_51 );
          }
        }
      }
      if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
    }
  }
  if (!!(args_5))
  {
    RogueCmdArgs__resolve__Scope( args_5, ROGUE_ARG(THIS) );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2615_52,(args_5));
      RogueInt32 _auto_2616_53 = (0);
      for (;_auto_2616_53 < _auto_2615_52->count;++_auto_2616_53)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_54,(((RogueClassCmd*)(_auto_2615_52->data->objects[_auto_2616_53]))));
        RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 40, arg_54 ))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2617_55,(candidates_4->available));
    RogueInt32 _auto_2618_56 = (0);
    for (;_auto_2618_56 < _auto_2617_55->count;++_auto_2618_56)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_57,(((RogueClassMethod*)(_auto_2617_55->data->objects[_auto_2618_56]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2619_58,(m_57->parameters));
        RogueInt32 _auto_2620_59 = (0);
        for (;_auto_2620_59 < _auto_2619_58->count;++_auto_2620_59)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_60,(((RogueClassLocal*)(_auto_2619_58->data->objects[_auto_2620_59]))));
          RogueType__organize__Scope( ROGUE_ARG(param_60->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
        }
      }
      if (((RogueMethod__accepts_arg_count__Int32( m_57, arg_count_6 ))))
      {
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_57 );
      }
    }
  }
  if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  if (!!(access_1->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2621_61,(candidates_4->available));
      RogueInt32 _auto_2622_62 = (0);
      for (;_auto_2622_62 < _auto_2621_61->count;++_auto_2622_62)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_63,(((RogueClassMethod*)(_auto_2621_61->data->objects[_auto_2622_62]))));
        {
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2624_64,(access_1->named_args));
              RogueInt32 _auto_2625_65 = (0);
              for (;_auto_2625_65 < _auto_2624_64->count;++_auto_2625_65)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_66,(((RogueClassCmdNamedArg*)(_auto_2624_64->data->objects[_auto_2625_65]))));
                {
                  {
                    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2626_67,(m_63->parameters));
                    RogueInt32 index_68 = (0);
                    for (;index_68 < _auto_2626_67->count;++index_68)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_69,(((RogueClassLocal*)(_auto_2626_67->data->objects[index_68]))));
                      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(param_69->original_name), ROGUE_ARG(arg_66->name) ))))
                      {
                        if (!(arg_66->inferred_index.exists))
                        {
                          arg_66->inferred_index = RogueOptionalInt32( index_68, true );
                        }
                        else if (arg_66->inferred_index.value != index_68)
                        {
                          arg_66->inferred_index = RogueOptionalInt32( -1, true );
                        }
                        goto _auto_2627;
                      }
                    }
                  }
                  if ( !(false) ) goto _auto_2628;
                }
                _auto_2627:;
              }
            }
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_63 );
            goto _auto_2623;
          }
          _auto_2628:;
        }
        _auto_2623:;
      }
    }
    if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_10,(((RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( ROGUE_ARG(access_1->named_args), ROGUE_ARG(((RogueClassFunction_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_2629*)ROGUE_SINGLETON(Function_2629))))) )))));
    RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( named_args_10, ROGUE_ARG(((RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_2630*)ROGUE_SINGLETON(Function_2630))))) );
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2631_70,(named_args_10));
      RogueInt32 _auto_2632_71 = (0);
      for (;_auto_2632_71 < _auto_2631_70->count;++_auto_2632_71)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_72,(((RogueClassCmdNamedArg*)(_auto_2631_70->data->objects[_auto_2632_71]))));
        RogueInt32 index_11 = (named_arg_72->inferred_index.value);
        if (index_11 <= args_5->count)
        {
          RogueCmd_List__insert__Cmd_Int32( ((RogueCmd_List*)args_5), ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_72 )))), ROGUE_ARG(THIS) ))), index_11 );
        }
        else
        {
          RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(access_1->named_args), named_arg_72 );
        }
      }
    }
  }
  if (!!(arg_count_6))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2633_73,(candidates_4->available));
      RogueInt32 _auto_2634_74 = (0);
      for (;_auto_2634_74 < _auto_2633_73->count;++_auto_2634_74)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_75,(((RogueClassMethod*)(_auto_2633_73->data->objects[_auto_2634_74]))));
        {
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2636_76,(args_5));
              RogueInt32 index_77 = (0);
              for (;index_77 < _auto_2636_76->count;++index_77)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_12,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[index_77]))) ))));
                ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_13,(((RogueClassLocal*)(m_75->parameters->data->objects[index_77]))->_type));
                if ( !(((void*)arg_type_12) == ((void*)param_type_13)) ) goto _auto_2637;
              }
            }
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_75 );
            goto _auto_2635;
          }
          _auto_2637:;
        }
        _auto_2635:;
      }
    }
    if (!(((RogueCandidateMethods__refine_matches( candidates_4 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    RogueLogical has_generic_fn_14 = (false);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2638_78,(args_5));
      RogueInt32 _auto_2639_79 = (0);
      for (;_auto_2639_79 < _auto_2638_78->count;++_auto_2639_79)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_80,(((RogueClassCmd*)(_auto_2638_78->data->objects[_auto_2639_79]))));
        if ((call_ROGUEM126( 24, arg_80 )))
        {
          has_generic_fn_14 = ((RogueLogical)true);
          goto _auto_2640;
        }
      }
    }
    _auto_2640:;
    if (has_generic_fn_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_generic_fn_t_15,0);
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2641_81,(candidates_4->available));
        RogueInt32 _auto_2642_82 = (0);
        for (;_auto_2642_82 < _auto_2641_81->count;++_auto_2642_82)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_83,(((RogueClassMethod*)(_auto_2641_81->data->objects[_auto_2642_82]))));
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2644_84,(args_5));
                RogueInt32 index_85 = (0);
                for (;index_85 < _auto_2644_84->count;++index_85)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_16,(((RogueClassCmd*)(args_5->data->objects[index_85]))));
                  if ((call_ROGUEM126( 24, arg_16 )))
                  {
                    if (!(!!(first_generic_fn_t_15)))
                    {
                      first_generic_fn_t_15 = ((RogueClassToken*)arg_16->t);
                    }
                    ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_17,(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_16,RogueTypeCmdCreateFunction)))));
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_18,(((RogueClassLocal*)(m_83->parameters->data->objects[index_85]))->_type));
                    if ( !(((RogueString__begins_with__String( ROGUE_ARG(param_type_18->name), Rogue_literal_strings[492] )))) ) goto _auto_2645;
                    RogueInt32 callback_param_count_19 = (0);
                    if (!!(param_type_18->callback_parameter_types))
                    {
                      callback_param_count_19 = ((RogueInt32)param_type_18->callback_parameter_types->count);
                    }
                    RogueInt32 fn_param_count_20 = (0);
                    if (!!(fn_17->parameters))
                    {
                      fn_param_count_20 = ((RogueInt32)fn_17->parameters->count);
                    }
                    if ( !(fn_param_count_20 == callback_param_count_19) ) goto _auto_2645;
                  }
                }
              }
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_83 );
              goto _auto_2643;
            }
            _auto_2645:;
          }
          _auto_2643:;
        }
      }
      if (!(((RogueCandidateMethods__refine_matches( candidates_4 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
      if (((RogueCandidateMethods__has_match( candidates_4 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_21,(((RogueCandidateMethods__match( candidates_4 )))));
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2646_86,(args_5));
          RogueInt32 index_87 = (0);
          for (;index_87 < _auto_2646_86->count;++index_87)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_22,(((RogueClassCmd*)(args_5->data->objects[index_87]))));
            if ((call_ROGUEM126( 24, arg_22 )))
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_23,(((RogueCmdCreateFunction__clone__CloneArgs( ROGUE_ARG(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_22,RogueTypeCmdCreateFunction)))), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )))));
              fn_23->is_generic = false;
              args_5->data->objects[index_87] = ((RogueClassCmd*)(fn_23));
              ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_24,(((RogueClassLocal*)(m_21->parameters->data->objects[index_87]))->_type));
              if (!!(fn_23->parameters))
              {
                {
                  ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_2647_88,(fn_23->parameters));
                  RogueInt32 i_89 = (0);
                  for (;i_89 < _auto_2647_88->count;++i_89)
                  {
                    ((RogueClassFnParam*)(fn_23->parameters->data->objects[i_89]))->_type = ((RogueClassType*)(callback_type_24->callback_parameter_types->data->objects[i_89]));
                  }
                }
              }
              fn_23->_return_type = callback_type_24->_callback_return_type;
              if ((!!(fn_23->_return_type) && !!(fn_23->statements->count)))
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_expression_25,(((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)fn_23->statements)) )))));
                if (!(RogueObject_instance_of(last_expression_25,RogueTypeCmdReturn)))
                {
                  fn_23->statements->data->objects[(fn_23->statements->count - 1)] = ((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(last_expression_25->t), last_expression_25 )))));
                }
              }
            }
          }
        }
        return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, suppress_inherited_3 ))));
      }
      else if (candidates_4->available->count == 0)
      {
        ROGUE_THROW(((RogueToken__error__String( first_generic_fn_t_15, Rogue_literal_strings[493] ))));
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( first_generic_fn_t_15, Rogue_literal_strings[494] ))));
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2648_90,(candidates_4->available));
      RogueInt32 _auto_2649_91 = (0);
      for (;_auto_2649_91 < _auto_2648_90->count;++_auto_2649_91)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_92,(((RogueClassMethod*)(_auto_2648_90->data->objects[_auto_2649_91]))));
        {
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2651_93,(args_5));
              RogueInt32 index_94 = (0);
              for (;index_94 < _auto_2651_93->count;++index_94)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_26,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[index_94]))) ))));
                ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_27,(((RogueClassLocal*)(m_92->parameters->data->objects[index_94]))->_type));
                if ( !(((RogueType__is_compatible_with__Type( arg_type_26, param_type_27 )))) ) goto _auto_2652;
              }
            }
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_92 );
            goto _auto_2650;
          }
          _auto_2652:;
        }
        _auto_2650:;
      }
    }
    if (!!(candidates_4->compatible->count))
    {
      RogueCandidateMethods__update_matches( candidates_4 );
      if (((RogueCandidateMethods__has_match( candidates_4 ))))
      {
        return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
      }
    }
  }
  if (!!(candidates_4->compatible->count))
  {
    RogueCandidateMethods__update_matches( candidates_4 );
    if (((RogueCandidateMethods__has_match( candidates_4 ))))
    {
      return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
    }
  }
  if (!!(arg_count_6))
  {
    if (candidates_4->available->count > 1)
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2653_95,(candidates_4->available));
        RogueInt32 _auto_2654_96 = (0);
        for (;_auto_2654_96 < _auto_2653_95->count;++_auto_2654_96)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m1_97,(((RogueClassMethod*)(_auto_2653_95->data->objects[_auto_2654_96]))));
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2656_98,(candidates_4->available));
                RogueInt32 _auto_2657_99 = (0);
                for (;_auto_2657_99 < _auto_2656_98->count;++_auto_2657_99)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m2_100,(((RogueClassMethod*)(_auto_2656_98->data->objects[_auto_2657_99]))));
                  if (((void*)m1_97) != ((void*)m2_100))
                  {
                    RogueLogical m2_is_better_28 = (true);
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2658_101,(args_5));
                      RogueInt32 index_102 = (0);
                      for (;index_102 < _auto_2658_101->count;++index_102)
                      {
                        ROGUE_DEF_LOCAL_REF(RogueClassType*,m1_arg_type_29,(((RogueClassLocal*)(m1_97->parameters->data->objects[index_102]))->_type));
                        ROGUE_DEF_LOCAL_REF(RogueClassType*,m2_arg_type_30,(((RogueClassLocal*)(m2_100->parameters->data->objects[index_102]))->_type));
                        if ( !(((RogueType__is_equivalent_or_more_specific_than__Type( m2_arg_type_30, m1_arg_type_29 )))) ) goto _auto_2659;
                      }
                    }
                    if (true) goto _auto_2660;
                  }
                }
              }
              _auto_2660:;
              goto _auto_2655;
            }
            _auto_2659:;
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m1_97 );
          }
          _auto_2655:;
        }
      }
      if (!!(candidates_4->compatible->count))
      {
        if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
        {
          return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
        }
        if (((RogueCandidateMethods__has_match( candidates_4 ))))
        {
          return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
        }
      }
    }
  }
  else if (((RogueCandidateMethods__has_match( candidates_4 ))))
  {
    return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
  }
  if (arg_count_6 == 1)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2661_103,(candidates_4->available));
      RogueInt32 _auto_2662_104 = (0);
      for (;_auto_2662_104 < _auto_2661_103->count;++_auto_2662_104)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_105,(((RogueClassMethod*)(_auto_2661_103->data->objects[_auto_2662_104]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_31,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_32,(((RogueClassLocal*)(m_105->parameters->data->objects[0]))->_type));
        RogueType__organize__Scope( param_type_32, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_32) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_31, Rogue_literal_strings[495] )))))
        {
          args_5->data->objects[0] = (call_ROGUEM121( 12, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(THIS) ));
          return (RogueClassMethod*)(m_105);
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2663_106,(candidates_4->available));
      RogueInt32 _auto_2664_107 = (0);
      for (;_auto_2664_107 < _auto_2663_106->count;++_auto_2664_107)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_108,(((RogueClassMethod*)(_auto_2663_106->data->objects[_auto_2664_107]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_33,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_34,(((RogueClassLocal*)(m_108->parameters->data->objects[0]))->_type));
        RogueType__organize__Scope( param_type_34, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_34) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((RogueType__has_method_named__String( arg_type_33, Rogue_literal_strings[456] )))))
        {
          args_5->data->objects[0] = (call_ROGUEM121( 12, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), ROGUE_ARG(THIS) ));
          return (RogueClassMethod*)(m_108);
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2665_109,(candidates_4->available));
      RogueInt32 _auto_2666_110 = (0);
      for (;_auto_2666_110 < _auto_2665_109->count;++_auto_2666_110)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_111,(((RogueClassMethod*)(_auto_2665_109->data->objects[_auto_2666_110]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_35,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_36,(((RogueClassLocal*)(m_111->parameters->data->objects[0]))->_type));
        RogueType__organize__Scope( param_type_36, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_36) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_35, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[412], ROGUE_ARG(param_type_36->name) )))) )))))
        {
          args_5->data->objects[0] = (call_ROGUEM121( 12, ROGUE_ARG(((RogueClassCmd*)(args_5->data->objects[0]))), param_type_36, ROGUE_ARG(THIS) ));
          return (RogueClassMethod*)(m_111);
        }
      }
    }
  }
  RogueCandidateMethods__update_matches( candidates_4 );
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init_object( RogueCmdControlStructure_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init( RogueCmdControlStructure_List* THIS )
{
  RogueCmdControlStructure_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueString* RogueCmdControlStructure_List__to_String( RogueCmdControlStructure_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_2667_2,(THIS));
    RogueInt32 _auto_2668_3 = (0);
    for (;_auto_2668_3 < _auto_2667_2->count;++_auto_2668_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,value_4,(((RogueClassCmdControlStructure*)(_auto_2667_2->data->objects[_auto_2668_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdControlStructure_List__type_name( RogueCmdControlStructure_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[871]);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdControlStructure*), true );
  }
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__add__CmdControlStructure( RogueCmdControlStructure_List* THIS, RogueClassCmdControlStructure* value_0 )
{
  ((RogueCmdControlStructure_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueInt32 RogueCmdControlStructure_List__capacity( RogueCmdControlStructure_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__reserve__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdControlStructure_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_at__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,result_1,(((RogueClassCmdControlStructure*)(THIS->data->objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,zero_value_2,0);
  --THIS->count;
  THIS->data->objects[THIS->count] = zero_value_2;
  return (RogueClassCmdControlStructure*)(result_1);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_last( RogueCmdControlStructure_List* THIS )
{
  return (RogueClassCmdControlStructure*)(((RogueCmdControlStructure_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassCmdControlStructure* RogueCmdControlStructure__init_object( RogueClassCmdControlStructure* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdControlStructure*)(THIS);
}

RogueString* RogueCmdControlStructure__type_name( RogueClassCmdControlStructure* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1174]);
}

void RogueCmdControlStructure__dispatch__Visitor( RogueClassCmdControlStructure* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(((RogueClassCmdStatement*)(THIS))) );
}

RogueLogical RogueCmdControlStructure__requires_semicolon( RogueClassCmdControlStructure* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdControlStructure__set_control_logic__CmdControlStructure( RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* control_structure_0 )
{
  THIS->_control_type = control_structure_0->_control_type;
  THIS->contains_yield = control_structure_0->contains_yield;
  THIS->escape_label = control_structure_0->escape_label;
  THIS->upkeep_label = control_structure_0->upkeep_label;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init_object( RogueClassCmdTaskControlSection* THIS )
{
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueString* RogueCmdTaskControlSection__type_name( RogueClassCmdTaskControlSection* THIS )
{
  return (RogueString*)(Rogue_literal_strings[805]);
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init__Int32( RogueClassCmdTaskControlSection* THIS, RogueInt32 _auto_335_0 )
{
  THIS->ip = _auto_335_0;
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueString* RogueArray_CmdControlStructure___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[921]);
}

RogueClassFunction_Type_RETURNSLogical* RogueFunction_Type_RETURNSLogical__init_object( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_Type_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_Type_RETURNSLogical__type_name( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[807]);
}

RogueLogical RogueFunction_Type_RETURNSLogical__call__Type( RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* param1_0 )
{
  return (RogueLogical)(false);
}

RogueClassFunction_383* RogueFunction_383__init_object( RogueClassFunction_383* THIS )
{
  RogueFunction_Type_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_383*)(THIS);
}

RogueString* RogueFunction_383__type_name( RogueClassFunction_383* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1184]);
}

RogueLogical RogueFunction_383__call__Type( RogueClassFunction_383* THIS, RogueClassType* type_0 )
{
  return (RogueLogical)((((RogueType__is_class( type_0 ))) && type_0->is_used));
}

RogueClassFunction_384* RogueFunction_384__init_object( RogueClassFunction_384* THIS )
{
  RogueFunction_Type_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_384*)(THIS);
}

RogueString* RogueFunction_384__type_name( RogueClassFunction_384* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1185]);
}

RogueLogical RogueFunction_384__call__Type( RogueClassFunction_384* THIS, RogueClassType* type_0 )
{
  return (RogueLogical)((((RogueType__is_aspect( type_0 ))) && type_0->is_used));
}

RogueClassCPPWriter* RogueCPPWriter__init_object( RogueClassCPPWriter* THIS )
{
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->indent = 0;
  THIS->needs_indent = true;
  THIS->line_number = 1;
  THIS->temp_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCPPWriter*)(THIS);
}

RogueString* RogueCPPWriter__type_name( RogueClassCPPWriter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[808]);
}

RogueClassCPPWriter* RogueCPPWriter__init__String( RogueClassCPPWriter* THIS, RogueString* _auto_408_0 )
{
  THIS->filepath = _auto_408_0;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__close( RogueClassCPPWriter* THIS )
{
  RogueFile__save__String_String( ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(THIS->filepath) )))->filepath), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
}

void RogueCPPWriter__print_indent( RogueClassCPPWriter* THIS )
{
  if (THIS->needs_indent)
  {
    THIS->needs_indent = false;
    {
      RogueInt32 _auto_406_0 = (1);
      RogueInt32 _auto_407_1 = (THIS->indent);
      for (;_auto_406_0 <= _auto_407_1;++_auto_406_0)
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)' ', true );
      }
    }
  }
}

RogueClassCPPWriter* RogueCPPWriter__print__Int64( RogueClassCPPWriter* THIS, RogueInt64 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Int64( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Int32( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Real64( RogueClassCPPWriter* THIS, RogueReal64 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Real64( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Character( RogueClassCPPWriter* THIS, RogueCharacter value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), value_0, true );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueLogical needs_newline_1 = (false);
  if (((RogueString__contains__Character( value_0, (RogueCharacter)10 ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_2700_2,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), value_0 )))));
      while (((RogueLineReader__has_another( _auto_2700_2 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_3,(((RogueLineReader__read( _auto_2700_2 )))));
        if (needs_newline_1)
        {
          RogueCPPWriter__println( ROGUE_ARG(THIS) );
        }
        RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), line_3 );
        needs_newline_1 = ((RogueLogical)true);
      }
    }
  }
  else
  {
    RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), value_0 );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println( RogueClassCPPWriter* THIS )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print__Int32( ROGUE_ARG(THIS), value_0 );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), value_0 );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_type_name__Type( ROGUE_ARG(THIS), type_0 );
  if ((!!(type_0) && ((RogueType__is_reference( type_0 )))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[248] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[92] )))), to_type_1 )))), Rogue_literal_strings[32] ))));
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_open_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[92] );
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 ))));
}

RogueClassCPPWriter* RogueCPPWriter__print_close_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[32] );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type_Cmd( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1, RogueClassCmd* cmd_2 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    call_ROGUEM133( 41, cmd_2, ROGUE_ARG(THIS), false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[92] );
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 );
    call_ROGUEM133( 41, cmd_2, ROGUE_ARG(THIS), false );
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[32] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_access_operator__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  if (((RogueType__is_reference( type_0 ))))
  {
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[208] ))));
  }
  else
  {
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[76] ))));
  }
}

RogueClassCPPWriter* RogueCPPWriter__print_type_name__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  if (!!(type_0))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), ROGUE_ARG(type_0->cpp_class_name) );
  }
  else
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[565] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_type_info__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[544] )))), ROGUE_ARG(type_0->cpp_name) );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_default_value__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  if (((RogueType__is_compound( type_0 ))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_0 )))), Rogue_literal_strings[335] );
  }
  else
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[553] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_hex_pair__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[678] );
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 >> 4)) )))) );
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 & 15)) )))) );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_character__Character_Logical( RogueClassCPPWriter* THIS, RogueCharacter ch_0, RogueLogical in_string_1 )
{
  if ((ch_0 >= ((RogueCharacter)(32)) && ch_0 <= ((RogueCharacter)(126))))
  {
    switch (ch_0)
    {
      case (RogueCharacter)'"':
      {
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[672] );
        }
        else
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[673] );
        }
        break;
      }
      case (RogueCharacter)'\'':
      {
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[81] );
        }
        else
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[674] );
        }
        break;
      }
      case (RogueCharacter)'\\':
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[675] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ch_0 );
      }
    }
  }
  else
  {
    switch (ch_0)
    {
      case 10:
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[676] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[677] );
        if (ch_0 <= ((RogueCharacter)(127)))
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)(ch_0))) );
        }
        else if (ch_0 <= ((RogueCharacter)(2047)))
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(192)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(31))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        else if (ch_0 <= ((RogueCharacter)(65535)))
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(224)) | ((ch_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(15))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        else
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(240)) | ((ch_0 >> ((RogueCharacter)(18))) & ((RogueCharacter)(7))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(63))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[677] );
      }
    }
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_string__String( RogueClassCPPWriter* THIS, RogueString* st_0 )
{
  if (((void*)st_0) == ((void*)NULL))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[553] );
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[673] );
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2702_1,(st_0));
    RogueInt32 _auto_2703_2 = (0);
    for (;_auto_2703_2 < _auto_2702_1->character_count;++_auto_2703_2)
    {
      RogueCharacter ch_3 = (RogueString_character_at(_auto_2702_1,_auto_2703_2));
      RogueCPPWriter__print_literal_character__Character_Logical( ROGUE_ARG(THIS), ch_3, true );
    }
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[673] );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueString* code_3, RogueClassType* result_type_4 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_2704_10,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), code_3 )))));
    while (((RogueLineReader__has_another( _auto_2704_10 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_11,(((RogueLineReader__read( _auto_2704_10 )))));
      RogueInt32 original_indent_5 = (THIS->indent);
      if (((RogueString__begins_with__Character( line_11, (RogueCharacter)'#' ))))
      {
        THIS->indent = 0;
      }
      RogueOptionalInt32 marker_6 = (((RogueString__locate__Character_OptionalInt32( line_11, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      while (marker_6.exists)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,name_7,0);
        RogueInt32 i1_8 = (marker_6.value);
        if (i1_8 > 0)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( line_11, i1_8 )))) );
        }
        RogueInt32 i2_9 = ((i1_8 + 1));
        if ((i2_9 < line_11->character_count && RogueString_character_at(line_11,i2_9) == (RogueCharacter)'('))
        {
          ++i2_9;
          while ((i2_9 < line_11->character_count && RogueString_character_at(line_11,i2_9) != (RogueCharacter)')'))
          {
            ++i2_9;
          }
          name_7 = ((RogueString*)((RogueString__from__Int32_Int32( line_11, ROGUE_ARG((i1_8 + 2)), ROGUE_ARG((i2_9 - 1)) ))));
          line_11 = ((RogueString*)((RogueString__from__Int32( line_11, ROGUE_ARG((i2_9 + 1)) ))));
        }
        else
        {
          while ((i2_9 < line_11->character_count && ((RogueCharacter__is_identifier( ROGUE_ARG(RogueString_character_at(line_11,i2_9)) )))))
          {
            ++i2_9;
          }
          name_7 = ((RogueString*)((RogueString__from__Int32_Int32( line_11, ROGUE_ARG((i1_8 + 1)), ROGUE_ARG((i2_9 - 1)) ))));
          line_11 = ((RogueString*)((RogueString__from__Int32( line_11, i2_9 ))));
        }
        RogueCPPWriter__print_native_marker__Token_Type_Method_String( ROGUE_ARG(THIS), t_0, type_context_1, method_context_2, name_7 );
        marker_6 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( line_11, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      }
      if (!!(line_11->character_count))
      {
        if (!!(result_type_4))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), line_11 );
        }
        else
        {
          RogueCPPWriter__println__String( ROGUE_ARG(THIS), line_11 );
        }
      }
      THIS->indent = original_indent_5;
    }
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_marker__Token_Type_Method_String( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueString* name_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,operation_4,(((RogueString__after_first__Character( name_3, (RogueCharacter)'.' )))));
  name_3 = ((RogueString*)((RogueString__before_first__Character( name_3, (RogueCharacter)'.' ))));
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[279] ))))
    {
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[279] );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[202] ))))
    {
      RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, Rogue_literal_strings[576], type_context_1 );
    }
    else
    {
      if (((RogueString__begins_with__Character( name_3, (RogueCharacter)'$' ))))
      {
        if (!!(type_context_1->specializers))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_2705_8,(type_context_1->specializers));
            RogueInt32 _auto_2706_9 = (0);
            for (;_auto_2706_9 < _auto_2705_8->count;++_auto_2706_9)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_10,(((RogueClassTypeSpecializer*)(_auto_2705_8->data->objects[_auto_2706_9]))));
              if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(specializer_10->name), name_3 ))))
              {
                {
                  if (((RogueString__operatorEQUALSEQUALS__String( operation_4, Rogue_literal_strings[0] ))))
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((RogueType__organize__Scope( ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(specializer_10->tokens), false )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
                    RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_5 );
                    return (RogueClassCPPWriter*)(THIS);
                  }
                }
              }
            }
          }
        }
        if (!!(method_context_2->source_template))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_2707_11,(method_context_2->source_template->type_parameters));
            RogueInt32 i_12 = (0);
            for (;i_12 < _auto_2707_11->count;++i_12)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,specializer_13,(((RogueClassTypeParameter*)(_auto_2707_11->data->objects[i_12]))));
              if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(specializer_13->name), name_3 ))))
              {
                {
                  if (((RogueString__operatorEQUALSEQUALS__String( operation_4, Rogue_literal_strings[0] ))))
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_6,(((RogueType__organize__Scope( ROGUE_ARG(((RogueParser__parse_specialization_type__Int32( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), t_0, ROGUE_ARG(method_context_2->name), ROGUE_ARG(((RogueString__from_first__String( ROGUE_ARG(method_context_2->name), Rogue_literal_strings[234] )))) )))), i_12 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
                    RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_6 );
                    return (RogueClassCPPWriter*)(THIS);
                  }
                }
              }
            }
          }
        }
        ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[575] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_3 )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_4 )))) )))) )))) ))));
      }
      if (!!(method_context_2))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2708_14,(method_context_2->locals));
          RogueInt32 _auto_2709_15 = (0);
          for (;_auto_2709_15 < _auto_2708_14->count;++_auto_2709_15)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_16,(((RogueClassLocal*)(_auto_2708_14->data->objects[_auto_2709_15]))));
            if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(v_16->name), name_3 ))))
            {
              RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, ROGUE_ARG(((RogueLocal__cpp_name( v_16 )))), ROGUE_ARG(v_16->_type) );
              goto _auto_2710;
            }
          }
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueTable_String_Property___get__String( ROGUE_ARG(type_context_1->property_lookup), name_3 )))));
      if (!!(p_7))
      {
        RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[579], ROGUE_ARG(p_7->cpp_name) )))), ROGUE_ARG(p_7->_type) );
        goto _auto_2710;
      }
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[279] )))), name_3 );
    }
  }
  _auto_2710:;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueString* name_1, RogueString* operation_2, RogueString* default_3, RogueClassType* type_4 )
{
  {
    if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[570] ))))
    {
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[571] );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[572] );
      }
      else
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[573] ))))
    {
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[574] );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[572] );
      }
      else
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[523] ))))
    {
      RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_4 );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[0] ))))
    {
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[575] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_1 )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_2 )))) )))) )))) ))));
    }
  }
}

void RogueCPPWriter__print_arg__Cmd_Type_Type( RogueClassCPPWriter* THIS, RogueClassCmd* arg_0, RogueClassType* param_type_1, RogueClassType* cast_to_2 )
{
  RogueInt32 close_paren_3 = (0);
  if (RogueObject_instance_of(arg_0,RogueTypeCmdReadLocal))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdReadSingleton))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdLiteral))
  {
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1138] );
    ++close_paren_3;
  }
  if ((!!(param_type_1) && ((RogueType__is_aspect( param_type_1 )))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[92] )))), ROGUE_ARG((call_ROGUEM129( 40, arg_0 ))), param_type_1 )))), Rogue_literal_strings[92] );
    close_paren_3 += 2;
  }
  if (!!(cast_to_2))
  {
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM129( 40, arg_0 ))), cast_to_2, arg_0 );
  }
  else if (((void*)(call_ROGUEM129( 40, arg_0 ))) != ((void*)param_type_1))
  {
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM129( 40, arg_0 ))), param_type_1, arg_0 );
  }
  else
  {
    call_ROGUEM133( 41, arg_0, ROGUE_ARG(THIS), false );
  }
  while (!!(close_paren_3))
  {
    --close_paren_3;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[32] );
  }
}

void RogueCPPWriter__mark_statement_start__String_Int32_Int32( RogueClassCPPWriter* THIS, RogueString* statement_filepath_0, RogueInt32 start_line_1, RogueInt32 end_line_2 )
{
}

void RogueCPPWriter__mark_statement_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__mark_method_start__Type_Method( RogueClassCPPWriter* THIS, RogueClassType* t_0, RogueClassMethod* m_1 )
{
  if (((RogueMethod__omit_output( m_1 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_method_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__mark_routine_start__Method( RogueClassCPPWriter* THIS, RogueClassMethod* m_0 )
{
  if (((RogueMethod__omit_output( m_0 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_routine_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__update_trace_info__Token( RogueClassCPPWriter* THIS, RogueClassToken* t_0 )
{
  if (((!!(THIS->trace_token) && !!(t_0)) && !!(t_0->filepath)))
  {
    if (((void*)t_0->filepath) != ((void*)THIS->trace_token->filepath))
    {
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[705] )))), ROGUE_ARG(((RogueToken__filename( t_0 )))) )))), Rogue_literal_strings[706] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[707] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[241] );
      }
    }
    else if (t_0->line != THIS->trace_token->line)
    {
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[707] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[241] );
      }
    }
  }
  THIS->trace_token = t_0;
}

RogueClassSystem* RogueSystem__init_object( RogueClassSystem* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassSystem*)(THIS);
}

RogueString* RogueSystem__type_name( RogueClassSystem* THIS )
{
  return (RogueString*)(Rogue_literal_strings[809]);
}

RogueClassMath* RogueMath__init_object( RogueClassMath* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassMath*)(THIS);
}

RogueString* RogueMath__type_name( RogueClassMath* THIS )
{
  return (RogueString*)(Rogue_literal_strings[810]);
}

RogueLogical RogueReader_Byte___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 367:
      return RogueFileReader__has_another( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueByte RogueReader_Byte___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 367:
      return RogueFileReader__read( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueClassFile* RogueFile__init_object( RogueClassFile* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFile*)(THIS);
}

RogueString* RogueFile__to_String( RogueClassFile* THIS )
{
  return (RogueString*)(THIS->filepath);
}

RogueString* RogueFile__type_name( RogueClassFile* THIS )
{
  return (RogueString*)(Rogue_literal_strings[811]);
}

RogueClassFile* RogueFile__init__String( RogueClassFile* THIS, RogueString* _auto_770_0 )
{
  THIS->filepath = _auto_770_0;
  return (RogueClassFile*)(THIS);
}

RogueString* RogueFile__filename( RogueClassFile* THIS )
{
  return (RogueString*)((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init_object( RogueClassCmdMakeRequisite* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueString* RogueCmdMakeRequisite__type_name( RogueClassCmdMakeRequisite* THIS )
{
  return (RogueString*)(Rogue_literal_strings[952]);
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__clone__CloneArgs( RogueClassCmdMakeRequisite* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdMakeRequisite*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) ))));
}

void RogueCmdMakeRequisite__dispatch__Visitor( RogueClassCmdMakeRequisite* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdMakeRequisite( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdMakeRequisite__requires_semicolon( RogueClassCmdMakeRequisite* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdMakeRequisite__resolve__Scope( RogueClassCmdMakeRequisite* THIS, RogueClassScope* scope_0 )
{
  if (((RogueString__contains__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_1,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__before_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))) )))));
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_requisite( req_type_1 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    ROGUE_DEF_LOCAL_REF(RogueString*,sig_2,(((RogueString__after_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))));
    if (((RogueString__operatorEQUALSEQUALS__String( sig_2, Rogue_literal_strings[248] ))))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2784_6,(req_type_1->global_method_list));
        RogueInt32 _auto_2785_7 = (0);
        for (;_auto_2785_7 < _auto_2784_6->count;++_auto_2785_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_8,(((RogueClassMethod*)(_auto_2784_6->data->objects[_auto_2785_7]))));
          RogueMethod__make_requisite( r_8 );
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2786_9,(req_type_1->method_list));
        RogueInt32 _auto_2787_10 = (0);
        for (;_auto_2787_10 < _auto_2786_9->count;++_auto_2787_10)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_2786_9->data->objects[_auto_2787_10]))));
          RogueMethod__make_requisite( m_11 );
        }
      }
    }
    else if (((RogueString__contains__Character( sig_2, (RogueCharacter)'(' ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueType__find_method__String( req_type_1, sig_2 )))));
      if ((!(!!(m_3)) && ((RogueMethodTemplates__instantiate__Token_String( ROGUE_ARG(req_type_1->method_templates), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__before_first__Character( sig_2, (RogueCharacter)'(' )))) )))))
      {
        m_3 = ((RogueClassMethod*)((RogueType__find_method__String( req_type_1, sig_2 ))));
      }
      if (!!(m_3))
      {
        RogueMethod__make_requisite( m_3 );
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1009] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], sig_2 )))) )))), Rogue_literal_strings[1010] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(req_type_1->name) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
      }
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->global_method_lookup_by_name), sig_2 )))));
      if (!!(list_4))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2788_12,(list_4));
          RogueInt32 _auto_2789_13 = (0);
          for (;_auto_2789_13 < _auto_2788_12->count;++_auto_2789_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_2788_12->data->objects[_auto_2789_13]))));
            RogueMethod__make_requisite( m_14 );
          }
        }
      }
      list_4 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->method_lookup_by_name), sig_2 ))));
      if (!!(list_4))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2790_15,(list_4));
          RogueInt32 _auto_2791_16 = (0);
          for (;_auto_2791_16 < _auto_2790_15->count;++_auto_2791_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_17,(((RogueClassMethod*)(_auto_2790_15->data->objects[_auto_2791_16]))));
            RogueMethod__make_requisite( m_17 );
          }
        }
      }
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_5,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) )))));
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_requisite( req_type_5 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

void RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical( RogueClassCmdMakeRequisite* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init__Token_String( RogueClassCmdMakeRequisite* THIS, RogueClassToken* _auto_783_0, RogueString* _auto_784_1 )
{
  THIS->pattern = _auto_784_1;
  THIS->t = _auto_783_0;
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueClassLineReader* RogueLineReader__init_object( RogueClassLineReader* THIS )
{
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueLineReader__type_name( RogueClassLineReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[812]);
}

RogueLogical RogueLineReader__has_another( RogueClassLineReader* THIS )
{
  return (RogueLogical)(!!(THIS->next));
}

RogueString* RogueLineReader__read( RogueClassLineReader* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,result_0,(THIS->next));
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  ++THIS->position;
  return (RogueString*)(result_0);
}

RogueClassLineReader* RogueLineReader__init__Reader_Character_( RogueClassLineReader* THIS, RogueClassReader_Character_* _auto_791_0 )
{
  THIS->source = _auto_791_0;
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__File( RogueClassLineReader* THIS, RogueClassFile* file_0 )
{
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueUTF8Reader__init__Reader_Byte_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUTF8Reader*,ROGUE_CREATE_OBJECT(UTF8Reader))), ROGUE_ARG(((((RogueClassReader_Byte_*)((RogueFile__reader__String( ROGUE_ARG(file_0->filepath) ))))))) )))))))) );
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__String( RogueClassLineReader* THIS, RogueString* string_0 )
{
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueString__reader( string_0 )))))))) );
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueLineReader__prepare_next( RogueClassLineReader* THIS )
{
  if (!((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) ))))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  THIS->prev = ((RogueCharacter)(0));
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  while ((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) )))
  {
    RogueCharacter ch_0 = ((RogueReader_Character___read( ROGUE_ARG(((RogueObject*)THIS->source)) )));
    if (ch_0 == (RogueCharacter)10)
    {
      THIS->prev = (RogueCharacter)10;
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
    }
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueClassFunction_798* RogueFunction_798__init_object( RogueClassFunction_798* THIS )
{
  RogueFunction__RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)THIS)) );
  return (RogueClassFunction_798*)(THIS);
}

RogueString* RogueFunction_798__type_name( RogueClassFunction_798* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1166]);
}

RogueLogical RogueFunction_798__call( RogueClassFunction_798* THIS )
{
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1167] )))) )))) );
  if (!(!!(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[1168] ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,src_3,(Rogue_literal_strings[1169]));
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1170] );
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), src_3 );
    RogueParser__parse_elements( ROGUE_ARG(((RogueParser__init__String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), Rogue_literal_strings[1171], src_3 )))) );
    return (RogueLogical)(true);
  }
  else
  {
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1172] );
    return (RogueLogical)(false);
  }
}

RogueClassTokenizer* RogueTokenizer__init_object( RogueClassTokenizer* THIS )
{
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTokenizer*)(THIS);
}

RogueString* RogueTokenizer__type_name( RogueClassTokenizer* THIS )
{
  return (RogueString*)(Rogue_literal_strings[813]);
}

RogueToken_List* RogueTokenizer__tokenize__String( RogueClassTokenizer* THIS, RogueString* _auto_886_0 )
{
  THIS->filepath = _auto_886_0;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__File_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(THIS->filepath) )))), 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__String_String( RogueClassTokenizer* THIS, RogueString* _auto_887_0, RogueString* content_1 )
{
  THIS->filepath = _auto_887_0;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), content_1, 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__Token_String_String( RogueClassTokenizer* THIS, RogueClassToken* reference_t_0, RogueString* _auto_888_1, RogueString* data_2 )
{
  THIS->filepath = _auto_888_1;
  ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,characters_3,(((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG(data_2->character_count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2830_4,(data_2));
    RogueInt32 _auto_2831_5 = (0);
    for (;_auto_2831_5 < _auto_2830_4->character_count;++_auto_2831_5)
    {
      RogueCharacter ch_6 = (RogueString_character_at(_auto_2830_4,_auto_2831_5));
      RogueCharacter_List__add__Character( characters_3, ch_6 );
    }
  }
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__set_location__Int32_Int32( ROGUE_ARG(((RogueParseReader__init__Character_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), characters_3, 2 )))), ROGUE_ARG(reference_t_0->line), ROGUE_ARG(reference_t_0->column) )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__ParseReader( RogueClassTokenizer* THIS, RogueClassParseReader* _auto_889_0 )
{
  THIS->reader = _auto_889_0;
  RogueTable_String_ParseReader___set__String_ParseReader( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader) );
  RogueTokenizer__configure_token_types( ROGUE_ARG(THIS) );
  while (((RogueTokenizer__tokenize_another( ROGUE_ARG(THIS) ))))
  {
  }
  if (THIS->tokens->count == 0)
  {
    if ((THIS->tokens->count == 0 || ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) != ((void*)RogueTokenType_eol)))
    {
      RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) );
    }
  }
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  if ((THIS->buffer->count == 1 && terminator_0 == (RogueCharacter)'\''))
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Character( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character), ROGUE_ARG(((RogueStringBuilder__get__Int32( ROGUE_ARG(THIS->buffer), 0 )))) ))));
  }
  else
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) ))));
  }
}

RogueLogical RogueTokenizer__add_new_token__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM79( 11, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column) ))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Character( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueCharacter value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Character( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt64 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int32( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt32 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int32( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Real64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueReal64 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Real64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_String( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueString* value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM80( 16, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 ))) );
  return (RogueLogical)(true);
}

void RogueTokenizer__configure_token_types( RogueClassTokenizer* THIS )
{
  if (!!(RogueTokenType_lookup))
  {
    return;
  }
  RogueTokenType_lookup = ((RogueTable_String_TokenType___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TokenType_*,ROGUE_CREATE_OBJECT(Table_String_TokenType_))) )));
  RogueTokenType_directive_define = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[95] )))))))) )));
  RogueTokenType_directive_include = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[96] )))))))) )));
  RogueTokenType_directive_includeNativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[97] )))))))) )));
  RogueTokenType_directive_includeNativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[98] )))))))) )));
  RogueTokenType_directive_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[99] )))))))) )));
  RogueTokenType_directive_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[100] )))))))) )));
  RogueTokenType_directive_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[101] )))))))) )));
  RogueTokenType_directive_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[102] )))))))) )));
  RogueTokenType_directive_requisite = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[103] )))))))) )));
  RogueTokenType_directive_module = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[104] )))))))) )));
  RogueTokenType_directive_using = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[105] )))))))) )));
  RogueTokenType_placeholder_id = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[106] )))) )));
  RogueTokenType_eol = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueClassTokenType*)((RogueClassEOLTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassEOLTokenType*,ROGUE_CREATE_OBJECT(EOLTokenType)))), Rogue_literal_strings[107] ))))))) )))) )));
  RogueTokenType_eoi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[108] ))))))) )))) )));
  RogueTokenType_begin_augment_tokens = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[109] ))))))) )))) )));
  RogueTokenType_keyword_augment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[110] ))))))) )))) )));
  RogueTokenType_keyword_case = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[111] )))))))) )));
  RogueTokenType_keyword_catch = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[112] )))))))) )));
  RogueTokenType_keyword_CLASS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[113] ))))))) )))) )));
  RogueTokenType_keyword_class = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[114] ))))))) )))) )));
  RogueTokenType_keyword_DEFINITIONS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[115] ))))))) )))) )));
  RogueTokenType_keyword_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[116] )))))))) )));
  RogueTokenType_keyword_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[117] )))))))) )));
  RogueTokenType_keyword_endAugment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[118] ))))))) )))) )));
  RogueTokenType_keyword_endBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[119] )))))))) )));
  RogueTokenType_keyword_endClass = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[120] ))))))) )))) )));
  RogueTokenType_keyword_endContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[121] )))))))) )));
  RogueTokenType_keyword_endForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[122] )))))))) )));
  RogueTokenType_keyword_endFunction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[123] )))))))) )));
  RogueTokenType_keyword_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[124] )))))))) )));
  RogueTokenType_keyword_endLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[125] )))))))) )));
  RogueTokenType_keyword_endRoutine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[126] ))))))) )))) )));
  RogueTokenType_keyword_endTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[127] )))))))) )));
  RogueTokenType_keyword_endUnitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[128] )))))))) )));
  RogueTokenType_keyword_endWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[129] )))))))) )));
  RogueTokenType_keyword_endWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[130] )))))))) )));
  RogueTokenType_keyword_ENUMERATE = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[131] ))))))) )))) )));
  RogueTokenType_keyword_GLOBAL = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[132] ))))))) )))) )));
  RogueTokenType_keyword_method = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[133] ))))))) )))) )));
  RogueTokenType_keyword_METHODS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[134] ))))))) )))) )));
  RogueTokenType_keyword_others = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[135] )))))))) )));
  RogueTokenType_keyword_PROPERTIES = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[136] ))))))) )))) )));
  RogueTokenType_keyword_routine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[137] ))))))) )))) )));
  RogueTokenType_keyword_satisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[138] )))))))) )));
  RogueTokenType_keyword_unsatisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[139] )))))))) )));
  RogueTokenType_keyword_with = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[140] )))))))) )));
  RogueTokenType_symbol_close_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[141] )))))))) )));
  RogueTokenType_symbol_close_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[49] )))))))) )));
  RogueTokenType_symbol_close_comment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[142] )))))))) )));
  RogueTokenType_symbol_close_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[32] )))))))) )));
  RogueTokenType_symbol_close_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[143] )))))))) )));
  RogueTokenType_keyword_assert = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[144] )))) )));
  RogueTokenType_keyword_await = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[145] )))) )));
  RogueTokenType_keyword_block = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[146] )))) )));
  RogueTokenType_keyword_contingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[147] )))) )));
  RogueTokenType_keyword_ensure = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[148] )))) )));
  RogueTokenType_keyword_escapeBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[149] )))) )));
  RogueTokenType_keyword_escapeContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[150] )))) )));
  RogueTokenType_keyword_escapeForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[151] )))) )));
  RogueTokenType_keyword_escapeIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[152] )))) )));
  RogueTokenType_keyword_escapeLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[153] )))) )));
  RogueTokenType_keyword_escapeTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[154] )))) )));
  RogueTokenType_keyword_escapeWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[155] )))) )));
  RogueTokenType_keyword_escapeWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[156] )))) )));
  RogueTokenType_keyword_forEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[157] )))) )));
  RogueTokenType_keyword_function = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[158] )))) )));
  RogueTokenType_keyword_global = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[159] )))) )));
  RogueTokenType_keyword_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[160] )))) )));
  RogueTokenType_keyword_in = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[161] )))) )));
  RogueTokenType_keyword_is = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[162] )))) )));
  RogueTokenType_keyword_isNot = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[163] )))) )));
  RogueTokenType_keyword_isReference = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[164] )))) )));
  RogueTokenType_keyword_local = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[165] )))) )));
  RogueTokenType_keyword_loop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[166] )))) )));
  RogueTokenType_keyword_native = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[167] )))) )));
  RogueTokenType_keyword_nativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[168] )))))))) )));
  RogueTokenType_keyword_nativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[169] )))))))) )));
  RogueTokenType_keyword_necessary = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[170] )))) )));
  RogueTokenType_keyword_nextIteration = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[171] )))) )));
  RogueTokenType_keyword_noAction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[172] )))) )));
  RogueTokenType_keyword_null = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[1] )))) )));
  RogueTokenType_keyword_of = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[173] )))) )));
  RogueTokenType_keyword_require = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[174] )))) )));
  RogueTokenType_keyword_return = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[175] )))) )));
  RogueTokenType_keyword_select = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[176] )))) )));
  RogueTokenType_keyword_step = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[177] )))) )));
  RogueTokenType_keyword_sufficient = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[178] )))) )));
  RogueTokenType_keyword_throw = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[179] )))) )));
  RogueTokenType_keyword_trace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[180] )))) )));
  RogueTokenType_keyword_trace_position = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[181] )))) )));
  RogueTokenType_keyword_try = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[182] )))) )));
  RogueTokenType_keyword_unitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[183] )))) )));
  RogueTokenType_keyword_which = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[184] )))) )));
  RogueTokenType_keyword_while = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[185] )))) )));
  RogueTokenType_keyword_yield = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[186] )))) )));
  RogueTokenType_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[187] )));
  RogueTokenType_type_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[188] )));
  RogueTokenType_literal_character = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[60] )));
  RogueTokenType_literal_integer = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[59] )));
  RogueTokenType_literal_long = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[58] )));
  RogueTokenType_literal_real = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[56] )));
  RogueTokenType_literal_string = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[64] )));
  RogueTokenType_keyword_and = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[189] )))) )));
  RogueTokenType_keyword_as = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[190] )))) )));
  RogueTokenType_keyword_downTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[191] )))) )));
  RogueTokenType_keyword_false = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[192] )))) )));
  RogueTokenType_keyword_instanceOf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[193] )))) )));
  RogueTokenType_keyword_infinity = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[194] )))) )));
  RogueTokenType_keyword_meta = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[195] )))) )));
  RogueTokenType_keyword_NaN = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[196] )))) )));
  RogueTokenType_keyword_not = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[197] )))) )));
  RogueTokenType_keyword_notInstanceOf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[198] )))) )));
  RogueTokenType_keyword_or = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[199] )))) )));
  RogueTokenType_keyword_pi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[200] )))) )));
  RogueTokenType_keyword_prior = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[201] )))) )));
  RogueTokenType_keyword_this = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[202] )))) )));
  RogueTokenType_keyword_true = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[203] )))) )));
  RogueTokenType_keyword_xor = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[204] )))) )));
  RogueTokenType_symbol_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[205] )))) )));
  RogueTokenType_symbol_ampersand_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[206] )))))))) )));
  RogueTokenType_symbol_double_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[207] )))) )));
  RogueTokenType_symbol_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[208] )))) )));
  RogueTokenType_symbol_at = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[209] )))) )));
  RogueTokenType_symbol_at_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[210] )))) )));
  RogueTokenType_symbol_at_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[211] )))) )));
  RogueTokenType_symbol_backslash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[212] )))) )));
  RogueTokenType_symbol_caret = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[213] )))) )));
  RogueTokenType_symbol_caret_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[214] )))))))) )));
  RogueTokenType_symbol_colon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[215] )))) )));
  RogueTokenType_symbol_comma = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[5] )))) )));
  RogueTokenType_symbol_compare = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[216] )))) )));
  RogueTokenType_symbol_dot = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[76] )))) )));
  RogueTokenType_symbol_dot_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[217] )))))))) )));
  RogueTokenType_symbol_downToGreaterThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[218] )))) )));
  RogueTokenType_symbol_empty_braces = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[219] )))) )));
  RogueTokenType_symbol_empty_brackets = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[220] )))) )));
  RogueTokenType_symbol_eq = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[221] )))) )));
  RogueTokenType_symbol_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[222] )))) )));
  RogueTokenType_symbol_exclamation_point = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[223] )))) )));
  RogueTokenType_symbol_fat_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[224] )))) )));
  RogueTokenType_symbol_ge = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[225] )))) )));
  RogueTokenType_symbol_gt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[226] )))) )));
  RogueTokenType_symbol_le = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[227] )))) )));
  RogueTokenType_symbol_lt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[228] )))) )));
  RogueTokenType_symbol_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[229] )))) )));
  RogueTokenType_symbol_minus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[230] )))))))) )));
  RogueTokenType_symbol_minus_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[3] )))) )));
  RogueTokenType_symbol_ne = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[231] )))) )));
  RogueTokenType_symbol_open_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[232] )))) )));
  RogueTokenType_symbol_open_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[233] )))) )));
  RogueTokenType_symbol_open_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[92] )))) )));
  RogueTokenType_symbol_open_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[234] )))) )));
  RogueTokenType_symbol_percent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[235] )))) )));
  RogueTokenType_symbol_percent_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[236] )))))))) )));
  RogueTokenType_symbol_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[237] )))) )));
  RogueTokenType_symbol_plus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[238] )))))))) )));
  RogueTokenType_symbol_plus_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[239] )))) )));
  RogueTokenType_symbol_question_mark = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[240] )))) )));
  RogueTokenType_symbol_semicolon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[241] )))) )))) )));
  RogueTokenType_symbol_shift_left = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[242] )))) )));
  RogueTokenType_symbol_shift_right = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[243] )))) )));
  RogueTokenType_symbol_shift_right_x = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[244] )))) )));
  RogueTokenType_symbol_slash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[73] )))) )));
  RogueTokenType_symbol_slash_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[245] )))))))) )));
  RogueTokenType_symbol_tilde = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[246] )))) )));
  RogueTokenType_symbol_tilde_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[247] )))))))) )));
  RogueTokenType_symbol_times = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[248] )))) )));
  RogueTokenType_symbol_times_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[249] )))))))) )));
  RogueTokenType_symbol_upTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[250] )))) )));
  RogueTokenType_symbol_upToLessThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[251] )))) )));
  RogueTokenType_symbol_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[252] )))) )));
  RogueTokenType_symbol_vertical_bar_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[253] )))))))) )));
  RogueTokenType_symbol_double_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[254] )))) )));
}

RogueLogical RogueTokenizer__consume__Character( RogueClassTokenizer* THIS, RogueCharacter ch_0 )
{
  if (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__consume__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_id__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  return (RogueLogical)(((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_spaces( RogueClassTokenizer* THIS )
{
  if (!(((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' )))))
  {
    return (RogueLogical)(false);
  }
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
  {
  }
  return (RogueLogical)(true);
}

RogueClassTokenType* RogueTokenizer__define__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueTable_String_TokenType___set__String_TokenType( ROGUE_ARG(RogueTokenType_lookup), ROGUE_ARG(type_0->name), type_0 );
  return (RogueClassTokenType*)(type_0);
}

RogueClassRogueError* RogueTokenizer__error__String( RogueClassTokenizer* THIS, RogueString* message_0 )
{
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader->line), ROGUE_ARG(THIS->reader->column) ))));
}

RogueClassTokenType* Rogue_Tokenizer__get_symbol_token_type( RogueClassTokenizer* THIS )
{
  RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)'!')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ne);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_exclamation_point);
    }
  }
  else if (ch_0 == (RogueCharacter)'$')
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[274] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_define) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[275] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_include) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[276] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_includeNativeCode) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[277] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_includeNativeHeader) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[160] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_if) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[117] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_elseIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[116] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_else) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[124] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[278] ))))
      {
        RogueTokenizer__scan_requisite_directive( ROGUE_ARG(THIS) );
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else
      {
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[279], id_1 )))) );
      }
    }
    return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
  }
  else if (ch_0 == (RogueCharacter)'%')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent);
    }
  }
  else if (ch_0 == (RogueCharacter)'&')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'&' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_ampersand);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand);
    }
  }
  else if (ch_0 == (RogueCharacter)'(')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_paren);
  }
  else if (ch_0 == (RogueCharacter)')')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_paren);
  }
  else if (ch_0 == (RogueCharacter)'*')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_times_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_times);
    }
  }
  else if (ch_0 == (RogueCharacter)'+')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_plus);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus);
    }
  }
  else if (ch_0 == (RogueCharacter)',')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_comma);
  }
  else if (ch_0 == (RogueCharacter)'-')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_minus);
    }
    else if ((((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 0 ))) == (RogueCharacter)'>' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'>'))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_arrow);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
  }
  else if (ch_0 == (RogueCharacter)'.')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
    {
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
      {
        while (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
        {
        }
        if (!(((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)10 )))))
        {
          ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[280] ))));
        }
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_upToLessThan);
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_downToGreaterThan);
      }
      else
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_upTo);
      }
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot);
    }
  }
  else if (ch_0 == (RogueCharacter)'/')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash);
    }
  }
  else if (ch_0 == (RogueCharacter)':')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)':' ))))
    {
      RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[94], ROGUE_ARG(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))) )))) );
      return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
    }
    if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[281] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_left);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[282] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[283] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right_x);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_colon);
  }
  else if (ch_0 == (RogueCharacter)';')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_semicolon);
  }
  else if (ch_0 == (RogueCharacter)'<')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_open_specialize);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_le);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_compare);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_lt);
    }
  }
  else if (ch_0 == (RogueCharacter)'=')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_eq);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_fat_arrow);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_equals);
    }
  }
  else if (ch_0 == (RogueCharacter)'>')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ge);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_specialize);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_gt);
    }
  }
  else if (ch_0 == (RogueCharacter)'?')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_question_mark);
  }
  else if (ch_0 == (RogueCharacter)'@')
  {
    if (((RogueTokenizer__consume_id__String( ROGUE_ARG(THIS), Rogue_literal_strings[180] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_keyword_trace_position);
    }
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_brace);
    }
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_bracket);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_at);
  }
  else if (ch_0 == (RogueCharacter)'[')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_brackets);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_bracket);
  }
  else if (ch_0 == (RogueCharacter)'\\')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_backslash);
  }
  else if (ch_0 == (RogueCharacter)']')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_bracket);
  }
  else if (ch_0 == (RogueCharacter)'^')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret);
    }
  }
  else if (ch_0 == (RogueCharacter)'{')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'}' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_braces);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_brace);
  }
  else if (ch_0 == (RogueCharacter)'|')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_vertical_bar);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar);
    }
  }
  else if (ch_0 == (RogueCharacter)'}')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_comment);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_brace);
    }
  }
  else if (ch_0 == (RogueCharacter)'~')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde);
    }
  }
  else
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[284], ch_0 )))), Rogue_literal_strings[43] )))) ))));
  }
}

RogueLogical RogueTokenizer__next_is_hex_digit( RogueClassTokenizer* THIS )
{
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  return (RogueLogical)((((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9') || (ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'f')) || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'F')));
}

void RogueTokenizer__read_character( RogueClassTokenizer* THIS )
{
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[260] ))));
  }
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)10)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[261] ))));
  }
  if (ch_0 == (RogueCharacter)'\\')
  {
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[262] ))));
    }
    RogueInt32 value_1 = 0;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'b' ))))
    {
      value_1 = ((RogueInt32)8);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'f' ))))
    {
      value_1 = ((RogueInt32)12);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'n' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)10)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'r' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)13)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'t' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)9)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'v' ))))
    {
      value_1 = ((RogueInt32)11);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'0' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)0)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'/' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'/')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\'')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\\' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\\')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'"')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'x' ))))
    {
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 2, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'u' ))))
    {
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 4, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      RogueTokenizer__read_hex_sequence( ROGUE_ARG(THIS) );
      return;
    }
    else
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[266], Rogue_literal_strings[267] )))), Rogue_literal_strings[268] )))) ))));
    }
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_1))), true );
  }
  else
  {
    RogueInt32 value_2 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
    if ((value_2 & 128) != 0)
    {
      RogueInt32 ch2_3 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
      if ((value_2 & 32) == 0)
      {
        value_2 = ((RogueInt32)(value_2 & 31));
        ch2_3 = ((RogueInt32)(value_2 & 63));
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(((value_2 << 6) | ch2_3)))), true );
      }
      else
      {
        RogueInt32 ch3_4 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
        value_2 = ((RogueInt32)(value_2 & 15));
        ch2_3 = ((RogueInt32)(ch2_3 & 63));
        ch3_4 = ((RogueInt32)(ch3_4 & 63));
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)((((value_2 << 2) | (ch2_3 << 6)) | ch3_4)))), true );
      }
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_2))), true );
    }
  }
}

RogueInt32 RogueTokenizer__read_hex_value__Int32_Logical( RogueClassTokenizer* THIS, RogueInt32 digits_0, RogueLogical variable_length_1 )
{
  RogueInt32 value_2 = (0);
  RogueInt32 i_3 = (1);
  while (i_3 <= digits_0)
  {
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], digits_0 )))), Rogue_literal_strings[263] )))) ))));
    }
    if (!(((RogueTokenizer__next_is_hex_digit( ROGUE_ARG(THIS) )))))
    {
      if (variable_length_1)
      {
        return (RogueInt32)(value_2);
      }
      RogueCharacter ch_4 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,error_buffer_5,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      RogueStringBuilder__print__String( error_buffer_5, Rogue_literal_strings[264] );
      if ((ch_4 < (RogueCharacter)' ' || ((RogueInt32)(ch_4)) == 127))
      {
        RogueStringBuilder__print__Int32( error_buffer_5, ROGUE_ARG(((RogueInt32)(ch_4))) );
      }
      else
      {
        RogueStringBuilder__print__String( error_buffer_5, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[81], ch_4 )))), Rogue_literal_strings[81] )))) );
      }
      RogueStringBuilder__print__Character_Logical( error_buffer_5, (RogueCharacter)'.', true );
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( error_buffer_5 )))) ))));
    }
    RogueInt32 intval_6 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), 16 ))));
    value_2 = ((RogueInt32)((value_2 << 4) + intval_6));
    ++i_3;
  }
  return (RogueInt32)(value_2);
}

void RogueTokenizer__read_hex_sequence( RogueClassTokenizer* THIS )
{
  RogueLogical first_0 = (true);
  while ((first_0 || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)',' )))))
  {
    first_0 = ((RogueLogical)false);
    RogueCharacter ch_1 = (((RogueCharacter)(((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 6, true ))))));
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
  }
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
  {
    return;
  }
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[265] ))));
}

RogueString* RogueTokenizer__read_identifier( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while (((((ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'z') || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'Z')) || (ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9')) || ch_0 == (RogueCharacter)'_'))
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    while ((ch_0 == (RogueCharacter)':' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)':'))
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[94] );
      ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    }
  }
  if (THIS->buffer->count == 0)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[255] ))));
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueLogical RogueTokenizer__tokenize_alternate_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      if (ch_1 == terminator_0)
      {
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
        if (ch_1 == terminator_0)
        {
          RogueParseReader__read( ROGUE_ARG(THIS->reader) );
          return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(0))) ))));
        }
        else
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), terminator_0, true );
        }
      }
      else
      {
        RogueTokenizer__read_character( ROGUE_ARG(THIS) );
      }
    }
  }
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[269] ))));
}

RogueLogical RogueTokenizer__tokenize_another( RogueClassTokenizer* THIS )
{
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  THIS->next_filepath = THIS->filepath;
  THIS->next_line = THIS->reader->line;
  THIS->next_column = THIS->reader->column;
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)10)
  {
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
  }
  if ((((RogueCharacter__is_letter( ch_0 ))) || ch_0 == (RogueCharacter)'_'))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,keyword_type_2,(((RogueTable_String_TokenType___get__String( ROGUE_ARG(RogueTokenType_lookup), id_1 )))));
    if (!!(keyword_type_2))
    {
      if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeCode))
      {
        return (RogueLogical)(((RogueTokenizer__scan_native_code( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeHeader))
      {
        return (RogueLogical)(((RogueTokenizer__scan_native_header( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_directive_requisite))
      {
        return (RogueLogical)(((RogueTokenizer__scan_requisite_directive( ROGUE_ARG(THIS) ))));
      }
      else
      {
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), keyword_type_2 ))));
      }
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), id_1 ))));
    }
    return (RogueLogical)(true);
  }
  else if (ch_0 == (RogueCharacter)'\'')
  {
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'\'')
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      return (RogueLogical)(((RogueTokenizer__tokenize_alternate_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
  }
  else if (ch_0 == (RogueCharacter)'"')
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))));
  }
  else if (ch_0 == (RogueCharacter)'#')
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_comment( ROGUE_ARG(THIS) ))));
  }
  else if ((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9'))
  {
    switch (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))))
    {
      case (RogueCharacter)'b':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 2 ))));
        break;
      }
      case (RogueCharacter)'c':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 8 ))));
        break;
      }
      case (RogueCharacter)'x':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 16 ))));
        break;
      }
      default:
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
  }
  else if ((ch_0 == (RogueCharacter)'@' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'|'))
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_verbatim_string( ROGUE_ARG(THIS) ))));
  }
  else
  {
    if (ch_0 == (RogueCharacter)'.')
    {
      RogueCharacter next_3 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      if ((next_3 >= (RogueCharacter)'0' && next_3 <= (RogueCharacter)'9'))
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,token_type_4,(((Rogue_Tokenizer__get_symbol_token_type( ROGUE_ARG(THIS) )))));
    if (((void*)token_type_4) == ((void*)NULL))
    {
      return (RogueLogical)(true);
    }
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), token_type_4 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,name_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[81] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ch_0 )))) )))), Rogue_literal_strings[81] )))) )))));
  if (ch_0 == ((RogueCharacter)(10)))
  {
    name_5 = ((RogueString*)Rogue_literal_strings[285]);
  }
  else if ((ch_0 < ((RogueCharacter)(32)) || ch_0 > ((RogueCharacter)(126))))
  {
    name_5 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[286] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(ch_0))) )))) )))), Rogue_literal_strings[32] )))) ))));
  }
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[287] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_5 )))) )))), Rogue_literal_strings[76] )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_comment( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
  {
    RogueInt32 nesting_count_0 = (1);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      RogueCharacter ch_1 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
      switch (ch_1)
      {
        case (RogueCharacter)'#':
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'{', true );
            ++nesting_count_0;
          }
          break;
        }
        case (RogueCharacter)'}':
        {
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
          {
            --nesting_count_0;
            if (nesting_count_0 == 0)
            {
              goto _auto_2832;
            }
            else
            {
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
            }
          }
          else
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
          }
          break;
        }
        default:
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
        }
      }
    }
    _auto_2832:;
  }
  else
  {
    while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && ((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != (RogueCharacter)10))
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
  }
  if ((!!(THIS->tokens->count) && ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) == ((void*)RogueTokenType_eol)))
  {
    ((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) )));
  }
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__tokenize_integer_in_base__Int32( RogueClassTokenizer* THIS, RogueInt32 base_0 )
{
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueInt32 count_1 = (0);
  RogueInt64 n_2 = (((RogueInt64)(0)));
  RogueInt32 digit_3 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && digit_3 != -1))
  {
    if (digit_3 >= base_0)
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[271], base_0 )))), Rogue_literal_strings[76] )))) ))));
    }
    ++count_1;
    n_2 = ((RogueInt64)((n_2 * ((RogueInt64)(base_0))) + ((RogueInt64)(digit_3))));
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    digit_3 = ((RogueInt32)((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  }
  if (count_1 == 0)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[272] ))));
  }
  if ((((base_0 == 2 && count_1 > 32) || (base_0 == 8 && count_1 > 11)) || (base_0 == 16 && count_1 > 8)))
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_2 ))));
  }
  else
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), n_2 ))));
  }
}

RogueLogical RogueTokenizer__tokenize_number( RogueClassTokenizer* THIS )
{
  RogueLogical is_negative_0 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
  RogueInt32 i_1 = (0);
  while ((((RogueParseReader__has_another__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) ))) && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 )))), 10 )))))
  {
    ++i_1;
  }
  RogueCharacter ch_2 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 ))));
  RogueLogical is_real_3 = ((((ch_2 == (RogueCharacter)'.' && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) )))), 10 )))) || ch_2 == (RogueCharacter)'e') || ch_2 == (RogueCharacter)'E'));
  if (is_real_3)
  {
    RogueReal64 n_4 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
    ch_2 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    if (ch_2 == (RogueCharacter)'.')
    {
      ch_2 = ((RogueCharacter)((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      if ((ch_2 >= (RogueCharacter)'0' && ch_2 <= (RogueCharacter)'9'))
      {
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        RogueInt32 start_pos_5 = (THIS->reader->position);
        RogueReal64 fraction_6 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
        n_4 += (fraction_6 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)((THIS->reader->position - start_pos_5))))));
      }
      else if (ch_2 == (RogueCharacter)'.')
      {
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else if ((((ch_2 >= (RogueCharacter)'a' && ch_2 <= (RogueCharacter)'z') || (ch_2 >= (RogueCharacter)'A' && ch_2 <= (RogueCharacter)'Z')) || ch_2 == (RogueCharacter)'_'))
      {
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else
      {
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
      }
    }
    if ((((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'E' ))) || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'e' )))))
    {
      RogueLogical negative_exponent_7 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
      if (!(negative_exponent_7))
      {
        RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' );
      }
      RogueReal64 power_8 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
      if (negative_exponent_7)
      {
        n_4 /= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
      else
      {
        n_4 *= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
    }
    if (is_negative_0)
    {
      n_4 = ((RogueReal64)(-(n_4)));
    }
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
  }
  else
  {
    RogueInt64 n_9 = (((RogueTokenizer__scan_long( ROGUE_ARG(THIS) ))));
    if (is_negative_0)
    {
      n_9 = ((RogueInt64)(-(n_9)));
    }
    if (n_9 == ((RogueInt64)(((RogueInt32)(n_9)))))
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_9))) ))));
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_9 ))));
    }
  }
}

RogueReal64 RogueTokenizer__scan_real( RogueClassTokenizer* THIS )
{
  RogueReal64 n_0 = (0.0);
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    RogueCharacter intval_2 = ((((RogueCharacter)(((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))))) - (RogueCharacter)'0'));
    n_0 = ((RogueReal64)((n_0 * 10.0) + ((RogueReal64)(intval_2))));
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  return (RogueReal64)(n_0);
}

RogueInt64 RogueTokenizer__scan_long( RogueClassTokenizer* THIS )
{
  RogueInt64 n_0 = (((RogueInt64)(0)));
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    RogueCharacter intval_2 = ((((RogueCharacter)(((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))))) - (RogueCharacter)'0'));
    n_0 = ((RogueInt64)((n_0 * ((RogueInt64)(10))) + ((RogueInt64)(intval_2))));
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  return (RogueInt64)(n_0);
}

RogueLogical RogueTokenizer__scan_native_code( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    RogueLogical found_end_1 = (false);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (THIS->reader->column == 1)
      {
        RogueInt32 spaces_2 = (0);
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[256] ))))
        {
          found_end_1 = ((RogueLogical)true);
          goto _auto_2833;
        }
        else
        {
          {
            RogueInt32 _auto_882_3 = (1);
            RogueInt32 _auto_883_4 = (spaces_2);
            for (;_auto_882_3 <= _auto_883_4;++_auto_882_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2833:;
    if (!(found_end_1))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[257] ))));
    }
  }
  else
  {
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2834;
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2834:;
  }
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_native_header( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    RogueLogical found_end_1 = (false);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (THIS->reader->column == 1)
      {
        RogueInt32 spaces_2 = (0);
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[258] ))))
        {
          found_end_1 = ((RogueLogical)true);
          goto _auto_2835;
        }
        else
        {
          {
            RogueInt32 _auto_884_3 = (1);
            RogueInt32 _auto_885_4 = (spaces_2);
            for (;_auto_884_3 <= _auto_885_4;++_auto_884_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2835:;
    if (!(found_end_1))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[259] ))));
    }
  }
  else
  {
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2836;
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2836:;
  }
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_requisite_directive( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
    {
      goto _auto_2837;
    }
    RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
  }
  _auto_2837:;
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite), ROGUE_ARG(((RogueString__trimmed( ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    if (ch_1 == terminator_0)
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), terminator_0 ))));
    }
    else
    {
      RogueTokenizer__read_character( ROGUE_ARG(THIS) );
    }
  }
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[270] ))));
}

RogueLogical RogueTokenizer__tokenize_verbatim_string( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
    if (ch_0 == ((RogueCharacter)(10)))
    {
      RogueTokenizer__consume_spaces( ROGUE_ARG(THIS) );
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
      }
      else
      {
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
      }
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
    }
  }
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[273] ))));
}

RogueClassPreprocessor* RoguePreprocessor__init_object( RogueClassPreprocessor* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPreprocessor*)(THIS);
}

RogueString* RoguePreprocessor__type_name( RogueClassPreprocessor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[816]);
}

RogueClassPreprocessor* RoguePreprocessor__init__Parser( RogueClassPreprocessor* THIS, RogueClassParser* _auto_895_0 )
{
  THIS->parser = _auto_895_0;
  return (RogueClassPreprocessor*)(THIS);
}

RogueToken_List* RoguePreprocessor__process__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_896_0 )
{
  THIS->tokens = _auto_896_0;
  THIS->reader = ((RoguePreprocessorTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessorTokenReader*,ROGUE_CREATE_OBJECT(PreprocessorTokenReader))), ROGUE_ARG(THIS->tokens) )));
  THIS->tokens = ((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(((RogueInt32)((((RogueReal64)(THIS->tokens->count)) * 1.1)))) )));
  RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), true, 0, false );
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RoguePreprocessor__consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) != ((void*)type_0))
  {
    return (RogueLogical)(false);
  }
  RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

void RoguePreprocessor__process__Logical_Int32_Logical( RogueClassPreprocessor* THIS, RogueLogical keep_tokens_0, RogueInt32 depth_1, RogueLogical stop_on_eol_2 )
{
  ++depth_1;
  while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((RogueToken__is_directive( t_3 ))))
    {
      if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_define))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,defined_word_4,(((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )))));
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,defined_tokens_5,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
        while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_6,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
          if (((void*)def_t_6->_type) == ((void*)RogueTokenType_eol))
          {
            goto _auto_2838;
          }
          RogueToken_List__add__Token( defined_tokens_5, def_t_6 );
        }
        _auto_2838:;
        if (keep_tokens_0)
        {
          RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), defined_word_4, defined_tokens_5 );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_include))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_7,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        if (keep_tokens_0)
        {
          if (((void*)filepath_t_7->_type) != ((void*)RogueTokenType_literal_string))
          {
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[82] ))));
          }
          RogueRogueC__include_source__Token_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM71( 2, filepath_t_7 ))) );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_includeNativeCode))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_8,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        if (keep_tokens_0)
        {
          if (((void*)filepath_t_8->_type) != ((void*)RogueTokenType_literal_string))
          {
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[82] ))));
          }
          RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM71( 2, filepath_t_8 ))), Rogue_literal_strings[86] );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_includeNativeHeader))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_9,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        if (keep_tokens_0)
        {
          if (((void*)filepath_t_9->_type) != ((void*)RogueTokenType_literal_string))
          {
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[82] ))));
          }
          RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM71( 2, filepath_t_9 ))), Rogue_literal_strings[85] );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_elseIf))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[87] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_else))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[88] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_endIf))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[89] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_if))
      {
        RogueLogical found_true_10 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
        RogueLogical single_line_11 = (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), ROGUE_ARG(RogueTokenType_eol) )))));
        if (found_true_10)
        {
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
        }
        else
        {
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
        }
        while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_elseIf))
        {
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          RogueLogical value_12 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
          if (found_true_10)
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
          }
          else
          {
            found_true_10 = ((RogueLogical)value_12);
            if (value_12)
            {
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
            }
            else
            {
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
            }
          }
        }
        if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_else))
        {
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          if (found_true_10)
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
          }
          else
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
          }
        }
        if (!(single_line_11))
        {
          RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_module))
      {
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))) );
        }
        THIS->cur_module = ((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )));
        continue;
      }
    }
    if ((((void*)t_3->_type) == ((void*)RogueTokenType_keyword_class) || ((void*)t_3->_type) == ((void*)RogueTokenType_keyword_routine)))
    {
      if ((!!(THIS->cur_module) && ((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_identifier)))
      {
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
        }
        t_3 = ((RogueClassToken*)((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,class_name_13,((call_ROGUEM71( 2, t_3 ))));
        RogueProgram__add_module_id__String_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->cur_module), class_name_13 );
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM81( 18, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->cur_module) )))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], class_name_13 )))) )))) )))) ))) );
        }
        continue;
      }
    }
    if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
    {
      while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_literal_string))
      {
        t_3 = ((RogueClassToken*)(call_ROGUEM81( 18, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((call_ROGUEM71( 2, t_3 ))), ROGUE_ARG((call_ROGUEM71( 2, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) )))) )));
      }
    }
    if (keep_tokens_0)
    {
      RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
    }
    if ((stop_on_eol_2 && ((void*)t_3->_type) == ((void*)RogueTokenType_eol)))
    {
      return;
    }
  }
}

void RoguePreprocessor__must_consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,message_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[90] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[43] )))) )))));
  if (!(((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_1, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_2->_type) != ((void*)type_0))
  {
    ROGUE_THROW(((RogueToken__error__String( t_2, message_1 ))));
  }
}

RogueLogical RoguePreprocessor__parse_logical_expression( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or( ROGUE_ARG(THIS) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) ))) || lhs_0)) ))));
  }
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_and( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_and__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) ))) && lhs_0)) ))));
  }
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_term( RogueClassPreprocessor* THIS )
{
  for (;;)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
    {
      return (RogueLogical)(!(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))));
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueLogical result_1 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
      RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) );
      return (RogueLogical)(result_1);
    }
    if (((void*)t_0->_type) == ((void*)RogueTokenType_literal_string))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,target_2,((call_ROGUEM71( 2, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))));
      return (RogueLogical)(((RogueTable_String_Logical___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->compile_targets), target_2 ))));
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
    {
      return (RogueLogical)(true);
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
    {
      return (RogueLogical)(false);
    }
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[91] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))))) )))) )))), Rogue_literal_strings[43] )))) )))) ))));
  }
}

RogueToken_List* RoguePreprocessor__reprocess__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_897_0 )
{
  THIS->tokens = _auto_897_0;
  ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_Token_*,rebuilder_1,(((RogueToken_List__rebuilder( ROGUE_ARG(THIS->tokens) )))));
  while (((RogueListRebuilder_Token___has_another( rebuilder_1 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueListRebuilder_Token___read( rebuilder_1 )))));
    while (((((void*)t_2->_type) == ((void*)RogueTokenType_literal_string) && ((RogueListRebuilder_Token___has_another( rebuilder_1 )))) && ((void*)((RogueListRebuilder_Token___peek__Int32( rebuilder_1, 0 )))->_type) == ((void*)RogueTokenType_literal_string)))
    {
      t_2 = ((RogueClassToken*)(call_ROGUEM81( 18, ROGUE_ARG(t_2->_type), t_2, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((call_ROGUEM71( 2, t_2 ))), ROGUE_ARG((call_ROGUEM71( 2, ROGUE_ARG(((RogueListRebuilder_Token___read( rebuilder_1 )))) ))) )))) )));
    }
    RogueListRebuilder_Token___write__Token( rebuilder_1, t_2 );
  }
  return (RogueToken_List*)(THIS->tokens);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init_object( RogueClassTable_String_Token_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init( RogueClassTable_String_Token_List_* THIS )
{
  RogueTable_String_Token_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueString* RogueTable_String_Token_List___to_String( RogueClassTable_String_Token_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Token_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Token_List___type_name( RogueClassTable_String_Token_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[814]);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init__Int32( RogueClassTable_String_Token_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Token_List__List__init__Int32_TableEntry_String_Token_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Token_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Token_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Token_List_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueClassTableEntry_String_Token_List_* RogueTable_String_Token_List___find__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_2,(((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Token_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Token_List_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Token_List_*)(((RogueClassTableEntry_String_Token_List_*)(NULL)));
}

RogueToken_List* RogueTable_String_Token_List___get__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueToken_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,default_value_2,0);
    return (RogueToken_List*)(default_value_2);
  }
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___set__String_Token_List( RogueClassTable_String_Token_List_* THIS, RogueString* key_0, RogueToken_List* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_4,(((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Token_List_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Token_List_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Token_List_*)((RogueTableEntry_String_Token_List___init__String_Token_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Token_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Token_List_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Token_List___print_to__StringBuilder( RogueClassTable_String_Token_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Token_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init_object( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueTableEntry_String_Token_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Token_List__List__to_String( RogueTableEntry_String_Token_List__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Token_List__List*,_auto_2858_2,(THIS));
    RogueInt32 _auto_2859_3 = (0);
    for (;_auto_2859_3 < _auto_2858_2->count;++_auto_2859_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,value_4,(((RogueClassTableEntry_String_Token_List_*)(_auto_2858_2->data->objects[_auto_2859_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Token_List___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Token_List__List__type_name( RogueTableEntry_String_Token_List__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[872]);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init__Int32( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Token_List_*), true );
  }
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init__Int32_TableEntry_String_Token_List_( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Token_List_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Token_List_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_890_3 = (initial_capacity_0);
      for (;i_2 <= _auto_890_3;++i_2)
      {
        RogueTableEntry_String_Token_List__List__add__TableEntry_String_Token_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__add__TableEntry_String_Token_List_( RogueTableEntry_String_Token_List__List* THIS, RogueClassTableEntry_String_Token_List_* value_0 )
{
  ((RogueTableEntry_String_Token_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Token_List__List__capacity( RogueTableEntry_String_Token_List__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__reserve__Int32( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Token_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Token_List__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Token_List_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init_object( RogueClassTableEntry_String_Token_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Token_List___to_String( RogueClassTableEntry_String_Token_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Token_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Token_List___type_name( RogueClassTableEntry_String_Token_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[757]);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init__String_Token_List_Int32( RogueClassTableEntry_String_Token_List_* THIS, RogueString* _key_0, RogueToken_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Token_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[922]);
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init_object( RogueClassPreprocessorTokenReader* THIS )
{
  THIS->queue = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueString* RoguePreprocessorTokenReader__type_name( RogueClassPreprocessorTokenReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[815]);
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init__Token_List( RogueClassPreprocessorTokenReader* THIS, RogueToken_List* _auto_894_0 )
{
  THIS->tokens = _auto_894_0;
  THIS->count = THIS->tokens->count;
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueClassError* RoguePreprocessorTokenReader__error__String( RogueClassPreprocessorTokenReader* THIS, RogueString* message_0 )
{
  if (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) )))), message_0 ))))));
  }
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

void RoguePreprocessorTokenReader__expand_definition__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(RoguePreprocessor_definitions), ROGUE_ARG((call_ROGUEM71( 2, t_0 ))) )))));
  if (!!(entry_1))
  {
    if (!!(entry_1->value))
    {
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,def_tokens_2,(entry_1->value));
      entry_1->value = ((RogueToken_List*)(NULL));
      {
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2886_3,(def_tokens_2));
        RogueInt32 _auto_2887_4 = ((_auto_2886_3->count - 1));
        for (;_auto_2887_4 >= 0;--_auto_2887_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_5,(((RogueClassToken*)(_auto_2886_3->data->objects[_auto_2887_4]))));
          if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
          {
            RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), def_t_5 );
          }
          else
          {
            RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
          }
        }
      }
      entry_1->value = def_tokens_2;
      return;
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 2, t_0 ))) )))) )))), Rogue_literal_strings[19] )))) )))) ))));
    }
  }
  else
  {
    RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
  }
}

RogueLogical RoguePreprocessorTokenReader__has_another( RogueClassPreprocessorTokenReader* THIS )
{
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG(THIS->queue->count) )));
}

RogueLogical RoguePreprocessorTokenReader__next_is__TokenType( RogueClassPreprocessorTokenReader* THIS, RogueClassTokenType* type_0 )
{
  if ((THIS->position == THIS->count && THIS->queue->count == 0))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))->_type) == ((void*)type_0));
}

RogueClassToken* RoguePreprocessorTokenReader__peek( RogueClassPreprocessorTokenReader* THIS )
{
  if (!!(THIS->queue->count))
  {
    return (RogueClassToken*)(((RogueToken_List__last( ROGUE_ARG(THIS->queue) ))));
  }
  return (RogueClassToken*)(((RoguePreprocessorTokenReader__peek__Int32( ROGUE_ARG(THIS), 0 ))));
}

RogueClassToken* RoguePreprocessorTokenReader__peek__Int32( RogueClassPreprocessorTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  if ((THIS->position + num_ahead_0) >= (THIS->count + THIS->queue->count))
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  while (THIS->queue->count <= num_ahead_0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))));
    ++THIS->position;
    if (((void*)t_1->_type) == ((void*)RogueTokenType_identifier))
    {
      RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), t_1 );
    }
    else
    {
      RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_1 );
    }
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->queue->data->objects[((THIS->queue->count - num_ahead_0) - 1)])));
}

void RoguePreprocessorTokenReader__push__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
}

RogueClassToken* RoguePreprocessorTokenReader__read( RogueClassPreprocessorTokenReader* THIS )
{
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  if (THIS->queue->count == 0)
  {
    ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[79] ))));
  }
  return (RogueClassToken*)(((RogueToken_List__remove_last( ROGUE_ARG(THIS->queue) ))));
}

RogueString* RoguePreprocessorTokenReader__read_identifier( RogueClassPreprocessorTokenReader* THIS )
{
  if (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[80] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM71( 16, ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
  return (RogueString*)((call_ROGUEM71( 2, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS) )))) )));
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init_object( RogueClassLiteralCharacterToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueString* RogueLiteralCharacterToken__to_String( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralCharacterToken__type_name( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[936]);
}

RogueCharacter RogueLiteralCharacterToken__to_Character( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueCharacter)(THIS->value);
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init__TokenType_Character( RogueClassLiteralCharacterToken* THIS, RogueClassTokenType* _auto_900_0, RogueCharacter _auto_901_1 )
{
  THIS->value = _auto_901_1;
  THIS->_type = _auto_900_0;
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init_object( RogueClassLiteralInt64Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueString* RogueLiteralInt64Token__to_String( RogueClassLiteralInt64Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt64Token__type_name( RogueClassLiteralInt64Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[937]);
}

RogueInt32 RogueLiteralInt64Token__to_Int32( RogueClassLiteralInt64Token* THIS )
{
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueInt64 RogueLiteralInt64Token__to_Int64( RogueClassLiteralInt64Token* THIS )
{
  return (RogueInt64)(THIS->value);
}

RogueReal64 RogueLiteralInt64Token__to_Real64( RogueClassLiteralInt64Token* THIS )
{
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init__TokenType_Int64( RogueClassLiteralInt64Token* THIS, RogueClassTokenType* _auto_902_0, RogueInt64 _auto_903_1 )
{
  THIS->value = _auto_903_1;
  THIS->_type = _auto_902_0;
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init_object( RogueClassLiteralInt32Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueString* RogueLiteralInt32Token__to_String( RogueClassLiteralInt32Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt32Token__type_name( RogueClassLiteralInt32Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[938]);
}

RogueInt32 RogueLiteralInt32Token__to_Int32( RogueClassLiteralInt32Token* THIS )
{
  return (RogueInt32)(THIS->value);
}

RogueReal64 RogueLiteralInt32Token__to_Real64( RogueClassLiteralInt32Token* THIS )
{
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init__TokenType_Int32( RogueClassLiteralInt32Token* THIS, RogueClassTokenType* _auto_904_0, RogueInt32 _auto_905_1 )
{
  THIS->value = _auto_905_1;
  THIS->_type = _auto_904_0;
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init_object( RogueClassLiteralReal64Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueString* RogueLiteralReal64Token__to_String( RogueClassLiteralReal64Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Real64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralReal64Token__type_name( RogueClassLiteralReal64Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[939]);
}

RogueInt32 RogueLiteralReal64Token__to_Int32( RogueClassLiteralReal64Token* THIS )
{
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueReal64 RogueLiteralReal64Token__to_Real64( RogueClassLiteralReal64Token* THIS )
{
  return (RogueReal64)(THIS->value);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init__TokenType_Real64( RogueClassLiteralReal64Token* THIS, RogueClassTokenType* _auto_906_0, RogueReal64 _auto_907_1 )
{
  THIS->value = _auto_907_1;
  THIS->_type = _auto_906_0;
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueClassStringDataToken* RogueStringDataToken__init_object( RogueClassStringDataToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassStringDataToken*)(THIS);
}

RogueString* RogueStringDataToken__to_String( RogueClassStringDataToken* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueStringDataToken__type_name( RogueClassStringDataToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[940]);
}

RogueString* RogueStringDataToken__quoted_name( RogueClassStringDataToken* THIS )
{
  if (((void*)THIS->_type) == ((void*)RogueTokenType_directive_requisite))
  {
    return (RogueString*)(Rogue_literal_strings[103]);
  }
  return (RogueString*)((RogueToken__quoted_name( ROGUE_ARG(((RogueClassToken*)THIS)) )));
}

RogueClassStringDataToken* RogueStringDataToken__init__TokenType_String( RogueClassStringDataToken* THIS, RogueClassTokenType* _auto_908_0, RogueString* _auto_909_1 )
{
  THIS->value = _auto_909_1;
  THIS->_type = _auto_908_0;
  return (RogueClassStringDataToken*)(THIS);
}

RogueClassEOLToken* RogueEOLToken__init_object( RogueClassEOLToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassEOLToken*)(THIS);
}

RogueString* RogueEOLToken__to_String( RogueClassEOLToken* THIS )
{
  if ((!!(THIS->comment) && !!(THIS->comment->character_count)))
  {
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[935] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->comment) )))) )))) ))));
  }
  return (RogueString*)(Rogue_literal_strings[285]);
}

RogueString* RogueEOLToken__type_name( RogueClassEOLToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[941]);
}

RogueClassEOLToken* RogueEOLToken__init__TokenType_String( RogueClassEOLToken* THIS, RogueClassTokenType* _auto_913_0, RogueString* _auto_914_1 )
{
  THIS->comment = _auto_914_1;
  THIS->_type = _auto_913_0;
  return (RogueClassEOLToken*)(THIS);
}

RogueClassEOLToken* RogueEOLToken__init__Token( RogueClassEOLToken* THIS, RogueClassToken* existing_0 )
{
  THIS->_type = RogueTokenType_eol;
  RogueToken__set_location__Token( ROGUE_ARG(((RogueClassToken*)THIS)), existing_0 );
  return (RogueClassEOLToken*)(THIS);
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init_object( RogueClassCmdLiteralLogical* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueString* RogueCmdLiteralLogical__type_name( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1186]);
}

RogueClassCmd* RogueCmdLiteralLogical__clone__CloneArgs( RogueClassCmdLiteralLogical* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralLogical__dispatch__Visitor( RogueClassCmdLiteralLogical* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralLogical__resolve__Scope( RogueClassCmdLiteralLogical* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralLogical__to_Logical( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralLogical__type( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->value)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[203] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[192] );
  }
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init__Token_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassToken* _auto_915_0, RogueLogical _auto_916_1 )
{
  THIS->value = _auto_916_1;
  THIS->t = _auto_915_0;
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueClassCmdLiteral* RogueCmdLiteral__init_object( RogueClassCmdLiteral* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdLiteral*)(THIS);
}

RogueString* RogueCmdLiteral__type_name( RogueClassCmdLiteral* THIS )
{
  return (RogueString*)(Rogue_literal_strings[953]);
}

void RogueCmdLiteral__dispatch__Visitor( RogueClassCmdLiteral* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdLiteral__implicit_type__Scope( RogueClassCmdLiteral* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)THIS)) )));
}

RogueLogical RogueCmdLiteral__is_literal( RogueClassCmdLiteral* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init_object( RogueClassCmdLiteralInt32* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueString* RogueCmdLiteralInt32__type_name( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1187]);
}

RogueClassCmd* RogueCmdLiteralInt32__cast_to__Type_Scope( RogueClassCmdLiteralInt32* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralInt32__clone__CloneArgs( RogueClassCmdLiteralInt32* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralInt32__dispatch__Visitor( RogueClassCmdLiteralInt32* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralInt32__resolve__Scope( RogueClassCmdLiteralInt32* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralInt32__to_Logical( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralInt32__type( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt32* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->value) );
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init__Token_Int32( RogueClassCmdLiteralInt32* THIS, RogueClassToken* _auto_917_0, RogueInt32 _auto_918_1 )
{
  THIS->value = _auto_918_1;
  THIS->t = _auto_917_0;
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueClassCloneArgs* RogueCloneArgs__init_object( RogueClassCloneArgs* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCloneArgs*)(THIS);
}

RogueString* RogueCloneArgs__type_name( RogueClassCloneArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[817]);
}

RogueClassCmdLabel* RogueCloneArgs__register_label__CmdLabel( RogueClassCloneArgs* THIS, RogueClassCmdLabel* label_0 )
{
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCmdAdd* RogueCmdAdd__init_object( RogueClassCmdAdd* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdAdd*)(THIS);
}

RogueString* RogueCmdAdd__type_name( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1210]);
}

RogueClassCmd* RogueCmdAdd__clone__CloneArgs( RogueClassCmdAdd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdAdd__combine_literal_operands__Type( RogueClassCmdAdd* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value + ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value + ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdAdd__dispatch__Visitor( RogueClassCmdAdd* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdAdd__fn_name( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1037]);
}

RogueClassCmd* RogueCmdAdd__resolve_operator_method__Scope_Type_Type( RogueClassCmdAdd* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if ((((void*)left_type_1) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((void*)right_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String)))
  {
    THIS->left = (call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), ROGUE_ARG(THIS->left) ))))))), scope_0 ));
    left_type_1 = ((RogueClassType*)(call_ROGUEM129( 31, ROGUE_ARG(THIS->left) )));
  }
  return (RogueClassCmd*)((RogueCmdBinary__resolve_operator_method__Scope_Type_Type( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0, left_type_1, right_type_2 )));
}

RogueString* RogueCmdAdd__symbol( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[237]);
}

RogueClassCmdBinary* RogueCmdBinary__init_object( RogueClassCmdBinary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdBinary*)(THIS);
}

RogueString* RogueCmdBinary__type_name( RogueClassCmdBinary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[954]);
}

void RogueCmdBinary__dispatch__Visitor( RogueClassCmdBinary* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdBinary__resolve__Scope( RogueClassCmdBinary* THIS, RogueClassScope* scope_0 )
{
  THIS->left = (call_ROGUEM120( 34, ROGUE_ARG(THIS->left), scope_0 ));
  THIS->right = (call_ROGUEM120( 34, ROGUE_ARG(THIS->right), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,left_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->left) ))), scope_0 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,right_type_2,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->right) ))), scope_0 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((call_ROGUEM391( 45, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  return (RogueClassCmd*)(result_3);
}

RogueClassType* Rogue_CmdBinary__type( RogueClassCmdBinary* THIS )
{
  return (RogueClassType*)(((RogueCmd__find_operation_result_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->left) ))), ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->right) ))) ))));
}

void RogueCmdBinary__write_cpp__CPPWriter_Logical( RogueClassCmdBinary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if ((call_ROGUEM390( 44, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
  }
  call_ROGUEM133( 41, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] )))), ROGUE_ARG((call_ROGUEM394( 49, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[580] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->right), writer_0, false );
  if ((call_ROGUEM390( 44, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdBinary* RogueCmdBinary__init__Token_Cmd_Cmd( RogueClassCmdBinary* THIS, RogueClassToken* _auto_919_0, RogueClassCmd* _auto_920_1, RogueClassCmd* _auto_921_2 )
{
  THIS->right = _auto_921_2;
  THIS->left = _auto_920_1;
  THIS->t = _auto_919_0;
  return (RogueClassCmdBinary*)(THIS);
}

RogueString* RogueCmdBinary__fn_name( RogueClassCmdBinary* THIS )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1011] )))) )))) ))));
}

RogueLogical RogueCmdBinary__requires_parens( RogueClassCmdBinary* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmdBinary__resolve_for_types__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,operator_method_call_3,((call_ROGUEM391( 47, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  if (!!(operator_method_call_3))
  {
    return (RogueClassCmd*)(operator_method_call_3);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  THIS->left = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->left), common_type_4, scope_0 ))), scope_0 ));
  THIS->right = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->right), common_type_4, scope_0 ))), scope_0 ));
  if (((call_ROGUEM126( 27, ROGUE_ARG(THIS->left) )) && (call_ROGUEM126( 27, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((call_ROGUEM123( 17, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  return (RogueClassCmd*)((call_ROGUEM392( 46, ROGUE_ARG(THIS), scope_0, common_type_4 )));
}

RogueClassCmd* RogueCmdBinary__resolve_for_common_type__Scope_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdBinary__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if (((RogueType__has_method_named__String( left_type_1, ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( left_type_1, ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(left_type_1->name) )))))), ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( right_type_2, ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(right_type_2->name) )))))), ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (!((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 ))))))
  {
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1012] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1013] )))) )))) ))));
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1014] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1015] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 43, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1016] )))) )))) ))));
    }
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
}

RogueString* RogueCmdBinary__symbol( RogueClassCmdBinary* THIS )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1097] )))) )))) ))));
}

RogueString* RogueCmdBinary__cpp_symbol( RogueClassCmdBinary* THIS )
{
  return (RogueString*)((call_ROGUEM394( 48, ROGUE_ARG(THIS) )));
}

RogueClassPropertyTable* RoguePropertyTable__init_object( RogueClassPropertyTable* THIS )
{
  RoguePropertyValue__init_object( ROGUE_ARG(((RogueClassPropertyValue*)THIS)) );
  return (RogueClassPropertyTable*)(THIS);
}

RogueClassPropertyTable* RoguePropertyTable__init( RogueClassPropertyTable* THIS )
{
  THIS->values = ((RogueTable_String_PropertyValue___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_PropertyValue_*,ROGUE_CREATE_OBJECT(Table_String_PropertyValue_))) )));
  return (RogueClassPropertyTable*)(THIS);
}

RogueString* RoguePropertyTable__to_String( RogueClassPropertyTable* THIS )
{
  return (RogueString*)(((RogueTable_String_PropertyValue___to_String( ROGUE_ARG(THIS->values) ))));
}

RogueString* RoguePropertyTable__type_name( RogueClassPropertyTable* THIS )
{
  return (RogueString*)(Rogue_literal_strings[307]);
}

RogueClassPropertyValue* RoguePropertyTable__get__String( RogueClassPropertyTable* THIS, RogueString* key_0 )
{
  return (RogueClassPropertyValue*)(((RogueTable_String_PropertyValue___get__String( ROGUE_ARG(THIS->values), key_0 ))));
}

RogueClassPropertyTable* RoguePropertyTable__set__String_PropertyValue( RogueClassPropertyTable* THIS, RogueString* key_0, RogueClassPropertyValue* new_value_1 )
{
  RogueTable_String_PropertyValue___set__String_PropertyValue( ROGUE_ARG(THIS->values), key_0, new_value_1 );
  return (RogueClassPropertyTable*)(THIS);
}

RogueClassPropertyValue* RoguePropertyValue__init_object( RogueClassPropertyValue* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPropertyValue*)(THIS);
}

RogueString* RoguePropertyValue__type_name( RogueClassPropertyValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[818]);
}

RogueClassPropertyValue* RoguePropertyValue__get__String( RogueClassPropertyValue* THIS, RogueString* key_0 )
{
  return (RogueClassPropertyValue*)(((RogueClassPropertyValue*)(NULL)));
}

RogueInt32 RoguePropertyValue__get_int32__String( RogueClassPropertyValue* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassPropertyValue*,value_1,((call_ROGUEM404( 17, ROGUE_ARG(THIS), key_0 ))));
  if (!(!!(value_1)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)((call_ROGUEM401( 50, value_1 )));
}

RogueString* RoguePropertyValue__get_string__String( RogueClassPropertyValue* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassPropertyValue*,value_1,((call_ROGUEM404( 17, ROGUE_ARG(THIS), key_0 ))));
  if (!(!!(value_1)))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)((call_ROGUEM5( 2, ((RogueObject*)value_1) )));
}

RogueInt32 RoguePropertyValue__to_Int32( RogueClassPropertyValue* THIS )
{
  return (RogueInt32)(0);
}

RogueClassTable_String_PropertyValue_* RogueTable_String_PropertyValue___init_object( RogueClassTable_String_PropertyValue_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_PropertyValue_*)(THIS);
}

RogueClassTable_String_PropertyValue_* RogueTable_String_PropertyValue___init( RogueClassTable_String_PropertyValue_* THIS )
{
  RogueTable_String_PropertyValue___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_PropertyValue_*)(THIS);
}

RogueString* RogueTable_String_PropertyValue___to_String( RogueClassTable_String_PropertyValue_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_PropertyValue___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_PropertyValue___type_name( RogueClassTable_String_PropertyValue_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[819]);
}

RogueClassTable_String_PropertyValue_* RogueTable_String_PropertyValue___init__Int32( RogueClassTable_String_PropertyValue_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_PropertyValue__List__init__Int32_TableEntry_String_PropertyValue_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_PropertyValue__List*,ROGUE_CREATE_OBJECT(TableEntry_String_PropertyValue__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_PropertyValue_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_PropertyValue_*)(THIS);
}

RogueClassTableEntry_String_PropertyValue_* RogueTable_String_PropertyValue___find__String( RogueClassTable_String_PropertyValue_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_PropertyValue_*,entry_2,(((RogueClassTableEntry_String_PropertyValue_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_PropertyValue_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_PropertyValue_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_PropertyValue_*)(((RogueClassTableEntry_String_PropertyValue_*)(NULL)));
}

RogueClassPropertyValue* RogueTable_String_PropertyValue___get__String( RogueClassTable_String_PropertyValue_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_PropertyValue_*,entry_1,(((RogueTable_String_PropertyValue___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassPropertyValue*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassPropertyValue*,default_value_2,0);
    return (RogueClassPropertyValue*)(default_value_2);
  }
}

RogueClassTable_String_PropertyValue_* RogueTable_String_PropertyValue___set__String_PropertyValue( RogueClassTable_String_PropertyValue_* THIS, RogueString* key_0, RogueClassPropertyValue* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_PropertyValue_*,entry_4,(((RogueClassTableEntry_String_PropertyValue_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_PropertyValue_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_PropertyValue_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_PropertyValue_*)((RogueTableEntry_String_PropertyValue___init__String_PropertyValue_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_PropertyValue_*,ROGUE_CREATE_OBJECT(TableEntry_String_PropertyValue_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_PropertyValue_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_PropertyValue_*)(THIS);
}

RogueStringBuilder* RogueTable_String_PropertyValue___print_to__StringBuilder( RogueClassTable_String_PropertyValue_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_PropertyValue___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__init_object( RogueTableEntry_String_PropertyValue__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__init( RogueTableEntry_String_PropertyValue__List* THIS )
{
  RogueTableEntry_String_PropertyValue__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueString* RogueTableEntry_String_PropertyValue__List__to_String( RogueTableEntry_String_PropertyValue__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_PropertyValue__List*,_auto_2922_2,(THIS));
    RogueInt32 _auto_2923_3 = (0);
    for (;_auto_2923_3 < _auto_2922_2->count;++_auto_2923_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_PropertyValue_*,value_4,(((RogueClassTableEntry_String_PropertyValue_*)(_auto_2922_2->data->objects[_auto_2923_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_PropertyValue___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_PropertyValue__List__type_name( RogueTableEntry_String_PropertyValue__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[873]);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__init__Int32( RogueTableEntry_String_PropertyValue__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_PropertyValue_*), true );
  }
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__init__Int32_TableEntry_String_PropertyValue_( RogueTableEntry_String_PropertyValue__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_PropertyValue_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_PropertyValue_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_926_3 = (initial_capacity_0);
      for (;i_2 <= _auto_926_3;++i_2)
      {
        RogueTableEntry_String_PropertyValue__List__add__TableEntry_String_PropertyValue_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__add__TableEntry_String_PropertyValue_( RogueTableEntry_String_PropertyValue__List* THIS, RogueClassTableEntry_String_PropertyValue_* value_0 )
{
  ((RogueTableEntry_String_PropertyValue__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_PropertyValue__List__capacity( RogueTableEntry_String_PropertyValue__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_PropertyValue__List* RogueTableEntry_String_PropertyValue__List__reserve__Int32( RogueTableEntry_String_PropertyValue__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_PropertyValue_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_PropertyValue__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_PropertyValue_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_PropertyValue__List*)(THIS);
}

RogueClassTableEntry_String_PropertyValue_* RogueTableEntry_String_PropertyValue___init_object( RogueClassTableEntry_String_PropertyValue_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_PropertyValue_*)(THIS);
}

RogueString* RogueTableEntry_String_PropertyValue___to_String( RogueClassTableEntry_String_PropertyValue_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_PropertyValue___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_PropertyValue___type_name( RogueClassTableEntry_String_PropertyValue_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[758]);
}

RogueClassTableEntry_String_PropertyValue_* RogueTableEntry_String_PropertyValue___init__String_PropertyValue_Int32( RogueClassTableEntry_String_PropertyValue_* THIS, RogueString* _key_0, RogueClassPropertyValue* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_PropertyValue_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_PropertyValue____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[923]);
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init_object( RogueClassCmdNativeHeader* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueString* RogueCmdNativeHeader__type_name( RogueClassCmdNativeHeader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[955]);
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__clone__CloneArgs( RogueClassCmdNativeHeader* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNativeHeader*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

void RogueCmdNativeHeader__dispatch__Visitor( RogueClassCmdNativeHeader* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueLogical RogueCmdNativeHeader__requires_semicolon( RogueClassCmdNativeHeader* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNativeHeader__resolve__Scope( RogueClassCmdNativeHeader* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->code))
  {
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) );
    }
    THIS->code = ((RogueString*)(NULL));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init__Token_String( RogueClassCmdNativeHeader* THIS, RogueClassToken* _auto_935_0, RogueString* _auto_936_1 )
{
  THIS->code = _auto_936_1;
  THIS->t = _auto_935_0;
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init_object( RogueClassCmdNativeCode* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueString* RogueCmdNativeCode__type_name( RogueClassCmdNativeCode* THIS )
{
  return (RogueString*)(Rogue_literal_strings[956]);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__clone__CloneArgs( RogueClassCmdNativeCode* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNativeCode*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

void RogueCmdNativeCode__dispatch__Visitor( RogueClassCmdNativeCode* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueLogical RogueCmdNativeCode__requires_semicolon( RogueClassCmdNativeCode* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNativeCode__resolve__Scope( RogueClassCmdNativeCode* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->code))
  {
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) );
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init__Token_String( RogueClassCmdNativeCode* THIS, RogueClassToken* _auto_937_0, RogueString* _auto_938_1 )
{
  THIS->code = _auto_938_1;
  THIS->t = _auto_937_0;
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init_object( RogueClassCmdIf* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdIf*)(THIS);
}

RogueString* RogueCmdIf__type_name( RogueClassCmdIf* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1176]);
}

RogueClassCmd* RogueCmdIf__clone__CloneArgs( RogueClassCmdIf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = end_section_3;
    RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), clone_args_0 ))) )))))))), next_section_2 );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2950_5,(THIS->statements));
      RogueInt32 _auto_2951_6 = (0);
      for (;_auto_2951_6 < _auto_2950_5->count;++_auto_2951_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_2950_5->data->objects[_auto_2951_6]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, next_section_2 );
    if (!!(THIS->else_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2952_8,(THIS->else_statements));
        RogueInt32 _auto_2953_9 = (0);
        for (;_auto_2953_9 < _auto_2952_8->count;++_auto_2953_9)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_2952_8->data->objects[_auto_2953_9]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_3 );
    if (end_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,result_4,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG(THIS->_control_type) )))));
    call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    result_4->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_4->else_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->else_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

void RogueCmdIf__dispatch__Visitor( RogueClassCmdIf* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdIf( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdIf__resolve__Scope( RogueClassCmdIf* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG(THIS->condition), scope_0 )));
  if (RogueObject_instance_of(THIS->condition,RogueTypeCmdLiteral))
  {
    if ((call_ROGUEM126( 38, ROGUE_ARG(THIS->condition) )))
    {
      THIS->else_statements = ((RogueClassCmdStatementList*)(NULL));
    }
    else
    {
      RogueCmd_List__clear( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) );
    }
  }
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->else_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->else_statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdIf__write_cpp__CPPWriter_Logical( RogueClassCmdIf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1098] );
  if ((RogueObject_instance_of(THIS->condition,RogueTypeCmdLiteralLogical) && !(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->condition,RogueTypeCmdLiteralLogical)))->value)))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
  else
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[32] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  if (!!(THIS->else_statements))
  {
    if ((THIS->else_statements->count == 1 && RogueObject_instance_of(((RogueClassCmd*)(THIS->else_statements->data->objects[0])),RogueTypeCmdIf)))
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1099] );
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, true );
    }
    else
    {
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[116] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
      writer_0->indent += 2;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, false );
      writer_0->indent -= 2;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
    }
  }
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1100] );
  }
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_939_0, RogueClassCmd* _auto_940_1, RogueInt32 _auto_941_2 )
{
  THIS->_control_type = _auto_941_2;
  THIS->condition = _auto_940_1;
  THIS->t = _auto_939_0;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_942_0, RogueClassCmd* _auto_943_1, RogueClassCmdStatementList* _auto_944_2, RogueInt32 _auto_945_3 )
{
  THIS->_control_type = _auto_945_3;
  THIS->statements = _auto_944_2;
  THIS->condition = _auto_943_1;
  THIS->t = _auto_942_0;
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdWhich* RogueCmdWhich__init_object( RogueClassCmdWhich* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdWhich*)(THIS);
}

RogueString* RogueCmdWhich__type_name( RogueClassCmdWhich* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1177]);
}

RogueClassCmdWhich* RogueCmdWhich__clone__CloneArgs( RogueClassCmdWhich* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,result_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2954_3,(THIS->cases));
    RogueInt32 _auto_2955_4 = (0);
    for (;_auto_2955_4 < _auto_2954_3->count;++_auto_2955_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_2954_3->data->objects[_auto_2955_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->cases = cloned_cases_2;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__clone__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  return (RogueClassCmdWhich*)(result_1);
}

void RogueCmdWhich__dispatch__Visitor( RogueClassCmdWhich* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWhich( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWhich__resolve__Scope( RogueClassCmdWhich* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
  RogueLogical all_literal_cases_1 = (true);
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_2,((call_ROGUEM129( 31, ROGUE_ARG(THIS->expression) ))));
  if ((((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) && ((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
  {
    if (((void*)expression_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
    {
      THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    }
    else
    {
      all_literal_cases_1 = ((RogueLogical)false);
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2956_10,(THIS->cases));
    RogueInt32 _auto_2957_11 = (0);
    for (;_auto_2957_11 < _auto_2956_10->count;++_auto_2957_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_12,(((RogueClassCmdWhichCase*)(_auto_2956_10->data->objects[_auto_2957_11]))));
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_12->conditions), scope_0 );
      if (all_literal_cases_1)
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2958_13,(c_12->conditions));
          RogueInt32 _auto_2959_14 = (0);
          for (;_auto_2959_14 < _auto_2958_13->count;++_auto_2959_14)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_15,(((RogueClassCmd*)(_auto_2958_13->data->objects[_auto_2959_14]))));
            if ((!((call_ROGUEM126( 27, condition_15 ))) || RogueObject_instance_of(condition_15,RogueTypeCmdLiteralString)))
            {
              all_literal_cases_1 = ((RogueLogical)false);
              goto _auto_2960;
            }
          }
        }
        _auto_2960:;
      }
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_12->statements), scope_0, false );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  if ((all_literal_cases_1 && !(THIS->contains_yield)))
  {
    return (RogueClassCmd*)((call_ROGUEM293( 43, ROGUE_ARG(((RogueClassCmdControlStructure*)((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->expression), ROGUE_ARG(THIS->cases), ROGUE_ARG(THIS->case_others), 5 ))))), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_3,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), 5 )))));
  call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_3), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueString*,var_name_4,0);
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,expression_var_5,0);
  if (RogueObject_instance_of(THIS->expression,RogueTypeCmdReadLocal))
  {
    expression_var_5 = ((RogueClassLocal*)((RogueClassCmdReadLocal*)(RogueObject_as(THIS->expression,RogueTypeCmdReadLocal)))->local_info);
    var_name_4 = ((RogueString*)expression_var_5->name);
  }
  else
  {
    var_name_4 = ((RogueString*)((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) ))));
    expression_var_5 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), var_name_4, ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->expression) ))), ROGUE_ARG(THIS->expression) ))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), expression_var_5, false )))))) );
  }
  if (!!(THIS->cases->count))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_6,(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->expression->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[0]))), var_name_4 )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[0]))->statements), 2 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_7,(cmd_if_6));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2961_16,(THIS->cases));
      RogueInt32 i_17 = (0);
      for (;i_17 < _auto_2961_16->count;++i_17)
      {
        if (i_17 > 0)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_8,(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[i_17]))));
          ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(c_8->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( c_8, var_name_4 )))), 3 )))));
          cmd_else_if_9->statements = c_8->statements;
          cur_if_7->else_statements = ((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) )));
          cur_if_7 = ((RogueClassCmdIf*)cmd_else_if_9);
        }
      }
    }
    if (!!(THIS->case_others))
    {
      cur_if_7->else_statements = THIS->case_others->statements;
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_if_6))) );
  }
  else if (!!(THIS->case_others))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2962_18,(THIS->case_others->statements));
      RogueInt32 _auto_2963_19 = (0);
      for (;_auto_2963_19 < _auto_2962_18->count;++_auto_2963_19)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_20,(((RogueClassCmd*)(_auto_2962_18->data->objects[_auto_2963_19]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), cmd_20 );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( result_3, scope_0 ))))));
}

RogueClassCmdWhich* RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdWhich* THIS, RogueClassToken* _auto_953_0, RogueClassCmd* _auto_954_1, RogueCmdWhichCase_List* _auto_955_2, RogueClassCmdWhichCase* _auto_956_3, RogueInt32 _auto_957_4 )
{
  THIS->_control_type = _auto_957_4;
  THIS->case_others = _auto_956_3;
  THIS->cases = _auto_955_2;
  THIS->expression = _auto_954_1;
  THIS->t = _auto_953_0;
  return (RogueClassCmdWhich*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueCmdWhichCase_List__add__CmdWhichCase( ROGUE_ARG(THIS->cases), result_1 );
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case_others__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  THIS->case_others = result_1;
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init_object( RogueCmdWhichCase_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init( RogueCmdWhichCase_List* THIS )
{
  RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueString* RogueCmdWhichCase_List__to_String( RogueCmdWhichCase_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2964_2,(THIS));
    RogueInt32 _auto_2965_3 = (0);
    for (;_auto_2965_3 < _auto_2964_2->count;++_auto_2965_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,value_4,(((RogueClassCmdWhichCase*)(_auto_2964_2->data->objects[_auto_2965_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdWhichCase_List__type_name( RogueCmdWhichCase_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[874]);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdWhichCase*), true );
  }
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__add__CmdWhichCase( RogueCmdWhichCase_List* THIS, RogueClassCmdWhichCase* value_0 )
{
  ((RogueCmdWhichCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueInt32 RogueCmdWhichCase_List__capacity( RogueCmdWhichCase_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__reserve__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdWhichCase_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init_object( RogueClassCmdWhichCase* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueString* RogueCmdWhichCase__type_name( RogueClassCmdWhichCase* THIS )
{
  return (RogueString*)(Rogue_literal_strings[957]);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__clone__CloneArgs( RogueClassCmdWhichCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdWhichCase*)(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->conditions), clone_args_0 )))), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

void RogueCmdWhichCase__dispatch__Visitor( RogueClassCmdWhichCase* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWhichCase( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( RogueClassCmdWhichCase* THIS, RogueClassToken* _auto_946_0, RogueClassCmdArgs* _auto_947_1, RogueClassCmdStatementList* _auto_948_2 )
{
  THIS->statements = _auto_948_2;
  THIS->conditions = _auto_947_1;
  THIS->t = _auto_946_0;
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueClassCmd* RogueCmdWhichCase__as_conditional__String( RogueClassCmdWhichCase* THIS, RogueString* expression_var_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_1,0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2997_2,(THIS->conditions));
    RogueInt32 _auto_2998_3 = (0);
    for (;_auto_2998_3 < _auto_2997_2->count;++_auto_2998_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_4,(((RogueClassCmd*)(_auto_2997_2->data->objects[_auto_2998_3]))));
      if (!!(cmd_1))
      {
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), cmd_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 )))))))) ))))))));
      }
      else
      {
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 ))))))));
      }
    }
  }
  return (RogueClassCmd*)(cmd_1);
}

RogueString* RogueArray_CmdWhichCase___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[924]);
}

RogueClassCmdBlock* RogueCmdBlock__init_object( RogueClassCmdBlock* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdBlock*)(THIS);
}

RogueString* RogueCmdBlock__type_name( RogueClassCmdBlock* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1178]);
}

RogueClassCmd* RogueCmdBlock__clone__CloneArgs( RogueClassCmdBlock* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2999_3,(THIS->statements));
      RogueInt32 _auto_3000_4 = (0);
      for (;_auto_3000_4 < _auto_2999_3->count;++_auto_3000_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_2999_3->data->objects[_auto_3000_4]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_5, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), 0 )))));
    call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_2), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_2));
    result_2->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
}

void RogueCmdBlock__dispatch__Visitor( RogueClassCmdBlock* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBlock( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdBlock__requires_semicolon( RogueClassCmdBlock* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmdBlock* RogueCmdBlock__resolve__Scope( RogueClassCmdBlock* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmdBlock*)(THIS);
}

void RogueCmdBlock__write_cpp__CPPWriter_Logical( RogueClassCmdBlock* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1100] );
  }
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_958_0, RogueInt32 _auto_959_1 )
{
  THIS->_control_type = _auto_959_1;
  THIS->t = _auto_958_0;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_CmdStatementList_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_960_0, RogueClassCmdStatementList* _auto_961_1, RogueInt32 _auto_962_2 )
{
  THIS->_control_type = _auto_962_2;
  THIS->statements = _auto_961_1;
  THIS->t = _auto_960_0;
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdContingent* RogueCmdContingent__init_object( RogueClassCmdContingent* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdContingent*)(THIS);
}

RogueString* RogueCmdContingent__type_name( RogueClassCmdContingent* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1179]);
}

RogueClassCmd* RogueCmdContingent__clone__CloneArgs( RogueClassCmdContingent* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    THIS->satisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    THIS->unsatisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = end_section_2;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3001_4,(THIS->statements));
      RogueInt32 _auto_3002_5 = (0);
      for (;_auto_3002_5 < _auto_3001_4->count;++_auto_3002_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_6,(((RogueClassCmd*)(_auto_3001_4->data->objects[_auto_3002_5]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_6, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->satisfied_section) );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->satisfied_section) );
    if (!!(THIS->satisfied_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3003_7,(THIS->satisfied_statements));
        RogueInt32 _auto_3004_8 = (0);
        for (;_auto_3004_8 < _auto_3003_7->count;++_auto_3004_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_9,(((RogueClassCmd*)(_auto_3003_7->data->objects[_auto_3004_8]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_9, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->unsatisfied_section) );
    if (!!(THIS->unsatisfied_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3005_10,(THIS->unsatisfied_statements));
        RogueInt32 _auto_3006_11 = (0);
        for (;_auto_3006_11 < _auto_3005_10->count;++_auto_3006_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_12,(((RogueClassCmd*)(_auto_3005_10->data->objects[_auto_3006_11]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_12, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_2 );
    if (end_section_2->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,result_3,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    RogueCmdContingent__set_control_logic__CmdControlStructure( result_3, ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_3));
    result_3->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_3->satisfied_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->satisfied_statements), clone_args_0 )));
    result_3->unsatisfied_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->unsatisfied_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
}

void RogueCmdContingent__dispatch__Visitor( RogueClassCmdContingent* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdContingent( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdContingent* RogueCmdContingent__resolve__Scope( RogueClassCmdContingent* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  if (!(!!(THIS->escape_label)))
  {
    THIS->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->satisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->satisfied_statements), scope_0, false );
  }
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->unsatisfied_statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmdContingent*)(THIS);
}

void RogueCmdContingent__write_cpp__CPPWriter_Logical( RogueClassCmdContingent* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  if (!!(THIS->satisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->satisfied_label) )))), Rogue_literal_strings[1100] );
  }
  if (!!(THIS->satisfied_statements))
  {
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->satisfied_statements), writer_0, false, false );
  }
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1101] )))), ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[241] );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  if (!!(THIS->unsatisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->unsatisfied_label) )))), Rogue_literal_strings[1100] );
  }
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->unsatisfied_statements), writer_0, false, false );
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1100] );
}

RogueClassCmd* RogueCmdContingent__set_control_logic__CmdControlStructure( RogueClassCmdContingent* THIS, RogueClassCmdControlStructure* original_0 )
{
  RogueCmdControlStructure__set_control_logic__CmdControlStructure( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)), original_0 );
  THIS->satisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->satisfied_label;
  THIS->unsatisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->unsatisfied_label;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdContingent* RogueCmdContingent__init__Token_CmdStatementList( RogueClassCmdContingent* THIS, RogueClassToken* _auto_963_0, RogueClassCmdStatementList* _auto_964_1 )
{
  THIS->statements = _auto_964_1;
  THIS->t = _auto_963_0;
  THIS->_control_type = 1;
  return (RogueClassCmdContingent*)(THIS);
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init_object( RogueClassCmdGenericLoop* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdGenericLoop*)(THIS);
}

RogueString* RogueCmdGenericLoop__type_name( RogueClassCmdGenericLoop* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1180]);
}

RogueClassCmd* RogueCmdGenericLoop__clone__CloneArgs( RogueClassCmdGenericLoop* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    if (!!(THIS->control_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3007_5,(THIS->control_statements));
        RogueInt32 _auto_3008_6 = (0);
        for (;_auto_3008_6 < _auto_3007_5->count;++_auto_3008_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_3007_5->data->objects[_auto_3008_6]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,condition_section_2,(((RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,after_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = after_section_3;
    THIS->task_upkeep_section = ((RogueTaskArgs__create_section( task_args_1 )));
    if (!!(THIS->condition))
    {
      RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))) )))))))), after_section_3 );
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3009_8,(THIS->statements));
      RogueInt32 _auto_3010_9 = (0);
      for (;_auto_3010_9 < _auto_3009_8->count;++_auto_3010_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_3009_8->data->objects[_auto_3010_9]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->task_upkeep_section) );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->task_upkeep_section) );
    if (!!(THIS->upkeep))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3011_11,(THIS->upkeep));
        RogueInt32 _auto_3012_12 = (0);
        for (;_auto_3012_12 < _auto_3011_11->count;++_auto_3012_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_13,(((RogueClassCmd*)(_auto_3011_11->data->objects[_auto_3012_12]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM122( 13, statement_13, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), condition_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, after_section_3 );
    if (after_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    result_4->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_4->upkeep = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->upkeep), clone_args_0 )));
    result_4->control_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->control_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

void RogueCmdGenericLoop__dispatch__Visitor( RogueClassCmdGenericLoop* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdGenericLoop( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdGenericLoop__resolve__Scope( RogueClassCmdGenericLoop* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  if (!!(THIS->control_statements))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3013_1,(THIS->control_statements));
      RogueInt32 i_2 = (0);
      for (;i_2 < _auto_3013_1->count;++i_2)
      {
        THIS->control_statements->data->objects[i_2] = (call_ROGUEM120( 34, ROGUE_ARG(((RogueClassCmd*)(THIS->control_statements->data->objects[i_2]))), scope_0 ));
      }
    }
  }
  if (!!(THIS->condition))
  {
    THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ))), scope_0 )));
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->upkeep))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->upkeep), scope_0, false );
  }
  if (!!(THIS->control_statements))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3014_3,(THIS->control_statements));
      RogueInt32 _auto_3015_4 = (0);
      for (;_auto_3015_4 < _auto_3014_3->count;++_auto_3015_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_3014_3->data->objects[_auto_3015_4]))));
        call_ROGUEM125( 20, statement_5, scope_0 );
      }
    }
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdGenericLoop__write_cpp__CPPWriter_Logical( RogueClassCmdGenericLoop* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->control_statements))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
    writer_0->indent += 2;
    if (!!(THIS->control_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3016_3,(THIS->control_statements));
        RogueInt32 _auto_3017_4 = (0);
        for (;_auto_3017_4 < _auto_3016_3->count;++_auto_3017_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_3016_3->data->objects[_auto_3017_4]))));
          call_ROGUEM133( 41, statement_5, writer_0, false );
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
        }
      }
    }
  }
  if ((!!(THIS->upkeep) || !(!!(THIS->condition))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1102] );
    if (!!(THIS->condition))
    {
      call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
    RogueLogical first_2 = (true);
    if (!!(THIS->upkeep))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3018_6,(THIS->upkeep));
        RogueInt32 _auto_3019_7 = (0);
        for (;_auto_3019_7 < _auto_3018_6->count;++_auto_3019_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_8,(((RogueClassCmd*)(_auto_3018_6->data->objects[_auto_3019_7]))));
          if (first_2)
          {
            first_2 = ((RogueLogical)false);
          }
          else
          {
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[5] );
          }
          call_ROGUEM133( 41, statement_8, writer_0, false );
        }
      }
    }
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[32] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1103] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[32] );
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  if (!!(THIS->control_statements))
  {
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  }
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1100] );
  }
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( RogueClassCmdGenericLoop* THIS, RogueClassToken* _auto_965_0, RogueInt32 _auto_966_1, RogueClassCmd* _auto_967_2, RogueClassCmdStatementList* _auto_968_3, RogueClassCmdStatementList* _auto_969_4, RogueClassCmdStatementList* _auto_970_5 )
{
  THIS->control_statements = _auto_970_5;
  THIS->upkeep = _auto_969_4;
  THIS->statements = _auto_968_3;
  THIS->condition = _auto_967_2;
  THIS->_control_type = _auto_966_1;
  THIS->t = _auto_965_0;
  return (RogueClassCmdGenericLoop*)(THIS);
}

void RogueCmdGenericLoop__add_control_var__Local( RogueClassCmdGenericLoop* THIS, RogueClassLocal* v_0 )
{
  if (!(!!(THIS->control_statements)))
  {
    THIS->control_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->control_statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_0->t), v_0, false )))))) );
}

void RogueCmdGenericLoop__add_upkeep__Cmd( RogueClassCmdGenericLoop* THIS, RogueClassCmd* cmd_0 )
{
  if (!(!!(THIS->upkeep)))
  {
    THIS->upkeep = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->upkeep)), cmd_0 );
}

RogueClassCmdTry* RogueCmdTry__init_object( RogueClassCmdTry* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdTry*)(THIS);
}

RogueString* RogueCmdTry__type_name( RogueClassCmdTry* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1181]);
}

RogueClassCmdTry* RogueCmdTry__clone__CloneArgs( RogueClassCmdTry* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,result_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueCmdCatch_List*)(NULL))) )))));
  call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  result_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,new_catches_2,(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3020_3,(THIS->catches));
    RogueInt32 _auto_3021_4 = (0);
    for (;_auto_3021_4 < _auto_3020_3->count;++_auto_3021_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_5,(((RogueClassCmdCatch*)(_auto_3020_3->data->objects[_auto_3021_4]))));
      RogueCmdCatch_List__add__CmdCatch( new_catches_2, ROGUE_ARG(((RogueCmdCatch__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->catches = new_catches_2;
  return (RogueClassCmdTry*)(result_1);
}

void RogueCmdTry__dispatch__Visitor( RogueClassCmdTry* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTry( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdTry__resolve__Scope( RogueClassCmdTry* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3022_1,(THIS->catches));
    RogueInt32 _auto_3023_2 = (0);
    for (;_auto_3023_2 < _auto_3022_1->count;++_auto_3023_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_3022_1->data->objects[_auto_3023_2]))));
      RogueCmdCatch__resolve__Scope( c_3, scope_0 );
    }
  }
  if (THIS->contains_yield)
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1020] ))));
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTry__write_cpp__CPPWriter_Logical( RogueClassCmdTry* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1106] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3024_2,(THIS->catches));
    RogueInt32 _auto_3025_3 = (0);
    for (;_auto_3025_3 < _auto_3024_2->count;++_auto_3025_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_4,(((RogueClassCmdCatch*)(_auto_3024_2->data->objects[_auto_3025_3]))));
      RogueCmdCatch__write_cpp__CPPWriter_Logical( c_4, writer_0, false );
    }
  }
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1100] );
  }
}

RogueClassCmdTry* RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( RogueClassCmdTry* THIS, RogueClassToken* _auto_983_0, RogueClassCmdStatementList* _auto_984_1, RogueCmdCatch_List* _auto_985_2 )
{
  THIS->catches = _auto_985_2;
  THIS->statements = _auto_984_1;
  THIS->t = _auto_983_0;
  THIS->_control_type = 4;
  return (RogueClassCmdTry*)(THIS);
}

RogueClassCmdCatch* RogueCmdTry__add_catch__Token( RogueClassCmdTry* THIS, RogueClassToken* catch_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_1,(((RogueCmdCatch__init__Token_Local_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), catch_t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueCmdCatch_List__add__CmdCatch( ROGUE_ARG(THIS->catches), c_1 );
  return (RogueClassCmdCatch*)(c_1);
}

RogueCmdCatch_List* RogueCmdCatch_List__init_object( RogueCmdCatch_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__init( RogueCmdCatch_List* THIS )
{
  RogueCmdCatch_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdCatch_List*)(THIS);
}

RogueString* RogueCmdCatch_List__to_String( RogueCmdCatch_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3026_2,(THIS));
    RogueInt32 _auto_3027_3 = (0);
    for (;_auto_3027_3 < _auto_3026_2->count;++_auto_3027_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,value_4,(((RogueClassCmdCatch*)(_auto_3026_2->data->objects[_auto_3027_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdCatch_List__type_name( RogueCmdCatch_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[875]);
}

RogueCmdCatch_List* RogueCmdCatch_List__init__Int32( RogueCmdCatch_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdCatch*), true );
  }
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__add__CmdCatch( RogueCmdCatch_List* THIS, RogueClassCmdCatch* value_0 )
{
  ((RogueCmdCatch_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdCatch_List*)(THIS);
}

RogueInt32 RogueCmdCatch_List__capacity( RogueCmdCatch_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdCatch_List* RogueCmdCatch_List__reserve__Int32( RogueCmdCatch_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdCatch_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdCatch_List*)(THIS);
}

RogueClassCmdCatch* RogueCmdCatch__init_object( RogueClassCmdCatch* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCatch*)(THIS);
}

RogueString* RogueCmdCatch__type_name( RogueClassCmdCatch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[958]);
}

RogueClassCmdCatch* RogueCmdCatch__clone__CloneArgs( RogueClassCmdCatch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdCatch*)(((RogueCmdCatch__init__Token_Local_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->error_var), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

void RogueCmdCatch__dispatch__Visitor( RogueClassCmdCatch* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCatch( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCatch__resolve__Scope( RogueClassCmdCatch* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->error_var->_type), scope_0 );
  if (!(((RogueType__instance_of__Type( ROGUE_ARG(THIS->error_var->_type), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1019] ))));
  }
  RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->error_var), true );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  RogueScope__pop_local( scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCatch__write_cpp__CPPWriter_Logical( RogueClassCmdCatch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1104] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->error_var) )))) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(THIS->error_var->_type) )))), Rogue_literal_strings[620] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1105] );
}

RogueClassCmdCatch* RogueCmdCatch__init__Token_Local_CmdStatementList( RogueClassCmdCatch* THIS, RogueClassToken* _auto_976_0, RogueClassLocal* _auto_977_1, RogueClassCmdStatementList* _auto_978_2 )
{
  THIS->statements = _auto_978_2;
  THIS->error_var = _auto_977_1;
  THIS->t = _auto_976_0;
  return (RogueClassCmdCatch*)(THIS);
}

RogueString* RogueArray_CmdCatch___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[925]);
}

RogueClassCmdAwait* RogueCmdAwait__init_object( RogueClassCmdAwait* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAwait*)(THIS);
}

RogueString* RogueCmdAwait__type_name( RogueClassCmdAwait* THIS )
{
  return (RogueString*)(Rogue_literal_strings[959]);
}

RogueClassCmd* RogueCmdAwait__clone__CloneArgs( RogueClassCmdAwait* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1004] ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statement_list), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) )))), ROGUE_ARG(THIS->result_var) ))))));
  }
}

void RogueCmdAwait__dispatch__Visitor( RogueClassCmdAwait* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmd* RogueCmdAwait__resolve__Scope( RogueClassCmdAwait* THIS, RogueClassScope* scope_0 )
{
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1021] ))));
  }
  THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->expression) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_result_2,(((RogueType__find_property__String( task_type_1, Rogue_literal_strings[468] )))));
  if (!!(THIS->result_var))
  {
    if (!!(p_result_2))
    {
      THIS->result_var->_type = p_result_2->_type;
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[1022] ))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,task_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  task_var_3->initial_value = THIS->expression;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), task_var_3, false )))))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), Rogue_literal_strings[464] )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_while_4->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(cmd_while_4))) );
  if (!!(THIS->result_var))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->result_var), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), p_result_2 )))))) )))))) );
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statement_list), scope_0, false );
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( ROGUE_ARG(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->statement_list), 0 )))), scope_0 ))))));
}

RogueClassCmdAwait* RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( RogueClassCmdAwait* THIS, RogueClassToken* _auto_986_0, RogueClassCmd* _auto_987_1, RogueClassCmdStatementList* _auto_988_2, RogueClassLocal* _auto_989_3 )
{
  THIS->result_var = _auto_989_3;
  THIS->statement_list = _auto_988_2;
  THIS->expression = _auto_987_1;
  THIS->t = _auto_986_0;
  return (RogueClassCmdAwait*)(THIS);
}

RogueClassCmdYield* RogueCmdYield__init_object( RogueClassCmdYield* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdYield*)(THIS);
}

RogueString* RogueCmdYield__type_name( RogueClassCmdYield* THIS )
{
  return (RogueString*)(Rogue_literal_strings[960]);
}

RogueClassCmd* RogueCmdYield__clone__CloneArgs( RogueClassCmdYield* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    RogueTaskArgs__add_yield__Token( task_args_1, ROGUE_ARG(THIS->t) );
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) ))))));
  }
}

void RogueCmdYield__dispatch__Visitor( RogueClassCmdYield* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmd* RogueCmdYield__resolve__Scope( RogueClassCmdYield* THIS, RogueClassScope* scope_0 )
{
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1023] ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_3059_1,(scope_0->control_stack));
    RogueInt32 _auto_3060_2 = (0);
    for (;_auto_3060_2 < _auto_3059_1->count;++_auto_3060_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,control_structure_3,(((RogueClassCmdControlStructure*)(_auto_3059_1->data->objects[_auto_3060_2]))));
      control_structure_3->contains_yield = true;
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdYield* RogueCmdYield__init__Token( RogueClassCmdYield* THIS, RogueClassToken* _auto_990_0 )
{
  THIS->t = _auto_990_0;
  return (RogueClassCmdYield*)(THIS);
}

RogueClassCmdThrow* RogueCmdThrow__init_object( RogueClassCmdThrow* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdThrow*)(THIS);
}

RogueString* RogueCmdThrow__type_name( RogueClassCmdThrow* THIS )
{
  return (RogueString*)(Rogue_literal_strings[961]);
}

RogueClassCmdThrow* RogueCmdThrow__clone__CloneArgs( RogueClassCmdThrow* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdThrow*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->expression), clone_args_0 ))) ))));
}

void RogueCmdThrow__dispatch__Visitor( RogueClassCmdThrow* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdThrow( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdThrow__resolve__Scope( RogueClassCmdThrow* THIS, RogueClassScope* scope_0 )
{
  THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->expression) ))));
  RogueType__organize__Scope( expression_type_1, scope_0 );
  if (!(((RogueType__instance_of__Type( expression_type_1, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[1024] ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdThrow__write_cpp__CPPWriter_Logical( RogueClassCmdThrow* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1107] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->expression), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdThrow* RogueCmdThrow__init__Token_Cmd( RogueClassCmdThrow* THIS, RogueClassToken* _auto_991_0, RogueClassCmd* _auto_992_1 )
{
  THIS->expression = _auto_992_1;
  THIS->t = _auto_991_0;
  return (RogueClassCmdThrow*)(THIS);
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init_object( RogueClassCmdLiteralString* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueString* RogueCmdLiteralString__type_name( RogueClassCmdLiteralString* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1188]);
}

RogueClassCmd* RogueCmdLiteralString__clone__CloneArgs( RogueClassCmdLiteralString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value), ROGUE_ARG(THIS->index) ))))));
}

void RogueCmdLiteralString__dispatch__Visitor( RogueClassCmdLiteralString* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteralString( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdLiteralString__resolve__Scope( RogueClassCmdLiteralString* THIS, RogueClassScope* scope_0 )
{
  RogueType__resolve( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralString__to_Logical( RogueClassCmdLiteralString* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralString__type( RogueClassCmdLiteralString* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

void RogueCmdLiteralString__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralString* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->value))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[713] )))), ROGUE_ARG(THIS->index) )))), Rogue_literal_strings[49] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[553] );
  }
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init__Token_String_Int32( RogueClassCmdLiteralString* THIS, RogueClassToken* _auto_993_0, RogueString* _auto_994_1, RogueInt32 _auto_995_2 )
{
  THIS->index = _auto_995_2;
  THIS->value = _auto_994_1;
  THIS->t = _auto_993_0;
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init_object( RogueClassCmdFormattedString* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueString* RogueCmdFormattedString__type_name( RogueClassCmdFormattedString* THIS )
{
  return (RogueString*)(Rogue_literal_strings[962]);
}

RogueClassCmd* RogueCmdFormattedString__clone__CloneArgs( RogueClassCmdFormattedString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->format), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdFormattedString__dispatch__Visitor( RogueClassCmdFormattedString* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdFormattedString( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdFormattedString__implicit_type__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmd* RogueCmdFormattedString__resolve__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[65], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,fmt_2,(THIS->format));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3061_4,(THIS->args));
    RogueInt32 _auto_3062_5 = (0);
    for (;_auto_3062_5 < _auto_3061_4->count;++_auto_3062_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_6,(((RogueClassCmd*)(_auto_3061_4->data->objects[_auto_3062_5]))));
      arg_6 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, arg_6, scope_0 ))) ))));
      RogueOptionalInt32 i_3 = (((RogueCmdFormattedString__locate_marker__String( ROGUE_ARG(THIS), fmt_2 ))));
      if (!(i_3.exists))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1025] ))));
      }
      if (i_3.value > 0)
      {
        cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1026], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( fmt_2, ROGUE_ARG(i_3.value) )))), 0 )))))) )))) ))));
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, ROGUE_ARG((i_3.value + 1)) ))));
      }
      else
      {
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, 1 ))));
      }
      cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1026], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), arg_6 )))))))) )))) ))));
    }
  }
  if (!!(fmt_2->character_count))
  {
    if (((RogueCmdFormattedString__locate_marker__String( ROGUE_ARG(THIS), fmt_2 ))).exists)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1027] ))));
    }
    cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1026], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), fmt_2, 0 )))))) )))) ))));
  }
  return (RogueClassCmd*)((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(((RogueCmdAccess__resolve__Scope( cmd_1, scope_0 )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), scope_0 ))), scope_0 )));
}

RogueClassType* Rogue_CmdFormattedString__type( RogueClassCmdFormattedString* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init__Token_String_CmdArgs( RogueClassCmdFormattedString* THIS, RogueClassToken* _auto_996_0, RogueString* _auto_997_1, RogueClassCmdArgs* _auto_998_2 )
{
  THIS->args = _auto_998_2;
  THIS->format = _auto_997_1;
  THIS->t = _auto_996_0;
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueOptionalInt32 RogueCmdFormattedString__locate_marker__String( RogueClassCmdFormattedString* THIS, RogueString* fmt_0 )
{
  return (RogueOptionalInt32)(((RogueString__locate__Character_OptionalInt32( fmt_0, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
}

RogueClassCmdTrace* RogueCmdTrace__init_object( RogueClassCmdTrace* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTrace*)(THIS);
}

RogueString* RogueCmdTrace__type_name( RogueClassCmdTrace* THIS )
{
  return (RogueString*)(Rogue_literal_strings[963]);
}

RogueClassCmdTrace* RogueCmdTrace__clone__CloneArgs( RogueClassCmdTrace* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdTrace*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->info), clone_args_0 )))) ))));
}

void RogueCmdTrace__dispatch__Visitor( RogueClassCmdTrace* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTrace( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdTrace__resolve__Scope( RogueClassCmdTrace* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[69] )))))), Rogue_literal_strings[1028], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->info) )))) )))), scope_0 ))));
}

RogueClassCmdTrace* RogueCmdTrace__init__Token_Cmd( RogueClassCmdTrace* THIS, RogueClassToken* _auto_999_0, RogueClassCmd* _auto_1000_1 )
{
  THIS->info = _auto_1000_1;
  THIS->t = _auto_999_0;
  return (RogueClassCmdTrace*)(THIS);
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init_object( RogueClassCmdLocalDeclaration* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueString* RogueCmdLocalDeclaration__type_name( RogueClassCmdLocalDeclaration* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1175]);
}

RogueClassCmd* RogueCmdLocalDeclaration__clone__CloneArgs( RogueClassCmdLocalDeclaration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_2,(THIS->local_info->initial_value));
    if (!!(new_value_2))
    {
      new_value_2 = ((RogueClassCmd*)(call_ROGUEM122( 13, new_value_2, clone_args_0 )));
    }
    return (RogueClassCmd*)(((RogueTaskArgs__replace_write_local__Token_Local_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), new_value_2 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->skip_initialization) ))))));
  }
}

void RogueCmdLocalDeclaration__dispatch__Visitor( RogueClassCmdLocalDeclaration* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLocalDeclaration( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdLocalDeclaration__exit_scope__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  RogueScope__pop_local( scope_0 );
}

RogueClassCmd* RogueCmdLocalDeclaration__resolve__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->local_info->initial_value))
  {
    THIS->local_info->initial_value = (call_ROGUEM120( 34, ROGUE_ARG(THIS->local_info->initial_value), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,initial_value_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->local_info->initial_value) ))));
    if (((void*)THIS->local_info->_type) == ((void*)NULL))
    {
      THIS->local_info->_type = initial_value_type_1;
    }
  }
  if (((void*)THIS->local_info->_type) == ((void*)NULL))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1029] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[1030] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[364] )))) )))) ))));
  }
  if (!!(THIS->local_info->initial_value))
  {
    THIS->local_info->initial_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->local_info->initial_value), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  }
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->local_info), true );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    if (THIS->skip_initialization)
    {
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1108] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[32] );
    }
    else if (!!(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1109] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[5] )))))
    {
      if (!!(THIS->local_info->initial_value))
      {
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        call_ROGUEM133( 41, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
      }
      else
      {
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
    }
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
    if (!(THIS->skip_initialization))
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[626] );
      if (!!(THIS->local_info->initial_value))
      {
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        call_ROGUEM133( 41, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
      }
      else
      {
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
    }
  }
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init__Token_Local_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassToken* _auto_1001_0, RogueClassLocal* _auto_1002_1, RogueLogical _auto_1003_2 )
{
  THIS->skip_initialization = _auto_1003_2;
  THIS->local_info = _auto_1002_1;
  THIS->t = _auto_1001_0;
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueClassCmdAssert* RogueCmdAssert__init_object( RogueClassCmdAssert* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAssert*)(THIS);
}

RogueString* RogueCmdAssert__type_name( RogueClassCmdAssert* THIS )
{
  return (RogueString*)(Rogue_literal_strings[964]);
}

RogueClassCmdAssert* RogueCmdAssert__clone__CloneArgs( RogueClassCmdAssert* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdAssert*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

void RogueCmdAssert__dispatch__Visitor( RogueClassCmdAssert* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAssert( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAssert__resolve__Scope( RogueClassCmdAssert* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->local_info->_type = (call_ROGUEM129( 31, ROGUE_ARG(THIS->condition) ));
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->message), scope_0 ))) )));
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[1031], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAssert__type( RogueClassCmdAssert* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdAssert__write_cpp__CPPWriter_Logical( RogueClassCmdAssert* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[222] );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1110] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[215] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->error), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdAssert* RogueCmdAssert__init__Token_Cmd_Cmd_Local( RogueClassCmdAssert* THIS, RogueClassToken* _auto_1004_0, RogueClassCmd* _auto_1005_1, RogueClassCmd* _auto_1006_2, RogueClassLocal* _auto_1007_3 )
{
  THIS->local_info = _auto_1007_3;
  THIS->message = _auto_1006_2;
  THIS->condition = _auto_1005_1;
  THIS->t = _auto_1004_0;
  return (RogueClassCmdAssert*)(THIS);
}

RogueClassCmdEscape* RogueCmdEscape__init_object( RogueClassCmdEscape* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdEscape*)(THIS);
}

RogueString* RogueCmdEscape__type_name( RogueClassCmdEscape* THIS )
{
  return (RogueString*)(Rogue_literal_strings[965]);
}

RogueClassCmd* RogueCmdEscape__clone__CloneArgs( RogueClassCmdEscape* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->task_escape_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_escape_section) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), new_target_2 ))))));
  }
}

void RogueCmdEscape__dispatch__Visitor( RogueClassCmdEscape* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdEscape( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdEscape__resolve__Scope( RogueClassCmdEscape* THIS, RogueClassScope* scope_0 )
{
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    if (cmd_2->_control_type == THIS->_control_type)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      if (!(!!(cmd_2->escape_label)))
      {
        cmd_2->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_2;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1032] ))));
}

void RogueCmdEscape__write_cpp__CPPWriter_Logical( RogueClassCmdEscape* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1101], ROGUE_ARG(THIS->target_cmd->escape_label) )))) );
}

RogueClassCmdEscape* RogueCmdEscape__init__Token_Int32_CmdControlStructure( RogueClassCmdEscape* THIS, RogueClassToken* _auto_1008_0, RogueInt32 _auto_1009_1, RogueClassCmdControlStructure* _auto_1010_2 )
{
  THIS->target_cmd = _auto_1010_2;
  THIS->_control_type = _auto_1009_1;
  THIS->t = _auto_1008_0;
  return (RogueClassCmdEscape*)(THIS);
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init_object( RogueClassCmdNextIteration* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueString* RogueCmdNextIteration__type_name( RogueClassCmdNextIteration* THIS )
{
  return (RogueString*)(Rogue_literal_strings[966]);
}

RogueClassCmd* RogueCmdNextIteration__clone__CloneArgs( RogueClassCmdNextIteration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->task_upkeep_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_upkeep_section) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), ROGUE_ARG(THIS->t), new_target_2 ))))));
  }
}

void RogueCmdNextIteration__dispatch__Visitor( RogueClassCmdNextIteration* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdNextIteration( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdNextIteration__resolve__Scope( RogueClassCmdNextIteration* THIS, RogueClassScope* scope_0 )
{
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    if (cmd_2->_control_type >= 6)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      if (!(!!(cmd_2->upkeep_label)))
      {
        cmd_2->upkeep_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_2;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1033] ))));
}

void RogueCmdNextIteration__write_cpp__CPPWriter_Logical( RogueClassCmdNextIteration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1111] );
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init__Token_CmdControlStructure( RogueClassCmdNextIteration* THIS, RogueClassToken* _auto_1011_0, RogueClassCmdControlStructure* _auto_1012_1 )
{
  THIS->target_cmd = _auto_1012_1;
  THIS->t = _auto_1011_0;
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueClassCmdNecessary* RogueCmdNecessary__init_object( RogueClassCmdNecessary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNecessary*)(THIS);
}

RogueString* RogueCmdNecessary__type_name( RogueClassCmdNecessary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[967]);
}

RogueClassCmd* RogueCmdNecessary__clone__CloneArgs( RogueClassCmdNecessary* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->unsatisfied_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->unsatisfied_section) )))));
    if (!!(THIS->condition))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) )))))))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

void RogueCmdNecessary__dispatch__Visitor( RogueClassCmdNecessary* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdNecessary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdNecessary__resolve__Scope( RogueClassCmdNecessary* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->condition))
  {
    THIS->condition = (call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    if (cmd_2->_control_type == 1)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      if (!(!!(cmd_contingent_3->unsatisfied_label)))
      {
        cmd_contingent_3->unsatisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_contingent_3;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1034] ))));
}

void RogueCmdNecessary__write_cpp__CPPWriter_Logical( RogueClassCmdNecessary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1112] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1113] )))), ROGUE_ARG(THIS->target_cmd->unsatisfied_label) );
}

RogueClassCmdNecessary* RogueCmdNecessary__init__Token_Cmd_CmdContingent( RogueClassCmdNecessary* THIS, RogueClassToken* _auto_1013_0, RogueClassCmd* _auto_1014_1, RogueClassCmdContingent* _auto_1015_2 )
{
  THIS->target_cmd = _auto_1015_2;
  THIS->condition = _auto_1014_1;
  THIS->t = _auto_1013_0;
  return (RogueClassCmdNecessary*)(THIS);
}

RogueClassCmdSufficient* RogueCmdSufficient__init_object( RogueClassCmdSufficient* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSufficient*)(THIS);
}

RogueString* RogueCmdSufficient__type_name( RogueClassCmdSufficient* THIS )
{
  return (RogueString*)(Rogue_literal_strings[968]);
}

RogueClassCmd* RogueCmdSufficient__clone__CloneArgs( RogueClassCmdSufficient* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->satisfied_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->satisfied_section) )))));
    if (!!(THIS->condition))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

void RogueCmdSufficient__dispatch__Visitor( RogueClassCmdSufficient* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdSufficient( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdSufficient__resolve__Scope( RogueClassCmdSufficient* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->condition))
  {
    THIS->condition = (call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    if (cmd_2->_control_type == 1)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      if (!(!!(cmd_contingent_3->satisfied_label)))
      {
        cmd_contingent_3->satisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_contingent_3;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1034] ))));
}

void RogueCmdSufficient__write_cpp__CPPWriter_Logical( RogueClassCmdSufficient* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1098] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1114] )))), ROGUE_ARG(THIS->target_cmd->satisfied_label) );
}

RogueClassCmdSufficient* RogueCmdSufficient__init__Token_Cmd_CmdContingent( RogueClassCmdSufficient* THIS, RogueClassToken* _auto_1016_0, RogueClassCmd* _auto_1017_1, RogueClassCmdContingent* _auto_1018_2 )
{
  THIS->target_cmd = _auto_1018_2;
  THIS->condition = _auto_1017_1;
  THIS->t = _auto_1016_0;
  return (RogueClassCmdSufficient*)(THIS);
}

RogueClassCmdAdjust* RogueCmdAdjust__init_object( RogueClassCmdAdjust* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjust*)(THIS);
}

RogueString* RogueCmdAdjust__type_name( RogueClassCmdAdjust* THIS )
{
  return (RogueString*)(Rogue_literal_strings[969]);
}

void RogueCmdAdjust__dispatch__Visitor( RogueClassCmdAdjust* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmd* RogueCmdAdjust__resolve__Scope( RogueClassCmdAdjust* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ));
  return (RogueClassCmd*)((call_ROGUEM131( 36, ROGUE_ARG(THIS->operand), scope_0, ROGUE_ARG(THIS->delta) )));
}

RogueClassCmdAdjust* RogueCmdAdjust__init__Token_Cmd_Int32( RogueClassCmdAdjust* THIS, RogueClassToken* _auto_1019_0, RogueClassCmd* _auto_1020_1, RogueInt32 _auto_1021_2 )
{
  THIS->delta = _auto_1021_2;
  THIS->operand = _auto_1020_1;
  THIS->t = _auto_1019_0;
  return (RogueClassCmdAdjust*)(THIS);
}

RogueClassCmdAssign* RogueCmdAssign__init_object( RogueClassCmdAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAssign*)(THIS);
}

RogueString* RogueCmdAssign__type_name( RogueClassCmdAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[970]);
}

RogueClassCmd* RogueCmdAssign__clone__CloneArgs( RogueClassCmdAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdAssign__dispatch__Visitor( RogueClassCmdAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAssign( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAssign__resolve__Scope( RogueClassCmdAssign* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)((call_ROGUEM130( 35, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdAssign* RogueCmdAssign__init__Token_Cmd_Cmd( RogueClassCmdAssign* THIS, RogueClassToken* _auto_1022_0, RogueClassCmd* _auto_1023_1, RogueClassCmd* _auto_1024_2 )
{
  THIS->new_value = _auto_1024_2;
  THIS->target = _auto_1023_1;
  THIS->t = _auto_1022_0;
  return (RogueClassCmdAssign*)(THIS);
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init_object( RogueClassCmdModifyAndAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueString* RogueCmdModifyAndAssign__type_name( RogueClassCmdModifyAndAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[971]);
}

RogueClassCmd* RogueCmdModifyAndAssign__clone__CloneArgs( RogueClassCmdModifyAndAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssign__dispatch__Visitor( RogueClassCmdModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmd* RogueCmdModifyAndAssign__resolve__Scope( RogueClassCmdModifyAndAssign* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)((call_ROGUEM132( 37, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->op), ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( RogueClassCmdModifyAndAssign* THIS, RogueClassToken* _auto_1025_0, RogueClassCmd* _auto_1026_1, RogueClassTokenType* _auto_1027_2, RogueClassCmd* _auto_1028_3 )
{
  THIS->new_value = _auto_1028_3;
  THIS->op = _auto_1027_2;
  THIS->target = _auto_1026_1;
  THIS->t = _auto_1025_0;
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init_object( RogueClassCmdAdjustLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueString* RogueCmdAdjustLocal__type_name( RogueClassCmdAdjustLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[972]);
}

RogueClassCmd* RogueCmdAdjustLocal__clone__CloneArgs( RogueClassCmdAdjustLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueTaskArgs__cmd_read_this__Token( task_args_1, ROGUE_ARG(THIS->t) )))), ROGUE_ARG(((RogueTaskArgs__convert_local_name__Local( task_args_1, ROGUE_ARG(THIS->local_info) )))) )))))), ROGUE_ARG(THIS->delta) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->delta) ))))));
  }
}

void RogueCmdAdjustLocal__dispatch__Visitor( RogueClassCmdAdjustLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAdjustLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustLocal__resolve__Scope( RogueClassCmdAdjustLocal* THIS, RogueClassScope* scope_0 )
{
  if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), Rogue_literal_strings[1037], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustLocal__type( RogueClassCmdAdjustLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[239] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init__Token_Local_Int32( RogueClassCmdAdjustLocal* THIS, RogueClassToken* _auto_1041_0, RogueClassLocal* _auto_1042_1, RogueInt32 _auto_1043_2 )
{
  THIS->delta = _auto_1043_2;
  THIS->local_info = _auto_1042_1;
  THIS->t = _auto_1041_0;
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init_object( RogueClassCmdReadLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueString* RogueCmdReadLocal__type_name( RogueClassCmdReadLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[973]);
}

RogueClassCmd* RogueCmdReadLocal__clone__CloneArgs( RogueClassCmdReadLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_read_local__CmdReadLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    if (!!(task_args_2))
    {
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_read__Token_Local( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))))));
}

void RogueCmdReadLocal__dispatch__Visitor( RogueClassCmdReadLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadLocal__resolve__Scope( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadLocal__resolve_adjust__Scope_Int32( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdAdjustLocal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadLocal__type( RogueClassCmdReadLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdReadLocal__write_cpp__CPPWriter_Logical( RogueClassCmdReadLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init__Token_Local( RogueClassCmdReadLocal* THIS, RogueClassToken* _auto_1044_0, RogueClassLocal* _auto_1045_1 )
{
  THIS->local_info = _auto_1045_1;
  THIS->t = _auto_1044_0;
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueClassCmdCompareLE* RogueCmdCompareLE__init_object( RogueClassCmdCompareLE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareLE*)(THIS);
}

RogueString* RogueCmdCompareLE__type_name( RogueClassCmdCompareLE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1227]);
}

RogueClassCmd* RogueCmdCompareLE__clone__CloneArgs( RogueClassCmdCompareLE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLE__combine_literal_operands__Type( RogueClassCmdCompareLE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value <= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value <= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareLE__dispatch__Visitor( RogueClassCmdCompareLE* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdCompareLE__symbol( RogueClassCmdCompareLE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[227]);
}

RogueClassCmd* RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdComparison* RogueCmdComparison__init_object( RogueClassCmdComparison* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdComparison*)(THIS);
}

RogueString* RogueCmdComparison__type_name( RogueClassCmdComparison* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1211]);
}

void RogueCmdComparison__dispatch__Visitor( RogueClassCmdComparison* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassType* Rogue_CmdComparison__type( RogueClassCmdComparison* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueLogical RogueCmdComparison__requires_parens( RogueClassCmdComparison* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdComparison__resolve_for_types__Scope_Type_Type( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  THIS->resolved = true;
  if ((((RogueType__is_compound( left_type_1 ))) || ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((call_ROGUEM589( 50, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, false ))));
    if (!!(result_3))
    {
      return (RogueClassCmd*)(result_3);
    }
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1207] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
  else if ((((RogueType__is_reference( left_type_1 ))) || ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)((call_ROGUEM589( 50, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, true )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  THIS->left = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->left), common_type_4, scope_0 ))), scope_0 ));
  THIS->right = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->right), common_type_4, scope_0 ))), scope_0 ));
  if (((call_ROGUEM126( 27, ROGUE_ARG(THIS->left) )) && (call_ROGUEM126( 27, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((call_ROGUEM123( 17, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1206] ))));
}

RogueClassCmdRange* RogueCmdRange__init_object( RogueClassCmdRange* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdRange*)(THIS);
}

RogueString* RogueCmdRange__type_name( RogueClassCmdRange* THIS )
{
  return (RogueString*)(Rogue_literal_strings[974]);
}

void RogueCmdRange__dispatch__Visitor( RogueClassCmdRange* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdRange__resolve__Scope( RogueClassCmdRange* THIS, RogueClassScope* scope_0 )
{
  THIS->first = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->first), scope_0 ))) )));
  THIS->last = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->last), scope_0 ))) )));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,range_type_1,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->first) ))), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->last) ))) )))));
  if (!!(THIS->step_size))
  {
    THIS->step_size = (call_ROGUEM120( 34, ROGUE_ARG(THIS->step_size), scope_0 ));
    range_type_1 = ((RogueClassType*)((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), range_type_1, ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->step_size) ))) ))));
  }
  else
  {
    THIS->step_size = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(((RogueCmdLiteralInt32__cast_to__Type_Scope( ROGUE_ARG(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM594( 43, ROGUE_ARG(THIS) ))) )))), range_type_1, scope_0 )))), scope_0 ))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(Rogue_literal_strings[1038]));
  if (RogueObject_instance_of(THIS,RogueTypeCmdRangeUpToLessThan))
  {
    name_2 = ((RogueString*)Rogue_literal_strings[1039]);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[234] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(range_type_1))) )))) )))), Rogue_literal_strings[143] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->first), ROGUE_ARG(THIS->last), ROGUE_ARG(THIS->step_size) )))) )))), scope_0 ))));
}

RogueClassCmdRange* RogueCmdRange__init__Token_Cmd_Cmd_Cmd( RogueClassCmdRange* THIS, RogueClassToken* _auto_1046_0, RogueClassCmd* _auto_1047_1, RogueClassCmd* _auto_1048_2, RogueClassCmd* _auto_1049_3 )
{
  THIS->step_size = _auto_1049_3;
  THIS->last = _auto_1048_2;
  THIS->first = _auto_1047_1;
  THIS->t = _auto_1046_0;
  return (RogueClassCmdRange*)(THIS);
}

RogueInt32 RogueCmdRange__default_step_size( RogueClassCmdRange* THIS )
{
  return (RogueInt32)(1);
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init_object( RogueClassCmdModifyAndAssignLocal* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignLocal__type_name( RogueClassCmdModifyAndAssignLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1245]);
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__clone__CloneArgs( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_args_1->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->index) )))) )))) )))) )))))), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
  }
}

void RogueCmdModifyAndAssignLocal__dispatch__Visitor( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdModifyAndAssignLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__resolve__Scope( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[410], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))->name));
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1040] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->local_info->_type))) )))) )))), Rogue_literal_strings[1041] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1042] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1043] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1044] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[378] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3063_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3063_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3063_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3063_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1045] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1046] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignLocal__type( RogueClassCmdModifyAndAssignLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[580] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassToken* _auto_1050_0, RogueClassLocal* _auto_1051_1, RogueClassTokenType* _auto_1052_2, RogueClassCmd* _auto_1053_3 )
{
  THIS->new_value = _auto_1053_3;
  THIS->op = _auto_1052_2;
  THIS->local_info = _auto_1051_1;
  THIS->t = _auto_1050_0;
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueClassCmdResolvedModifyAndAssign* RogueCmdResolvedModifyAndAssign__init_object( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdResolvedModifyAndAssign*)(THIS);
}

RogueString* RogueCmdResolvedModifyAndAssign__type_name( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[975]);
}

void RogueCmdResolvedModifyAndAssign__dispatch__Visitor( RogueClassCmdResolvedModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueString* RogueCmdResolvedModifyAndAssign__symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  if (((void*)THIS->op) == ((void*)RogueTokenType_symbol_tilde_equals))
  {
    return (RogueString*)(Rogue_literal_strings[214]);
  }
  return (RogueString*)(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) ))));
}

RogueString* RogueCmdResolvedModifyAndAssign__cpp_symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  return (RogueString*)(((RogueCmdResolvedModifyAndAssign__symbol( ROGUE_ARG(THIS) ))));
}

RogueClassCmdRangeUpTo* RogueCmdRangeUpTo__init_object( RogueClassCmdRangeUpTo* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeUpTo*)(THIS);
}

RogueString* RogueCmdRangeUpTo__type_name( RogueClassCmdRangeUpTo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1242]);
}

RogueClassCmd* RogueCmdRangeUpTo__clone__CloneArgs( RogueClassCmdRangeUpTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeUpTo__dispatch__Visitor( RogueClassCmdRangeUpTo* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueClassCmdRangeUpToLessThan* RogueCmdRangeUpToLessThan__init_object( RogueClassCmdRangeUpToLessThan* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeUpToLessThan*)(THIS);
}

RogueString* RogueCmdRangeUpToLessThan__type_name( RogueClassCmdRangeUpToLessThan* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1243]);
}

RogueClassCmd* RogueCmdRangeUpToLessThan__clone__CloneArgs( RogueClassCmdRangeUpToLessThan* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeUpToLessThan__dispatch__Visitor( RogueClassCmdRangeUpToLessThan* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueClassCmdCompareLT* RogueCmdCompareLT__init_object( RogueClassCmdCompareLT* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareLT*)(THIS);
}

RogueString* RogueCmdCompareLT__type_name( RogueClassCmdCompareLT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1228]);
}

RogueClassCmd* RogueCmdCompareLT__clone__CloneArgs( RogueClassCmdCompareLT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLT__combine_literal_operands__Type( RogueClassCmdCompareLT* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value < ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value < ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareLT__dispatch__Visitor( RogueClassCmdCompareLT* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdCompareLT__symbol( RogueClassCmdCompareLT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[228]);
}

RogueClassCmd* RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdCompareGE* RogueCmdCompareGE__init_object( RogueClassCmdCompareGE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareGE*)(THIS);
}

RogueString* RogueCmdCompareGE__type_name( RogueClassCmdCompareGE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1229]);
}

RogueClassCmd* RogueCmdCompareGE__clone__CloneArgs( RogueClassCmdCompareGE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGE__combine_literal_operands__Type( RogueClassCmdCompareGE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value >= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value >= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareGE__dispatch__Visitor( RogueClassCmdCompareGE* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdCompareGE__symbol( RogueClassCmdCompareGE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[225]);
}

RogueClassCmd* RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdForEach* RogueCmdForEach__init_object( RogueClassCmdForEach* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdForEach*)(THIS);
}

RogueString* RogueCmdForEach__type_name( RogueClassCmdForEach* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1182]);
}

RogueClassCmd* RogueCmdForEach__clone__CloneArgs( RogueClassCmdForEach* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,result_1,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->collection), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_cmd), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  result_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdForEach__dispatch__Visitor( RogueClassCmdForEach* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdForEach( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdForEach__resolve__Scope( RogueClassCmdForEach* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->collection = (call_ROGUEM120( 34, ROGUE_ARG(THIS->collection), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,collection_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->collection) ))), scope_0 )))));
  RogueLogical has_count_2 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[418] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1047] ))))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_at_3,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1048] )))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_get_4,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1049] )))));
  RogueLogical has_get_5 = ((!!(m_get_4) || !!(m_at_3)));
  RogueInt32 step_size_6 = (1);
  if (!!(THIS->step_cmd))
  {
    THIS->step_cmd = (call_ROGUEM120( 34, ROGUE_ARG(THIS->step_cmd), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLiteralInt32*,literal_integer_cmd_7,(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->step_cmd,RogueTypeCmdLiteralInt32)))));
    if (!!(literal_integer_cmd_7))
    {
      step_size_6 = ((RogueInt32)literal_integer_cmd_7->value);
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[1050] ))));
    }
  }
  if ((has_count_2 && has_get_5))
  {
    if (!!(m_at_3))
    {
      m_get_4 = ((RogueClassMethod*)m_at_3);
    }
    THIS->collection = (call_ROGUEM120( 34, ROGUE_ARG(THIS->collection), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,collection_var_8,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->collection) ))), ROGUE_ARG(THIS->collection) )))));
    if (!(!!(THIS->index_var_name)))
    {
      THIS->index_var_name = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_9,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_cmd_10,0);
    if (step_size_6 >= 0)
    {
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))));
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[418] ))))));
    }
    else
    {
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[418] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) )))))));
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_11,0);
    if (!!(THIS->control_var_name))
    {
      control_var_11 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
      control_var_11->initial_value = ((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), ROGUE_ARG(m_get_4->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))) )))) )))));
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(control_var_11->t), control_var_11, false )))))), 0 );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,modifier_12,0);
    if ((step_size_6 >= -1 && step_size_6 <= 1))
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_9, step_size_6 ))))));
    }
    else if (step_size_6 >= 0)
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_plus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), step_size_6 )))))) ))))));
    }
    else
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_minus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(step_size_6))) )))))) ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_13,0);
    if (step_size_6 >= 0)
    {
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    else
    {
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_14,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, condition_13, ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_14), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    RogueCmdGenericLoop__add_control_var__Local( result_14, collection_var_8 );
    RogueCmdGenericLoop__add_control_var__Local( result_14, index_var_9 );
    RogueCmdGenericLoop__add_upkeep__Cmd( result_14, modifier_12 );
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( result_14, scope_0 ))));
  }
  else
  {
    RogueLogical has_another_15 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[1051] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1052] ))))));
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_read_16,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1053] )))));
    if ((!(has_another_15) || !(!!(m_read_16))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[1054] ))));
    }
    if (!(!!(m_read_16->_return_type)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[1055] ))));
    }
    if (!!(THIS->step_cmd))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[1056] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,reader_var_17,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), collection_type_1, ROGUE_ARG(THIS->collection) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_18,0);
    if (!!(THIS->index_var_name))
    {
      index_var_18 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))));
    }
    if (!!(THIS->control_var_name))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_19,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(m_read_16->_return_type), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[1057] )))))) )))));
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->collection->t), control_var_19, false )))))), 0 );
    }
    else
    {
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[1057] )))))), 0 );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,rt_20,(reader_var_17->t));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_21,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), rt_20, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), rt_20, reader_var_17 )))))), Rogue_literal_strings[1051] )))))), ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)cmd_loop_21), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, reader_var_17 );
    if (!!(index_var_18))
    {
      RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, index_var_18 );
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_21, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_18, 1 )))))) );
    }
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( cmd_loop_21, scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdForEach* RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( RogueClassCmdForEach* THIS, RogueClassToken* _auto_1054_0, RogueString* _auto_1055_1, RogueString* _auto_1056_2, RogueClassCmd* _auto_1057_3, RogueClassCmd* _auto_1058_4, RogueClassCmdStatementList* _auto_1059_5 )
{
  THIS->statements = _auto_1059_5;
  THIS->step_cmd = _auto_1058_4;
  THIS->collection = _auto_1057_3;
  THIS->index_var_name = _auto_1056_2;
  THIS->control_var_name = _auto_1055_1;
  THIS->t = _auto_1054_0;
  THIS->_control_type = 9;
  return (RogueClassCmdForEach*)(THIS);
}

RogueClassCmdRangeDownTo* RogueCmdRangeDownTo__init_object( RogueClassCmdRangeDownTo* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeDownTo*)(THIS);
}

RogueString* RogueCmdRangeDownTo__type_name( RogueClassCmdRangeDownTo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1244]);
}

RogueClassCmd* RogueCmdRangeDownTo__clone__CloneArgs( RogueClassCmdRangeDownTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeDownTo__dispatch__Visitor( RogueClassCmdRangeDownTo* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueInt32 RogueCmdRangeDownTo__default_step_size( RogueClassCmdRangeDownTo* THIS )
{
  return (RogueInt32)(-1);
}

RogueClassCmdLogicalXor* RogueCmdLogicalXor__init_object( RogueClassCmdLogicalXor* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalXor*)(THIS);
}

RogueString* RogueCmdLogicalXor__type_name( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1248]);
}

RogueClassCmd* RogueCmdLogicalXor__clone__CloneArgs( RogueClassCmdLogicalXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalXor__dispatch__Visitor( RogueClassCmdLogicalXor* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdLogicalXor__symbol( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[204]);
}

RogueString* RogueCmdLogicalXor__cpp_symbol( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[213]);
}

RogueLogical RogueCmdLogicalXor__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalXor* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 ^ b_1));
}

RogueClassCmdBinaryLogical* RogueCmdBinaryLogical__init_object( RogueClassCmdBinaryLogical* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdBinaryLogical*)(THIS);
}

RogueString* RogueCmdBinaryLogical__type_name( RogueClassCmdBinaryLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1197]);
}

void RogueCmdBinaryLogical__dispatch__Visitor( RogueClassCmdBinaryLogical* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdBinaryLogical__resolve__Scope( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0 )
{
  THIS->left = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->left), scope_0 ))), scope_0 )));
  THIS->right = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->right), scope_0 ))), scope_0 )));
  if (((call_ROGUEM126( 27, ROGUE_ARG(THIS->left) )) && (call_ROGUEM126( 27, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM646( 50, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value) ))) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdBinaryLogical__type( RogueClassCmdBinaryLogical* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmd* RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueLogical RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical( RogueClassCmdBinaryLogical* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM644( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1198] )))) )))) ))));
}

RogueClassCmdLogicalOr* RogueCmdLogicalOr__init_object( RogueClassCmdLogicalOr* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalOr*)(THIS);
}

RogueString* RogueCmdLogicalOr__type_name( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1249]);
}

RogueClassCmd* RogueCmdLogicalOr__clone__CloneArgs( RogueClassCmdLogicalOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalOr__dispatch__Visitor( RogueClassCmdLogicalOr* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdLogicalOr__symbol( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[199]);
}

RogueString* RogueCmdLogicalOr__cpp_symbol( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[254]);
}

RogueLogical RogueCmdLogicalOr__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalOr* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 || b_1));
}

RogueClassCmdLogicalAnd* RogueCmdLogicalAnd__init_object( RogueClassCmdLogicalAnd* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalAnd*)(THIS);
}

RogueString* RogueCmdLogicalAnd__type_name( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1250]);
}

RogueClassCmd* RogueCmdLogicalAnd__clone__CloneArgs( RogueClassCmdLogicalAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalAnd__dispatch__Visitor( RogueClassCmdLogicalAnd* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdLogicalAnd__symbol( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[189]);
}

RogueString* RogueCmdLogicalAnd__cpp_symbol( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[207]);
}

RogueLogical RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalAnd* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 && b_1));
}

RogueClassCmdCompareEQ* RogueCmdCompareEQ__init_object( RogueClassCmdCompareEQ* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareEQ*)(THIS);
}

RogueString* RogueCmdCompareEQ__type_name( RogueClassCmdCompareEQ* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1230]);
}

RogueClassCmd* RogueCmdCompareEQ__clone__CloneArgs( RogueClassCmdCompareEQ* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareEQ__combine_literal_operands__Type( RogueClassCmdCompareEQ* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value == ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value == ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareEQ__dispatch__Visitor( RogueClassCmdCompareEQ* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueLogical RogueCmdCompareEQ__requires_parens( RogueClassCmdCompareEQ* THIS )
{
  return (RogueLogical)(false);
}

RogueString* RogueCmdCompareEQ__symbol( RogueClassCmdCompareEQ* THIS )
{
  return (RogueString*)(Rogue_literal_strings[221]);
}

RogueClassCmd* RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareEQ* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdCompareIs* RogueCmdCompareIs__init_object( RogueClassCmdCompareIs* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareIs*)(THIS);
}

RogueString* RogueCmdCompareIs__type_name( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1231]);
}

RogueClassCmd* RogueCmdCompareIs__clone__CloneArgs( RogueClassCmdCompareIs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdCompareIs__dispatch__Visitor( RogueClassCmdCompareIs* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdCompareIs__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1201] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1202] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmd* RogueCmdCompareIs__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIs* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1225] ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
}

RogueString* RogueCmdCompareIs__symbol( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[162]);
}

RogueString* RogueCmdCompareIs__cpp_symbol( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[221]);
}

RogueClassCmdCompareNE* RogueCmdCompareNE__init_object( RogueClassCmdCompareNE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareNE*)(THIS);
}

RogueString* RogueCmdCompareNE__type_name( RogueClassCmdCompareNE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1232]);
}

RogueClassCmd* RogueCmdCompareNE__clone__CloneArgs( RogueClassCmdCompareNE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareNE__combine_literal_operands__Type( RogueClassCmdCompareNE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value != ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value != ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareNE__dispatch__Visitor( RogueClassCmdCompareNE* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdCompareNE__symbol( RogueClassCmdCompareNE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[231]);
}

RogueClassCmd* RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareNE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdCompareIsNot* RogueCmdCompareIsNot__init_object( RogueClassCmdCompareIsNot* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareIsNot*)(THIS);
}

RogueString* RogueCmdCompareIsNot__type_name( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1233]);
}

RogueClassCmd* RogueCmdCompareIsNot__clone__CloneArgs( RogueClassCmdCompareIsNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdCompareIsNot__dispatch__Visitor( RogueClassCmdCompareIsNot* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIsNot* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1201] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1203] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmd* RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIsNot* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1225] ))));
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1226] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
  }
}

RogueString* RogueCmdCompareIsNot__symbol( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[163]);
}

RogueString* RogueCmdCompareIsNot__cpp_symbol( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[231]);
}

RogueClassCmdCompareGT* RogueCmdCompareGT__init_object( RogueClassCmdCompareGT* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareGT*)(THIS);
}

RogueString* RogueCmdCompareGT__type_name( RogueClassCmdCompareGT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1234]);
}

RogueClassCmd* RogueCmdCompareGT__clone__CloneArgs( RogueClassCmdCompareGT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGT__combine_literal_operands__Type( RogueClassCmdCompareGT* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value > ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value > ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareGT__dispatch__Visitor( RogueClassCmdCompareGT* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdCompareGT__symbol( RogueClassCmdCompareGT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[226]);
}

RogueClassCmd* RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM387( 34, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueClassCmdInstanceOf* RogueCmdInstanceOf__init_object( RogueClassCmdInstanceOf* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdInstanceOf*)(THIS);
}

RogueString* RogueCmdInstanceOf__type_name( RogueClassCmdInstanceOf* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1251]);
}

RogueClassCmd* RogueCmdInstanceOf__clone__CloneArgs( RogueClassCmdInstanceOf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdInstanceOf__dispatch__Visitor( RogueClassCmdInstanceOf* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdInstanceOf__resolve__Scope( RogueClassCmdInstanceOf* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInstanceOf__type( RogueClassCmdInstanceOf* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdInstanceOf__write_cpp__CPPWriter_Logical( RogueClassCmdInstanceOf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1115] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[5] );
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init_object( RogueClassCmdTypeOperator* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueString* RogueCmdTypeOperator__type_name( RogueClassCmdTypeOperator* THIS )
{
  return (RogueString*)(Rogue_literal_strings[976]);
}

void RogueCmdTypeOperator__dispatch__Visitor( RogueClassCmdTypeOperator* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* Rogue_CmdTypeOperator__type( RogueClassCmdTypeOperator* THIS )
{
  return (RogueClassType*)(THIS->_target_type);
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init__Token_Cmd_Type( RogueClassCmdTypeOperator* THIS, RogueClassToken* _auto_1060_0, RogueClassCmd* _auto_1061_1, RogueClassType* _auto_1062_2 )
{
  THIS->_target_type = _auto_1062_2;
  THIS->operand = _auto_1061_1;
  THIS->t = _auto_1060_0;
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueClassCmdLogicalNot* RogueCmdLogicalNot__init_object( RogueClassCmdLogicalNot* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdLogicalNot*)(THIS);
}

RogueString* RogueCmdLogicalNot__type_name( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1257]);
}

RogueClassCmd* RogueCmdLogicalNot__clone__CloneArgs( RogueClassCmdLogicalNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalNot__dispatch__Visitor( RogueClassCmdLogicalNot* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassCmd* RogueCmdLogicalNot__resolve__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))), scope_0 )));
  if ((call_ROGUEM126( 27, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)(((RogueCmdLogicalNot__resolve_for_literal_operand__Scope( ROGUE_ARG(THIS), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdUnary__resolve_for_operand_type__Scope_Type( ROGUE_ARG(((RogueClassCmdUnary*)THIS)), scope_0, ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))) ))));
  }
}

RogueClassType* Rogue_CmdLogicalNot__type( RogueClassCmdLogicalNot* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueString* RogueCmdLogicalNot__prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1261]);
}

RogueClassCmd* RogueCmdLogicalNot__resolve_for_literal_operand__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalNot__cpp_prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[223]);
}

RogueClassCmdUnary* RogueCmdUnary__init_object( RogueClassCmdUnary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdUnary*)(THIS);
}

RogueString* RogueCmdUnary__type_name( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[977]);
}

void RogueCmdUnary__dispatch__Visitor( RogueClassCmdUnary* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdUnary__resolve__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  if ((call_ROGUEM126( 27, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)((call_ROGUEM709( 45, ROGUE_ARG(THIS), scope_0 )));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdUnary__resolve_for_operand_type__Scope_Type( ROGUE_ARG(THIS), scope_0, ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))), scope_0 )))) ))));
  }
}

RogueClassType* Rogue_CmdUnary__type( RogueClassCmdUnary* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->operand) )));
}

void RogueCmdUnary__write_cpp__CPPWriter_Logical( RogueClassCmdUnary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG((call_ROGUEM706( 48, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[92] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] )))), ROGUE_ARG((call_ROGUEM706( 49, ROGUE_ARG(THIS) ))) );
}

RogueClassCmdUnary* RogueCmdUnary__init__Token_Cmd( RogueClassCmdUnary* THIS, RogueClassToken* _auto_1063_0, RogueClassCmd* _auto_1064_1 )
{
  THIS->operand = _auto_1064_1;
  THIS->t = _auto_1063_0;
  return (RogueClassCmdUnary*)(THIS);
}

RogueString* RogueCmdUnary__prefix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__fn_name( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(((RogueString*)(NULL)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_literal_operand__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_operand_type__Scope_Type( RogueClassCmdUnary* THIS, RogueClassScope* scope_0, RogueClassType* operand_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,((call_ROGUEM706( 44, ROGUE_ARG(THIS) ))));
  if (!!(name_2))
  {
    if (((RogueType__has_method_named__String( operand_type_1, name_2 ))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), name_2 )))), scope_0 ))));
    }
    if (!(((RogueType__is_primitive( operand_type_1 )))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1012] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(operand_type_1))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[1058] )))) )))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdUnary__suffix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__cpp_prefix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)((call_ROGUEM706( 43, ROGUE_ARG(THIS) )));
}

RogueString* RogueCmdUnary__cpp_suffix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)((call_ROGUEM706( 47, ROGUE_ARG(THIS) )));
}

RogueClassCmdBitwiseXor* RogueCmdBitwiseXor__init_object( RogueClassCmdBitwiseXor* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseXor*)(THIS);
}

RogueString* RogueCmdBitwiseXor__type_name( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1264]);
}

RogueClassCmd* RogueCmdBitwiseXor__clone__CloneArgs( RogueClassCmdBitwiseXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseXor__combine_literal_operands__Type( RogueClassCmdBitwiseXor* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value ^ ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value ^ ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseXor__dispatch__Visitor( RogueClassCmdBitwiseXor* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdBitwiseXor__symbol( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[246]);
}

RogueString* RogueCmdBitwiseXor__cpp_symbol( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[213]);
}

RogueClassCmdBitwiseOp* RogueCmdBitwiseOp__init_object( RogueClassCmdBitwiseOp* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdBitwiseOp*)(THIS);
}

RogueString* RogueCmdBitwiseOp__type_name( RogueClassCmdBitwiseOp* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1212]);
}

void RogueCmdBitwiseOp__dispatch__Visitor( RogueClassCmdBitwiseOp* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type( RogueClassCmdBitwiseOp* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  if ((((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte) || ((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    THIS->left = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    THIS->right = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    THIS->left = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0 ))), scope_0 ));
    THIS->right = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0 ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    THIS->left = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0 ))), scope_0 ));
    THIS->right = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0 ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1208] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM394( 48, ROGUE_ARG(((RogueClassCmdBinary*)THIS)) ))) )))) )))), Rogue_literal_strings[1209] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
}

RogueClassCmd* RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type( RogueClassCmdBitwiseOp* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueClassCmdBitwiseOr* RogueCmdBitwiseOr__init_object( RogueClassCmdBitwiseOr* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseOr*)(THIS);
}

RogueString* RogueCmdBitwiseOr__type_name( RogueClassCmdBitwiseOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1265]);
}

RogueClassCmd* RogueCmdBitwiseOr__clone__CloneArgs( RogueClassCmdBitwiseOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseOr__combine_literal_operands__Type( RogueClassCmdBitwiseOr* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value | ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value || ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseOr__dispatch__Visitor( RogueClassCmdBitwiseOr* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdBitwiseOr__symbol( RogueClassCmdBitwiseOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[252]);
}

RogueClassCmdBitwiseAnd* RogueCmdBitwiseAnd__init_object( RogueClassCmdBitwiseAnd* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseAnd*)(THIS);
}

RogueString* RogueCmdBitwiseAnd__type_name( RogueClassCmdBitwiseAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1266]);
}

RogueClassCmd* RogueCmdBitwiseAnd__clone__CloneArgs( RogueClassCmdBitwiseAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseAnd__combine_literal_operands__Type( RogueClassCmdBitwiseAnd* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value & ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value && ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseAnd__dispatch__Visitor( RogueClassCmdBitwiseAnd* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdBitwiseAnd__symbol( RogueClassCmdBitwiseAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[205]);
}

RogueClassCmdBitwiseShiftLeft* RogueCmdBitwiseShiftLeft__init_object( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftLeft*)(THIS);
}

RogueString* RogueCmdBitwiseShiftLeft__type_name( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1267]);
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__clone__CloneArgs( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__combine_literal_operands__Type( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftLeft__dispatch__Visitor( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdBitwiseShiftLeft__symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[242]);
}

RogueString* RogueCmdBitwiseShiftLeft__cpp_symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[234]);
}

RogueClassCmdBitwiseShiftRight* RogueCmdBitwiseShiftRight__init_object( RogueClassCmdBitwiseShiftRight* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftRight*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRight__type_name( RogueClassCmdBitwiseShiftRight* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1268]);
}

RogueClassCmd* RogueCmdBitwiseShiftRight__clone__CloneArgs( RogueClassCmdBitwiseShiftRight* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRight__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRight* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftRight__dispatch__Visitor( RogueClassCmdBitwiseShiftRight* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdBitwiseShiftRight__resolve__Scope( RogueClassCmdBitwiseShiftRight* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBitwiseShiftRight*,cmd_shift_2,(((RogueClassCmdBitwiseShiftRight*)(RogueObject_as(result_1,RogueTypeCmdBitwiseShiftRight)))));
  if (!(!!(cmd_shift_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[810] )))))), Rogue_literal_strings[1199], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_shift_2->left), ROGUE_ARG(cmd_shift_2->right) )))) )))), scope_0 ))));
}

RogueString* RogueCmdBitwiseShiftRight__symbol( RogueClassCmdBitwiseShiftRight* THIS )
{
  return (RogueString*)(Rogue_literal_strings[243]);
}

RogueClassCmdBitwiseShiftRightX* RogueCmdBitwiseShiftRightX__init_object( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftRightX*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRightX__type_name( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1269]);
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__clone__CloneArgs( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftRightX__dispatch__Visitor( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdBitwiseShiftRightX__symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[244]);
}

RogueString* RogueCmdBitwiseShiftRightX__cpp_symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[143]);
}

RogueClassCmdSubtract* RogueCmdSubtract__init_object( RogueClassCmdSubtract* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdSubtract*)(THIS);
}

RogueString* RogueCmdSubtract__type_name( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1213]);
}

RogueClassCmd* RogueCmdSubtract__clone__CloneArgs( RogueClassCmdSubtract* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdSubtract__combine_literal_operands__Type( RogueClassCmdSubtract* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value - ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value - ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdSubtract__dispatch__Visitor( RogueClassCmdSubtract* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdSubtract__fn_name( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1218]);
}

RogueString* RogueCmdSubtract__symbol( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[229]);
}

RogueClassCmdMultiply* RogueCmdMultiply__init_object( RogueClassCmdMultiply* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdMultiply*)(THIS);
}

RogueString* RogueCmdMultiply__type_name( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1214]);
}

RogueClassCmd* RogueCmdMultiply__clone__CloneArgs( RogueClassCmdMultiply* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMultiply__combine_literal_operands__Type( RogueClassCmdMultiply* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value * ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value * ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdMultiply__dispatch__Visitor( RogueClassCmdMultiply* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdMultiply__fn_name( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1219]);
}

RogueString* RogueCmdMultiply__symbol( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[248]);
}

RogueClassCmdDivide* RogueCmdDivide__init_object( RogueClassCmdDivide* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdDivide*)(THIS);
}

RogueString* RogueCmdDivide__type_name( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1215]);
}

RogueClassCmd* RogueCmdDivide__clone__CloneArgs( RogueClassCmdDivide* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdDivide__combine_literal_operands__Type( RogueClassCmdDivide* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value / ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value / ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdDivide__dispatch__Visitor( RogueClassCmdDivide* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueString* RogueCmdDivide__fn_name( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1220]);
}

RogueString* RogueCmdDivide__symbol( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[73]);
}

RogueClassCmdMod* RogueCmdMod__init_object( RogueClassCmdMod* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdMod*)(THIS);
}

RogueString* RogueCmdMod__type_name( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1216]);
}

RogueClassCmd* RogueCmdMod__clone__CloneArgs( RogueClassCmdMod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMod__combine_literal_operands__Type( RogueClassCmdMod* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Real64_Real64( ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Int32_Int32( ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdMod__dispatch__Visitor( RogueClassCmdMod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdMod__resolve__Scope( RogueClassCmdMod* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  if ((call_ROGUEM126( 27, result_1 )))
  {
    return (RogueClassCmd*)(result_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdMod*,cmd_mod_2,(((RogueClassCmdMod*)(RogueObject_as(result_1,RogueTypeCmdMod)))));
  if (!(!!(cmd_mod_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[810] )))))), Rogue_literal_strings[1200], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_mod_2->left), ROGUE_ARG(cmd_mod_2->right) )))) )))), scope_0 ))));
}

RogueString* RogueCmdMod__fn_name( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1221]);
}

RogueString* RogueCmdMod__symbol( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[235]);
}

RogueClassCmdPower* RogueCmdPower__init_object( RogueClassCmdPower* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdPower*)(THIS);
}

RogueString* RogueCmdPower__type_name( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1217]);
}

RogueClassCmd* RogueCmdPower__clone__CloneArgs( RogueClassCmdPower* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdPower__combine_literal_operands__Type( RogueClassCmdPower* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64) pow((double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value, (double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32) pow((double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value, (double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdPower__dispatch__Visitor( RogueClassCmdPower* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdPower__write_cpp__CPPWriter_Logical( RogueClassCmdPower* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->left) ))) )))), Rogue_literal_strings[1204] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1205] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
}

RogueString* RogueCmdPower__fn_name( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1222]);
}

RogueString* RogueCmdPower__symbol( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[213]);
}

RogueClassCmdNegate* RogueCmdNegate__init_object( RogueClassCmdNegate* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdNegate*)(THIS);
}

RogueString* RogueCmdNegate__type_name( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1258]);
}

RogueClassCmd* RogueCmdNegate__clone__CloneArgs( RogueClassCmdNegate* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdNegate__dispatch__Visitor( RogueClassCmdNegate* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassType* RogueCmdNegate__implicit_type__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((call_ROGUEM127( 26, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueString* RogueCmdNegate__prefix_symbol( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1262]);
}

RogueString* RogueCmdNegate__fn_name( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1218]);
}

RogueClassCmd* RogueCmdNegate__resolve_for_literal_operand__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdNegate__suffix_symbol( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[32]);
}

RogueClassCmdBitwiseNot* RogueCmdBitwiseNot__init_object( RogueClassCmdBitwiseNot* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdBitwiseNot*)(THIS);
}

RogueString* RogueCmdBitwiseNot__type_name( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1259]);
}

RogueClassCmd* RogueCmdBitwiseNot__clone__CloneArgs( RogueClassCmdBitwiseNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdBitwiseNot__dispatch__Visitor( RogueClassCmdBitwiseNot* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassType* Rogue_CmdBitwiseNot__type( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->operand) )));
}

RogueString* RogueCmdBitwiseNot__prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[223]);
}

RogueString* RogueCmdBitwiseNot__fn_name( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1255]);
}

RogueClassCmd* RogueCmdBitwiseNot__resolve_for_literal_operand__Scope( RogueClassCmdBitwiseNot* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(~(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdBitwiseNot__cpp_prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[246]);
}

RogueClassCmdLogicalize* RogueCmdLogicalize__init_object( RogueClassCmdLogicalize* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdLogicalize*)(THIS);
}

RogueString* RogueCmdLogicalize__type_name( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1260]);
}

RogueClassCmd* RogueCmdLogicalize__clone__CloneArgs( RogueClassCmdLogicalize* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalize__dispatch__Visitor( RogueClassCmdLogicalize* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassCmd* RogueCmdLogicalize__resolve__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ));
  if ((call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))->is_optional)
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), Rogue_literal_strings[478] )))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassType* Rogue_CmdLogicalize__type( RogueClassCmdLogicalize* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueString* RogueCmdLogicalize__prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdLogicalize__fn_name( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1256]);
}

RogueClassCmd* RogueCmdLogicalize__resolve_for_literal_operand__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalize__suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[240]);
}

RogueString* RogueCmdLogicalize__cpp_prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1263]);
}

RogueString* RogueCmdLogicalize__cpp_suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueClassCmdIsReference* RogueCmdIsReference__init_object( RogueClassCmdIsReference* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdIsReference*)(THIS);
}

RogueString* RogueCmdIsReference__type_name( RogueClassCmdIsReference* THIS )
{
  return (RogueString*)(Rogue_literal_strings[978]);
}

RogueClassCmd* RogueCmdIsReference__clone__CloneArgs( RogueClassCmdIsReference* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIsReference__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIsReference*,ROGUE_CREATE_OBJECT(CmdIsReference))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))));
}

void RogueCmdIsReference__dispatch__Visitor( RogueClassCmdIsReference* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdIsReference( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdIsReference__resolve__Scope( RogueClassCmdIsReference* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueType__is_reference( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))) ))) )))) ))))));
}

RogueClassType* Rogue_CmdIsReference__type( RogueClassCmdIsReference* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdIsReference* RogueCmdIsReference__init__Token_Cmd( RogueClassCmdIsReference* THIS, RogueClassToken* _auto_1065_0, RogueClassCmd* _auto_1066_1 )
{
  THIS->operand = _auto_1066_1;
  THIS->t = _auto_1065_0;
  return (RogueClassCmdIsReference*)(THIS);
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init_object( RogueClassCmdElementAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueString* RogueCmdElementAccess__to_String( RogueClassCmdElementAccess* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->context))) )))) )))), Rogue_literal_strings[233] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->index))) )))) )))), Rogue_literal_strings[49] )))) ))));
}

RogueString* RogueCmdElementAccess__type_name( RogueClassCmdElementAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[979]);
}

RogueClassCmd* RogueCmdElementAccess__clone__CloneArgs( RogueClassCmdElementAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

void RogueCmdElementAccess__dispatch__Visitor( RogueClassCmdElementAccess* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdElementAccess( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdElementAccess__resolve__Scope( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0 )
{
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_1, scope_0 );
  if (context_type_1->is_array)
  {
    return (RogueClassCmd*)(((RogueCmdReadArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index) )))), scope_0 ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_2,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_2), ROGUE_ARG(THIS->index) );
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[1059], args_2 )))), true, false ))));
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_assignment__Scope_Cmd( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,((call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_2, scope_0 );
  if (context_type_2->is_array)
  {
    return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index), new_value_1 )))), scope_0 ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_3,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_3), ROGUE_ARG(THIS->index) )))), new_value_1 );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[310], args_3 )))), true, false )))));
    return (RogueClassCmd*)(result_4);
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_adjust__Scope_Int32( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)((call_ROGUEM130( 35, ROGUE_ARG(((RogueCmdElementAccess__clone__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), scope_0, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )));
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init__Token_Cmd_Cmd( RogueClassCmdElementAccess* THIS, RogueClassToken* _auto_1067_0, RogueClassCmd* _auto_1068_1, RogueClassCmd* _auto_1069_2 )
{
  THIS->index = _auto_1069_2;
  THIS->context = _auto_1068_1;
  THIS->t = _auto_1067_0;
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueClassCmdListConvert* RogueCmdListConvert__init_object( RogueClassCmdListConvert* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdListConvert*)(THIS);
}

RogueString* RogueCmdListConvert__type_name( RogueClassCmdListConvert* THIS )
{
  return (RogueString*)(Rogue_literal_strings[980]);
}

RogueClassCmdListConvert* RogueCmdListConvert__clone__CloneArgs( RogueClassCmdListConvert* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdListConvert*)(((RogueCmdListConvert__init__Token_Cmd_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdListConvert*,ROGUE_CREATE_OBJECT(CmdListConvert))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->list), clone_args_0 ))), ROGUE_ARG(THIS->_to_type), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->convert_fn), clone_args_0 ))) ))));
}

void RogueCmdListConvert__dispatch__Visitor( RogueClassCmdListConvert* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassType* RogueCmdListConvert__implicit_type__Scope( RogueClassCmdListConvert* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(THIS->_to_type);
}

RogueClassCmd* RogueCmdListConvert__resolve__Scope( RogueClassCmdListConvert* THIS, RogueClassScope* scope_0 )
{
  THIS->list = (call_ROGUEM120( 34, ROGUE_ARG(THIS->list), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,list_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(THIS->list) ))), scope_0 )))));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_to_type), scope_0 );
  if (!(list_type_1->is_list))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1060] ))));
  }
  if (THIS->_to_type->is_list)
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1061] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(list_type_1->_element_type))) )))) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_to_type->_element_type))) )))) )))), Rogue_literal_strings[143] )))) )))) )))))), Rogue_literal_strings[1062], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->convert_fn) )))) )))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1063] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(list_type_1->_element_type))) )))) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_to_type))) )))) )))), Rogue_literal_strings[143] )))) )))) )))))), Rogue_literal_strings[1062], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->convert_fn) )))) )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdListConvert__type( RogueClassCmdListConvert* THIS )
{
  return (RogueClassType*)(THIS->_to_type);
}

RogueClassCmdListConvert* RogueCmdListConvert__init__Token_Cmd_Type_Cmd( RogueClassCmdListConvert* THIS, RogueClassToken* _auto_1070_0, RogueClassCmd* _auto_1071_1, RogueClassType* _auto_1072_2, RogueClassCmd* _auto_1073_3 )
{
  THIS->convert_fn = _auto_1073_3;
  THIS->_to_type = _auto_1072_2;
  THIS->list = _auto_1071_1;
  THIS->t = _auto_1070_0;
  return (RogueClassCmdListConvert*)(THIS);
}

RogueClassCmdConvertToType* RogueCmdConvertToType__init_object( RogueClassCmdConvertToType* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdConvertToType*)(THIS);
}

RogueString* RogueCmdConvertToType__type_name( RogueClassCmdConvertToType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1252]);
}

RogueClassCmd* RogueCmdConvertToType__clone__CloneArgs( RogueClassCmdConvertToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdConvertToType__dispatch__Visitor( RogueClassCmdConvertToType* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdConvertToType__resolve__Scope( RogueClassCmdConvertToType* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,operand_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  if (((void*)operand_type_1) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  if ((((RogueType__is_primitive( operand_type_1 ))) && ((RogueType__is_primitive( ROGUE_ARG(THIS->_target_type) )))))
  {
    return (RogueClassCmd*)(((RogueCmdConvertToPrimitiveType__resolve__Scope( ROGUE_ARG(((RogueClassCmdConvertToPrimitiveType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToPrimitiveType*,ROGUE_CREATE_OBJECT(CmdConvertToPrimitiveType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(THIS->_target_type) )))))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[412], ROGUE_ARG(THIS->_target_type->name) )))) )))), scope_0 ))));
  }
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init_object( RogueClassCmdCreateCallback* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueString* RogueCmdCreateCallback__type_name( RogueClassCmdCreateCallback* THIS )
{
  return (RogueString*)(Rogue_literal_strings[981]);
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__clone__CloneArgs( RogueClassCmdCreateCallback* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdCreateCallback*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS->_return_type) ))));
}

void RogueCmdCreateCallback__dispatch__Visitor( RogueClassCmdCreateCallback* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCreateCallback( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateCallback__resolve__Scope( RogueClassCmdCreateCallback* THIS, RogueClassScope* scope_0 )
{
  if ((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[411] ))) && !!(THIS->_return_type)))
  {
    THIS->name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[412], ROGUE_ARG(THIS->_return_type->name) )));
  }
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_1, scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueType__find_method__String( context_type_1, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature) )))) )))));
  if (!(!!(m_2)))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,methods_3,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->method_lookup_by_name), ROGUE_ARG(THIS->name) )))));
    if (!(!!(methods_3)))
    {
      methods_3 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->global_method_lookup_by_name), ROGUE_ARG(THIS->name) ))));
    }
    if (!(!!(methods_3)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1064] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1065] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(context_type_1->name) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
    }
    if (methods_3->count != 1)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1066] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1067] )))) )))) ))));
    }
    m_2 = ((RogueClassMethod*)((RogueClassMethod*)(methods_3->data->objects[0])));
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_4,0);
  if (!!(m_2->parameters->count))
  {
    parameter_types_4 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_3064_13,(m_2->parameters));
      RogueInt32 _auto_3065_14 = (0);
      for (;_auto_3065_14 < _auto_3064_13->count;++_auto_3065_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_15,(((RogueClassLocal*)(_auto_3064_13->data->objects[_auto_3065_14]))));
        RogueType_List__add__Type( parameter_types_4, ROGUE_ARG(p_15->_type) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,callback_type_name_5,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(context_type_1->name), Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->name) )))), ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), parameter_types_4 )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_6,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), callback_type_name_5 )))));
  if (!(callback_type_6->defined))
  {
    callback_type_6->defined = true;
    RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 0 );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_4, ROGUE_ARG(m_2->_return_type) )))));
    RogueType_List__add__Type( ROGUE_ARG(callback_type_6->base_types), base_type_7 );
    RogueType_List__add__Type( ROGUE_ARG(base_type_7->extended_types), callback_type_6 );
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_8,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[301] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    if (!!(parameter_types_4))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_3066_16,(parameter_types_4));
        RogueInt32 i_17 = (0);
        for (;i_17 < _auto_3066_16->count;++i_17)
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,param_name_10,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[302], ROGUE_ARG((i_17 + 1)) )))));
          RogueMethod__add_parameter__Token_String_Type( m_call_8, ROGUE_ARG(THIS->t), param_name_10, ROGUE_ARG(((RogueClassType*)(parameter_types_4->data->objects[i_17]))) );
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_9), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), param_name_10 )))))) );
        }
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,0);
    if (((RogueMethod__is_global( m_2 ))))
    {
      RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 1024 );
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(context_type_1->name) )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    else
    {
      RogueType__add_property__Token_String_Type_Cmd( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[462], context_type_1, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_12,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[388] )))));
      RogueMethod__add_parameter__Token_String_Type( m_init_12, ROGUE_ARG(THIS->t), Rogue_literal_strings[462], ROGUE_ARG(((RogueClassType*)(NULL))) );
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[462] )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    if (!!(m_2->_return_type))
    {
      m_call_8->_return_type = m_2->_return_type;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), cmd_11 ))))));
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_8->statements)), cmd_11 );
  }
  if (((RogueMethod__is_global( m_2 ))))
  {
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), callback_type_6 )))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), callback_type_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->context) )))) )))), scope_0 ))));
  }
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( RogueClassCmdCreateCallback* THIS, RogueClassToken* _auto_1074_0, RogueClassCmd* _auto_1075_1, RogueString* _auto_1076_2, RogueString* _auto_1077_3, RogueClassType* _auto_1078_4 )
{
  THIS->_return_type = _auto_1078_4;
  THIS->signature = _auto_1077_3;
  THIS->name = _auto_1076_2;
  THIS->context = _auto_1075_1;
  THIS->t = _auto_1074_0;
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueClassCmdAs* RogueCmdAs__init_object( RogueClassCmdAs* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdAs*)(THIS);
}

RogueString* RogueCmdAs__type_name( RogueClassCmdAs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1253]);
}

RogueClassCmd* RogueCmdAs__clone__CloneArgs( RogueClassCmdAs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdAs__dispatch__Visitor( RogueClassCmdAs* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdAs__resolve__Scope( RogueClassCmdAs* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,operand_type_1,((call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  if (((void*)operand_type_1) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  if (!((((RogueType__is_reference( operand_type_1 ))) && ((RogueType__is_reference( ROGUE_ARG(THIS->_target_type) ))))))
  {
    return (RogueClassCmd*)(((RogueType__create_default_value__Token( ROGUE_ARG(THIS->_target_type), ROGUE_ARG(THIS->t) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdAs__write_cpp__CPPWriter_Logical( RogueClassCmdAs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[1116] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[5] );
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1117] );
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init_object( RogueClassCmdDefaultValue* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueString* RogueCmdDefaultValue__type_name( RogueClassCmdDefaultValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1189]);
}

RogueClassCmd* RogueCmdDefaultValue__clone__CloneArgs( RogueClassCmdDefaultValue* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdDefaultValue__dispatch__Visitor( RogueClassCmdDefaultValue* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdDefaultValue__resolve__Scope( RogueClassCmdDefaultValue* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_1,(((RogueType__create_default_value__Token( ROGUE_ARG(THIS->_of_type), ROGUE_ARG(THIS->t) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), default_value_1, ROGUE_ARG(THIS->_of_type) ))))))));
  }
  else
  {
    return (RogueClassCmd*)(default_value_1);
  }
}

RogueClassType* Rogue_CmdDefaultValue__type( RogueClassCmdDefaultValue* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init__Token_Type( RogueClassCmdDefaultValue* THIS, RogueClassToken* _auto_1079_0, RogueClassType* _auto_1080_1 )
{
  THIS->_of_type = _auto_1080_1;
  THIS->t = _auto_1079_0;
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init_object( RogueClassCmdLiteralNull* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueString* RogueCmdLiteralNull__type_name( RogueClassCmdLiteralNull* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1190]);
}

RogueClassCmd* RogueCmdLiteralNull__cast_to__Type_Scope( RogueClassCmdLiteralNull* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  if (target_type_0->is_optional)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(target_type_0->_element_type->name) )))) )))), Rogue_literal_strings[240] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralNull__clone__CloneArgs( RogueClassCmdLiteralNull* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), ROGUE_ARG(THIS->t) ))))));
}

void RogueCmdLiteralNull__dispatch__Visitor( RogueClassCmdLiteralNull* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__resolve__Scope( RogueClassCmdLiteralNull* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassType* Rogue_CmdLiteralNull__type( RogueClassCmdLiteralNull* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null);
}

void RogueCmdLiteralNull__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralNull* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1118] );
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init__Token( RogueClassCmdLiteralNull* THIS, RogueClassToken* _auto_1081_0 )
{
  THIS->t = _auto_1081_0;
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init_object( RogueClassCmdLiteralReal64* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueString* RogueCmdLiteralReal64__type_name( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1191]);
}

RogueClassCmd* RogueCmdLiteralReal64__clone__CloneArgs( RogueClassCmdLiteralReal64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralReal64__dispatch__Visitor( RogueClassCmdLiteralReal64* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralReal64__resolve__Scope( RogueClassCmdLiteralReal64* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralReal64__to_Logical( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralReal64__type( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
}

void RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralReal64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->value == THIS->value)
  {
    if ((THIS->value - THIS->value) == 0.0)
    {
      RogueCPPWriter__print__Real64( writer_0, ROGUE_ARG(THIS->value) );
    }
    else if (THIS->value > 0.0)
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1119] );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1120] );
    }
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1121] );
  }
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init__Token_Real64( RogueClassCmdLiteralReal64* THIS, RogueClassToken* _auto_1082_0, RogueReal64 _auto_1083_1 )
{
  THIS->value = _auto_1083_1;
  THIS->t = _auto_1082_0;
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init_object( RogueClassCmdLiteralInt64* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueString* RogueCmdLiteralInt64__type_name( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1192]);
}

RogueClassCmd* RogueCmdLiteralInt64__cast_to__Type_Scope( RogueClassCmdLiteralInt64* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32)(THIS->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralInt64__clone__CloneArgs( RogueClassCmdLiteralInt64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralInt64__dispatch__Visitor( RogueClassCmdLiteralInt64* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralInt64__resolve__Scope( RogueClassCmdLiteralInt64* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralInt64__to_Logical( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralInt64__type( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
}

void RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int64( writer_0, ROGUE_ARG(THIS->value) )))), Rogue_literal_strings[1122] );
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init__Token_Int64( RogueClassCmdLiteralInt64* THIS, RogueClassToken* _auto_1084_0, RogueInt64 _auto_1085_1 )
{
  THIS->value = _auto_1085_1;
  THIS->t = _auto_1084_0;
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init_object( RogueClassCmdLiteralCharacter* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueString* RogueCmdLiteralCharacter__type_name( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1193]);
}

RogueClassCmd* RogueCmdLiteralCharacter__clone__CloneArgs( RogueClassCmdLiteralCharacter* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralCharacter__dispatch__Visitor( RogueClassCmdLiteralCharacter* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralCharacter__resolve__Scope( RogueClassCmdLiteralCharacter* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralCharacter__to_Logical( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralCharacter__type( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
}

void RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralCharacter* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1123] );
  if ((THIS->value >= ((RogueCharacter)(32)) && THIS->value <= ((RogueCharacter)(126))))
  {
    switch (THIS->value)
    {
      case 10:
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1124] );
        break;
      }
      case (RogueCharacter)'\\':
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1125] );
        break;
      }
      case (RogueCharacter)'\'':
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1126] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[81] );
        RogueCPPWriter__print_literal_character__Character_Logical( writer_0, ROGUE_ARG(THIS->value), false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[81] );
      }
    }
  }
  else
  {
    RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(((RogueInt32)(THIS->value))) );
  }
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init__Token_Character( RogueClassCmdLiteralCharacter* THIS, RogueClassToken* _auto_1086_0, RogueCharacter _auto_1087_1 )
{
  THIS->value = _auto_1087_1;
  THIS->t = _auto_1086_0;
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueClassCmdLiteralThis* RogueCmdLiteralThis__init_object( RogueClassCmdLiteralThis* THIS )
{
  RogueCmdThisContext__init_object( ROGUE_ARG(((RogueClassCmdThisContext*)THIS)) );
  return (RogueClassCmdLiteralThis*)(THIS);
}

RogueString* RogueCmdLiteralThis__type_name( RogueClassCmdLiteralThis* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1271]);
}

RogueClassCmd* RogueCmdLiteralThis__clone__CloneArgs( RogueClassCmdLiteralThis* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_2))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))))));
  }
}

void RogueCmdLiteralThis__dispatch__Visitor( RogueClassCmdLiteralThis* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdThisContext( v_0, ROGUE_ARG(((RogueClassCmdThisContext*)(THIS))) );
}

void RogueCmdLiteralThis__require_type_context( RogueClassCmdLiteralThis* THIS )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[499] ))));
}

RogueClassCmd* RogueCmdLiteralThis__resolve__Scope( RogueClassCmdLiteralThis* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[512] ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdThisContext* RogueCmdThisContext__init_object( RogueClassCmdThisContext* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdThisContext*)(THIS);
}

RogueString* RogueCmdThisContext__type_name( RogueClassCmdThisContext* THIS )
{
  return (RogueString*)(Rogue_literal_strings[982]);
}

RogueClassCmd* RogueCmdThisContext__clone__CloneArgs( RogueClassCmdThisContext* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_2))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))));
  }
}

void RogueCmdThisContext__dispatch__Visitor( RogueClassCmdThisContext* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdThisContext( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdThisContext__implicit_type__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__require_type_context( RogueClassCmdThisContext* THIS )
{
}

RogueClassCmd* RogueCmdThisContext__resolve__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdThisContext__type( RogueClassCmdThisContext* THIS )
{
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__write_cpp__CPPWriter_Logical( RogueClassCmdThisContext* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
}

RogueClassCmdThisContext* RogueCmdThisContext__init__Token_Type( RogueClassCmdThisContext* THIS, RogueClassToken* _auto_1088_0, RogueClassType* _auto_1089_1 )
{
  THIS->_this_type = _auto_1089_1;
  THIS->t = _auto_1088_0;
  return (RogueClassCmdThisContext*)(THIS);
}

RogueClassCmdCreateList* RogueCmdCreateList__init_object( RogueClassCmdCreateList* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateList*)(THIS);
}

RogueString* RogueCmdCreateList__type_name( RogueClassCmdCreateList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[983]);
}

RogueClassCmd* RogueCmdCreateList__clone__CloneArgs( RogueClassCmdCreateList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(THIS->_list_type) ))))));
}

void RogueCmdCreateList__dispatch__Visitor( RogueClassCmdCreateList* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmd* RogueCmdCreateList__resolve__Scope( RogueClassCmdCreateList* THIS, RogueClassScope* scope_0 )
{
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  if ((!(!!(THIS->_list_type)) && !!(THIS->args->count)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,((call_ROGUEM129( 40, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[0]))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3067_5,(THIS->args));
      RogueInt32 _auto_3068_6 = (0);
      for (;_auto_3068_6 < _auto_3067_5->count;++_auto_3068_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_7,(((RogueClassCmd*)(_auto_3067_5->data->objects[_auto_3068_6]))));
        common_type_1 = ((RogueClassType*)((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_1, ROGUE_ARG((call_ROGUEM129( 40, arg_7 ))) ))));
      }
    }
    THIS->_list_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))), Rogue_literal_strings[220] )))) )));
    RogueType__organize__Scope( ROGUE_ARG(THIS->_list_type), scope_0 );
  }
  if (!!(THIS->_list_type))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_list_type->_element_type));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3069_8,(THIS->args));
      RogueInt32 index_9 = (0);
      for (;index_9 < _auto_3069_8->count;++index_9)
      {
        THIS->args->data->objects[index_9] = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[index_9]))), scope_0 ))), element_type_2, scope_0 ))), scope_0 ));
      }
    }
  }
  if (!(!!(THIS->_list_type)))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1068] ))));
  }
  RogueInt32 initial_capacity_3 = (10);
  if (!!(THIS->args->count))
  {
    initial_capacity_3 = ((RogueInt32)THIS->args->count);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,0);
  cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_list_type->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), initial_capacity_3 )))))) )))) ))))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3070_10,(THIS->args));
    RogueInt32 _auto_3071_11 = (0);
    for (;_auto_3071_11 < _auto_3070_10->count;++_auto_3071_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_12,(((RogueClassCmd*)(_auto_3070_10->data->objects[_auto_3071_11]))));
      cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_4, Rogue_literal_strings[309], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), arg_12 )))) ))))));
    }
  }
  return (RogueClassCmd*)((call_ROGUEM120( 34, cmd_4, scope_0 )));
}

RogueClassCmdCreateList* RogueCmdCreateList__init__Token_CmdArgs_Type( RogueClassCmdCreateList* THIS, RogueClassToken* _auto_1090_0, RogueClassCmdArgs* _auto_1091_1, RogueClassType* _auto_1092_2 )
{
  THIS->_list_type = _auto_1092_2;
  THIS->args = _auto_1091_1;
  THIS->t = _auto_1090_0;
  return (RogueClassCmdCreateList*)(THIS);
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init_object( RogueClassCmdCallPriorMethod* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueString* RogueCmdCallPriorMethod__type_name( RogueClassCmdCallPriorMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[984]);
}

RogueClassCmd* RogueCmdCallPriorMethod__clone__CloneArgs( RogueClassCmdCallPriorMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,cloned_named_args_1,0);
  if (!!(THIS->named_args))
  {
    cloned_named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3072_2,(THIS->named_args));
      RogueInt32 _auto_3073_3 = (0);
      for (;_auto_3073_3 < _auto_3072_2->count;++_auto_3073_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_3072_2->data->objects[_auto_3073_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( cloned_named_args_1, ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))), cloned_named_args_1 ))))));
}

void RogueCmdCallPriorMethod__dispatch__Visitor( RogueClassCmdCallPriorMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCallPriorMethod( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCallPriorMethod__resolve__Scope( RogueClassCmdCallPriorMethod* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)((call_ROGUEM120( 11, ROGUE_ARG(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), scope_0 )))), scope_0 )));
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdCallPriorMethod* THIS, RogueClassToken* _auto_1093_0, RogueString* _auto_1094_1, RogueClassCmdArgs* _auto_1095_2, RogueCmdNamedArg_List* _auto_1096_3 )
{
  THIS->named_args = _auto_1096_3;
  THIS->args = _auto_1095_2;
  THIS->name = _auto_1094_1;
  THIS->t = _auto_1093_0;
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__init_object( RogueFnParam_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__init( RogueFnParam_List* THIS )
{
  RogueFnParam_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFnParam_List*)(THIS);
}

RogueString* RogueFnParam_List__to_String( RogueFnParam_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3074_2,(THIS));
    RogueInt32 _auto_3075_3 = (0);
    for (;_auto_3075_3 < _auto_3074_2->count;++_auto_3075_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,value_4,(((RogueClassFnParam*)(_auto_3074_2->data->objects[_auto_3075_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnParam_List__type_name( RogueFnParam_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[876]);
}

RogueFnParam_List* RogueFnParam_List__init__Int32( RogueFnParam_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnParam*), true );
  }
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__add__FnParam( RogueFnParam_List* THIS, RogueClassFnParam* value_0 )
{
  ((RogueFnParam_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueFnParam_List*)(THIS);
}

RogueInt32 RogueFnParam_List__capacity( RogueFnParam_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueClassFnParam* RogueFnParam_List__last( RogueFnParam_List* THIS )
{
  return (RogueClassFnParam*)(((RogueClassFnParam*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueFnParam_List* RogueFnParam_List__reserve__Int32( RogueFnParam_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFnParam_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFnParam_List*)(THIS);
}

RogueClassFnParam* RogueFnParam__init_object( RogueClassFnParam* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFnParam*)(THIS);
}

RogueString* RogueFnParam__type_name( RogueClassFnParam* THIS )
{
  return (RogueString*)(Rogue_literal_strings[820]);
}

RogueClassFnParam* RogueFnParam__init__String( RogueClassFnParam* THIS, RogueString* _auto_1097_0 )
{
  THIS->name = _auto_1097_0;
  return (RogueClassFnParam*)(THIS);
}

RogueString* RogueArray_FnParam___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[926]);
}

RogueFnArg_List* RogueFnArg_List__init_object( RogueFnArg_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__init( RogueFnArg_List* THIS )
{
  RogueFnArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFnArg_List*)(THIS);
}

RogueString* RogueFnArg_List__to_String( RogueFnArg_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3107_2,(THIS));
    RogueInt32 _auto_3108_3 = (0);
    for (;_auto_3108_3 < _auto_3107_2->count;++_auto_3108_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,value_4,(((RogueClassFnArg*)(_auto_3107_2->data->objects[_auto_3108_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnArg_List__type_name( RogueFnArg_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[877]);
}

RogueFnArg_List* RogueFnArg_List__init__Int32( RogueFnArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnArg*), true );
  }
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__add__FnArg( RogueFnArg_List* THIS, RogueClassFnArg* value_0 )
{
  ((RogueFnArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueFnArg_List*)(THIS);
}

RogueInt32 RogueFnArg_List__capacity( RogueFnArg_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueFnArg_List* RogueFnArg_List__reserve__Int32( RogueFnArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFnArg_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFnArg_List*)(THIS);
}

RogueClassFnArg* RogueFnArg__init_object( RogueClassFnArg* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFnArg*)(THIS);
}

RogueString* RogueFnArg__type_name( RogueClassFnArg* THIS )
{
  return (RogueString*)(Rogue_literal_strings[821]);
}

RogueClassFnArg* RogueFnArg__init__String_Cmd( RogueClassFnArg* THIS, RogueString* _auto_1102_0, RogueClassCmd* _auto_1103_1 )
{
  THIS->value = _auto_1103_1;
  THIS->name = _auto_1102_0;
  return (RogueClassFnArg*)(THIS);
}

RogueClassFnArg* RogueFnArg__set_type__Type( RogueClassFnArg* THIS, RogueClassType* _auto_1104_0 )
{
  THIS->_type = _auto_1104_0;
  return (RogueClassFnArg*)(THIS);
}

RogueString* RogueArray_FnArg___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[927]);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init_object( RogueClassCmdCreateFunction* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueString* RogueCmdCreateFunction__type_name( RogueClassCmdCreateFunction* THIS )
{
  return (RogueString*)(Rogue_literal_strings[985]);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__clone__CloneArgs( RogueClassCmdCreateFunction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,args2_1,0);
  if (!!(THIS->with_args))
  {
    args2_1 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3140_2,(THIS->with_args));
      RogueInt32 _auto_3141_3 = (0);
      for (;_auto_3141_3 < _auto_3140_2->count;++_auto_3141_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_4,(((RogueClassFnArg*)(_auto_3140_2->data->objects[_auto_3141_3]))));
        RogueFnArg_List__add__FnArg( args2_1, ROGUE_ARG(((RogueFnArg__set_type__Type( ROGUE_ARG(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), ROGUE_ARG(arg_4->name), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(arg_4->value), clone_args_0 ))) )))), ROGUE_ARG(arg_4->_type) )))) );
      }
    }
  }
  return (RogueClassCmdCreateFunction*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->parameters), ROGUE_ARG(THIS->_return_type), args2_1, ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))), ROGUE_ARG(THIS->is_generic) ))));
}

void RogueCmdCreateFunction__dispatch__Visitor( RogueClassCmdCreateFunction* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCreateFunction( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdCreateFunction__is_generic_function( RogueClassCmdCreateFunction* THIS )
{
  return (RogueLogical)(THIS->is_generic);
}

RogueClassCmd* RogueCmdCreateFunction__resolve__Scope( RogueClassCmdCreateFunction* THIS, RogueClassScope* scope_0 )
{
  if (THIS->is_generic)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_1,0);
  if ((!!(THIS->parameters) && !!(THIS->parameters->count)))
  {
    parameter_types_1 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3142_9,(THIS->parameters));
      RogueInt32 _auto_3143_10 = (0);
      for (;_auto_3143_10 < _auto_3142_9->count;++_auto_3143_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_11,(((RogueClassFnParam*)(_auto_3142_9->data->objects[_auto_3143_10]))));
        RogueType_List__add__Type( parameter_types_1, ROGUE_ARG(param_11->_type) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,fn_name_2,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[479], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,fn_type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), fn_name_2 )))));
  fn_type_3->defined = true;
  RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 0 );
  ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_1, ROGUE_ARG(THIS->_return_type) )))));
  RogueType_List__add__Type( ROGUE_ARG(fn_type_3->base_types), base_type_4 );
  RogueType_List__add__Type( ROGUE_ARG(base_type_4->extended_types), fn_type_3 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[301] )))));
  if (!!(THIS->parameters))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3144_12,(THIS->parameters));
      RogueInt32 _auto_3145_13 = (0);
      for (;_auto_3145_13 < _auto_3144_12->count;++_auto_3145_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_14,(((RogueClassFnParam*)(_auto_3144_12->data->objects[_auto_3145_13]))));
        RogueMethod__add_parameter__Token_String_Type( m_call_5, ROGUE_ARG(THIS->t), ROGUE_ARG(param_14->name), ROGUE_ARG(param_14->_type) );
      }
    }
  }
  m_call_5->_return_type = THIS->_return_type;
  m_call_5->statements = THIS->statements;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_call_5->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), fn_type_3, m_call_5 )))))) );
  if (!!(THIS->with_args))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_6,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[388] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,create_args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3146_15,(THIS->with_args));
      RogueInt32 _auto_3147_16 = (0);
      for (;_auto_3147_16 < _auto_3146_15->count;++_auto_3147_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,fn_arg_17,(((RogueClassFnArg*)(_auto_3146_15->data->objects[_auto_3147_16]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_8,(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(fn_arg_17->value), scope_0 ))) )))));
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)create_args_7), arg_8 );
        RogueType__add_property__Token_String_Type_Cmd( fn_type_3, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG((call_ROGUEM129( 40, arg_8 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        RogueMethod__add_parameter__Token_String_Type( m_init_6, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
      }
    }
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), fn_name_2, create_args_7 )))), scope_0 ))));
  }
  else
  {
    RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 1024 );
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), fn_type_3 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdCreateFunction__type( RogueClassCmdCreateFunction* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( RogueClassCmdCreateFunction* THIS, RogueClassToken* _auto_1109_0, RogueFnParam_List* _auto_1110_1, RogueClassType* _auto_1111_2, RogueFnArg_List* _auto_1112_3, RogueClassCmdStatementList* _auto_1113_4, RogueLogical _auto_1114_5 )
{
  THIS->is_generic = _auto_1114_5;
  THIS->statements = _auto_1113_4;
  THIS->with_args = _auto_1112_3;
  THIS->_return_type = _auto_1111_2;
  THIS->parameters = _auto_1110_1;
  THIS->t = _auto_1109_0;
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init_object( RogueClassCmdInlineNative* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueString* RogueCmdInlineNative__type_name( RogueClassCmdInlineNative* THIS )
{
  return (RogueString*)(Rogue_literal_strings[986]);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__clone__CloneArgs( RogueClassCmdInlineNative* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdInlineNative*,result_1,(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) )))));
  result_1->modify_op = THIS->modify_op;
  result_1->adjust_delta = THIS->adjust_delta;
  result_1->new_value = THIS->new_value;
  return (RogueClassCmdInlineNative*)(result_1);
}

void RogueCmdInlineNative__dispatch__Visitor( RogueClassCmdInlineNative* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdInlineNative( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdInlineNative__requires_semicolon( RogueClassCmdInlineNative* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdInlineNative__resolve__Scope( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0 )
{
  THIS->this_method = scope_0->this_method;
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_assignment__Scope_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassCmd* _auto_1118_1 )
{
  THIS->new_value = _auto_1118_1;
  THIS->this_method = scope_0->this_method;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1083] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_1121_1 )
{
  THIS->adjust_delta = _auto_1121_1;
  THIS->this_method = scope_0->this_method;
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1084] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassTokenType* _auto_1119_1, RogueClassCmd* _auto_1120_2 )
{
  THIS->new_value = _auto_1120_2;
  THIS->modify_op = _auto_1119_1;
  THIS->this_method = scope_0->this_method;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1090] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInlineNative__type( RogueClassCmdInlineNative* THIS )
{
  return (RogueClassType*)(THIS->_result_type);
}

void RogueCmdInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
      break;
    }
    case 1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[239] );
      break;
    }
  }
  RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->this_method->type_context), ROGUE_ARG(THIS->this_method), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) );
  if (!!(THIS->adjust_delta))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
    return;
  }
  if ((((RogueString__contains__Character( ROGUE_ARG(THIS->code), (RogueCharacter)10 ))) || !(!!(THIS->_result_type))))
  {
    RogueCPPWriter__println( writer_0 );
  }
  if (!!(THIS->new_value))
  {
    if (!!(THIS->modify_op))
    {
      RogueCPPWriter__print__Character( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Character( writer_0, (RogueCharacter)' ' )))), ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->modify_op) )))) )))), (RogueCharacter)' ' );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[626] );
    }
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
  }
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init__Token_String_Type( RogueClassCmdInlineNative* THIS, RogueClassToken* _auto_1115_0, RogueString* _auto_1116_1, RogueClassType* _auto_1117_2 )
{
  THIS->_result_type = _auto_1117_2;
  THIS->code = _auto_1116_1;
  THIS->t = _auto_1115_0;
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueClassCmdSelect* RogueCmdSelect__init_object( RogueClassCmdSelect* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSelect*)(THIS);
}

RogueString* RogueCmdSelect__type_name( RogueClassCmdSelect* THIS )
{
  return (RogueString*)(Rogue_literal_strings[988]);
}

RogueClassCmdSelect* RogueCmdSelect__clone__CloneArgs( RogueClassCmdSelect* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,result_1,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->expression), clone_args_0 )))), ROGUE_ARG(((RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))), ROGUE_ARG(THIS->cases->count) )))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3148_2,(THIS->cases));
    RogueInt32 _auto_3149_3 = (0);
    for (;_auto_3149_3 < _auto_3148_2->count;++_auto_3149_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_4,(((RogueClassCmdSelectCase*)(_auto_3148_2->data->objects[_auto_3149_3]))));
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(result_1->cases), ROGUE_ARG(((RogueCmdSelectCase__clone__CloneArgs( c_4, clone_args_0 )))) );
    }
  }
  return (RogueClassCmdSelect*)(result_1);
}

void RogueCmdSelect__dispatch__Visitor( RogueClassCmdSelect* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdSelect( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdSelect__implicit_type__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,0);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3150_3,(THIS->cases));
    RogueInt32 _auto_3151_4 = (0);
    for (;_auto_3151_4 < _auto_3150_3->count;++_auto_3151_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_3150_3->data->objects[_auto_3151_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_2,(((RogueCmdSelectCase__implicit_type__Scope( c_5, scope_0 )))));
      if (!(!!(common_type_1)))
      {
        common_type_1 = ((RogueClassType*)case_type_2);
      }
      else if (((void*)common_type_1) != ((void*)case_type_2))
      {
        return (RogueClassType*)(((RogueClassType*)(NULL)));
      }
    }
  }
  return (RogueClassType*)(common_type_1);
}

RogueClassCmd* RogueCmdSelect__resolve__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_value_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (!(!!(THIS->cases->count)))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1071] ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3152_3,(THIS->cases));
    RogueInt32 _auto_3153_4 = (0);
    for (;_auto_3153_4 < _auto_3152_3->count;++_auto_3153_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_3152_3->data->objects[_auto_3153_4]))));
      RogueCmdSelectCase__resolve__Scope( c_5, scope_0 );
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_1,(((Rogue_CmdSelectCase__type( c_5 )))));
      THIS->_value_type = ((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->_value_type), case_type_1 )));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3154_6,(THIS->cases));
    RogueInt32 _auto_3155_7 = (0);
    for (;_auto_3155_7 < _auto_3154_6->count;++_auto_3155_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_8,(((RogueClassCmdSelectCase*)(_auto_3154_6->data->objects[_auto_3155_7]))));
      c_8->value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(c_8->value), ROGUE_ARG(THIS->_value_type), scope_0 ))), scope_0 ))) )));
    }
  }
  if (!!(THIS->expression))
  {
    THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,expr_type_2,((call_ROGUEM129( 31, ROGUE_ARG(THIS->expression) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3156_9,(THIS->cases));
      RogueInt32 _auto_3157_10 = (0);
      for (;_auto_3157_10 < _auto_3156_9->count;++_auto_3157_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_11,(((RogueClassCmdSelectCase*)(_auto_3156_9->data->objects[_auto_3157_10]))));
        RogueCmdSelectCase__cast_conditions__Type_Scope( c_11, expr_type_2, scope_0 );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelect__type( RogueClassCmdSelect* THIS )
{
  return (RogueClassType*)(THIS->_value_type);
}

void RogueCmdSelect__write_cpp__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCmdSelectCase_List__reader( ROGUE_ARG(THIS->cases) )))), writer_0, true );
}

RogueClassCmdSelect* RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( RogueClassCmdSelect* THIS, RogueClassToken* _auto_1129_0, RogueClassLocal* _auto_1130_1, RogueClassCmd* _auto_1131_2, RogueCmdSelectCase_List* _auto_1132_3 )
{
  THIS->cases = _auto_1132_3;
  THIS->expression = _auto_1131_2;
  THIS->local_info = _auto_1130_1;
  THIS->t = _auto_1129_0;
  return (RogueClassCmdSelect*)(THIS);
}

void RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassListReader_CmdSelectCase_* reader_0, RogueClassCPPWriter* writer_1, RogueLogical first_case_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_3,(((RogueListReader_CmdSelectCase___read( reader_0 )))));
  if (!(((RogueListReader_CmdSelectCase___has_another( reader_0 )))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(select_case_3->value), writer_1, false );
    return;
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[622] );
  RogueLogical first_condition_4 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3168_5,(select_case_3->conditions));
    RogueInt32 _auto_3169_6 = (0);
    for (;_auto_3169_6 < _auto_3168_5->count;++_auto_3169_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_7,(((RogueClassCmd*)(_auto_3168_5->data->objects[_auto_3169_6]))));
      if (first_condition_4)
      {
        first_condition_4 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1127] );
      }
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[92] );
      if (!!(THIS->expression))
      {
        if (first_case_2)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[222] );
          call_ROGUEM133( 41, ROGUE_ARG(THIS->expression), writer_1, false );
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[32] );
          first_case_2 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
        }
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[221] );
      }
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[92] );
      call_ROGUEM133( 41, c_7, writer_1, false );
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[572] );
    }
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1128] );
  call_ROGUEM133( 41, ROGUE_ARG(select_case_3->value), writer_1, false );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1129] );
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), reader_0, writer_1, false );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[32] );
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init_object( RogueCmdSelectCase_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init( RogueCmdSelectCase_List* THIS )
{
  RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueString* RogueCmdSelectCase_List__to_String( RogueCmdSelectCase_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3170_2,(THIS));
    RogueInt32 _auto_3171_3 = (0);
    for (;_auto_3171_3 < _auto_3170_2->count;++_auto_3171_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,value_4,(((RogueClassCmdSelectCase*)(_auto_3170_2->data->objects[_auto_3171_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdSelectCase_List__type_name( RogueCmdSelectCase_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[878]);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdSelectCase*), true );
  }
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__add__CmdSelectCase( RogueCmdSelectCase_List* THIS, RogueClassCmdSelectCase* value_0 )
{
  ((RogueCmdSelectCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueInt32 RogueCmdSelectCase_List__capacity( RogueCmdSelectCase_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueClassCmdSelectCase* RogueCmdSelectCase_List__last( RogueCmdSelectCase_List* THIS )
{
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueCmdSelectCase_List__reader( RogueCmdSelectCase_List* THIS )
{
  return (RogueClassListReader_CmdSelectCase_*)(((RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListReader_CmdSelectCase_*,ROGUE_CREATE_OBJECT(ListReader_CmdSelectCase_))), ROGUE_ARG(THIS), 0 ))));
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__reserve__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdSelectCase_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init_object( RogueClassCmdSelectCase* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSelectCase*)(THIS);
}

RogueString* RogueCmdSelectCase__type_name( RogueClassCmdSelectCase* THIS )
{
  return (RogueString*)(Rogue_literal_strings[987]);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__clone__CloneArgs( RogueClassCmdSelectCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,result_1,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd_List*)(NULL))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) )))));
  result_1->conditions = (call_ROGUEM163( 10, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), ROGUE_ARG(THIS->conditions->count) ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3193_2,(THIS->conditions));
    RogueInt32 _auto_3194_3 = (0);
    for (;_auto_3194_3 < _auto_3193_2->count;++_auto_3194_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_4,(((RogueClassCmd*)(_auto_3193_2->data->objects[_auto_3194_3]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(result_1->conditions), ROGUE_ARG((call_ROGUEM122( 13, c_4, clone_args_0 ))) );
    }
  }
  return (RogueClassCmdSelectCase*)(result_1);
}

void RogueCmdSelectCase__dispatch__Visitor( RogueClassCmdSelectCase* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdSelectCase( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdSelectCase__implicit_type__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((call_ROGUEM127( 26, ROGUE_ARG(THIS->value), scope_0 )));
}

RogueClassCmd* RogueCmdSelectCase__resolve__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  if (!(!!(THIS->value)))
  {
    THIS->value = (call_ROGUEM122( 13, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[0]))), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3195_1,(THIS->conditions));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_3195_1->count;++i_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_3195_1->data->objects[i_2]))));
      condition_3 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[i_2]))), scope_0 ))) ))));
      if ((call_ROGUEM129( 40, condition_3 ))->is_optional)
      {
        condition_3 = ((RogueClassCmd*)((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(condition_3->t), condition_3, Rogue_literal_strings[478] )))), scope_0 ))));
      }
      THIS->conditions->data->objects[i_2] = condition_3;
    }
  }
  THIS->value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->value), scope_0 ))) )));
  if ((call_ROGUEM129( 40, ROGUE_ARG(THIS->value) ))->is_optional)
  {
    THIS->value = ((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->value->t), ROGUE_ARG(THIS->value), Rogue_literal_strings[1070] )))), scope_0 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelectCase__type( RogueClassCmdSelectCase* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->value) )));
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init__Token_Cmd_List_Cmd( RogueClassCmdSelectCase* THIS, RogueClassToken* _auto_1122_0, RogueCmd_List* _auto_1123_1, RogueClassCmd* _auto_1124_2 )
{
  THIS->value = _auto_1124_2;
  THIS->conditions = _auto_1123_1;
  THIS->t = _auto_1122_0;
  return (RogueClassCmdSelectCase*)(THIS);
}

void RogueCmdSelectCase__cast_conditions__Type_Scope( RogueClassCmdSelectCase* THIS, RogueClassType* to_type_0, RogueClassScope* scope_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3196_2,(THIS->conditions));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_3196_2->count;++i_3)
    {
      THIS->conditions->data->objects[i_3] = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[i_3]))), to_type_0, scope_1 ))), scope_1 ))) )));
    }
  }
}

RogueString* RogueArray_CmdSelectCase___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[928]);
}

RogueClassCmdRequire* RogueCmdRequire__init_object( RogueClassCmdRequire* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdRequire*)(THIS);
}

RogueString* RogueCmdRequire__type_name( RogueClassCmdRequire* THIS )
{
  return (RogueString*)(Rogue_literal_strings[989]);
}

RogueClassCmdRequire* RogueCmdRequire__clone__CloneArgs( RogueClassCmdRequire* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdRequire*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

void RogueCmdRequire__dispatch__Visitor( RogueClassCmdRequire* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdRequire( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdRequire__resolve__Scope( RogueClassCmdRequire* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (call_ROGUEM120( 34, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->local_info->_type = (call_ROGUEM129( 31, ROGUE_ARG(THIS->condition) ));
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->message), scope_0 ))) )));
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[1072], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdRequire__type( RogueClassCmdRequire* THIS )
{
  return (RogueClassType*)((call_ROGUEM129( 40, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdRequire__write_cpp__CPPWriter_Logical( RogueClassCmdRequire* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[222] );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1110] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[215] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->error), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdRequire* RogueCmdRequire__init__Token_Cmd_Cmd_Local( RogueClassCmdRequire* THIS, RogueClassToken* _auto_1134_0, RogueClassCmd* _auto_1135_1, RogueClassCmd* _auto_1136_2, RogueClassLocal* _auto_1137_3 )
{
  THIS->local_info = _auto_1137_3;
  THIS->message = _auto_1136_2;
  THIS->condition = _auto_1135_1;
  THIS->t = _auto_1134_0;
  return (RogueClassCmdRequire*)(THIS);
}

RogueClassCmdEnsure* RogueCmdEnsure__init_object( RogueClassCmdEnsure* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdEnsure*)(THIS);
}

RogueString* RogueCmdEnsure__type_name( RogueClassCmdEnsure* THIS )
{
  return (RogueString*)(Rogue_literal_strings[990]);
}

RogueClassCmd* RogueCmdEnsure__clone__CloneArgs( RogueClassCmdEnsure* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,result_1,(((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) )))));
  if (!!(THIS->named_args))
  {
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3197_2,(THIS->named_args));
      RogueInt32 _auto_3198_3 = (0);
      for (;_auto_3198_3 < _auto_3197_2->count;++_auto_3198_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_3197_2->data->objects[_auto_3198_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdEnsure__dispatch__Visitor( RogueClassCmdEnsure* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdEnsure( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdEnsure__implicit_type__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((call_ROGUEM127( 26, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueClassCmd* RogueCmdEnsure__resolve__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  THIS->cmd_read = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )));
  if (!(((RogueType__is_reference( ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->cmd_read) ))) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1073] ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_new_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->cmd_read) ))->name), ROGUE_ARG(THIS->args) )))));
  cmd_new_1->named_args = THIS->named_args;
  THIS->cmd_write = ((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_read_2,(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_read_2 )))))))), 2 )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))))) );
  return (RogueClassCmd*)(((RogueCmdIf__resolve__Scope( cmd_if_3, scope_0 ))));
}

RogueClassType* Rogue_CmdEnsure__type( RogueClassCmdEnsure* THIS )
{
  ROGUE_DEF_LOCAL_REF_NULL(RogueClassLocal*,_auto_1138_0);
  return (RogueClassType*)(((_auto_1138_0=(THIS->local_info))?_auto_1138_0:ROGUE_THROW(((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[1093] )))))->_type);
}

RogueClassCmdEnsure* RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( RogueClassCmdEnsure* THIS, RogueClassToken* _auto_1139_0, RogueClassCmd* _auto_1140_1, RogueClassCmdArgs* _auto_1141_2, RogueCmdNamedArg_List* _auto_1142_3 )
{
  THIS->named_args = _auto_1142_3;
  THIS->args = _auto_1141_2;
  THIS->operand = _auto_1140_1;
  THIS->t = _auto_1139_0;
  return (RogueClassCmdEnsure*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init_object( RogueClassCmdTypedLiteralList* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueString* RogueCmdTypedLiteralList__type_name( RogueClassCmdTypedLiteralList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[991]);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__clone__CloneArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdTypedLiteralList*)(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->elements), clone_args_0 )))) ))));
}

void RogueCmdTypedLiteralList__dispatch__Visitor( RogueClassCmdTypedLiteralList* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassType* RogueCmdTypedLiteralList__implicit_type__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((Rogue_CmdTypedLiteralList__type( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdTypedLiteralList__resolve__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  if (THIS->elements->count <= 32)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3199_4,(THIS->elements));
      RogueInt32 _auto_3200_5 = (0);
      for (;_auto_3200_5 < _auto_3199_4->count;++_auto_3200_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_6,(((RogueClassCmd*)(_auto_3199_4->data->objects[_auto_3200_5]))));
        result_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), result_1, Rogue_literal_strings[309], element_6 ))))));
      }
    }
    return (RogueClassCmd*)((call_ROGUEM120( 34, result_1, scope_0 )));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,list_var_name_2,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,list_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), list_var_name_2, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdLocalDeclaration__resolve__Scope( ROGUE_ARG(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), list_var_3, false )))), scope_0 )))) );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3201_7,(THIS->elements));
      RogueInt32 _auto_3202_8 = (0);
      for (;_auto_3202_8 < _auto_3201_7->count;++_auto_3202_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_9,(((RogueClassCmd*)(_auto_3201_7->data->objects[_auto_3202_8]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))))), Rogue_literal_strings[309], element_9 )))), scope_0 )))) );
      }
    }
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdTypedLiteralList__type( RogueClassCmdTypedLiteralList* THIS )
{
  return (RogueClassType*)(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name) ))));
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init__Token_String_CmdArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassToken* _auto_1143_0, RogueString* _auto_1144_1, RogueClassCmdArgs* _auto_1145_2 )
{
  THIS->elements = _auto_1145_2;
  THIS->list_type_name = _auto_1144_1;
  THIS->t = _auto_1143_0;
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__add__Cmd( RogueClassCmdTypedLiteralList* THIS, RogueClassCmd* element_0 )
{
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->elements)), element_0 );
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___init_object( RogueClassListRebuilder_Token_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueString* RogueListRebuilder_Token___type_name( RogueClassListRebuilder_Token_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[822]);
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___init__Token_List( RogueClassListRebuilder_Token_* THIS, RogueToken_List* _auto_1172_0 )
{
  THIS->list = _auto_1172_0;
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueLogical RogueListRebuilder_Token___has_another( RogueClassListRebuilder_Token_* THIS )
{
  if (THIS->read_index < THIS->list->count)
  {
    return (RogueLogical)(true);
  }
  else
  {
    RogueToken_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    return (RogueLogical)(false);
  }
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassToken* RogueListRebuilder_Token___peek__Int32( RogueClassListRebuilder_Token_* THIS, RogueInt32 lookahead_0 )
{
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->objects[(THIS->read_index + lookahead_0)])));
}

RogueClassToken* RogueListRebuilder_Token___read( RogueClassListRebuilder_Token_* THIS )
{
  ++THIS->read_index;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->objects[(THIS->read_index - 1)])));
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___write__Token( RogueClassListRebuilder_Token_* THIS, RogueClassToken* value_0 )
{
  if (THIS->write_index == THIS->read_index)
  {
    RogueToken_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    RogueArray_set(THIS->list->data,(((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    THIS->read_index += (((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    THIS->list->count = ((RogueToken_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  THIS->list->data->objects[THIS->write_index] = value_0;
  ++THIS->write_index;
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init_object( RogueClassCmdCreateCompound* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueString* RogueCmdCreateCompound__type_name( RogueClassCmdCreateCompound* THIS )
{
  return (RogueString*)(Rogue_literal_strings[992]);
}

RogueClassCmd* RogueCmdCreateCompound__clone__CloneArgs( RogueClassCmdCreateCompound* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCreateCompound__dispatch__Visitor( RogueClassCmdCreateCompound* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCreateCompound( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateCompound__resolve__Scope( RogueClassCmdCreateCompound* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  if (((void*)THIS->args) == ((void*)NULL))
  {
    THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  }
  while (THIS->args->count < THIS->_of_type->property_list->count)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_1,(((RogueClassProperty*)(THIS->_of_type->property_list->data->objects[THIS->args->count]))));
    if (!!(p_1->initial_value))
    {
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(p_1->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) );
    }
    else
    {
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG(((RogueType__create_default_value__Token( ROGUE_ARG(p_1->_type), ROGUE_ARG(THIS->t) )))) );
    }
  }
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateCompound__type( RogueClassCmdCreateCompound* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateCompound__write_cpp__CPPWriter_Logical( RogueClassCmdCreateCompound* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[92] );
  if (!!(THIS->args->count))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
    RogueLogical first_2 = (true);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3241_3,(THIS->args));
      RogueInt32 _auto_3242_4 = (0);
      for (;_auto_3242_4 < _auto_3241_3->count;++_auto_3242_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3241_3->data->objects[_auto_3242_4]))));
        if (first_2)
        {
          first_2 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
        }
        call_ROGUEM133( 41, arg_5, writer_0, false );
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init__Token_Type_CmdArgs( RogueClassCmdCreateCompound* THIS, RogueClassToken* _auto_1241_0, RogueClassType* _auto_1242_1, RogueClassCmdArgs* _auto_1243_2 )
{
  THIS->args = _auto_1243_2;
  THIS->_of_type = _auto_1242_1;
  THIS->t = _auto_1241_0;
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueClassVisitor* RogueVisitor__init_object( RogueClassVisitor* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassVisitor*)(THIS);
}

RogueString* RogueVisitor__type_name( RogueClassVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[386]);
}

void RogueVisitor__visit__Cmd( RogueClassVisitor* THIS, RogueClassCmd* cmd_0 )
{
  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM966( 9, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[387] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM118( 9, cmd_0 ))) )))) )))), Rogue_literal_strings[378] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueVisitor__visit__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  call_ROGUEM967( 84, ROGUE_ARG(THIS), type_0 );
  RogueVisitor__dispatch__Type( ROGUE_ARG(THIS), type_0 );
  RogueVisitor__on_leave__Type( ROGUE_ARG(THIS), type_0 );
}

void RogueVisitor__visit__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  call_ROGUEM968( 85, ROGUE_ARG(THIS), m_0 );
  RogueVisitor__dispatch__Method( ROGUE_ARG(THIS), m_0 );
  RogueVisitor__on_leave__Method( ROGUE_ARG(THIS), m_0 );
}

void RogueVisitor__visit__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueVisitor__on_enter__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  RogueVisitor__dispatch__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  RogueVisitor__on_leave__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
}

void RogueVisitor__visit__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueVisitor__on_enter__CmdArgs( ROGUE_ARG(THIS), args_0 );
  RogueVisitor__dispatch__CmdArgs( ROGUE_ARG(THIS), args_0 );
  RogueVisitor__on_leave__CmdArgs( ROGUE_ARG(THIS), args_0 );
}

void RogueVisitor__visit__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueVisitor__on_enter__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueVisitor__on_enter__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueVisitor__on_enter__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueVisitor__on_enter__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueVisitor__on_enter__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueVisitor__on_enter__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueVisitor__on_enter__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueVisitor__on_enter__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdIf( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueVisitor__on_enter__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueVisitor__on_enter__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueVisitor__on_enter__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueVisitor__on_enter__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueVisitor__on_enter__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueVisitor__on_enter__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueVisitor__on_enter__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueVisitor__on_enter__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
  RogueVisitor__on_enter__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueVisitor__on_enter__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTry( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueVisitor__on_enter__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueVisitor__on_enter__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueVisitor__on_enter__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueVisitor__on_enter__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueVisitor__on_enter__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueVisitor__on_enter__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueVisitor__on_enter__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  call_ROGUEM969( 119, ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  call_ROGUEM970( 143, ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueVisitor__on_enter__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCall( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueVisitor__on_enter__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  call_ROGUEM971( 170, ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueVisitor__on_enter__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueVisitor__on_enter__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdRange( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueVisitor__on_enter__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueVisitor__on_enter__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueVisitor__on_enter__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueVisitor__on_enter__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueVisitor__on_enter__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueVisitor__on_enter__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueVisitor__on_enter__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueVisitor__on_enter__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueVisitor__on_enter__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueVisitor__on_enter__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueVisitor__on_enter__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueVisitor__on_enter__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__on_enter__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__on_enter__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__on_enter__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
}

void RogueVisitor__on_enter__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
}

void RogueVisitor__on_enter__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
}

void RogueVisitor__on_leave__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__on_leave__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__on_leave__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
}

void RogueVisitor__on_leave__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
}

void RogueVisitor__on_leave__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
}

void RogueVisitor__dispatch__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__dispatch__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__dispatch__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3243_1,(statements_0));
    RogueInt32 _auto_3244_2 = (0);
    for (;_auto_3244_2 < _auto_3243_1->count;++_auto_3244_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_3,(((RogueClassCmd*)(_auto_3243_1->data->objects[_auto_3244_2]))));
      call_ROGUEM124( 19, statement_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3245_1,(args_0));
    RogueInt32 _auto_3246_2 = (0);
    for (;_auto_3246_2 < _auto_3245_1->count;++_auto_3246_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3245_1->data->objects[_auto_3246_2]))));
      call_ROGUEM124( 19, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) );
  if (!!(cmd_0->error))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) );
  if (!!(cmd_0->error))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->target), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  if (!!(cmd_0->local_info->initial_value))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->local_info->initial_value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  if (!!(cmd_0->value))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->else_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->else_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3247_1,(cmd_0->cases));
    RogueInt32 _auto_3248_2 = (0);
    for (;_auto_3248_2 < _auto_3247_1->count;++_auto_3248_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3247_1->data->objects[_auto_3248_2]))));
      RogueCmdWhichCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
  if (!!(cmd_0->case_others))
  {
    RogueCmdWhichCase__dispatch__Visitor( ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3249_1,(cmd_0->cases));
    RogueInt32 _auto_3250_2 = (0);
    for (;_auto_3250_2 < _auto_3249_1->count;++_auto_3250_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3249_1->data->objects[_auto_3250_2]))));
      RogueCmdWhichCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
  if (!!(cmd_0->case_others))
  {
    RogueCmdWhichCase__dispatch__Visitor( ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3251_1,(cmd_0->conditions));
    RogueInt32 _auto_3252_2 = (0);
    for (;_auto_3252_2 < _auto_3251_1->count;++_auto_3252_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_3251_1->data->objects[_auto_3252_2]))));
      call_ROGUEM124( 19, condition_3, ROGUE_ARG(THIS) );
    }
  }
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->satisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->satisfied_statements), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->unsatisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->unsatisfied_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->control_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->control_statements), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->condition))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->upkeep))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->upkeep), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->collection), ROGUE_ARG(THIS) );
  if (!!(cmd_0->step_cmd))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->step_cmd), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3253_1,(cmd_0->args));
    RogueInt32 _auto_3254_2 = (0);
    for (;_auto_3254_2 < _auto_3253_1->count;++_auto_3254_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3253_1->data->objects[_auto_3254_2]))));
      call_ROGUEM124( 19, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3255_1,(cmd_0->catches));
    RogueInt32 _auto_3256_2 = (0);
    for (;_auto_3256_2 < _auto_3255_1->count;++_auto_3256_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_3255_1->data->objects[_auto_3256_2]))));
      RogueCmdCatch__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->cmd_read), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->cmd_write), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  if (!!(cmd_0->condition))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  if (!!(cmd_0->condition))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3257_1,(cmd_0->named_args));
      RogueInt32 _auto_3258_2 = (0);
      for (;_auto_3258_2 < _auto_3257_1->count;++_auto_3258_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_3257_1->data->objects[_auto_3258_2]))));
        RogueCmdNamedArg__dispatch__Visitor( arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->_return_type))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_return_type), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3259_1,(cmd_0->args));
    RogueInt32 _auto_3260_2 = (0);
    for (;_auto_3260_2 < _auto_3259_1->count;++_auto_3260_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3259_1->data->objects[_auto_3260_2]))));
      call_ROGUEM124( 19, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
  if (!!(cmd_0->parameters))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3261_1,(cmd_0->parameters));
      RogueInt32 _auto_3262_2 = (0);
      for (;_auto_3262_2 < _auto_3261_1->count;++_auto_3262_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_3,(((RogueClassFnParam*)(_auto_3261_1->data->objects[_auto_3262_2]))));
        RogueType__dispatch__Visitor( ROGUE_ARG(param_3->_type), ROGUE_ARG(THIS) );
      }
    }
  }
  if (!!(cmd_0->_return_type))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_return_type), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->with_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3263_4,(cmd_0->with_args));
      RogueInt32 _auto_3264_5 = (0);
      for (;_auto_3264_5 < _auto_3263_4->count;++_auto_3264_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_6,(((RogueClassFnArg*)(_auto_3263_4->data->objects[_auto_3264_5]))));
        if (!!(arg_6->value))
        {
          call_ROGUEM124( 19, ROGUE_ARG(arg_6->value), ROGUE_ARG(THIS) );
        }
        if (!!(arg_6->_type))
        {
          RogueType__dispatch__Visitor( ROGUE_ARG(arg_6->_type), ROGUE_ARG(THIS) );
        }
      }
    }
  }
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3265_1,(cmd_0->args));
    RogueInt32 _auto_3266_2 = (0);
    for (;_auto_3266_2 < _auto_3265_1->count;++_auto_3266_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3265_1->data->objects[_auto_3266_2]))));
      call_ROGUEM124( 19, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3267_1,(cmd_0->args));
    RogueInt32 _auto_3268_2 = (0);
    for (;_auto_3268_2 < _auto_3267_1->count;++_auto_3268_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3267_1->data->objects[_auto_3268_2]))));
      call_ROGUEM124( 19, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3269_1,(cmd_0->named_args));
      RogueInt32 _auto_3270_2 = (0);
      for (;_auto_3270_2 < _auto_3269_1->count;++_auto_3270_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_3269_1->data->objects[_auto_3270_2]))));
        RogueCmdNamedArg__dispatch__Visitor( arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->first), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->last), ROGUE_ARG(THIS) );
  if (!!(cmd_0->step_size))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->step_size), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->left), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->right), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->count_cmd), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_target_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3271_1,(cmd_0->sections));
    RogueInt32 _auto_3272_2 = (0);
    for (;_auto_3272_2 < _auto_3271_1->count;++_auto_3272_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_3271_1->data->objects[_auto_3272_2]))));
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(section_3->statements), ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  if (!!(cmd_0->new_value))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  if (!!(cmd_0->expression))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3273_1,(cmd_0->cases));
    RogueInt32 _auto_3274_2 = (0);
    for (;_auto_3274_2 < _auto_3273_1->count;++_auto_3274_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_3,(((RogueClassCmdSelectCase*)(_auto_3273_1->data->objects[_auto_3274_2]))));
      RogueCmdSelectCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  if (!!(cmd_0->conditions))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3275_1,(cmd_0->conditions));
      RogueInt32 _auto_3276_2 = (0);
      for (;_auto_3276_2 < _auto_3275_1->count;++_auto_3276_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_3,(((RogueClassCmd*)(_auto_3275_1->data->objects[_auto_3276_2]))));
        call_ROGUEM124( 19, c_3, ROGUE_ARG(THIS) );
      }
    }
  }
  if (!!(cmd_0->value))
  {
    call_ROGUEM124( 19, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
  call_ROGUEM124( 19, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) );
}

RogueClassCmdSwitch* RogueCmdSwitch__init_object( RogueClassCmdSwitch* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdSwitch*)(THIS);
}

RogueString* RogueCmdSwitch__type_name( RogueClassCmdSwitch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1183]);
}

RogueClassCmdSwitch* RogueCmdSwitch__clone__CloneArgs( RogueClassCmdSwitch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSwitch*,result_1,(((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  call_ROGUEM293( 43, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3277_3,(THIS->cases));
    RogueInt32 _auto_3278_4 = (0);
    for (;_auto_3278_4 < _auto_3277_3->count;++_auto_3278_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_3277_3->data->objects[_auto_3278_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->cases = cloned_cases_2;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__clone__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  return (RogueClassCmdSwitch*)(result_1);
}

void RogueCmdSwitch__dispatch__Visitor( RogueClassCmdSwitch* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdSwitch( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdSwitch__resolve__Scope( RogueClassCmdSwitch* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (call_ROGUEM120( 34, ROGUE_ARG(THIS->expression), scope_0 ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3279_1,(THIS->cases));
    RogueInt32 _auto_3280_2 = (0);
    for (;_auto_3280_2 < _auto_3279_1->count;++_auto_3280_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3279_1->data->objects[_auto_3280_2]))));
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_3->conditions), scope_0 );
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_3->statements), scope_0, false );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdSwitch__write_cpp__CPPWriter_Logical( RogueClassCmdSwitch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1130] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->expression), writer_0, false );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[32] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3281_2,(THIS->cases));
    RogueInt32 _auto_3282_3 = (0);
    for (;_auto_3282_3 < _auto_3281_2->count;++_auto_3282_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_4,(((RogueClassCmdWhichCase*)(_auto_3281_2->data->objects[_auto_3282_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3283_5,(c_4->conditions));
        RogueInt32 _auto_3284_6 = (0);
        for (;_auto_3284_6 < _auto_3283_5->count;++_auto_3284_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_7,(((RogueClassCmd*)(_auto_3283_5->data->objects[_auto_3284_6]))));
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[696] );
          call_ROGUEM133( 41, condition_7, writer_0, false );
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[215] );
        }
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
      writer_0->indent += 2;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(c_4->statements), writer_0, false, false );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1131] );
      writer_0->indent -= 2;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[700] );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
    writer_0->indent += 2;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->case_others->statements), writer_0, false, false );
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
}

RogueClassCmdSwitch* RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdSwitch* THIS, RogueClassToken* _auto_1244_0, RogueClassCmd* _auto_1245_1, RogueCmdWhichCase_List* _auto_1246_2, RogueClassCmdWhichCase* _auto_1247_3, RogueInt32 _auto_1248_4 )
{
  THIS->_control_type = _auto_1248_4;
  THIS->case_others = _auto_1247_3;
  THIS->cases = _auto_1246_2;
  THIS->expression = _auto_1245_1;
  THIS->t = _auto_1244_0;
  return (RogueClassCmdSwitch*)(THIS);
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init_object( RogueClassCmdCreateObject* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueString* RogueCmdCreateObject__type_name( RogueClassCmdCreateObject* THIS )
{
  return (RogueString*)(Rogue_literal_strings[993]);
}

RogueClassCmd* RogueCmdCreateObject__clone__CloneArgs( RogueClassCmdCreateObject* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdCreateObject__dispatch__Visitor( RogueClassCmdCreateObject* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCreateObject( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateObject__resolve__Scope( RogueClassCmdCreateObject* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateObject__type( RogueClassCmdCreateObject* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateObject__write_cpp__CPPWriter_Logical( RogueClassCmdCreateObject* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1132] )))), ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[5] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1133] )))), ROGUE_ARG(((Rogue_CmdCreateObject__type( ROGUE_ARG(THIS) )))->cpp_name) )))), Rogue_literal_strings[32] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init__Token_Type( RogueClassCmdCreateObject* THIS, RogueClassToken* _auto_1249_0, RogueClassType* _auto_1250_1 )
{
  THIS->_of_type = _auto_1250_1;
  THIS->t = _auto_1249_0;
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init_object( RogueClassCmdReadSingleton* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueString* RogueCmdReadSingleton__type_name( RogueClassCmdReadSingleton* THIS )
{
  return (RogueString*)(Rogue_literal_strings[994]);
}

RogueClassCmd* RogueCmdReadSingleton__clone__CloneArgs( RogueClassCmdReadSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdReadSingleton__dispatch__Visitor( RogueClassCmdReadSingleton* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadSingleton( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdReadSingleton__require_type_context( RogueClassCmdReadSingleton* THIS )
{
}

RogueClassCmd* RogueCmdReadSingleton__resolve__Scope( RogueClassCmdReadSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadSingleton__type( RogueClassCmdReadSingleton* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdReadSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdReadSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1134] )))) )))) ))));
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->_of_type->cpp_class_name) );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[248] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1135] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[572] );
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init__Token_Type( RogueClassCmdReadSingleton* THIS, RogueClassToken* _auto_1251_0, RogueClassType* _auto_1252_1 )
{
  THIS->_of_type = _auto_1252_1;
  THIS->t = _auto_1251_0;
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init_object( RogueClassCmdWriteSingleton* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueString* RogueCmdWriteSingleton__type_name( RogueClassCmdWriteSingleton* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1289]);
}

RogueClassCmd* RogueCmdWriteSingleton__clone__CloneArgs( RogueClassCmdWriteSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteSingleton__dispatch__Visitor( RogueClassCmdWriteSingleton* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWriteSingleton( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteSingleton__resolve__Scope( RogueClassCmdWriteSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdWriteSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1134] )))) )))) ))));
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[544] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[1136] );
  if (((void*)(call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))) != ((void*)THIS->_of_type))
  {
    RogueCPPWriter__print_cast__Type_Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))), ROGUE_ARG(THIS->_of_type) );
  }
  call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[241] );
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init__Token_Type_Cmd( RogueClassCmdWriteSingleton* THIS, RogueClassToken* _auto_1253_0, RogueClassType* _auto_1254_1, RogueClassCmd* _auto_1255_2 )
{
  THIS->new_value = _auto_1255_2;
  THIS->_of_type = _auto_1254_1;
  THIS->t = _auto_1253_0;
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init_object( RogueClassCmdWriteLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueString* RogueCmdWriteLocal__type_name( RogueClassCmdWriteLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1290]);
}

RogueClassCmd* RogueCmdWriteLocal__clone__CloneArgs( RogueClassCmdWriteLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_write_local__CmdWriteLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    if (!!(task_args_2))
    {
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_write__Token_Local_Cmd( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->new_value), clone_args_0 )))) ))))));
}

void RogueCmdWriteLocal__dispatch__Visitor( RogueClassCmdWriteLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWriteLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteLocal__resolve__Scope( RogueClassCmdWriteLocal* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ));
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteLocal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[626] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[32] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init__Token_Local_Cmd( RogueClassCmdWriteLocal* THIS, RogueClassToken* _auto_1256_0, RogueClassLocal* _auto_1257_1, RogueClassCmd* _auto_1258_2 )
{
  THIS->new_value = _auto_1258_2;
  THIS->local_info = _auto_1257_1;
  THIS->t = _auto_1256_0;
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init_object( RogueClassCmdReadGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueString* RogueCmdReadGlobal__type_name( RogueClassCmdReadGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[995]);
}

RogueClassCmd* RogueCmdReadGlobal__clone__CloneArgs( RogueClassCmdReadGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) ))))));
}

void RogueCmdReadGlobal__dispatch__Visitor( RogueClassCmdReadGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadGlobal__resolve__Scope( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueType__resolve( ROGUE_ARG(THIS->global_info->type_context) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadGlobal__resolve_adjust__Scope_Int32( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdAdjustGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadGlobal__type( RogueClassCmdReadGlobal* THIS )
{
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdReadGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdReadGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[52] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[463] );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init__Token_Property( RogueClassCmdReadGlobal* THIS, RogueClassToken* _auto_1259_0, RogueClassProperty* _auto_1260_1 )
{
  THIS->global_info = _auto_1260_1;
  THIS->t = _auto_1259_0;
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init_object( RogueClassCmdWriteGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueString* RogueCmdWriteGlobal__type_name( RogueClassCmdWriteGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[996]);
}

RogueClassCmd* RogueCmdWriteGlobal__clone__CloneArgs( RogueClassCmdWriteGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteGlobal__dispatch__Visitor( RogueClassCmdWriteGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWriteGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteGlobal__resolve__Scope( RogueClassCmdWriteGlobal* THIS, RogueClassScope* scope_0 )
{
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[52] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[463] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[626] );
  if (((void*)THIS->global_info->_type) == ((void*)(call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->global_info->_type) )))), Rogue_literal_strings[32] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init__Token_Property_Cmd( RogueClassCmdWriteGlobal* THIS, RogueClassToken* _auto_1261_0, RogueClassProperty* _auto_1262_1, RogueClassCmd* _auto_1263_2 )
{
  THIS->new_value = _auto_1263_2;
  THIS->global_info = _auto_1262_1;
  THIS->t = _auto_1261_0;
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init_object( RogueClassCmdReadProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueString* RogueCmdReadProperty__type_name( RogueClassCmdReadProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[997]);
}

RogueClassCmd* RogueCmdReadProperty__clone__CloneArgs( RogueClassCmdReadProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info) ))))));
}

void RogueCmdReadProperty__dispatch__Visitor( RogueClassCmdReadProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadProperty__resolve__Scope( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_aspect( ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[508], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[509] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[208] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->_type->name) )))) )))), Rogue_literal_strings[510] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[43] )))) )))) )))) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadProperty__resolve_adjust__Scope_Int32( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdAdjustProperty__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadProperty__type( RogueClassCmdReadProperty* THIS )
{
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdReadProperty__write_cpp__CPPWriter_Logical( RogueClassCmdReadProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init__Token_Cmd_Property( RogueClassCmdReadProperty* THIS, RogueClassToken* _auto_1264_0, RogueClassCmd* _auto_1265_1, RogueClassProperty* _auto_1266_2 )
{
  THIS->property_info = _auto_1266_2;
  THIS->context = _auto_1265_1;
  THIS->t = _auto_1264_0;
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init_object( RogueClassCmdWriteProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueString* RogueCmdWriteProperty__type_name( RogueClassCmdWriteProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[998]);
}

RogueClassCmd* RogueCmdWriteProperty__clone__CloneArgs( RogueClassCmdWriteProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteProperty__dispatch__Visitor( RogueClassCmdWriteProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWriteProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteProperty__resolve__Scope( RogueClassCmdWriteProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_aspect( ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1074], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1075] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1076] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1077] )))) )))) )))) ))));
  }
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->property_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteProperty__write_cpp__CPPWriter_Logical( RogueClassCmdWriteProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[626] );
  if (((void*)THIS->property_info->_type) == ((void*)(call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->property_info->_type) )))), Rogue_literal_strings[32] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( RogueClassCmdWriteProperty* THIS, RogueClassToken* _auto_1267_0, RogueClassCmd* _auto_1268_1, RogueClassProperty* _auto_1269_2, RogueClassCmd* _auto_1270_3 )
{
  THIS->new_value = _auto_1270_3;
  THIS->property_info = _auto_1269_2;
  THIS->context = _auto_1268_1;
  THIS->t = _auto_1267_0;
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueClassCmdCall* RogueCmdCall__init_object( RogueClassCmdCall* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCall*)(THIS);
}

RogueString* RogueCmdCall__type_name( RogueClassCmdCall* THIS )
{
  return (RogueString*)(Rogue_literal_strings[999]);
}

void RogueCmdCall__dispatch__Visitor( RogueClassCmdCall* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* Rogue_CmdCall__require_type( RogueClassCmdCall* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((call_ROGUEM1036( 40, ROGUE_ARG(THIS) ))));
  if (((void*)result_0) == ((void*)NULL))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1007] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1008] )))) )))) ))));
  }
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmdCall__resolve__Scope( RogueClassCmdCall* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->context))
  {
    THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ))) )));
  }
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdCall__resolve_adjust__Scope_Int32( RogueClassCmdCall* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  if (!(!!(THIS->method_info->_return_type)))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1085] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1006] )))) )))) ))));
  }
  if (!!(THIS->context))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[457], ROGUE_ARG(THIS->method_info->name) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))) )))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[457], ROGUE_ARG(THIS->method_info->name) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))) )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdCall__type( RogueClassCmdCall* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCall* RogueCmdCall__init__Token_Cmd_Method_CmdArgs( RogueClassCmdCall* THIS, RogueClassToken* _auto_1271_0, RogueClassCmd* _auto_1272_1, RogueClassMethod* _auto_1273_2, RogueClassCmdArgs* _auto_1274_3 )
{
  THIS->args = _auto_1274_3;
  THIS->method_info = _auto_1273_2;
  THIS->context = _auto_1272_1;
  THIS->t = _auto_1271_0;
  return (RogueClassCmdCall*)(THIS);
}

RogueClassCmdCallDynamicMethod* RogueCmdCallDynamicMethod__init_object( RogueClassCmdCallDynamicMethod* THIS )
{
  RogueCmdCallMethod__init_object( ROGUE_ARG(((RogueClassCmdCallMethod*)THIS)) );
  return (RogueClassCmdCallDynamicMethod*)(THIS);
}

RogueString* RogueCmdCallDynamicMethod__to_String( RogueClassCmdCallDynamicMethod* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[759] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[5] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->args))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueCmdCallDynamicMethod__type_name( RogueClassCmdCallDynamicMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1280]);
}

RogueClassCmd* RogueCmdCallDynamicMethod__clone__CloneArgs( RogueClassCmdCallDynamicMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallDynamicMethod__dispatch__Visitor( RogueClassCmdCallDynamicMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCallDynamicMethod( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallDynamicMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  if (((RogueMethod__is_overridden( ROGUE_ARG(THIS->method_info) ))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1137] )))), ROGUE_ARG(THIS->method_info->cpp_typedef) );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[584] );
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->method_info->index) )))), Rogue_literal_strings[582] );
    RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
    RogueInt32 i_2 = (0);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3285_3,(THIS->args));
      RogueInt32 _auto_3286_4 = (0);
      for (;_auto_3286_4 < _auto_3285_3->count;++_auto_3286_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3285_3->data->objects[_auto_3286_4]))));
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        ++i_2;
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  }
  else
  {
    RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( ROGUE_ARG(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) )))))), writer_0, is_statement_1 );
  }
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdCallMethod* RogueCmdCallMethod__init_object( RogueClassCmdCallMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallMethod*)(THIS);
}

RogueString* RogueCmdCallMethod__type_name( RogueClassCmdCallMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1274]);
}

RogueClassCmd* RogueCmdCallMethod__call_prior__Scope( RogueClassCmdCallMethod* THIS, RogueClassScope* scope_0 )
{
  if ((((RogueMethod__is_initializer( ROGUE_ARG(THIS->method_info) ))) && ((void*)THIS->method_info->type_context) != ((void*)scope_0->_this_type)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) ))))))));
  }
  if (!(!!(THIS->method_info->overridden_method)))
  {
    if ((!!(THIS->method_info->specializer_count) && !!(THIS->method_info->type_context->base_class)))
    {
      RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(THIS->method_info->type_context->base_class->method_templates), ROGUE_ARG(THIS->method_info->unspecialized_name), ROGUE_ARG(THIS->method_info->specializer_count), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->name) );
    }
    if (!(!!(THIS->method_info->overridden_method)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1163] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1164] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[1165] )))) )))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info->overridden_method), ROGUE_ARG(THIS->args) ))))))));
}

void RogueCmdCallMethod__dispatch__Visitor( RogueClassCmdCallMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init_object( RogueClassCmdAdjustProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueString* RogueCmdAdjustProperty__type_name( RogueClassCmdAdjustProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1291]);
}

RogueClassCmd* RogueCmdAdjustProperty__clone__CloneArgs( RogueClassCmdAdjustProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->delta) ))))));
}

void RogueCmdAdjustProperty__dispatch__Visitor( RogueClassCmdAdjustProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAdjustProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustProperty__resolve__Scope( RogueClassCmdAdjustProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), Rogue_literal_strings[1037], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustProperty__type( RogueClassCmdAdjustProperty* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[239] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( RogueClassCmdAdjustProperty* THIS, RogueClassToken* _auto_1275_0, RogueClassCmd* _auto_1276_1, RogueClassProperty* _auto_1277_2, RogueInt32 _auto_1278_3 )
{
  THIS->delta = _auto_1278_3;
  THIS->property_info = _auto_1277_2;
  THIS->context = _auto_1276_1;
  THIS->t = _auto_1275_0;
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init_object( RogueClassCmdAdjustGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueString* RogueCmdAdjustGlobal__type_name( RogueClassCmdAdjustGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1292]);
}

RogueClassCmd* RogueCmdAdjustGlobal__clone__CloneArgs( RogueClassCmdAdjustGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->delta) ))))));
}

void RogueCmdAdjustGlobal__dispatch__Visitor( RogueClassCmdAdjustGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdAdjustGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustGlobal__resolve__Scope( RogueClassCmdAdjustGlobal* THIS, RogueClassScope* scope_0 )
{
  if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), Rogue_literal_strings[1037], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustGlobal__type( RogueClassCmdAdjustGlobal* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[239] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[52] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[463] );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init__Token_Property_Int32( RogueClassCmdAdjustGlobal* THIS, RogueClassToken* _auto_1279_0, RogueClassProperty* _auto_1280_1, RogueInt32 _auto_1281_2 )
{
  THIS->delta = _auto_1281_2;
  THIS->global_info = _auto_1280_1;
  THIS->t = _auto_1279_0;
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init_object( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignGlobal__type_name( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1246]);
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__clone__CloneArgs( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssignGlobal__dispatch__Visitor( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdModifyAndAssignGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__resolve__Scope( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[410], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))->name));
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1040] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->global_info->_type))) )))) )))), Rogue_literal_strings[1041] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1042] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1043] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1044] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[378] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3287_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3287_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3287_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3287_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1045] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1046] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignGlobal__type( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[52] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[463] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[580] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassToken* _auto_1282_0, RogueClassProperty* _auto_1283_1, RogueClassTokenType* _auto_1284_2, RogueClassCmd* _auto_1285_3 )
{
  THIS->new_value = _auto_1285_3;
  THIS->op = _auto_1284_2;
  THIS->global_info = _auto_1283_1;
  THIS->t = _auto_1282_0;
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init_object( RogueClassCmdModifyAndAssignProperty* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueString* RogueCmdModifyAndAssignProperty__type_name( RogueClassCmdModifyAndAssignProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1247]);
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__clone__CloneArgs( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssignProperty__dispatch__Visitor( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdModifyAndAssignProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__resolve__Scope( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[410], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))->name));
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1040] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->property_info->_type))) )))) )))), Rogue_literal_strings[1041] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1042] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1043] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1044] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[378] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3288_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3288_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3288_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_3288_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1045] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1046] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ))) )));
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->property_info->_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignProperty__type( RogueClassCmdModifyAndAssignProperty* THIS )
{
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[580] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassToken* _auto_1286_0, RogueClassCmd* _auto_1287_1, RogueClassProperty* _auto_1288_2, RogueClassTokenType* _auto_1289_3, RogueClassCmd* _auto_1290_4 )
{
  THIS->new_value = _auto_1290_4;
  THIS->op = _auto_1289_3;
  THIS->property_info = _auto_1288_2;
  THIS->context = _auto_1287_1;
  THIS->t = _auto_1286_0;
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init_object( RogueClassCmdCreateArray* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueString* RogueCmdCreateArray__type_name( RogueClassCmdCreateArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1000]);
}

RogueClassCmd* RogueCmdCreateArray__clone__CloneArgs( RogueClassCmdCreateArray* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateArray__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_array_type), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->count_cmd), clone_args_0 ))) ))))));
}

void RogueCmdCreateArray__dispatch__Visitor( RogueClassCmdCreateArray* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCreateArray( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateArray__resolve__Scope( RogueClassCmdCreateArray* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_array_type), scope_0 );
  THIS->count_cmd = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->count_cmd), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateArray__type( RogueClassCmdCreateArray* THIS )
{
  return (RogueClassType*)(THIS->_array_type);
}

void RogueCmdCreateArray__write_cpp__CPPWriter_Logical( RogueClassCmdCreateArray* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1139] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->count_cmd), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1140] )))), ROGUE_ARG(THIS->_array_type->_element_type) )))), Rogue_literal_strings[32] );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_array_type->_element_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1141] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_CmdArgs( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_1291_0, RogueClassType* _auto_1292_1, RogueClassCmdArgs* args_2 )
{
  THIS->_array_type = _auto_1292_1;
  THIS->t = _auto_1291_0;
  if ((((void*)args_2) == ((void*)NULL) || args_2->count != 1))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[481] ))));
  }
  THIS->count_cmd = ((RogueClassCmd*)(args_2->data->objects[0]));
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_Cmd( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_1293_0, RogueClassType* _auto_1294_1, RogueClassCmd* _auto_1295_2 )
{
  THIS->count_cmd = _auto_1295_2;
  THIS->_array_type = _auto_1294_1;
  THIS->t = _auto_1293_0;
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init_object( RogueClassCmdReadArrayElement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueString* RogueCmdReadArrayElement__type_name( RogueClassCmdReadArrayElement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1293]);
}

RogueClassCmd* RogueCmdReadArrayElement__clone__CloneArgs( RogueClassCmdReadArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

void RogueCmdReadArrayElement__dispatch__Visitor( RogueClassCmdReadArrayElement* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadArrayElement( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadArrayElement__resolve__Scope( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ));
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->index), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadArrayElement__resolve_adjust__Scope_Int32( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->index), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadArrayElement__type( RogueClassCmdReadArrayElement* THIS )
{
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
  if (((RogueType__is_reference( element_type_2 ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] );
    RogueCPPWriter__print__Type( writer_0, element_type_2 );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1096] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1142] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1143] );
  }
  else if (((RogueType__is_primitive( element_type_2 ))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[208] );
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1144] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1145] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1146] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1147] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1148] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1149] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1150] );
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1151] ))));
      }
    }
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[49] );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), element_type_2 )))), Rogue_literal_strings[1152] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1153] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[49] );
  }
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init__Token_Cmd_Cmd( RogueClassCmdReadArrayElement* THIS, RogueClassToken* _auto_1296_0, RogueClassCmd* _auto_1297_1, RogueClassCmd* _auto_1298_2 )
{
  THIS->index = _auto_1298_2;
  THIS->context = _auto_1297_1;
  THIS->t = _auto_1296_0;
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init_object( RogueClassCmdReadArrayCount* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueString* RogueCmdReadArrayCount__type_name( RogueClassCmdReadArrayCount* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1001]);
}

RogueClassCmd* RogueCmdReadArrayCount__clone__CloneArgs( RogueClassCmdReadArrayCount* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))) ))))));
}

void RogueCmdReadArrayCount__dispatch__Visitor( RogueClassCmdReadArrayCount* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdReadArrayCount( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadArrayCount__resolve__Scope( RogueClassCmdReadArrayCount* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadArrayCount__type( RogueClassCmdReadArrayCount* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayCount* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1154] );
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init__Token_Cmd( RogueClassCmdReadArrayCount* THIS, RogueClassToken* _auto_1299_0, RogueClassCmd* _auto_1300_1 )
{
  THIS->context = _auto_1300_1;
  THIS->t = _auto_1299_0;
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init_object( RogueClassCmdWriteArrayElement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueString* RogueCmdWriteArrayElement__type_name( RogueClassCmdWriteArrayElement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1294]);
}

RogueClassCmd* RogueCmdWriteArrayElement__clone__CloneArgs( RogueClassCmdWriteArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->index), clone_args_0 ))), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteArrayElement__dispatch__Visitor( RogueClassCmdWriteArrayElement* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdWriteArrayElement( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteArrayElement__resolve__Scope( RogueClassCmdWriteArrayElement* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (call_ROGUEM120( 34, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (call_ROGUEM129( 31, ROGUE_ARG(THIS->context) ));
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->index), scope_0 ))) )));
  THIS->new_value = (call_ROGUEM120( 34, ROGUE_ARG((call_ROGUEM121( 12, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->_array_type->_element_type), scope_0 ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdWriteArrayElement__type( RogueClassCmdWriteArrayElement* THIS )
{
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdWriteArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  if (((RogueType__is_primitive( element_type_2 ))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[208] );
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1144] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1145] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1146] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1147] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1148] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1149] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) ))))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1150] );
      }
    }
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1155] );
    if (((void*)(call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))) != ((void*)element_type_2))
    {
      RogueCPPWriter__print_cast__Type_Type( writer_0, ROGUE_ARG((call_ROGUEM129( 40, ROGUE_ARG(THIS->new_value) ))), element_type_2 );
    }
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else if (((RogueType__is_reference( element_type_2 ))))
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[208] );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1156] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1155] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), element_type_2 )))), Rogue_literal_strings[1152] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1153] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1155] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( RogueClassCmdWriteArrayElement* THIS, RogueClassToken* _auto_1301_0, RogueClassCmd* _auto_1302_1, RogueClassCmd* _auto_1303_2, RogueClassCmd* _auto_1304_3 )
{
  THIS->new_value = _auto_1304_3;
  THIS->index = _auto_1303_2;
  THIS->context = _auto_1302_1;
  THIS->t = _auto_1301_0;
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init_object( RogueClassCmdTaskControl* THIS )
{
  THIS->sections = ((RogueCmdTaskControlSection_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdTaskControlSection_List*,ROGUE_CREATE_OBJECT(CmdTaskControlSection_List))) )));
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueString* RogueCmdTaskControl__type_name( RogueClassCmdTaskControl* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1002]);
}

void RogueCmdTaskControl__dispatch__Visitor( RogueClassCmdTaskControl* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTaskControl( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdTaskControl__requires_semicolon( RogueClassCmdTaskControl* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdTaskControl__resolve__Scope( RogueClassCmdTaskControl* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3289_1,(THIS->sections));
    RogueInt32 _auto_3290_2 = (0);
    for (;_auto_3290_2 < _auto_3289_1->count;++_auto_3290_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_3289_1->data->objects[_auto_3290_2]))));
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(section_3->statements), scope_0, false );
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTaskControl__write_cpp__CPPWriter_Logical( RogueClassCmdTaskControl* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1157] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[232] );
  writer_0->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3291_2,(THIS->sections));
    RogueInt32 _auto_3292_3 = (0);
    for (;_auto_3292_3 < _auto_3291_2->count;++_auto_3292_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_4,(((RogueClassCmdTaskControlSection*)(_auto_3291_2->data->objects[_auto_3292_3]))));
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[696] )))), ROGUE_ARG(section_4->ip) )))), Rogue_literal_strings[215] );
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(section_4->statements), writer_0, false, false );
    }
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[700] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1158] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1159] );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[141] );
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init__Token( RogueClassCmdTaskControl* THIS, RogueClassToken* _auto_1309_0 )
{
  THIS->t = _auto_1309_0;
  THIS->current_section = ((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), 1 )));
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->sections), ROGUE_ARG(THIS->current_section) );
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__add__Cmd( RogueClassCmdTaskControl* THIS, RogueClassCmd* cmd_0 )
{
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->current_section->statements)), cmd_0 );
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init_object( RogueCmdTaskControlSection_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init( RogueCmdTaskControlSection_List* THIS )
{
  RogueCmdTaskControlSection_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueCmdTaskControlSection_List__to_String( RogueCmdTaskControlSection_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3293_2,(THIS));
    RogueInt32 _auto_3294_3 = (0);
    for (;_auto_3294_3 < _auto_3293_2->count;++_auto_3294_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,value_4,(((RogueClassCmdTaskControlSection*)(_auto_3293_2->data->objects[_auto_3294_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM5( 2, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdTaskControlSection_List__type_name( RogueCmdTaskControlSection_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[879]);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__add__CmdTaskControlSection( RogueCmdTaskControlSection_List* THIS, RogueClassCmdTaskControlSection* value_0 )
{
  ((RogueCmdTaskControlSection_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueInt32 RogueCmdTaskControlSection_List__capacity( RogueCmdTaskControlSection_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__reserve__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdTaskControlSection_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueArray_CmdTaskControlSection___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[929]);
}

RogueClassCmdNoAction* RogueCmdNoAction__init_object( RogueClassCmdNoAction* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNoAction*)(THIS);
}

RogueString* RogueCmdNoAction__type_name( RogueClassCmdNoAction* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1295]);
}

void RogueCmdNoAction__add_to__CmdStatementList( RogueClassCmdNoAction* THIS, RogueClassCmdStatementList* statements_0 )
{
}

RogueClassCmdNoAction* RogueCmdNoAction__clone__CloneArgs( RogueClassCmdNoAction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNoAction*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))));
}

void RogueCmdNoAction__dispatch__Visitor( RogueClassCmdNoAction* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdNoAction( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdNoAction__generates_output( RogueClassCmdNoAction* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueCmdNoAction__requires_semicolon( RogueClassCmdNoAction* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNoAction__resolve__Scope( RogueClassCmdNoAction* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdNoAction__type( RogueClassCmdNoAction* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdNoAction__write_cpp__CPPWriter_Logical( RogueClassCmdNoAction* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
}

RogueClassCmdNoAction* RogueCmdNoAction__init__Token( RogueClassCmdNoAction* THIS, RogueClassToken* _auto_1313_0 )
{
  THIS->t = _auto_1313_0;
  return (RogueClassCmdNoAction*)(THIS);
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init_object( RogueClassUpdateThisTypeVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueString* RogueUpdateThisTypeVisitor__type_name( RogueClassUpdateThisTypeVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1272]);
}

void RogueUpdateThisTypeVisitor__on_enter__CmdThisContext( RogueClassUpdateThisTypeVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  cmd_0->_this_type = THIS->_this_type;
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init__Type_Method( RogueClassUpdateThisTypeVisitor* THIS, RogueClassType* _auto_1330_0, RogueClassMethod* _auto_1331_1 )
{
  THIS->this_method = _auto_1331_1;
  THIS->_this_type = _auto_1330_0;
  if (((RogueMethod__returns_this( ROGUE_ARG(THIS->this_method) ))))
  {
    THIS->this_method->_return_type = THIS->_this_type;
  }
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init_object( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueTable_String_TypeSpecializer___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueTable_String_TypeSpecializer___to_String( RogueClassTable_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeSpecializer___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeSpecializer___type_name( RogueClassTable_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[823]);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init__Int32( RogueClassTable_String_TypeSpecializer_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_TypeSpecializer__List__init__Int32_TableEntry_String_TypeSpecializer_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TypeSpecializer__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeSpecializer__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TypeSpecializer_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueInt32 RogueTable_String_TypeSpecializer___count( RogueClassTable_String_TypeSpecializer_* THIS )
{
  return (RogueInt32)(THIS->keys->count);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___find__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_2,(((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TypeSpecializer_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_TypeSpecializer_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_TypeSpecializer_*)(((RogueClassTableEntry_String_TypeSpecializer_*)(NULL)));
}

RogueClassTypeSpecializer* RogueTable_String_TypeSpecializer___get__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_1,(((RogueTable_String_TypeSpecializer___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTypeSpecializer*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,default_value_2,0);
    return (RogueClassTypeSpecializer*)(default_value_2);
  }
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0, RogueClassTypeSpecializer* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_4,(((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_TypeSpecializer_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_TypeSpecializer_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_TypeSpecializer_*)((RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeSpecializer_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TypeSpecializer___print_to__StringBuilder( RogueClassTable_String_TypeSpecializer_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TypeSpecializer___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init_object( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueTableEntry_String_TypeSpecializer__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeSpecializer__List__to_String( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TypeSpecializer__List*,_auto_3339_2,(THIS));
    RogueInt32 _auto_3340_3 = (0);
    for (;_auto_3340_3 < _auto_3339_2->count;++_auto_3340_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,value_4,(((RogueClassTableEntry_String_TypeSpecializer_*)(_auto_3339_2->data->objects[_auto_3340_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TypeSpecializer___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TypeSpecializer__List__type_name( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[880]);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init__Int32( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  }
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init__Int32_TableEntry_String_TypeSpecializer_( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TypeSpecializer_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1464_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1464_3;++i_2)
      {
        RogueTableEntry_String_TypeSpecializer__List__add__TableEntry_String_TypeSpecializer_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__add__TableEntry_String_TypeSpecializer_( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueClassTableEntry_String_TypeSpecializer_* value_0 )
{
  ((RogueTableEntry_String_TypeSpecializer__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TypeSpecializer__List__capacity( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__reserve__Int32( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_TypeSpecializer__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init_object( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueTableEntry_String_TypeSpecializer___to_String( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeSpecializer___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_TypeSpecializer___type_name( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[760]);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( RogueClassTableEntry_String_TypeSpecializer_* THIS, RogueString* _key_0, RogueClassTypeSpecializer* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_TypeSpecializer____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[930]);
}

RogueClassCmdCastToType* RogueCmdCastToType__init_object( RogueClassCmdCastToType* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdCastToType*)(THIS);
}

RogueString* RogueCmdCastToType__type_name( RogueClassCmdCastToType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1254]);
}

RogueClassCmd* RogueCmdCastToType__clone__CloneArgs( RogueClassCmdCastToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdCastToType__dispatch__Visitor( RogueClassCmdCastToType* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdCastToType__resolve__Scope( RogueClassCmdCastToType* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  if (((void*)(call_ROGUEM129( 31, ROGUE_ARG(THIS->operand) ))) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCastToType__write_cpp__CPPWriter_Logical( RogueClassCmdCastToType* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (is_statement_1)
  {
    call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[1096] );
    call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
  }
}

RogueClassTraceUsedCodeVisitor* RogueTraceUsedCodeVisitor__init_object( RogueClassTraceUsedCodeVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassTraceUsedCodeVisitor*)(THIS);
}

RogueString* RogueTraceUsedCodeVisitor__type_name( RogueClassTraceUsedCodeVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1273]);
}

void RogueTraceUsedCodeVisitor__on_enter__Type( RogueClassTraceUsedCodeVisitor* THIS, RogueClassType* type_0 )
{
  RogueType__trace_used_code( type_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__Method( RogueClassTraceUsedCodeVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueMethod__trace_used_code( m_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  cmd_0->index = ((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(cmd_0->value) )));
}

void RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  if (((RogueMethod__is_overridden( ROGUE_ARG(cmd_0->method_info) ))))
  {
    cmd_0->method_info->called_dynamically = true;
  }
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init_object( RogueClassCloneMethodArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueString* RogueCloneMethodArgs__type_name( RogueClassCloneMethodArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1194]);
}

RogueClassCmdLabel* RogueCloneMethodArgs__register_label__CmdLabel( RogueClassCloneMethodArgs* THIS, RogueClassCmdLabel* label_0 )
{
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->cloned_method->label_list), label_0 );
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->cloned_method->label_lookup), ROGUE_ARG(label_0->name), label_0 );
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init__Method( RogueClassCloneMethodArgs* THIS, RogueClassMethod* _auto_1834_0 )
{
  THIS->cloned_method = _auto_1834_0;
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__init_object( RogueClassTaskArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueString* RogueTaskArgs__type_name( RogueClassTaskArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1195]);
}

RogueClassTaskArgs* RogueTaskArgs__init__Type_Method_Type_Method( RogueClassTaskArgs* THIS, RogueClassType* _auto_1851_0, RogueClassMethod* _auto_1852_1, RogueClassType* _auto_1853_2, RogueClassMethod* _auto_1854_3 )
{
  THIS->original_method = _auto_1854_3;
  THIS->_original_type = _auto_1853_2;
  THIS->task_method = _auto_1852_1;
  THIS->_task_type = _auto_1851_0;
  THIS->cmd_task_control = ((RogueCmdTaskControl__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControl*,ROGUE_CREATE_OBJECT(CmdTaskControl))), ROGUE_ARG(THIS->task_method->t) )));
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add__Cmd( RogueClassTaskArgs* THIS, RogueClassCmd* cmd_0 )
{
  if (!!(cmd_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cmd_task_control->current_section->statements)), cmd_0 );
  }
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_jump__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, to_section_1 );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true )))))) )))))) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmd* condition_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(condition_0->t));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_2, condition_0, 2 )))));
  RogueInt32 ip_4 = (to_section_1->ip);
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_4)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_2, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_2, ROGUE_ARG((ip_4 - 1)) )))))) )))))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_2, true )))))) )))))) );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_if_3))) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmd* RogueTaskArgs__create_return__Token_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmd* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  if (!!(value_1))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[468] )))))), value_1 )))))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, -1 )))))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassCmd* RogueTaskArgs__create_escape__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* escape_section_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((escape_section_1->ip - 1)) )))))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassTaskArgs* RogueTaskArgs__add_yield__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, next_section_1 );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), next_section_1 );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__jump_to_new_section__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,new_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  RogueTaskArgs__add_jump__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, new_section_1 );
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), new_section_1 );
  return (RogueClassCmdTaskControlSection*)(new_section_1);
}

RogueClassTaskArgs* RogueTaskArgs__begin_section__CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmdTaskControlSection* section_0 )
{
  THIS->cmd_task_control->current_section = section_0;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__create_section( RogueClassTaskArgs* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_0,(((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), ROGUE_ARG((THIS->cmd_task_control->sections->count + 1)) )))));
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->cmd_task_control->sections), section_0 );
  return (RogueClassCmdTaskControlSection*)(section_0);
}

RogueClassCmd* RogueTaskArgs__cmd_read_this__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_read_context__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->context_property) ))))));
}

RogueString* RogueTaskArgs__convert_local_name__Local( RogueClassTaskArgs* THIS, RogueClassLocal* local_info_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->index) )))) )))) ))));
}

RogueClassCmd* RogueTaskArgs__cmd_read__Token_Local( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_write__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* new_value_2 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassCmd* RogueTaskArgs__replace_write_local__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* new_value_2 )
{
  if (((void*)new_value_2) == ((void*)NULL))
  {
    new_value_2 = ((RogueClassCmd*)((RogueType__create_default_value__Token( ROGUE_ARG(local_info_1->_type), t_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[463] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassTaskArgs* RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueInt32 ip_2 = (to_section_1->ip);
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_2)
  {
    RogueCmdTaskControl__add__Cmd( ROGUE_ARG(THIS->cmd_task_control), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((ip_2 - 1)) )))))) )))))) );
  }
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassRequirementError* RogueRequirementError__init_object( RogueClassRequirementError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassRequirementError*)(THIS);
}

RogueString* RogueRequirementError__type_name( RogueClassRequirementError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1072]);
}

RogueClassRequirementError* RogueRequirementError__init__String( RogueClassRequirementError* THIS, RogueString* requirement_0 )
{
  if (!!(requirement_0->character_count))
  {
    THIS->message = ((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[519] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], requirement_0 )))) )))), Rogue_literal_strings[76] )))) )));
  }
  else
  {
    THIS->message = Rogue_literal_strings[520];
  }
  return (RogueClassRequirementError*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__init_object( RogueToken_List_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__init( RogueToken_List_List* THIS )
{
  RogueToken_List_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueToken_List_List*)(THIS);
}

RogueString* RogueToken_List_List__to_String( RogueToken_List_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,_auto_3437_2,(THIS));
    RogueInt32 _auto_3438_3 = (0);
    for (;_auto_3438_3 < _auto_3437_2->count;++_auto_3438_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,value_4,(((RogueToken_List*)(_auto_3437_2->data->objects[_auto_3438_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueToken_List__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List_List__type_name( RogueToken_List_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[881]);
}

RogueToken_List_List* RogueToken_List_List__init__Int32( RogueToken_List_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueToken_List*), true );
  }
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__add__Token_List( RogueToken_List_List* THIS, RogueToken_List* value_0 )
{
  ((RogueToken_List_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueToken_List_List*)(THIS);
}

RogueInt32 RogueToken_List_List__capacity( RogueToken_List_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueToken_List* RogueToken_List_List__last( RogueToken_List_List* THIS )
{
  return (RogueToken_List*)(((RogueToken_List*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueToken_List_List* RogueToken_List_List__reserve__Int32( RogueToken_List_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueToken_List_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueToken_List_List*)(THIS);
}

RogueString* RogueArray_Token_List___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[931]);
}

RogueClassMacroArgs* RogueMacroArgs__init_object( RogueClassMacroArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassMacroArgs*)(THIS);
}

RogueString* RogueMacroArgs__type_name( RogueClassMacroArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1196]);
}

RogueClassMacroArgs* RogueMacroArgs__init__Cmd_Method_CmdArgs( RogueClassMacroArgs* THIS, RogueClassCmd* _auto_2543_0, RogueClassMethod* _auto_2544_1, RogueClassCmdArgs* args_2 )
{
  THIS->method_info = _auto_2544_1;
  THIS->this_context = _auto_2543_0;
  if (!!(args_2))
  {
    THIS->arg_lookup = ((RogueTable_String_Cmd___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Cmd_*,ROGUE_CREATE_OBJECT(Table_String_Cmd_))) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3637_3,(args_2));
      RogueInt32 index_4 = (0);
      for (;index_4 < _auto_3637_3->count;++index_4)
      {
        RogueTable_String_Cmd___set__String_Cmd( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[index_4]))->name), ROGUE_ARG(((RogueClassCmd*)(args_2->data->objects[index_4]))) );
      }
    }
  }
  return (RogueClassMacroArgs*)(THIS);
}

RogueClassCmd* RogueMacroArgs__inline_this( RogueClassMacroArgs* THIS )
{
  return (RogueClassCmd*)((call_ROGUEM122( 13, ROGUE_ARG(THIS->this_context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_access__CmdAccess( RogueClassMacroArgs* THIS, RogueClassCmdAccess* access_0 )
{
  if (!!(access_0->context))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(access_0->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,dup_2,((call_ROGUEM122( 13, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))));
  if (!!(access_0->args))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,new_access_3,(((RogueClassCmdAccess*)(RogueObject_as(dup_2,RogueTypeCmdAccess)))));
    if (!!(new_access_3))
    {
      if (!!(new_access_3->args))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[1003] ))));
      }
      else
      {
        new_access_3->args = access_0->args;
      }
    }
    else
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[1003] ))));
    }
  }
  return (RogueClassCmd*)(dup_2);
}

RogueClassCmd* RogueMacroArgs__inline_read_local__CmdReadLocal( RogueClassMacroArgs* THIS, RogueClassCmdReadLocal* read_cmd_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(read_cmd_0->local_info->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(read_cmd_0)));
  }
  return (RogueClassCmd*)((call_ROGUEM122( 13, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_write_local__CmdWriteLocal( RogueClassMacroArgs* THIS, RogueClassCmdWriteLocal* write_cmd_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(write_cmd_0->local_info->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(write_cmd_0)));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(write_cmd_0->t), ROGUE_ARG((call_ROGUEM122( 13, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(write_cmd_0->new_value) ))))));
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init_object( RogueClassTable_String_Cmd_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init( RogueClassTable_String_Cmd_* THIS )
{
  RogueTable_String_Cmd___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueString* RogueTable_String_Cmd___to_String( RogueClassTable_String_Cmd_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Cmd___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Cmd___type_name( RogueClassTable_String_Cmd_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[824]);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init__Int32( RogueClassTable_String_Cmd_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = ((RogueTableEntry_String_Cmd__List__init__Int32_TableEntry_String_Cmd_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Cmd__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Cmd__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Cmd_*)(NULL))) )));
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueClassTableEntry_String_Cmd_* RogueTable_String_Cmd___find__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (key_0->hash_code);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_2,(((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Cmd_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Cmd_*)entry_2->next_entry);
  }
  return (RogueClassTableEntry_String_Cmd_*)(((RogueClassTableEntry_String_Cmd_*)(NULL)));
}

RogueClassCmd* RogueTable_String_Cmd___get__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_1,(((RogueTable_String_Cmd___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassCmd*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_2,0);
    return (RogueClassCmd*)(default_value_2);
  }
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___set__String_Cmd( RogueClassTable_String_Cmd_* THIS, RogueString* key_0, RogueClassCmd* value_1 )
{
  RogueInt32 hash_2 = (key_0->hash_code);
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_4,(((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[index_3]))));
  while (!!(entry_4))
  {
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      entry_4->value = value_1;
      return (RogueClassTable_String_Cmd_*)(THIS);
    }
    entry_4 = ((RogueClassTableEntry_String_Cmd_*)entry_4->next_entry);
  }
  entry_4 = ((RogueClassTableEntry_String_Cmd_*)((RogueTableEntry_String_Cmd___init__String_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Cmd_*,ROGUE_CREATE_OBJECT(TableEntry_String_Cmd_))), key_0, value_1, hash_2 ))));
  entry_4->next_entry = ((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[index_3]));
  THIS->bins->data->objects[index_3] = entry_4;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Cmd___print_to__StringBuilder( RogueClassTable_String_Cmd_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->keys->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init_object( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueTableEntry_String_Cmd__List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueString* RogueTableEntry_String_Cmd__List__to_String( RogueTableEntry_String_Cmd__List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Cmd__List*,_auto_3651_2,(THIS));
    RogueInt32 _auto_3652_3 = (0);
    for (;_auto_3652_3 < _auto_3651_2->count;++_auto_3652_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,value_4,(((RogueClassTableEntry_String_Cmd_*)(_auto_3651_2->data->objects[_auto_3652_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Cmd___to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Cmd__List__type_name( RogueTableEntry_String_Cmd__List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[882]);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init__Int32( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Cmd_*), true );
  }
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init__Int32_TableEntry_String_Cmd_( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Cmd_* initial_value_1 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Cmd_*), true );
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_2539_3 = (initial_capacity_0);
      for (;i_2 <= _auto_2539_3;++i_2)
      {
        RogueTableEntry_String_Cmd__List__add__TableEntry_String_Cmd_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__add__TableEntry_String_Cmd_( RogueTableEntry_String_Cmd__List* THIS, RogueClassTableEntry_String_Cmd_* value_0 )
{
  ((RogueTableEntry_String_Cmd__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  ++THIS->count;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Cmd__List__capacity( RogueTableEntry_String_Cmd__List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__reserve__Int32( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Cmd_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTableEntry_String_Cmd__List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Cmd_*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init_object( RogueClassTableEntry_String_Cmd_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueString* RogueTableEntry_String_Cmd___to_String( RogueClassTableEntry_String_Cmd_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Cmd___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[580] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[215] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[32] )))) ))));
}

RogueString* RogueTableEntry_String_Cmd___type_name( RogueClassTableEntry_String_Cmd_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[761]);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init__String_Cmd_Int32( RogueClassTableEntry_String_Cmd_* THIS, RogueString* _key_0, RogueClassCmd* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Cmd____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[932]);
}

RogueClassFunction_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[825]);
}

RogueLogical RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0 )
{
  return (RogueLogical)(false);
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___init_object( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueString* RogueListRebuilder_CmdNamedArg___type_name( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[826]);
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___init__CmdNamedArg_List( RogueClassListRebuilder_CmdNamedArg_* THIS, RogueCmdNamedArg_List* _auto_2576_0 )
{
  THIS->list = _auto_2576_0;
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueLogical RogueListRebuilder_CmdNamedArg___has_another( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  if (THIS->read_index < THIS->list->count)
  {
    return (RogueLogical)(true);
  }
  else
  {
    RogueCmdNamedArg_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    return (RogueLogical)(false);
  }
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassCmdNamedArg* RogueListRebuilder_CmdNamedArg___read( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  ++THIS->read_index;
  return (RogueClassCmdNamedArg*)(((RogueClassCmdNamedArg*)(THIS->list->data->objects[(THIS->read_index - 1)])));
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___write__CmdNamedArg( RogueClassListRebuilder_CmdNamedArg_* THIS, RogueClassCmdNamedArg* value_0 )
{
  if (THIS->write_index == THIS->read_index)
  {
    RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    RogueArray_set(THIS->list->data,(((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    THIS->read_index += (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    THIS->list->count = ((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  THIS->list->data->objects[THIS->write_index] = value_0;
  ++THIS->write_index;
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[827]);
}

RogueLogical RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0, RogueClassCmdNamedArg* param2_1 )
{
  return (RogueLogical)(false);
}

RogueClassQuicksort_CmdNamedArg_* RogueQuicksort_CmdNamedArg___init_object( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassQuicksort_CmdNamedArg_*)(THIS);
}

RogueString* RogueQuicksort_CmdNamedArg___type_name( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[828]);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init_object( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  RogueCmdCallInlineNative__init_object( ROGUE_ARG(((RogueClassCmdCallInlineNative*)THIS)) );
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallInlineNativeRoutine__type_name( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1284]);
}

RogueClassCmd* RogueCmdCallInlineNativeRoutine__clone__CloneArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallInlineNativeRoutine__dispatch__Visitor( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassType* Rogue_CmdCallInlineNativeRoutine__type( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassToken* _auto_2588_0, RogueClassMethod* _auto_2589_1, RogueClassCmdArgs* _auto_2590_2 )
{
  THIS->args = _auto_2590_2;
  THIS->method_info = _auto_2589_1;
  THIS->t = _auto_2588_0;
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueClassCmdCallInlineNative* RogueCmdCallInlineNative__init_object( RogueClassCmdCallInlineNative* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallInlineNative*)(THIS);
}

RogueString* RogueCmdCallInlineNative__to_String( RogueClassCmdCallInlineNative* THIS )
{
  return (RogueString*)(THIS->method_info->signature);
}

RogueString* RogueCmdCallInlineNative__type_name( RogueClassCmdCallInlineNative* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1275]);
}

void RogueCmdCallInlineNative__dispatch__Visitor( RogueClassCmdCallInlineNative* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmd* RogueCmdCallInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdCallInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_2587_1 )
{
  THIS->adjust_delta = _auto_2587_1;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
      break;
    }
    case 1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[239] );
      break;
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,st_2,(THIS->method_info->native_code));
  RogueOptionalInt32 dollar_3 = (((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (dollar_3.exists)
  {
    RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__from__Int32_Int32( st_2, 0, ROGUE_ARG((dollar_3.value - 1)) )))) );
    st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG((dollar_3.value + 1)) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,0);
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_5,0);
    if (((RogueString__begins_with__Character( st_2, (RogueCharacter)'(' ))))
    {
      name_4 = ((RogueString*)((RogueString__from__Int32( ROGUE_ARG(((RogueString__before_first__Character( st_2, (RogueCharacter)')' )))), 1 ))));
      st_2 = ((RogueString*)((RogueString__after_first__Character( st_2, (RogueCharacter)')' ))));
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_3684_7,(THIS->method_info->parameters));
        RogueInt32 _auto_3685_8 = (0);
        for (;_auto_3685_8 < _auto_3684_7->count;++_auto_3685_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_9,(((RogueClassLocal*)(_auto_3684_7->data->objects[_auto_3685_8]))));
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(p_9->name), name_4 ))))
          {
            param_5 = ((RogueClassLocal*)p_9);
            goto _auto_3686;
          }
        }
      }
      _auto_3686:;
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,best_match_6,0);
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_3687_10,(THIS->method_info->parameters));
        RogueInt32 _auto_3688_11 = (0);
        for (;_auto_3688_11 < _auto_3687_10->count;++_auto_3688_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_12,(((RogueClassLocal*)(_auto_3687_10->data->objects[_auto_3688_11]))));
          if (((RogueString__begins_with__String( st_2, ROGUE_ARG(p_12->name) ))))
          {
            if ((((void*)best_match_6) == ((void*)NULL) || p_12->name->character_count > best_match_6->name->character_count))
            {
              best_match_6 = ((RogueClassLocal*)p_12);
            }
          }
        }
      }
      if (!!(best_match_6))
      {
        param_5 = ((RogueClassLocal*)best_match_6);
        name_4 = ((RogueString*)param_5->name);
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG(best_match_6->name->character_count) ))));
      }
      else if (((RogueString__begins_with__String( st_2, Rogue_literal_strings[202] ))))
      {
        call_ROGUEM1179( 43, ROGUE_ARG(THIS), writer_0 );
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, 4 ))));
      }
    }
    if (!!(param_5))
    {
      call_ROGUEM133( 41, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[param_5->index]))), writer_0, false );
    }
    else if (!!(name_4))
    {
      RogueCPPWriter__print_native_marker__Token_Type_Method_String( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context), ROGUE_ARG(THIS->method_info), name_4 );
    }
    dollar_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueCPPWriter__print__String( writer_0, st_2 );
}

void RogueCmdCallInlineNative__print_this__CPPWriter( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0 )
{
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1160] ))));
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init_object( RogueClassCmdCallNativeRoutine* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallNativeRoutine__type_name( RogueClassCmdCallNativeRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1276]);
}

RogueClassCmd* RogueCmdCallNativeRoutine__clone__CloneArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallNativeRoutine__dispatch__Visitor( RogueClassCmdCallNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[584] );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3689_3,(THIS->args));
    RogueInt32 _auto_3690_4 = (0);
    for (;_auto_3690_4 < _auto_3689_3->count;++_auto_3690_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3689_3->data->objects[_auto_3690_4]))));
      if (i_2 > 0)
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
      }
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassToken* _auto_2591_0, RogueClassMethod* _auto_2592_1, RogueClassCmdArgs* _auto_2593_2 )
{
  THIS->args = _auto_2593_2;
  THIS->method_info = _auto_2592_1;
  THIS->t = _auto_2591_0;
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init_object( RogueClassCmdCallRoutine* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueString* RogueCmdCallRoutine__type_name( RogueClassCmdCallRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1277]);
}

RogueClassCmd* RogueCmdCallRoutine__clone__CloneArgs( RogueClassCmdCallRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallRoutine__dispatch__Visitor( RogueClassCmdCallRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] );
  if (!!(THIS->args->count))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
    RogueInt32 i_2 = (0);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3691_3,(THIS->args));
      RogueInt32 _auto_3692_4 = (0);
      for (;_auto_3692_4 < _auto_3691_3->count;++_auto_3692_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3691_3->data->objects[_auto_3692_4]))));
        if (i_2 > 0)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
        }
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        ++i_2;
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[580] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallRoutine* THIS, RogueClassToken* _auto_2596_0, RogueClassMethod* _auto_2597_1, RogueClassCmdArgs* _auto_2598_2 )
{
  THIS->args = _auto_2598_2;
  THIS->method_info = _auto_2597_1;
  THIS->t = _auto_2596_0;
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueClassCmdCallInlineNativeMethod* RogueCmdCallInlineNativeMethod__init_object( RogueClassCmdCallInlineNativeMethod* THIS )
{
  RogueCmdCallInlineNative__init_object( ROGUE_ARG(((RogueClassCmdCallInlineNative*)THIS)) );
  return (RogueClassCmdCallInlineNativeMethod*)(THIS);
}

RogueString* RogueCmdCallInlineNativeMethod__type_name( RogueClassCmdCallInlineNativeMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1285]);
}

RogueClassCmd* RogueCmdCallInlineNativeMethod__clone__CloneArgs( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallInlineNativeMethod__dispatch__Visitor( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassType* Rogue_CmdCallInlineNativeMethod__type( RogueClassCmdCallInlineNativeMethod* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

void RogueCmdCallInlineNativeMethod__print_this__CPPWriter( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  call_ROGUEM133( 41, ROGUE_ARG(THIS->context), writer_0, false );
}

RogueClassCmdCallNativeMethod* RogueCmdCallNativeMethod__init_object( RogueClassCmdCallNativeMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallNativeMethod*)(THIS);
}

RogueString* RogueCmdCallNativeMethod__type_name( RogueClassCmdCallNativeMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1278]);
}

RogueClassCmd* RogueCmdCallNativeMethod__clone__CloneArgs( RogueClassCmdCallNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallNativeMethod__dispatch__Visitor( RogueClassCmdCallNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[584] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassType*)(NULL))) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3693_3,(THIS->args));
    RogueInt32 _auto_3694_4 = (0);
    for (;_auto_3694_4 < _auto_3693_3->count;++_auto_3694_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3693_3->data->objects[_auto_3694_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCmdCallAspectMethod* RogueCmdCallAspectMethod__init_object( RogueClassCmdCallAspectMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallAspectMethod*)(THIS);
}

RogueString* RogueCmdCallAspectMethod__type_name( RogueClassCmdCallAspectMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1279]);
}

RogueClassCmd* RogueCmdCallAspectMethod__clone__CloneArgs( RogueClassCmdCallAspectMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallAspectMethod__dispatch__Visitor( RogueClassCmdCallAspectMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallAspectMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[584] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3695_3,(THIS->args));
    RogueInt32 _auto_3696_4 = (0);
    for (;_auto_3696_4 < _auto_3695_3->count;++_auto_3696_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3695_3->data->objects[_auto_3696_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassCandidateMethods* RogueCandidateMethods__init_object( RogueClassCandidateMethods* THIS )
{
  THIS->available = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->compatible = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCandidateMethods*)(THIS);
}

RogueString* RogueCandidateMethods__type_name( RogueClassCandidateMethods* THIS )
{
  return (RogueString*)(Rogue_literal_strings[829]);
}

RogueClassCandidateMethods* RogueCandidateMethods__init__Type_CmdAccess_Logical( RogueClassCandidateMethods* THIS, RogueClassType* _auto_2602_0, RogueClassCmdAccess* _auto_2603_1, RogueLogical _auto_2604_2 )
{
  THIS->error_on_fail = _auto_2604_2;
  THIS->access = _auto_2603_1;
  THIS->type_context = _auto_2602_0;
  return (RogueClassCandidateMethods*)(THIS);
}

RogueLogical RogueCandidateMethods__has_match( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(THIS->available->count == 1);
}

RogueClassMethod* RogueCandidateMethods__match( RogueClassCandidateMethods* THIS )
{
  if (THIS->available->count != 1)
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  return (RogueClassMethod*)(((RogueClassMethod*)(THIS->available->data->objects[0])));
}

RogueLogical RogueCandidateMethods__refine_matches( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), false ))));
}

RogueLogical RogueCandidateMethods__update_available( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), false ))));
}

RogueLogical RogueCandidateMethods__update_matches( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), true ))));
}

RogueLogical RogueCandidateMethods__update__Logical( RogueClassCandidateMethods* THIS, RogueLogical require_compatible_0 )
{
  if (THIS->compatible->count == 0)
  {
    if (THIS->available->count == 0)
    {
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      if (((RogueString__begins_with__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[457] ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,base_name_1,(((RogueString__after_first__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[457] )))));
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[483] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_1 )))) )))), Rogue_literal_strings[484] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[485] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->type_context))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
      }
      else
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[485] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->type_context))) )))) )))), Rogue_literal_strings[76] )))) )))) ))));
      }
    }
    else if (require_compatible_0)
    {
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,call_sig_buffer_2,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[76] );
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG(THIS->access->name) )))), Rogue_literal_strings[92] );
      if (!!(THIS->access->args))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3697_5,(THIS->access->args));
          RogueInt32 index_6 = (0);
          for (;index_6 < _auto_3697_5->count;++index_6)
          {
            if (index_6 > 0)
            {
              RogueStringBuilder__print__Character_Logical( call_sig_buffer_2, (RogueCharacter)',', true );
            }
            RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG((call_ROGUEM129( 31, ROGUE_ARG(((RogueClassCmd*)(THIS->access->args->data->objects[index_6]))) ))->name) );
          }
        }
      }
      RogueStringBuilder__print__String( call_sig_buffer_2, Rogue_literal_strings[32] );
      ROGUE_DEF_LOCAL_REF(RogueString*,call_sig_3,(((RogueStringBuilder__to_String( call_sig_buffer_2 )))));
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      if (THIS->available->count > 1)
      {
        RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[487] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), call_sig_3 )))) )))) )))), Rogue_literal_strings[488] )))) )))) );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[489] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), call_sig_3 )))) )))) )))), Rogue_literal_strings[490] )))) )))) );
      }
      buffer_4->indent += 2;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3698_7,(THIS->available));
        RogueInt32 _auto_3699_8 = (0);
        for (;_auto_3699_8 < _auto_3698_7->count;++_auto_3699_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(((RogueClassMethod*)(_auto_3698_7->data->objects[_auto_3699_8]))));
          RogueStringBuilder__println__String( buffer_4, ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_9->type_context->name) )))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_9->signature) )))) )))) )))) )))) );
        }
      }
      buffer_4->indent -= 2;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_4 )))) ))));
    }
    return (RogueLogical)(true);
  }
  RogueMethod_List__clear( ROGUE_ARG(THIS->available) );
  RogueMethod_List__add__Method_List( ROGUE_ARG(THIS->available), ROGUE_ARG(THIS->compatible) );
  RogueMethod_List__clear( ROGUE_ARG(THIS->compatible) );
  return (RogueLogical)(true);
}

RogueString* RogueCandidateMethods__remove_module_names__String( RogueClassCandidateMethods* THIS, RogueString* sig_0 )
{
  RogueOptionalInt32 pos_1 = (((RogueString__locate__String_OptionalInt32( sig_0, Rogue_literal_strings[94], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (pos_1.exists)
  {
    RogueInt32 i_2 = (pos_1.value);
    while ((i_2 > 0 && ((RogueCharacter__is_alphanumeric( ROGUE_ARG(RogueString_character_at(sig_0,(i_2 - 1))) )))))
    {
      --i_2;
    }
    sig_0 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__leftmost__Int32( sig_0, i_2 )))), ROGUE_ARG(((RogueString__from__Int32( sig_0, ROGUE_ARG((pos_1.value + 2)) )))) ))));
    pos_1 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( sig_0, Rogue_literal_strings[94], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  return (RogueString*)(sig_0);
}

RogueClassFunction_2629* RogueFunction_2629__init_object( RogueClassFunction_2629* THIS )
{
  RogueFunction_CmdNamedArg_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_CmdNamedArg_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_2629*)(THIS);
}

RogueString* RogueFunction_2629__type_name( RogueClassFunction_2629* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1282]);
}

RogueLogical RogueFunction_2629__call__CmdNamedArg( RogueClassFunction_2629* THIS, RogueClassCmdNamedArg* arg_0 )
{
  return (RogueLogical)((arg_0->inferred_index.exists && arg_0->inferred_index.value != -1));
}

RogueClassFunction_2630* RogueFunction_2630__init_object( RogueClassFunction_2630* THIS )
{
  RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_2630*)(THIS);
}

RogueString* RogueFunction_2630__type_name( RogueClassFunction_2630* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1283]);
}

RogueLogical RogueFunction_2630__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_2630* THIS, RogueClassCmdNamedArg* a_0, RogueClassCmdNamedArg* b_1 )
{
  return (RogueLogical)(a_0->inferred_index.value < b_1->inferred_index.value);
}

RogueClassIOError* RogueIOError__init_object( RogueClassIOError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassIOError*)(THIS);
}

RogueString* RogueIOError__type_name( RogueClassIOError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1297]);
}

RogueClassFileReader* RogueFileReader__init_object( RogueClassFileReader* THIS )
{
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFileReader*)(THIS);
}

RogueString* RogueFileReader__type_name( RogueClassFileReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[830]);
}

RogueLogical RogueFileReader__has_another( RogueClassFileReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueByte RogueFileReader__peek( RogueClassFileReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  if (THIS->buffer_position == THIS->buffer->count)
  {
    THIS->buffer->count = (RogueInt32) fread( THIS->buffer->data->bytes, 1, 1024, THIS->fp );

    THIS->buffer_position = 0;
  }
  return (RogueByte)(THIS->buffer->data->bytes[THIS->buffer_position]);
}

RogueByte RogueFileReader__read( RogueClassFileReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  RogueByte result_0 = (((RogueFileReader__peek( ROGUE_ARG(THIS) ))));
  ++THIS->position;
  ++THIS->buffer_position;
  if (THIS->position == THIS->count)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  return (RogueByte)(result_0);
}

RogueClassFileReader* RogueFileReader__init__String( RogueClassFileReader* THIS, RogueString* _filepath_0 )
{
  RogueFileReader__open__String( ROGUE_ARG(THIS), _filepath_0 );
  return (RogueClassFileReader*)(THIS);
}

RogueClassFileReader* RogueFileReader__close( RogueClassFileReader* THIS )
{
  if (!!(THIS->fp))
  {
    fclose( THIS->fp );
    THIS->fp = 0;

  }
  THIS->position = 0;
  THIS->count = 0;
  return (RogueClassFileReader*)(THIS);
}

RogueLogical RogueFileReader__open__String( RogueClassFileReader* THIS, RogueString* _auto_2774_0 )
{
  THIS->filepath = _auto_2774_0;
  RogueFileReader__close( ROGUE_ARG(THIS) );
  THIS->fp = fopen( (char*)THIS->filepath->utf8, "rb" );
  if (THIS->fp)
  {
    fseek( THIS->fp, 0, SEEK_END );
    THIS->count = (RogueInt32) ftell( THIS->fp );
    fseek( THIS->fp, 0, SEEK_SET );
  }

  if (THIS->count == 0)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueClassFileWriter* RogueFileWriter__init_object( RogueClassFileWriter* THIS )
{
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFileWriter*)(THIS);
}

RogueString* RogueFileWriter__type_name( RogueClassFileWriter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[831]);
}

RogueClassFileWriter* RogueFileWriter__close( RogueClassFileWriter* THIS )
{
  RogueFileWriter__flush( ROGUE_ARG(THIS) );
  if (!!(THIS->fp))
  {
    fclose( THIS->fp ); THIS->fp = 0;

  }
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__flush( RogueClassFileWriter* THIS )
{
  if ((THIS->buffer->count == 0 || !(!!(THIS->fp))))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  fwrite( THIS->buffer->data->bytes, 1, THIS->buffer->count, THIS->fp );

  fflush( THIS->fp );

  RogueByte_List__clear( ROGUE_ARG(THIS->buffer) );
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__write__Byte( RogueClassFileWriter* THIS, RogueByte ch_0 )
{
  if (!(!!(THIS->fp)))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  ++THIS->position;
  RogueByte_List__add__Byte( ROGUE_ARG(THIS->buffer), ch_0 );
  if (THIS->buffer->count == 1024)
  {
    return (RogueClassFileWriter*)(((RogueFileWriter__flush( ROGUE_ARG(THIS) ))));
  }
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__init__String( RogueClassFileWriter* THIS, RogueString* _filepath_0 )
{
  RogueFileWriter__open__String( ROGUE_ARG(THIS), _filepath_0 );
  return (RogueClassFileWriter*)(THIS);
}

RogueLogical RogueFileWriter__open__String( RogueClassFileWriter* THIS, RogueString* _auto_2775_0 )
{
  THIS->filepath = _auto_2775_0;
  RogueFileWriter__close( ROGUE_ARG(THIS) );
  THIS->error = false;
  THIS->fp = fopen( (char*)THIS->filepath->utf8, "wb" );
  THIS->error = !(THIS->fp);
  return !THIS->error;

}

RogueClassUTF8Reader* RogueUTF8Reader__init_object( RogueClassUTF8Reader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassUTF8Reader*)(THIS);
}

RogueString* RogueUTF8Reader__type_name( RogueClassUTF8Reader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[832]);
}

RogueLogical RogueUTF8Reader__has_another( RogueClassUTF8Reader* THIS )
{
  return (RogueLogical)((THIS->next.exists || (RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))));
}

RogueCharacter RogueUTF8Reader__peek( RogueClassUTF8Reader* THIS )
{
  if (THIS->next.exists)
  {
    return (RogueCharacter)(THIS->next.value);
  }
  if (!((RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))))
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  RogueCharacter ch_0 = (((RogueCharacter)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))));
  if (!!((ch_0 & ((RogueCharacter)(128)))))
  {
    if (!!((ch_0 & ((RogueCharacter)(32)))))
    {
      if (!!((ch_0 & ((RogueCharacter)(16)))))
      {
        ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(7))) << ((RogueCharacter)(18))) | ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 12)))));
        ch_0 |= ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)));
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
      else
      {
        ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(15))) << ((RogueCharacter)(12))) | ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)))));
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
    }
    else
    {
      ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(31))) << ((RogueCharacter)(6))) | ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)))));
    }
  }
  THIS->next = RogueOptionalCharacter( ch_0, true );
  return (RogueCharacter)(ch_0);
}

RogueCharacter RogueUTF8Reader__read( RogueClassUTF8Reader* THIS )
{
  RogueCharacter result_0 = (((RogueUTF8Reader__peek( ROGUE_ARG(THIS) ))));
  THIS->next = (RogueOptionalCharacter__create());
  ++THIS->position;
  return (RogueCharacter)(result_0);
}

RogueClassUTF8Reader* RogueUTF8Reader__init__Reader_Byte_( RogueClassUTF8Reader* THIS, RogueClassReader_Byte_* _auto_2783_0 )
{
  THIS->byte_reader = _auto_2783_0;
  THIS->next = (RogueOptionalCharacter__create());
  return (RogueClassUTF8Reader*)(THIS);
}

RogueClassDirectiveTokenType* RogueDirectiveTokenType__init_object( RogueClassDirectiveTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassDirectiveTokenType*)(THIS);
}

RogueString* RogueDirectiveTokenType__type_name( RogueClassDirectiveTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[942]);
}

RogueClassToken* RogueDirectiveTokenType__create_token__String_Int32_Int32( RogueClassDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueDirectiveTokenType__is_directive( RogueClassDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassStructuralDirectiveTokenType* RogueStructuralDirectiveTokenType__init_object( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassStructuralDirectiveTokenType*)(THIS);
}

RogueString* RogueStructuralDirectiveTokenType__type_name( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[943]);
}

RogueClassToken* RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32( RogueClassStructuralDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructuralDirectiveTokenType__is_directive( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueStructuralDirectiveTokenType__is_structure( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassEOLTokenType* RogueEOLTokenType__init_object( RogueClassEOLTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassEOLTokenType*)(THIS);
}

RogueString* RogueEOLTokenType__type_name( RogueClassEOLTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[944]);
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), Rogue_literal_strings[0] ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32_String( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueEOLTokenType__is_structure( RogueClassEOLTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueClassStructureTokenType* RogueStructureTokenType__init_object( RogueClassStructureTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassStructureTokenType*)(THIS);
}

RogueString* RogueStructureTokenType__type_name( RogueClassStructureTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[945]);
}

RogueClassToken* RogueStructureTokenType__create_token__String_Int32_Int32( RogueClassStructureTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructureTokenType__is_structure( RogueClassStructureTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassNativeCodeTokenType* RogueNativeCodeTokenType__init_object( RogueClassNativeCodeTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassNativeCodeTokenType*)(THIS);
}

RogueString* RogueNativeCodeTokenType__type_name( RogueClassNativeCodeTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[946]);
}

RogueClassToken* RogueNativeCodeTokenType__create_token__String_Int32_Int32_String( RogueClassNativeCodeTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueNativeCodeTokenType__create_token__Token_String( RogueClassNativeCodeTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_1 ))))), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) ))));
}

RogueClassModifyAndAssignTokenType* RogueModifyAndAssignTokenType__init_object( RogueClassModifyAndAssignTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassModifyAndAssignTokenType*)(THIS);
}

RogueString* RogueModifyAndAssignTokenType__type_name( RogueClassModifyAndAssignTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[947]);
}

RogueLogical RogueModifyAndAssignTokenType__is_op_with_assign( RogueClassModifyAndAssignTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassInt32Property* RogueInt32Property__init_object( RogueClassInt32Property* THIS )
{
  RoguePropertyValue__init_object( ROGUE_ARG(((RogueClassPropertyValue*)THIS)) );
  return (RogueClassInt32Property*)(THIS);
}

RogueString* RogueInt32Property__to_String( RogueClassInt32Property* THIS )
{
  return (RogueString*)(((RogueInt32__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueInt32Property__type_name( RogueClassInt32Property* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1223]);
}

RogueInt32 RogueInt32Property__to_Int32( RogueClassInt32Property* THIS )
{
  return (RogueInt32)(THIS->value);
}

RogueClassInt32Property* RogueInt32Property__init__Int32( RogueClassInt32Property* THIS, RogueInt32 _auto_2888_0 )
{
  THIS->value = _auto_2888_0;
  return (RogueClassInt32Property*)(THIS);
}

RogueClassStringProperty* RogueStringProperty__init_object( RogueClassStringProperty* THIS )
{
  RoguePropertyValue__init_object( ROGUE_ARG(((RogueClassPropertyValue*)THIS)) );
  return (RogueClassStringProperty*)(THIS);
}

RogueString* RogueStringProperty__to_String( RogueClassStringProperty* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueStringProperty__type_name( RogueClassStringProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1224]);
}

RogueInt32 RogueStringProperty__to_Int32( RogueClassStringProperty* THIS )
{
  return (RogueInt32)(strtol( (char*)THIS->value->utf8, 0, 10 ));
}

RogueClassStringProperty* RogueStringProperty__init__String( RogueClassStringProperty* THIS, RogueString* _auto_2893_0 )
{
  THIS->value = _auto_2893_0;
  return (RogueClassStringProperty*)(THIS);
}

RogueClassCmdConvertToPrimitiveType* RogueCmdConvertToPrimitiveType__init_object( RogueClassCmdConvertToPrimitiveType* THIS )
{
  RogueCmdConvertToType__init_object( ROGUE_ARG(((RogueClassCmdConvertToType*)THIS)) );
  return (RogueClassCmdConvertToPrimitiveType*)(THIS);
}

RogueString* RogueCmdConvertToPrimitiveType__type_name( RogueClassCmdConvertToPrimitiveType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1270]);
}

RogueClassCmd* RogueCmdConvertToPrimitiveType__clone__CloneArgs( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdConvertToPrimitiveType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToPrimitiveType*,ROGUE_CREATE_OBJECT(CmdConvertToPrimitiveType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM122( 13, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdConvertToPrimitiveType__dispatch__Visitor( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdConvertToPrimitiveType__resolve__Scope( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM120( 34, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdConvertToPrimitiveType__write_cpp__CPPWriter_Logical( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[622] )))), ROGUE_ARG(THIS->_target_type->cpp_class_name) )))), Rogue_literal_strings[1096] );
  call_ROGUEM133( 41, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init_object( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueString* RogueListReader_CmdSelectCase___type_name( RogueClassListReader_CmdSelectCase_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1287]);
}

RogueLogical RogueListReader_CmdSelectCase___has_another( RogueClassListReader_CmdSelectCase_* THIS )
{
  if (THIS->is_limited)
  {
    return (RogueLogical)(THIS->position < THIS->limit);
  }
  else
  {
    return (RogueLogical)(THIS->position < THIS->list->count);
  }
}

RogueClassCmdSelectCase* RogueListReader_CmdSelectCase___read( RogueClassListReader_CmdSelectCase_* THIS )
{
  ++THIS->position;
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->list->data->objects[(THIS->position - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( RogueClassListReader_CmdSelectCase_* THIS, RogueCmdSelectCase_List* _auto_3163_0, RogueInt32 _auto_3164_1 )
{
  THIS->position = _auto_3164_1;
  THIS->list = _auto_3163_0;
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueClassCmdCallStaticMethod* RogueCmdCallStaticMethod__init_object( RogueClassCmdCallStaticMethod* THIS )
{
  RogueCmdCallMethod__init_object( ROGUE_ARG(((RogueClassCmdCallMethod*)THIS)) );
  return (RogueClassCmdCallStaticMethod*)(THIS);
}

RogueString* RogueCmdCallStaticMethod__type_name( RogueClassCmdCallStaticMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1281]);
}

RogueClassCmd* RogueCmdCallStaticMethod__clone__CloneArgs( RogueClassCmdCallStaticMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallStaticMethod__dispatch__Visitor( RogueClassCmdCallStaticMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmd* RogueCmdCallStaticMethod__resolve__Scope( RogueClassCmdCallStaticMethod* THIS, RogueClassScope* scope_0 )
{
  if (!(!!(THIS->context)))
  {
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context) )))));
  }
  return (RogueClassCmd*)((RogueCmdCall__resolve__Scope( ROGUE_ARG(((RogueClassCmdCall*)THIS)), scope_0 )));
}

void RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallStaticMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[92] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[584] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3795_3,(THIS->args));
    RogueInt32 _auto_3796_4 = (0);
    for (;_auto_3796_4 < _auto_3795_3->count;++_auto_3796_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3795_3->data->objects[_auto_3796_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[32] );
  }
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init_object( RogueClassNativeCodeToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueString* RogueNativeCodeToken__to_String( RogueClassNativeCodeToken* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueNativeCodeToken__type_name( RogueClassNativeCodeToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1288]);
}

RogueString* RogueNativeCodeToken__quoted_name( RogueClassNativeCodeToken* THIS )
{
  if (((void*)THIS->_type) == ((void*)RogueTokenType_keyword_nativeHeader))
  {
    return (RogueString*)(Rogue_literal_strings[169]);
  }
  return (RogueString*)(Rogue_literal_strings[168]);
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init__TokenType_String( RogueClassNativeCodeToken* THIS, RogueClassTokenType* _auto_3719_0, RogueString* _auto_3720_1 )
{
  THIS->value = _auto_3720_1;
  THIS->_type = _auto_3719_0;
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueString* RogueSystemEnvironment__get__String( RogueClassSystemEnvironment THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,result_1,0);
  char* c_result = getenv( (char*)name_0->utf8 );
  if (c_result)
  {
    result_1 = RogueString_create_from_utf8( c_result );
  }

  return (RogueString*)(((((result_1))) ? (result_1) : ((RogueString*)(NULL))));
}


void Rogue_configure( int argc, const char* argv[] )
{
  if (Rogue_configured) return;
  Rogue_configured = 1;
  
  Rogue_argc = argc;
  Rogue_argv = argv;
  
  Rogue_configure_gc();
  Rogue_configure_types();
  std::set_terminate( Rogue_terminate_handler );
  RogueTypeException = &Rogue_types[ 0 ];
  RogueTypeObject = &Rogue_types[ 1 ];
  RogueTypeString = &Rogue_types[ 2 ];
  RogueTypeStackTrace = &Rogue_types[ 3 ];
  RogueTypeString_List = &Rogue_types[ 4 ];
  RogueTypeGenericList = &Rogue_types[ 5 ];
  RogueTypeArray = &Rogue_types[ 7 ];
  RogueTypeInt32 = &Rogue_types[ 8 ];
  RogueTypeLogical = &Rogue_types[ 9 ];
  RogueTypeInt64 = &Rogue_types[ 10 ];
  RogueTypeTypeInfo = &Rogue_types[ 11 ];
  RogueTypePropertyInfo_List = &Rogue_types[ 12 ];
  RogueTypePropertyInfo = &Rogue_types[ 13 ];
  RogueTypeStringBuilder = &Rogue_types[ 15 ];
  RogueTypeByte_List = &Rogue_types[ 16 ];
  RogueTypeByte = &Rogue_types[ 17 ];
  RogueTypeCharacter_List = &Rogue_types[ 19 ];
  RogueTypeCharacter = &Rogue_types[ 20 ];
  RogueTypeReal64 = &Rogue_types[ 22 ];
  RogueTypeTable_String_String_ = &Rogue_types[ 23 ];
  RogueTypeTableEntry_String_String__List = &Rogue_types[ 24 ];
  RogueTypeTableEntry_String_String_ = &Rogue_types[ 25 ];
  RogueTypeStringReader = &Rogue_types[ 27 ];
  RogueTypeReader_Character_ = &Rogue_types[ 28 ];
  RogueTypeReader_String_ = &Rogue_types[ 29 ];
  RogueTypeRuntime = &Rogue_types[ 30 ];
  RogueTypeTable_String_TypeInfo_ = &Rogue_types[ 31 ];
  RogueTypeTableEntry_String_TypeInfo__List = &Rogue_types[ 32 ];
  RogueTypeTableEntry_String_TypeInfo_ = &Rogue_types[ 33 ];
  RogueTypeGlobal = &Rogue_types[ 35 ];
  RogueTypePrintWriterAspect_Global_global_output_buffer_ = &Rogue_types[ 36 ];
  RogueTypePrintWriter = &Rogue_types[ 37 ];
  RogueTypeFunction___List = &Rogue_types[ 38 ];
  RogueTypeFunction__ = &Rogue_types[ 39 ];
  RogueTypeConsole = &Rogue_types[ 41 ];
  RogueTypePrintWriterAspect_Console_output_buffer_ = &Rogue_types[ 42 ];
  RogueTypeFunction_95 = &Rogue_types[ 43 ];
  RogueTypeRogueC = &Rogue_types[ 44 ];
  RogueTypeTable_String_Logical_ = &Rogue_types[ 45 ];
  RogueTypeTableEntry_String_Logical__List = &Rogue_types[ 46 ];
  RogueTypeTableEntry_String_Logical_ = &Rogue_types[ 47 ];
  RogueTypeParser_List = &Rogue_types[ 49 ];
  RogueTypeParser = &Rogue_types[ 50 ];
  RogueTypeTokenReader = &Rogue_types[ 51 ];
  RogueTypeToken_List = &Rogue_types[ 52 ];
  RogueTypeToken = &Rogue_types[ 53 ];
  RogueTypeTokenType = &Rogue_types[ 54 ];
  RogueTypeTable_String_TokenType_ = &Rogue_types[ 55 ];
  RogueTypeTableEntry_String_TokenType__List = &Rogue_types[ 56 ];
  RogueTypeTableEntry_String_TokenType_ = &Rogue_types[ 57 ];
  RogueTypeType = &Rogue_types[ 60 ];
  RogueTypeAttributes = &Rogue_types[ 61 ];
  RogueTypeTemplate = &Rogue_types[ 62 ];
  RogueTypeTypeParameter_List = &Rogue_types[ 63 ];
  RogueTypeTypeParameter = &Rogue_types[ 64 ];
  RogueTypeTable_Int32_Template_ = &Rogue_types[ 66 ];
  RogueTypeTableEntry_Int32_Template__List = &Rogue_types[ 67 ];
  RogueTypeTableEntry_Int32_Template_ = &Rogue_types[ 68 ];
  RogueTypeInt32_List = &Rogue_types[ 70 ];
  RogueTypeType_List = &Rogue_types[ 72 ];
  RogueTypeTypeSpecializer_List = &Rogue_types[ 74 ];
  RogueTypeTypeSpecializer = &Rogue_types[ 75 ];
  RogueTypeDefinition_List = &Rogue_types[ 77 ];
  RogueTypeDefinition = &Rogue_types[ 78 ];
  RogueTypeCmd = &Rogue_types[ 79 ];
  RogueTypeTable_String_Definition_ = &Rogue_types[ 81 ];
  RogueTypeTableEntry_String_Definition__List = &Rogue_types[ 82 ];
  RogueTypeTableEntry_String_Definition_ = &Rogue_types[ 83 ];
  RogueTypeProperty_List = &Rogue_types[ 85 ];
  RogueTypeProperty = &Rogue_types[ 86 ];
  RogueTypeTable_String_Property_ = &Rogue_types[ 88 ];
  RogueTypeTableEntry_String_Property__List = &Rogue_types[ 89 ];
  RogueTypeTableEntry_String_Property_ = &Rogue_types[ 90 ];
  RogueTypeMethod_List = &Rogue_types[ 92 ];
  RogueTypeMethod = &Rogue_types[ 93 ];
  RogueTypeLocal_List = &Rogue_types[ 94 ];
  RogueTypeLocal = &Rogue_types[ 95 ];
  RogueTypeCmdStatementList = &Rogue_types[ 97 ];
  RogueTypeCmd_List = &Rogue_types[ 98 ];
  RogueTypeCmdLabel_List = &Rogue_types[ 100 ];
  RogueTypeCmdLabel = &Rogue_types[ 101 ];
  RogueTypeTable_String_CmdLabel_ = &Rogue_types[ 103 ];
  RogueTypeTableEntry_String_CmdLabel__List = &Rogue_types[ 104 ];
  RogueTypeTableEntry_String_CmdLabel_ = &Rogue_types[ 105 ];
  RogueTypeMethodTemplate = &Rogue_types[ 107 ];
  RogueTypeMethodTemplate_List = &Rogue_types[ 108 ];
  RogueTypeTable_String_Method_List_ = &Rogue_types[ 111 ];
  RogueTypeTableEntry_String_Method_List__List = &Rogue_types[ 112 ];
  RogueTypeTableEntry_String_Method_List_ = &Rogue_types[ 113 ];
  RogueTypeTable_String_Method_ = &Rogue_types[ 115 ];
  RogueTypeTableEntry_String_Method__List = &Rogue_types[ 116 ];
  RogueTypeTableEntry_String_Method_ = &Rogue_types[ 117 ];
  RogueTypeMethodTemplates = &Rogue_types[ 119 ];
  RogueTypeTable_String_ParseReader_ = &Rogue_types[ 121 ];
  RogueTypeTableEntry_String_ParseReader__List = &Rogue_types[ 122 ];
  RogueTypeTableEntry_String_ParseReader_ = &Rogue_types[ 123 ];
  RogueTypeParseReader = &Rogue_types[ 124 ];
  RogueTypeStopwatch = &Rogue_types[ 126 ];
  RogueTypePlugin_List = &Rogue_types[ 127 ];
  RogueTypePlugin = &Rogue_types[ 128 ];
  RogueTypeFunction__RETURNSLogical = &Rogue_types[ 129 ];
  RogueTypeProgram = &Rogue_types[ 131 ];
  RogueTypeTemplate_List = &Rogue_types[ 132 ];
  RogueTypeTable_String_Template_ = &Rogue_types[ 134 ];
  RogueTypeTableEntry_String_Template__List = &Rogue_types[ 135 ];
  RogueTypeTableEntry_String_Template_ = &Rogue_types[ 136 ];
  RogueTypeTable_String_Augment_List_ = &Rogue_types[ 138 ];
  RogueTypeTableEntry_String_Augment_List__List = &Rogue_types[ 139 ];
  RogueTypeTableEntry_String_Augment_List_ = &Rogue_types[ 140 ];
  RogueTypeAugment_List = &Rogue_types[ 141 ];
  RogueTypeAugment = &Rogue_types[ 142 ];
  RogueTypeTable_String_Type_ = &Rogue_types[ 145 ];
  RogueTypeTableEntry_String_Type__List = &Rogue_types[ 146 ];
  RogueTypeTableEntry_String_Type_ = &Rogue_types[ 147 ];
  RogueTypeTable_String_Int32_ = &Rogue_types[ 149 ];
  RogueTypeTableEntry_String_Int32__List = &Rogue_types[ 150 ];
  RogueTypeTableEntry_String_Int32_ = &Rogue_types[ 151 ];
  RogueTypeTable_String_String_List_ = &Rogue_types[ 153 ];
  RogueTypeTableEntry_String_String_List__List = &Rogue_types[ 154 ];
  RogueTypeTableEntry_String_String_List_ = &Rogue_types[ 155 ];
  RogueTypeError = &Rogue_types[ 157 ];
  RogueTypeRogueError = &Rogue_types[ 158 ];
  RogueTypeCmdAccess = &Rogue_types[ 159 ];
  RogueTypeCmdArgs = &Rogue_types[ 160 ];
  RogueTypeCmdNamedArg_List = &Rogue_types[ 161 ];
  RogueTypeCmdNamedArg = &Rogue_types[ 162 ];
  RogueTypeCmdReturn = &Rogue_types[ 164 ];
  RogueTypeCmdStatement = &Rogue_types[ 165 ];
  RogueTypeScope = &Rogue_types[ 166 ];
  RogueTypeCmdControlStructure_List = &Rogue_types[ 167 ];
  RogueTypeCmdControlStructure = &Rogue_types[ 168 ];
  RogueTypeCmdTaskControlSection = &Rogue_types[ 169 ];
  RogueTypeFunction_Type_RETURNSLogical = &Rogue_types[ 171 ];
  RogueTypeFunction_383 = &Rogue_types[ 172 ];
  RogueTypeFunction_384 = &Rogue_types[ 173 ];
  RogueTypeCPPWriter = &Rogue_types[ 174 ];
  RogueTypeSystem = &Rogue_types[ 175 ];
  RogueTypeMath = &Rogue_types[ 176 ];
  RogueTypeReader_Byte_ = &Rogue_types[ 177 ];
  RogueTypeWriter_Byte_ = &Rogue_types[ 178 ];
  RogueTypeFile = &Rogue_types[ 179 ];
  RogueTypeCmdMakeRequisite = &Rogue_types[ 180 ];
  RogueTypeLineReader = &Rogue_types[ 181 ];
  RogueTypeFunction_798 = &Rogue_types[ 182 ];
  RogueTypeTokenizer = &Rogue_types[ 183 ];
  RogueTypePreprocessor = &Rogue_types[ 184 ];
  RogueTypeTable_String_Token_List_ = &Rogue_types[ 185 ];
  RogueTypeTableEntry_String_Token_List__List = &Rogue_types[ 186 ];
  RogueTypeTableEntry_String_Token_List_ = &Rogue_types[ 187 ];
  RogueTypePreprocessorTokenReader = &Rogue_types[ 189 ];
  RogueTypeLiteralCharacterToken = &Rogue_types[ 190 ];
  RogueTypeLiteralInt64Token = &Rogue_types[ 191 ];
  RogueTypeLiteralInt32Token = &Rogue_types[ 192 ];
  RogueTypeLiteralReal64Token = &Rogue_types[ 193 ];
  RogueTypeStringDataToken = &Rogue_types[ 194 ];
  RogueTypeEOLToken = &Rogue_types[ 195 ];
  RogueTypeCmdLiteralLogical = &Rogue_types[ 196 ];
  RogueTypeCmdLiteral = &Rogue_types[ 197 ];
  RogueTypeCmdLiteralInt32 = &Rogue_types[ 198 ];
  RogueTypeCloneArgs = &Rogue_types[ 199 ];
  RogueTypeCmdAdd = &Rogue_types[ 200 ];
  RogueTypeCmdBinary = &Rogue_types[ 201 ];
  RogueTypePropertyTable = &Rogue_types[ 202 ];
  RogueTypePropertyValue = &Rogue_types[ 203 ];
  RogueTypeTable_String_PropertyValue_ = &Rogue_types[ 204 ];
  RogueTypeTableEntry_String_PropertyValue__List = &Rogue_types[ 205 ];
  RogueTypeTableEntry_String_PropertyValue_ = &Rogue_types[ 206 ];
  RogueTypeCmdNativeHeader = &Rogue_types[ 208 ];
  RogueTypeCmdNativeCode = &Rogue_types[ 209 ];
  RogueTypeCmdIf = &Rogue_types[ 210 ];
  RogueTypeCmdWhich = &Rogue_types[ 211 ];
  RogueTypeCmdWhichCase_List = &Rogue_types[ 212 ];
  RogueTypeCmdWhichCase = &Rogue_types[ 213 ];
  RogueTypeCmdBlock = &Rogue_types[ 215 ];
  RogueTypeCmdContingent = &Rogue_types[ 216 ];
  RogueTypeCmdGenericLoop = &Rogue_types[ 217 ];
  RogueTypeCmdTry = &Rogue_types[ 218 ];
  RogueTypeCmdCatch_List = &Rogue_types[ 219 ];
  RogueTypeCmdCatch = &Rogue_types[ 220 ];
  RogueTypeCmdAwait = &Rogue_types[ 222 ];
  RogueTypeCmdYield = &Rogue_types[ 223 ];
  RogueTypeCmdThrow = &Rogue_types[ 224 ];
  RogueTypeCmdLiteralString = &Rogue_types[ 225 ];
  RogueTypeCmdFormattedString = &Rogue_types[ 226 ];
  RogueTypeCmdTrace = &Rogue_types[ 227 ];
  RogueTypeCmdLocalDeclaration = &Rogue_types[ 228 ];
  RogueTypeCmdAssert = &Rogue_types[ 229 ];
  RogueTypeCmdEscape = &Rogue_types[ 230 ];
  RogueTypeCmdNextIteration = &Rogue_types[ 231 ];
  RogueTypeCmdNecessary = &Rogue_types[ 232 ];
  RogueTypeCmdSufficient = &Rogue_types[ 233 ];
  RogueTypeCmdAdjust = &Rogue_types[ 234 ];
  RogueTypeCmdAssign = &Rogue_types[ 235 ];
  RogueTypeCmdModifyAndAssign = &Rogue_types[ 236 ];
  RogueTypeCmdAdjustLocal = &Rogue_types[ 237 ];
  RogueTypeCmdReadLocal = &Rogue_types[ 238 ];
  RogueTypeCmdCompareLE = &Rogue_types[ 239 ];
  RogueTypeCmdComparison = &Rogue_types[ 240 ];
  RogueTypeCmdRange = &Rogue_types[ 241 ];
  RogueTypeCmdModifyAndAssignLocal = &Rogue_types[ 242 ];
  RogueTypeCmdResolvedModifyAndAssign = &Rogue_types[ 243 ];
  RogueTypeCmdRangeUpTo = &Rogue_types[ 244 ];
  RogueTypeCmdRangeUpToLessThan = &Rogue_types[ 245 ];
  RogueTypeCmdCompareLT = &Rogue_types[ 246 ];
  RogueTypeCmdCompareGE = &Rogue_types[ 247 ];
  RogueTypeCmdForEach = &Rogue_types[ 248 ];
  RogueTypeCmdRangeDownTo = &Rogue_types[ 249 ];
  RogueTypeCmdLogicalXor = &Rogue_types[ 250 ];
  RogueTypeCmdBinaryLogical = &Rogue_types[ 251 ];
  RogueTypeCmdLogicalOr = &Rogue_types[ 252 ];
  RogueTypeCmdLogicalAnd = &Rogue_types[ 253 ];
  RogueTypeCmdCompareEQ = &Rogue_types[ 254 ];
  RogueTypeCmdCompareIs = &Rogue_types[ 255 ];
  RogueTypeCmdCompareNE = &Rogue_types[ 256 ];
  RogueTypeCmdCompareIsNot = &Rogue_types[ 257 ];
  RogueTypeCmdCompareGT = &Rogue_types[ 258 ];
  RogueTypeCmdInstanceOf = &Rogue_types[ 259 ];
  RogueTypeCmdTypeOperator = &Rogue_types[ 260 ];
  RogueTypeCmdLogicalNot = &Rogue_types[ 261 ];
  RogueTypeCmdUnary = &Rogue_types[ 262 ];
  RogueTypeCmdBitwiseXor = &Rogue_types[ 263 ];
  RogueTypeCmdBitwiseOp = &Rogue_types[ 264 ];
  RogueTypeCmdBitwiseOr = &Rogue_types[ 265 ];
  RogueTypeCmdBitwiseAnd = &Rogue_types[ 266 ];
  RogueTypeCmdBitwiseShiftLeft = &Rogue_types[ 267 ];
  RogueTypeCmdBitwiseShiftRight = &Rogue_types[ 268 ];
  RogueTypeCmdBitwiseShiftRightX = &Rogue_types[ 269 ];
  RogueTypeCmdSubtract = &Rogue_types[ 270 ];
  RogueTypeCmdMultiply = &Rogue_types[ 271 ];
  RogueTypeCmdDivide = &Rogue_types[ 272 ];
  RogueTypeCmdMod = &Rogue_types[ 273 ];
  RogueTypeCmdPower = &Rogue_types[ 274 ];
  RogueTypeCmdNegate = &Rogue_types[ 275 ];
  RogueTypeCmdBitwiseNot = &Rogue_types[ 276 ];
  RogueTypeCmdLogicalize = &Rogue_types[ 277 ];
  RogueTypeCmdIsReference = &Rogue_types[ 278 ];
  RogueTypeCmdElementAccess = &Rogue_types[ 279 ];
  RogueTypeCmdListConvert = &Rogue_types[ 280 ];
  RogueTypeCmdConvertToType = &Rogue_types[ 281 ];
  RogueTypeCmdCreateCallback = &Rogue_types[ 282 ];
  RogueTypeCmdAs = &Rogue_types[ 283 ];
  RogueTypeCmdDefaultValue = &Rogue_types[ 284 ];
  RogueTypeCmdLiteralNull = &Rogue_types[ 285 ];
  RogueTypeCmdLiteralReal64 = &Rogue_types[ 286 ];
  RogueTypeCmdLiteralInt64 = &Rogue_types[ 287 ];
  RogueTypeCmdLiteralCharacter = &Rogue_types[ 288 ];
  RogueTypeCmdLiteralThis = &Rogue_types[ 289 ];
  RogueTypeCmdThisContext = &Rogue_types[ 290 ];
  RogueTypeCmdCreateList = &Rogue_types[ 291 ];
  RogueTypeCmdCallPriorMethod = &Rogue_types[ 292 ];
  RogueTypeFnParam_List = &Rogue_types[ 293 ];
  RogueTypeFnParam = &Rogue_types[ 294 ];
  RogueTypeFnArg_List = &Rogue_types[ 296 ];
  RogueTypeFnArg = &Rogue_types[ 297 ];
  RogueTypeCmdCreateFunction = &Rogue_types[ 299 ];
  RogueTypeCmdInlineNative = &Rogue_types[ 300 ];
  RogueTypeCmdSelect = &Rogue_types[ 301 ];
  RogueTypeCmdSelectCase_List = &Rogue_types[ 302 ];
  RogueTypeCmdSelectCase = &Rogue_types[ 303 ];
  RogueTypeCmdRequire = &Rogue_types[ 305 ];
  RogueTypeCmdEnsure = &Rogue_types[ 306 ];
  RogueTypeCmdTypedLiteralList = &Rogue_types[ 307 ];
  RogueTypeListRebuilder_Token_ = &Rogue_types[ 308 ];
  RogueTypeCmdCreateCompound = &Rogue_types[ 309 ];
  RogueTypeVisitor = &Rogue_types[ 310 ];
  RogueTypeCmdSwitch = &Rogue_types[ 311 ];
  RogueTypeCmdCreateObject = &Rogue_types[ 312 ];
  RogueTypeCmdReadSingleton = &Rogue_types[ 313 ];
  RogueTypeCmdWriteSingleton = &Rogue_types[ 314 ];
  RogueTypeCmdWriteLocal = &Rogue_types[ 315 ];
  RogueTypeCmdReadGlobal = &Rogue_types[ 316 ];
  RogueTypeCmdWriteGlobal = &Rogue_types[ 317 ];
  RogueTypeCmdReadProperty = &Rogue_types[ 318 ];
  RogueTypeCmdWriteProperty = &Rogue_types[ 319 ];
  RogueTypeCmdCall = &Rogue_types[ 320 ];
  RogueTypeCmdCallDynamicMethod = &Rogue_types[ 321 ];
  RogueTypeCmdCallMethod = &Rogue_types[ 322 ];
  RogueTypeCmdAdjustProperty = &Rogue_types[ 323 ];
  RogueTypeCmdAdjustGlobal = &Rogue_types[ 324 ];
  RogueTypeCmdModifyAndAssignGlobal = &Rogue_types[ 325 ];
  RogueTypeCmdModifyAndAssignProperty = &Rogue_types[ 326 ];
  RogueTypeCmdCreateArray = &Rogue_types[ 327 ];
  RogueTypeCmdReadArrayElement = &Rogue_types[ 328 ];
  RogueTypeCmdReadArrayCount = &Rogue_types[ 329 ];
  RogueTypeCmdWriteArrayElement = &Rogue_types[ 330 ];
  RogueTypeCmdTaskControl = &Rogue_types[ 331 ];
  RogueTypeCmdTaskControlSection_List = &Rogue_types[ 332 ];
  RogueTypeCmdNoAction = &Rogue_types[ 334 ];
  RogueTypeUpdateThisTypeVisitor = &Rogue_types[ 335 ];
  RogueTypeTable_String_TypeSpecializer_ = &Rogue_types[ 336 ];
  RogueTypeTableEntry_String_TypeSpecializer__List = &Rogue_types[ 337 ];
  RogueTypeTableEntry_String_TypeSpecializer_ = &Rogue_types[ 338 ];
  RogueTypeCmdCastToType = &Rogue_types[ 340 ];
  RogueTypeTraceUsedCodeVisitor = &Rogue_types[ 341 ];
  RogueTypeCloneMethodArgs = &Rogue_types[ 342 ];
  RogueTypeTaskArgs = &Rogue_types[ 343 ];
  RogueTypeRequirementError = &Rogue_types[ 344 ];
  RogueTypeToken_List_List = &Rogue_types[ 345 ];
  RogueTypeMacroArgs = &Rogue_types[ 347 ];
  RogueTypeTable_String_Cmd_ = &Rogue_types[ 348 ];
  RogueTypeTableEntry_String_Cmd__List = &Rogue_types[ 349 ];
  RogueTypeTableEntry_String_Cmd_ = &Rogue_types[ 350 ];
  RogueTypeFunction_CmdNamedArg_RETURNSLogical = &Rogue_types[ 352 ];
  RogueTypeListRebuilder_CmdNamedArg_ = &Rogue_types[ 353 ];
  RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical = &Rogue_types[ 354 ];
  RogueTypeQuicksort_CmdNamedArg_ = &Rogue_types[ 355 ];
  RogueTypeCmdCallInlineNativeRoutine = &Rogue_types[ 356 ];
  RogueTypeCmdCallInlineNative = &Rogue_types[ 357 ];
  RogueTypeCmdCallNativeRoutine = &Rogue_types[ 358 ];
  RogueTypeCmdCallRoutine = &Rogue_types[ 359 ];
  RogueTypeCmdCallInlineNativeMethod = &Rogue_types[ 360 ];
  RogueTypeCmdCallNativeMethod = &Rogue_types[ 361 ];
  RogueTypeCmdCallAspectMethod = &Rogue_types[ 362 ];
  RogueTypeCandidateMethods = &Rogue_types[ 363 ];
  RogueTypeFunction_2629 = &Rogue_types[ 364 ];
  RogueTypeFunction_2630 = &Rogue_types[ 365 ];
  RogueTypeIOError = &Rogue_types[ 366 ];
  RogueTypeFileReader = &Rogue_types[ 367 ];
  RogueTypeFileWriter = &Rogue_types[ 368 ];
  RogueTypeUTF8Reader = &Rogue_types[ 369 ];
  RogueTypeDirectiveTokenType = &Rogue_types[ 370 ];
  RogueTypeStructuralDirectiveTokenType = &Rogue_types[ 371 ];
  RogueTypeEOLTokenType = &Rogue_types[ 372 ];
  RogueTypeStructureTokenType = &Rogue_types[ 373 ];
  RogueTypeNativeCodeTokenType = &Rogue_types[ 374 ];
  RogueTypeModifyAndAssignTokenType = &Rogue_types[ 375 ];
  RogueTypeInt32Property = &Rogue_types[ 376 ];
  RogueTypeStringProperty = &Rogue_types[ 377 ];
  RogueTypeCmdConvertToPrimitiveType = &Rogue_types[ 378 ];
  RogueTypeListReader_CmdSelectCase_ = &Rogue_types[ 379 ];
  RogueTypeReader_CmdSelectCase_ = &Rogue_types[ 380 ];
  RogueTypeCmdCallStaticMethod = &Rogue_types[ 381 ];
  RogueTypeNativeCodeToken = &Rogue_types[ 382 ];
  RogueTypeOptionalInt32 = &Rogue_types[ 383 ];
  RogueTypeSystemEnvironment = &Rogue_types[ 384 ];
  RogueTypeOptionalByte = &Rogue_types[ 385 ];
  RogueTypeOptionalCharacter = &Rogue_types[ 386 ];

  Rogue_literal_strings[0] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "", 0 ) ); 
  Rogue_literal_strings[1] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "null", 4 ) ); 
  Rogue_literal_strings[2] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/Libraries/", 11 ) ); 
  Rogue_literal_strings[3] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--", 2 ) ); 
  Rogue_literal_strings[4] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--output", 8 ) ); 
  Rogue_literal_strings[5] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",", 1 ) ); 
  Rogue_literal_strings[6] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n", 1 ) ); 
  Rogue_literal_strings[7] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "===============================================================================", 79 ) ); 
  Rogue_literal_strings[8] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR in \"", 10 ) ); 
  Rogue_literal_strings[9] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"  line ", 8 ) ); 
  Rogue_literal_strings[10] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-9223372036854775808", 20 ) ); 
  Rogue_literal_strings[11] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", column ", 9 ) ); 
  Rogue_literal_strings[12] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR", 5 ) ); 
  Rogue_literal_strings[13] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Output filepath expected after \"--output=\".", 43 ) ); 
  Rogue_literal_strings[14] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--execute", 9 ) ); 
  Rogue_literal_strings[15] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--debug", 7 ) ); 
  Rogue_literal_strings[16] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries", 11 ) ); 
  Rogue_literal_strings[17] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more paths expected after \"--libraries=\".", 48 ) ); 
  Rogue_literal_strings[18] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries option specifies non-existent folder \"", 50 ) ); 
  Rogue_literal_strings[19] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\".", 2 ) ); 
  Rogue_literal_strings[20] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--main", 6 ) ); 
  Rogue_literal_strings[21] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected value for '--main' option.", 37 ) ); 
  Rogue_literal_strings[22] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--package", 9 ) ); 
  Rogue_literal_strings[23] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Java package name expected after \"--package=\" (e.g. \"com.developer.app\").", 73 ) ); 
  Rogue_literal_strings[24] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--requisite", 11 ) ); 
  Rogue_literal_strings[25] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--target", 8 ) ); 
  Rogue_literal_strings[26] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more comma-separated target names expected after \"--target=\" (e.g. \"C++\").", 81 ) ); 
  Rogue_literal_strings[27] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc", 4 ) ); 
  Rogue_literal_strings[28] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "auto", 4 ) ); 
  Rogue_literal_strings[29] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "manual", 6 ) ); 
  Rogue_literal_strings[30] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "boehm", 5 ) ); 
  Rogue_literal_strings[31] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown GC mode (--gc=", 22 ) ); 
  Rogue_literal_strings[32] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")", 1 ) ); 
  Rogue_literal_strings[33] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc-threshold", 14 ) ); 
  Rogue_literal_strings[34] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A value such as 1.1MB, 512K, or 65536 expected after \"--gc-threshold=\".", 71 ) ); 
  Rogue_literal_strings[35] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mb", 2 ) ); 
  Rogue_literal_strings[36] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "kb", 2 ) ); 
  Rogue_literal_strings[37] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--plugin-test", 13 ) ); 
  Rogue_literal_strings[38] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Test", 4 ) ); 
  Rogue_literal_strings[39] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--test", 6 ) ); 
  Rogue_literal_strings[40] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--version", 9 ) ); 
  Rogue_literal_strings[41] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected argument to --version option.", 40 ) ); 
  Rogue_literal_strings[42] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown option '", 16 ) ); 
  Rogue_literal_strings[43] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'.", 2 ) ); 
  Rogue_literal_strings[44] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "C++", 3 ) ); 
  Rogue_literal_strings[45] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1.0.59.5", 8 ) ); 
  Rogue_literal_strings[46] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "April 30, 2016", 14 ) ); 
  Rogue_literal_strings[47] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue Compiler v", 16 ) ); 
  Rogue_literal_strings[48] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nUSAGE\n  roguec [options] file1.rogue [file2.rogue ...]\n\nOPTIONS\n  --main\n    Include a main() function in the output file.\n\n  --debug\n    Enables exception stack traces.\n\n  --execute[=\"args\"]\n    Use command line directives to compile and run the output of the\n    compiled .rogue program.  Automatically enables the --main option.\n\n  --gc[=[manual|auto|boehm]]\n    Set the garbage collection mode:\n      (no --gc)   - Manual GC mode, the default (see below).\n      --gc        - Auto GC mode (see below).\n      --gc=manual - Rogue_collect_garbage() must be called in-between calls\n                    into the Rogue runtime.\n      --gc=auto   - Rogue collects garbage as it executes.  Slower than\n                    'manual' without optimizations enabled.\n      --gc=boehm  - Uses the Boehm garbage collector.  The Boehm's GC library\n                    must be obtained separately and linked in.\n\n  --gc-threshold={number}[MB|K]\n    Specifies the default garbage collection threshold of the compiled program.\n    Default is 1MB.  If neither MB nor K is specified then the number is\n    assumed to be bytes.\n\n  --libraries=\"path1[;path2...]\"\n    Add one or more additional library folders to the search path.\n\n  --output=destpath/[filename]\n    Specify the destination folder and optionally the base filename for the\n    output.\n\n  --requisite=[ClassName|ClassName.method_name(ParamType1,ParamType2,...)],...\n\n  --target=", 1424 ) ); 
  Rogue_literal_strings[49] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]", 1 ) ); 
  Rogue_literal_strings[50] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",Mac,Windows,iOS,Android,...]\n", 30 ) ); 
  Rogue_literal_strings[51] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n  --test\n    Compiled program includes any defined unit tests and runs them on launch.\n    Enables --debug automatically.\n\n  --version\n    Print the version number and release date.", 182 ) ); 
  Rogue_literal_strings[52] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue", 5 ) ); 
  Rogue_literal_strings[53] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_program", 13 ) ); 
  Rogue_literal_strings[54] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Internal", 8 ) ); 
  Rogue_literal_strings[55] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Built-in Type]", 15 ) ); 
  Rogue_literal_strings[56] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real64", 6 ) ); 
  Rogue_literal_strings[57] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real32", 6 ) ); 
  Rogue_literal_strings[58] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int64", 5 ) ); 
  Rogue_literal_strings[59] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32", 5 ) ); 
  Rogue_literal_strings[60] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character", 9 ) ); 
  Rogue_literal_strings[61] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte", 4 ) ); 
  Rogue_literal_strings[62] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Logical", 7 ) ); 
  Rogue_literal_strings[63] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object", 6 ) ); 
  Rogue_literal_strings[64] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String", 6 ) ); 
  Rogue_literal_strings[65] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringBuilder", 13 ) ); 
  Rogue_literal_strings[66] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeInfo", 8 ) ); 
  Rogue_literal_strings[67] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeArray", 11 ) ); 
  Rogue_literal_strings[68] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GenericList", 11 ) ); 
  Rogue_literal_strings[69] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global", 6 ) ); 
  Rogue_literal_strings[70] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Exception", 9 ) ); 
  Rogue_literal_strings[71] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".rogue", 6 ) ); 
  Rogue_literal_strings[72] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such file \"", 14 ) ); 
  Rogue_literal_strings[73] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/", 1 ) ); 
  Rogue_literal_strings[74] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Can not find \"", 14 ) ); 
  Rogue_literal_strings[75] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" to include.", 13 ) ); 
  Rogue_literal_strings[76] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".", 1 ) ); 
  Rogue_literal_strings[77] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Could not get absolute path", 27 ) ); 
  Rogue_literal_strings[78] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive definition for \"", 26 ) ); 
  Rogue_literal_strings[79] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected end of input.", 24 ) ); 
  Rogue_literal_strings[80] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected, found ", 27 ) ); 
  Rogue_literal_strings[81] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'", 1 ) ); 
  Rogue_literal_strings[82] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Filepath expected.", 18 ) ); 
  Rogue_literal_strings[83] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot target folder \"", 22 ) ); 
  Rogue_literal_strings[84] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" for a native include.", 23 ) ); 
  Rogue_literal_strings[85] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "header", 6 ) ); 
  Rogue_literal_strings[86] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "code", 4 ) ); 
  Rogue_literal_strings[87] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $elseIf does not match any previous $if.", 55 ) ); 
  Rogue_literal_strings[88] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $else does not match any previous $if.", 53 ) ); 
  Rogue_literal_strings[89] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $endIf does not match any previous $if.", 54 ) ); 
  Rogue_literal_strings[90] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Expected '", 10 ) ); 
  Rogue_literal_strings[91] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in directive: '", 28 ) ); 
  Rogue_literal_strings[92] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(", 1 ) ); 
  Rogue_literal_strings[93] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " 0x", 3 ) ); 
  Rogue_literal_strings[94] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::", 2 ) ); 
  Rogue_literal_strings[95] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$define", 7 ) ); 
  Rogue_literal_strings[96] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$include", 8 ) ); 
  Rogue_literal_strings[97] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$includeNativeCode", 18 ) ); 
  Rogue_literal_strings[98] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$includeNativeHeader", 20 ) ); 
  Rogue_literal_strings[99] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$if", 3 ) ); 
  Rogue_literal_strings[100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$elseIf", 7 ) ); 
  Rogue_literal_strings[101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$else", 5 ) ); 
  Rogue_literal_strings[102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$endIf", 6 ) ); 
  Rogue_literal_strings[103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$requisite", 10 ) ); 
  Rogue_literal_strings[104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "module", 6 ) ); 
  Rogue_literal_strings[105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "using", 5 ) ); 
  Rogue_literal_strings[106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$id", 3 ) ); 
  Rogue_literal_strings[107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of line", 11 ) ); 
  Rogue_literal_strings[108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of input", 12 ) ); 
  Rogue_literal_strings[109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(beginning of augment)", 22 ) ); 
  Rogue_literal_strings[110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "augment", 7 ) ); 
  Rogue_literal_strings[111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case", 4 ) ); 
  Rogue_literal_strings[112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "catch", 5 ) ); 
  Rogue_literal_strings[113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CLASS", 5 ) ); 
  Rogue_literal_strings[114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class", 5 ) ); 
  Rogue_literal_strings[115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DEFINITIONS", 11 ) ); 
  Rogue_literal_strings[116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else", 4 ) ); 
  Rogue_literal_strings[117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "elseIf", 6 ) ); 
  Rogue_literal_strings[118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endAugment", 10 ) ); 
  Rogue_literal_strings[119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endBlock", 8 ) ); 
  Rogue_literal_strings[120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endClass", 8 ) ); 
  Rogue_literal_strings[121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endContingent", 13 ) ); 
  Rogue_literal_strings[122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endForEach", 10 ) ); 
  Rogue_literal_strings[123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endFunction", 11 ) ); 
  Rogue_literal_strings[124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endIf", 5 ) ); 
  Rogue_literal_strings[125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endLoop", 7 ) ); 
  Rogue_literal_strings[126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endRoutine", 10 ) ); 
  Rogue_literal_strings[127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endTry", 6 ) ); 
  Rogue_literal_strings[128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endUnitTest", 11 ) ); 
  Rogue_literal_strings[129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhich", 8 ) ); 
  Rogue_literal_strings[130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhile", 8 ) ); 
  Rogue_literal_strings[131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ENUMERATE", 9 ) ); 
  Rogue_literal_strings[132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GLOBAL", 6 ) ); 
  Rogue_literal_strings[133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method", 6 ) ); 
  Rogue_literal_strings[134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "METHODS", 7 ) ); 
  Rogue_literal_strings[135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "others", 6 ) ); 
  Rogue_literal_strings[136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PROPERTIES", 10 ) ); 
  Rogue_literal_strings[137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine", 7 ) ); 
  Rogue_literal_strings[138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied", 9 ) ); 
  Rogue_literal_strings[139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied", 11 ) ); 
  Rogue_literal_strings[140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "with", 4 ) ); 
  Rogue_literal_strings[141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}", 1 ) ); 
  Rogue_literal_strings[142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}#", 2 ) ); 
  Rogue_literal_strings[143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>", 2 ) ); 
  Rogue_literal_strings[144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "assert", 6 ) ); 
  Rogue_literal_strings[145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "await", 5 ) ); 
  Rogue_literal_strings[146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "block", 5 ) ); 
  Rogue_literal_strings[147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contingent", 10 ) ); 
  Rogue_literal_strings[148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ensure", 6 ) ); 
  Rogue_literal_strings[149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeBlock", 11 ) ); 
  Rogue_literal_strings[150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeContingent", 16 ) ); 
  Rogue_literal_strings[151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeForEach", 13 ) ); 
  Rogue_literal_strings[152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeIf", 8 ) ); 
  Rogue_literal_strings[153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeLoop", 10 ) ); 
  Rogue_literal_strings[154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeTry", 9 ) ); 
  Rogue_literal_strings[155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhich", 11 ) ); 
  Rogue_literal_strings[156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhile", 11 ) ); 
  Rogue_literal_strings[157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "forEach", 7 ) ); 
  Rogue_literal_strings[158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function", 8 ) ); 
  Rogue_literal_strings[159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global", 6 ) ); 
  Rogue_literal_strings[160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if", 2 ) ); 
  Rogue_literal_strings[161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "in", 2 ) ); 
  Rogue_literal_strings[162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is", 2 ) ); 
  Rogue_literal_strings[163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "isNot", 5 ) ); 
  Rogue_literal_strings[164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "isReference", 11 ) ); 
  Rogue_literal_strings[165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local", 5 ) ); 
  Rogue_literal_strings[166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "loop", 4 ) ); 
  Rogue_literal_strings[167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native", 6 ) ); 
  Rogue_literal_strings[168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeCode", 10 ) ); 
  Rogue_literal_strings[169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeHeader", 12 ) ); 
  Rogue_literal_strings[170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "necessary", 9 ) ); 
  Rogue_literal_strings[171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nextIteration", 13 ) ); 
  Rogue_literal_strings[172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "noAction", 8 ) ); 
  Rogue_literal_strings[173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "of", 2 ) ); 
  Rogue_literal_strings[174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "require", 7 ) ); 
  Rogue_literal_strings[175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return", 6 ) ); 
  Rogue_literal_strings[176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "select", 6 ) ); 
  Rogue_literal_strings[177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step", 4 ) ); 
  Rogue_literal_strings[178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "sufficient", 10 ) ); 
  Rogue_literal_strings[179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "throw", 5 ) ); 
  Rogue_literal_strings[180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "trace", 5 ) ); 
  Rogue_literal_strings[181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@trace", 6 ) ); 
  Rogue_literal_strings[182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try", 3 ) ); 
  Rogue_literal_strings[183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unitTest", 8 ) ); 
  Rogue_literal_strings[184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "which", 5 ) ); 
  Rogue_literal_strings[185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while", 5 ) ); 
  Rogue_literal_strings[186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "yield", 5 ) ); 
  Rogue_literal_strings[187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "identifier", 10 ) ); 
  Rogue_literal_strings[188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type identifier", 15 ) ); 
  Rogue_literal_strings[189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "and", 3 ) ); 
  Rogue_literal_strings[190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as", 2 ) ); 
  Rogue_literal_strings[191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "downTo", 6 ) ); 
  Rogue_literal_strings[192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "false", 5 ) ); 
  Rogue_literal_strings[193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "instanceOf", 10 ) ); 
  Rogue_literal_strings[194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "infinity", 8 ) ); 
  Rogue_literal_strings[195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "meta", 4 ) ); 
  Rogue_literal_strings[196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NaN", 3 ) ); 
  Rogue_literal_strings[197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not", 3 ) ); 
  Rogue_literal_strings[198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "notInstanceOf", 13 ) ); 
  Rogue_literal_strings[199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "or", 2 ) ); 
  Rogue_literal_strings[200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pi", 2 ) ); 
  Rogue_literal_strings[201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prior", 5 ) ); 
  Rogue_literal_strings[202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this", 4 ) ); 
  Rogue_literal_strings[203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "true", 4 ) ); 
  Rogue_literal_strings[204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xor", 3 ) ); 
  Rogue_literal_strings[205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&", 1 ) ); 
  Rogue_literal_strings[206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&=", 2 ) ); 
  Rogue_literal_strings[207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&&", 2 ) ); 
  Rogue_literal_strings[208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->", 2 ) ); 
  Rogue_literal_strings[209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@", 1 ) ); 
  Rogue_literal_strings[210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@{", 2 ) ); 
  Rogue_literal_strings[211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@[", 2 ) ); 
  Rogue_literal_strings[212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\", 1 ) ); 
  Rogue_literal_strings[213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^", 1 ) ); 
  Rogue_literal_strings[214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^=", 2 ) ); 
  Rogue_literal_strings[215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":", 1 ) ); 
  Rogue_literal_strings[216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<>", 2 ) ); 
  Rogue_literal_strings[217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".=", 2 ) ); 
  Rogue_literal_strings[218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..>", 3 ) ); 
  Rogue_literal_strings[219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{}", 2 ) ); 
  Rogue_literal_strings[220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[]", 2 ) ); 
  Rogue_literal_strings[221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "==", 2 ) ); 
  Rogue_literal_strings[222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=", 1 ) ); 
  Rogue_literal_strings[223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!", 1 ) ); 
  Rogue_literal_strings[224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=>", 2 ) ); 
  Rogue_literal_strings[225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">=", 2 ) ); 
  Rogue_literal_strings[226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">", 1 ) ); 
  Rogue_literal_strings[227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<=", 2 ) ); 
  Rogue_literal_strings[228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<", 1 ) ); 
  Rogue_literal_strings[229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-", 1 ) ); 
  Rogue_literal_strings[230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-=", 2 ) ); 
  Rogue_literal_strings[231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!=", 2 ) ); 
  Rogue_literal_strings[232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{", 1 ) ); 
  Rogue_literal_strings[233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[", 1 ) ); 
  Rogue_literal_strings[234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<", 2 ) ); 
  Rogue_literal_strings[235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%", 1 ) ); 
  Rogue_literal_strings[236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%=", 2 ) ); 
  Rogue_literal_strings[237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+", 1 ) ); 
  Rogue_literal_strings[238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+=", 2 ) ); 
  Rogue_literal_strings[239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "++", 2 ) ); 
  Rogue_literal_strings[240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "?", 1 ) ); 
  Rogue_literal_strings[241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ";", 1 ) ); 
  Rogue_literal_strings[242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":<<:", 4 ) ); 
  Rogue_literal_strings[243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>:", 4 ) ); 
  Rogue_literal_strings[244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>>:", 5 ) ); 
  Rogue_literal_strings[245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/=", 2 ) ); 
  Rogue_literal_strings[246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~", 1 ) ); 
  Rogue_literal_strings[247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~=", 2 ) ); 
  Rogue_literal_strings[248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*", 1 ) ); 
  Rogue_literal_strings[249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*=", 2 ) ); 
  Rogue_literal_strings[250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..", 2 ) ); 
  Rogue_literal_strings[251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..<", 3 ) ); 
  Rogue_literal_strings[252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|", 1 ) ); 
  Rogue_literal_strings[253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|=", 2 ) ); 
  Rogue_literal_strings[254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "||", 2 ) ); 
  Rogue_literal_strings[255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected.", 20 ) ); 
  Rogue_literal_strings[256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeCode", 13 ) ); 
  Rogue_literal_strings[257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeCode' expected before EOF.", 36 ) ); 
  Rogue_literal_strings[258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeHeader", 15 ) ); 
  Rogue_literal_strings[259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeHeader' expected before EOF.", 38 ) ); 
  Rogue_literal_strings[260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected.", 19 ) ); 
  Rogue_literal_strings[261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected; found end of line.", 38 ) ); 
  Rogue_literal_strings[262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Escaped character expected; found end of input.", 47 ) ); 
  Rogue_literal_strings[263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-digit hex value expected; found end of file.", 45 ) ); 
  Rogue_literal_strings[264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid hex digit ", 18 ) ); 
  Rogue_literal_strings[265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing ']' expected.", 21 ) ); 
  Rogue_literal_strings[266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid escape sequence.  Supported: \\n \\r \\s \\t \\0 \\/ \\' \\\\ \\\" \\", 65 ) ); 
  Rogue_literal_strings[267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "uXXXX \\", 7 ) ); 
  Rogue_literal_strings[268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xXX.", 4 ) ); 
  Rogue_literal_strings[269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of file reached while looking for end of string.", 52 ) ); 
  Rogue_literal_strings[270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of input reached while looking for end of string.", 53 ) ); 
  Rogue_literal_strings[271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Digit out of range for base ", 28 ) ); 
  Rogue_literal_strings[272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more digits expected.", 28 ) ); 
  Rogue_literal_strings[273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of File reached while looking for end of verbatim string.", 61 ) ); 
  Rogue_literal_strings[274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "define", 6 ) ); 
  Rogue_literal_strings[275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "include", 7 ) ); 
  Rogue_literal_strings[276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeCode", 17 ) ); 
  Rogue_literal_strings[277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeHeader", 19 ) ); 
  Rogue_literal_strings[278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "requisite", 9 ) ); 
  Rogue_literal_strings[279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$", 1 ) ); 
  Rogue_literal_strings[280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of line expected after '...'.", 33 ) ); 
  Rogue_literal_strings[281] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<:", 3 ) ); 
  Rogue_literal_strings[282] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>:", 3 ) ); 
  Rogue_literal_strings[283] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>>:", 4 ) ); 
  Rogue_literal_strings[284] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected input '", 18 ) ); 
  Rogue_literal_strings[285] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL", 3 ) ); 
  Rogue_literal_strings[286] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(Unicode ", 9 ) ); 
  Rogue_literal_strings[287] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected input ", 31 ) ); 
  Rogue_literal_strings[288] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Standard", 8 ) ); 
  Rogue_literal_strings[289] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "on_launch", 9 ) ); 
  Rogue_literal_strings[290] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "run_tests", 9 ) ); 
  Rogue_literal_strings[291] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "insert", 6 ) ); 
  Rogue_literal_strings[292] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<insert>> at the beginning of the method.  No duplicates are allowed.", 110 ) ); 
  Rogue_literal_strings[293] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "append", 6 ) ); 
  Rogue_literal_strings[294] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<append>> at the end of the method.  No duplicates are allowed.", 104 ) ); 
  Rogue_literal_strings[295] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found ", 17 ) ); 
  Rogue_literal_strings[296] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unable to determine type for metadata access.", 45 ) ); 
  Rogue_literal_strings[297] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default_value", 13 ) ); 
  Rogue_literal_strings[298] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'default_value' expected after 'meta.'.", 39 ) ); 
  Rogue_literal_strings[299] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing '>>' expected before end of line.", 41 ) ); 
  Rogue_literal_strings[300] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function", 8 ) ); 
  Rogue_literal_strings[301] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call", 4 ) ); 
  Rogue_literal_strings[302] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "param", 5 ) ); 
  Rogue_literal_strings[303] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List conversion function expected.", 34 ) ); 
  Rogue_literal_strings[304] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected, found empty parentheses ().", 43 ) ); 
  Rogue_literal_strings[305] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[][]", 4 ) ); 
  Rogue_literal_strings[306] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal list content contains more dimensions than literal list type.", 69 ) ); 
  Rogue_literal_strings[307] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyTable", 13 ) ); 
  Rogue_literal_strings[308] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyList", 12 ) ); 
  Rogue_literal_strings[309] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "add", 3 ) ); 
  Rogue_literal_strings[310] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set", 3 ) ); 
  Rogue_literal_strings[311] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_auto_", 6 ) ); 
  Rogue_literal_strings[312] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function parameters must all be typed or all be generic.", 56 ) ); 
  Rogue_literal_strings[313] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with generic parameters must use '=>' to define its body.", 68 ) ); 
  Rogue_literal_strings[314] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with typed parameters must use '->' to define its return type (if desired) and cannot use the generic function definition symbol '='.", 144 ) ); 
  Rogue_literal_strings[315] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Single identifier expected for control variable name.", 53 ) ); 
  Rogue_literal_strings[316] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at", 2 ) ); 
  Rogue_literal_strings[317] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing element name before 'at'.", 33 ) ); 
  Rogue_literal_strings[318] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with a range.", 29 ) ); 
  Rogue_literal_strings[319] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with forEach-of.", 32 ) ); 
  Rogue_literal_strings[320] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Use forEach-in with a literal range instead of forEach-of.", 58 ) ); 
  Rogue_literal_strings[321] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in forEach - keyword 'in' or 'of' expected.", 56 ) ); 
  Rogue_literal_strings[322] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid syntax in forEach.", 26 ) ); 
  Rogue_literal_strings[323] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_for_each() Parser.rogue:1832]", 43 ) ); 
  Rogue_literal_strings[324] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL ERROR]", 16 ) ); 
  Rogue_literal_strings[325] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Omit the 'return' in a macro method with a return type.", 55 ) ); 
  Rogue_literal_strings[326] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() ", 3 ) ); 
  Rogue_literal_strings[327] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  ", 2 ) ); 
  Rogue_literal_strings[328] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":$", 2 ) ); 
  Rogue_literal_strings[329] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A comma-separated list of values is expected.", 45 ) ); 
  Rogue_literal_strings[330] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment section labels should be defined in the outer scope of the method and cannot be nested inside a control structure.", 122 ) ); 
  Rogue_literal_strings[331] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal string expected.", 24 ) ); 
  Rogue_literal_strings[332] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} must be a single expression.", 56 ) ); 
  Rogue_literal_strings[333] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} cannot have a condition.", 52 ) ); 
  Rogue_literal_strings[334] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in ", 4 ) ); 
  Rogue_literal_strings[335] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()", 2 ) ); 
  Rogue_literal_strings[336] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected '", 26 ) ); 
  Rogue_literal_strings[337] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "abstract", 8 ) ); 
  Rogue_literal_strings[338] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect", 6 ) ); 
  Rogue_literal_strings[339] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class cannot be both '", 24 ) ); 
  Rogue_literal_strings[340] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' and '", 7 ) ); 
  Rogue_literal_strings[341] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "primitive", 9 ) ); 
  Rogue_literal_strings[342] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compound", 8 ) ); 
  Rogue_literal_strings[343] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "fallback", 8 ) ); 
  Rogue_literal_strings[344] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "foreign", 7 ) ); 
  Rogue_literal_strings[345] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "immutable", 9 ) ); 
  Rogue_literal_strings[346] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "macro", 5 ) ); 
  Rogue_literal_strings[347] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "propagated", 10 ) ); 
  Rogue_literal_strings[348] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "singleton", 9 ) ); 
  Rogue_literal_strings[349] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "special", 7 ) ); 
  Rogue_literal_strings[350] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task", 4 ) ); 
  Rogue_literal_strings[351] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid attribute: ", 19 ) ); 
  Rogue_literal_strings[352] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine named ", 16 ) ); 
  Rogue_literal_strings[353] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already exists.", 16 ) ); 
  Rogue_literal_strings[354] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class named ", 14 ) ); 
  Rogue_literal_strings[355] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found end of file.", 29 ) ); 
  Rogue_literal_strings[356] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal placeholder type in augment.  Write '", 45 ) ); 
  Rogue_literal_strings[357] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' without the specializers (<<...>>) to apply the augment to all template instances or write specific types such as ", 116 ) ); 
  Rogue_literal_strings[358] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<String>> to restrict the augment to that type.", 48 ) ); 
  Rogue_literal_strings[359] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected ", 25 ) ); 
  Rogue_literal_strings[360] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Command Line Arguments]", 24 ) ); 
  Rogue_literal_strings[361] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot infer the type of the global property from its initial value.  Assign a type by appending ': TypeName' to the end of the declaration.", 140 ) ); 
  Rogue_literal_strings[362] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the global property - either assign an initial value (global ", 90 ) ); 
  Rogue_literal_strings[363] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (global ", 33 ) ); 
  Rogue_literal_strings[364] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : Int32).", 10 ) ); 
  Rogue_literal_strings[365] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Optional", 8 ) ); 
  Rogue_literal_strings[366] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List", 4 ) ); 
  Rogue_literal_strings[367] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No ", 3 ) ); 
  Rogue_literal_strings[368] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " template accepting ", 20 ) ); 
  Rogue_literal_strings[369] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# parameter", 11 ) ); 
  Rogue_literal_strings[370] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#", 1 ) ); 
  Rogue_literal_strings[371] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "es", 2 ) ); 
  Rogue_literal_strings[372] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "s", 1 ) ); 
  Rogue_literal_strings[373] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is defined.", 12 ) ); 
  Rogue_literal_strings[374] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$DataType", 9 ) ); 
  Rogue_literal_strings[375] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "In ", 3 ) ); 
  Rogue_literal_strings[376] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " the overridden return type (", 29 ) ); 
  Rogue_literal_strings[377] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") is not compatible with the prior definition return type (", 59 ) ); 
  Rogue_literal_strings[378] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ").", 2 ) ); 
  Rogue_literal_strings[379] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No corresponding label <<", 25 ) ); 
  Rogue_literal_strings[380] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">> in augmented code.", 21 ) ); 
  Rogue_literal_strings[381] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type ", 5 ) ); 
  Rogue_literal_strings[382] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines method ", 24 ) ); 
  Rogue_literal_strings[383] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] ", 11 ) ); 
  Rogue_literal_strings[384] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd", 3 ) ); 
  Rogue_literal_strings[385] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".clone() is not implemented.", 28 ) ); 
  Rogue_literal_strings[386] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Visitor", 7 ) ); 
  Rogue_literal_strings[387] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not overload method visit(", 32 ) ); 
  Rogue_literal_strings[388] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init", 4 ) ); 
  Rogue_literal_strings[389] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init() methods cannot be global methods.  Rename your method create_class() if you need to perform one-time setup.", 114 ) ); 
  Rogue_literal_strings[390] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds cannot have initializers.  Use global create(...) methods instead.", 76 ) ); 
  Rogue_literal_strings[391] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global methods and routines cannot be tasks.", 44 ) ); 
  Rogue_literal_strings[392] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskWithResult<<", 16 ) ); 
  Rogue_literal_strings[393] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task", 4 ) ); 
  Rogue_literal_strings[394] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A property named \"", 18 ) ); 
  Rogue_literal_strings[395] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" already exists.", 17 ) ); 
  Rogue_literal_strings[396] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No type declared for parameter \"", 32 ) ); 
  Rogue_literal_strings[397] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine with the signature ", 29 ) ); 
  Rogue_literal_strings[398] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is already defined.", 20 ) ); 
  Rogue_literal_strings[399] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A global method with the signature ", 35 ) ); 
  Rogue_literal_strings[400] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A method with the signature ", 28 ) ); 
  Rogue_literal_strings[401] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create", 6 ) ); 
  Rogue_literal_strings[402] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CompoundIntrospection", 21 ) ); 
  Rogue_literal_strings[403] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition expected.", 20 ) ); 
  Rogue_literal_strings[404] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property", 8 ) ); 
  Rogue_literal_strings[405] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global property", 15 ) ); 
  Rogue_literal_strings[406] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine ", 17 ) ); 
  Rogue_literal_strings[407] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type from initial value; append an explicit type declaration such as \": Object\" ", 81 ) ); 
  Rogue_literal_strings[408] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "An initial value or ", 20 ) ); 
  Rogue_literal_strings[409] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type (for example, \": Object\") must be specified.", 50 ) ); 
  Rogue_literal_strings[410] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator", 8 ) ); 
  Rogue_literal_strings[411] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to", 2 ) ); 
  Rogue_literal_strings[412] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_", 3 ) ); 
  Rogue_literal_strings[413] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method template ", 16 ) ); 
  Rogue_literal_strings[414] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<{", 3 ) ); 
  Rogue_literal_strings[415] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}>>({", 5 ) ); 
  Rogue_literal_strings[416] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}) is already defined.", 22 ) ); 
  Rogue_literal_strings[417] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "string", 6 ) ); 
  Rogue_literal_strings[418] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count", 5 ) ); 
  Rogue_literal_strings[419] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Native expression types cannot be specified in macro methods - remove the \"->", 77 ) ); 
  Rogue_literal_strings[420] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to ", 13 ) ); 
  Rogue_literal_strings[421] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is missing required type parameters (", 38 ) ); 
  Rogue_literal_strings[422] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<...>>).", 9 ) ); 
  Rogue_literal_strings[423] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Too many type specializers given.", 33 ) ); 
  Rogue_literal_strings[424] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Insufficient number of type parameters in ", 42 ) ); 
  Rogue_literal_strings[425] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "; ", 2 ) ); 
  Rogue_literal_strings[426] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " given, ", 8 ) ); 
  Rogue_literal_strings[427] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected.", 10 ) ); 
  Rogue_literal_strings[428] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type parameters given for non-template type.", 44 ) ); 
  Rogue_literal_strings[429] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to undefined type '", 29 ) ); 
  Rogue_literal_strings[430] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Aspects can only extend other aspects.", 38 ) ); 
  Rogue_literal_strings[431] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds can only extend aspects.", 34 ) ); 
  Rogue_literal_strings[432] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cyclic inheritance attempted - ", 31 ) ); 
  Rogue_literal_strings[433] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot extend ", 15 ) ); 
  Rogue_literal_strings[434] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " because ", 9 ) ); 
  Rogue_literal_strings[435] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already extends ", 17 ) ); 
  Rogue_literal_strings[436] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Class ", 6 ) ); 
  Rogue_literal_strings[437] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " can only have one base class (", 31 ) ); 
  Rogue_literal_strings[438] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " and ", 5 ) ); 
  Rogue_literal_strings[439] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are both specified as base classes).", 37 ) ); 
  Rogue_literal_strings[440] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting initial values are given for property \"", 51 ) ); 
  Rogue_literal_strings[441] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" in unrelated types ", 21 ) ); 
  Rogue_literal_strings[442] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting types given for property \"", 38 ) ); 
  Rogue_literal_strings[443] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" - ", 4 ) ); 
  Rogue_literal_strings[444] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_name", 9 ) ); 
  Rogue_literal_strings[445] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_info", 9 ) ); 
  Rogue_literal_strings[446] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Runtime", 7 ) ); 
  Rogue_literal_strings[447] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines global method ", 31 ) ); 
  Rogue_literal_strings[448] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class()", 12 ) ); 
  Rogue_literal_strings[449] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::init_class() must be declared under GLOBAL METHODS.", 53 ) ); 
  Rogue_literal_strings[450] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class", 10 ) ); 
  Rogue_literal_strings[451] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object()", 13 ) ); 
  Rogue_literal_strings[452] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object", 11 ) ); 
  Rogue_literal_strings[453] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up()", 10 ) ); 
  Rogue_literal_strings[454] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up() cannot return a value.", 33 ) ); 
  Rogue_literal_strings[455] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String()", 11 ) ); 
  Rogue_literal_strings[456] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String", 9 ) ); 
  Rogue_literal_strings[457] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set_", 4 ) ); 
  Rogue_literal_strings[458] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class that is instanceOf NativeArray must also be instanceOf Array<<DataType>>.", 81 ) ); 
  Rogue_literal_strings[459] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<", 7 ) ); 
  Rogue_literal_strings[460] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__", 2 ) ); 
  Rogue_literal_strings[461] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task", 6 ) ); 
  Rogue_literal_strings[462] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "context", 7 ) ); 
  Rogue_literal_strings[463] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_", 1 ) ); 
  Rogue_literal_strings[464] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "update", 6 ) ); 
  Rogue_literal_strings[465] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "execute", 7 ) ); 
  Rogue_literal_strings[466] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ip", 2 ) ); 
  Rogue_literal_strings[467] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task_resolver", 15 ) ); 
  Rogue_literal_strings[468] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result", 6 ) ); 
  Rogue_literal_strings[469] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A local variable named \"", 24 ) ); 
  Rogue_literal_strings[470] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".resolve() is not defined.", 26 ) ); 
  Rogue_literal_strings[471] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "locals left on scope stack", 26 ) ); 
  Rogue_literal_strings[472] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control stucture left on scope stack", 36 ) ); 
  Rogue_literal_strings[473] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not declared as returning a value.", 38 ) ); 
  Rogue_literal_strings[474] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined.", 23 ) ); 
  Rogue_literal_strings[475] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; this statement or expression does not result in a value.", 72 ) ); 
  Rogue_literal_strings[476] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init(", 5 ) ); 
  Rogue_literal_strings[477] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create(", 7 ) ); 
  Rogue_literal_strings[478] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "exists", 6 ) ); 
  Rogue_literal_strings[479] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_", 9 ) ); 
  Rogue_literal_strings[480] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to class selector ", 36 ) ); 
  Rogue_literal_strings[481] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array count expected.", 21 ) ); 
  Rogue_literal_strings[482] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32 value expected.", 21 ) ); 
  Rogue_literal_strings[483] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such variable \"", 18 ) ); 
  Rogue_literal_strings[484] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" or method \"", 13 ) ); 
  Rogue_literal_strings[485] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in current scope of type ", 34 ) ); 
  Rogue_literal_strings[486] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method or variable \"", 28 ) ); 
  Rogue_literal_strings[487] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No exact match for ambiguous call to ", 37 ) ); 
  Rogue_literal_strings[488] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".  Candidates:\n\n", 16 ) ); 
  Rogue_literal_strings[489] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Call to ", 8 ) ); 
  Rogue_literal_strings[490] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " has arguments that are incompatible with the best candidate:\n\n", 63 ) ); 
  Rogue_literal_strings[491] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid negation of a named parameter with a supplied value.", 60 ) ); 
  Rogue_literal_strings[492] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(", 9 ) ); 
  Rogue_literal_strings[493] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument does not match any compatible Function parameters in available methods.", 97 ) ); 
  Rogue_literal_strings[494] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument ambiguously matches Function parameters in multiple available methods.", 96 ) ); 
  Rogue_literal_strings[495] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_Object", 9 ) ); 
  Rogue_literal_strings[496] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Called method does not have a parameter named '", 47 ) ); 
  Rogue_literal_strings[497] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected, e.g. \"", 26 ) ); 
  Rogue_literal_strings[498] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".\".", 3 ) ); 
  Rogue_literal_strings[499] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected.", 19 ) ); 
  Rogue_literal_strings[500] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing return value in macro method.", 37 ) ); 
  Rogue_literal_strings[501] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Only single line macros are supported.", 38 ) ); 
  Rogue_literal_strings[502] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to array count.", 33 ) ); 
  Rogue_literal_strings[503] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to getter ", 25 ) ); 
  Rogue_literal_strings[504] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write @", 12 ) ); 
  Rogue_literal_strings[505] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " instead.", 9 ) ); 
  Rogue_literal_strings[506] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot access object property '", 31 ) ); 
  Rogue_literal_strings[507] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' from a global method.", 23 ) ); 
  Rogue_literal_strings[508] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot read properties using aspect references.  Add a getter to the aspect definition - ", 89 ) ); 
  Rogue_literal_strings[509] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method ", 8 ) ); 
  Rogue_literal_strings[510] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ": return @", 10 ) ); 
  Rogue_literal_strings[511] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot be cast to required type ", 33 ) ); 
  Rogue_literal_strings[512] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid reference to 'this' object - global methods have no object context.", 75 ) ); 
  Rogue_literal_strings[513] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init()", 6 ) ); 
  Rogue_literal_strings[514] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this:", 5 ) ); 
  Rogue_literal_strings[515] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " index:", 7 ) ); 
  Rogue_literal_strings[516] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " overridden_method:", 19 ) ); 
  Rogue_literal_strings[517] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " overridden_method.index:", 25 ) ); 
  Rogue_literal_strings[518] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index == overridden_method.index  in Method.validate()", 54 ) ); 
  Rogue_literal_strings[519] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed:  ", 21 ) ); 
  Rogue_literal_strings[520] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed.", 19 ) ); 
  Rogue_literal_strings[521] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueProgram", 12 ) ); 
  Rogue_literal_strings[522] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp", 4 ) ); 
  Rogue_literal_strings[523] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type", 4 ) ); 
  Rogue_literal_strings[524] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RETURNS", 7 ) ); 
  Rogue_literal_strings[525] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_List", 5 ) ); 
  Rogue_literal_strings[526] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NOT", 3 ) ); 
  Rogue_literal_strings[527] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MOD", 3 ) ); 
  Rogue_literal_strings[528] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AND", 3 ) ); 
  Rogue_literal_strings[529] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TIMES", 5 ) ); 
  Rogue_literal_strings[530] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PLUS", 4 ) ); 
  Rogue_literal_strings[531] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MINUS", 5 ) ); 
  Rogue_literal_strings[532] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SLASH", 5 ) ); 
  Rogue_literal_strings[533] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LE", 2 ) ); 
  Rogue_literal_strings[534] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LT", 2 ) ); 
  Rogue_literal_strings[535] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EQUALS", 6 ) ); 
  Rogue_literal_strings[536] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GE", 2 ) ); 
  Rogue_literal_strings[537] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GT", 2 ) ); 
  Rogue_literal_strings[538] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "POWER", 5 ) ); 
  Rogue_literal_strings[539] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "OR", 2 ) ); 
  Rogue_literal_strings[540] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "XOR", 3 ) ); 
  Rogue_literal_strings[541] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray", 10 ) ); 
  Rogue_literal_strings[542] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array", 5 ) ); 
  Rogue_literal_strings[543] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueClass", 10 ) ); 
  Rogue_literal_strings[544] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType", 9 ) ); 
  Rogue_literal_strings[545] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writing ", 8 ) ); 
  Rogue_literal_strings[546] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h...", 5 ) ); 
  Rogue_literal_strings[547] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h", 2 ) ); 
  Rogue_literal_strings[548] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//-----------------------------------------------------------------------------", 79 ) ); 
  Rogue_literal_strings[549] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//  Generated by the Rogue compiler", 35 ) ); 
  Rogue_literal_strings[550] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#pragma once", 12 ) ); 
  Rogue_literal_strings[551] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_MANUAL ", 29 ) ); 
  Rogue_literal_strings[552] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1", 1 ) ); 
  Rogue_literal_strings[553] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0", 1 ) ); 
  Rogue_literal_strings[554] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_AUTO ", 27 ) ); 
  Rogue_literal_strings[555] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_BOEHM ", 28 ) ); 
  Rogue_literal_strings[556] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#ifndef ROGUE_GC_THRESHOLD_DEFAULT", 34 ) ); 
  Rogue_literal_strings[557] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  #define ROGUE_GC_THRESHOLD_DEFAULT ", 37 ) ); 
  Rogue_literal_strings[558] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#endif", 6 ) ); 
  Rogue_literal_strings[559] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// NATIVE HEADERS", 17 ) ); 
  Rogue_literal_strings[560] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <cmath>", 16 ) ); 
  Rogue_literal_strings[561] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// FORWARD DECLARATIONS", 23 ) ); 
  Rogue_literal_strings[562] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "struct ", 7 ) ); 
  Rogue_literal_strings[563] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// COMPOUND DEFINITIONS", 23 ) ); 
  Rogue_literal_strings[564] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : ", 3 ) ); 
  Rogue_literal_strings[565] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void", 4 ) ); 
  Rogue_literal_strings[566] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : RogueObject", 14 ) ); 
  Rogue_literal_strings[567] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// PROPERTIES", 13 ) ); 
  Rogue_literal_strings[568] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_COMPOUND_REF_PROP(", 28 ) ); 
  Rogue_literal_strings[569] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ");", 2 ) ); 
  Rogue_literal_strings[570] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "release", 7 ) ); 
  Rogue_literal_strings[571] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_release(", 20 ) ); 
  Rogue_literal_strings[572] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))", 2 ) ); 
  Rogue_literal_strings[573] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "retain", 6 ) ); 
  Rogue_literal_strings[574] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_retain(", 19 ) ); 
  Rogue_literal_strings[575] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unrecognized native code insertion marker: ", 43 ) ); 
  Rogue_literal_strings[576] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS", 4 ) ); 
  Rogue_literal_strings[577] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_specialization_type() Parser.rogue:2246]", 54 ) ); 
  Rogue_literal_strings[578] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Invalid specializer index: ", 38 ) ); 
  Rogue_literal_strings[579] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS->", 6 ) ); 
  Rogue_literal_strings[580] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ", 1 ) ); 
  Rogue_literal_strings[581] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() : ", 5 ) ); 
  Rogue_literal_strings[582] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", ", 2 ) ); 
  Rogue_literal_strings[583] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " {}", 3 ) ); 
  Rogue_literal_strings[584] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( ", 2 ) ); 
  Rogue_literal_strings[585] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " value, bool exists=true ) : value(value), exists(exists) {}", 60 ) ); 
  Rogue_literal_strings[586] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) : ", 5 ) ); 
  Rogue_literal_strings[587] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator==( const ", 23 ) ); 
  Rogue_literal_strings[588] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " &other ) const", 15 ) ); 
  Rogue_literal_strings[589] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (exists)\n{\n  if (other.exists) return value == other.value;\n  else              return false;\n}\nelse\n{\n  if (other.exists) return false;\n  else              return true;\n}", 174 ) ); 
  Rogue_literal_strings[590] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  if (", 6 ) ); 
  Rogue_literal_strings[591] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " != other.", 10 ) ); 
  Rogue_literal_strings[592] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") return false;", 15 ) ); 
  Rogue_literal_strings[593] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return true;", 14 ) ); 
  Rogue_literal_strings[594] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator!=( const ", 23 ) ); 
  Rogue_literal_strings[595] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{\n  return !(*this == other);\n}\n", 32 ) ); 
  Rogue_literal_strings[596] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "};", 2 ) ); 
  Rogue_literal_strings[597] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// GLOBAL PROPERTIES", 20 ) ); 
  Rogue_literal_strings[598] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern ", 7 ) ); 
  Rogue_literal_strings[599] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " Rogue", 6 ) ); 
  Rogue_literal_strings[600] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// CLASS DEFINITIONS", 20 ) ); 
  Rogue_literal_strings[601] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROGUE TYPES", 14 ) ); 
  Rogue_literal_strings[602] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern RogueType* RogueType", 27 ) ); 
  Rogue_literal_strings[603] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROUTINE PROTOTYPES", 21 ) ); 
  Rogue_literal_strings[604] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " THIS", 5 ) ); 
  Rogue_literal_strings[605] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// METHOD PROTOTYPES", 20 ) ); 
  Rogue_literal_strings[606] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// INTERNAL PROTOTYPES", 22 ) ); 
  Rogue_literal_strings[607] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace();", 19 ) ); 
  Rogue_literal_strings[608] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp...", 7 ) ); 
  Rogue_literal_strings[609] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <stdio.h>", 18 ) ); 
  Rogue_literal_strings[610] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include \"", 10 ) ); 
  Rogue_literal_strings[611] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h\"", 3 ) ); 
  Rogue_literal_strings[612] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)(", 4 ) ); 
  Rogue_literal_strings[613] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUEM", 6 ) ); 
  Rogue_literal_strings[614] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "typedef ", 8 ) ); 
  Rogue_literal_strings[615] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)", 3 ) ); 
  Rogue_literal_strings[616] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*", 2 ) ); 
  Rogue_literal_strings[617] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " call_", 6 ) ); 
  Rogue_literal_strings[618] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( int i, ", 9 ) ); 
  Rogue_literal_strings[619] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " p", 2 ) ); 
  Rogue_literal_strings[620] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " )", 2 ) ); 
  Rogue_literal_strings[621] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return ", 7 ) ); 
  Rogue_literal_strings[622] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((", 2 ) ); 
  Rogue_literal_strings[623] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(THIS->type->methods[i]))( THIS", 32 ) ); 
  Rogue_literal_strings[624] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", p", 3 ) ); 
  Rogue_literal_strings[625] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " );", 3 ) ); 
  Rogue_literal_strings[626] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ", 3 ) ); 
  Rogue_literal_strings[627] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue", 10 ) ); 
  Rogue_literal_strings[628] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj );", 20 ) ); 
  Rogue_literal_strings[629] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj )", 19 ) ); 
  Rogue_literal_strings[630] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* link;", 11 ) ); 
  Rogue_literal_strings[631] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=((", 12 ) ); 
  Rogue_literal_strings[632] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)obj)->", 8 ) ); 
  Rogue_literal_strings[633] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) ((RogueObject*)link)->type->trace_fn( link );", 48 ) ); 
  Rogue_literal_strings[634] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( &", 9 ) ); 
  Rogue_literal_strings[635] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=", 10 ) ); 
  Rogue_literal_strings[636] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) Rogue", 8 ) ); 
  Rogue_literal_strings[637] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( link );", 15 ) ); 
  Rogue_literal_strings[638] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray* array = (RogueArray*) obj;\nint count;", 49 ) ); 
  Rogue_literal_strings[639] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "* cur;", 6 ) ); 
  Rogue_literal_strings[640] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nif ( !array || array->object_size < 0 ) return;\narray->object_size = ~array->object_size;\n\ncount = array->count;", 113 ) ); 
  Rogue_literal_strings[641] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur = ((", 8 ) ); 
  Rogue_literal_strings[642] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(array->bytes)) - 1;", 22 ) ); 
  Rogue_literal_strings[643] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (--count >= 0)", 20 ) ); 
  Rogue_literal_strings[644] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  Rogue", 7 ) ); 
  Rogue_literal_strings[645] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( ++cur );", 16 ) ); 
  Rogue_literal_strings[646] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;\n((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;\n", 130 ) ); 
  Rogue_literal_strings[647] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_name_index_table[] =", 35 ) ); 
  Rogue_literal_strings[648] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_object_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[649] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueInitFn) ", 14 ) ); 
  Rogue_literal_strings[650] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_fn_table[] =", 35 ) ); 
  Rogue_literal_strings[651] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueCleanUpFn Rogue_clean_up_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[652] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCleanUpFn) ", 17 ) ); 
  Rogue_literal_strings[653] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueToStringFn Rogue_to_string_fn_table[] =", 44 ) ); 
  Rogue_literal_strings[654] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueToStringFn) ", 18 ) ); 
  Rogue_literal_strings[655] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueTraceFn Rogue_trace_fn_table[] =", 37 ) ); 
  Rogue_literal_strings[656] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray_trace", 16 ) ); 
  Rogue_literal_strings[657] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace", 6 ) ); 
  Rogue_literal_strings[658] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_trace", 17 ) ); 
  Rogue_literal_strings[659] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace()", 18 ) ); 
  Rogue_literal_strings[660] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int i;", 6 ) ); 
  Rogue_literal_strings[661] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace GLOBAL PROPERTIES", 26 ) ); 
  Rogue_literal_strings[662] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=Rogue", 15 ) ); 
  Rogue_literal_strings[663] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace Class objects and singletons\nfor (i=Rogue_type_count; --i>=0; )\n{\n  RogueType* type = &Rogue_types[i];\n  if (type->type_info) RogueTypeInfo_trace( type->type_info );\n  if (type->_singleton) type->trace_fn( type->_singleton );\n}", 236 ) ); 
  Rogue_literal_strings[664] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* Rogue_dynamic_method_table[] =", 36 ) ); 
  Rogue_literal_strings[665] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(void*) (", 9 ) ); 
  Rogue_literal_strings[666] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ", 2 ) ); 
  Rogue_literal_strings[667] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0,", 2 ) ); 
  Rogue_literal_strings[668] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " // ", 4 ) ); 
  Rogue_literal_strings[669] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_info_table[", 26 ) ); 
  Rogue_literal_strings[670] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] =", 3 ) ); 
  Rogue_literal_strings[671] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...", 105 ) ); 
  Rogue_literal_strings[672] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\"", 2 ) ); 
  Rogue_literal_strings[673] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"", 1 ) ); 
  Rogue_literal_strings[674] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\'", 2 ) ); 
  Rogue_literal_strings[675] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\\", 2 ) ); 
  Rogue_literal_strings[676] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\n", 2 ) ); 
  Rogue_literal_strings[677] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"\"", 2 ) ); 
  Rogue_literal_strings[678] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\x", 2 ) ); 
  Rogue_literal_strings[679] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* Rogue_global_property_pointers[] =", 40 ) ); 
  Rogue_literal_strings[680] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(void*) &Rogue", 14 ) ); 
  Rogue_literal_strings[681] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_property_offsets[] =", 30 ) ); 
  Rogue_literal_strings[682] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(int)(intptr_t)&((", 18 ) ); 
  Rogue_literal_strings[683] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)0)->", 6 ) ); 
  Rogue_literal_strings[684] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_object_size_table[", 28 ) ); 
  Rogue_literal_strings[685] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(int) sizeof(", 13 ) ); 
  Rogue_literal_strings[686] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_attributes_table[", 27 ) ); 
  Rogue_literal_strings[687] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_allocator_count = ", 28 ) ); 
  Rogue_literal_strings[688] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueAllocator Rogue_allocators[", 32 ) ); 
  Rogue_literal_strings[689] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "];", 2 ) ); 
  Rogue_literal_strings[690] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_count = ", 23 ) ); 
  Rogue_literal_strings[691] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType Rogue_types[", 22 ) ); 
  Rogue_literal_strings[692] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType* RogueType", 20 ) ); 
  Rogue_literal_strings[693] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_literal_string_count = ", 33 ) ); 
  Rogue_literal_strings[694] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueString* Rogue_literal_strings[", 35 ) ); 
  Rogue_literal_strings[695] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (THIS->type->index)", 26 ) ); 
  Rogue_literal_strings[696] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case ", 5 ) ); 
  Rogue_literal_strings[697] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return ", 9 ) ); 
  Rogue_literal_strings[698] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( (", 3 ) ); 
  Rogue_literal_strings[699] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")THIS", 5 ) ); 
  Rogue_literal_strings[700] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default:", 8 ) ); 
  Rogue_literal_strings[701] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueDebugTrace __trace( \"", 26 ) ); 
  Rogue_literal_strings[702] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", \"", 4 ) ); 
  Rogue_literal_strings[703] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(unknown)", 9 ) ); 
  Rogue_literal_strings[704] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", ", 3 ) ); 
  Rogue_literal_strings[705] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__trace.filename = \"", 20 ) ); 
  Rogue_literal_strings[706] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\";", 2 ) ); 
  Rogue_literal_strings[707] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__trace.line = ", 15 ) ); 
  Rogue_literal_strings[708] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined.", 29 ) ); 
  Rogue_literal_strings[709] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_configure( int argc, const char* argv[] )", 52 ) ); 
  Rogue_literal_strings[710] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (Rogue_configured) return;\nRogue_configured = 1;\n\nRogue_argc = argc;\nRogue_argv = argv;\n\nRogue_configure_gc();\nRogue_configure_types();\nstd::set_terminate( Rogue_terminate_handler );\n", 186 ) ); 
  Rogue_literal_strings[711] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = &Rogue_types[ ", 17 ) ); 
  Rogue_literal_strings[712] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ];", 3 ) ); 
  Rogue_literal_strings[713] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_literal_strings[", 22 ) ); 
  Rogue_literal_strings[714] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", 69 ) ); 
  Rogue_literal_strings[715] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) ); ", 6 ) ); 
  Rogue_literal_strings[716] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_launch()", 19 ) ); 
  Rogue_literal_strings[717] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "();", 3 ) ); 
  Rogue_literal_strings[718] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueSystem_executable_filepath = RogueString_create_from_utf8(\n    Rogue_argc ? Rogue_argv[0] : \"Rogue\", -1 );\n\nfor (int i=1; i<Rogue_argc; ++i)\n{\n  RogueString_List__add__String( RogueSystem_command_line_arguments,\n      RogueString_create_from_utf8( Rogue_argv[i], -1 ) );\n}", 277 ) ); 
  Rogue_literal_strings[719] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Instantiate requisite singletons", 35 ) ); 
  Rogue_literal_strings[720] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_SINGLETON( ", 17 ) ); 
  Rogue_literal_strings[721] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );\nRogue_collect_garbage();", 110 ) ); 
  Rogue_literal_strings[722] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool Rogue_update_tasks()\n{\n  // Returns true if any tasks are still active", 75 ) ); 
  Rogue_literal_strings[723] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskManager", 11 ) ); 
  Rogue_literal_strings[724] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  RogueClassTaskManager* task_manager = (RogueClassTaskManager*) ROGUE_SINGLETON(TaskManager);\n  bool result = RogueTaskManager__update( task_manager );\n  Rogue_collect_garbage();\n  return result;", 196 ) ); 
  Rogue_literal_strings[725] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  Rogue_collect_garbage();\n  return false;", 42 ) ); 
  Rogue_literal_strings[726] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}\n", 2 ) ); 
  Rogue_literal_strings[727] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int main( int argc, const char* argv[] )\n{\n  Rogue_configure( argc, argv );\n  Rogue_launch();\n\n  while (Rogue_update_tasks()) {}\n\n  Rogue_quit();\n\n  return 0;\n}", 160 ) ); 
  Rogue_literal_strings[728] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SUCCESS (", 9 ) ); 
  Rogue_literal_strings[729] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clang++ -std=c++11 -fno-strict-aliasing ", 40 ) ); 
  Rogue_literal_strings[730] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp -o ", 8 ) ); 
  Rogue_literal_strings[731] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " && ./", 6 ) ); 
  Rogue_literal_strings[732] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Process was not created", 23 ) ); 
  Rogue_literal_strings[733] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compile target \"", 16 ) ); 
  Rogue_literal_strings[734] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" is not supported.", 19 ) ); 
  Rogue_literal_strings[735] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_GC_THRESHOLD", 18 ) ); 
  Rogue_literal_strings[736] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MB", 2 ) ); 
  Rogue_literal_strings[737] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "KB", 2 ) ); 
  Rogue_literal_strings[738] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String>>", 27 ) ); 
  Rogue_literal_strings[739] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeInfo>>", 29 ) ); 
  Rogue_literal_strings[740] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Logical>>", 28 ) ); 
  Rogue_literal_strings[741] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TokenType>>", 30 ) ); 
  Rogue_literal_strings[742] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Int32,Template>>", 28 ) ); 
  Rogue_literal_strings[743] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Definition>>", 31 ) ); 
  Rogue_literal_strings[744] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Property>>", 29 ) ); 
  Rogue_literal_strings[745] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CmdLabel>>", 29 ) ); 
  Rogue_literal_strings[746] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "})", 2 ) ); 
  Rogue_literal_strings[747] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method[]>>", 29 ) ); 
  Rogue_literal_strings[748] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method>>", 27 ) ); 
  Rogue_literal_strings[749] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,ParseReader>>", 32 ) ); 
  Rogue_literal_strings[750] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-infinity", 9 ) ); 
  Rogue_literal_strings[751] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " seconds", 8 ) ); 
  Rogue_literal_strings[752] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Template>>", 29 ) ); 
  Rogue_literal_strings[753] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Augment[]>>", 30 ) ); 
  Rogue_literal_strings[754] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Type>>", 25 ) ); 
  Rogue_literal_strings[755] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Int32>>", 26 ) ); 
  Rogue_literal_strings[756] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String[]>>", 29 ) ); 
  Rogue_literal_strings[757] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Token[]>>", 28 ) ); 
  Rogue_literal_strings[758] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,PropertyValue>>", 34 ) ); 
  Rogue_literal_strings[759] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod(", 21 ) ); 
  Rogue_literal_strings[760] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeSpecializer>>", 36 ) ); 
  Rogue_literal_strings[761] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Cmd>>", 24 ) ); 
  Rogue_literal_strings[762] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StackTrace", 10 ) ); 
  Rogue_literal_strings[763] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyInfo", 12 ) ); 
  Rogue_literal_strings[764] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String>>", 22 ) ); 
  Rogue_literal_strings[765] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringReader", 12 ) ); 
  Rogue_literal_strings[766] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeInfo>>", 24 ) ); 
  Rogue_literal_strings[767] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()", 10 ) ); 
  Rogue_literal_strings[768] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Console", 7 ) ); 
  Rogue_literal_strings[769] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Logical>>", 23 ) ); 
  Rogue_literal_strings[770] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TokenType>>", 25 ) ); 
  Rogue_literal_strings[771] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenType", 9 ) ); 
  Rogue_literal_strings[772] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token", 5 ) ); 
  Rogue_literal_strings[773] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenReader", 11 ) ); 
  Rogue_literal_strings[774] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Attributes", 10 ) ); 
  Rogue_literal_strings[775] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter", 13 ) ); 
  Rogue_literal_strings[776] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Int32,Template>>", 23 ) ); 
  Rogue_literal_strings[777] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template", 8 ) ); 
  Rogue_literal_strings[778] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer", 15 ) ); 
  Rogue_literal_strings[779] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition", 10 ) ); 
  Rogue_literal_strings[780] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Definition>>", 26 ) ); 
  Rogue_literal_strings[781] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property", 8 ) ); 
  Rogue_literal_strings[782] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Property>>", 24 ) ); 
  Rogue_literal_strings[783] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local", 5 ) ); 
  Rogue_literal_strings[784] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,CmdLabel>>", 24 ) ); 
  Rogue_literal_strings[785] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate", 14 ) ); 
  Rogue_literal_strings[786] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method", 6 ) ); 
  Rogue_literal_strings[787] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method[]>>", 24 ) ); 
  Rogue_literal_strings[788] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method>>", 22 ) ); 
  Rogue_literal_strings[789] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplates", 15 ) ); 
  Rogue_literal_strings[790] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type", 4 ) ); 
  Rogue_literal_strings[791] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser", 6 ) ); 
  Rogue_literal_strings[792] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ParseReader", 11 ) ); 
  Rogue_literal_strings[793] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,ParseReader>>", 27 ) ); 
  Rogue_literal_strings[794] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Stopwatch", 9 ) ); 
  Rogue_literal_strings[795] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()->Logical", 19 ) ); 
  Rogue_literal_strings[796] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin", 6 ) ); 
  Rogue_literal_strings[797] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueC", 6 ) ); 
  Rogue_literal_strings[798] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Template>>", 24 ) ); 
  Rogue_literal_strings[799] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment", 7 ) ); 
  Rogue_literal_strings[800] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Augment[]>>", 25 ) ); 
  Rogue_literal_strings[801] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Type>>", 20 ) ); 
  Rogue_literal_strings[802] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Int32>>", 21 ) ); 
  Rogue_literal_strings[803] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String[]>>", 24 ) ); 
  Rogue_literal_strings[804] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program", 7 ) ); 
  Rogue_literal_strings[805] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection", 21 ) ); 
  Rogue_literal_strings[806] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Scope", 5 ) ); 
  Rogue_literal_strings[807] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(Type)->Logical", 23 ) ); 
  Rogue_literal_strings[808] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CPPWriter", 9 ) ); 
  Rogue_literal_strings[809] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "System", 6 ) ); 
  Rogue_literal_strings[810] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Math", 4 ) ); 
  Rogue_literal_strings[811] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "File", 4 ) ); 
  Rogue_literal_strings[812] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LineReader", 10 ) ); 
  Rogue_literal_strings[813] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Tokenizer", 9 ) ); 
  Rogue_literal_strings[814] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Token[]>>", 23 ) ); 
  Rogue_literal_strings[815] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PreprocessorTokenReader", 23 ) ); 
  Rogue_literal_strings[816] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Preprocessor", 12 ) ); 
  Rogue_literal_strings[817] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneArgs", 9 ) ); 
  Rogue_literal_strings[818] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyValue", 13 ) ); 
  Rogue_literal_strings[819] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,PropertyValue>>", 29 ) ); 
  Rogue_literal_strings[820] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam", 7 ) ); 
  Rogue_literal_strings[821] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg", 5 ) ); 
  Rogue_literal_strings[822] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRebuilder<<Token>>", 22 ) ); 
  Rogue_literal_strings[823] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeSpecializer>>", 31 ) ); 
  Rogue_literal_strings[824] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Cmd>>", 19 ) ); 
  Rogue_literal_strings[825] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg)->Logical", 30 ) ); 
  Rogue_literal_strings[826] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRebuilder<<CmdNamedArg>>", 28 ) ); 
  Rogue_literal_strings[827] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg,CmdNamedArg)->Logical", 42 ) ); 
  Rogue_literal_strings[828] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Quicksort<<CmdNamedArg>>", 24 ) ); 
  Rogue_literal_strings[829] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CandidateMethods", 16 ) ); 
  Rogue_literal_strings[830] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileReader", 10 ) ); 
  Rogue_literal_strings[831] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileWriter", 10 ) ); 
  Rogue_literal_strings[832] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UTF8Reader", 10 ) ); 
  Rogue_literal_strings[833] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String[]", 8 ) ); 
  Rogue_literal_strings[834] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyInfo[]", 14 ) ); 
  Rogue_literal_strings[835] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte[]", 6 ) ); 
  Rogue_literal_strings[836] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character[]", 11 ) ); 
  Rogue_literal_strings[837] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String>>[]", 29 ) ); 
  Rogue_literal_strings[838] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeInfo>>[]", 31 ) ); 
  Rogue_literal_strings[839] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()[]", 12 ) ); 
  Rogue_literal_strings[840] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Logical>>[]", 30 ) ); 
  Rogue_literal_strings[841] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TokenType>>[]", 32 ) ); 
  Rogue_literal_strings[842] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[]", 7 ) ); 
  Rogue_literal_strings[843] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter[]", 15 ) ); 
  Rogue_literal_strings[844] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Int32,Template>>[]", 30 ) ); 
  Rogue_literal_strings[845] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32[]", 7 ) ); 
  Rogue_literal_strings[846] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type[]", 6 ) ); 
  Rogue_literal_strings[847] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer[]", 17 ) ); 
  Rogue_literal_strings[848] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition[]", 12 ) ); 
  Rogue_literal_strings[849] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Definition>>[]", 33 ) ); 
  Rogue_literal_strings[850] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property[]", 10 ) ); 
  Rogue_literal_strings[851] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Property>>[]", 31 ) ); 
  Rogue_literal_strings[852] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local[]", 7 ) ); 
  Rogue_literal_strings[853] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd[]", 5 ) ); 
  Rogue_literal_strings[854] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel[]", 10 ) ); 
  Rogue_literal_strings[855] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CmdLabel>>[]", 31 ) ); 
  Rogue_literal_strings[856] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate[]", 16 ) ); 
  Rogue_literal_strings[857] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method[]", 8 ) ); 
  Rogue_literal_strings[858] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method[]>>[]", 31 ) ); 
  Rogue_literal_strings[859] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method>>[]", 29 ) ); 
  Rogue_literal_strings[860] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser[]", 8 ) ); 
  Rogue_literal_strings[861] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,ParseReader>>[]", 34 ) ); 
  Rogue_literal_strings[862] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin[]", 8 ) ); 
  Rogue_literal_strings[863] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template[]", 10 ) ); 
  Rogue_literal_strings[864] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Template>>[]", 31 ) ); 
  Rogue_literal_strings[865] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment[]", 9 ) ); 
  Rogue_literal_strings[866] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Augment[]>>[]", 32 ) ); 
  Rogue_literal_strings[867] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Type>>[]", 27 ) ); 
  Rogue_literal_strings[868] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Int32>>[]", 28 ) ); 
  Rogue_literal_strings[869] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String[]>>[]", 31 ) ); 
  Rogue_literal_strings[870] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg[]", 13 ) ); 
  Rogue_literal_strings[871] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure[]", 21 ) ); 
  Rogue_literal_strings[872] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Token[]>>[]", 30 ) ); 
  Rogue_literal_strings[873] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,PropertyValue>>[]", 36 ) ); 
  Rogue_literal_strings[874] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase[]", 14 ) ); 
  Rogue_literal_strings[875] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch[]", 10 ) ); 
  Rogue_literal_strings[876] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam[]", 9 ) ); 
  Rogue_literal_strings[877] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg[]", 7 ) ); 
  Rogue_literal_strings[878] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase[]", 15 ) ); 
  Rogue_literal_strings[879] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection[]", 23 ) ); 
  Rogue_literal_strings[880] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeSpecializer>>[]", 38 ) ); 
  Rogue_literal_strings[881] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[][]", 9 ) ); 
  Rogue_literal_strings[882] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Cmd>>[]", 26 ) ); 
  Rogue_literal_strings[883] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<String>>", 15 ) ); 
  Rogue_literal_strings[884] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<PropertyInfo>>", 21 ) ); 
  Rogue_literal_strings[885] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Byte>>", 13 ) ); 
  Rogue_literal_strings[886] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Character>>", 18 ) ); 
  Rogue_literal_strings[887] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String>>>>", 36 ) ); 
  Rogue_literal_strings[888] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeInfo>>>>", 38 ) ); 
  Rogue_literal_strings[889] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Function()>>", 19 ) ); 
  Rogue_literal_strings[890] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Logical>>>>", 37 ) ); 
  Rogue_literal_strings[891] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TokenType>>>>", 39 ) ); 
  Rogue_literal_strings[892] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token>>", 14 ) ); 
  Rogue_literal_strings[893] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeParameter>>", 22 ) ); 
  Rogue_literal_strings[894] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Int32,Template>>>>", 37 ) ); 
  Rogue_literal_strings[895] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Int32>>", 14 ) ); 
  Rogue_literal_strings[896] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Type>>", 13 ) ); 
  Rogue_literal_strings[897] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeSpecializer>>", 24 ) ); 
  Rogue_literal_strings[898] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Definition>>", 19 ) ); 
  Rogue_literal_strings[899] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Definition>>>>", 40 ) ); 
  Rogue_literal_strings[900] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Property>>", 17 ) ); 
  Rogue_literal_strings[901] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Property>>>>", 38 ) ); 
  Rogue_literal_strings[902] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Local>>", 14 ) ); 
  Rogue_literal_strings[903] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Cmd>>", 12 ) ); 
  Rogue_literal_strings[904] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdLabel>>", 17 ) ); 
  Rogue_literal_strings[905] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,CmdLabel>>>>", 38 ) ); 
  Rogue_literal_strings[906] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<MethodTemplate>>", 23 ) ); 
  Rogue_literal_strings[907] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Method>>", 15 ) ); 
  Rogue_literal_strings[908] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method[]>>>>", 38 ) ); 
  Rogue_literal_strings[909] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method>>>>", 36 ) ); 
  Rogue_literal_strings[910] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Parser>>", 15 ) ); 
  Rogue_literal_strings[911] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,ParseReader>>>>", 41 ) ); 
  Rogue_literal_strings[912] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Plugin>>", 15 ) ); 
  Rogue_literal_strings[913] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Template>>", 17 ) ); 
  Rogue_literal_strings[914] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Template>>>>", 38 ) ); 
  Rogue_literal_strings[915] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Augment>>", 16 ) ); 
  Rogue_literal_strings[916] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Augment[]>>>>", 39 ) ); 
  Rogue_literal_strings[917] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Type>>>>", 34 ) ); 
  Rogue_literal_strings[918] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Int32>>>>", 35 ) ); 
  Rogue_literal_strings[919] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String[]>>>>", 38 ) ); 
  Rogue_literal_strings[920] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdNamedArg>>", 20 ) ); 
  Rogue_literal_strings[921] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdControlStructure>>", 28 ) ); 
  Rogue_literal_strings[922] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Token[]>>>>", 37 ) ); 
  Rogue_literal_strings[923] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,PropertyValue>>>>", 43 ) ); 
  Rogue_literal_strings[924] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdWhichCase>>", 21 ) ); 
  Rogue_literal_strings[925] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdCatch>>", 17 ) ); 
  Rogue_literal_strings[926] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnParam>>", 16 ) ); 
  Rogue_literal_strings[927] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnArg>>", 14 ) ); 
  Rogue_literal_strings[928] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdSelectCase>>", 22 ) ); 
  Rogue_literal_strings[929] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdTaskControlSection>>", 30 ) ); 
  Rogue_literal_strings[930] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeSpecializer>>>>", 45 ) ); 
  Rogue_literal_strings[931] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token[]>>", 16 ) ); 
  Rogue_literal_strings[932] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Cmd>>>>", 33 ) ); 
  Rogue_literal_strings[933] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_95", 11 ) ); 
  Rogue_literal_strings[934] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0.0", 3 ) ); 
  Rogue_literal_strings[935] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL  # ", 7 ) ); 
  Rogue_literal_strings[936] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralCharacterToken", 21 ) ); 
  Rogue_literal_strings[937] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt64Token", 17 ) ); 
  Rogue_literal_strings[938] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt32Token", 17 ) ); 
  Rogue_literal_strings[939] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralReal64Token", 18 ) ); 
  Rogue_literal_strings[940] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringDataToken", 15 ) ); 
  Rogue_literal_strings[941] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLToken", 8 ) ); 
  Rogue_literal_strings[942] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DirectiveTokenType", 18 ) ); 
  Rogue_literal_strings[943] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructuralDirectiveTokenType", 28 ) ); 
  Rogue_literal_strings[944] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLTokenType", 12 ) ); 
  Rogue_literal_strings[945] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructureTokenType", 18 ) ); 
  Rogue_literal_strings[946] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeTokenType", 19 ) ); 
  Rogue_literal_strings[947] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ModifyAndAssignTokenType", 24 ) ); 
  Rogue_literal_strings[948] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel", 8 ) ); 
  Rogue_literal_strings[949] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg", 11 ) ); 
  Rogue_literal_strings[950] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAccess", 9 ) ); 
  Rogue_literal_strings[951] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatement", 12 ) ); 
  Rogue_literal_strings[952] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMakeRequisite", 16 ) ); 
  Rogue_literal_strings[953] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteral", 10 ) ); 
  Rogue_literal_strings[954] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinary", 9 ) ); 
  Rogue_literal_strings[955] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeHeader", 15 ) ); 
  Rogue_literal_strings[956] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeCode", 13 ) ); 
  Rogue_literal_strings[957] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase", 12 ) ); 
  Rogue_literal_strings[958] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch", 8 ) ); 
  Rogue_literal_strings[959] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAwait", 8 ) ); 
  Rogue_literal_strings[960] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdYield", 8 ) ); 
  Rogue_literal_strings[961] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThrow", 8 ) ); 
  Rogue_literal_strings[962] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdFormattedString", 18 ) ); 
  Rogue_literal_strings[963] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTrace", 8 ) ); 
  Rogue_literal_strings[964] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssert", 9 ) ); 
  Rogue_literal_strings[965] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEscape", 9 ) ); 
  Rogue_literal_strings[966] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNextIteration", 16 ) ); 
  Rogue_literal_strings[967] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNecessary", 12 ) ); 
  Rogue_literal_strings[968] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSufficient", 13 ) ); 
  Rogue_literal_strings[969] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjust", 9 ) ); 
  Rogue_literal_strings[970] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssign", 9 ) ); 
  Rogue_literal_strings[971] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssign", 18 ) ); 
  Rogue_literal_strings[972] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustLocal", 14 ) ); 
  Rogue_literal_strings[973] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadLocal", 12 ) ); 
  Rogue_literal_strings[974] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRange", 8 ) ); 
  Rogue_literal_strings[975] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdResolvedModifyAndAssign", 26 ) ); 
  Rogue_literal_strings[976] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypeOperator", 15 ) ); 
  Rogue_literal_strings[977] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdUnary", 8 ) ); 
  Rogue_literal_strings[978] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIsReference", 14 ) ); 
  Rogue_literal_strings[979] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdElementAccess", 16 ) ); 
  Rogue_literal_strings[980] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdListConvert", 14 ) ); 
  Rogue_literal_strings[981] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCallback", 17 ) ); 
  Rogue_literal_strings[982] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThisContext", 14 ) ); 
  Rogue_literal_strings[983] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateList", 13 ) ); 
  Rogue_literal_strings[984] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallPriorMethod", 18 ) ); 
  Rogue_literal_strings[985] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateFunction", 17 ) ); 
  Rogue_literal_strings[986] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInlineNative", 15 ) ); 
  Rogue_literal_strings[987] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase", 13 ) ); 
  Rogue_literal_strings[988] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelect", 9 ) ); 
  Rogue_literal_strings[989] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRequire", 10 ) ); 
  Rogue_literal_strings[990] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEnsure", 9 ) ); 
  Rogue_literal_strings[991] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypedLiteralList", 19 ) ); 
  Rogue_literal_strings[992] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCompound", 17 ) ); 
  Rogue_literal_strings[993] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateObject", 15 ) ); 
  Rogue_literal_strings[994] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadSingleton", 16 ) ); 
  Rogue_literal_strings[995] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadGlobal", 13 ) ); 
  Rogue_literal_strings[996] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteGlobal", 14 ) ); 
  Rogue_literal_strings[997] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadProperty", 15 ) ); 
  Rogue_literal_strings[998] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteProperty", 16 ) ); 
  Rogue_literal_strings[999] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCall", 7 ) ); 
  Rogue_literal_strings[1000] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateArray", 14 ) ); 
  Rogue_literal_strings[1001] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayCount", 17 ) ); 
  Rogue_literal_strings[1002] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControl", 14 ) ); 
  Rogue_literal_strings[1003] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal arguments on inline code.", 33 ) ); 
  Rogue_literal_strings[1004] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] CmdAwait should have been converted to other commands before being adapted to a task.", 96 ) ); 
  Rogue_literal_strings[1005] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Routine '", 9 ) ); 
  Rogue_literal_strings[1006] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' does not return a value.", 26 ) ); 
  Rogue_literal_strings[1007] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; call to ", 24 ) ); 
  Rogue_literal_strings[1008] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not return a value.", 25 ) ); 
  Rogue_literal_strings[1009] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method ", 15 ) ); 
  Rogue_literal_strings[1010] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in type ", 9 ) ); 
  Rogue_literal_strings[1011] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".fn_name() is not defined.", 26 ) ); 
  Rogue_literal_strings[1012] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No method ", 10 ) ); 
  Rogue_literal_strings[1013] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) is defined.", 15 ) ); 
  Rogue_literal_strings[1014] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Neither method ", 15 ) ); 
  Rogue_literal_strings[1015] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) nor global method ", 22 ) ); 
  Rogue_literal_strings[1016] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(2) is defined.", 15 ) ); 
  Rogue_literal_strings[1017] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Types ", 6 ) ); 
  Rogue_literal_strings[1018] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are incompatible.", 18 ) ); 
  Rogue_literal_strings[1019] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Caught value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[1020] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try/catch blocks cannot contain 'yield' statements.", 51 ) ); 
  Rogue_literal_strings[1021] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'await' command can only be used in [task] methods.", 55 ) ); 
  Rogue_literal_strings[1022] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task method does not return a result.  Ensure you are not awaiting a task method that calls start() - remove the call to start().", 129 ) ); 
  Rogue_literal_strings[1023] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'yield' statement can only be used in [task] methods.", 57 ) ); 
  Rogue_literal_strings[1024] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Thrown value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[1025] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More arguments than format markers ('$') in formatted string.", 61 ) ); 
  Rogue_literal_strings[1026] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "print", 5 ) ); 
  Rogue_literal_strings[1027] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More format markers ('$') than arguments in formatted string.", 61 ) ); 
  Rogue_literal_strings[1028] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "println", 7 ) ); 
  Rogue_literal_strings[1029] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the local variable - either assign an initial value (local ", 88 ) ); 
  Rogue_literal_strings[1030] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (local ", 32 ) ); 
  Rogue_literal_strings[1031] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AssertionError", 14 ) ); 
  Rogue_literal_strings[1032] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing structure to escape.", 33 ) ); 
  Rogue_literal_strings[1033] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing loop for 'nextIteration' to affect.", 48 ) ); 
  Rogue_literal_strings[1034] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing contingent.", 24 ) ); 
  Rogue_literal_strings[1035] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid target for increment/decrement. (", 41 ) ); 
  Rogue_literal_strings[1036] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid assignment.", 19 ) ); 
  Rogue_literal_strings[1037] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator+", 9 ) ); 
  Rogue_literal_strings[1038] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Range", 5 ) ); 
  Rogue_literal_strings[1039] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RangeToLimit", 12 ) ); 
  Rogue_literal_strings[1040] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No suitable operator method found; type ", 40 ) ); 
  Rogue_literal_strings[1041] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " implements neither ", 20 ) ); 
  Rogue_literal_strings[1042] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()(", 3 ) ); 
  Rogue_literal_strings[1043] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") nor ", 6 ) ); 
  Rogue_literal_strings[1044] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=(", 2 ) ); 
  Rogue_literal_strings[1045] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected.", 33 ) ); 
  Rogue_literal_strings[1046] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected - '.=' cannot be used with a chain of references.", 82 ) ); 
  Rogue_literal_strings[1047] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count()", 7 ) ); 
  Rogue_literal_strings[1048] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at(Int32)", 9 ) ); 
  Rogue_literal_strings[1049] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get(Int32)", 10 ) ); 
  Rogue_literal_strings[1050] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal integer value expected.", 31 ) ); 
  Rogue_literal_strings[1051] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another", 11 ) ); 
  Rogue_literal_strings[1052] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another()", 13 ) ); 
  Rogue_literal_strings[1053] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read()", 6 ) ); 
  Rogue_literal_strings[1054] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal iteration target - forEach requires either an indexed collection (.count, .get/.at) or a reader (.has_another, .read).", 126 ) ); 
  Rogue_literal_strings[1055] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object's read() method does not return a value.", 47 ) ); 
  Rogue_literal_strings[1056] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot specify a step size for a reader - only for an indexed collection.", 73 ) ); 
  Rogue_literal_strings[1057] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read", 4 ) ); 
  Rogue_literal_strings[1058] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() is defined.", 14 ) ); 
  Rogue_literal_strings[1059] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get", 3 ) ); 
  Rogue_literal_strings[1060] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List conversion syntax used on a non-list value.", 48 ) ); 
  Rogue_literal_strings[1061] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListMap<<", 9 ) ); 
  Rogue_literal_strings[1062] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "convert", 7 ) ); 
  Rogue_literal_strings[1063] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReduce<<", 12 ) ); 
  Rogue_literal_strings[1064] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method '", 16 ) ); 
  Rogue_literal_strings[1065] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' exists in type ", 17 ) ); 
  Rogue_literal_strings[1066] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Multiple candidates match ambiguous reference to '", 50 ) ); 
  Rogue_literal_strings[1067] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'; add qualifiying parameter types.", 35 ) ); 
  Rogue_literal_strings[1068] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TODO: [] -> Property[]", 22 ) ); 
  Rogue_literal_strings[1069] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal target - 'prior' can only be used to call overridden methods.", 69 ) ); 
  Rogue_literal_strings[1070] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "value", 5 ) ); 
  Rogue_literal_strings[1071] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Selection list cannot be empty.", 31 ) ); 
  Rogue_literal_strings[1072] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RequirementError", 16 ) ); 
  Rogue_literal_strings[1073] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'ensure' can only be used with reference-type variables.", 56 ) ); 
  Rogue_literal_strings[1074] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot write properties using aspect references.  Add a setter to the aspect definition - ", 90 ) ); 
  Rogue_literal_strings[1075] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method set_", 12 ) ); 
  Rogue_literal_strings[1076] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(@", 2 ) ); 
  Rogue_literal_strings[1077] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")'.", 3 ) ); 
  Rogue_literal_strings[1078] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The result of a call cannot be assigned a value.", 48 ) ); 
  Rogue_literal_strings[1079] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to setter set_", 29 ) ); 
  Rogue_literal_strings[1080] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write \"@", 13 ) ); 
  Rogue_literal_strings[1081] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...\" instead.", 16 ) ); 
  Rogue_literal_strings[1082] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in the current scope.", 30 ) ); 
  Rogue_literal_strings[1083] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot assign to inline native code without specifying its type.  For example, native(\"...\")->", 94 ) ); 
  Rogue_literal_strings[1084] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot increment or decrement inline native code without specifying its type.  For example, native(\"...\")->", 107 ) ); 
  Rogue_literal_strings[1085] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method '", 8 ) ); 
  Rogue_literal_strings[1086] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local variable '", 16 ) ); 
  Rogue_literal_strings[1087] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' cannot be called like a method.", 33 ) ); 
  Rogue_literal_strings[1088] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[CmdAccess.expand_modify_and_assign() Cmd.rogue:1917]", 53 ) ); 
  Rogue_literal_strings[1089] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL]", 10 ) ); 
  Rogue_literal_strings[1090] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot modify-and-assign inline native code without specifying its type.  For example, native(\"...\")->", 102 ) ); 
  Rogue_literal_strings[1091] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined (access name '", 37 ) ); 
  Rogue_literal_strings[1092] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "').", 3 ) ); 
  Rogue_literal_strings[1093] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_info in CmdEnsure.type()", 30 ) ); 
  Rogue_literal_strings[1094] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined (access name ", 42 ) ); 
  Rogue_literal_strings[1095] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return (", 8 ) ); 
  Rogue_literal_strings[1096] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(", 2 ) ); 
  Rogue_literal_strings[1097] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".symbol() is not defined.", 25 ) ); 
  Rogue_literal_strings[1098] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (", 4 ) ); 
  Rogue_literal_strings[1099] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else ", 5 ) ); 
  Rogue_literal_strings[1100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":;", 2 ) ); 
  Rogue_literal_strings[1101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "goto ", 5 ) ); 
  Rogue_literal_strings[1102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "for (;", 6 ) ); 
  Rogue_literal_strings[1103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (", 7 ) ); 
  Rogue_literal_strings[1104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CATCH( ", 13 ) ); 
  Rogue_literal_strings[1105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_END_TRY", 13 ) ); 
  Rogue_literal_strings[1106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_TRY", 9 ) ); 
  Rogue_literal_strings[1107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_THROW(", 12 ) ); 
  Rogue_literal_strings[1108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF_NULL(", 25 ) ); 
  Rogue_literal_strings[1109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF(", 20 ) ); 
  Rogue_literal_strings[1110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))?", 3 ) ); 
  Rogue_literal_strings[1111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "continue", 8 ) ); 
  Rogue_literal_strings[1112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !(", 7 ) ); 
  Rogue_literal_strings[1113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ) goto ", 9 ) ); 
  Rogue_literal_strings[1114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") goto ", 7 ) ); 
  Rogue_literal_strings[1115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_instance_of(", 24 ) ); 
  Rogue_literal_strings[1116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(RogueObject_as(", 17 ) ); 
  Rogue_literal_strings[1117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")))", 3 ) ); 
  Rogue_literal_strings[1118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NULL", 4 ) ); 
  Rogue_literal_strings[1119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-1.0/0.0)", 10 ) ); 
  Rogue_literal_strings[1121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(0.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LL", 2 ) ); 
  Rogue_literal_strings[1123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCharacter)", 16 ) ); 
  Rogue_literal_strings[1124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\n'", 4 ) ); 
  Rogue_literal_strings[1125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\\\'", 4 ) ); 
  Rogue_literal_strings[1126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\''", 4 ) ); 
  Rogue_literal_strings[1127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " || ", 4 ) ); 
  Rogue_literal_strings[1128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ? (", 5 ) ); 
  Rogue_literal_strings[1129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") : ", 4 ) ); 
  Rogue_literal_strings[1130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (", 8 ) ); 
  Rogue_literal_strings[1131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "break;", 6 ) ); 
  Rogue_literal_strings[1132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_REF(", 17 ) ); 
  Rogue_literal_strings[1133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_OBJECT(", 20 ) ); 
  Rogue_literal_strings[1134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not a singleton.", 20 ) ); 
  Rogue_literal_strings[1135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")ROGUE_SINGLETON(", 17 ) ); 
  Rogue_literal_strings[1136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->_singleton = ", 15 ) ); 
  Rogue_literal_strings[1137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call_", 5 ) ); 
  Rogue_literal_strings[1138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_ARG(", 10 ) ); 
  Rogue_literal_strings[1139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType_create_array( ", 24 ) ); 
  Rogue_literal_strings[1140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", sizeof(", 9 ) ); 
  Rogue_literal_strings[1141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", true", 6 ) ); 
  Rogue_literal_strings[1142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->objects[", 10 ) ); 
  Rogue_literal_strings[1143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]))", 3 ) ); 
  Rogue_literal_strings[1144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "reals[", 6 ) ); 
  Rogue_literal_strings[1145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "floats[", 7 ) ); 
  Rogue_literal_strings[1146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "longs[", 6 ) ); 
  Rogue_literal_strings[1147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "integers[", 9 ) ); 
  Rogue_literal_strings[1148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "characters[", 11 ) ); 
  Rogue_literal_strings[1149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bytes[", 6 ) ); 
  Rogue_literal_strings[1150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "logicals[", 9 ) ); 
  Rogue_literal_strings[1151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Unhandled type in CmdReadArrayElement.", 49 ) ); 
  Rogue_literal_strings[1152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(", 3 ) ); 
  Rogue_literal_strings[1153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->bytes))[", 10 ) ); 
  Rogue_literal_strings[1154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->count", 7 ) ); 
  Rogue_literal_strings[1155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = ", 4 ) ); 
  Rogue_literal_strings[1156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "objects[", 8 ) ); 
  Rogue_literal_strings[1157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (++THIS->ip)", 19 ) ); 
  Rogue_literal_strings[1158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  THIS->ip = -1;", 16 ) ); 
  Rogue_literal_strings[1159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return false;", 15 ) ); 
  Rogue_literal_strings[1160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal use of '$this' in global method.", 40 ) ); 
  Rogue_literal_strings[1161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatementList", 16 ) ); 
  Rogue_literal_strings[1162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdArgs", 7 ) ); 
  Rogue_literal_strings[1163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot call prior.", 18 ) ); 
  Rogue_literal_strings[1164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " from class ", 12 ) ); 
  Rogue_literal_strings[1165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " because the method is not an override - no prior version of it exists.", 71 ) ); 
  Rogue_literal_strings[1166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_798", 12 ) ); 
  Rogue_literal_strings[1167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[RogueC.process_command_line_arguments() RogueC.rogue:406]  All types resolved - generate additional types?", 107 ) ); 
  Rogue_literal_strings[1168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Alpha", 5 ) ); 
  Rogue_literal_strings[1169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class Alpha [requisite singleton]\n  METHODS\n    method init\n      @trace \"Alpha singleton instantiated!\"\nendClass", 113 ) ); 
  Rogue_literal_strings[1170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Yes - compiling type Alpha:", 27 ) ); 
  Rogue_literal_strings[1171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(compiler-generated)", 20 ) ); 
  Rogue_literal_strings[1172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No", 2 ) ); 
  Rogue_literal_strings[1173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReturn", 9 ) ); 
  Rogue_literal_strings[1174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure", 19 ) ); 
  Rogue_literal_strings[1175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLocalDeclaration", 19 ) ); 
  Rogue_literal_strings[1176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIf", 5 ) ); 
  Rogue_literal_strings[1177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhich", 8 ) ); 
  Rogue_literal_strings[1178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBlock", 8 ) ); 
  Rogue_literal_strings[1179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdContingent", 13 ) ); 
  Rogue_literal_strings[1180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdGenericLoop", 14 ) ); 
  Rogue_literal_strings[1181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTry", 6 ) ); 
  Rogue_literal_strings[1182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdForEach", 10 ) ); 
  Rogue_literal_strings[1183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSwitch", 9 ) ); 
  Rogue_literal_strings[1184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_383", 12 ) ); 
  Rogue_literal_strings[1185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_384", 12 ) ); 
  Rogue_literal_strings[1186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralLogical", 17 ) ); 
  Rogue_literal_strings[1187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt32", 15 ) ); 
  Rogue_literal_strings[1188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralString", 16 ) ); 
  Rogue_literal_strings[1189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDefaultValue", 15 ) ); 
  Rogue_literal_strings[1190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralNull", 14 ) ); 
  Rogue_literal_strings[1191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralReal64", 16 ) ); 
  Rogue_literal_strings[1192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt64", 15 ) ); 
  Rogue_literal_strings[1193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralCharacter", 19 ) ); 
  Rogue_literal_strings[1194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneMethodArgs", 15 ) ); 
  Rogue_literal_strings[1195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskArgs", 8 ) ); 
  Rogue_literal_strings[1196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MacroArgs", 9 ) ); 
  Rogue_literal_strings[1197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinaryLogical", 16 ) ); 
  Rogue_literal_strings[1198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".combine_literal_operands(Logical,Logical) is not defined.", 58 ) ); 
  Rogue_literal_strings[1199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "shift_right", 11 ) ); 
  Rogue_literal_strings[1200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mod", 3 ) ); 
  Rogue_literal_strings[1201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((void*)", 8 ) ); 
  Rogue_literal_strings[1202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") == ((void*)", 13 ) ); 
  Rogue_literal_strings[1203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") != ((void*)", 13 ) ); 
  Rogue_literal_strings[1204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") pow((double)", 14 ) ); 
  Rogue_literal_strings[1205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", (double)", 10 ) ); 
  Rogue_literal_strings[1206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] $.resolve_for_reference() is undefined.", 50 ) ); 
  Rogue_literal_strings[1207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Incompatible types for comparison: ", 35 ) ); 
  Rogue_literal_strings[1208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The '", 5 ) ); 
  Rogue_literal_strings[1209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' operator cannot be applied to type ", 37 ) ); 
  Rogue_literal_strings[1210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdd", 6 ) ); 
  Rogue_literal_strings[1211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdComparison", 13 ) ); 
  Rogue_literal_strings[1212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOp", 12 ) ); 
  Rogue_literal_strings[1213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSubtract", 11 ) ); 
  Rogue_literal_strings[1214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMultiply", 11 ) ); 
  Rogue_literal_strings[1215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDivide", 9 ) ); 
  Rogue_literal_strings[1216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMod", 6 ) ); 
  Rogue_literal_strings[1217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdPower", 8 ) ); 
  Rogue_literal_strings[1218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator-", 9 ) ); 
  Rogue_literal_strings[1219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator*", 9 ) ); 
  Rogue_literal_strings[1220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator/", 9 ) ); 
  Rogue_literal_strings[1221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator%", 9 ) ); 
  Rogue_literal_strings[1222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator^", 9 ) ); 
  Rogue_literal_strings[1223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32Property", 13 ) ); 
  Rogue_literal_strings[1224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringProperty", 14 ) ); 
  Rogue_literal_strings[1225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] TODO: 'is' for compounds.", 36 ) ); 
  Rogue_literal_strings[1226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'isNot' between mixed type categories ", 49 ) ); 
  Rogue_literal_strings[1227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLE", 12 ) ); 
  Rogue_literal_strings[1228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLT", 12 ) ); 
  Rogue_literal_strings[1229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGE", 12 ) ); 
  Rogue_literal_strings[1230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareEQ", 12 ) ); 
  Rogue_literal_strings[1231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIs", 12 ) ); 
  Rogue_literal_strings[1232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareNE", 12 ) ); 
  Rogue_literal_strings[1233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIsNot", 15 ) ); 
  Rogue_literal_strings[1234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGT", 12 ) ); 
  Rogue_literal_strings[1235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<=", 10 ) ); 
  Rogue_literal_strings[1236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<>", 10 ) ); 
  Rogue_literal_strings[1237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>", 9 ) ); 
  Rogue_literal_strings[1238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>=", 10 ) ); 
  Rogue_literal_strings[1239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<", 9 ) ); 
  Rogue_literal_strings[1240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator==", 10 ) ); 
  Rogue_literal_strings[1241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!=", 10 ) ); 
  Rogue_literal_strings[1242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpTo", 12 ) ); 
  Rogue_literal_strings[1243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpToLessThan", 20 ) ); 
  Rogue_literal_strings[1244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeDownTo", 14 ) ); 
  Rogue_literal_strings[1245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignLocal", 23 ) ); 
  Rogue_literal_strings[1246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignGlobal", 24 ) ); 
  Rogue_literal_strings[1247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignProperty", 26 ) ); 
  Rogue_literal_strings[1248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalXor", 13 ) ); 
  Rogue_literal_strings[1249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalOr", 12 ) ); 
  Rogue_literal_strings[1250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalAnd", 13 ) ); 
  Rogue_literal_strings[1251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInstanceOf", 13 ) ); 
  Rogue_literal_strings[1252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToType", 16 ) ); 
  Rogue_literal_strings[1253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAs", 5 ) ); 
  Rogue_literal_strings[1254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCastToType", 13 ) ); 
  Rogue_literal_strings[1255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!", 9 ) ); 
  Rogue_literal_strings[1256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator?", 9 ) ); 
  Rogue_literal_strings[1257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalNot", 13 ) ); 
  Rogue_literal_strings[1258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNegate", 9 ) ); 
  Rogue_literal_strings[1259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseNot", 13 ) ); 
  Rogue_literal_strings[1260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalize", 13 ) ); 
  Rogue_literal_strings[1261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not ", 4 ) ); 
  Rogue_literal_strings[1262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-", 2 ) ); 
  Rogue_literal_strings[1263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!!", 2 ) ); 
  Rogue_literal_strings[1264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseXor", 13 ) ); 
  Rogue_literal_strings[1265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOr", 12 ) ); 
  Rogue_literal_strings[1266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseAnd", 13 ) ); 
  Rogue_literal_strings[1267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftLeft", 19 ) ); 
  Rogue_literal_strings[1268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRight", 20 ) ); 
  Rogue_literal_strings[1269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRightX", 21 ) ); 
  Rogue_literal_strings[1270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToPrimitiveType", 25 ) ); 
  Rogue_literal_strings[1271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralThis", 14 ) ); 
  Rogue_literal_strings[1272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UpdateThisTypeVisitor", 21 ) ); 
  Rogue_literal_strings[1273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TraceUsedCodeVisitor", 20 ) ); 
  Rogue_literal_strings[1274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallMethod", 13 ) ); 
  Rogue_literal_strings[1275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNative", 19 ) ); 
  Rogue_literal_strings[1276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeRoutine", 20 ) ); 
  Rogue_literal_strings[1277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallRoutine", 14 ) ); 
  Rogue_literal_strings[1278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeMethod", 19 ) ); 
  Rogue_literal_strings[1279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallAspectMethod", 19 ) ); 
  Rogue_literal_strings[1280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod", 20 ) ); 
  Rogue_literal_strings[1281] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallStaticMethod", 19 ) ); 
  Rogue_literal_strings[1282] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_2629", 13 ) ); 
  Rogue_literal_strings[1283] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_2630", 13 ) ); 
  Rogue_literal_strings[1284] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeRoutine", 26 ) ); 
  Rogue_literal_strings[1285] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeMethod", 25 ) ); 
  Rogue_literal_strings[1286] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Error", 5 ) ); 
  Rogue_literal_strings[1287] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReader<<CmdSelectCase>>", 27 ) ); 
  Rogue_literal_strings[1288] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeToken", 15 ) ); 
  Rogue_literal_strings[1289] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteSingleton", 17 ) ); 
  Rogue_literal_strings[1290] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteLocal", 13 ) ); 
  Rogue_literal_strings[1291] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustProperty", 17 ) ); 
  Rogue_literal_strings[1292] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustGlobal", 15 ) ); 
  Rogue_literal_strings[1293] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayElement", 19 ) ); 
  Rogue_literal_strings[1294] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteArrayElement", 20 ) ); 
  Rogue_literal_strings[1295] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNoAction", 11 ) ); 
  Rogue_literal_strings[1296] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueError", 10 ) ); 
  Rogue_literal_strings[1297] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "IOError", 7 ) ); 
  Rogue_literal_strings[1298] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Character>>", 19 ) ); 
  Rogue_literal_strings[1299] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<String>>", 16 ) ); 
  Rogue_literal_strings[1300] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriterAspect<<Global,global_output_buffer>>", 48 ) ); 
  Rogue_literal_strings[1301] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriter", 11 ) ); 
  Rogue_literal_strings[1302] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriterAspect<<Console,output_buffer>>", 42 ) ); 
  Rogue_literal_strings[1303] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1304] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writer<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1305] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CmdSelectCase>>", 23 ) ); 
  Rogue_literal_strings[1306] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32?", 6 ) ); 
  Rogue_literal_strings[1307] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SystemEnvironment", 17 ) ); 
  Rogue_literal_strings[1308] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte?", 5 ) ); 
  Rogue_literal_strings[1309] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character?", 10 ) ); 
  Rogue_literal_strings[1310] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "message", 7 ) ); 
  Rogue_literal_strings[1311] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "stack_trace", 11 ) ); 
  Rogue_literal_strings[1312] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "entries", 7 ) ); 
  Rogue_literal_strings[1313] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_formatted", 12 ) ); 
  Rogue_literal_strings[1314] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "data", 4 ) ); 
  Rogue_literal_strings[1315] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index", 5 ) ); 
  Rogue_literal_strings[1316] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "name", 4 ) ); 
  Rogue_literal_strings[1317] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_properties", 17 ) ); 
  Rogue_literal_strings[1318] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "properties", 10 ) ); 
  Rogue_literal_strings[1319] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_name_index", 19 ) ); 
  Rogue_literal_strings[1320] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_type_index", 19 ) ); 
  Rogue_literal_strings[1321] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "work_bytes", 10 ) ); 
  Rogue_literal_strings[1322] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "utf8", 4 ) ); 
  Rogue_literal_strings[1323] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "indent", 6 ) ); 
  Rogue_literal_strings[1324] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cursor_offset", 13 ) ); 
  Rogue_literal_strings[1325] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cursor_index", 12 ) ); 
  Rogue_literal_strings[1326] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at_newline", 10 ) ); 
  Rogue_literal_strings[1327] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bin_mask", 8 ) ); 
  Rogue_literal_strings[1328] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bins", 4 ) ); 
  Rogue_literal_strings[1329] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keys", 4 ) ); 
  Rogue_literal_strings[1330] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "key", 3 ) ); 
  Rogue_literal_strings[1331] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_entry", 10 ) ); 
  Rogue_literal_strings[1332] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "hash", 4 ) ); 
  Rogue_literal_strings[1333] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "position", 8 ) ); 
  Rogue_literal_strings[1334] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_info_lookup", 16 ) ); 
  Rogue_literal_strings[1335] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "standard_output", 15 ) ); 
  Rogue_literal_strings[1336] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_output_buffer", 20 ) ); 
  Rogue_literal_strings[1337] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "exit_functions", 14 ) ); 
  Rogue_literal_strings[1338] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "output_buffer", 13 ) ); 
  Rogue_literal_strings[1339] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "included_files", 14 ) ); 
  Rogue_literal_strings[1340] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prefix_path_list", 16 ) ); 
  Rogue_literal_strings[1341] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prefix_path_lookup", 18 ) ); 
  Rogue_literal_strings[1342] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compile_targets", 15 ) ); 
  Rogue_literal_strings[1343] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_list", 11 ) ); 
  Rogue_literal_strings[1344] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "libraries_folder", 16 ) ); 
  Rogue_literal_strings[1345] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source_files", 12 ) ); 
  Rogue_literal_strings[1346] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "generate_main", 13 ) ); 
  Rogue_literal_strings[1347] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "first_filepath", 14 ) ); 
  Rogue_literal_strings[1348] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "output_filepath", 15 ) ); 
  Rogue_literal_strings[1349] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "supported_targets", 17 ) ); 
  Rogue_literal_strings[1350] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "requisite_declarations", 22 ) ); 
  Rogue_literal_strings[1351] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "all_requisite", 13 ) ); 
  Rogue_literal_strings[1352] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "execute_args", 12 ) ); 
  Rogue_literal_strings[1353] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "package_name", 12 ) ); 
  Rogue_literal_strings[1354] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "debug_mode", 10 ) ); 
  Rogue_literal_strings[1355] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "print_version", 13 ) ); 
  Rogue_literal_strings[1356] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsers", 7 ) ); 
  Rogue_literal_strings[1357] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsereaders_by_filepath", 24 ) ); 
  Rogue_literal_strings[1358] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "stopwatch", 9 ) ); 
  Rogue_literal_strings[1359] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "gc_mode", 7 ) ); 
  Rogue_literal_strings[1360] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "gc_threshold", 12 ) ); 
  Rogue_literal_strings[1361] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "plugins", 7 ) ); 
  Rogue_literal_strings[1362] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "reader", 6 ) ); 
  Rogue_literal_strings[1363] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "filepath", 8 ) ); 
  Rogue_literal_strings[1364] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_type", 9 ) ); 
  Rogue_literal_strings[1365] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_method", 11 ) ); 
  Rogue_literal_strings[1366] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_declarations", 18 ) ); 
  Rogue_literal_strings[1367] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_list", 13 ) ); 
  Rogue_literal_strings[1368] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "string_buffer", 13 ) ); 
  Rogue_literal_strings[1369] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_statement_list", 18 ) ); 
  Rogue_literal_strings[1370] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsing_augment", 15 ) ); 
  Rogue_literal_strings[1371] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "used_modules", 12 ) ); 
  Rogue_literal_strings[1372] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "module_id_map", 13 ) ); 
  Rogue_literal_strings[1373] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "inserted_module_prefixes", 24 ) ); 
  Rogue_literal_strings[1374] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "tokens", 6 ) ); 
  Rogue_literal_strings[1375] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "filepath_to_filename", 20 ) ); 
  Rogue_literal_strings[1376] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "line", 4 ) ); 
  Rogue_literal_strings[1377] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "column", 6 ) ); 
  Rogue_literal_strings[1378] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "lookup", 6 ) ); 
  Rogue_literal_strings[1379] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_define", 16 ) ); 
  Rogue_literal_strings[1380] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_include", 17 ) ); 
  Rogue_literal_strings[1381] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_includeNativeCode", 27 ) ); 
  Rogue_literal_strings[1382] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_includeNativeHeader", 29 ) ); 
  Rogue_literal_strings[1383] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_if", 12 ) ); 
  Rogue_literal_strings[1384] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_elseIf", 16 ) ); 
  Rogue_literal_strings[1385] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_else", 14 ) ); 
  Rogue_literal_strings[1386] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_endIf", 15 ) ); 
  Rogue_literal_strings[1387] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_module", 16 ) ); 
  Rogue_literal_strings[1388] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_requisite", 19 ) ); 
  Rogue_literal_strings[1389] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_using", 15 ) ); 
  Rogue_literal_strings[1390] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "placeholder_id", 14 ) ); 
  Rogue_literal_strings[1391] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "begin_augment_tokens", 20 ) ); 
  Rogue_literal_strings[1392] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_augment", 15 ) ); 
  Rogue_literal_strings[1393] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_case", 12 ) ); 
  Rogue_literal_strings[1394] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_catch", 13 ) ); 
  Rogue_literal_strings[1395] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_CLASS", 13 ) ); 
  Rogue_literal_strings[1396] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_class", 13 ) ); 
  Rogue_literal_strings[1397] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_DEFINITIONS", 19 ) ); 
  Rogue_literal_strings[1398] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_else", 12 ) ); 
  Rogue_literal_strings[1399] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_elseIf", 14 ) ); 
  Rogue_literal_strings[1400] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endAugment", 18 ) ); 
  Rogue_literal_strings[1401] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endBlock", 16 ) ); 
  Rogue_literal_strings[1402] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endClass", 16 ) ); 
  Rogue_literal_strings[1403] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endContingent", 21 ) ); 
  Rogue_literal_strings[1404] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endForEach", 18 ) ); 
  Rogue_literal_strings[1405] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endFunction", 19 ) ); 
  Rogue_literal_strings[1406] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endIf", 13 ) ); 
  Rogue_literal_strings[1407] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endLoop", 15 ) ); 
  Rogue_literal_strings[1408] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endRoutine", 18 ) ); 
  Rogue_literal_strings[1409] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endTry", 14 ) ); 
  Rogue_literal_strings[1410] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endUnitTest", 19 ) ); 
  Rogue_literal_strings[1411] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endWhich", 16 ) ); 
  Rogue_literal_strings[1412] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endWhile", 16 ) ); 
  Rogue_literal_strings[1413] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_ENUMERATE", 17 ) ); 
  Rogue_literal_strings[1414] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_GLOBAL", 14 ) ); 
  Rogue_literal_strings[1415] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_method", 14 ) ); 
  Rogue_literal_strings[1416] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_METHODS", 15 ) ); 
  Rogue_literal_strings[1417] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nativeCode", 18 ) ); 
  Rogue_literal_strings[1418] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nativeHeader", 20 ) ); 
  Rogue_literal_strings[1419] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_others", 14 ) ); 
  Rogue_literal_strings[1420] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_PROPERTIES", 18 ) ); 
  Rogue_literal_strings[1421] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_routine", 15 ) ); 
  Rogue_literal_strings[1422] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_satisfied", 17 ) ); 
  Rogue_literal_strings[1423] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_unsatisfied", 19 ) ); 
  Rogue_literal_strings[1424] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_with", 12 ) ); 
  Rogue_literal_strings[1425] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_brace", 18 ) ); 
  Rogue_literal_strings[1426] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_bracket", 20 ) ); 
  Rogue_literal_strings[1427] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_comment", 20 ) ); 
  Rogue_literal_strings[1428] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_paren", 18 ) ); 
  Rogue_literal_strings[1429] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_specialize", 23 ) ); 
  Rogue_literal_strings[1430] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "eol", 3 ) ); 
  Rogue_literal_strings[1431] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "eoi", 3 ) ); 
  Rogue_literal_strings[1432] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_assert", 14 ) ); 
  Rogue_literal_strings[1433] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_await", 13 ) ); 
  Rogue_literal_strings[1434] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_block", 13 ) ); 
  Rogue_literal_strings[1435] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_contingent", 18 ) ); 
  Rogue_literal_strings[1436] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_ensure", 14 ) ); 
  Rogue_literal_strings[1437] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeBlock", 19 ) ); 
  Rogue_literal_strings[1438] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeContingent", 24 ) ); 
  Rogue_literal_strings[1439] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeForEach", 21 ) ); 
  Rogue_literal_strings[1440] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeIf", 16 ) ); 
  Rogue_literal_strings[1441] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeLoop", 18 ) ); 
  Rogue_literal_strings[1442] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeTry", 17 ) ); 
  Rogue_literal_strings[1443] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeWhich", 19 ) ); 
  Rogue_literal_strings[1444] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeWhile", 19 ) ); 
  Rogue_literal_strings[1445] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_forEach", 15 ) ); 
  Rogue_literal_strings[1446] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_function", 16 ) ); 
  Rogue_literal_strings[1447] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_global", 14 ) ); 
  Rogue_literal_strings[1448] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_if", 10 ) ); 
  Rogue_literal_strings[1449] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_in", 10 ) ); 
  Rogue_literal_strings[1450] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_infinity", 16 ) ); 
  Rogue_literal_strings[1451] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_is", 10 ) ); 
  Rogue_literal_strings[1452] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_isNot", 13 ) ); 
  Rogue_literal_strings[1453] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_isReference", 19 ) ); 
  Rogue_literal_strings[1454] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_local", 13 ) ); 
  Rogue_literal_strings[1455] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_loop", 12 ) ); 
  Rogue_literal_strings[1456] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_NaN", 11 ) ); 
  Rogue_literal_strings[1457] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_native", 14 ) ); 
  Rogue_literal_strings[1458] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_necessary", 17 ) ); 
  Rogue_literal_strings[1459] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nextIteration", 21 ) ); 
  Rogue_literal_strings[1460] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_noAction", 16 ) ); 
  Rogue_literal_strings[1461] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_null", 12 ) ); 
  Rogue_literal_strings[1462] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_of", 10 ) ); 
  Rogue_literal_strings[1463] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_require", 15 ) ); 
  Rogue_literal_strings[1464] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_return", 14 ) ); 
  Rogue_literal_strings[1465] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_select", 14 ) ); 
  Rogue_literal_strings[1466] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_step", 12 ) ); 
  Rogue_literal_strings[1467] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_sufficient", 18 ) ); 
  Rogue_literal_strings[1468] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_throw", 13 ) ); 
  Rogue_literal_strings[1469] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_trace", 13 ) ); 
  Rogue_literal_strings[1470] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_trace_position", 22 ) ); 
  Rogue_literal_strings[1471] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_try", 11 ) ); 
  Rogue_literal_strings[1472] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_unitTest", 16 ) ); 
  Rogue_literal_strings[1473] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_which", 13 ) ); 
  Rogue_literal_strings[1474] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_while", 13 ) ); 
  Rogue_literal_strings[1475] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_yield", 13 ) ); 
  Rogue_literal_strings[1476] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_identifier", 15 ) ); 
  Rogue_literal_strings[1477] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_character", 17 ) ); 
  Rogue_literal_strings[1478] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_integer", 15 ) ); 
  Rogue_literal_strings[1479] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_long", 12 ) ); 
  Rogue_literal_strings[1480] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_real", 12 ) ); 
  Rogue_literal_strings[1481] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string", 14 ) ); 
  Rogue_literal_strings[1482] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_and", 11 ) ); 
  Rogue_literal_strings[1483] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_as", 10 ) ); 
  Rogue_literal_strings[1484] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_downTo", 14 ) ); 
  Rogue_literal_strings[1485] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_false", 13 ) ); 
  Rogue_literal_strings[1486] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_instanceOf", 18 ) ); 
  Rogue_literal_strings[1487] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_meta", 12 ) ); 
  Rogue_literal_strings[1488] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_not", 11 ) ); 
  Rogue_literal_strings[1489] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_notInstanceOf", 21 ) ); 
  Rogue_literal_strings[1490] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_or", 10 ) ); 
  Rogue_literal_strings[1491] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_pi", 10 ) ); 
  Rogue_literal_strings[1492] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_prior", 13 ) ); 
  Rogue_literal_strings[1493] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_this", 12 ) ); 
  Rogue_literal_strings[1494] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_true", 12 ) ); 
  Rogue_literal_strings[1495] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_xor", 11 ) ); 
  Rogue_literal_strings[1496] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ampersand", 16 ) ); 
  Rogue_literal_strings[1497] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ampersand_equals", 23 ) ); 
  Rogue_literal_strings[1498] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_double_ampersand", 23 ) ); 
  Rogue_literal_strings[1499] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_arrow", 12 ) ); 
  Rogue_literal_strings[1500] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at", 9 ) ); 
  Rogue_literal_strings[1501] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at_brace", 15 ) ); 
  Rogue_literal_strings[1502] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at_bracket", 17 ) ); 
  Rogue_literal_strings[1503] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_backslash", 16 ) ); 
  Rogue_literal_strings[1504] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_caret", 12 ) ); 
  Rogue_literal_strings[1505] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_caret_equals", 19 ) ); 
  Rogue_literal_strings[1506] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_colon", 12 ) ); 
  Rogue_literal_strings[1507] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_comma", 12 ) ); 
  Rogue_literal_strings[1508] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_compare", 14 ) ); 
  Rogue_literal_strings[1509] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_dot", 10 ) ); 
  Rogue_literal_strings[1510] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_dot_equals", 17 ) ); 
  Rogue_literal_strings[1511] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_downToGreaterThan", 24 ) ); 
  Rogue_literal_strings[1512] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_empty_braces", 19 ) ); 
  Rogue_literal_strings[1513] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_empty_brackets", 21 ) ); 
  Rogue_literal_strings[1514] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_eq", 9 ) ); 
  Rogue_literal_strings[1515] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_equals", 13 ) ); 
  Rogue_literal_strings[1516] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_exclamation_point", 24 ) ); 
  Rogue_literal_strings[1517] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_fat_arrow", 16 ) ); 
  Rogue_literal_strings[1518] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ge", 9 ) ); 
  Rogue_literal_strings[1519] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_gt", 9 ) ); 
  Rogue_literal_strings[1520] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_le", 9 ) ); 
  Rogue_literal_strings[1521] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_lt", 9 ) ); 
  Rogue_literal_strings[1522] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus", 12 ) ); 
  Rogue_literal_strings[1523] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus_equals", 19 ) ); 
  Rogue_literal_strings[1524] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus_minus", 18 ) ); 
  Rogue_literal_strings[1525] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ne", 9 ) ); 
  Rogue_literal_strings[1526] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_brace", 17 ) ); 
  Rogue_literal_strings[1527] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_bracket", 19 ) ); 
  Rogue_literal_strings[1528] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_paren", 17 ) ); 
  Rogue_literal_strings[1529] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_specialize", 22 ) ); 
  Rogue_literal_strings[1530] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_percent", 14 ) ); 
  Rogue_literal_strings[1531] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_percent_equals", 21 ) ); 
  Rogue_literal_strings[1532] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus", 11 ) ); 
  Rogue_literal_strings[1533] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus_equals", 18 ) ); 
  Rogue_literal_strings[1534] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus_plus", 16 ) ); 
  Rogue_literal_strings[1535] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_question_mark", 20 ) ); 
  Rogue_literal_strings[1536] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_semicolon", 16 ) ); 
  Rogue_literal_strings[1537] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_left", 17 ) ); 
  Rogue_literal_strings[1538] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_right", 18 ) ); 
  Rogue_literal_strings[1539] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_right_x", 20 ) ); 
  Rogue_literal_strings[1540] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_slash", 12 ) ); 
  Rogue_literal_strings[1541] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_slash_equals", 19 ) ); 
  Rogue_literal_strings[1542] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_tilde", 12 ) ); 
  Rogue_literal_strings[1543] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_tilde_equals", 19 ) ); 
  Rogue_literal_strings[1544] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_times", 12 ) ); 
  Rogue_literal_strings[1545] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_times_equals", 19 ) ); 
  Rogue_literal_strings[1546] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_upTo", 11 ) ); 
  Rogue_literal_strings[1547] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_upToLessThan", 19 ) ); 
  Rogue_literal_strings[1548] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_vertical_bar", 19 ) ); 
  Rogue_literal_strings[1549] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_vertical_bar_equals", 26 ) ); 
  Rogue_literal_strings[1550] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_double_vertical_bar", 26 ) ); 
  Rogue_literal_strings[1551] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_end_command", 14 ) ); 
  Rogue_literal_strings[1552] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_non_method", 13 ) ); 
  Rogue_literal_strings[1553] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "t", 1 ) ); 
  Rogue_literal_strings[1554] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "attributes", 10 ) ); 
  Rogue_literal_strings[1555] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source_template", 15 ) ); 
  Rogue_literal_strings[1556] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "specializers", 12 ) ); 
  Rogue_literal_strings[1557] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "defined", 7 ) ); 
  Rogue_literal_strings[1558] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "organized", 9 ) ); 
  Rogue_literal_strings[1559] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "organizing", 10 ) ); 
  Rogue_literal_strings[1560] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "resolved", 8 ) ); 
  Rogue_literal_strings[1561] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "culled", 6 ) ); 
  Rogue_literal_strings[1562] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "base_class", 10 ) ); 
  Rogue_literal_strings[1563] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "base_types", 10 ) ); 
  Rogue_literal_strings[1564] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extended_types", 14 ) ); 
  Rogue_literal_strings[1565] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_array", 8 ) ); 
  Rogue_literal_strings[1566] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_list", 7 ) ); 
  Rogue_literal_strings[1567] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_optional", 11 ) ); 
  Rogue_literal_strings[1568] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "element_type", 12 ) ); 
  Rogue_literal_strings[1569] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_used", 7 ) ); 
  Rogue_literal_strings[1570] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "simplify_name", 13 ) ); 
  Rogue_literal_strings[1571] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definition_list", 15 ) ); 
  Rogue_literal_strings[1572] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definition_lookup", 17 ) ); 
  Rogue_literal_strings[1573] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prev_enum_cmd", 13 ) ); 
  Rogue_literal_strings[1574] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_enum_offset", 16 ) ); 
  Rogue_literal_strings[1575] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_list", 11 ) ); 
  Rogue_literal_strings[1576] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_lookup", 13 ) ); 
  Rogue_literal_strings[1577] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_lookup", 15 ) ); 
  Rogue_literal_strings[1578] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_list", 18 ) ); 
  Rogue_literal_strings[1579] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_lookup_by_name", 28 ) ); 
  Rogue_literal_strings[1580] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_lookup_by_signature", 33 ) ); 
  Rogue_literal_strings[1581] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_list", 11 ) ); 
  Rogue_literal_strings[1582] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_lookup_by_name", 21 ) ); 
  Rogue_literal_strings[1583] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_lookup_by_signature", 26 ) ); 
  Rogue_literal_strings[1584] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "dynamic_method_table_index", 26 ) ); 
  Rogue_literal_strings[1585] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "callback_parameter_types", 24 ) ); 
  Rogue_literal_strings[1586] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "callback_return_type", 20 ) ); 
  Rogue_literal_strings[1587] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_templates", 16 ) ); 
  Rogue_literal_strings[1588] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_name", 8 ) ); 
  Rogue_literal_strings[1589] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_class_name", 14 ) ); 
  Rogue_literal_strings[1590] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_type_name", 13 ) ); 
  Rogue_literal_strings[1591] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "flags", 5 ) ); 
  Rogue_literal_strings[1592] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "tags", 4 ) ); 
  Rogue_literal_strings[1593] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_parameters", 15 ) ); 
  Rogue_literal_strings[1594] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "alternates_by_param_count", 25 ) ); 
  Rogue_literal_strings[1595] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine_return_type", 19 ) ); 
  Rogue_literal_strings[1596] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine_parameter_types", 23 ) ); 
  Rogue_literal_strings[1597] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "expression", 10 ) ); 
  Rogue_literal_strings[1598] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_enumeration", 14 ) ); 
  Rogue_literal_strings[1599] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_context", 12 ) ); 
  Rogue_literal_strings[1600] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "initial_value", 13 ) ); 
  Rogue_literal_strings[1601] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "signature", 9 ) ); 
  Rogue_literal_strings[1602] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return_type", 11 ) ); 
  Rogue_literal_strings[1603] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_result_type", 16 ) ); 
  Rogue_literal_strings[1604] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parameters", 10 ) ); 
  Rogue_literal_strings[1605] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "locals", 6 ) ); 
  Rogue_literal_strings[1606] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "min_args", 8 ) ); 
  Rogue_literal_strings[1607] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "statements", 10 ) ); 
  Rogue_literal_strings[1608] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect_statements", 17 ) ); 
  Rogue_literal_strings[1609] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "incorporating_classes", 21 ) ); 
  Rogue_literal_strings[1610] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overridden_method", 17 ) ); 
  Rogue_literal_strings[1611] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overriding_methods", 18 ) ); 
  Rogue_literal_strings[1612] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native_code", 11 ) ); 
  Rogue_literal_strings[1613] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "called_dynamically", 18 ) ); 
  Rogue_literal_strings[1614] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "label_list", 10 ) ); 
  Rogue_literal_strings[1615] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "label_lookup", 12 ) ); 
  Rogue_literal_strings[1616] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_label", 9 ) ); 
  Rogue_literal_strings[1617] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "specializer_count", 17 ) ); 
  Rogue_literal_strings[1618] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unspecialized_name", 18 ) ); 
  Rogue_literal_strings[1619] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_typedef", 11 ) ); 
  Rogue_literal_strings[1620] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_name", 13 ) ); 
  Rogue_literal_strings[1621] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_cpp_name", 9 ) ); 
  Rogue_literal_strings[1622] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "current", 7 ) ); 
  Rogue_literal_strings[1623] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_referenced", 13 ) ); 
  Rogue_literal_strings[1624] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_global", 9 ) ); 
  Rogue_literal_strings[1625] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_tokens", 15 ) ); 
  Rogue_literal_strings[1626] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parameter_count", 15 ) ); 
  Rogue_literal_strings[1627] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overridden_m", 12 ) ); 
  Rogue_literal_strings[1628] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overrides", 9 ) ); 
  Rogue_literal_strings[1629] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "templates", 9 ) ); 
  Rogue_literal_strings[1630] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "spaces_per_tab", 14 ) ); 
  Rogue_literal_strings[1631] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "start_time", 10 ) ); 
  Rogue_literal_strings[1632] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "collect_supported_types_callback", 32 ) ); 
  Rogue_literal_strings[1633] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "generate_additonal_types_callback", 33 ) ); 
  Rogue_literal_strings[1634] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "code_prefix", 11 ) ); 
  Rogue_literal_strings[1635] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "program_name", 12 ) ); 
  Rogue_literal_strings[1636] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unique_integer", 14 ) ); 
  Rogue_literal_strings[1637] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_list", 13 ) ); 
  Rogue_literal_strings[1638] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_lookup", 15 ) ); 
  Rogue_literal_strings[1639] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "augment_lookup", 14 ) ); 
  Rogue_literal_strings[1640] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "m_on_launch", 11 ) ); 
  Rogue_literal_strings[1641] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "m_run_tests", 11 ) ); 
  Rogue_literal_strings[1642] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native_header", 13 ) ); 
  Rogue_literal_strings[1643] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "methods_by_signature", 20 ) ); 
  Rogue_literal_strings[1644] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_list", 9 ) ); 
  Rogue_literal_strings[1645] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_lookup", 11 ) ); 
  Rogue_literal_strings[1646] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_null", 9 ) ); 
  Rogue_literal_strings[1647] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Real64", 11 ) ); 
  Rogue_literal_strings[1648] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Real32", 11 ) ); 
  Rogue_literal_strings[1649] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Int64", 10 ) ); 
  Rogue_literal_strings[1650] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Int32", 10 ) ); 
  Rogue_literal_strings[1651] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Character", 14 ) ); 
  Rogue_literal_strings[1652] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Byte", 9 ) ); 
  Rogue_literal_strings[1653] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Logical", 12 ) ); 
  Rogue_literal_strings[1654] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Object", 11 ) ); 
  Rogue_literal_strings[1655] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_String", 11 ) ); 
  Rogue_literal_strings[1656] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_NativeArray", 16 ) ); 
  Rogue_literal_strings[1657] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_GenericList", 16 ) ); 
  Rogue_literal_strings[1658] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Global", 11 ) ); 
  Rogue_literal_strings[1659] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Exception", 14 ) ); 
  Rogue_literal_strings[1660] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_StringBuilder", 18 ) ); 
  Rogue_literal_strings[1661] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_TypeInfo", 13 ) ); 
  Rogue_literal_strings[1662] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string_lookup", 21 ) ); 
  Rogue_literal_strings[1663] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string_list", 19 ) ); 
  Rogue_literal_strings[1664] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ids_by_module", 13 ) ); 
  Rogue_literal_strings[1665] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "args", 4 ) ); 
  Rogue_literal_strings[1666] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "named_args", 10 ) ); 
  Rogue_literal_strings[1667] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_negative", 11 ) ); 
  Rogue_literal_strings[1668] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "inferred_index", 14 ) ); 
  Rogue_literal_strings[1669] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_body", 9 ) ); 
  Rogue_literal_strings[1670] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_statement", 14 ) ); 
  Rogue_literal_strings[1671] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "implicit_type", 13 ) ); 
  Rogue_literal_strings[1672] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_list", 10 ) ); 
  Rogue_literal_strings[1673] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_stack", 13 ) ); 
  Rogue_literal_strings[1674] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_type", 12 ) ); 
  Rogue_literal_strings[1675] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contains_yield", 14 ) ); 
  Rogue_literal_strings[1676] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escape_label", 12 ) ); 
  Rogue_literal_strings[1677] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "upkeep_label", 12 ) ); 
  Rogue_literal_strings[1678] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_escape_section", 19 ) ); 
  Rogue_literal_strings[1679] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_upkeep_section", 19 ) ); 
  Rogue_literal_strings[1680] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cloned_command", 14 ) ); 
  Rogue_literal_strings[1681] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "buffer", 6 ) ); 
  Rogue_literal_strings[1682] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "needs_indent", 12 ) ); 
  Rogue_literal_strings[1683] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "line_number", 11 ) ); 
  Rogue_literal_strings[1684] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "trace_token", 11 ) ); 
  Rogue_literal_strings[1685] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "temp_buffer", 11 ) ); 
  Rogue_literal_strings[1686] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "command_line_arguments", 22 ) ); 
  Rogue_literal_strings[1687] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "executable_filepath", 19 ) ); 
  Rogue_literal_strings[1688] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "environment", 11 ) ); 
  Rogue_literal_strings[1689] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pattern", 7 ) ); 
  Rogue_literal_strings[1690] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source", 6 ) ); 
  Rogue_literal_strings[1691] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next", 4 ) ); 
  Rogue_literal_strings[1692] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prev", 4 ) ); 
  Rogue_literal_strings[1693] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_filepath", 13 ) ); 
  Rogue_literal_strings[1694] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_line", 9 ) ); 
  Rogue_literal_strings[1695] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_column", 11 ) ); 
  Rogue_literal_strings[1696] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definitions", 11 ) ); 
  Rogue_literal_strings[1697] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parser", 6 ) ); 
  Rogue_literal_strings[1698] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_module", 10 ) ); 
  Rogue_literal_strings[1699] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "queue", 5 ) ); 
  Rogue_literal_strings[1700] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "comment", 7 ) ); 
  Rogue_literal_strings[1701] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "left", 4 ) ); 
  Rogue_literal_strings[1702] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "right", 5 ) ); 
  Rogue_literal_strings[1703] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "values", 6 ) ); 
  Rogue_literal_strings[1704] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "condition", 9 ) ); 
  Rogue_literal_strings[1705] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else_statements", 15 ) ); 
  Rogue_literal_strings[1706] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cases", 5 ) ); 
  Rogue_literal_strings[1707] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case_others", 11 ) ); 
  Rogue_literal_strings[1708] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "conditions", 10 ) ); 
  Rogue_literal_strings[1709] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_statements", 20 ) ); 
  Rogue_literal_strings[1710] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_statements", 22 ) ); 
  Rogue_literal_strings[1711] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_label", 15 ) ); 
  Rogue_literal_strings[1712] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_label", 17 ) ); 
  Rogue_literal_strings[1713] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_section", 17 ) ); 
  Rogue_literal_strings[1714] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_section", 19 ) ); 
  Rogue_literal_strings[1715] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_statements", 18 ) ); 
  Rogue_literal_strings[1716] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "upkeep", 6 ) ); 
  Rogue_literal_strings[1717] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "catches", 7 ) ); 
  Rogue_literal_strings[1718] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error_var", 9 ) ); 
  Rogue_literal_strings[1719] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "statement_list", 14 ) ); 
  Rogue_literal_strings[1720] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result_var", 10 ) ); 
  Rogue_literal_strings[1721] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "format", 6 ) ); 
  Rogue_literal_strings[1722] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "info", 4 ) ); 
  Rogue_literal_strings[1723] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_info", 10 ) ); 
  Rogue_literal_strings[1724] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "skip_initialization", 19 ) ); 
  Rogue_literal_strings[1725] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error", 5 ) ); 
  Rogue_literal_strings[1726] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_cmd", 10 ) ); 
  Rogue_literal_strings[1727] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operand", 7 ) ); 
  Rogue_literal_strings[1728] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "delta", 5 ) ); 
  Rogue_literal_strings[1729] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target", 6 ) ); 
  Rogue_literal_strings[1730] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "new_value", 9 ) ); 
  Rogue_literal_strings[1731] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "op", 2 ) ); 
  Rogue_literal_strings[1732] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "first", 5 ) ); 
  Rogue_literal_strings[1733] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "last", 4 ) ); 
  Rogue_literal_strings[1734] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step_size", 9 ) ); 
  Rogue_literal_strings[1735] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_var_name", 16 ) ); 
  Rogue_literal_strings[1736] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index_var_name", 14 ) ); 
  Rogue_literal_strings[1737] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "collection", 10 ) ); 
  Rogue_literal_strings[1738] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step_cmd", 8 ) ); 
  Rogue_literal_strings[1739] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_type", 11 ) ); 
  Rogue_literal_strings[1740] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list", 4 ) ); 
  Rogue_literal_strings[1741] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_type", 7 ) ); 
  Rogue_literal_strings[1742] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "convert_fn", 10 ) ); 
  Rogue_literal_strings[1743] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "of_type", 7 ) ); 
  Rogue_literal_strings[1744] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list_type", 9 ) ); 
  Rogue_literal_strings[1745] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "with_args", 9 ) ); 
  Rogue_literal_strings[1746] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_generic", 10 ) ); 
  Rogue_literal_strings[1747] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result_type", 11 ) ); 
  Rogue_literal_strings[1748] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "modify_op", 9 ) ); 
  Rogue_literal_strings[1749] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "adjust_delta", 12 ) ); 
  Rogue_literal_strings[1750] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "value_type", 10 ) ); 
  Rogue_literal_strings[1751] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_read", 8 ) ); 
  Rogue_literal_strings[1752] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_write", 9 ) ); 
  Rogue_literal_strings[1753] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list_type_name", 14 ) ); 
  Rogue_literal_strings[1754] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "elements", 8 ) ); 
  Rogue_literal_strings[1755] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read_index", 10 ) ); 
  Rogue_literal_strings[1756] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "write_index", 11 ) ); 
  Rogue_literal_strings[1757] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_info", 11 ) ); 
  Rogue_literal_strings[1758] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_info", 13 ) ); 
  Rogue_literal_strings[1759] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_info", 11 ) ); 
  Rogue_literal_strings[1760] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "array_type", 10 ) ); 
  Rogue_literal_strings[1761] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count_cmd", 9 ) ); 
  Rogue_literal_strings[1762] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "sections", 8 ) ); 
  Rogue_literal_strings[1763] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "current_section", 15 ) ); 
  Rogue_literal_strings[1764] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cloned_method", 13 ) ); 
  Rogue_literal_strings[1765] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_type", 9 ) ); 
  Rogue_literal_strings[1766] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_method", 11 ) ); 
  Rogue_literal_strings[1767] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_type", 13 ) ); 
  Rogue_literal_strings[1768] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_method", 15 ) ); 
  Rogue_literal_strings[1769] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_task_control", 16 ) ); 
  Rogue_literal_strings[1770] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "context_property", 16 ) ); 
  Rogue_literal_strings[1771] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ip_property", 11 ) ); 
  Rogue_literal_strings[1772] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_context", 12 ) ); 
  Rogue_literal_strings[1773] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "arg_lookup", 10 ) ); 
  Rogue_literal_strings[1774] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "access", 6 ) ); 
  Rogue_literal_strings[1775] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "available", 9 ) ); 
  Rogue_literal_strings[1776] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compatible", 10 ) ); 
  Rogue_literal_strings[1777] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error_on_fail", 13 ) ); 
  Rogue_literal_strings[1778] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "buffer_position", 15 ) ); 
  Rogue_literal_strings[1779] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FILE* fp;", 9 ) ); 
  Rogue_literal_strings[1780] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "byte_reader", 11 ) ); 
  Rogue_literal_strings[1781] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "empty_string", 12 ) ); 
  Rogue_literal_strings[1782] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "limit", 5 ) ); 
  Rogue_literal_strings[1783] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_limited", 10 ) ); 

}

void Rogue_launch()
{
  RogueStringBuilder__init_class();
  RogueRuntime__init_class();
  RogueToken__init_class();
  RogueTokenType__init_class();
  RogueCmdStatementList__init_class();
  RogueSystem__init_class();
  RoguePreprocessor__init_class();
  RogueStringProperty__init_class();

  RogueSystem_executable_filepath = RogueString_create_from_utf8(
      Rogue_argc ? Rogue_argv[0] : "Rogue", -1 );
  
  for (int i=1; i<Rogue_argc; ++i)
  {
    RogueString_List__add__String( RogueSystem_command_line_arguments,
        RogueString_create_from_utf8( Rogue_argv[i], -1 ) );
  }

  // Instantiate requisite singletons
  ROGUE_SINGLETON( Global );
  ROGUE_SINGLETON( Console );
  ROGUE_SINGLETON( Function_95 );
  ROGUE_SINGLETON( RogueC );
  ROGUE_SINGLETON( Program );
  ROGUE_SINGLETON( Function_383 );
  ROGUE_SINGLETON( Function_384 );
  ROGUE_SINGLETON( Function_798 );
  ROGUE_SINGLETON( TraceUsedCodeVisitor );
  ROGUE_SINGLETON( Function_2629 );
  ROGUE_SINGLETON( Function_2630 );

  RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );
  Rogue_collect_garbage();
}

bool Rogue_update_tasks()
{
  // Returns true if any tasks are still active
  Rogue_collect_garbage();
  return false;
}

int main( int argc, const char* argv[] )
{
  Rogue_configure( argc, argv );
  Rogue_launch();

  while (Rogue_update_tasks()) {}

  Rogue_quit();

  return 0;
}
