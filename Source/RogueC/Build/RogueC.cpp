#include <stdio.h>
#include "RogueC.h"

//=============================================================================
//  Rogue.cpp
//
//  Rogue runtime.
//
//  ---------------------------------------------------------------------------
//
//  Created 2015.01.19 by Abe Pralle
//
//  This is free and unencumbered software released into the public domain
//  under the terms of the UNLICENSE ( http://unlicense.org ).
//=============================================================================

#include <fcntl.h>
#include <math.h>
#include <string.h>
#include <sys/timeb.h>
#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <inttypes.h>
#include <exception>

#if !defined(ROGUE_PLATFORM_WINDOWS)
#  include <sys/time.h>
#  include <unistd.h>
#  include <signal.h>
#  include <dirent.h>
#  include <sys/socket.h>
#  include <sys/uio.h>
#  include <sys/stat.h>
#  include <netdb.h>
#  include <errno.h>
#  include <pthread.h>
#endif

#if defined(ANDROID)
#  include <netinet/in.h>
#endif

#if defined(_WIN32)
#  include <direct.h>
#  define chdir _chdir
#endif

#if TARGET_OS_IPHONE
#  include <sys/types.h>
#  include <sys/sysctl.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#ifndef PATH_MAX
#  define PATH_MAX 4096
#endif

//-----------------------------------------------------------------------------
//  GLOBAL PROPERTIES
//-----------------------------------------------------------------------------
int                Rogue_gc_threshold = ROGUE_GC_THRESHOLD_DEFAULT;
RogueLogical       Rogue_configured = 0;
RogueObject*       Rogue_error_object  = 0;
int                Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;
int                Rogue_argc;
const char**       Rogue_argv;
RogueDebugTrace*   Rogue_call_stack = 0;
RogueCallbackInfo  Rogue_on_begin_gc;
RogueCallbackInfo  Rogue_on_end_gc;
char               RogueDebugTrace::buffer[120];

//-----------------------------------------------------------------------------
//  RogueDebugTrace
//-----------------------------------------------------------------------------
RogueDebugTrace::RogueDebugTrace( const char* method_signature, const char* filename, int line )
  : method_signature(method_signature), filename(filename), line(line), previous_trace(0)
{
  previous_trace = Rogue_call_stack;
  Rogue_call_stack = this;
}

RogueDebugTrace::~RogueDebugTrace()
{
  Rogue_call_stack = previous_trace;
}

int RogueDebugTrace::count()
{
  int n = 1;
  RogueDebugTrace* current = previous_trace;
  while (current)
  {
    ++n;
    current = current->previous_trace;
  }
  return n;
}

char* RogueDebugTrace::to_c_string()
{
  sprintf( buffer, "[%s %s:%d]", method_signature, filename, line );
  return buffer;
}

//-----------------------------------------------------------------------------
//  RogueType
//-----------------------------------------------------------------------------
RogueArray* RogueType_create_array( int count, int element_size, bool is_reference_array )
{
  if (count < 0) count = 0;
  int data_size  = count * element_size;
  int total_size = sizeof(RogueArray) + data_size;

  RogueArray* array = (RogueArray*) RogueAllocator_allocate_object( RogueTypeArray->allocator, RogueTypeArray, total_size );

  memset( array->bytes, 0, data_size );
  array->count = count;
  array->element_size = element_size;
  array->is_reference_array = is_reference_array;

  return array;
}

RogueTypeInfo* RogueType_type_info( RogueType* THIS )
{
  if ( !THIS->type_info )
  {
    THIS->type_info = RogueTypeInfo__init__Int32_String( (RogueTypeInfo*)ROGUE_CREATE_OBJECT(TypeInfo),
        THIS->index, Rogue_literal_strings[ THIS->name_index ] );
  }

  return THIS->type_info;
}

RogueObject* RogueType_create_object( RogueType* THIS, RogueInt32 size )
{
  ROGUE_DEF_LOCAL_REF_NULL(RogueObject*, obj);
  RogueInitFn  fn;

  obj = RogueAllocator_allocate_object( THIS->allocator, THIS, size ? size : THIS->object_size );

  if ((fn = THIS->init_object_fn)) return fn( obj );
  else                             return obj;
}

bool RogueType_name_equals( RogueType* THIS, const char* name )
{
  // For debugging purposes
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if ( !st ) return false;

  return (0 == strcmp((char*)st->utf8,name));
}

void RogueType_print_name( RogueType* THIS )
{
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if (st)
  {
    printf( "%s", st->utf8 );
  }
}

RogueType* RogueType_retire( RogueType* THIS )
{
  if (THIS->base_types)
  {
#if !ROGUE_GC_MODE_BOEHM
    delete [] THIS->base_types;
#endif
    THIS->base_types = 0;
    THIS->base_type_count = 0;
  }

  return THIS;
}

RogueObject* RogueType_singleton( RogueType* THIS )
{
  RogueInitFn fn;

  if (THIS->_singleton) return THIS->_singleton;

  // NOTE: _singleton must be assigned before calling init_object()
  // so we can't just call RogueType_create_object().
  THIS->_singleton = RogueAllocator_allocate_object( THIS->allocator, THIS, THIS->object_size );

  if ((fn = THIS->init_object_fn)) THIS->_singleton = fn( THIS->_singleton );

  if ((fn = THIS->init_fn)) return fn( THIS->_singleton );
  else                      return THIS->_singleton;

  return THIS->_singleton;
}

//-----------------------------------------------------------------------------
//  RogueObject
//-----------------------------------------------------------------------------
RogueObject* RogueObject_as( RogueObject* THIS, RogueType* specialized_type )
{
  if (RogueObject_instance_of(THIS,specialized_type)) return THIS;
  return 0;
}

RogueLogical RogueObject_instance_of( RogueObject* THIS, RogueType* ancestor_type )
{
  RogueType* this_type;

  if ( !THIS )
  {
    return false;
  }

  this_type = THIS->type;
  if (this_type == ancestor_type)
  {
    return true;
  }

  int count = this_type->base_type_count;
  RogueType** base_type_ptr = this_type->base_types - 1;
  while (--count >= 0)
  {
    if (ancestor_type == *(++base_type_ptr))
    {
      return true;
    }
  }

  return false;
}

void* RogueObject_retain( RogueObject* THIS )
{
  ROGUE_INCREF(THIS);
  return THIS;
}

void* RogueObject_release( RogueObject* THIS )
{
  ROGUE_DECREF(THIS);
  return THIS;
}

RogueString* RogueObject_to_string( RogueObject* THIS )
{
  RogueToStringFn fn = THIS->type->to_string_fn;
  if (fn) return fn( THIS );

  return Rogue_literal_strings[ THIS->type->name_index ];
}

void RogueObject_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueString_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueArray_trace( void* obj )
{
  int count;
  RogueObject** src;
  RogueArray* array = (RogueArray*) obj;

  if ( !array || array->object_size < 0 ) return;
  array->object_size = ~array->object_size;

  if ( !array->is_reference_array ) return;

  count = array->count;
  src = array->objects + count;
  while (--count >= 0)
  {
    RogueObject* cur = *(--src);
    if (cur && cur->object_size >= 0)
    {
      cur->type->trace_fn( cur );
    }
  }
}

//-----------------------------------------------------------------------------
//  RogueString
//-----------------------------------------------------------------------------
RogueString* RogueString_create_with_byte_count( int byte_count )
{
  if (byte_count < 0) byte_count = 0;

  int total_size = sizeof(RogueString) + (byte_count+1);

  RogueString* st = (RogueString*) RogueAllocator_allocate_object( RogueTypeString->allocator, RogueTypeString, total_size );
  st->byte_count = byte_count;

  return st;
}

RogueString* RogueString_create_from_utf8( const char* utf8, int count )
{
  if (count == -1) count = (int) strlen( utf8 );

  RogueString* st = RogueString_create_with_byte_count( count );
  memcpy( st->utf8, utf8, count );
  return RogueString_validate( st );
}

RogueString* RogueString_create_from_characters( RogueCharacter_List* characters )
{
  if ( !characters ) return RogueString_create_with_byte_count(0);

  RogueCharacter* data = characters->data->characters;
  int count = characters->count;
  int utf8_count = 0;
  for (int i=count; --i>=0; )
  {
    RogueCharacter ch = data[i];
    if (ch <= 0x7F)         ++utf8_count;
    else if (ch <= 0x7FF)   utf8_count += 2;
    else if (ch <= 0xFFFF)  utf8_count += 3;
    else                    utf8_count += 4;
  }

  RogueString* result = RogueString_create_with_byte_count( utf8_count );
  RogueByte*   dest = result->utf8;
  for (int i=0; i<count; ++i)
  {
    RogueCharacter ch = data[i];
    if (ch <= 0x7F)
    {
      *(dest++) = (RogueByte) ch;
    }
    else if (ch <= 0x7FF)
    {
      dest[0] = (RogueByte) (0xC0 | ((ch >> 6) & 0x1F));
      dest[1] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 2;
    }
    else if (ch <= 0xFFFF)
    {
      dest[0] = (RogueByte) (0xE0 | ((ch >> 12) & 0xF));
      dest[1] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[2] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 3;
    }
    else
    {
      dest[0] = (RogueByte) (0xF0 | ((ch >> 18) & 0x7));
      dest[1] = (RogueByte) (0x80 | ((ch >> 12) & 0x3F));
      dest[2] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[3] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 4;
    }
  }

  result->character_count = count;

  return RogueString_validate( result );
}

void RogueString_print_string( RogueString* st )
{
  if (st)
  {
    RogueString_print_utf8( st->utf8, st->byte_count );
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_characters( RogueCharacter* characters, int count )
{
  if (characters)
  {
    RogueCharacter* src = characters - 1;
    while (--count >= 0)
    {
      int ch = *(++src);

      if (ch < 0x80)
      {
        // %0xxxxxxx
        putchar( ch );
      }
      else if (ch < 0x800)
      {
        // %110xxxxx 10xxxxxx
        putchar( ((ch >> 6) & 0x1f) | 0xc0 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else if (ch <= 0xFFFF)
      {
        // %1110xxxx 10xxxxxx 10xxxxxx
        putchar( ((ch >> 12) & 15) | 0xe0 );
        putchar( ((ch >> 6) & 0x3f) | 0x80 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else
      {
        // Assume 21-bit
        // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
        putchar( 0xf0 | ((ch>>18) & 7) );
        putchar( 0x80 | ((ch>>12) & 0x3f) );
        putchar( 0x80 | ((ch>>6)  & 0x3f) );
        putchar( (ch & 0x3f) | 0x80 );
      }
    }
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_utf8( RogueByte* utf8, int count )
{
  --utf8;
  while (--count >= 0)
  {
    putchar( *(++utf8) );
  }
}

RogueCharacter RogueString_character_at( RogueString* THIS, int index )
{
  if (THIS->is_ascii) return (RogueCharacter) THIS->utf8[ index ];

  RogueInt32 offset = RogueString_set_cursor( THIS, index );
  RogueByte* utf8 = THIS->utf8;

  RogueCharacter ch = utf8[ offset ];
  if (ch & 0x80)
  {
    if (ch & 0x20)
    {
      if (ch & 0x10)
      {
        return ((ch&7)<<18)
            | ((utf8[offset+1] & 0x3F) << 12)
            | ((utf8[offset+2] & 0x3F) << 6)
            | (utf8[offset+3] & 0x3F);
      }
      else
      {
        return ((ch&15)<<12)
            | ((utf8[offset+1] & 0x3F) << 6)
            | (utf8[offset+2] & 0x3F);
      }
    }
    else
    {
      return ((ch&31)<<6)
          | (utf8[offset+1] & 0x3F);
    }
  }
  else
  {
    return ch;
  }
}

RogueInt32 RogueString_set_cursor( RogueString* THIS, int index )
{
  // Sets this string's cursor_offset and cursor_index and returns cursor_offset.
  if (THIS->is_ascii)
  {
    return THIS->cursor_offset = THIS->cursor_index = index;
  }

  RogueByte* utf8 = THIS->utf8;

  RogueInt32 c_offset;
  RogueInt32 c_index;
  if (index == 0)
  {
    THIS->cursor_index = 0;
    return THIS->cursor_offset = 0;
  }
  else if (index >= THIS->character_count - 1)
  {
    c_offset = THIS->byte_count;
    c_index = THIS->character_count;
  }
  else
  {
    c_offset  = THIS->cursor_offset;
    c_index = THIS->cursor_index;
  }

  while (c_index < index)
  {
    while ((utf8[++c_offset] & 0xC0) == 0x80) {}
    ++c_index;
  }

  while (c_index > index)
  {
    while ((utf8[--c_offset] & 0xC0) == 0x80) {}
    --c_index;
  }

  THIS->cursor_index = c_index;
  return THIS->cursor_offset = c_offset;
}

RogueString* RogueString_validate( RogueString* THIS )
{
  // Trims any invalid UTF-8, counts the number of characters, and sets the hash code
  THIS->is_ascii = 1;  // assumption

  int character_count = 0;
  int byte_count = THIS->byte_count;
  int i;
  RogueByte* utf8 = THIS->utf8;
  for (i=0; i<byte_count; ++character_count)
  {
    int b = utf8[ i ];
    if (b & 0x80)
    {
      THIS->is_ascii = 0;
      if ( !(b & 0x40) ) { break;}  // invalid UTF-8

      if (b & 0x20)
      {
        if (b & 0x10)
        {
          // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
          if (b & 0x08) { break;}
          if (i + 4 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)
              || ((utf8[i+3] & 0xC0) != 0x80)) { break;}
          i += 4;
        }
        else
        {
          // %1110xxxx 10xxxxxx 10xxxxxx
          if (i + 3 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)) { break;}
          i += 3;
        }
      }
      else
      {
        // %110x xxxx 10xx xxxx
        if (i + 2 > byte_count || ((utf8[i+1] & 0xC0) != 0x80)) { break; }
        i += 2;
      }
    }
    else
    {
      ++i;
    }
  }

  if (i != byte_count)
  {
    printf( "*** RogueString validation error - invalid UTF8 (%d/%d):\n", i, byte_count );
    printf( "%02x\n", utf8[0] );
    printf( "%s\n", utf8 );
    utf8[ i ] = 0;
  }

  THIS->byte_count = i;
  THIS->character_count = character_count;

  int code = 0;
  int len = THIS->byte_count;
  RogueByte* src = THIS->utf8 - 1;
  while (--len >= 0)
  {
    code = ((code<<3) - code) + *(++src);
  }
  THIS->hash_code = code;
  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueArray
//-----------------------------------------------------------------------------
RogueArray* RogueArray_set( RogueArray* THIS, RogueInt32 dest_i1, RogueArray* src_array, RogueInt32 src_i1, RogueInt32 copy_count )
{
  int element_size;
  int dest_i2, src_i2;

  if ( !src_array || dest_i1 >= THIS->count ) return THIS;
  if (THIS->is_reference_array ^ src_array->is_reference_array) return THIS;

  if (copy_count == -1) src_i2 = src_array->count - 1;
  else                  src_i2 = (src_i1 + copy_count) - 1;

  if (dest_i1 < 0)
  {
    src_i1 -= dest_i1;
    dest_i1 = 0;
  }

  if (src_i1 < 0) src_i1 = 0;
  if (src_i2 >= src_array->count) src_i2 = src_array->count - 1;
  if (src_i1 > src_i2) return THIS;

  copy_count = (src_i2 - src_i1) + 1;
  dest_i2 = dest_i1 + (copy_count - 1);
  if (dest_i2 >= THIS->count)
  {
    dest_i2 = (THIS->count - 1);
    copy_count = (dest_i2 - dest_i1) + 1;
  }
  if ( !copy_count ) return THIS;


#if defined(ROGUE_ARC)
  if (THIS != src_array || dest_i1 >= src_i1 + copy_count || (src_i1 + copy_count) <= dest_i1 || dest_i1 < src_i1)
  {
    // no overlap
    RogueObject** src  = src_array->objects + src_i1 - 1;
    RogueObject** dest = THIS->objects + dest_i1 - 1;
    while (--copy_count >= 0)
    {
      RogueObject* src_obj, dest_obj;
      if ((src_obj = *(++src))) ROGUE_INCREF(src_obj);
      if ((dest_obj = *(++dest)) && !(ROGUE_DECREF(dest_obj)))
      {
        // TODO: delete dest_obj
        *dest = src_obj;
      }
    }
  }
  else
  {
    // Copying earlier data to later data; copy in reverse order to
    // avoid accidental overwriting
    if (dest_i1 > src_i1)  // if they're equal then we don't need to copy anything!
    {
      RogueObject** src  = src_array->objects + src_i2 + 1;
      RogueObject** dest = THIS->objects + dest_i2 + 1;
      while (--copy_count >= 0)
      {
        RogueObject* src_obj, dest_obj;
        if ((src_obj = *(--src))) ROGUE_INCREF(src_obj);
        if ((dest_obj = *(--dest)) && !(ROGUE_DECREF(dest_obj)))
        {
          // TODO: delete dest_obj
          *dest = src_obj;
        }
      }
    }
  }
  return THIS;
#endif

  element_size = THIS->element_size;
  RogueByte* src = src_array->bytes + src_i1 * element_size;
  RogueByte* dest = THIS->bytes + (dest_i1 * element_size);
  int copy_bytes = copy_count * element_size;

  if (src == dest) return THIS;

  if (src >= dest + copy_bytes || (src + copy_bytes) <= dest)
  {
    // Copy region does not overlap
    memcpy( dest, src, copy_count * element_size );
  }
  else
  {
    // Copy region overlaps
    memmove( dest, src, copy_count * element_size );
  }

  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueAllocationPage
//-----------------------------------------------------------------------------
RogueAllocationPage* RogueAllocationPage_create( RogueAllocationPage* next_page )
{
  RogueAllocationPage* result = (RogueAllocationPage*) ROGUE_NEW_BYTES(sizeof(RogueAllocationPage));
  result->next_page = next_page;
  result->cursor = result->data;
  result->remaining = ROGUEMM_PAGE_SIZE;
  return result;
}

RogueAllocationPage* RogueAllocationPage_delete( RogueAllocationPage* THIS )
{
  if (THIS) ROGUE_DEL_BYTES( THIS );
  return 0;
};

void* RogueAllocationPage_allocate( RogueAllocationPage* THIS, int size )
{
  // Round size up to multiple of 8.
  if (size > 0) size = (size + 7) & ~7;
  else          size = 8;

  if (size > THIS->remaining) return 0;

  //printf( "Allocating %d bytes from page.\n", size );
  void* result = THIS->cursor;
  THIS->cursor += size;
  THIS->remaining -= size;

  //printf( "%d / %d\n", ROGUEMM_PAGE_SIZE - remaining, ROGUEMM_PAGE_SIZE );
  return result;
}


//-----------------------------------------------------------------------------
//  RogueAllocator
//-----------------------------------------------------------------------------
RogueAllocator* RogueAllocator_create()
{
  RogueAllocator* result = (RogueAllocator*) ROGUE_NEW_BYTES( sizeof(RogueAllocator) );

  memset( result, 0, sizeof(RogueAllocator) );

  return result;
}

RogueAllocator* RogueAllocator_delete( RogueAllocator* THIS )
{
  while (THIS->pages)
  {
    RogueAllocationPage* next_page = THIS->pages->next_page;
    RogueAllocationPage_delete( THIS->pages );
    THIS->pages = next_page;
  }
  return 0;
}

void* RogueAllocator_allocate( RogueAllocator* THIS, int size )
{
#if ROGUE_GC_MODE_AUTO
  Rogue_collect_garbage();
#endif
  if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
  {
    Rogue_allocation_bytes_until_gc -= size;
    void * mem = ROGUE_NEW_BYTES(size);
#if ROGUE_GC_MODE_AUTO
    if (!mem)
    {
      // Try hard!
      Rogue_collect_garbage(true);
      mem = ROGUE_NEW_BYTES(size);
    }
#endif
    return mem;
  }

  size = (size > 0) ? (size + ROGUEMM_GRANULARITY_MASK) & ~ROGUEMM_GRANULARITY_MASK : ROGUEMM_GRANULARITY_SIZE;

  Rogue_allocation_bytes_until_gc -= size;

  int slot;
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, THIS->available_objects[(slot=(size>>ROGUEMM_GRANULARITY_BITS))]);

  if (obj)
  {
    //printf( "found free object\n");
    THIS->available_objects[slot] = obj->next_object;
    return obj;
  }

  // No free objects for requested size.

  // Try allocating a new object from the current page.
  if (THIS->pages )
  {
    obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, size );
    if (obj) return obj;

    // Not enough room on allocation page.  Allocate any smaller blocks
    // we're able to and then move on to a new page.
    int s = slot - 1;
    while (s >= 1)
    {
      obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, s << ROGUEMM_GRANULARITY_BITS );
      if (obj)
      {
        //printf( "free obj size %d\n", (s << ROGUEMM_GRANULARITY_BITS) );
        obj->next_object = THIS->available_objects[s];
        THIS->available_objects[s] = obj;
      }
      else
      {
        --s;
      }
    }
  }

  // New page; this will work for sure.
  THIS->pages = RogueAllocationPage_create( THIS->pages );
  return RogueAllocationPage_allocate( THIS->pages, size );
}

#if ROGUE_GC_MODE_BOEHM
void Rogue_Boehm_Finalizer( void* obj, void* data )
{
  RogueObject* o = (RogueObject*)obj;
  o->type->clean_up_fn(o);
}

RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  // If we had more type information (e.g., whether the data contained
  // references), we could make better decisions here.
  // Also, it seems like we could probably use the small allocator too.
  RogueObject* obj = (RogueObject*)GC_MALLOC( size );
  if (!obj)
  {
    Rogue_collect_garbage( true );
    obj = (RogueObject*)GC_MALLOC( size );
  }
  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  if (of_type->clean_up_fn)
  {
    GC_REGISTER_FINALIZER_IGNORE_SELF( obj, Rogue_Boehm_Finalizer, 0, 0, 0 );
  }

  memset( obj, 0, size );

  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#else
RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, (RogueObject*) RogueAllocator_allocate( THIS, size ));

  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  memset( obj, 0, size );

  if (of_type->clean_up_fn)
  {
    obj->next_object = THIS->objects_requiring_cleanup;
    THIS->objects_requiring_cleanup = obj;
  }
  else
  {
    obj->next_object = THIS->objects;
    THIS->objects = obj;
  }
  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#endif

void* RogueAllocator_free( RogueAllocator* THIS, void* data, int size )
{
  if (data)
  {
    ROGUE_GCDEBUG_STATEMENT(memset(data,0,size));
    if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
    {
      ROGUE_DEL_BYTES( data );
    }
    else
    {
      // Return object to small allocation pool
      RogueObject* obj = (RogueObject*) data;
      int slot = (size + ROGUEMM_GRANULARITY_MASK) >> ROGUEMM_GRANULARITY_BITS;
      if (slot <= 0) slot = 1;
      obj->next_object = THIS->available_objects[slot];
      THIS->available_objects[slot] = obj;
    }
  }

  // Always returns null, allowing a pointer to be freed and assigned null in
  // a single step.
  return 0;
}


void RogueAllocator_free_objects( RogueAllocator* THIS )
{
  RogueObject* objects = THIS->objects;
  while (objects)
  {
    RogueObject* next_object = objects->next_object;
    RogueAllocator_free( THIS, objects, objects->object_size );
    objects = next_object;
  }

  THIS->objects = 0;
}

void RogueAllocator_collect_garbage( RogueAllocator* THIS )
{
  // Global program objects have already been traced through.

  // Trace through all as-yet unreferenced objects that are manually retained.
  RogueObject* cur = THIS->objects;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  cur = THIS->objects_requiring_cleanup;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  // For any unreferenced objects requiring clean-up, we'll:
  //   1.  Reference them and move them to a separate short-term list.
  //   2.  Finish the regular GC.
  //   3.  Call clean_up() on each of them, which may create new
  //       objects (which is why we have to wait until after the GC).
  //   4.  Move them to the list of regular objects.
  cur = THIS->objects_requiring_cleanup;
  RogueObject* unreferenced_clean_up_objects = 0;
  RogueObject* survivors = 0;  // local var for speed
  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      // Referenced.
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      // Unreferenced - go ahead and trace it since we'll call clean_up
      // on it.
      cur->type->trace_fn( cur );
      cur->next_object = unreferenced_clean_up_objects;
      unreferenced_clean_up_objects = cur;
    }
    cur = next_object;
  }
  THIS->objects_requiring_cleanup = survivors;


  // Reset or delete each general object
  cur = THIS->objects;
  THIS->objects = 0;
  survivors = 0;  // local var for speed

  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      ROGUE_GCDEBUG_STATEMENT( printf( "Freeing " ) );
      ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(cur->type) );
      ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", cur ) );
      RogueAllocator_free( THIS, cur, cur->object_size );
    }
    cur = next_object;
  }

  THIS->objects = survivors;


  // Call clean_up() on unreferenced objects requiring cleanup
  // and move them to the general objects list so they'll be deleted
  // the next time they're unreferenced.  Calling clean_up() may
  // create additional objects so THIS->objects may change during a
  // clean_up() call.
  cur = unreferenced_clean_up_objects;
  while (cur)
  {
    RogueObject* next_object = cur->next_object;

    cur->type->clean_up_fn( cur );

    cur->object_size = ~cur->object_size;
    cur->next_object = THIS->objects;
    THIS->objects = cur;

    cur = next_object;
  }
}

void Rogue_print_stack_trace ( bool leading_newline )
{
  RogueDebugTrace* current = Rogue_call_stack;
  if (current && leading_newline) printf( "\n" );
  while (current)
  {
    printf( "%s\n", current->to_c_string() );
    current = current->previous_trace;
  }
  printf("\n");
}

void Rogue_segfault_handler( int signal, siginfo_t *si, void *arg )
{
    if (si->si_addr < (void*)4096)
    {
      // Probably a null pointer dereference.
      printf( "Null reference error (accessing memory at %p)\n",
              si->si_addr );
    }
    else
    {
      if (si->si_code == SEGV_MAPERR)
        printf( "Access to unmapped memory at " );
      else if (si->si_code == SEGV_ACCERR)
        printf( "Access to forbidden memory at " );
      else
        printf( "Unknown segfault accessing " );
      printf("%p\n", si->si_addr);
    }

    Rogue_print_stack_trace( true );

    exit(1);
}

void Rogue_configure_types()
{
  int i;
  int* type_info = Rogue_type_info_table - 1;

  // Install seg fault handler
  struct sigaction sa;

  memset( &sa, 0, sizeof(sa) );
  sigemptyset( &sa.sa_mask );
  sa.sa_sigaction = Rogue_segfault_handler;
  sa.sa_flags     = SA_SIGINFO;

  sigaction( SIGSEGV, &sa, NULL );

  // Initialize allocators
  memset( Rogue_allocators, 0, sizeof(RogueAllocator)*Rogue_allocator_count );

  // Initialize types
  for (i=0; i<Rogue_type_count; ++i)
  {
    int j;
    RogueType* type = &Rogue_types[i];

    memset( type, 0, sizeof(RogueType) );

    type->index = i;
    type->name_index = Rogue_type_name_index_table[i];
    type->object_size = Rogue_object_size_table[i];
    type->allocator = &Rogue_allocators[ *(++type_info) ];
    type->methods = Rogue_dynamic_method_table + *(++type_info);
    type->base_type_count = *(++type_info);
    if (type->base_type_count)
    {
#if ROGUE_GC_MODE_BOEHM
      type->base_types = new (NoGC) RogueType*[ type->base_type_count ];
#else
      type->base_types = new RogueType*[ type->base_type_count ];
#endif
      for (j=0; j<type->base_type_count; ++j)
      {
        type->base_types[j] = &Rogue_types[ *(++type_info) ];
      }
    }
    type->trace_fn = Rogue_trace_fn_table[i];
    type->init_object_fn = Rogue_init_object_fn_table[i];
    type->init_fn        = Rogue_init_fn_table[i];
    type->clean_up_fn    = Rogue_clean_up_fn_table[i];
    type->to_string_fn   = Rogue_to_string_fn_table[i];
  }
}

#if ROGUE_GC_MODE_BOEHM
static GC_ToggleRefStatus Rogue_Boehm_ToggleRefStatus( void * o )
{
  RogueObject* obj = (RogueObject*)o;
  if (obj->reference_count > 0) return GC_TOGGLE_REF_STRONG;
  return GC_TOGGLE_REF_DROP;
}

static void Rogue_Boehm_on_collection_event( GC_EventType event )
{
  if (event == GC_EVENT_START)
  {
    Rogue_on_begin_gc.call();
  }
  else if (event == GC_EVENT_END)
  {
    Rogue_on_end_gc.call();
  }
}

void Rogue_configure_gc()
{
  // Initialize Boehm collector
  //GC_set_finalize_on_demand(0);
  GC_set_toggleref_func(Rogue_Boehm_ToggleRefStatus);
  GC_set_on_collection_event(Rogue_Boehm_on_collection_event);
  //GC_set_all_interior_pointers(0);
  GC_INIT();
}
#else
void Rogue_configure_gc()
{
}
#endif

#if ROGUE_GC_MODE_BOEHM
bool Rogue_collect_garbage( bool forced )
{
  if (forced)
  {
    GC_gcollect();
    return true;
  }

  return GC_collect_a_little();
}
#else
bool Rogue_collect_garbage( bool forced )
{
  int i;

  if (Rogue_allocation_bytes_until_gc > 0 && !forced) return false;

  Rogue_on_begin_gc.call();

//printf( "GC %d\n", Rogue_allocation_bytes_until_gc );
  Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;

  Rogue_trace();

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_collect_garbage( &Rogue_allocators[i] );
  }

  Rogue_on_end_gc.call();

  return true;
}
#endif

void Rogue_quit()
{
  int i;

  if ( !Rogue_configured ) return;
  Rogue_configured = 0;

  RogueGlobal__call_exit_functions( (RogueClassGlobal*) ROGUE_SINGLETON(Global) );

  // Give a few GC's to allow objects requiring clean-up to do so.
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_free_objects( &Rogue_allocators[i] );
  }

  for (i=0; i<Rogue_type_count; ++i)
  {
    RogueType_retire( &Rogue_types[i] );
  }
}

#if ROGUE_GC_MODE_BOEHM

void Rogue_Boehm_IncRef (RogueObject* o)
{
  ++o->reference_count;
  if (o->reference_count == 1)
  {
    GC_toggleref_add(o, 1);
  }
}
void Rogue_Boehm_DecRef (RogueObject* o)
{
  --o->reference_count;
  if (o->reference_count < 0)
  {
    o->reference_count = 0;
  }
}
#endif


//-----------------------------------------------------------------------------
//  Exception handling
//-----------------------------------------------------------------------------
void Rogue_terminate_handler ()
{
  if (Rogue_error_object && Rogue_error_object->type)
  {
    printf( "*** Uncaught " );
    RogueType_print_name( Rogue_error_object->type );
    printf( ":\n\n" );

    RogueString* message = RogueObject_to_string( Rogue_error_object );
    if (message)
    {
      printf( "%s\n\n", message->utf8 );
    }

    RogueStackTrace__print( ((RogueClassException*)Rogue_error_object)->stack_trace );
  }
  else
  {
    printf( "Uncaught error.\n" );
  }
  exit(1);
}
typedef RogueObject*(*ROGUEM0)(RogueObject*);
typedef RogueString*(*ROGUEM1)(RogueClassException*);
typedef RogueClassException*(*ROGUEM2)(RogueClassException*,RogueString*);
typedef RogueClassException*(*ROGUEM3)(RogueClassException*);
typedef RogueString*(*ROGUEM4)(RogueObject*);
typedef RogueString*(*ROGUEM5)(RogueClassStackTrace*);
typedef RogueString*(*ROGUEM6)(RogueTypeInfo*);
typedef RogueStringBuilder*(*ROGUEM7)(RogueStringBuilder*);
typedef RogueString*(*ROGUEM8)(RogueStringBuilder*);
typedef RogueByte_List*(*ROGUEM9)(RogueByte_List*);
typedef RogueString*(*ROGUEM10)(RogueByte_List*);
typedef RogueString*(*ROGUEM11)(RogueClassGenericList*);
typedef RogueClassGenericList*(*ROGUEM12)(RogueClassGenericList*);
typedef RogueCharacter_List*(*ROGUEM13)(RogueCharacter_List*);
typedef RogueString*(*ROGUEM14)(RogueCharacter_List*);
typedef RogueClassTable_String_String_*(*ROGUEM15)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM16)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM17)(RogueClassTable_String_String_*,RogueString*);
typedef RogueString_List*(*ROGUEM18)(RogueString_List*);
typedef RogueString*(*ROGUEM19)(RogueString_List*);
typedef RogueString*(*ROGUEM20)(RogueArray*);
typedef RogueString*(*ROGUEM21)(RogueClassStringReader*);
typedef RogueLogical(*ROGUEM22)(RogueClassStringReader*);
typedef RogueCharacter(*ROGUEM23)(RogueClassStringReader*);
typedef RogueClassGlobal*(*ROGUEM24)(RogueClassGlobal*);
typedef RogueString*(*ROGUEM25)(RogueClassGlobal*);
typedef RogueClassGlobal*(*ROGUEM26)(RogueClassGlobal*,RogueStringBuilder*);
typedef RogueFunction___List*(*ROGUEM27)(RogueFunction___List*);
typedef RogueString*(*ROGUEM28)(RogueFunction___List*);
typedef RogueString*(*ROGUEM29)(RogueClassFunction__*);
typedef void(*ROGUEM30)(RogueClassFunction__*);
typedef RogueClassFunction__*(*ROGUEM31)(RogueClassFunction__*);
typedef RogueString*(*ROGUEM32)(RogueClassFunction_81*);
typedef void(*ROGUEM33)(RogueClassFunction_81*);
typedef RogueClassFunction_81*(*ROGUEM34)(RogueClassFunction_81*);
typedef RogueString*(*ROGUEM35)(RogueClassRogueC*);
typedef RogueString*(*ROGUEM36)(RogueClassConsole*);
typedef RogueClassConsole*(*ROGUEM37)(RogueClassConsole*,RogueStringBuilder*);
typedef RogueString*(*ROGUEM38)(RogueClassProgram*);
typedef RogueTemplate_List*(*ROGUEM39)(RogueTemplate_List*);
typedef RogueString*(*ROGUEM40)(RogueTemplate_List*);
typedef RogueString*(*ROGUEM41)(RogueClassTemplate*);
typedef RogueClassTable_String_Template_*(*ROGUEM42)(RogueClassTable_String_Template_*);
typedef RogueString*(*ROGUEM43)(RogueClassTable_String_Template_*);
typedef RogueClassTable_String_Augment_List_*(*ROGUEM44)(RogueClassTable_String_Augment_List_*);
typedef RogueString*(*ROGUEM45)(RogueClassTable_String_Augment_List_*);
typedef RogueString*(*ROGUEM46)(RogueClassMethod*);
typedef RogueProperty_List*(*ROGUEM47)(RogueProperty_List*);
typedef RogueString*(*ROGUEM48)(RogueProperty_List*);
typedef RogueString*(*ROGUEM49)(RogueClassProperty*);
typedef RogueClassTable_String_Method_List_*(*ROGUEM50)(RogueClassTable_String_Method_List_*);
typedef RogueString*(*ROGUEM51)(RogueClassTable_String_Method_List_*);
typedef RogueType_List*(*ROGUEM52)(RogueType_List*);
typedef RogueString*(*ROGUEM53)(RogueType_List*);
typedef RogueString*(*ROGUEM54)(RogueClassType*);
typedef RogueClassTable_String_Type_*(*ROGUEM55)(RogueClassTable_String_Type_*);
typedef RogueString*(*ROGUEM56)(RogueClassTable_String_Type_*);
typedef RogueClassTable_String_Int32_*(*ROGUEM57)(RogueClassTable_String_Int32_*);
typedef RogueString*(*ROGUEM58)(RogueClassTable_String_Int32_*);
typedef RogueClassTable_String_String_List_*(*ROGUEM59)(RogueClassTable_String_String_List_*);
typedef RogueString*(*ROGUEM60)(RogueClassTable_String_String_List_*);
typedef RogueString*(*ROGUEM61)(RogueClassTableEntry_String_Int32_*);
typedef RogueClassTable_Int32_Template_*(*ROGUEM62)(RogueClassTable_Int32_Template_*);
typedef RogueString*(*ROGUEM63)(RogueClassTable_Int32_Template_*);
typedef RogueClassAttributes*(*ROGUEM64)(RogueClassAttributes*);
typedef RogueString*(*ROGUEM65)(RogueClassAttributes*);
typedef RogueToken_List*(*ROGUEM66)(RogueToken_List*);
typedef RogueString*(*ROGUEM67)(RogueToken_List*);
typedef RogueString*(*ROGUEM68)(RogueClassToken*);
typedef RogueCharacter(*ROGUEM69)(RogueClassToken*);
typedef RogueInt32(*ROGUEM70)(RogueClassToken*);
typedef RogueInt64(*ROGUEM71)(RogueClassToken*);
typedef RogueReal64(*ROGUEM72)(RogueClassToken*);
typedef RogueClassType*(*ROGUEM73)(RogueClassToken*);
typedef RogueClassToken*(*ROGUEM74)(RogueClassToken*);
typedef RogueString*(*ROGUEM75)(RogueClassError*);
typedef RogueClassError*(*ROGUEM76)(RogueClassError*);
typedef RogueString*(*ROGUEM77)(RogueClassRogueError*);
typedef RogueClassRogueError*(*ROGUEM78)(RogueClassRogueError*);
typedef RogueString*(*ROGUEM79)(RogueClassCmdAccess*);
typedef void(*ROGUEM80)(RogueClassCmd*,RogueClassCmdStatementList*);
typedef RogueClassCmd*(*ROGUEM81)(RogueClassCmd*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM82)(RogueClassCmd*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM83)(RogueClassCmdAccess*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM84)(RogueClassCmd*,RogueClassType*);
typedef void(*ROGUEM85)(RogueClassCmdAccess*,RogueClassVisitor*);
typedef void(*ROGUEM86)(RogueClassCmd*,RogueClassScope*);
typedef RogueLogical(*ROGUEM87)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM88)(RogueClassCmdAccess*,RogueClassScope*);
typedef void(*ROGUEM89)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM90)(RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM91)(RogueClassCmdAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM92)(RogueClassCmdAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM93)(RogueClassCmd*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM94)(RogueClassCmdAccess*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM95)(RogueClassCmdAccess*);
typedef void(*ROGUEM96)(RogueClassCmdAccess*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAccess*(*ROGUEM97)(RogueClassCmdAccess*);
typedef RogueString*(*ROGUEM98)(RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM99)(RogueClassCmd*,RogueClassCloneArgs*);
typedef void(*ROGUEM100)(RogueClassCmd*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM101)(RogueClassCmd*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM102)(RogueClassCmd*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM103)(RogueClassCmd*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef void(*ROGUEM104)(RogueClassCmd*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM105)(RogueClassCmd*);
typedef RogueClassCmdArgs*(*ROGUEM106)(RogueClassCmdArgs*);
typedef RogueString*(*ROGUEM107)(RogueCmd_List*);
typedef RogueString*(*ROGUEM108)(RogueClassCmdArgs*);
typedef RogueClassCmdArgs*(*ROGUEM109)(RogueClassCmdArgs*,RogueInt32);
typedef RogueCmd_List*(*ROGUEM110)(RogueCmd_List*);
typedef RogueCmd_List*(*ROGUEM111)(RogueCmd_List*,RogueInt32);
typedef RogueCmdNamedArg_List*(*ROGUEM112)(RogueCmdNamedArg_List*);
typedef RogueString*(*ROGUEM113)(RogueCmdNamedArg_List*);
typedef RogueString*(*ROGUEM114)(RogueClassCmdNamedArg*);
typedef RogueClassCmdNamedArg*(*ROGUEM115)(RogueClassCmdNamedArg*,RogueClassCloneArgs*);
typedef void(*ROGUEM116)(RogueClassCmdNamedArg*,RogueClassVisitor*);
typedef RogueClassCmdNamedArg*(*ROGUEM117)(RogueClassCmdNamedArg*);
typedef RogueClassCmdStatementList*(*ROGUEM118)(RogueClassCmdStatementList*);
typedef RogueString*(*ROGUEM119)(RogueClassCmdStatementList*);
typedef RogueClassCmdStatementList*(*ROGUEM120)(RogueClassCmdStatementList*,RogueInt32);
typedef RogueString*(*ROGUEM121)(RogueClassCmdLabel*);
typedef RogueClassCmdLabel*(*ROGUEM122)(RogueClassCmdLabel*,RogueClassCloneArgs*);
typedef void(*ROGUEM123)(RogueClassCmdLabel*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM124)(RogueClassCmdLabel*);
typedef RogueClassCmd*(*ROGUEM125)(RogueClassCmdLabel*,RogueClassScope*);
typedef void(*ROGUEM126)(RogueClassCmdLabel*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLabel*(*ROGUEM127)(RogueClassCmdLabel*);
typedef RogueString*(*ROGUEM128)(RogueClassCmdReturn*);
typedef RogueClassCmd*(*ROGUEM129)(RogueClassCmdReturn*,RogueClassCloneArgs*);
typedef void(*ROGUEM130)(RogueClassCmdReturn*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM131)(RogueClassCmdReturn*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM132)(RogueClassCmdReturn*);
typedef void(*ROGUEM133)(RogueClassCmdReturn*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReturn*(*ROGUEM134)(RogueClassCmdReturn*);
typedef RogueString*(*ROGUEM135)(RogueClassCmdStatement*);
typedef void(*ROGUEM136)(RogueClassCmdStatement*,RogueClassVisitor*);
typedef RogueClassCmdStatement*(*ROGUEM137)(RogueClassCmdStatement*);
typedef RogueString*(*ROGUEM138)(RogueClassTokenType*);
typedef RogueClassToken*(*ROGUEM139)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM140)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM141)(RogueClassTokenType*,RogueClassToken*,RogueString*);
typedef RogueLogical(*ROGUEM142)(RogueClassTokenType*);
typedef RogueClassTokenType*(*ROGUEM143)(RogueClassTokenType*);
typedef RogueString*(*ROGUEM144)(RogueClassScope*);
typedef RogueMethod_List*(*ROGUEM145)(RogueMethod_List*);
typedef RogueString*(*ROGUEM146)(RogueMethod_List*);
typedef RoguePlugin_List*(*ROGUEM147)(RoguePlugin_List*);
typedef RogueString*(*ROGUEM148)(RoguePlugin_List*);
typedef RogueString*(*ROGUEM149)(RogueClassPlugin*);
typedef RogueString*(*ROGUEM150)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueLogical(*ROGUEM151)(RogueClassFunction_Type_RETURNSLogical*,RogueClassType*);
typedef RogueClassFunction_Type_RETURNSLogical*(*ROGUEM152)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueString*(*ROGUEM153)(RogueClassFunction_229*);
typedef RogueLogical(*ROGUEM154)(RogueClassFunction_229*,RogueClassType*);
typedef RogueClassFunction_229*(*ROGUEM155)(RogueClassFunction_229*);
typedef RogueString*(*ROGUEM156)(RogueClassFunction_230*);
typedef RogueLogical(*ROGUEM157)(RogueClassFunction_230*,RogueClassType*);
typedef RogueClassFunction_230*(*ROGUEM158)(RogueClassFunction_230*);
typedef RogueString*(*ROGUEM159)(RogueClassCPPWriter*);
typedef RogueClassTable_String_Method_*(*ROGUEM160)(RogueClassTable_String_Method_*);
typedef RogueString*(*ROGUEM161)(RogueClassTable_String_Method_*);
typedef RogueLocal_List*(*ROGUEM162)(RogueLocal_List*);
typedef RogueString*(*ROGUEM163)(RogueLocal_List*);
typedef RogueString*(*ROGUEM164)(RogueClassLocal*);
typedef RogueInt32_List*(*ROGUEM165)(RogueInt32_List*);
typedef RogueString*(*ROGUEM166)(RogueInt32_List*);
typedef RogueString*(*ROGUEM167)(RogueClassMath*);
typedef RogueString*(*ROGUEM168)(RogueClassSystem*);
typedef RogueClassTable_String_TypeInfo_*(*ROGUEM169)(RogueClassTable_String_TypeInfo_*);
typedef RogueString*(*ROGUEM170)(RogueClassTable_String_TypeInfo_*);
typedef RogueTableEntry_String_String__List*(*ROGUEM171)(RogueTableEntry_String_String__List*);
typedef RogueString*(*ROGUEM172)(RogueTableEntry_String_String__List*);
typedef RogueString*(*ROGUEM173)(RogueClassTableEntry_String_String_*);
typedef RogueClassTable_String_Logical_*(*ROGUEM174)(RogueClassTable_String_Logical_*);
typedef RogueString*(*ROGUEM175)(RogueClassTable_String_Logical_*);
typedef RogueParser_List*(*ROGUEM176)(RogueParser_List*);
typedef RogueString*(*ROGUEM177)(RogueParser_List*);
typedef RogueString*(*ROGUEM178)(RogueClassParser*);
typedef RogueClassTable_String_ParseReader_*(*ROGUEM179)(RogueClassTable_String_ParseReader_*);
typedef RogueString*(*ROGUEM180)(RogueClassTable_String_ParseReader_*);
typedef RogueString*(*ROGUEM181)(RogueClassStopwatch*);
typedef RogueString*(*ROGUEM182)(RogueClassFile*);
typedef RogueString*(*ROGUEM183)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmdMakeRequisite*(*ROGUEM184)(RogueClassCmdMakeRequisite*,RogueClassCloneArgs*);
typedef void(*ROGUEM185)(RogueClassCmdMakeRequisite*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM186)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmd*(*ROGUEM187)(RogueClassCmdMakeRequisite*,RogueClassScope*);
typedef void(*ROGUEM188)(RogueClassCmdMakeRequisite*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdMakeRequisite*(*ROGUEM189)(RogueClassCmdMakeRequisite*);
typedef RogueString*(*ROGUEM190)(RogueClassLineReader*);
typedef RogueLogical(*ROGUEM191)(RogueClassLineReader*);
typedef RogueString*(*ROGUEM192)(RogueClassFunction_545*);
typedef RogueLogical(*ROGUEM193)(RogueClassFunction_545*);
typedef RogueClassFunction_545*(*ROGUEM194)(RogueClassFunction_545*);
typedef RogueString*(*ROGUEM195)(RogueClassFunction__RETURNSLogical*);
typedef RogueLogical(*ROGUEM196)(RogueClassFunction__RETURNSLogical*);
typedef RogueClassFunction__RETURNSLogical*(*ROGUEM197)(RogueClassFunction__RETURNSLogical*);
typedef RogueTypeParameter_List*(*ROGUEM198)(RogueTypeParameter_List*);
typedef RogueString*(*ROGUEM199)(RogueTypeParameter_List*);
typedef RogueString*(*ROGUEM200)(RogueClassTypeParameter*);
typedef RogueAugment_List*(*ROGUEM201)(RogueAugment_List*);
typedef RogueString*(*ROGUEM202)(RogueAugment_List*);
typedef RogueString*(*ROGUEM203)(RogueClassAugment*);
typedef RogueClassTable_String_TokenType_*(*ROGUEM204)(RogueClassTable_String_TokenType_*);
typedef RogueString*(*ROGUEM205)(RogueClassTable_String_TokenType_*);
typedef RogueString*(*ROGUEM206)(RogueClassLiteralCharacterToken*);
typedef RogueCharacter(*ROGUEM207)(RogueClassLiteralCharacterToken*);
typedef RogueClassLiteralCharacterToken*(*ROGUEM208)(RogueClassLiteralCharacterToken*);
typedef RogueString*(*ROGUEM209)(RogueClassLiteralInt64Token*);
typedef RogueInt32(*ROGUEM210)(RogueClassLiteralInt64Token*);
typedef RogueInt64(*ROGUEM211)(RogueClassLiteralInt64Token*);
typedef RogueReal64(*ROGUEM212)(RogueClassLiteralInt64Token*);
typedef RogueClassLiteralInt64Token*(*ROGUEM213)(RogueClassLiteralInt64Token*);
typedef RogueString*(*ROGUEM214)(RogueClassLiteralInt32Token*);
typedef RogueInt32(*ROGUEM215)(RogueClassLiteralInt32Token*);
typedef RogueReal64(*ROGUEM216)(RogueClassLiteralInt32Token*);
typedef RogueClassLiteralInt32Token*(*ROGUEM217)(RogueClassLiteralInt32Token*);
typedef RogueString*(*ROGUEM218)(RogueClassLiteralReal64Token*);
typedef RogueInt32(*ROGUEM219)(RogueClassLiteralReal64Token*);
typedef RogueReal64(*ROGUEM220)(RogueClassLiteralReal64Token*);
typedef RogueClassLiteralReal64Token*(*ROGUEM221)(RogueClassLiteralReal64Token*);
typedef RogueString*(*ROGUEM222)(RogueClassStringDataToken*);
typedef RogueClassStringDataToken*(*ROGUEM223)(RogueClassStringDataToken*);
typedef RogueClassTable_String_TypeSpecializer_*(*ROGUEM224)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM225)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM226)(RogueClassTypeSpecializer*);
typedef RogueTypeSpecializer_List*(*ROGUEM227)(RogueTypeSpecializer_List*);
typedef RogueString*(*ROGUEM228)(RogueTypeSpecializer_List*);
typedef RogueTableEntry_String_Template__List*(*ROGUEM229)(RogueTableEntry_String_Template__List*);
typedef RogueString*(*ROGUEM230)(RogueTableEntry_String_Template__List*);
typedef RogueString*(*ROGUEM231)(RogueClassTableEntry_String_Template_*);
typedef RogueTableEntry_String_Augment_List__List*(*ROGUEM232)(RogueTableEntry_String_Augment_List__List*);
typedef RogueString*(*ROGUEM233)(RogueTableEntry_String_Augment_List__List*);
typedef RogueString*(*ROGUEM234)(RogueClassTableEntry_String_Augment_List_*);
typedef RogueCmdLabel_List*(*ROGUEM235)(RogueCmdLabel_List*);
typedef RogueString*(*ROGUEM236)(RogueCmdLabel_List*);
typedef RogueClassTable_String_CmdLabel_*(*ROGUEM237)(RogueClassTable_String_CmdLabel_*);
typedef RogueString*(*ROGUEM238)(RogueClassTable_String_CmdLabel_*);
typedef RogueString*(*ROGUEM239)(RogueClassMethodTemplate*);
typedef RogueString*(*ROGUEM240)(RogueClassCloneArgs*);
typedef RogueClassCmdLabel*(*ROGUEM241)(RogueClassCloneArgs*,RogueClassCmdLabel*);
typedef RogueClassCloneArgs*(*ROGUEM242)(RogueClassCloneArgs*);
typedef RogueString*(*ROGUEM243)(RogueClassCloneMethodArgs*);
typedef RogueClassCmdLabel*(*ROGUEM244)(RogueClassCloneMethodArgs*,RogueClassCmdLabel*);
typedef RogueClassCloneMethodArgs*(*ROGUEM245)(RogueClassCloneMethodArgs*);
typedef RogueString*(*ROGUEM246)(RogueClassVisitor*);
typedef void(*ROGUEM247)(RogueClassVisitor*,RogueClassType*);
typedef void(*ROGUEM248)(RogueClassVisitor*,RogueClassMethod*);
typedef void(*ROGUEM249)(RogueClassVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM250)(RogueClassVisitor*,RogueClassCmdThisContext*);
typedef void(*ROGUEM251)(RogueClassVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassVisitor*(*ROGUEM252)(RogueClassVisitor*);
typedef RogueString*(*ROGUEM253)(RogueClassCmdAssert*);
typedef RogueClassCmdAssert*(*ROGUEM254)(RogueClassCmdAssert*,RogueClassCloneArgs*);
typedef void(*ROGUEM255)(RogueClassCmdAssert*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM256)(RogueClassCmdAssert*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM257)(RogueClassCmdAssert*);
typedef void(*ROGUEM258)(RogueClassCmdAssert*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAssert*(*ROGUEM259)(RogueClassCmdAssert*);
typedef RogueString*(*ROGUEM260)(RogueClassCmdRequire*);
typedef RogueClassCmdRequire*(*ROGUEM261)(RogueClassCmdRequire*,RogueClassCloneArgs*);
typedef void(*ROGUEM262)(RogueClassCmdRequire*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM263)(RogueClassCmdRequire*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM264)(RogueClassCmdRequire*);
typedef void(*ROGUEM265)(RogueClassCmdRequire*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdRequire*(*ROGUEM266)(RogueClassCmdRequire*);
typedef RogueString*(*ROGUEM267)(RogueClassCmdAssign*);
typedef RogueClassCmd*(*ROGUEM268)(RogueClassCmdAssign*,RogueClassCloneArgs*);
typedef void(*ROGUEM269)(RogueClassCmdAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM270)(RogueClassCmdAssign*,RogueClassScope*);
typedef RogueClassCmdAssign*(*ROGUEM271)(RogueClassCmdAssign*);
typedef RogueString*(*ROGUEM272)(RogueClassCmdLocalDeclaration*);
typedef RogueClassCmd*(*ROGUEM273)(RogueClassCmdLocalDeclaration*,RogueClassCloneArgs*);
typedef void(*ROGUEM274)(RogueClassCmdLocalDeclaration*,RogueClassVisitor*);
typedef void(*ROGUEM275)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM276)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef void(*ROGUEM277)(RogueClassCmdLocalDeclaration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLocalDeclaration*(*ROGUEM278)(RogueClassCmdLocalDeclaration*);
typedef RogueString*(*ROGUEM279)(RogueClassCmdBlock*);
typedef RogueClassCmd*(*ROGUEM280)(RogueClassCmdBlock*,RogueClassCloneArgs*);
typedef void(*ROGUEM281)(RogueClassCmdBlock*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM282)(RogueClassCmdBlock*);
typedef RogueClassCmdBlock*(*ROGUEM283)(RogueClassCmdBlock*,RogueClassScope*);
typedef void(*ROGUEM284)(RogueClassCmdBlock*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdBlock*(*ROGUEM285)(RogueClassCmdBlock*);
typedef RogueClassCmd*(*ROGUEM286)(RogueClassCmdControlStructure*,RogueClassCmdControlStructure*);
typedef RogueString*(*ROGUEM287)(RogueClassCmdControlStructure*);
typedef void(*ROGUEM288)(RogueClassCmdControlStructure*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM289)(RogueClassCmdControlStructure*);
typedef RogueClassCmdControlStructure*(*ROGUEM290)(RogueClassCmdControlStructure*);
typedef RogueString*(*ROGUEM291)(RogueClassCmdIf*);
typedef RogueClassCmd*(*ROGUEM292)(RogueClassCmdIf*,RogueClassCloneArgs*);
typedef void(*ROGUEM293)(RogueClassCmdIf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM294)(RogueClassCmdIf*,RogueClassScope*);
typedef void(*ROGUEM295)(RogueClassCmdIf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdIf*(*ROGUEM296)(RogueClassCmdIf*);
typedef RogueString*(*ROGUEM297)(RogueClassCmdSwitch*);
typedef RogueClassCmdSwitch*(*ROGUEM298)(RogueClassCmdSwitch*,RogueClassCloneArgs*);
typedef void(*ROGUEM299)(RogueClassCmdSwitch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM300)(RogueClassCmdSwitch*,RogueClassScope*);
typedef void(*ROGUEM301)(RogueClassCmdSwitch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSwitch*(*ROGUEM302)(RogueClassCmdSwitch*);
typedef RogueString*(*ROGUEM303)(RogueClassCmdWhich*);
typedef RogueClassCmdWhich*(*ROGUEM304)(RogueClassCmdWhich*,RogueClassCloneArgs*);
typedef void(*ROGUEM305)(RogueClassCmdWhich*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM306)(RogueClassCmdWhich*,RogueClassScope*);
typedef RogueClassCmdWhich*(*ROGUEM307)(RogueClassCmdWhich*);
typedef RogueString*(*ROGUEM308)(RogueClassCmdWhichCase*);
typedef RogueClassCmdWhichCase*(*ROGUEM309)(RogueClassCmdWhichCase*,RogueClassCloneArgs*);
typedef void(*ROGUEM310)(RogueClassCmdWhichCase*,RogueClassVisitor*);
typedef RogueClassCmdWhichCase*(*ROGUEM311)(RogueClassCmdWhichCase*);
typedef RogueString*(*ROGUEM312)(RogueClassCmdContingent*);
typedef RogueClassCmd*(*ROGUEM313)(RogueClassCmdContingent*,RogueClassCloneArgs*);
typedef void(*ROGUEM314)(RogueClassCmdContingent*,RogueClassVisitor*);
typedef RogueClassCmdContingent*(*ROGUEM315)(RogueClassCmdContingent*,RogueClassScope*);
typedef void(*ROGUEM316)(RogueClassCmdContingent*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdContingent*(*ROGUEM317)(RogueClassCmdContingent*);
typedef RogueClassCmd*(*ROGUEM318)(RogueClassCmdContingent*,RogueClassCmdControlStructure*);
typedef RogueString*(*ROGUEM319)(RogueClassCmdGenericLoop*);
typedef RogueClassCmd*(*ROGUEM320)(RogueClassCmdGenericLoop*,RogueClassCloneArgs*);
typedef void(*ROGUEM321)(RogueClassCmdGenericLoop*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM322)(RogueClassCmdGenericLoop*,RogueClassScope*);
typedef void(*ROGUEM323)(RogueClassCmdGenericLoop*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdGenericLoop*(*ROGUEM324)(RogueClassCmdGenericLoop*);
typedef RogueString*(*ROGUEM325)(RogueClassCmdElementAccess*);
typedef RogueClassCmd*(*ROGUEM326)(RogueClassCmdElementAccess*,RogueClassCloneArgs*);
typedef void(*ROGUEM327)(RogueClassCmdElementAccess*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM328)(RogueClassCmdElementAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM329)(RogueClassCmdElementAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM330)(RogueClassCmdElementAccess*,RogueClassScope*,RogueInt32);
typedef RogueClassCmdElementAccess*(*ROGUEM331)(RogueClassCmdElementAccess*);
typedef RogueString*(*ROGUEM332)(RogueClassCmdEnsure*);
typedef RogueClassCmd*(*ROGUEM333)(RogueClassCmdEnsure*,RogueClassCloneArgs*);
typedef void(*ROGUEM334)(RogueClassCmdEnsure*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM335)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM336)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM337)(RogueClassCmdEnsure*);
typedef RogueClassCmdEnsure*(*ROGUEM338)(RogueClassCmdEnsure*);
typedef RogueString*(*ROGUEM339)(RogueClassCmdForEach*);
typedef RogueClassCmd*(*ROGUEM340)(RogueClassCmdForEach*,RogueClassCloneArgs*);
typedef void(*ROGUEM341)(RogueClassCmdForEach*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM342)(RogueClassCmdForEach*,RogueClassScope*);
typedef RogueClassCmdForEach*(*ROGUEM343)(RogueClassCmdForEach*);
typedef RogueString*(*ROGUEM344)(RogueClassCmdFormattedString*);
typedef RogueClassCmd*(*ROGUEM345)(RogueClassCmdFormattedString*,RogueClassCloneArgs*);
typedef void(*ROGUEM346)(RogueClassCmdFormattedString*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM347)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM348)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM349)(RogueClassCmdFormattedString*);
typedef RogueClassCmdFormattedString*(*ROGUEM350)(RogueClassCmdFormattedString*);
typedef RogueString*(*ROGUEM351)(RogueClassCmdTry*);
typedef RogueClassCmdTry*(*ROGUEM352)(RogueClassCmdTry*,RogueClassCloneArgs*);
typedef void(*ROGUEM353)(RogueClassCmdTry*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM354)(RogueClassCmdTry*,RogueClassScope*);
typedef void(*ROGUEM355)(RogueClassCmdTry*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTry*(*ROGUEM356)(RogueClassCmdTry*);
typedef RogueString*(*ROGUEM357)(RogueClassCmdCatch*);
typedef RogueClassCmdCatch*(*ROGUEM358)(RogueClassCmdCatch*,RogueClassCloneArgs*);
typedef void(*ROGUEM359)(RogueClassCmdCatch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM360)(RogueClassCmdCatch*,RogueClassScope*);
typedef void(*ROGUEM361)(RogueClassCmdCatch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCatch*(*ROGUEM362)(RogueClassCmdCatch*);
typedef RogueString*(*ROGUEM363)(RogueClassCmdThrow*);
typedef RogueClassCmdThrow*(*ROGUEM364)(RogueClassCmdThrow*,RogueClassCloneArgs*);
typedef void(*ROGUEM365)(RogueClassCmdThrow*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM366)(RogueClassCmdThrow*,RogueClassScope*);
typedef void(*ROGUEM367)(RogueClassCmdThrow*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdThrow*(*ROGUEM368)(RogueClassCmdThrow*);
typedef RogueString*(*ROGUEM369)(RogueClassCmdEscape*);
typedef RogueClassCmd*(*ROGUEM370)(RogueClassCmdEscape*,RogueClassCloneArgs*);
typedef void(*ROGUEM371)(RogueClassCmdEscape*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM372)(RogueClassCmdEscape*,RogueClassScope*);
typedef void(*ROGUEM373)(RogueClassCmdEscape*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdEscape*(*ROGUEM374)(RogueClassCmdEscape*);
typedef RogueString*(*ROGUEM375)(RogueClassCmdNextIteration*);
typedef RogueClassCmd*(*ROGUEM376)(RogueClassCmdNextIteration*,RogueClassCloneArgs*);
typedef void(*ROGUEM377)(RogueClassCmdNextIteration*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM378)(RogueClassCmdNextIteration*,RogueClassScope*);
typedef void(*ROGUEM379)(RogueClassCmdNextIteration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNextIteration*(*ROGUEM380)(RogueClassCmdNextIteration*);
typedef RogueString*(*ROGUEM381)(RogueClassCmdNecessary*);
typedef RogueClassCmd*(*ROGUEM382)(RogueClassCmdNecessary*,RogueClassCloneArgs*);
typedef void(*ROGUEM383)(RogueClassCmdNecessary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM384)(RogueClassCmdNecessary*,RogueClassScope*);
typedef void(*ROGUEM385)(RogueClassCmdNecessary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNecessary*(*ROGUEM386)(RogueClassCmdNecessary*);
typedef RogueString*(*ROGUEM387)(RogueClassCmdSufficient*);
typedef RogueClassCmd*(*ROGUEM388)(RogueClassCmdSufficient*,RogueClassCloneArgs*);
typedef void(*ROGUEM389)(RogueClassCmdSufficient*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM390)(RogueClassCmdSufficient*,RogueClassScope*);
typedef void(*ROGUEM391)(RogueClassCmdSufficient*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSufficient*(*ROGUEM392)(RogueClassCmdSufficient*);
typedef RogueString*(*ROGUEM393)(RogueClassCmdLiteral*);
typedef void(*ROGUEM394)(RogueClassCmdLiteral*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM395)(RogueClassCmdLiteral*,RogueClassScope*);
typedef RogueLogical(*ROGUEM396)(RogueClassCmdLiteral*);
typedef RogueClassCmdLiteral*(*ROGUEM397)(RogueClassCmdLiteral*);
typedef RogueString*(*ROGUEM398)(RogueClassCmdLiteralString*);
typedef RogueClassCmd*(*ROGUEM399)(RogueClassCmdLiteralString*,RogueClassCloneArgs*);
typedef void(*ROGUEM400)(RogueClassCmdLiteralString*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM401)(RogueClassCmdLiteralString*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM402)(RogueClassCmdLiteralString*);
typedef void(*ROGUEM403)(RogueClassCmdLiteralString*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralString*(*ROGUEM404)(RogueClassCmdLiteralString*);
typedef RogueString*(*ROGUEM405)(RogueClassCmdCreateObject*);
typedef RogueClassCmd*(*ROGUEM406)(RogueClassCmdCreateObject*,RogueClassCloneArgs*);
typedef void(*ROGUEM407)(RogueClassCmdCreateObject*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM408)(RogueClassCmdCreateObject*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM409)(RogueClassCmdCreateObject*);
typedef void(*ROGUEM410)(RogueClassCmdCreateObject*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateObject*(*ROGUEM411)(RogueClassCmdCreateObject*);
typedef RogueString*(*ROGUEM412)(RogueClassCmdCreateCompound*);
typedef RogueClassCmd*(*ROGUEM413)(RogueClassCmdCreateCompound*,RogueClassCloneArgs*);
typedef void(*ROGUEM414)(RogueClassCmdCreateCompound*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM415)(RogueClassCmdCreateCompound*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM416)(RogueClassCmdCreateCompound*);
typedef void(*ROGUEM417)(RogueClassCmdCreateCompound*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateCompound*(*ROGUEM418)(RogueClassCmdCreateCompound*);
typedef RogueString*(*ROGUEM419)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM420)(RogueClassCmdThisContext*,RogueClassCloneArgs*);
typedef void(*ROGUEM421)(RogueClassCmdThisContext*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM422)(RogueClassCmdThisContext*,RogueClassScope*);
typedef void(*ROGUEM423)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM424)(RogueClassCmdThisContext*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM425)(RogueClassCmdThisContext*);
typedef void(*ROGUEM426)(RogueClassCmdThisContext*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdThisContext*(*ROGUEM427)(RogueClassCmdThisContext*);
typedef RogueString*(*ROGUEM428)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM429)(RogueClassCmdReadSingleton*,RogueClassCloneArgs*);
typedef void(*ROGUEM430)(RogueClassCmdReadSingleton*,RogueClassVisitor*);
typedef void(*ROGUEM431)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM432)(RogueClassCmdReadSingleton*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM433)(RogueClassCmdReadSingleton*);
typedef void(*ROGUEM434)(RogueClassCmdReadSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadSingleton*(*ROGUEM435)(RogueClassCmdReadSingleton*);
typedef RogueString*(*ROGUEM436)(RogueClassCmdWriteSingleton*);
typedef RogueClassCmd*(*ROGUEM437)(RogueClassCmdWriteSingleton*,RogueClassCloneArgs*);
typedef void(*ROGUEM438)(RogueClassCmdWriteSingleton*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM439)(RogueClassCmdWriteSingleton*,RogueClassScope*);
typedef void(*ROGUEM440)(RogueClassCmdWriteSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteSingleton*(*ROGUEM441)(RogueClassCmdWriteSingleton*);
typedef RogueString*(*ROGUEM442)(RogueClassCmdReadLocal*);
typedef RogueClassCmd*(*ROGUEM443)(RogueClassCmdReadLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM444)(RogueClassCmdReadLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM445)(RogueClassCmdReadLocal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM446)(RogueClassCmdReadLocal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM447)(RogueClassCmdReadLocal*);
typedef void(*ROGUEM448)(RogueClassCmdReadLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadLocal*(*ROGUEM449)(RogueClassCmdReadLocal*);
typedef RogueString*(*ROGUEM450)(RogueClassCmdWriteLocal*);
typedef RogueClassCmd*(*ROGUEM451)(RogueClassCmdWriteLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM452)(RogueClassCmdWriteLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM453)(RogueClassCmdWriteLocal*,RogueClassScope*);
typedef void(*ROGUEM454)(RogueClassCmdWriteLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteLocal*(*ROGUEM455)(RogueClassCmdWriteLocal*);
typedef RogueString*(*ROGUEM456)(RogueClassCmdReadGlobal*);
typedef RogueClassCmd*(*ROGUEM457)(RogueClassCmdReadGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM458)(RogueClassCmdReadGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM459)(RogueClassCmdReadGlobal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM460)(RogueClassCmdReadGlobal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM461)(RogueClassCmdReadGlobal*);
typedef void(*ROGUEM462)(RogueClassCmdReadGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadGlobal*(*ROGUEM463)(RogueClassCmdReadGlobal*);
typedef RogueString*(*ROGUEM464)(RogueClassCmdWriteGlobal*);
typedef RogueClassCmd*(*ROGUEM465)(RogueClassCmdWriteGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM466)(RogueClassCmdWriteGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM467)(RogueClassCmdWriteGlobal*,RogueClassScope*);
typedef void(*ROGUEM468)(RogueClassCmdWriteGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteGlobal*(*ROGUEM469)(RogueClassCmdWriteGlobal*);
typedef RogueString*(*ROGUEM470)(RogueClassCmdReadProperty*);
typedef RogueClassCmd*(*ROGUEM471)(RogueClassCmdReadProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM472)(RogueClassCmdReadProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM473)(RogueClassCmdReadProperty*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM474)(RogueClassCmdReadProperty*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM475)(RogueClassCmdReadProperty*);
typedef void(*ROGUEM476)(RogueClassCmdReadProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadProperty*(*ROGUEM477)(RogueClassCmdReadProperty*);
typedef RogueString*(*ROGUEM478)(RogueClassCmdWriteProperty*);
typedef RogueClassCmd*(*ROGUEM479)(RogueClassCmdWriteProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM480)(RogueClassCmdWriteProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM481)(RogueClassCmdWriteProperty*,RogueClassScope*);
typedef void(*ROGUEM482)(RogueClassCmdWriteProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteProperty*(*ROGUEM483)(RogueClassCmdWriteProperty*);
typedef RogueString*(*ROGUEM484)(RogueClassCmdCall*);
typedef void(*ROGUEM485)(RogueClassCmdCall*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM486)(RogueClassCmdCall*);
typedef RogueClassCmd*(*ROGUEM487)(RogueClassCmdCall*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM488)(RogueClassCmdCall*,RogueClassScope*,RogueInt32);
typedef RogueClassCmdCall*(*ROGUEM489)(RogueClassCmdCall*);
typedef RogueString*(*ROGUEM490)(RogueClassCmdCallDynamicMethod*);
typedef RogueClassCmd*(*ROGUEM491)(RogueClassCmdCallMethod*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM492)(RogueClassCmdCallDynamicMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM493)(RogueClassCmdCallDynamicMethod*,RogueClassVisitor*);
typedef void(*ROGUEM494)(RogueClassCmdCallDynamicMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallDynamicMethod*(*ROGUEM495)(RogueClassCmdCallDynamicMethod*);
typedef RogueString*(*ROGUEM496)(RogueClassCmdCallMethod*);
typedef void(*ROGUEM497)(RogueClassCmdCallMethod*,RogueClassVisitor*);
typedef RogueClassCmdCallMethod*(*ROGUEM498)(RogueClassCmdCallMethod*);
typedef RogueString*(*ROGUEM499)(RogueClassCmdCallPriorMethod*);
typedef RogueClassCmd*(*ROGUEM500)(RogueClassCmdCallPriorMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM501)(RogueClassCmdCallPriorMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM502)(RogueClassCmdCallPriorMethod*,RogueClassScope*);
typedef RogueClassCmdCallPriorMethod*(*ROGUEM503)(RogueClassCmdCallPriorMethod*);
typedef RogueString*(*ROGUEM504)(RogueClassCmdRange*);
typedef void(*ROGUEM505)(RogueClassCmdRange*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM506)(RogueClassCmdRange*,RogueClassScope*);
typedef RogueClassCmdRange*(*ROGUEM507)(RogueClassCmdRange*);
typedef RogueInt32(*ROGUEM508)(RogueClassCmdRange*);
typedef RogueString*(*ROGUEM509)(RogueClassCmdUnary*);
typedef void(*ROGUEM510)(RogueClassCmdUnary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM511)(RogueClassCmdUnary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM512)(RogueClassCmdUnary*);
typedef void(*ROGUEM513)(RogueClassCmdUnary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdUnary*(*ROGUEM514)(RogueClassCmdUnary*);
typedef RogueString*(*ROGUEM515)(RogueClassCmdBinary*);
typedef void(*ROGUEM516)(RogueClassCmdBinary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM517)(RogueClassCmdBinary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM518)(RogueClassCmdBinary*);
typedef void(*ROGUEM519)(RogueClassCmdBinary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdBinary*(*ROGUEM520)(RogueClassCmdBinary*);
typedef RogueLogical(*ROGUEM521)(RogueClassCmdBinary*);
typedef RogueClassCmd*(*ROGUEM522)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM523)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*);
typedef RogueString*(*ROGUEM524)(RogueClassCmdAdjustLocal*);
typedef RogueClassCmd*(*ROGUEM525)(RogueClassCmdAdjustLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM526)(RogueClassCmdAdjustLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM527)(RogueClassCmdAdjustLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM528)(RogueClassCmdAdjustLocal*);
typedef void(*ROGUEM529)(RogueClassCmdAdjustLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustLocal*(*ROGUEM530)(RogueClassCmdAdjustLocal*);
typedef RogueString*(*ROGUEM531)(RogueClassCmdAdjustProperty*);
typedef RogueClassCmd*(*ROGUEM532)(RogueClassCmdAdjustProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM533)(RogueClassCmdAdjustProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM534)(RogueClassCmdAdjustProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM535)(RogueClassCmdAdjustProperty*);
typedef void(*ROGUEM536)(RogueClassCmdAdjustProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustProperty*(*ROGUEM537)(RogueClassCmdAdjustProperty*);
typedef RogueString*(*ROGUEM538)(RogueClassCmdAdjustGlobal*);
typedef RogueClassCmd*(*ROGUEM539)(RogueClassCmdAdjustGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM540)(RogueClassCmdAdjustGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM541)(RogueClassCmdAdjustGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM542)(RogueClassCmdAdjustGlobal*);
typedef void(*ROGUEM543)(RogueClassCmdAdjustGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustGlobal*(*ROGUEM544)(RogueClassCmdAdjustGlobal*);
typedef RogueString*(*ROGUEM545)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueClassCmd*(*ROGUEM546)(RogueClassCmdModifyAndAssignLocal*,RogueClassCloneArgs*);
typedef void(*ROGUEM547)(RogueClassCmdModifyAndAssignLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM548)(RogueClassCmdModifyAndAssignLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM549)(RogueClassCmdModifyAndAssignLocal*);
typedef void(*ROGUEM550)(RogueClassCmdModifyAndAssignLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignLocal*(*ROGUEM551)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueString*(*ROGUEM552)(RogueClassCmdResolvedModifyAndAssign*);
typedef void(*ROGUEM553)(RogueClassCmdResolvedModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmdResolvedModifyAndAssign*(*ROGUEM554)(RogueClassCmdResolvedModifyAndAssign*);
typedef RogueString*(*ROGUEM555)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueClassCmd*(*ROGUEM556)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCloneArgs*);
typedef void(*ROGUEM557)(RogueClassCmdModifyAndAssignGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM558)(RogueClassCmdModifyAndAssignGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM559)(RogueClassCmdModifyAndAssignGlobal*);
typedef void(*ROGUEM560)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignGlobal*(*ROGUEM561)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueString*(*ROGUEM562)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueClassCmd*(*ROGUEM563)(RogueClassCmdModifyAndAssignProperty*,RogueClassCloneArgs*);
typedef void(*ROGUEM564)(RogueClassCmdModifyAndAssignProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM565)(RogueClassCmdModifyAndAssignProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM566)(RogueClassCmdModifyAndAssignProperty*);
typedef void(*ROGUEM567)(RogueClassCmdModifyAndAssignProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignProperty*(*ROGUEM568)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueString*(*ROGUEM569)(RogueClassCmdCreateArray*);
typedef RogueClassCmd*(*ROGUEM570)(RogueClassCmdCreateArray*,RogueClassCloneArgs*);
typedef void(*ROGUEM571)(RogueClassCmdCreateArray*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM572)(RogueClassCmdCreateArray*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM573)(RogueClassCmdCreateArray*);
typedef void(*ROGUEM574)(RogueClassCmdCreateArray*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateArray*(*ROGUEM575)(RogueClassCmdCreateArray*);
typedef RogueString*(*ROGUEM576)(RogueClassCmdReadArrayElement*);
typedef RogueClassCmd*(*ROGUEM577)(RogueClassCmdReadArrayElement*,RogueClassCloneArgs*);
typedef void(*ROGUEM578)(RogueClassCmdReadArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM579)(RogueClassCmdReadArrayElement*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM580)(RogueClassCmdReadArrayElement*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM581)(RogueClassCmdReadArrayElement*);
typedef void(*ROGUEM582)(RogueClassCmdReadArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayElement*(*ROGUEM583)(RogueClassCmdReadArrayElement*);
typedef RogueString*(*ROGUEM584)(RogueClassCmdReadArrayCount*);
typedef RogueClassCmd*(*ROGUEM585)(RogueClassCmdReadArrayCount*,RogueClassCloneArgs*);
typedef void(*ROGUEM586)(RogueClassCmdReadArrayCount*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM587)(RogueClassCmdReadArrayCount*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM588)(RogueClassCmdReadArrayCount*);
typedef void(*ROGUEM589)(RogueClassCmdReadArrayCount*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayCount*(*ROGUEM590)(RogueClassCmdReadArrayCount*);
typedef RogueString*(*ROGUEM591)(RogueClassCmdWriteArrayElement*);
typedef RogueClassCmd*(*ROGUEM592)(RogueClassCmdWriteArrayElement*,RogueClassCloneArgs*);
typedef void(*ROGUEM593)(RogueClassCmdWriteArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM594)(RogueClassCmdWriteArrayElement*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM595)(RogueClassCmdWriteArrayElement*);
typedef void(*ROGUEM596)(RogueClassCmdWriteArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteArrayElement*(*ROGUEM597)(RogueClassCmdWriteArrayElement*);
typedef RogueString*(*ROGUEM598)(RogueClassCmdTypeOperator*);
typedef void(*ROGUEM599)(RogueClassCmdTypeOperator*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM600)(RogueClassCmdTypeOperator*);
typedef RogueClassCmdTypeOperator*(*ROGUEM601)(RogueClassCmdTypeOperator*);
typedef RogueString*(*ROGUEM602)(RogueClassCmdTaskControl*);
typedef void(*ROGUEM603)(RogueClassCmdTaskControl*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM604)(RogueClassCmdTaskControl*);
typedef RogueClassCmd*(*ROGUEM605)(RogueClassCmdTaskControl*,RogueClassScope*);
typedef void(*ROGUEM606)(RogueClassCmdTaskControl*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTaskControl*(*ROGUEM607)(RogueClassCmdTaskControl*);
typedef RogueString*(*ROGUEM608)(RogueClassCmdTrace*);
typedef RogueClassCmdTrace*(*ROGUEM609)(RogueClassCmdTrace*,RogueClassCloneArgs*);
typedef void(*ROGUEM610)(RogueClassCmdTrace*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM611)(RogueClassCmdTrace*,RogueClassScope*);
typedef RogueClassCmdTrace*(*ROGUEM612)(RogueClassCmdTrace*);
typedef RogueString*(*ROGUEM613)(RogueClassCmdInlineNative*);
typedef RogueClassCmdInlineNative*(*ROGUEM614)(RogueClassCmdInlineNative*,RogueClassCloneArgs*);
typedef void(*ROGUEM615)(RogueClassCmdInlineNative*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM616)(RogueClassCmdInlineNative*);
typedef RogueClassCmd*(*ROGUEM617)(RogueClassCmdInlineNative*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM618)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM619)(RogueClassCmdInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM620)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM621)(RogueClassCmdInlineNative*);
typedef void(*ROGUEM622)(RogueClassCmdInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdInlineNative*(*ROGUEM623)(RogueClassCmdInlineNative*);
typedef RogueString*(*ROGUEM624)(RogueClassCmdNoAction*);
typedef void(*ROGUEM625)(RogueClassCmdNoAction*,RogueClassCmdStatementList*);
typedef RogueClassCmdNoAction*(*ROGUEM626)(RogueClassCmdNoAction*,RogueClassCloneArgs*);
typedef void(*ROGUEM627)(RogueClassCmdNoAction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM628)(RogueClassCmdNoAction*);
typedef RogueClassCmd*(*ROGUEM629)(RogueClassCmdNoAction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM630)(RogueClassCmdNoAction*);
typedef void(*ROGUEM631)(RogueClassCmdNoAction*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNoAction*(*ROGUEM632)(RogueClassCmdNoAction*);
typedef RogueString*(*ROGUEM633)(RogueClassCmdSelect*);
typedef RogueClassCmdSelect*(*ROGUEM634)(RogueClassCmdSelect*,RogueClassCloneArgs*);
typedef void(*ROGUEM635)(RogueClassCmdSelect*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM636)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM637)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM638)(RogueClassCmdSelect*);
typedef void(*ROGUEM639)(RogueClassCmdSelect*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSelect*(*ROGUEM640)(RogueClassCmdSelect*);
typedef RogueString*(*ROGUEM641)(RogueClassCmdSelectCase*);
typedef RogueClassCmdSelectCase*(*ROGUEM642)(RogueClassCmdSelectCase*,RogueClassCloneArgs*);
typedef void(*ROGUEM643)(RogueClassCmdSelectCase*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM644)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM645)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM646)(RogueClassCmdSelectCase*);
typedef RogueClassCmdSelectCase*(*ROGUEM647)(RogueClassCmdSelectCase*);
typedef RogueCmdControlStructure_List*(*ROGUEM648)(RogueCmdControlStructure_List*);
typedef RogueString*(*ROGUEM649)(RogueCmdControlStructure_List*);
typedef RogueString*(*ROGUEM650)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM651)(RogueClassCmdLiteralThis*,RogueClassCloneArgs*);
typedef void(*ROGUEM652)(RogueClassCmdLiteralThis*,RogueClassVisitor*);
typedef void(*ROGUEM653)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM654)(RogueClassCmdLiteralThis*,RogueClassScope*);
typedef RogueClassCmdLiteralThis*(*ROGUEM655)(RogueClassCmdLiteralThis*);
typedef RogueString*(*ROGUEM656)(RogueClassCmdLiteralInt32*);
typedef RogueClassCmd*(*ROGUEM657)(RogueClassCmdLiteralInt32*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM658)(RogueClassCmdLiteralInt32*,RogueClassCloneArgs*);
typedef void(*ROGUEM659)(RogueClassCmdLiteralInt32*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM660)(RogueClassCmdLiteralInt32*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM661)(RogueClassCmdLiteralInt32*);
typedef void(*ROGUEM662)(RogueClassCmdLiteralInt32*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralInt32*(*ROGUEM663)(RogueClassCmdLiteralInt32*);
typedef RogueString*(*ROGUEM664)(RogueClassCmdCompareNE*);
typedef RogueClassCmd*(*ROGUEM665)(RogueClassCmdCompareNE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM666)(RogueClassCmdCompareNE*,RogueClassType*);
typedef void(*ROGUEM667)(RogueClassCmdCompareNE*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM668)(RogueClassCmdComparison*);
typedef RogueClassCmdCompareNE*(*ROGUEM669)(RogueClassCmdCompareNE*);
typedef RogueLogical(*ROGUEM670)(RogueClassCmdComparison*);
typedef RogueClassCmd*(*ROGUEM671)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM672)(RogueClassCmdCompareNE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM673)(RogueClassCmdComparison*);
typedef void(*ROGUEM674)(RogueClassCmdComparison*,RogueClassVisitor*);
typedef RogueClassCmdComparison*(*ROGUEM675)(RogueClassCmdComparison*);
typedef RogueClassCmd*(*ROGUEM676)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM677)(RogueClassTaskArgs*);
typedef RogueClassTaskArgs*(*ROGUEM678)(RogueClassTaskArgs*);
typedef RogueString*(*ROGUEM679)(RogueClassCmdTaskControlSection*);
typedef RogueTableEntry_String_Method_List__List*(*ROGUEM680)(RogueTableEntry_String_Method_List__List*);
typedef RogueString*(*ROGUEM681)(RogueTableEntry_String_Method_List__List*);
typedef RogueString*(*ROGUEM682)(RogueClassTableEntry_String_Method_List_*);
typedef RogueDefinition_List*(*ROGUEM683)(RogueDefinition_List*);
typedef RogueString*(*ROGUEM684)(RogueDefinition_List*);
typedef RogueString*(*ROGUEM685)(RogueClassDefinition*);
typedef RogueClassTable_String_Definition_*(*ROGUEM686)(RogueClassTable_String_Definition_*);
typedef RogueString*(*ROGUEM687)(RogueClassTable_String_Definition_*);
typedef RogueClassTable_String_Property_*(*ROGUEM688)(RogueClassTable_String_Property_*);
typedef RogueString*(*ROGUEM689)(RogueClassTable_String_Property_*);
typedef RogueString*(*ROGUEM690)(RogueClassMethodTemplates*);
typedef RogueString*(*ROGUEM691)(RogueClassCmdLiteralNull*);
typedef RogueClassCmd*(*ROGUEM692)(RogueClassCmdLiteralNull*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM693)(RogueClassCmdLiteralNull*,RogueClassCloneArgs*);
typedef void(*ROGUEM694)(RogueClassCmdLiteralNull*,RogueClassVisitor*);
typedef RogueClassCmdLiteralNull*(*ROGUEM695)(RogueClassCmdLiteralNull*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM696)(RogueClassCmdLiteralNull*);
typedef void(*ROGUEM697)(RogueClassCmdLiteralNull*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralNull*(*ROGUEM698)(RogueClassCmdLiteralNull*);
typedef RogueString*(*ROGUEM699)(RogueClassCmdLiteralLogical*);
typedef RogueClassCmd*(*ROGUEM700)(RogueClassCmdLiteralLogical*,RogueClassCloneArgs*);
typedef void(*ROGUEM701)(RogueClassCmdLiteralLogical*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM702)(RogueClassCmdLiteralLogical*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM703)(RogueClassCmdLiteralLogical*);
typedef void(*ROGUEM704)(RogueClassCmdLiteralLogical*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralLogical*(*ROGUEM705)(RogueClassCmdLiteralLogical*);
typedef RogueString*(*ROGUEM706)(RogueClassUpdateThisTypeVisitor*);
typedef void(*ROGUEM707)(RogueClassUpdateThisTypeVisitor*,RogueClassCmdThisContext*);
typedef RogueClassUpdateThisTypeVisitor*(*ROGUEM708)(RogueClassUpdateThisTypeVisitor*);
typedef RogueTableEntry_String_Type__List*(*ROGUEM709)(RogueTableEntry_String_Type__List*);
typedef RogueString*(*ROGUEM710)(RogueTableEntry_String_Type__List*);
typedef RogueString*(*ROGUEM711)(RogueClassTableEntry_String_Type_*);
typedef RogueTableEntry_String_Int32__List*(*ROGUEM712)(RogueTableEntry_String_Int32__List*);
typedef RogueString*(*ROGUEM713)(RogueTableEntry_String_Int32__List*);
typedef RogueTableEntry_String_String_List__List*(*ROGUEM714)(RogueTableEntry_String_String_List__List*);
typedef RogueString*(*ROGUEM715)(RogueTableEntry_String_String_List__List*);
typedef RogueString*(*ROGUEM716)(RogueClassTableEntry_String_String_List_*);
typedef RogueTableEntry_Int32_Template__List*(*ROGUEM717)(RogueTableEntry_Int32_Template__List*);
typedef RogueString*(*ROGUEM718)(RogueTableEntry_Int32_Template__List*);
typedef RogueString*(*ROGUEM719)(RogueClassTableEntry_Int32_Template_*);
typedef RogueString*(*ROGUEM720)(RogueClassListRebuilder_Token_*);
typedef RogueString*(*ROGUEM721)(RogueClassCmdCastToType*);
typedef RogueClassCmd*(*ROGUEM722)(RogueClassCmdCastToType*,RogueClassCloneArgs*);
typedef void(*ROGUEM723)(RogueClassCmdCastToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM724)(RogueClassCmdCastToType*,RogueClassScope*);
typedef void(*ROGUEM725)(RogueClassCmdCastToType*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCastToType*(*ROGUEM726)(RogueClassCmdCastToType*);
typedef RogueString*(*ROGUEM727)(RogueClassCmdLogicalize*);
typedef RogueClassCmd*(*ROGUEM728)(RogueClassCmdLogicalize*,RogueClassCloneArgs*);
typedef void(*ROGUEM729)(RogueClassCmdLogicalize*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM730)(RogueClassCmdLogicalize*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM731)(RogueClassCmdLogicalize*);
typedef RogueClassCmdLogicalize*(*ROGUEM732)(RogueClassCmdLogicalize*);
typedef RogueString*(*ROGUEM733)(RogueClassMacroArgs*);
typedef RogueClassMacroArgs*(*ROGUEM734)(RogueClassMacroArgs*);
typedef RogueFnParam_List*(*ROGUEM735)(RogueFnParam_List*);
typedef RogueString*(*ROGUEM736)(RogueFnParam_List*);
typedef RogueString*(*ROGUEM737)(RogueClassFnParam*);
typedef RogueString*(*ROGUEM738)(RogueClassCmdCreateFunction*);
typedef RogueClassCmdCreateFunction*(*ROGUEM739)(RogueClassCmdCreateFunction*,RogueClassCloneArgs*);
typedef void(*ROGUEM740)(RogueClassCmdCreateFunction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM741)(RogueClassCmdCreateFunction*);
typedef RogueClassCmd*(*ROGUEM742)(RogueClassCmdCreateFunction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM743)(RogueClassCmdCreateFunction*);
typedef RogueClassCmdCreateFunction*(*ROGUEM744)(RogueClassCmdCreateFunction*);
typedef RogueFnArg_List*(*ROGUEM745)(RogueFnArg_List*);
typedef RogueString*(*ROGUEM746)(RogueFnArg_List*);
typedef RogueString*(*ROGUEM747)(RogueClassFnArg*);
typedef RogueString*(*ROGUEM748)(RogueClassTraceUsedCodeVisitor*);
typedef void(*ROGUEM749)(RogueClassTraceUsedCodeVisitor*,RogueClassType*);
typedef void(*ROGUEM750)(RogueClassTraceUsedCodeVisitor*,RogueClassMethod*);
typedef void(*ROGUEM751)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM752)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassTraceUsedCodeVisitor*(*ROGUEM753)(RogueClassTraceUsedCodeVisitor*);
typedef RogueString*(*ROGUEM754)(RogueClassCmdBitwiseAnd*);
typedef RogueClassCmd*(*ROGUEM755)(RogueClassCmdBitwiseAnd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM756)(RogueClassCmdBitwiseAnd*,RogueClassType*);
typedef void(*ROGUEM757)(RogueClassCmdBitwiseAnd*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseAnd*(*ROGUEM758)(RogueClassCmdBitwiseAnd*);
typedef RogueClassCmd*(*ROGUEM759)(RogueClassCmdBitwiseOp*,RogueClassScope*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM760)(RogueClassCmdBitwiseOp*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueString*(*ROGUEM761)(RogueClassCmdBitwiseOp*);
typedef void(*ROGUEM762)(RogueClassCmdBitwiseOp*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseOp*(*ROGUEM763)(RogueClassCmdBitwiseOp*);
typedef RogueString*(*ROGUEM764)(RogueClassCmdPower*);
typedef RogueClassCmd*(*ROGUEM765)(RogueClassCmdPower*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM766)(RogueClassCmdPower*,RogueClassType*);
typedef void(*ROGUEM767)(RogueClassCmdPower*,RogueClassVisitor*);
typedef void(*ROGUEM768)(RogueClassCmdPower*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdPower*(*ROGUEM769)(RogueClassCmdPower*);
typedef RogueString*(*ROGUEM770)(RogueClassCmdSubtract*);
typedef RogueClassCmd*(*ROGUEM771)(RogueClassCmdSubtract*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM772)(RogueClassCmdSubtract*,RogueClassType*);
typedef void(*ROGUEM773)(RogueClassCmdSubtract*,RogueClassVisitor*);
typedef RogueClassCmdSubtract*(*ROGUEM774)(RogueClassCmdSubtract*);
typedef RogueString*(*ROGUEM775)(RogueClassCmdMod*);
typedef RogueClassCmd*(*ROGUEM776)(RogueClassCmdMod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM777)(RogueClassCmdMod*,RogueClassType*);
typedef void(*ROGUEM778)(RogueClassCmdMod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM779)(RogueClassCmdMod*,RogueClassScope*);
typedef RogueClassCmdMod*(*ROGUEM780)(RogueClassCmdMod*);
typedef RogueString*(*ROGUEM781)(RogueClassCmdAdd*);
typedef RogueClassCmd*(*ROGUEM782)(RogueClassCmdAdd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM783)(RogueClassCmdAdd*,RogueClassType*);
typedef void(*ROGUEM784)(RogueClassCmdAdd*,RogueClassVisitor*);
typedef RogueClassCmdAdd*(*ROGUEM785)(RogueClassCmdAdd*);
typedef RogueClassCmd*(*ROGUEM786)(RogueClassCmdAdd*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueString*(*ROGUEM787)(RogueClassCmdDivide*);
typedef RogueClassCmd*(*ROGUEM788)(RogueClassCmdDivide*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM789)(RogueClassCmdDivide*,RogueClassType*);
typedef void(*ROGUEM790)(RogueClassCmdDivide*,RogueClassVisitor*);
typedef RogueClassCmdDivide*(*ROGUEM791)(RogueClassCmdDivide*);
typedef RogueString*(*ROGUEM792)(RogueClassCmdBitwiseXor*);
typedef RogueClassCmd*(*ROGUEM793)(RogueClassCmdBitwiseXor*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM794)(RogueClassCmdBitwiseXor*,RogueClassType*);
typedef void(*ROGUEM795)(RogueClassCmdBitwiseXor*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseXor*(*ROGUEM796)(RogueClassCmdBitwiseXor*);
typedef RogueString*(*ROGUEM797)(RogueClassCmdMultiply*);
typedef RogueClassCmd*(*ROGUEM798)(RogueClassCmdMultiply*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM799)(RogueClassCmdMultiply*,RogueClassType*);
typedef void(*ROGUEM800)(RogueClassCmdMultiply*,RogueClassVisitor*);
typedef RogueClassCmdMultiply*(*ROGUEM801)(RogueClassCmdMultiply*);
typedef RogueString*(*ROGUEM802)(RogueClassCmdBitwiseOr*);
typedef RogueClassCmd*(*ROGUEM803)(RogueClassCmdBitwiseOr*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM804)(RogueClassCmdBitwiseOr*,RogueClassType*);
typedef void(*ROGUEM805)(RogueClassCmdBitwiseOr*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseOr*(*ROGUEM806)(RogueClassCmdBitwiseOr*);
typedef RogueString*(*ROGUEM807)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM808)(RogueClassFunction_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_CmdNamedArg_RETURNSLogical*(*ROGUEM809)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM810)(RogueClassListRebuilder_CmdNamedArg_*);
typedef RogueString*(*ROGUEM811)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM812)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*(*ROGUEM813)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM814)(RogueClassQuicksort_CmdNamedArg_*);
typedef RogueString*(*ROGUEM815)(RogueClassCmdCallInlineNative*);
typedef RogueString*(*ROGUEM816)(RogueClassCmdCallInlineNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM817)(RogueClassCmdCallInlineNativeRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM818)(RogueClassCmdCallInlineNativeRoutine*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM819)(RogueClassCmdCallInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM820)(RogueClassCmdCallInlineNativeRoutine*);
typedef void(*ROGUEM821)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallInlineNativeRoutine*(*ROGUEM822)(RogueClassCmdCallInlineNativeRoutine*);
typedef void(*ROGUEM823)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*);
typedef void(*ROGUEM824)(RogueClassCmdCallInlineNative*,RogueClassVisitor*);
typedef RogueClassCmdCallInlineNative*(*ROGUEM825)(RogueClassCmdCallInlineNative*);
typedef RogueString*(*ROGUEM826)(RogueClassCmdCallNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM827)(RogueClassCmdCallNativeRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM828)(RogueClassCmdCallNativeRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM829)(RogueClassCmdCallNativeRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallNativeRoutine*(*ROGUEM830)(RogueClassCmdCallNativeRoutine*);
typedef RogueString*(*ROGUEM831)(RogueClassCmdCallRoutine*);
typedef RogueClassCmd*(*ROGUEM832)(RogueClassCmdCallRoutine*,RogueClassCloneArgs*);
typedef void(*ROGUEM833)(RogueClassCmdCallRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM834)(RogueClassCmdCallRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallRoutine*(*ROGUEM835)(RogueClassCmdCallRoutine*);
typedef RogueString*(*ROGUEM836)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueClassCmd*(*ROGUEM837)(RogueClassCmdCallInlineNativeMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM838)(RogueClassCmdCallInlineNativeMethod*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM839)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueClassCmdCallInlineNativeMethod*(*ROGUEM840)(RogueClassCmdCallInlineNativeMethod*);
typedef void(*ROGUEM841)(RogueClassCmdCallInlineNativeMethod*,RogueClassCPPWriter*);
typedef RogueString*(*ROGUEM842)(RogueClassCmdCallNativeMethod*);
typedef RogueClassCmd*(*ROGUEM843)(RogueClassCmdCallNativeMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM844)(RogueClassCmdCallNativeMethod*,RogueClassVisitor*);
typedef void(*ROGUEM845)(RogueClassCmdCallNativeMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallNativeMethod*(*ROGUEM846)(RogueClassCmdCallNativeMethod*);
typedef RogueString*(*ROGUEM847)(RogueClassCmdCallAspectMethod*);
typedef RogueClassCmd*(*ROGUEM848)(RogueClassCmdCallAspectMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM849)(RogueClassCmdCallAspectMethod*,RogueClassVisitor*);
typedef void(*ROGUEM850)(RogueClassCmdCallAspectMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallAspectMethod*(*ROGUEM851)(RogueClassCmdCallAspectMethod*);
typedef RogueString*(*ROGUEM852)(RogueClassCandidateMethods*);
typedef RogueString*(*ROGUEM853)(RogueClassFunction_1409*);
typedef RogueLogical(*ROGUEM854)(RogueClassFunction_1409*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_1409*(*ROGUEM855)(RogueClassFunction_1409*);
typedef RogueString*(*ROGUEM856)(RogueClassFunction_1410*);
typedef RogueLogical(*ROGUEM857)(RogueClassFunction_1410*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_1410*(*ROGUEM858)(RogueClassFunction_1410*);
typedef RogueTableEntry_String_Method__List*(*ROGUEM859)(RogueTableEntry_String_Method__List*);
typedef RogueString*(*ROGUEM860)(RogueTableEntry_String_Method__List*);
typedef RogueString*(*ROGUEM861)(RogueClassTableEntry_String_Method_*);
typedef RogueTableEntry_String_TypeInfo__List*(*ROGUEM862)(RogueTableEntry_String_TypeInfo__List*);
typedef RogueString*(*ROGUEM863)(RogueTableEntry_String_TypeInfo__List*);
typedef RogueString*(*ROGUEM864)(RogueClassTableEntry_String_TypeInfo_*);
typedef RogueTableEntry_String_Logical__List*(*ROGUEM865)(RogueTableEntry_String_Logical__List*);
typedef RogueString*(*ROGUEM866)(RogueTableEntry_String_Logical__List*);
typedef RogueString*(*ROGUEM867)(RogueClassTableEntry_String_Logical_*);
typedef RogueString*(*ROGUEM868)(RogueClassTokenReader*);
typedef RogueString*(*ROGUEM869)(RogueClassTokenizer*);
typedef RogueString*(*ROGUEM870)(RogueClassParseReader*);
typedef RogueLogical(*ROGUEM871)(RogueClassParseReader*);
typedef RogueCharacter(*ROGUEM872)(RogueClassParseReader*);
typedef RogueString*(*ROGUEM873)(RogueClassPreprocessor*);
typedef RogueString*(*ROGUEM874)(RogueClassEOLToken*);
typedef RogueClassEOLToken*(*ROGUEM875)(RogueClassEOLToken*);
typedef RogueString*(*ROGUEM876)(RogueClassCmdNativeHeader*);
typedef RogueClassCmdNativeHeader*(*ROGUEM877)(RogueClassCmdNativeHeader*,RogueClassCloneArgs*);
typedef void(*ROGUEM878)(RogueClassCmdNativeHeader*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM879)(RogueClassCmdNativeHeader*);
typedef RogueClassCmd*(*ROGUEM880)(RogueClassCmdNativeHeader*,RogueClassScope*);
typedef RogueClassCmdNativeHeader*(*ROGUEM881)(RogueClassCmdNativeHeader*);
typedef RogueString*(*ROGUEM882)(RogueClassCmdNativeCode*);
typedef RogueClassCmdNativeCode*(*ROGUEM883)(RogueClassCmdNativeCode*,RogueClassCloneArgs*);
typedef void(*ROGUEM884)(RogueClassCmdNativeCode*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM885)(RogueClassCmdNativeCode*);
typedef RogueClassCmd*(*ROGUEM886)(RogueClassCmdNativeCode*,RogueClassScope*);
typedef RogueClassCmdNativeCode*(*ROGUEM887)(RogueClassCmdNativeCode*);
typedef RogueString*(*ROGUEM888)(RogueClassCmdAwait*);
typedef RogueClassCmd*(*ROGUEM889)(RogueClassCmdAwait*,RogueClassCloneArgs*);
typedef void(*ROGUEM890)(RogueClassCmdAwait*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM891)(RogueClassCmdAwait*,RogueClassScope*);
typedef RogueClassCmdAwait*(*ROGUEM892)(RogueClassCmdAwait*);
typedef RogueString*(*ROGUEM893)(RogueClassCmdYield*);
typedef RogueClassCmd*(*ROGUEM894)(RogueClassCmdYield*,RogueClassCloneArgs*);
typedef void(*ROGUEM895)(RogueClassCmdYield*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM896)(RogueClassCmdYield*,RogueClassScope*);
typedef RogueClassCmdYield*(*ROGUEM897)(RogueClassCmdYield*);
typedef RogueString*(*ROGUEM898)(RogueClassCmdAdjust*);
typedef void(*ROGUEM899)(RogueClassCmdAdjust*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM900)(RogueClassCmdAdjust*,RogueClassScope*);
typedef RogueClassCmdAdjust*(*ROGUEM901)(RogueClassCmdAdjust*);
typedef RogueString*(*ROGUEM902)(RogueClassCmdModifyAndAssign*);
typedef RogueClassCmd*(*ROGUEM903)(RogueClassCmdModifyAndAssign*,RogueClassCloneArgs*);
typedef void(*ROGUEM904)(RogueClassCmdModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM905)(RogueClassCmdModifyAndAssign*,RogueClassScope*);
typedef RogueClassCmdModifyAndAssign*(*ROGUEM906)(RogueClassCmdModifyAndAssign*);
typedef RogueCmdWhichCase_List*(*ROGUEM907)(RogueCmdWhichCase_List*);
typedef RogueString*(*ROGUEM908)(RogueCmdWhichCase_List*);
typedef RogueCmdCatch_List*(*ROGUEM909)(RogueCmdCatch_List*);
typedef RogueString*(*ROGUEM910)(RogueCmdCatch_List*);
typedef RogueString*(*ROGUEM911)(RogueClassCmdCompareLE*);
typedef RogueClassCmd*(*ROGUEM912)(RogueClassCmdCompareLE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM913)(RogueClassCmdCompareLE*,RogueClassType*);
typedef void(*ROGUEM914)(RogueClassCmdCompareLE*,RogueClassVisitor*);
typedef RogueClassCmdCompareLE*(*ROGUEM915)(RogueClassCmdCompareLE*);
typedef RogueClassCmd*(*ROGUEM916)(RogueClassCmdCompareLE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM917)(RogueClassCmdRangeUpTo*);
typedef RogueClassCmd*(*ROGUEM918)(RogueClassCmdRangeUpTo*,RogueClassCloneArgs*);
typedef void(*ROGUEM919)(RogueClassCmdRangeUpTo*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpTo*(*ROGUEM920)(RogueClassCmdRangeUpTo*);
typedef RogueString*(*ROGUEM921)(RogueClassCmdRangeUpToLessThan*);
typedef RogueClassCmd*(*ROGUEM922)(RogueClassCmdRangeUpToLessThan*,RogueClassCloneArgs*);
typedef void(*ROGUEM923)(RogueClassCmdRangeUpToLessThan*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpToLessThan*(*ROGUEM924)(RogueClassCmdRangeUpToLessThan*);
typedef RogueString*(*ROGUEM925)(RogueClassCmdCompareLT*);
typedef RogueClassCmd*(*ROGUEM926)(RogueClassCmdCompareLT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM927)(RogueClassCmdCompareLT*,RogueClassType*);
typedef void(*ROGUEM928)(RogueClassCmdCompareLT*,RogueClassVisitor*);
typedef RogueClassCmdCompareLT*(*ROGUEM929)(RogueClassCmdCompareLT*);
typedef RogueClassCmd*(*ROGUEM930)(RogueClassCmdCompareLT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM931)(RogueClassCmdCompareGE*);
typedef RogueClassCmd*(*ROGUEM932)(RogueClassCmdCompareGE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM933)(RogueClassCmdCompareGE*,RogueClassType*);
typedef void(*ROGUEM934)(RogueClassCmdCompareGE*,RogueClassVisitor*);
typedef RogueClassCmdCompareGE*(*ROGUEM935)(RogueClassCmdCompareGE*);
typedef RogueClassCmd*(*ROGUEM936)(RogueClassCmdCompareGE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM937)(RogueClassCmdRangeDownTo*);
typedef RogueClassCmd*(*ROGUEM938)(RogueClassCmdRangeDownTo*,RogueClassCloneArgs*);
typedef void(*ROGUEM939)(RogueClassCmdRangeDownTo*,RogueClassVisitor*);
typedef RogueClassCmdRangeDownTo*(*ROGUEM940)(RogueClassCmdRangeDownTo*);
typedef RogueInt32(*ROGUEM941)(RogueClassCmdRangeDownTo*);
typedef RogueString*(*ROGUEM942)(RogueClassCmdLogicalXor*);
typedef RogueClassCmd*(*ROGUEM943)(RogueClassCmdLogicalXor*,RogueClassCloneArgs*);
typedef void(*ROGUEM944)(RogueClassCmdLogicalXor*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM945)(RogueClassCmdBinaryLogical*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM946)(RogueClassCmdBinaryLogical*);
typedef RogueClassCmdLogicalXor*(*ROGUEM947)(RogueClassCmdLogicalXor*);
typedef RogueClassCmd*(*ROGUEM948)(RogueClassCmdBinaryLogical*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueLogical(*ROGUEM949)(RogueClassCmdLogicalXor*,RogueLogical,RogueLogical);
typedef RogueString*(*ROGUEM950)(RogueClassCmdBinaryLogical*);
typedef void(*ROGUEM951)(RogueClassCmdBinaryLogical*,RogueClassVisitor*);
typedef RogueClassCmdBinaryLogical*(*ROGUEM952)(RogueClassCmdBinaryLogical*);
typedef RogueLogical(*ROGUEM953)(RogueClassCmdBinaryLogical*,RogueLogical,RogueLogical);
typedef RogueString*(*ROGUEM954)(RogueClassCmdLogicalOr*);
typedef RogueClassCmd*(*ROGUEM955)(RogueClassCmdLogicalOr*,RogueClassCloneArgs*);
typedef void(*ROGUEM956)(RogueClassCmdLogicalOr*,RogueClassVisitor*);
typedef RogueClassCmdLogicalOr*(*ROGUEM957)(RogueClassCmdLogicalOr*);
typedef RogueLogical(*ROGUEM958)(RogueClassCmdLogicalOr*,RogueLogical,RogueLogical);
typedef RogueString*(*ROGUEM959)(RogueClassCmdLogicalAnd*);
typedef RogueClassCmd*(*ROGUEM960)(RogueClassCmdLogicalAnd*,RogueClassCloneArgs*);
typedef void(*ROGUEM961)(RogueClassCmdLogicalAnd*,RogueClassVisitor*);
typedef RogueClassCmdLogicalAnd*(*ROGUEM962)(RogueClassCmdLogicalAnd*);
typedef RogueLogical(*ROGUEM963)(RogueClassCmdLogicalAnd*,RogueLogical,RogueLogical);
typedef RogueString*(*ROGUEM964)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM965)(RogueClassCmdCompareEQ*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM966)(RogueClassCmdCompareEQ*,RogueClassType*);
typedef void(*ROGUEM967)(RogueClassCmdCompareEQ*,RogueClassVisitor*);
typedef RogueClassCmdCompareEQ*(*ROGUEM968)(RogueClassCmdCompareEQ*);
typedef RogueLogical(*ROGUEM969)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM970)(RogueClassCmdCompareEQ*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM971)(RogueClassCmdCompareIs*);
typedef RogueClassCmd*(*ROGUEM972)(RogueClassCmdCompareIs*,RogueClassCloneArgs*);
typedef void(*ROGUEM973)(RogueClassCmdCompareIs*,RogueClassVisitor*);
typedef void(*ROGUEM974)(RogueClassCmdCompareIs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCompareIs*(*ROGUEM975)(RogueClassCmdCompareIs*);
typedef RogueClassCmd*(*ROGUEM976)(RogueClassCmdCompareIs*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueString*(*ROGUEM977)(RogueClassCmdCompareIsNot*);
typedef RogueClassCmd*(*ROGUEM978)(RogueClassCmdCompareIsNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM979)(RogueClassCmdCompareIsNot*,RogueClassVisitor*);
typedef void(*ROGUEM980)(RogueClassCmdCompareIsNot*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCompareIsNot*(*ROGUEM981)(RogueClassCmdCompareIsNot*);
typedef RogueClassCmd*(*ROGUEM982)(RogueClassCmdCompareIsNot*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueString*(*ROGUEM983)(RogueClassCmdCompareGT*);
typedef RogueClassCmd*(*ROGUEM984)(RogueClassCmdCompareGT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM985)(RogueClassCmdCompareGT*,RogueClassType*);
typedef void(*ROGUEM986)(RogueClassCmdCompareGT*,RogueClassVisitor*);
typedef RogueClassCmdCompareGT*(*ROGUEM987)(RogueClassCmdCompareGT*);
typedef RogueClassCmd*(*ROGUEM988)(RogueClassCmdCompareGT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueString*(*ROGUEM989)(RogueClassCmdInstanceOf*);
typedef RogueClassCmd*(*ROGUEM990)(RogueClassCmdInstanceOf*,RogueClassCloneArgs*);
typedef void(*ROGUEM991)(RogueClassCmdInstanceOf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM992)(RogueClassCmdInstanceOf*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM993)(RogueClassCmdInstanceOf*);
typedef void(*ROGUEM994)(RogueClassCmdInstanceOf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdInstanceOf*(*ROGUEM995)(RogueClassCmdInstanceOf*);
typedef RogueString*(*ROGUEM996)(RogueClassCmdLogicalNot*);
typedef RogueClassCmd*(*ROGUEM997)(RogueClassCmdLogicalNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM998)(RogueClassCmdLogicalNot*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM999)(RogueClassCmdLogicalNot*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1000)(RogueClassCmdLogicalNot*);
typedef RogueClassCmdLogicalNot*(*ROGUEM1001)(RogueClassCmdLogicalNot*);
typedef RogueString*(*ROGUEM1002)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueClassCmd*(*ROGUEM1003)(RogueClassCmdBitwiseShiftLeft*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1004)(RogueClassCmdBitwiseShiftLeft*,RogueClassType*);
typedef void(*ROGUEM1005)(RogueClassCmdBitwiseShiftLeft*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftLeft*(*ROGUEM1006)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueString*(*ROGUEM1007)(RogueClassCmdBitwiseShiftRight*);
typedef RogueClassCmd*(*ROGUEM1008)(RogueClassCmdBitwiseShiftRight*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1009)(RogueClassCmdBitwiseShiftRight*,RogueClassType*);
typedef void(*ROGUEM1010)(RogueClassCmdBitwiseShiftRight*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1011)(RogueClassCmdBitwiseShiftRight*,RogueClassScope*);
typedef RogueClassCmdBitwiseShiftRight*(*ROGUEM1012)(RogueClassCmdBitwiseShiftRight*);
typedef RogueString*(*ROGUEM1013)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueClassCmd*(*ROGUEM1014)(RogueClassCmdBitwiseShiftRightX*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1015)(RogueClassCmdBitwiseShiftRightX*,RogueClassType*);
typedef void(*ROGUEM1016)(RogueClassCmdBitwiseShiftRightX*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftRightX*(*ROGUEM1017)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueString*(*ROGUEM1018)(RogueClassCmdNegate*);
typedef RogueClassCmd*(*ROGUEM1019)(RogueClassCmdNegate*,RogueClassCloneArgs*);
typedef void(*ROGUEM1020)(RogueClassCmdNegate*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1021)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueClassCmdNegate*(*ROGUEM1022)(RogueClassCmdNegate*);
typedef RogueClassCmd*(*ROGUEM1023)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueString*(*ROGUEM1024)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM1025)(RogueClassCmdBitwiseNot*,RogueClassCloneArgs*);
typedef void(*ROGUEM1026)(RogueClassCmdBitwiseNot*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1027)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmdBitwiseNot*(*ROGUEM1028)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM1029)(RogueClassCmdBitwiseNot*,RogueClassScope*);
typedef RogueString*(*ROGUEM1030)(RogueClassCmdListConvert*);
typedef RogueClassCmdListConvert*(*ROGUEM1031)(RogueClassCmdListConvert*,RogueClassCloneArgs*);
typedef void(*ROGUEM1032)(RogueClassCmdListConvert*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1033)(RogueClassCmdListConvert*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1034)(RogueClassCmdListConvert*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1035)(RogueClassCmdListConvert*);
typedef RogueClassCmdListConvert*(*ROGUEM1036)(RogueClassCmdListConvert*);
typedef RogueString*(*ROGUEM1037)(RogueClassCmdConvertToType*);
typedef RogueClassCmd*(*ROGUEM1038)(RogueClassCmdConvertToType*,RogueClassCloneArgs*);
typedef void(*ROGUEM1039)(RogueClassCmdConvertToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1040)(RogueClassCmdConvertToType*,RogueClassScope*);
typedef RogueClassCmdConvertToType*(*ROGUEM1041)(RogueClassCmdConvertToType*);
typedef RogueString*(*ROGUEM1042)(RogueClassCmdCreateCallback*);
typedef RogueClassCmdCreateCallback*(*ROGUEM1043)(RogueClassCmdCreateCallback*,RogueClassCloneArgs*);
typedef void(*ROGUEM1044)(RogueClassCmdCreateCallback*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1045)(RogueClassCmdCreateCallback*,RogueClassScope*);
typedef RogueClassCmdCreateCallback*(*ROGUEM1046)(RogueClassCmdCreateCallback*);
typedef RogueString*(*ROGUEM1047)(RogueClassCmdAs*);
typedef RogueClassCmd*(*ROGUEM1048)(RogueClassCmdAs*,RogueClassCloneArgs*);
typedef void(*ROGUEM1049)(RogueClassCmdAs*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1050)(RogueClassCmdAs*,RogueClassScope*);
typedef void(*ROGUEM1051)(RogueClassCmdAs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAs*(*ROGUEM1052)(RogueClassCmdAs*);
typedef RogueString*(*ROGUEM1053)(RogueClassCmdDefaultValue*);
typedef RogueClassCmd*(*ROGUEM1054)(RogueClassCmdDefaultValue*,RogueClassCloneArgs*);
typedef void(*ROGUEM1055)(RogueClassCmdDefaultValue*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1056)(RogueClassCmdDefaultValue*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1057)(RogueClassCmdDefaultValue*);
typedef RogueClassCmdDefaultValue*(*ROGUEM1058)(RogueClassCmdDefaultValue*);
typedef RogueString*(*ROGUEM1059)(RogueClassCmdLiteralReal64*);
typedef RogueClassCmd*(*ROGUEM1060)(RogueClassCmdLiteralReal64*,RogueClassCloneArgs*);
typedef void(*ROGUEM1061)(RogueClassCmdLiteralReal64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1062)(RogueClassCmdLiteralReal64*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1063)(RogueClassCmdLiteralReal64*);
typedef void(*ROGUEM1064)(RogueClassCmdLiteralReal64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralReal64*(*ROGUEM1065)(RogueClassCmdLiteralReal64*);
typedef RogueString*(*ROGUEM1066)(RogueClassCmdLiteralInt64*);
typedef RogueClassCmd*(*ROGUEM1067)(RogueClassCmdLiteralInt64*,RogueClassType*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1068)(RogueClassCmdLiteralInt64*,RogueClassCloneArgs*);
typedef void(*ROGUEM1069)(RogueClassCmdLiteralInt64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1070)(RogueClassCmdLiteralInt64*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1071)(RogueClassCmdLiteralInt64*);
typedef void(*ROGUEM1072)(RogueClassCmdLiteralInt64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralInt64*(*ROGUEM1073)(RogueClassCmdLiteralInt64*);
typedef RogueString*(*ROGUEM1074)(RogueClassCmdLiteralCharacter*);
typedef RogueClassCmd*(*ROGUEM1075)(RogueClassCmdLiteralCharacter*,RogueClassCloneArgs*);
typedef void(*ROGUEM1076)(RogueClassCmdLiteralCharacter*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1077)(RogueClassCmdLiteralCharacter*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1078)(RogueClassCmdLiteralCharacter*);
typedef void(*ROGUEM1079)(RogueClassCmdLiteralCharacter*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralCharacter*(*ROGUEM1080)(RogueClassCmdLiteralCharacter*);
typedef RogueString*(*ROGUEM1081)(RogueClassCmdCreateList*);
typedef RogueClassCmd*(*ROGUEM1082)(RogueClassCmdCreateList*,RogueClassCloneArgs*);
typedef void(*ROGUEM1083)(RogueClassCmdCreateList*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1084)(RogueClassCmdCreateList*,RogueClassScope*);
typedef RogueClassCmdCreateList*(*ROGUEM1085)(RogueClassCmdCreateList*);
typedef RogueCmdSelectCase_List*(*ROGUEM1086)(RogueCmdSelectCase_List*);
typedef RogueString*(*ROGUEM1087)(RogueCmdSelectCase_List*);
typedef RogueString*(*ROGUEM1088)(RogueClassCmdTypedLiteralList*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM1089)(RogueClassCmdTypedLiteralList*,RogueClassCloneArgs*);
typedef void(*ROGUEM1090)(RogueClassCmdTypedLiteralList*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1091)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1092)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1093)(RogueClassCmdTypedLiteralList*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM1094)(RogueClassCmdTypedLiteralList*);
typedef RogueTableEntry_String_ParseReader__List*(*ROGUEM1095)(RogueTableEntry_String_ParseReader__List*);
typedef RogueString*(*ROGUEM1096)(RogueTableEntry_String_ParseReader__List*);
typedef RogueString*(*ROGUEM1097)(RogueClassTableEntry_String_ParseReader_*);
typedef RogueString*(*ROGUEM1098)(RogueClassIOError*);
typedef RogueClassIOError*(*ROGUEM1099)(RogueClassIOError*);
typedef RogueString*(*ROGUEM1100)(RogueClassFileReader*);
typedef RogueLogical(*ROGUEM1101)(RogueClassFileReader*);
typedef RogueByte(*ROGUEM1102)(RogueClassFileReader*);
typedef RogueString*(*ROGUEM1103)(RogueClassFileWriter*);
typedef RogueClassFileWriter*(*ROGUEM1104)(RogueClassFileWriter*);
typedef RogueClassFileWriter*(*ROGUEM1105)(RogueClassFileWriter*,RogueByte);
typedef RogueString*(*ROGUEM1106)(RogueClassUTF8Reader*);
typedef RogueLogical(*ROGUEM1107)(RogueClassUTF8Reader*);
typedef RogueCharacter(*ROGUEM1108)(RogueClassUTF8Reader*);
typedef RogueTableEntry_String_TokenType__List*(*ROGUEM1109)(RogueTableEntry_String_TokenType__List*);
typedef RogueString*(*ROGUEM1110)(RogueTableEntry_String_TokenType__List*);
typedef RogueString*(*ROGUEM1111)(RogueClassTableEntry_String_TokenType_*);
typedef RogueTableEntry_String_TypeSpecializer__List*(*ROGUEM1112)(RogueTableEntry_String_TypeSpecializer__List*);
typedef RogueString*(*ROGUEM1113)(RogueTableEntry_String_TypeSpecializer__List*);
typedef RogueString*(*ROGUEM1114)(RogueClassTableEntry_String_TypeSpecializer_*);
typedef RogueTableEntry_String_CmdLabel__List*(*ROGUEM1115)(RogueTableEntry_String_CmdLabel__List*);
typedef RogueString*(*ROGUEM1116)(RogueTableEntry_String_CmdLabel__List*);
typedef RogueString*(*ROGUEM1117)(RogueClassTableEntry_String_CmdLabel_*);
typedef RogueToken_List_List*(*ROGUEM1118)(RogueToken_List_List*);
typedef RogueString*(*ROGUEM1119)(RogueToken_List_List*);
typedef RogueClassTable_String_Token_List_*(*ROGUEM1120)(RogueClassTable_String_Token_List_*);
typedef RogueString*(*ROGUEM1121)(RogueClassTable_String_Token_List_*);
typedef RogueCmdTaskControlSection_List*(*ROGUEM1122)(RogueCmdTaskControlSection_List*);
typedef RogueString*(*ROGUEM1123)(RogueCmdTaskControlSection_List*);
typedef RogueString*(*ROGUEM1124)(RogueClassRequirementError*);
typedef RogueClassRequirementError*(*ROGUEM1125)(RogueClassRequirementError*,RogueString*);
typedef RogueClassRequirementError*(*ROGUEM1126)(RogueClassRequirementError*);
typedef RogueString*(*ROGUEM1127)(RogueClassCmdCallStaticMethod*);
typedef RogueClassCmd*(*ROGUEM1128)(RogueClassCmdCallStaticMethod*,RogueClassCloneArgs*);
typedef void(*ROGUEM1129)(RogueClassCmdCallStaticMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1130)(RogueClassCmdCallStaticMethod*,RogueClassScope*);
typedef void(*ROGUEM1131)(RogueClassCmdCallStaticMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallStaticMethod*(*ROGUEM1132)(RogueClassCmdCallStaticMethod*);
typedef RogueString*(*ROGUEM1133)(RogueClassListReader_CmdSelectCase_*);
typedef RogueLogical(*ROGUEM1134)(RogueClassListReader_CmdSelectCase_*);
typedef RogueClassCmdSelectCase*(*ROGUEM1135)(RogueClassListReader_CmdSelectCase_*);
typedef RogueTableEntry_String_Definition__List*(*ROGUEM1136)(RogueTableEntry_String_Definition__List*);
typedef RogueString*(*ROGUEM1137)(RogueTableEntry_String_Definition__List*);
typedef RogueString*(*ROGUEM1138)(RogueClassTableEntry_String_Definition_*);
typedef RogueTableEntry_String_Property__List*(*ROGUEM1139)(RogueTableEntry_String_Property__List*);
typedef RogueString*(*ROGUEM1140)(RogueTableEntry_String_Property__List*);
typedef RogueString*(*ROGUEM1141)(RogueClassTableEntry_String_Property_*);
typedef RogueMethodTemplate_List*(*ROGUEM1142)(RogueMethodTemplate_List*);
typedef RogueString*(*ROGUEM1143)(RogueMethodTemplate_List*);
typedef RogueClassTable_String_Cmd_*(*ROGUEM1144)(RogueClassTable_String_Cmd_*);
typedef RogueString*(*ROGUEM1145)(RogueClassTable_String_Cmd_*);
typedef RogueString*(*ROGUEM1146)(RogueClassDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1147)(RogueClassDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1148)(RogueClassDirectiveTokenType*);
typedef RogueClassDirectiveTokenType*(*ROGUEM1149)(RogueClassDirectiveTokenType*);
typedef RogueString*(*ROGUEM1150)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1151)(RogueClassStructuralDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1152)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassStructuralDirectiveTokenType*(*ROGUEM1153)(RogueClassStructuralDirectiveTokenType*);
typedef RogueString*(*ROGUEM1154)(RogueClassEOLTokenType*);
typedef RogueClassToken*(*ROGUEM1155)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM1156)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueLogical(*ROGUEM1157)(RogueClassEOLTokenType*);
typedef RogueClassEOLTokenType*(*ROGUEM1158)(RogueClassEOLTokenType*);
typedef RogueString*(*ROGUEM1159)(RogueClassStructureTokenType*);
typedef RogueClassToken*(*ROGUEM1160)(RogueClassStructureTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1161)(RogueClassStructureTokenType*);
typedef RogueClassStructureTokenType*(*ROGUEM1162)(RogueClassStructureTokenType*);
typedef RogueString*(*ROGUEM1163)(RogueClassNativeCodeTokenType*);
typedef RogueClassToken*(*ROGUEM1164)(RogueClassNativeCodeTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM1165)(RogueClassNativeCodeTokenType*,RogueClassToken*,RogueString*);
typedef RogueClassNativeCodeTokenType*(*ROGUEM1166)(RogueClassNativeCodeTokenType*);
typedef RogueString*(*ROGUEM1167)(RogueClassModifyAndAssignTokenType*);
typedef RogueLogical(*ROGUEM1168)(RogueClassModifyAndAssignTokenType*);
typedef RogueClassModifyAndAssignTokenType*(*ROGUEM1169)(RogueClassModifyAndAssignTokenType*);
typedef RogueString*(*ROGUEM1170)(RogueClassPreprocessorTokenReader*);
typedef RogueString*(*ROGUEM1171)(RogueClassCmdConvertToPrimitiveType*);
typedef RogueClassCmd*(*ROGUEM1172)(RogueClassCmdConvertToPrimitiveType*,RogueClassCloneArgs*);
typedef void(*ROGUEM1173)(RogueClassCmdConvertToPrimitiveType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1174)(RogueClassCmdConvertToPrimitiveType*,RogueClassScope*);
typedef void(*ROGUEM1175)(RogueClassCmdConvertToPrimitiveType*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdConvertToPrimitiveType*(*ROGUEM1176)(RogueClassCmdConvertToPrimitiveType*);
typedef RogueTableEntry_String_Token_List__List*(*ROGUEM1177)(RogueTableEntry_String_Token_List__List*);
typedef RogueString*(*ROGUEM1178)(RogueTableEntry_String_Token_List__List*);
typedef RogueString*(*ROGUEM1179)(RogueClassTableEntry_String_Token_List_*);
typedef RogueTableEntry_String_Cmd__List*(*ROGUEM1180)(RogueTableEntry_String_Cmd__List*);
typedef RogueString*(*ROGUEM1181)(RogueTableEntry_String_Cmd__List*);
typedef RogueString*(*ROGUEM1182)(RogueClassTableEntry_String_Cmd_*);
typedef RogueString*(*ROGUEM1183)(RogueClassNativeCodeToken*);
typedef RogueClassNativeCodeToken*(*ROGUEM1184)(RogueClassNativeCodeToken*);

RogueObject* call_ROGUEM0( int i, RogueObject* THIS )
{
  return ((ROGUEM0)(THIS->type->methods[i]))( THIS );
}

RogueClassException* call_ROGUEM2( int i, RogueClassException* THIS, RogueString* p0 )
{
  return ((ROGUEM2)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM4( int i, RogueObject* THIS )
{
  return ((ROGUEM4)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM17( int i, RogueClassTable_String_String_* THIS, RogueString* p0 )
{
  return ((ROGUEM17)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM30( int i, RogueClassFunction__* THIS )
{
  ((ROGUEM30)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM68( int i, RogueClassToken* THIS )
{
  return ((ROGUEM68)(THIS->type->methods[i]))( THIS );
}

RogueCharacter call_ROGUEM69( int i, RogueClassToken* THIS )
{
  return ((ROGUEM69)(THIS->type->methods[i]))( THIS );
}

RogueInt32 call_ROGUEM70( int i, RogueClassToken* THIS )
{
  return ((ROGUEM70)(THIS->type->methods[i]))( THIS );
}

RogueInt64 call_ROGUEM71( int i, RogueClassToken* THIS )
{
  return ((ROGUEM71)(THIS->type->methods[i]))( THIS );
}

RogueReal64 call_ROGUEM72( int i, RogueClassToken* THIS )
{
  return ((ROGUEM72)(THIS->type->methods[i]))( THIS );
}

RogueClassType* call_ROGUEM73( int i, RogueClassToken* THIS )
{
  return ((ROGUEM73)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM80( int i, RogueClassCmd* THIS, RogueClassCmdStatementList* p0 )
{
  ((ROGUEM80)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM81( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM81)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM82( int i, RogueClassCmd* THIS, RogueClassType* p0, RogueClassScope* p1 )
{
  return ((ROGUEM82)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* call_ROGUEM84( int i, RogueClassCmd* THIS, RogueClassType* p0 )
{
  return ((ROGUEM84)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM86( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  ((ROGUEM86)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM87( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM87)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM89( int i, RogueClassCmd* THIS )
{
  ((ROGUEM89)(THIS->type->methods[i]))( THIS );
}

RogueClassType* call_ROGUEM90( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM90)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM93( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueInt32 p1 )
{
  return ((ROGUEM93)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueString* call_ROGUEM98( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM98)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM99( int i, RogueClassCmd* THIS, RogueClassCloneArgs* p0 )
{
  return ((ROGUEM99)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM100( int i, RogueClassCmd* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM100)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassType* call_ROGUEM101( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM101)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM102( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassCmd* p1 )
{
  return ((ROGUEM102)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* call_ROGUEM103( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassTokenType* p1, RogueClassCmd* p2 )
{
  return ((ROGUEM103)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

void call_ROGUEM104( int i, RogueClassCmd* THIS, RogueClassCPPWriter* p0, RogueLogical p1 )
{
  ((ROGUEM104)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueCmd_List* call_ROGUEM111( int i, RogueCmd_List* THIS, RogueInt32 p0 )
{
  return ((ROGUEM111)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM116( int i, RogueClassCmdNamedArg* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM116)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassToken* call_ROGUEM139( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2 )
{
  return ((ROGUEM139)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassToken* call_ROGUEM140( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2, RogueString* p3 )
{
  return ((ROGUEM140)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueClassToken* call_ROGUEM141( int i, RogueClassTokenType* THIS, RogueClassToken* p0, RogueString* p1 )
{
  return ((ROGUEM141)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueLogical call_ROGUEM142( int i, RogueClassTokenType* THIS )
{
  return ((ROGUEM142)(THIS->type->methods[i]))( THIS );
}

RogueLogical call_ROGUEM151( int i, RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* p0 )
{
  return ((ROGUEM151)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM196( int i, RogueClassFunction__RETURNSLogical* THIS )
{
  return ((ROGUEM196)(THIS->type->methods[i]))( THIS );
}

RogueClassCmdLabel* call_ROGUEM241( int i, RogueClassCloneArgs* THIS, RogueClassCmdLabel* p0 )
{
  return ((ROGUEM241)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM246( int i, RogueClassVisitor* THIS )
{
  return ((ROGUEM246)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM247( int i, RogueClassVisitor* THIS, RogueClassType* p0 )
{
  ((ROGUEM247)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM248( int i, RogueClassVisitor* THIS, RogueClassMethod* p0 )
{
  ((ROGUEM248)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM249( int i, RogueClassVisitor* THIS, RogueClassCmdLiteralString* p0 )
{
  ((ROGUEM249)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM250( int i, RogueClassVisitor* THIS, RogueClassCmdThisContext* p0 )
{
  ((ROGUEM250)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM251( int i, RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* p0 )
{
  ((ROGUEM251)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM286( int i, RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* p0 )
{
  return ((ROGUEM286)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM310( int i, RogueClassCmdWhichCase* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM310)(THIS->type->methods[i]))( THIS, p0 );
}

void call_ROGUEM359( int i, RogueClassCmdCatch* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM359)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassType* call_ROGUEM486( int i, RogueClassCmdCall* THIS )
{
  return ((ROGUEM486)(THIS->type->methods[i]))( THIS );
}

RogueInt32 call_ROGUEM508( int i, RogueClassCmdRange* THIS )
{
  return ((ROGUEM508)(THIS->type->methods[i]))( THIS );
}

RogueString* call_ROGUEM509( int i, RogueClassCmdUnary* THIS )
{
  return ((ROGUEM509)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM511( int i, RogueClassCmdUnary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM511)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM515( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM515)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM517( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM517)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM521( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM521)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* call_ROGUEM522( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2 )
{
  return ((ROGUEM522)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassCmd* call_ROGUEM523( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1 )
{
  return ((ROGUEM523)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassType* call_ROGUEM600( int i, RogueClassCmdTypeOperator* THIS )
{
  return ((ROGUEM600)(THIS->type->methods[i]))( THIS );
}

void call_ROGUEM643( int i, RogueClassCmdSelectCase* THIS, RogueClassVisitor* p0 )
{
  ((ROGUEM643)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* call_ROGUEM676( int i, RogueClassCmdComparison* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2, RogueLogical p3 )
{
  return ((ROGUEM676)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueLogical call_ROGUEM808( int i, RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0 )
{
  return ((ROGUEM808)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical call_ROGUEM812( int i, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0, RogueClassCmdNamedArg* p1 )
{
  return ((ROGUEM812)(THIS->type->methods[i]))( THIS, p0, p1 );
}

void call_ROGUEM823( int i, RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* p0 )
{
  ((ROGUEM823)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* call_ROGUEM950( int i, RogueClassCmdBinaryLogical* THIS )
{
  return ((ROGUEM950)(THIS->type->methods[i]))( THIS );
}

RogueLogical call_ROGUEM953( int i, RogueClassCmdBinaryLogical* THIS, RogueLogical p0, RogueLogical p1 )
{
  return ((ROGUEM953)(THIS->type->methods[i]))( THIS, p0, p1 );
}


// GLOBAL PROPERTIES
RogueByte_List* RogueStringBuilder_work_bytes = 0;
RogueClassTable_String_String_* RogueToken_filepath_to_filename = 0;
RogueClassCmdStatementList* RogueCmdStatementList_current = 0;
RogueClassTable_String_TokenType_* RogueTokenType_lookup = 0;
RogueClassTokenType* RogueTokenType_directive_define = 0;
RogueClassTokenType* RogueTokenType_directive_include = 0;
RogueClassTokenType* RogueTokenType_directive_includeNativeCode = 0;
RogueClassTokenType* RogueTokenType_directive_includeNativeHeader = 0;
RogueClassTokenType* RogueTokenType_directive_if = 0;
RogueClassTokenType* RogueTokenType_directive_elseIf = 0;
RogueClassTokenType* RogueTokenType_directive_else = 0;
RogueClassTokenType* RogueTokenType_directive_endIf = 0;
RogueClassTokenType* RogueTokenType_directive_module = 0;
RogueClassTokenType* RogueTokenType_directive_requisite = 0;
RogueClassTokenType* RogueTokenType_directive_using = 0;
RogueClassTokenType* RogueTokenType_placeholder_id = 0;
RogueClassTokenType* RogueTokenType_begin_augment_tokens = 0;
RogueClassTokenType* RogueTokenType_keyword_augment = 0;
RogueClassTokenType* RogueTokenType_keyword_case = 0;
RogueClassTokenType* RogueTokenType_keyword_catch = 0;
RogueClassTokenType* RogueTokenType_keyword_CLASS = 0;
RogueClassTokenType* RogueTokenType_keyword_class = 0;
RogueClassTokenType* RogueTokenType_keyword_DEFINITIONS = 0;
RogueClassTokenType* RogueTokenType_keyword_else = 0;
RogueClassTokenType* RogueTokenType_keyword_elseIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endAugment = 0;
RogueClassTokenType* RogueTokenType_keyword_endBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_endClass = 0;
RogueClassTokenType* RogueTokenType_keyword_endContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_endForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_endFunction = 0;
RogueClassTokenType* RogueTokenType_keyword_endIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_endRoutine = 0;
RogueClassTokenType* RogueTokenType_keyword_endTry = 0;
RogueClassTokenType* RogueTokenType_keyword_endUnitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_ENUMERATE = 0;
RogueClassTokenType* RogueTokenType_keyword_GLOBAL = 0;
RogueClassTokenType* RogueTokenType_keyword_method = 0;
RogueClassTokenType* RogueTokenType_keyword_METHODS = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeCode = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeHeader = 0;
RogueClassTokenType* RogueTokenType_keyword_others = 0;
RogueClassTokenType* RogueTokenType_keyword_PROPERTIES = 0;
RogueClassTokenType* RogueTokenType_keyword_routine = 0;
RogueClassTokenType* RogueTokenType_keyword_satisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_unsatisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_with = 0;
RogueClassTokenType* RogueTokenType_symbol_close_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_close_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_close_comment = 0;
RogueClassTokenType* RogueTokenType_symbol_close_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_close_specialize = 0;
RogueClassTokenType* RogueTokenType_eol = 0;
RogueClassTokenType* RogueTokenType_eoi = 0;
RogueClassTokenType* RogueTokenType_keyword_assert = 0;
RogueClassTokenType* RogueTokenType_keyword_await = 0;
RogueClassTokenType* RogueTokenType_keyword_block = 0;
RogueClassTokenType* RogueTokenType_keyword_contingent = 0;
RogueClassTokenType* RogueTokenType_keyword_ensure = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeIf = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeTry = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_forEach = 0;
RogueClassTokenType* RogueTokenType_keyword_function = 0;
RogueClassTokenType* RogueTokenType_keyword_global = 0;
RogueClassTokenType* RogueTokenType_keyword_if = 0;
RogueClassTokenType* RogueTokenType_keyword_in = 0;
RogueClassTokenType* RogueTokenType_keyword_infinity = 0;
RogueClassTokenType* RogueTokenType_keyword_is = 0;
RogueClassTokenType* RogueTokenType_keyword_isNot = 0;
RogueClassTokenType* RogueTokenType_keyword_local = 0;
RogueClassTokenType* RogueTokenType_keyword_loop = 0;
RogueClassTokenType* RogueTokenType_keyword_NaN = 0;
RogueClassTokenType* RogueTokenType_keyword_native = 0;
RogueClassTokenType* RogueTokenType_keyword_necessary = 0;
RogueClassTokenType* RogueTokenType_keyword_nextIteration = 0;
RogueClassTokenType* RogueTokenType_keyword_noAction = 0;
RogueClassTokenType* RogueTokenType_keyword_null = 0;
RogueClassTokenType* RogueTokenType_keyword_of = 0;
RogueClassTokenType* RogueTokenType_keyword_require = 0;
RogueClassTokenType* RogueTokenType_keyword_return = 0;
RogueClassTokenType* RogueTokenType_keyword_select = 0;
RogueClassTokenType* RogueTokenType_keyword_step = 0;
RogueClassTokenType* RogueTokenType_keyword_sufficient = 0;
RogueClassTokenType* RogueTokenType_keyword_throw = 0;
RogueClassTokenType* RogueTokenType_keyword_trace = 0;
RogueClassTokenType* RogueTokenType_keyword_trace_position = 0;
RogueClassTokenType* RogueTokenType_keyword_try = 0;
RogueClassTokenType* RogueTokenType_keyword_unitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_which = 0;
RogueClassTokenType* RogueTokenType_keyword_while = 0;
RogueClassTokenType* RogueTokenType_keyword_yield = 0;
RogueClassTokenType* RogueTokenType_identifier = 0;
RogueClassTokenType* RogueTokenType_type_identifier = 0;
RogueClassTokenType* RogueTokenType_literal_character = 0;
RogueClassTokenType* RogueTokenType_literal_integer = 0;
RogueClassTokenType* RogueTokenType_literal_long = 0;
RogueClassTokenType* RogueTokenType_literal_real = 0;
RogueClassTokenType* RogueTokenType_literal_string = 0;
RogueClassTokenType* RogueTokenType_keyword_and = 0;
RogueClassTokenType* RogueTokenType_keyword_as = 0;
RogueClassTokenType* RogueTokenType_keyword_downTo = 0;
RogueClassTokenType* RogueTokenType_keyword_false = 0;
RogueClassTokenType* RogueTokenType_keyword_instanceOf = 0;
RogueClassTokenType* RogueTokenType_keyword_meta = 0;
RogueClassTokenType* RogueTokenType_keyword_not = 0;
RogueClassTokenType* RogueTokenType_keyword_notInstanceOf = 0;
RogueClassTokenType* RogueTokenType_keyword_or = 0;
RogueClassTokenType* RogueTokenType_keyword_pi = 0;
RogueClassTokenType* RogueTokenType_keyword_prior = 0;
RogueClassTokenType* RogueTokenType_keyword_this = 0;
RogueClassTokenType* RogueTokenType_keyword_true = 0;
RogueClassTokenType* RogueTokenType_keyword_xor = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_at = 0;
RogueClassTokenType* RogueTokenType_symbol_at_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_at_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_backslash = 0;
RogueClassTokenType* RogueTokenType_symbol_caret = 0;
RogueClassTokenType* RogueTokenType_symbol_caret_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_colon = 0;
RogueClassTokenType* RogueTokenType_symbol_comma = 0;
RogueClassTokenType* RogueTokenType_symbol_compare = 0;
RogueClassTokenType* RogueTokenType_symbol_dot = 0;
RogueClassTokenType* RogueTokenType_symbol_dot_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_downToGreaterThan = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_braces = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_brackets = 0;
RogueClassTokenType* RogueTokenType_symbol_eq = 0;
RogueClassTokenType* RogueTokenType_symbol_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_exclamation_point = 0;
RogueClassTokenType* RogueTokenType_symbol_fat_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_ge = 0;
RogueClassTokenType* RogueTokenType_symbol_gt = 0;
RogueClassTokenType* RogueTokenType_symbol_le = 0;
RogueClassTokenType* RogueTokenType_symbol_lt = 0;
RogueClassTokenType* RogueTokenType_symbol_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_ne = 0;
RogueClassTokenType* RogueTokenType_symbol_open_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_open_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_open_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_open_specialize = 0;
RogueClassTokenType* RogueTokenType_symbol_percent = 0;
RogueClassTokenType* RogueTokenType_symbol_percent_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_question_mark = 0;
RogueClassTokenType* RogueTokenType_symbol_semicolon = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_left = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right_x = 0;
RogueClassTokenType* RogueTokenType_symbol_slash = 0;
RogueClassTokenType* RogueTokenType_symbol_slash_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_times = 0;
RogueClassTokenType* RogueTokenType_symbol_times_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_upTo = 0;
RogueClassTokenType* RogueTokenType_symbol_upToLessThan = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_vertical_bar = 0;
RogueString_List* RogueSystem_command_line_arguments = 0;
RogueString* RogueSystem_executable_filepath = 0;
RogueClassSystemEnvironment RogueSystem_environment = RogueClassSystemEnvironment();
RogueClassTable_String_TypeInfo_* RogueSystem_classes = 0;
RogueClassTable_String_Token_List_* RoguePreprocessor_definitions = 0;

void RogueException_trace( void* obj );
void RogueStackTrace_trace( void* obj );
void RogueTypeInfo_trace( void* obj );
void RogueStringBuilder_trace( void* obj );
void RogueByte_List_trace( void* obj );
void RogueCharacter_List_trace( void* obj );
void RogueTable_String_String__trace( void* obj );
void RogueString_List_trace( void* obj );
void RogueStringReader_trace( void* obj );
void RogueGlobal_trace( void* obj );
void RogueFunction___List_trace( void* obj );
void RogueRogueC_trace( void* obj );
void RogueConsole_trace( void* obj );
void RogueProgram_trace( void* obj );
void RogueTemplate_List_trace( void* obj );
void RogueTemplate_trace( void* obj );
void RogueTable_String_Template__trace( void* obj );
void RogueTable_String_Augment_List__trace( void* obj );
void RogueMethod_trace( void* obj );
void RogueProperty_List_trace( void* obj );
void RogueProperty_trace( void* obj );
void RogueTable_String_Method_List__trace( void* obj );
void RogueType_List_trace( void* obj );
void RogueType_trace( void* obj );
void RogueTable_String_Type__trace( void* obj );
void RogueTable_String_Int32__trace( void* obj );
void RogueTable_String_String_List__trace( void* obj );
void RogueTableEntry_String_Int32__trace( void* obj );
void RogueTable_Int32_Template__trace( void* obj );
void RogueAttributes_trace( void* obj );
void RogueToken_List_trace( void* obj );
void RogueToken_trace( void* obj );
void RogueError_trace( void* obj );
void RogueRogueError_trace( void* obj );
void RogueCmdAccess_trace( void* obj );
void RogueCmd_trace( void* obj );
void RogueCmdArgs_trace( void* obj );
void RogueCmd_List_trace( void* obj );
void RogueCmdNamedArg_List_trace( void* obj );
void RogueCmdNamedArg_trace( void* obj );
void RogueCmdStatementList_trace( void* obj );
void RogueCmdLabel_trace( void* obj );
void RogueCmdReturn_trace( void* obj );
void RogueCmdStatement_trace( void* obj );
void RogueTokenType_trace( void* obj );
void RogueScope_trace( void* obj );
void RogueMethod_List_trace( void* obj );
void RoguePlugin_List_trace( void* obj );
void RoguePlugin_trace( void* obj );
void RogueCPPWriter_trace( void* obj );
void RogueTable_String_Method__trace( void* obj );
void RogueLocal_List_trace( void* obj );
void RogueLocal_trace( void* obj );
void RogueInt32_List_trace( void* obj );
void RogueTable_String_TypeInfo__trace( void* obj );
void RogueTableEntry_String_String__List_trace( void* obj );
void RogueTableEntry_String_String__trace( void* obj );
void RogueTable_String_Logical__trace( void* obj );
void RogueParser_List_trace( void* obj );
void RogueParser_trace( void* obj );
void RogueTable_String_ParseReader__trace( void* obj );
void RogueFile_trace( void* obj );
void RogueCmdMakeRequisite_trace( void* obj );
void RogueLineReader_trace( void* obj );
void RogueTypeParameter_List_trace( void* obj );
void RogueTypeParameter_trace( void* obj );
void RogueAugment_List_trace( void* obj );
void RogueAugment_trace( void* obj );
void RogueTable_String_TokenType__trace( void* obj );
void RogueLiteralCharacterToken_trace( void* obj );
void RogueLiteralInt64Token_trace( void* obj );
void RogueLiteralInt32Token_trace( void* obj );
void RogueLiteralReal64Token_trace( void* obj );
void RogueStringDataToken_trace( void* obj );
void RogueTable_String_TypeSpecializer__trace( void* obj );
void RogueTypeSpecializer_trace( void* obj );
void RogueTypeSpecializer_List_trace( void* obj );
void RogueTableEntry_String_Template__List_trace( void* obj );
void RogueTableEntry_String_Template__trace( void* obj );
void RogueTableEntry_String_Augment_List__List_trace( void* obj );
void RogueTableEntry_String_Augment_List__trace( void* obj );
void RogueCmdLabel_List_trace( void* obj );
void RogueTable_String_CmdLabel__trace( void* obj );
void RogueMethodTemplate_trace( void* obj );
void RogueCloneMethodArgs_trace( void* obj );
void RogueCmdAssert_trace( void* obj );
void RogueCmdRequire_trace( void* obj );
void RogueCmdAssign_trace( void* obj );
void RogueCmdLocalDeclaration_trace( void* obj );
void RogueCmdBlock_trace( void* obj );
void RogueCmdControlStructure_trace( void* obj );
void RogueCmdIf_trace( void* obj );
void RogueCmdSwitch_trace( void* obj );
void RogueCmdWhich_trace( void* obj );
void RogueCmdWhichCase_trace( void* obj );
void RogueCmdContingent_trace( void* obj );
void RogueCmdGenericLoop_trace( void* obj );
void RogueCmdElementAccess_trace( void* obj );
void RogueCmdEnsure_trace( void* obj );
void RogueCmdForEach_trace( void* obj );
void RogueCmdFormattedString_trace( void* obj );
void RogueCmdTry_trace( void* obj );
void RogueCmdCatch_trace( void* obj );
void RogueCmdThrow_trace( void* obj );
void RogueCmdEscape_trace( void* obj );
void RogueCmdNextIteration_trace( void* obj );
void RogueCmdNecessary_trace( void* obj );
void RogueCmdSufficient_trace( void* obj );
void RogueCmdLiteral_trace( void* obj );
void RogueCmdLiteralString_trace( void* obj );
void RogueCmdCreateObject_trace( void* obj );
void RogueCmdCreateCompound_trace( void* obj );
void RogueCmdThisContext_trace( void* obj );
void RogueCmdReadSingleton_trace( void* obj );
void RogueCmdWriteSingleton_trace( void* obj );
void RogueCmdReadLocal_trace( void* obj );
void RogueCmdWriteLocal_trace( void* obj );
void RogueCmdReadGlobal_trace( void* obj );
void RogueCmdWriteGlobal_trace( void* obj );
void RogueCmdReadProperty_trace( void* obj );
void RogueCmdWriteProperty_trace( void* obj );
void RogueCmdCall_trace( void* obj );
void RogueCmdCallDynamicMethod_trace( void* obj );
void RogueCmdCallMethod_trace( void* obj );
void RogueCmdCallPriorMethod_trace( void* obj );
void RogueCmdRange_trace( void* obj );
void RogueCmdUnary_trace( void* obj );
void RogueCmdBinary_trace( void* obj );
void RogueCmdAdjustLocal_trace( void* obj );
void RogueCmdAdjustProperty_trace( void* obj );
void RogueCmdAdjustGlobal_trace( void* obj );
void RogueCmdModifyAndAssignLocal_trace( void* obj );
void RogueCmdResolvedModifyAndAssign_trace( void* obj );
void RogueCmdModifyAndAssignGlobal_trace( void* obj );
void RogueCmdModifyAndAssignProperty_trace( void* obj );
void RogueCmdCreateArray_trace( void* obj );
void RogueCmdReadArrayElement_trace( void* obj );
void RogueCmdReadArrayCount_trace( void* obj );
void RogueCmdWriteArrayElement_trace( void* obj );
void RogueCmdTypeOperator_trace( void* obj );
void RogueCmdTaskControl_trace( void* obj );
void RogueCmdTrace_trace( void* obj );
void RogueCmdInlineNative_trace( void* obj );
void RogueCmdNoAction_trace( void* obj );
void RogueCmdSelect_trace( void* obj );
void RogueCmdSelectCase_trace( void* obj );
void RogueCmdControlStructure_List_trace( void* obj );
void RogueCmdLiteralThis_trace( void* obj );
void RogueCmdLiteralInt32_trace( void* obj );
void RogueCmdCompareNE_trace( void* obj );
void RogueCmdComparison_trace( void* obj );
void RogueTaskArgs_trace( void* obj );
void RogueCmdTaskControlSection_trace( void* obj );
void RogueTableEntry_String_Method_List__List_trace( void* obj );
void RogueTableEntry_String_Method_List__trace( void* obj );
void RogueDefinition_List_trace( void* obj );
void RogueDefinition_trace( void* obj );
void RogueTable_String_Definition__trace( void* obj );
void RogueTable_String_Property__trace( void* obj );
void RogueMethodTemplates_trace( void* obj );
void RogueCmdLiteralNull_trace( void* obj );
void RogueCmdLiteralLogical_trace( void* obj );
void RogueUpdateThisTypeVisitor_trace( void* obj );
void RogueTableEntry_String_Type__List_trace( void* obj );
void RogueTableEntry_String_Type__trace( void* obj );
void RogueTableEntry_String_Int32__List_trace( void* obj );
void RogueTableEntry_String_String_List__List_trace( void* obj );
void RogueTableEntry_String_String_List__trace( void* obj );
void RogueTableEntry_Int32_Template__List_trace( void* obj );
void RogueTableEntry_Int32_Template__trace( void* obj );
void RogueListRebuilder_Token__trace( void* obj );
void RogueCmdCastToType_trace( void* obj );
void RogueCmdLogicalize_trace( void* obj );
void RogueMacroArgs_trace( void* obj );
void RogueFnParam_List_trace( void* obj );
void RogueFnParam_trace( void* obj );
void RogueCmdCreateFunction_trace( void* obj );
void RogueFnArg_List_trace( void* obj );
void RogueFnArg_trace( void* obj );
void RogueCmdBitwiseAnd_trace( void* obj );
void RogueCmdBitwiseOp_trace( void* obj );
void RogueCmdPower_trace( void* obj );
void RogueCmdSubtract_trace( void* obj );
void RogueCmdMod_trace( void* obj );
void RogueCmdAdd_trace( void* obj );
void RogueCmdDivide_trace( void* obj );
void RogueCmdBitwiseXor_trace( void* obj );
void RogueCmdMultiply_trace( void* obj );
void RogueCmdBitwiseOr_trace( void* obj );
void RogueListRebuilder_CmdNamedArg__trace( void* obj );
void RogueCmdCallInlineNativeRoutine_trace( void* obj );
void RogueCmdCallInlineNative_trace( void* obj );
void RogueCmdCallNativeRoutine_trace( void* obj );
void RogueCmdCallRoutine_trace( void* obj );
void RogueCmdCallInlineNativeMethod_trace( void* obj );
void RogueCmdCallNativeMethod_trace( void* obj );
void RogueCmdCallAspectMethod_trace( void* obj );
void RogueCandidateMethods_trace( void* obj );
void RogueTableEntry_String_Method__List_trace( void* obj );
void RogueTableEntry_String_Method__trace( void* obj );
void RogueTableEntry_String_TypeInfo__List_trace( void* obj );
void RogueTableEntry_String_TypeInfo__trace( void* obj );
void RogueTableEntry_String_Logical__List_trace( void* obj );
void RogueTableEntry_String_Logical__trace( void* obj );
void RogueTokenReader_trace( void* obj );
void RogueTokenizer_trace( void* obj );
void RogueParseReader_trace( void* obj );
void RoguePreprocessor_trace( void* obj );
void RogueEOLToken_trace( void* obj );
void RogueCmdNativeHeader_trace( void* obj );
void RogueCmdNativeCode_trace( void* obj );
void RogueCmdAwait_trace( void* obj );
void RogueCmdYield_trace( void* obj );
void RogueCmdAdjust_trace( void* obj );
void RogueCmdModifyAndAssign_trace( void* obj );
void RogueCmdWhichCase_List_trace( void* obj );
void RogueCmdCatch_List_trace( void* obj );
void RogueCmdCompareLE_trace( void* obj );
void RogueCmdRangeUpTo_trace( void* obj );
void RogueCmdRangeUpToLessThan_trace( void* obj );
void RogueCmdCompareLT_trace( void* obj );
void RogueCmdCompareGE_trace( void* obj );
void RogueCmdRangeDownTo_trace( void* obj );
void RogueCmdLogicalXor_trace( void* obj );
void RogueCmdBinaryLogical_trace( void* obj );
void RogueCmdLogicalOr_trace( void* obj );
void RogueCmdLogicalAnd_trace( void* obj );
void RogueCmdCompareEQ_trace( void* obj );
void RogueCmdCompareIs_trace( void* obj );
void RogueCmdCompareIsNot_trace( void* obj );
void RogueCmdCompareGT_trace( void* obj );
void RogueCmdInstanceOf_trace( void* obj );
void RogueCmdLogicalNot_trace( void* obj );
void RogueCmdBitwiseShiftLeft_trace( void* obj );
void RogueCmdBitwiseShiftRight_trace( void* obj );
void RogueCmdBitwiseShiftRightX_trace( void* obj );
void RogueCmdNegate_trace( void* obj );
void RogueCmdBitwiseNot_trace( void* obj );
void RogueCmdListConvert_trace( void* obj );
void RogueCmdConvertToType_trace( void* obj );
void RogueCmdCreateCallback_trace( void* obj );
void RogueCmdAs_trace( void* obj );
void RogueCmdDefaultValue_trace( void* obj );
void RogueCmdLiteralReal64_trace( void* obj );
void RogueCmdLiteralInt64_trace( void* obj );
void RogueCmdLiteralCharacter_trace( void* obj );
void RogueCmdCreateList_trace( void* obj );
void RogueCmdSelectCase_List_trace( void* obj );
void RogueCmdTypedLiteralList_trace( void* obj );
void RogueTableEntry_String_ParseReader__List_trace( void* obj );
void RogueTableEntry_String_ParseReader__trace( void* obj );
void RogueIOError_trace( void* obj );
void RogueFileReader_trace( void* obj );
void RogueFileWriter_trace( void* obj );
void RogueUTF8Reader_trace( void* obj );
void RogueTableEntry_String_TokenType__List_trace( void* obj );
void RogueTableEntry_String_TokenType__trace( void* obj );
void RogueTableEntry_String_TypeSpecializer__List_trace( void* obj );
void RogueTableEntry_String_TypeSpecializer__trace( void* obj );
void RogueTableEntry_String_CmdLabel__List_trace( void* obj );
void RogueTableEntry_String_CmdLabel__trace( void* obj );
void RogueToken_List_List_trace( void* obj );
void RogueTable_String_Token_List__trace( void* obj );
void RogueCmdTaskControlSection_List_trace( void* obj );
void RogueRequirementError_trace( void* obj );
void RogueCmdCallStaticMethod_trace( void* obj );
void RogueListReader_CmdSelectCase__trace( void* obj );
void RogueTableEntry_String_Definition__List_trace( void* obj );
void RogueTableEntry_String_Definition__trace( void* obj );
void RogueTableEntry_String_Property__List_trace( void* obj );
void RogueTableEntry_String_Property__trace( void* obj );
void RogueMethodTemplate_List_trace( void* obj );
void RogueTable_String_Cmd__trace( void* obj );
void RogueDirectiveTokenType_trace( void* obj );
void RogueStructuralDirectiveTokenType_trace( void* obj );
void RogueEOLTokenType_trace( void* obj );
void RogueStructureTokenType_trace( void* obj );
void RogueNativeCodeTokenType_trace( void* obj );
void RogueModifyAndAssignTokenType_trace( void* obj );
void RoguePreprocessorTokenReader_trace( void* obj );
void RogueCmdConvertToPrimitiveType_trace( void* obj );
void RogueTableEntry_String_Token_List__List_trace( void* obj );
void RogueTableEntry_String_Token_List__trace( void* obj );
void RogueTableEntry_String_Cmd__List_trace( void* obj );
void RogueTableEntry_String_Cmd__trace( void* obj );
void RogueNativeCodeToken_trace( void* obj );

void RogueException_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassException*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassException*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStackTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStackTrace*)obj)->entries)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeInfo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeInfo*)obj)->name)) RogueString_trace( link );
}

void RogueStringBuilder_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueStringBuilder*)obj)->utf8)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueByte_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueByte_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCharacter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCharacter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueString_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueString_List*)obj)->data)) RogueArray_trace( link );
}

void RogueStringReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringReader*)obj)->string)) RogueString_trace( link );
}

void RogueGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassGlobal*)obj)->standard_output)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->global_output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->exit_functions)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFunction___List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFunction___List*)obj)->data)) RogueArray_trace( link );
}

void RogueRogueC_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueC*)obj)->included_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->compile_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->target_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->libraries_folder)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->source_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->first_filepath)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->output_filepath)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->supported_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->requisite_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->execute_args)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->package_name)) RogueString_trace( link );
  if ((link=((RogueClassRogueC*)obj)->parsers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->parsereaders_by_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->stopwatch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->plugins)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueConsole_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassConsole*)obj)->output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram*)obj)->code_prefix)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->program_name)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->template_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->template_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->augment_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->first_filepath)) RogueString_trace( link );
  if ((link=((RogueClassProgram*)obj)->m_on_launch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->m_run_tests)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->global_properties)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_header)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->methods_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Byte)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Logical)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Object)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_String)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_NativeArray)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_GenericList)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Exception)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_StringBuilder)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_TypeInfo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->ids_by_module)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassTemplate*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->alternates_by_param_count)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->_routine_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->routine_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Template_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Template_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->signature)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_task_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->locals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->aspect_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->incorporating_classes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overridden_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overriding_methods)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->native_code)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->label_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->label_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cur_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cpp_name)) RogueString_trace( link );
  if ((link=((RogueClassMethod*)obj)->cpp_typedef)) RogueString_trace( link );
}

void RogueProperty_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueProperty_List*)obj)->data)) RogueArray_trace( link );
}

void RogueProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassProperty*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->cpp_name)) RogueString_trace( link );
}

void RogueTable_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueType_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueType_List*)obj)->data)) RogueArray_trace( link );
}

void RogueType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->specializers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_element_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->prev_enum_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->callback_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_callback_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_templates)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->cpp_name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->cpp_class_name)) RogueString_trace( link );
  if ((link=((RogueClassType*)obj)->cpp_type_name)) RogueString_trace( link );
}

void RogueTable_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Type_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Type_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Int32_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Int32_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Int32_Template_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Int32_Template_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueAttributes_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAttributes*)obj)->tags)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List*)obj)->data)) RogueArray_trace( link );
}

void RogueToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassToken*)obj)->filepath)) RogueString_trace( link );
}

void RogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassRogueError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueError*)obj)->filepath)) RogueString_trace( link );
}

void RogueCmdAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdAccess*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdArgs*)obj)->data)) RogueArray_trace( link );
}

void RogueCmd_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmd_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdNamedArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNamedArg*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdStatementList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatementList*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLabel_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLabel*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLabel*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdLabel*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReturn_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReturn*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReturn*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdStatement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueScope_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassScope*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_body)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_statement)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->_implicit_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->local_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->control_stack)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethod_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethod_List*)obj)->data)) RogueArray_trace( link );
}

void RoguePlugin_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RoguePlugin_List*)obj)->data)) RogueArray_trace( link );
}

void RoguePlugin_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPlugin*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassPlugin*)obj)->collect_supported_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->generate_additonal_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCPPWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCPPWriter*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassCPPWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->trace_token)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->temp_buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLocal_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueLocal_List*)obj)->data)) RogueArray_trace( link );
}

void RogueLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassLocal*)obj)->original_name)) RogueString_trace( link );
  if ((link=((RogueClassLocal*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->_cpp_name)) RogueString_trace( link );
}

void RogueInt32_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueInt32_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_String__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_String__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->value)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Logical_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Logical_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueParser_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueParser_List*)obj)->data)) RogueArray_trace( link );
}

void RogueParser_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParser*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassParser*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->local_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->cur_statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->used_modules)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->module_id_map)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFile_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFile*)obj)->filepath)) RogueString_trace( link );
}

void RogueCmdMakeRequisite_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMakeRequisite*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMakeRequisite*)obj)->pattern)) RogueString_trace( link );
}

void RogueLineReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLineReader*)obj)->source)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLineReader*)obj)->next)) RogueString_trace( link );
  if ((link=((RogueClassLineReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeParameter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeParameter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeParameter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeParameter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTypeParameter*)obj)->name)) RogueString_trace( link );
}

void RogueAugment_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueAugment_List*)obj)->data)) RogueArray_trace( link );
}

void RogueAugment_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAugment*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassAugment*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TokenType_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TokenType_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralCharacterToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralCharacterToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralCharacterToken*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralInt64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt64Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralInt32Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt32Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt32Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueLiteralReal64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralReal64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralReal64Token*)obj)->filepath)) RogueString_trace( link );
}

void RogueStringDataToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringDataToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringDataToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassStringDataToken*)obj)->value)) RogueString_trace( link );
}

void RogueTable_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeSpecializer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeSpecializer*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassTypeSpecializer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeSpecializer_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeSpecializer_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Template__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Template__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Augment_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Augment_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLabel_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdLabel_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->template_tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCloneMethodArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCloneMethodArgs*)obj)->cloned_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssert_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssert*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRequire_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRequire*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLocalDeclaration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBlock_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBlock*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdBlock*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdControlStructure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdControlStructure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdIf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdIf*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdIf*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->else_statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSwitch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSwitch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdSwitch*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhich_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhich*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdWhich*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhichCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhichCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdContingent_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdContingent*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdGenericLoop_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdGenericLoop*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->control_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdElementAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdElementAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEnsure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEnsure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_read)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_write)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdForEach_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdForEach*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->control_var_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->index_var_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdForEach*)obj)->collection)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->step_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdFormattedString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdFormattedString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->format)) RogueString_trace( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTry_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTry*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->escape_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdTry*)obj)->upkeep_label)) RogueString_trace( link );
  if ((link=((RogueClassCmdTry*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->catches)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCatch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCatch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->error_var)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThrow_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThrow*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThrow*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEscape_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEscape*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEscape*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNextIteration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNextIteration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNextIteration*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNecessary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNecessary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSufficient_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSufficient*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteral_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteral*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralString*)obj)->value)) RogueString_trace( link );
}

void RogueCmdCreateObject_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateObject*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateObject*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCompound_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCompound*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThisContext_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThisContext*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThisContext*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCall_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCall*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallDynamicMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallPriorMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRange_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRange*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdUnary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdUnary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdUnary*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdResolvedModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateArray_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateArray*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->count_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayCount_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayCount*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTypeOperator_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypeOperator*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControl_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControl*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->sections)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->current_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTrace*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTrace*)obj)->info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->code)) RogueString_trace( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->modify_op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNoAction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNoAction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelect_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelect*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->_value_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelectCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelectCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdControlStructure_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdControlStructure_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLiteralThis_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralThis*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralThis*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt32_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt32*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareNE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareNE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdComparison_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdComparison*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTaskArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTaskArgs*)obj)->_task_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->task_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->_original_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->original_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->cmd_task_control)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->context_property)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->ip_property)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControlSection*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Method_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueDefinition_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueDefinition_List*)obj)->data)) RogueArray_trace( link );
}

void RogueDefinition_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDefinition*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassDefinition*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassDefinition*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Definition_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Definition_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Property_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Property_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplates_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplates*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplates*)obj)->templates)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralNull_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralNull*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUpdateThisTypeVisitor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Type__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Type__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Int32__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Int32__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_String_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_String_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Int32_Template__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_Int32_Template__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRebuilder_Token__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRebuilder_Token_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCastToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCastToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalize_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalize*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalize*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMacroArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMacroArgs*)obj)->this_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->arg_lookup)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnParam_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnParam_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFnParam_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnParam*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassFnParam*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateFunction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateFunction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->with_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFnArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnArg*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassFnArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFnArg*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOp_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOp*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdPower_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdPower*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSubtract_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSubtract*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDivide_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDivide*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMultiply_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMultiply*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRebuilder_CmdNamedArg__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRebuilder_CmdNamedArg_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallAspectMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCandidateMethods_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCandidateMethods*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->access)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->available)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->compatible)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Method__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeInfo__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TypeInfo__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Logical__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Logical__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenizer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenizer*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassTokenizer*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->next_filepath)) RogueString_trace( link );
}

void RogueParseReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParseReader*)obj)->data)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePreprocessor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessor*)obj)->parser)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->cur_module)) RogueString_trace( link );
}

void RogueEOLToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassEOLToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassEOLToken*)obj)->comment)) RogueString_trace( link );
}

void RogueCmdNativeHeader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeHeader*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeHeader*)obj)->code)) RogueString_trace( link );
}

void RogueCmdNativeCode_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeCode*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeCode*)obj)->code)) RogueString_trace( link );
}

void RogueCmdAwait_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAwait*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->result_var)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdYield_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdYield*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjust_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjust*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjust*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhichCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdWhichCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdCatch_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdCatch_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdCompareLE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpToLessThan_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareLT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeDownTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeDownTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinaryLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinaryLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareEQ_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareEQ*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIsNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIsNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInstanceOf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInstanceOf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftLeft_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRight_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRightX_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNegate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNegate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNegate*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdListConvert_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdListConvert*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->_to_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdListConvert*)obj)->convert_fn)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdConvertToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdConvertToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCallback_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCallback*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->name)) RogueString_trace( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->signature)) RogueString_trace( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDefaultValue_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDefaultValue*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDefaultValue*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralReal64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralReal64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralCharacter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralCharacter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->_list_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelectCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdSelectCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdTypedLiteralList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->list_type_name)) RogueString_trace( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->elements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_ParseReader__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_ParseReader__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueIOError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassIOError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassIOError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileReader*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassFileReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileWriter*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassFileWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUTF8Reader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUTF8Reader*)obj)->byte_reader)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TokenType__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TokenType__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeSpecializer__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_TypeSpecializer__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_CmdLabel__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_CmdLabel__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Token_List_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Token_List_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdTaskControlSection_List*)obj)->data)) RogueArray_trace( link );
}

void RogueRequirementError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRequirementError*)obj)->message)) RogueString_trace( link );
  if ((link=((RogueClassRequirementError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallStaticMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListReader_CmdSelectCase__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListReader_CmdSelectCase_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Definition__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Definition__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Property__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Property__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethodTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Cmd_*)obj)->bins)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Cmd_*)obj)->keys)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDirectiveTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueStructuralDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructuralDirectiveTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueEOLTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueStructureTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructureTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueNativeCodeTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeTokenType*)obj)->name)) RogueString_trace( link );
}

void RogueModifyAndAssignTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassModifyAndAssignTokenType*)obj)->name)) RogueString_trace( link );
}

void RoguePreprocessorTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->queue)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdConvertToPrimitiveType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToPrimitiveType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Token_List__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Token_List__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Cmd__List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTableEntry_String_Cmd__List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableEntry_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->key)) RogueString_trace( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueNativeCodeToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->filepath)) RogueString_trace( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->value)) RogueString_trace( link );
}


int Rogue_type_name_index_table[] =
{
  72,65,66,743,61,60,64,68,67,810,63,70,811,62,58,744,
  812,858,69,745,1269,1270,71,1271,1272,813,746,906,747,859,748,1273,
  749,814,750,751,752,753,815,754,755,816,756,757,758,759,721,760,
  761,817,762,1257,1260,917,341,1130,818,819,918,1131,919,860,1133,920,
  763,861,764,820,862,863,821,765,864,766,1142,1143,767,768,822,769,
  865,823,866,770,867,479,771,1274,1275,868,824,722,869,772,825,773,
  774,775,776,870,921,777,1144,778,826,779,827,780,871,781,909,910,
  911,912,913,872,782,873,783,828,829,725,874,830,726,875,831,784,
  785,786,1151,403,922,923,924,1134,1156,1135,1157,1158,1159,925,1160,1161,
  926,927,1162,928,1163,929,930,931,932,933,934,935,1164,936,937,938,
  939,1262,940,1263,941,942,943,944,945,1179,1173,946,947,948,949,950,
  1264,1265,1219,951,1220,1221,952,1266,953,1267,954,955,956,957,1268,958,
  959,832,1172,876,1165,1228,1194,1152,877,787,833,728,878,834,788,789,
  790,791,1166,1167,879,1154,835,729,880,836,881,837,730,882,838,731,
  883,792,1222,1184,884,1153,839,793,960,840,794,1155,1243,1195,1196,1197,
  1198,1199,1200,1244,1201,1245,795,796,797,798,1251,1174,1175,1176,1252,1177,
  1178,799,1249,1250,885,886,841,732,887,842,733,888,843,734,889,800,
  801,802,803,914,961,962,963,964,965,966,844,845,1229,1181,1182,1230,
  1231,1183,1253,1202,1254,1255,1232,1233,1234,1235,1223,1185,1246,1247,1248,1186,
  1187,967,1224,968,1225,1168,1169,1170,1171,969,846,970,847,735,890,1261,
  804,805,806,848,736,891,849,737,892,850,738,893,851,807,894,895,
  896,852,897,898,979,899,1180,1258,1276,853,739,900,854,740,901,855,
  902,808,903,1136,1137,1138,1139,1140,1141,809,1256,856,741,904,857,742,
  905,1259,1277,1278,1279,1280
};
RogueInitFn Rogue_init_object_fn_table[] =
{
  (RogueInitFn) RogueException__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueStringBuilder__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueGlobal__init_object,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueRogueC__init_object,
  0,
  (RogueInitFn) RogueConsole__init_object,
  0,
  (RogueInitFn) RogueProgram__init_object,
  0,
  (RogueInitFn) RogueTemplate__init_object,
  0,
  0,
  (RogueInitFn) RogueMethod__init_object,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueType__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueError__init_object,
  (RogueInitFn) RogueRogueError__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueScope__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueCPPWriter__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueParser__init_object,
  0,
  (RogueInitFn) RogueStopwatch__init_object,
  0,
  0,
  0,
  (RogueInitFn) RogueLineReader__init_object,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueAugment__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueMethodTemplate__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueCmdTaskControl__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueCmdTaskControlSection__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueMethodTemplates__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueCandidateMethods__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueTokenizer__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueIOError__init_object,
  (RogueInitFn) RogueFileReader__init_object,
  (RogueInitFn) RogueFileWriter__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueRequirementError__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RoguePreprocessorTokenReader__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueInitFn Rogue_init_fn_table[] =
{
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueStringBuilder__init,
  (RogueInitFn) RogueByte_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCharacter_List__init,
  0,
  0,
  (RogueInitFn) RogueTable_String_String___init,
  (RogueInitFn) RogueString_List__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueGlobal__init,
  0,
  0,
  (RogueInitFn) RogueFunction___List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTemplate_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Template___init,
  (RogueInitFn) RogueTable_String_Augment_List___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueProperty_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Method_List___init,
  (RogueInitFn) RogueType_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Type___init,
  (RogueInitFn) RogueTable_String_Int32___init,
  (RogueInitFn) RogueTable_String_String_List___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_Int32_Template___init,
  (RogueInitFn) RogueAttributes__init,
  (RogueInitFn) RogueToken_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdArgs__init,
  (RogueInitFn) RogueCmd_List__init,
  (RogueInitFn) RogueCmdNamedArg_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdStatementList__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueMethod_List__init,
  0,
  0,
  (RogueInitFn) RoguePlugin_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Method___init,
  (RogueInitFn) RogueLocal_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueInt32_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TypeInfo___init,
  0,
  0,
  0,
  (RogueInitFn) RogueTableEntry_String_String__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Logical___init,
  (RogueInitFn) RogueParser_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_ParseReader___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTypeParameter_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueAugment_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_TokenType___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_TypeSpecializer___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTypeSpecializer_List__init,
  (RogueInitFn) RogueTableEntry_String_Template__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Augment_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueCmdLabel_List__init,
  (RogueInitFn) RogueTable_String_CmdLabel___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdControlStructure_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTableEntry_String_Method_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueDefinition_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Definition___init,
  (RogueInitFn) RogueTable_String_Property___init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTableEntry_String_Type__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Int32__List__init,
  0,
  (RogueInitFn) RogueTableEntry_String_String_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_Int32_Template__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueFnParam_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueFnArg_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  (RogueInitFn) RogueTableEntry_String_Method__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_TypeInfo__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Logical__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdWhichCase_List__init,
  (RogueInitFn) RogueCmdCatch_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdSelectCase_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTableEntry_String_ParseReader__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTableEntry_String_TokenType__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_TypeSpecializer__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_CmdLabel__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueToken_List_List__init,
  (RogueInitFn) RogueTable_String_Token_List___init,
  0,
  0,
  0,
  (RogueInitFn) RogueCmdTaskControlSection_List__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Definition__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Property__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueMethodTemplate_List__init,
  0,
  (RogueInitFn) RogueTable_String_Cmd___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTableEntry_String_Token_List__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTableEntry_String_Cmd__List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  0
};

RogueCleanUpFn Rogue_clean_up_fn_table[] =
{
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueToStringFn Rogue_to_string_fn_table[] =
{
  (RogueToStringFn) RogueException__to_String,
  0,
  0,
  (RogueToStringFn) RogueStackTrace__to_String,
  0,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueStringBuilder__to_String,
  (RogueToStringFn) RogueByte_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCharacter_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueTable_String_String___to_String,
  (RogueToStringFn) RogueString_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueFunction___List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTemplate_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Template___to_String,
  (RogueToStringFn) RogueTable_String_Augment_List___to_String,
  (RogueToStringFn) RogueMethod__to_String,
  (RogueToStringFn) RogueProperty_List__to_String,
  (RogueToStringFn) RogueProperty__to_String,
  (RogueToStringFn) RogueTable_String_Method_List___to_String,
  (RogueToStringFn) RogueType_List__to_String,
  (RogueToStringFn) RogueType__to_String,
  (RogueToStringFn) RogueTable_String_Type___to_String,
  (RogueToStringFn) RogueTable_String_Int32___to_String,
  (RogueToStringFn) RogueTable_String_String_List___to_String,
  (RogueToStringFn) RogueTableEntry_String_Int32___to_String,
  (RogueToStringFn) RogueTable_Int32_Template___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueToken_List__to_String,
  (RogueToStringFn) RogueToken__to_String,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueRogueError__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmdNamedArg_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueMethod_List__to_String,
  0,
  0,
  (RogueToStringFn) RoguePlugin_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Method___to_String,
  (RogueToStringFn) RogueLocal_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueInt32_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_TypeInfo___to_String,
  0,
  0,
  0,
  (RogueToStringFn) RogueTableEntry_String_String__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_String___to_String,
  0,
  (RogueToStringFn) RogueTable_String_Logical___to_String,
  (RogueToStringFn) RogueParser_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_ParseReader___to_String,
  (RogueToStringFn) RogueStopwatch__to_String,
  (RogueToStringFn) RogueFile__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTypeParameter_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueAugment_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_TokenType___to_String,
  (RogueToStringFn) RogueLiteralCharacterToken__to_String,
  (RogueToStringFn) RogueLiteralInt64Token__to_String,
  (RogueToStringFn) RogueLiteralInt32Token__to_String,
  (RogueToStringFn) RogueLiteralReal64Token__to_String,
  (RogueToStringFn) RogueStringDataToken__to_String,
  0,
  (RogueToStringFn) RogueTable_String_TypeSpecializer___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTypeSpecializer_List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Template__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Template___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Augment_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Augment_List___to_String,
  0,
  (RogueToStringFn) RogueCmdLabel_List__to_String,
  (RogueToStringFn) RogueTable_String_CmdLabel___to_String,
  (RogueToStringFn) RogueMethodTemplate__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdElementAccess__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallDynamicMethod__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdControlStructure_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTableEntry_String_Method_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Method_List___to_String,
  0,
  (RogueToStringFn) RogueDefinition_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Definition___to_String,
  (RogueToStringFn) RogueTable_String_Property___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTableEntry_String_Type__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Type___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Int32__List__to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_String_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_String_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_Int32_Template__List__to_String,
  (RogueToStringFn) RogueTableEntry_Int32_Template___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueFnParam_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueFnArg_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueTableEntry_String_Method__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Method___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_TypeInfo__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeInfo___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Logical__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Logical___to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueEOLToken__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdWhichCase_List__to_String,
  (RogueToStringFn) RogueCmdCatch_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdSelectCase_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTableEntry_String_ParseReader__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_ParseReader___to_String,
  0,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTableEntry_String_TokenType__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TokenType___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_TypeSpecializer__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_TypeSpecializer___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_CmdLabel__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_CmdLabel___to_String,
  0,
  (RogueToStringFn) RogueToken_List_List__to_String,
  (RogueToStringFn) RogueTable_String_Token_List___to_String,
  0,
  0,
  0,
  (RogueToStringFn) RogueCmdTaskControlSection_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueException__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Definition__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Definition___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Property__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Property___to_String,
  0,
  (RogueToStringFn) RogueMethodTemplate_List__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Cmd___to_String,
  0,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTableEntry_String_Token_List__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Token_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Cmd__List__to_String,
  (RogueToStringFn) RogueTableEntry_String_Cmd___to_String,
  0,
  (RogueToStringFn) RogueNativeCodeToken__to_String,
  0,
  0,
  0,
  0
};

RogueTraceFn Rogue_trace_fn_table[] =
{
  RogueException_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueStackTrace_trace,
  0,
  0,
  0,
  RogueTypeInfo_trace,
  RogueStringBuilder_trace,
  RogueByte_List_trace,
  0,
  RogueObject_trace,
  RogueCharacter_List_trace,
  0,
  0,
  RogueTable_String_String__trace,
  RogueString_List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueStringReader_trace,
  0,
  0,
  RogueGlobal_trace,
  0,
  0,
  RogueFunction___List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueRogueC_trace,
  RogueObject_trace,
  RogueConsole_trace,
  0,
  RogueProgram_trace,
  RogueTemplate_List_trace,
  RogueTemplate_trace,
  RogueTable_String_Template__trace,
  RogueTable_String_Augment_List__trace,
  RogueMethod_trace,
  RogueProperty_List_trace,
  RogueProperty_trace,
  RogueTable_String_Method_List__trace,
  RogueType_List_trace,
  RogueType_trace,
  RogueTable_String_Type__trace,
  RogueTable_String_Int32__trace,
  RogueTable_String_String_List__trace,
  RogueTableEntry_String_Int32__trace,
  RogueTable_Int32_Template__trace,
  RogueAttributes_trace,
  RogueToken_List_trace,
  RogueToken_trace,
  RogueError_trace,
  RogueRogueError_trace,
  RogueCmdAccess_trace,
  RogueCmd_trace,
  RogueCmdArgs_trace,
  RogueCmd_List_trace,
  RogueCmdNamedArg_List_trace,
  RogueCmdNamedArg_trace,
  RogueCmdStatementList_trace,
  RogueCmdLabel_trace,
  RogueArray_trace,
  RogueCmdReturn_trace,
  RogueCmdStatement_trace,
  RogueTokenType_trace,
  RogueArray_trace,
  RogueScope_trace,
  RogueMethod_List_trace,
  RogueArray_trace,
  RogueArray_trace,
  RoguePlugin_List_trace,
  RoguePlugin_trace,
  RogueArray_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCPPWriter_trace,
  RogueTable_String_Method__trace,
  RogueLocal_List_trace,
  RogueLocal_trace,
  RogueArray_trace,
  RogueInt32_List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueTable_String_TypeInfo__trace,
  0,
  0,
  RogueObject_trace,
  RogueTableEntry_String_String__List_trace,
  RogueTableEntry_String_String__trace,
  RogueArray_trace,
  RogueTable_String_Logical__trace,
  RogueParser_List_trace,
  RogueParser_trace,
  RogueTable_String_ParseReader__trace,
  RogueObject_trace,
  RogueFile_trace,
  RogueArray_trace,
  RogueCmdMakeRequisite_trace,
  RogueLineReader_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueTypeParameter_List_trace,
  RogueTypeParameter_trace,
  RogueAugment_List_trace,
  RogueAugment_trace,
  RogueArray_trace,
  RogueTable_String_TokenType__trace,
  RogueLiteralCharacterToken_trace,
  RogueLiteralInt64Token_trace,
  RogueLiteralInt32Token_trace,
  RogueLiteralReal64Token_trace,
  RogueStringDataToken_trace,
  RogueArray_trace,
  RogueTable_String_TypeSpecializer__trace,
  RogueArray_trace,
  RogueTypeSpecializer_trace,
  RogueTypeSpecializer_List_trace,
  RogueTableEntry_String_Template__List_trace,
  RogueTableEntry_String_Template__trace,
  RogueArray_trace,
  RogueTableEntry_String_Augment_List__List_trace,
  RogueTableEntry_String_Augment_List__trace,
  RogueArray_trace,
  RogueCmdLabel_List_trace,
  RogueTable_String_CmdLabel__trace,
  RogueMethodTemplate_trace,
  RogueObject_trace,
  RogueCloneMethodArgs_trace,
  RogueObject_trace,
  RogueCmdAssert_trace,
  RogueCmdRequire_trace,
  RogueCmdAssign_trace,
  RogueCmdLocalDeclaration_trace,
  RogueCmdBlock_trace,
  RogueCmdControlStructure_trace,
  RogueCmdIf_trace,
  RogueCmdSwitch_trace,
  RogueCmdWhich_trace,
  RogueCmdWhichCase_trace,
  RogueCmdContingent_trace,
  RogueCmdGenericLoop_trace,
  RogueCmdElementAccess_trace,
  RogueCmdEnsure_trace,
  RogueCmdForEach_trace,
  RogueCmdFormattedString_trace,
  RogueCmdTry_trace,
  RogueCmdCatch_trace,
  RogueCmdThrow_trace,
  RogueCmdEscape_trace,
  RogueCmdNextIteration_trace,
  RogueCmdNecessary_trace,
  RogueCmdSufficient_trace,
  RogueCmdLiteral_trace,
  RogueCmdLiteralString_trace,
  RogueCmdCreateObject_trace,
  RogueCmdCreateCompound_trace,
  RogueCmdThisContext_trace,
  RogueCmdReadSingleton_trace,
  RogueCmdWriteSingleton_trace,
  RogueCmdReadLocal_trace,
  RogueCmdWriteLocal_trace,
  RogueCmdReadGlobal_trace,
  RogueCmdWriteGlobal_trace,
  RogueCmdReadProperty_trace,
  RogueCmdWriteProperty_trace,
  RogueCmdCall_trace,
  RogueCmdCallDynamicMethod_trace,
  RogueCmdCallMethod_trace,
  RogueCmdCallPriorMethod_trace,
  RogueCmdRange_trace,
  RogueCmdUnary_trace,
  RogueCmdBinary_trace,
  RogueCmdAdjustLocal_trace,
  RogueCmdAdjustProperty_trace,
  RogueCmdAdjustGlobal_trace,
  RogueCmdModifyAndAssignLocal_trace,
  RogueCmdResolvedModifyAndAssign_trace,
  RogueCmdModifyAndAssignGlobal_trace,
  RogueCmdModifyAndAssignProperty_trace,
  RogueCmdCreateArray_trace,
  RogueCmdReadArrayElement_trace,
  RogueCmdReadArrayCount_trace,
  RogueCmdWriteArrayElement_trace,
  RogueCmdTypeOperator_trace,
  RogueCmdTaskControl_trace,
  RogueCmdTrace_trace,
  RogueCmdInlineNative_trace,
  RogueCmdNoAction_trace,
  RogueCmdSelect_trace,
  RogueCmdSelectCase_trace,
  RogueCmdControlStructure_List_trace,
  RogueCmdLiteralThis_trace,
  RogueArray_trace,
  RogueCmdLiteralInt32_trace,
  RogueCmdCompareNE_trace,
  RogueCmdComparison_trace,
  RogueTaskArgs_trace,
  RogueArray_trace,
  RogueCmdTaskControlSection_trace,
  RogueTableEntry_String_Method_List__List_trace,
  RogueTableEntry_String_Method_List__trace,
  RogueArray_trace,
  RogueDefinition_List_trace,
  RogueDefinition_trace,
  RogueTable_String_Definition__trace,
  RogueTable_String_Property__trace,
  RogueMethodTemplates_trace,
  RogueCmdLiteralNull_trace,
  RogueCmdLiteralLogical_trace,
  RogueArray_trace,
  RogueUpdateThisTypeVisitor_trace,
  RogueTableEntry_String_Type__List_trace,
  RogueTableEntry_String_Type__trace,
  RogueArray_trace,
  RogueTableEntry_String_Int32__List_trace,
  RogueArray_trace,
  RogueTableEntry_String_String_List__List_trace,
  RogueTableEntry_String_String_List__trace,
  RogueArray_trace,
  RogueTableEntry_Int32_Template__List_trace,
  RogueTableEntry_Int32_Template__trace,
  RogueArray_trace,
  RogueListRebuilder_Token__trace,
  RogueCmdCastToType_trace,
  RogueCmdLogicalize_trace,
  RogueArray_trace,
  RogueMacroArgs_trace,
  RogueFnParam_List_trace,
  RogueFnParam_trace,
  RogueCmdCreateFunction_trace,
  RogueFnArg_List_trace,
  RogueFnArg_trace,
  RogueObject_trace,
  RogueCmdBitwiseAnd_trace,
  RogueCmdBitwiseOp_trace,
  RogueCmdPower_trace,
  RogueCmdSubtract_trace,
  RogueCmdMod_trace,
  RogueCmdAdd_trace,
  RogueCmdDivide_trace,
  RogueCmdBitwiseXor_trace,
  RogueCmdMultiply_trace,
  RogueCmdBitwiseOr_trace,
  RogueObject_trace,
  RogueListRebuilder_CmdNamedArg__trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCmdCallInlineNativeRoutine_trace,
  RogueCmdCallInlineNative_trace,
  RogueCmdCallNativeRoutine_trace,
  RogueCmdCallRoutine_trace,
  RogueCmdCallInlineNativeMethod_trace,
  RogueCmdCallNativeMethod_trace,
  RogueCmdCallAspectMethod_trace,
  RogueCandidateMethods_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueTableEntry_String_Method__List_trace,
  RogueTableEntry_String_Method__trace,
  RogueArray_trace,
  RogueTableEntry_String_TypeInfo__List_trace,
  RogueTableEntry_String_TypeInfo__trace,
  RogueArray_trace,
  RogueTableEntry_String_Logical__List_trace,
  RogueTableEntry_String_Logical__trace,
  RogueArray_trace,
  RogueTokenReader_trace,
  RogueTokenizer_trace,
  RogueParseReader_trace,
  RoguePreprocessor_trace,
  RogueEOLToken_trace,
  RogueCmdNativeHeader_trace,
  RogueCmdNativeCode_trace,
  RogueCmdAwait_trace,
  RogueCmdYield_trace,
  RogueCmdAdjust_trace,
  RogueCmdModifyAndAssign_trace,
  RogueCmdWhichCase_List_trace,
  RogueCmdCatch_List_trace,
  RogueCmdCompareLE_trace,
  RogueCmdRangeUpTo_trace,
  RogueCmdRangeUpToLessThan_trace,
  RogueCmdCompareLT_trace,
  RogueCmdCompareGE_trace,
  RogueCmdRangeDownTo_trace,
  RogueCmdLogicalXor_trace,
  RogueCmdBinaryLogical_trace,
  RogueCmdLogicalOr_trace,
  RogueCmdLogicalAnd_trace,
  RogueCmdCompareEQ_trace,
  RogueCmdCompareIs_trace,
  RogueCmdCompareIsNot_trace,
  RogueCmdCompareGT_trace,
  RogueCmdInstanceOf_trace,
  RogueCmdLogicalNot_trace,
  RogueCmdBitwiseShiftLeft_trace,
  RogueCmdBitwiseShiftRight_trace,
  RogueCmdBitwiseShiftRightX_trace,
  RogueCmdNegate_trace,
  RogueCmdBitwiseNot_trace,
  RogueCmdListConvert_trace,
  RogueCmdConvertToType_trace,
  RogueCmdCreateCallback_trace,
  RogueCmdAs_trace,
  RogueCmdDefaultValue_trace,
  RogueCmdLiteralReal64_trace,
  RogueCmdLiteralInt64_trace,
  RogueCmdLiteralCharacter_trace,
  RogueCmdCreateList_trace,
  RogueCmdSelectCase_List_trace,
  RogueCmdTypedLiteralList_trace,
  RogueTableEntry_String_ParseReader__List_trace,
  RogueTableEntry_String_ParseReader__trace,
  RogueArray_trace,
  RogueIOError_trace,
  RogueFileReader_trace,
  RogueFileWriter_trace,
  RogueUTF8Reader_trace,
  RogueTableEntry_String_TokenType__List_trace,
  RogueTableEntry_String_TokenType__trace,
  RogueArray_trace,
  RogueTableEntry_String_TypeSpecializer__List_trace,
  RogueTableEntry_String_TypeSpecializer__trace,
  RogueArray_trace,
  RogueTableEntry_String_CmdLabel__List_trace,
  RogueTableEntry_String_CmdLabel__trace,
  RogueArray_trace,
  RogueToken_List_List_trace,
  RogueTable_String_Token_List__trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueCmdTaskControlSection_List_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueRequirementError_trace,
  RogueArray_trace,
  RogueCmdCallStaticMethod_trace,
  RogueListReader_CmdSelectCase__trace,
  0,
  RogueTableEntry_String_Definition__List_trace,
  RogueTableEntry_String_Definition__trace,
  RogueArray_trace,
  RogueTableEntry_String_Property__List_trace,
  RogueTableEntry_String_Property__trace,
  RogueArray_trace,
  RogueMethodTemplate_List_trace,
  RogueArray_trace,
  RogueTable_String_Cmd__trace,
  RogueArray_trace,
  RogueDirectiveTokenType_trace,
  RogueStructuralDirectiveTokenType_trace,
  RogueEOLTokenType_trace,
  RogueStructureTokenType_trace,
  RogueNativeCodeTokenType_trace,
  RogueModifyAndAssignTokenType_trace,
  RoguePreprocessorTokenReader_trace,
  RogueCmdConvertToPrimitiveType_trace,
  RogueTableEntry_String_Token_List__List_trace,
  RogueTableEntry_String_Token_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_Cmd__List_trace,
  RogueTableEntry_String_Cmd__trace,
  RogueArray_trace,
  RogueNativeCodeToken_trace,
  0,
  0,
  0,
  0
};

void Rogue_trace()
{
  void* link;
  int i;

  // Trace GLOBAL PROPERTIES
  if ((link=RogueStringBuilder_work_bytes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueToken_filepath_to_filename)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueCmdStatementList_current)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_define)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_include)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_includeNativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_includeNativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_module)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_requisite)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_using)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_placeholder_id)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_begin_augment_tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_augment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_case)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_catch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_CLASS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_DEFINITIONS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endAugment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endClass)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endFunction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endRoutine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endUnitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ENUMERATE)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_GLOBAL)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_METHODS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_others)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_PROPERTIES)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_routine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_satisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unsatisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_with)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_comment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eol)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eoi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_assert)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_await)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_block)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_contingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ensure)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_forEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_function)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_in)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_infinity)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_is)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_isNot)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_local)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_loop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_NaN)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_native)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_necessary)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nextIteration)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_noAction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_of)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_require)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_return)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_select)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_step)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_sufficient)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_throw)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace_position)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_try)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_which)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_while)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_yield)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_type_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_integer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_long)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_real)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_string)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_and)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_as)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_downTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_false)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_instanceOf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_meta)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_not)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_notInstanceOf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_or)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_pi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_prior)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_this)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_true)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_xor)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_backslash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_colon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_comma)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_compare)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_downToGreaterThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_braces)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_brackets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_eq)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_exclamation_point)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_fat_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ge)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_gt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_le)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_lt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ne)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_question_mark)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_semicolon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right_x)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upToLessThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_command_line_arguments)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_executable_filepath)) RogueString_trace( link );
  if ((link=RogueSystem_classes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RoguePreprocessor_definitions)) ((RogueObject*)link)->type->trace_fn( link );

  // Trace Class objects and singletons
  for (i=Rogue_type_count; --i>=0; )
  {
    RogueType* type = &Rogue_types[i];
    if (type->type_info) RogueTypeInfo_trace( type->type_info );
    if (type->_singleton) type->trace_fn( type->_singleton );
  }
}

void* Rogue_dynamic_method_table[] =
{
  (void*) (ROGUEM0) RogueObject__init, // Exception
  0,
  0,
  0,
  (void*) (ROGUEM1) RogueException__to_String,
  0,
  (void*) (ROGUEM1) RogueException__type_name,
  (void*) (ROGUEM2) RogueException__init__String,
  (void*) (ROGUEM3) RogueException__init_object,
  (void*) (ROGUEM0) RogueObject__init, // StackTrace
  0,
  0,
  0,
  (void*) (ROGUEM5) RogueStackTrace__to_String,
  0,
  (void*) (ROGUEM5) RogueStackTrace__type_name,
  (void*) (ROGUEM0) RogueObject__init, // TypeInfo
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM6) RogueTypeInfo__type_name,
  (void*) (ROGUEM7) RogueStringBuilder__init, // StringBuilder
  0,
  0,
  0,
  (void*) (ROGUEM8) RogueStringBuilder__to_String,
  0,
  (void*) (ROGUEM8) RogueStringBuilder__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM7) RogueStringBuilder__init_object,
  (void*) (ROGUEM9) RogueByte_List__init, // Byte[]
  0,
  0,
  0,
  (void*) (ROGUEM10) RogueByte_List__to_String,
  0,
  (void*) (ROGUEM10) RogueByte_List__type_name,
  (void*) (ROGUEM9) RogueByte_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // GenericList
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM11) RogueGenericList__type_name,
  (void*) (ROGUEM12) RogueGenericList__init_object,
  (void*) (ROGUEM13) RogueCharacter_List__init, // Character[]
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueCharacter_List__to_String,
  0,
  (void*) (ROGUEM14) RogueCharacter_List__type_name,
  (void*) (ROGUEM13) RogueCharacter_List__init_object,
  (void*) (ROGUEM15) RogueTable_String_String___init, // Table<<String,String>>
  0,
  0,
  0,
  (void*) (ROGUEM16) RogueTable_String_String___to_String,
  0,
  (void*) (ROGUEM16) RogueTable_String_String___type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM17) RogueTable_String_String___get__String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM15) RogueTable_String_String___init_object,
  (void*) (ROGUEM18) RogueString_List__init, // String[]
  0,
  0,
  0,
  (void*) (ROGUEM19) RogueString_List__to_String,
  0,
  (void*) (ROGUEM19) RogueString_List__type_name,
  (void*) (ROGUEM18) RogueString_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // StringReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM21) RogueStringReader__type_name,
  (void*) (ROGUEM22) RogueStringReader__has_another,
  (void*) (ROGUEM23) RogueStringReader__read,
  0, // Reader<<Character>>
  0, // Reader<<String>>
  (void*) (ROGUEM24) RogueGlobal__init, // Global
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM25) RogueGlobal__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM26) RogueGlobal__write__StringBuilder,
  0, // PrintWriterAspect<<Global,global_output_buffer>>
  0, // PrintWriter
  (void*) (ROGUEM27) RogueFunction___List__init, // Function()[]
  0,
  0,
  0,
  (void*) (ROGUEM28) RogueFunction___List__to_String,
  0,
  (void*) (ROGUEM28) RogueFunction___List__type_name,
  (void*) (ROGUEM27) RogueFunction___List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function()
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM29) RogueFunction____type_name,
  (void*) (ROGUEM30) RogueFunction____call,
  (void*) (ROGUEM31) RogueFunction____init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function_81
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM32) RogueFunction_81__type_name,
  (void*) (ROGUEM33) RogueFunction_81__call,
  (void*) (ROGUEM34) RogueFunction_81__init_object,
  (void*) (ROGUEM0) RogueObject__init, // RogueC
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM35) RogueRogueC__type_name,
  (void*) (ROGUEM0) RogueObject__init, // Console
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM36) RogueConsole__type_name,
  (void*) (ROGUEM37) RogueConsole__write__StringBuilder,
  0, // PrintWriterAspect<<Console,output_buffer>>
  (void*) (ROGUEM0) RogueObject__init, // Program
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM38) RogueProgram__type_name,
  (void*) (ROGUEM39) RogueTemplate_List__init, // Template[]
  0,
  0,
  0,
  (void*) (ROGUEM40) RogueTemplate_List__to_String,
  0,
  (void*) (ROGUEM40) RogueTemplate_List__type_name,
  (void*) (ROGUEM39) RogueTemplate_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Template
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM41) RogueTemplate__type_name,
  (void*) (ROGUEM42) RogueTable_String_Template___init, // Table<<String,Template>>
  0,
  0,
  0,
  (void*) (ROGUEM43) RogueTable_String_Template___to_String,
  0,
  (void*) (ROGUEM43) RogueTable_String_Template___type_name,
  (void*) (ROGUEM44) RogueTable_String_Augment_List___init, // Table<<String,Augment[]>>
  0,
  0,
  0,
  (void*) (ROGUEM45) RogueTable_String_Augment_List___to_String,
  0,
  (void*) (ROGUEM45) RogueTable_String_Augment_List___type_name,
  (void*) (ROGUEM0) RogueObject__init, // Method
  0,
  0,
  0,
  (void*) (ROGUEM46) RogueMethod__to_String,
  0,
  (void*) (ROGUEM46) RogueMethod__type_name,
  (void*) (ROGUEM47) RogueProperty_List__init, // Property[]
  0,
  0,
  0,
  (void*) (ROGUEM48) RogueProperty_List__to_String,
  0,
  (void*) (ROGUEM48) RogueProperty_List__type_name,
  (void*) (ROGUEM47) RogueProperty_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Property
  0,
  0,
  0,
  (void*) (ROGUEM49) RogueProperty__to_String,
  0,
  (void*) (ROGUEM49) RogueProperty__type_name,
  (void*) (ROGUEM50) RogueTable_String_Method_List___init, // Table<<String,Method[]>>
  0,
  0,
  0,
  (void*) (ROGUEM51) RogueTable_String_Method_List___to_String,
  0,
  (void*) (ROGUEM51) RogueTable_String_Method_List___type_name,
  (void*) (ROGUEM52) RogueType_List__init, // Type[]
  0,
  0,
  0,
  (void*) (ROGUEM53) RogueType_List__to_String,
  0,
  (void*) (ROGUEM53) RogueType_List__type_name,
  (void*) (ROGUEM52) RogueType_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Type
  0,
  0,
  0,
  (void*) (ROGUEM54) RogueType__to_String,
  0,
  (void*) (ROGUEM54) RogueType__type_name,
  (void*) (ROGUEM55) RogueTable_String_Type___init, // Table<<String,Type>>
  0,
  0,
  0,
  (void*) (ROGUEM56) RogueTable_String_Type___to_String,
  0,
  (void*) (ROGUEM56) RogueTable_String_Type___type_name,
  (void*) (ROGUEM57) RogueTable_String_Int32___init, // Table<<String,Int32>>
  0,
  0,
  0,
  (void*) (ROGUEM58) RogueTable_String_Int32___to_String,
  0,
  (void*) (ROGUEM58) RogueTable_String_Int32___type_name,
  (void*) (ROGUEM59) RogueTable_String_String_List___init, // Table<<String,String[]>>
  0,
  0,
  0,
  (void*) (ROGUEM60) RogueTable_String_String_List___to_String,
  0,
  (void*) (ROGUEM60) RogueTable_String_String_List___type_name,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Int32>>
  0,
  0,
  0,
  (void*) (ROGUEM61) RogueTableEntry_String_Int32___to_String,
  0,
  (void*) (ROGUEM61) RogueTableEntry_String_Int32___type_name,
  (void*) (ROGUEM62) RogueTable_Int32_Template___init, // Table<<Int32,Template>>
  0,
  0,
  0,
  (void*) (ROGUEM63) RogueTable_Int32_Template___to_String,
  0,
  (void*) (ROGUEM63) RogueTable_Int32_Template___type_name,
  (void*) (ROGUEM64) RogueAttributes__init, // Attributes
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM65) RogueAttributes__type_name,
  (void*) (ROGUEM66) RogueToken_List__init, // Token[]
  0,
  0,
  0,
  (void*) (ROGUEM67) RogueToken_List__to_String,
  0,
  (void*) (ROGUEM67) RogueToken_List__type_name,
  (void*) (ROGUEM66) RogueToken_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Token
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__to_String,
  0,
  (void*) (ROGUEM68) RogueToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM70) RogueToken__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM72) RogueToken__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM74) RogueToken__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Error
  0,
  0,
  0,
  (void*) (ROGUEM1) RogueException__to_String,
  0,
  (void*) (ROGUEM75) RogueError__type_name,
  (void*) (ROGUEM2) RogueException__init__String,
  (void*) (ROGUEM76) RogueError__init_object,
  (void*) (ROGUEM0) RogueObject__init, // RogueError
  0,
  0,
  0,
  (void*) (ROGUEM77) RogueRogueError__to_String,
  0,
  (void*) (ROGUEM77) RogueRogueError__type_name,
  (void*) (ROGUEM2) RogueException__init__String,
  (void*) (ROGUEM78) RogueRogueError__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAccess
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM79) RogueCmdAccess__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM83) RogueCmdAccess__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM85) RogueCmdAccess__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM88) RogueCmdAccess__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM91) RogueCmdAccess__resolve__Scope,
  (void*) (ROGUEM92) RogueCmdAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM94) RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM95) Rogue_CmdAccess__type,
  (void*) (ROGUEM96) RogueCmdAccess__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM97) RogueCmdAccess__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Cmd
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM98) RogueCmd__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM100) RogueCmd__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM105) RogueCmd__init_object,
  (void*) (ROGUEM106) RogueCmdArgs__init, // CmdArgs
  0,
  0,
  0,
  (void*) (ROGUEM107) RogueCmd_List__to_String,
  0,
  (void*) (ROGUEM108) RogueCmdArgs__type_name,
  (void*) (ROGUEM106) RogueCmdArgs__init_object,
  (void*) (ROGUEM109) RogueCmdArgs__init__Int32,
  (void*) (ROGUEM110) RogueCmd_List__init, // Cmd[]
  0,
  0,
  0,
  (void*) (ROGUEM107) RogueCmd_List__to_String,
  0,
  (void*) (ROGUEM107) RogueCmd_List__type_name,
  (void*) (ROGUEM110) RogueCmd_List__init_object,
  (void*) (ROGUEM111) RogueCmd_List__init__Int32,
  (void*) (ROGUEM112) RogueCmdNamedArg_List__init, // CmdNamedArg[]
  0,
  0,
  0,
  (void*) (ROGUEM113) RogueCmdNamedArg_List__to_String,
  0,
  (void*) (ROGUEM113) RogueCmdNamedArg_List__type_name,
  (void*) (ROGUEM112) RogueCmdNamedArg_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNamedArg
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM114) RogueCmdNamedArg__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM115) RogueCmdNamedArg__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM116) RogueCmdNamedArg__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM117) RogueCmdNamedArg__init_object,
  (void*) (ROGUEM118) RogueCmdStatementList__init, // CmdStatementList
  0,
  0,
  0,
  (void*) (ROGUEM107) RogueCmd_List__to_String,
  0,
  (void*) (ROGUEM119) RogueCmdStatementList__type_name,
  (void*) (ROGUEM118) RogueCmdStatementList__init_object,
  (void*) (ROGUEM120) RogueCmdStatementList__init__Int32,
  (void*) (ROGUEM0) RogueObject__init, // CmdLabel
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM121) RogueCmdLabel__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM122) RogueCmdLabel__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM123) RogueCmdLabel__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM124) RogueCmdLabel__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM124) RogueCmdLabel__requires_semicolon,
  (void*) (ROGUEM125) RogueCmdLabel__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM126) RogueCmdLabel__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM127) RogueCmdLabel__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReturn
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM128) RogueCmdReturn__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM129) RogueCmdReturn__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM130) RogueCmdReturn__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM131) RogueCmdReturn__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM132) Rogue_CmdReturn__type,
  (void*) (ROGUEM133) RogueCmdReturn__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM134) RogueCmdReturn__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdStatement
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM135) RogueCmdStatement__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM136) RogueCmdStatement__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM137) RogueCmdStatement__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM138) RogueTokenType__type_name,
  0,
  (void*) (ROGUEM139) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM142) RogueTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM142) RogueTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM143) RogueTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Scope
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM144) RogueScope__type_name,
  (void*) (ROGUEM145) RogueMethod_List__init, // Method[]
  0,
  0,
  0,
  (void*) (ROGUEM146) RogueMethod_List__to_String,
  0,
  (void*) (ROGUEM146) RogueMethod_List__type_name,
  (void*) (ROGUEM145) RogueMethod_List__init_object,
  (void*) (ROGUEM147) RoguePlugin_List__init, // Plugin[]
  0,
  0,
  0,
  (void*) (ROGUEM148) RoguePlugin_List__to_String,
  0,
  (void*) (ROGUEM148) RoguePlugin_List__type_name,
  (void*) (ROGUEM147) RoguePlugin_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Plugin
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM149) RoguePlugin__type_name,
  (void*) (ROGUEM0) RogueObject__init, // Function(Type)->Logical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM150) RogueFunction_Type_RETURNSLogical__type_name,
  (void*) (ROGUEM151) RogueFunction_Type_RETURNSLogical__call__Type,
  (void*) (ROGUEM152) RogueFunction_Type_RETURNSLogical__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function_229
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM153) RogueFunction_229__type_name,
  (void*) (ROGUEM154) RogueFunction_229__call__Type,
  (void*) (ROGUEM155) RogueFunction_229__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function_230
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM156) RogueFunction_230__type_name,
  (void*) (ROGUEM157) RogueFunction_230__call__Type,
  (void*) (ROGUEM158) RogueFunction_230__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CPPWriter
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM159) RogueCPPWriter__type_name,
  (void*) (ROGUEM160) RogueTable_String_Method___init, // Table<<String,Method>>
  0,
  0,
  0,
  (void*) (ROGUEM161) RogueTable_String_Method___to_String,
  0,
  (void*) (ROGUEM161) RogueTable_String_Method___type_name,
  (void*) (ROGUEM162) RogueLocal_List__init, // Local[]
  0,
  0,
  0,
  (void*) (ROGUEM163) RogueLocal_List__to_String,
  0,
  (void*) (ROGUEM163) RogueLocal_List__type_name,
  (void*) (ROGUEM162) RogueLocal_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Local
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM164) RogueLocal__type_name,
  (void*) (ROGUEM165) RogueInt32_List__init, // Int32[]
  0,
  0,
  0,
  (void*) (ROGUEM166) RogueInt32_List__to_String,
  0,
  (void*) (ROGUEM166) RogueInt32_List__type_name,
  (void*) (ROGUEM165) RogueInt32_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Math
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM167) RogueMath__type_name,
  (void*) (ROGUEM0) RogueObject__init, // System
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM168) RogueSystem__type_name,
  (void*) (ROGUEM169) RogueTable_String_TypeInfo___init, // Table<<String,TypeInfo>>
  0,
  0,
  0,
  (void*) (ROGUEM170) RogueTable_String_TypeInfo___to_String,
  0,
  (void*) (ROGUEM170) RogueTable_String_TypeInfo___type_name,
  0, // Reader<<Byte>>
  0, // Writer<<Byte>>
  (void*) (ROGUEM171) RogueTableEntry_String_String__List__init, // TableEntry<<String,String>>[]
  0,
  0,
  0,
  (void*) (ROGUEM172) RogueTableEntry_String_String__List__to_String,
  0,
  (void*) (ROGUEM172) RogueTableEntry_String_String__List__type_name,
  (void*) (ROGUEM171) RogueTableEntry_String_String__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,String>>
  0,
  0,
  0,
  (void*) (ROGUEM173) RogueTableEntry_String_String___to_String,
  0,
  (void*) (ROGUEM173) RogueTableEntry_String_String___type_name,
  (void*) (ROGUEM174) RogueTable_String_Logical___init, // Table<<String,Logical>>
  0,
  0,
  0,
  (void*) (ROGUEM175) RogueTable_String_Logical___to_String,
  0,
  (void*) (ROGUEM175) RogueTable_String_Logical___type_name,
  (void*) (ROGUEM176) RogueParser_List__init, // Parser[]
  0,
  0,
  0,
  (void*) (ROGUEM177) RogueParser_List__to_String,
  0,
  (void*) (ROGUEM177) RogueParser_List__type_name,
  (void*) (ROGUEM176) RogueParser_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Parser
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM178) RogueParser__type_name,
  (void*) (ROGUEM179) RogueTable_String_ParseReader___init, // Table<<String,ParseReader>>
  0,
  0,
  0,
  (void*) (ROGUEM180) RogueTable_String_ParseReader___to_String,
  0,
  (void*) (ROGUEM180) RogueTable_String_ParseReader___type_name,
  (void*) (ROGUEM0) RogueObject__init, // Stopwatch
  0,
  0,
  0,
  (void*) (ROGUEM181) RogueStopwatch__to_String,
  0,
  (void*) (ROGUEM181) RogueStopwatch__type_name,
  (void*) (ROGUEM0) RogueObject__init, // File
  0,
  0,
  0,
  (void*) (ROGUEM182) RogueFile__to_String,
  0,
  (void*) (ROGUEM182) RogueFile__type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdMakeRequisite
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM183) RogueCmdMakeRequisite__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM184) RogueCmdMakeRequisite__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM185) RogueCmdMakeRequisite__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM186) RogueCmdMakeRequisite__requires_semicolon,
  (void*) (ROGUEM187) RogueCmdMakeRequisite__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM188) RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM189) RogueCmdMakeRequisite__init_object,
  (void*) (ROGUEM0) RogueObject__init, // LineReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM190) RogueLineReader__type_name,
  (void*) (ROGUEM191) RogueLineReader__has_another,
  (void*) (ROGUEM190) RogueLineReader__read,
  (void*) (ROGUEM0) RogueObject__init, // Function_545
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM192) RogueFunction_545__type_name,
  (void*) (ROGUEM193) RogueFunction_545__call,
  (void*) (ROGUEM194) RogueFunction_545__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function()->Logical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM195) RogueFunction__RETURNSLogical__type_name,
  (void*) (ROGUEM196) RogueFunction__RETURNSLogical__call,
  (void*) (ROGUEM197) RogueFunction__RETURNSLogical__init_object,
  (void*) (ROGUEM198) RogueTypeParameter_List__init, // TypeParameter[]
  0,
  0,
  0,
  (void*) (ROGUEM199) RogueTypeParameter_List__to_String,
  0,
  (void*) (ROGUEM199) RogueTypeParameter_List__type_name,
  (void*) (ROGUEM198) RogueTypeParameter_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TypeParameter
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM200) RogueTypeParameter__type_name,
  (void*) (ROGUEM201) RogueAugment_List__init, // Augment[]
  0,
  0,
  0,
  (void*) (ROGUEM202) RogueAugment_List__to_String,
  0,
  (void*) (ROGUEM202) RogueAugment_List__type_name,
  (void*) (ROGUEM201) RogueAugment_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Augment
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM203) RogueAugment__type_name,
  (void*) (ROGUEM204) RogueTable_String_TokenType___init, // Table<<String,TokenType>>
  0,
  0,
  0,
  (void*) (ROGUEM205) RogueTable_String_TokenType___to_String,
  0,
  (void*) (ROGUEM205) RogueTable_String_TokenType___type_name,
  (void*) (ROGUEM0) RogueObject__init, // LiteralCharacterToken
  0,
  0,
  0,
  (void*) (ROGUEM206) RogueLiteralCharacterToken__to_String,
  0,
  (void*) (ROGUEM206) RogueLiteralCharacterToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM207) RogueLiteralCharacterToken__to_Character,
  (void*) (ROGUEM70) RogueToken__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM72) RogueToken__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM208) RogueLiteralCharacterToken__init_object,
  (void*) (ROGUEM0) RogueObject__init, // LiteralInt64Token
  0,
  0,
  0,
  (void*) (ROGUEM209) RogueLiteralInt64Token__to_String,
  0,
  (void*) (ROGUEM209) RogueLiteralInt64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM210) RogueLiteralInt64Token__to_Int32,
  (void*) (ROGUEM211) RogueLiteralInt64Token__to_Int64,
  (void*) (ROGUEM212) RogueLiteralInt64Token__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM213) RogueLiteralInt64Token__init_object,
  (void*) (ROGUEM0) RogueObject__init, // LiteralInt32Token
  0,
  0,
  0,
  (void*) (ROGUEM214) RogueLiteralInt32Token__to_String,
  0,
  (void*) (ROGUEM214) RogueLiteralInt32Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM215) RogueLiteralInt32Token__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM216) RogueLiteralInt32Token__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM217) RogueLiteralInt32Token__init_object,
  (void*) (ROGUEM0) RogueObject__init, // LiteralReal64Token
  0,
  0,
  0,
  (void*) (ROGUEM218) RogueLiteralReal64Token__to_String,
  0,
  (void*) (ROGUEM218) RogueLiteralReal64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM219) RogueLiteralReal64Token__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM220) RogueLiteralReal64Token__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM221) RogueLiteralReal64Token__init_object,
  (void*) (ROGUEM0) RogueObject__init, // StringDataToken
  0,
  0,
  0,
  (void*) (ROGUEM222) RogueStringDataToken__to_String,
  0,
  (void*) (ROGUEM222) RogueStringDataToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM222) RogueStringDataToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM70) RogueToken__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM72) RogueToken__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM223) RogueStringDataToken__init_object,
  (void*) (ROGUEM224) RogueTable_String_TypeSpecializer___init, // Table<<String,TypeSpecializer>>
  0,
  0,
  0,
  (void*) (ROGUEM225) RogueTable_String_TypeSpecializer___to_String,
  0,
  (void*) (ROGUEM225) RogueTable_String_TypeSpecializer___type_name,
  (void*) (ROGUEM0) RogueObject__init, // TypeSpecializer
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM226) RogueTypeSpecializer__type_name,
  (void*) (ROGUEM227) RogueTypeSpecializer_List__init, // TypeSpecializer[]
  0,
  0,
  0,
  (void*) (ROGUEM228) RogueTypeSpecializer_List__to_String,
  0,
  (void*) (ROGUEM228) RogueTypeSpecializer_List__type_name,
  (void*) (ROGUEM227) RogueTypeSpecializer_List__init_object,
  (void*) (ROGUEM229) RogueTableEntry_String_Template__List__init, // TableEntry<<String,Template>>[]
  0,
  0,
  0,
  (void*) (ROGUEM230) RogueTableEntry_String_Template__List__to_String,
  0,
  (void*) (ROGUEM230) RogueTableEntry_String_Template__List__type_name,
  (void*) (ROGUEM229) RogueTableEntry_String_Template__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Template>>
  0,
  0,
  0,
  (void*) (ROGUEM231) RogueTableEntry_String_Template___to_String,
  0,
  (void*) (ROGUEM231) RogueTableEntry_String_Template___type_name,
  (void*) (ROGUEM232) RogueTableEntry_String_Augment_List__List__init, // TableEntry<<String,Augment[]>>[]
  0,
  0,
  0,
  (void*) (ROGUEM233) RogueTableEntry_String_Augment_List__List__to_String,
  0,
  (void*) (ROGUEM233) RogueTableEntry_String_Augment_List__List__type_name,
  (void*) (ROGUEM232) RogueTableEntry_String_Augment_List__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Augment[]>>
  0,
  0,
  0,
  (void*) (ROGUEM234) RogueTableEntry_String_Augment_List___to_String,
  0,
  (void*) (ROGUEM234) RogueTableEntry_String_Augment_List___type_name,
  (void*) (ROGUEM235) RogueCmdLabel_List__init, // CmdLabel[]
  0,
  0,
  0,
  (void*) (ROGUEM236) RogueCmdLabel_List__to_String,
  0,
  (void*) (ROGUEM236) RogueCmdLabel_List__type_name,
  (void*) (ROGUEM235) RogueCmdLabel_List__init_object,
  (void*) (ROGUEM237) RogueTable_String_CmdLabel___init, // Table<<String,CmdLabel>>
  0,
  0,
  0,
  (void*) (ROGUEM238) RogueTable_String_CmdLabel___to_String,
  0,
  (void*) (ROGUEM238) RogueTable_String_CmdLabel___type_name,
  (void*) (ROGUEM0) RogueObject__init, // MethodTemplate
  0,
  0,
  0,
  (void*) (ROGUEM239) RogueMethodTemplate__to_String,
  0,
  (void*) (ROGUEM239) RogueMethodTemplate__type_name,
  (void*) (ROGUEM0) RogueObject__init, // CloneArgs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM240) RogueCloneArgs__type_name,
  (void*) (ROGUEM241) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM242) RogueCloneArgs__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CloneMethodArgs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM243) RogueCloneMethodArgs__type_name,
  (void*) (ROGUEM244) RogueCloneMethodArgs__register_label__CmdLabel,
  (void*) (ROGUEM245) RogueCloneMethodArgs__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Visitor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM246) RogueVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM247) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM248) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM249) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM250) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM251) RogueVisitor__on_leave__CmdCallDynamicMethod,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM252) RogueVisitor__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAssert
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM253) RogueCmdAssert__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM254) RogueCmdAssert__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM255) RogueCmdAssert__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM256) RogueCmdAssert__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM257) Rogue_CmdAssert__type,
  (void*) (ROGUEM258) RogueCmdAssert__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM259) RogueCmdAssert__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdRequire
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM260) RogueCmdRequire__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM261) RogueCmdRequire__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM262) RogueCmdRequire__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM263) RogueCmdRequire__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM264) Rogue_CmdRequire__type,
  (void*) (ROGUEM265) RogueCmdRequire__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM266) RogueCmdRequire__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAssign
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM267) RogueCmdAssign__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM268) RogueCmdAssign__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM269) RogueCmdAssign__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM270) RogueCmdAssign__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM271) RogueCmdAssign__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLocalDeclaration
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM272) RogueCmdLocalDeclaration__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM273) RogueCmdLocalDeclaration__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM274) RogueCmdLocalDeclaration__dispatch__Visitor,
  (void*) (ROGUEM275) RogueCmdLocalDeclaration__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM276) RogueCmdLocalDeclaration__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM277) RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM278) RogueCmdLocalDeclaration__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdBlock
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM279) RogueCmdBlock__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM280) RogueCmdBlock__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM281) RogueCmdBlock__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM282) RogueCmdBlock__requires_semicolon,
  (void*) (ROGUEM283) RogueCmdBlock__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM284) RogueCmdBlock__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM285) RogueCmdBlock__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdControlStructure
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM287) RogueCmdControlStructure__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM288) RogueCmdControlStructure__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM290) RogueCmdControlStructure__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdIf
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM291) RogueCmdIf__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM292) RogueCmdIf__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM293) RogueCmdIf__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM294) RogueCmdIf__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM295) RogueCmdIf__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM296) RogueCmdIf__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdSwitch
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM297) RogueCmdSwitch__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM298) RogueCmdSwitch__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM299) RogueCmdSwitch__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM300) RogueCmdSwitch__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM301) RogueCmdSwitch__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM302) RogueCmdSwitch__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdWhich
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM303) RogueCmdWhich__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM304) RogueCmdWhich__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM305) RogueCmdWhich__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM306) RogueCmdWhich__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM307) RogueCmdWhich__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdWhichCase
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM308) RogueCmdWhichCase__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM309) RogueCmdWhichCase__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM310) RogueCmdWhichCase__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM311) RogueCmdWhichCase__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdContingent
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM312) RogueCmdContingent__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM313) RogueCmdContingent__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM314) RogueCmdContingent__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM315) RogueCmdContingent__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM316) RogueCmdContingent__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM317) RogueCmdContingent__init_object,
  0,
  (void*) (ROGUEM318) RogueCmdContingent__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdGenericLoop
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM319) RogueCmdGenericLoop__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM320) RogueCmdGenericLoop__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM321) RogueCmdGenericLoop__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM322) RogueCmdGenericLoop__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM323) RogueCmdGenericLoop__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM324) RogueCmdGenericLoop__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdElementAccess
  0,
  0,
  0,
  (void*) (ROGUEM325) RogueCmdElementAccess__to_String,
  0,
  (void*) (ROGUEM325) RogueCmdElementAccess__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM326) RogueCmdElementAccess__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM327) RogueCmdElementAccess__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM328) RogueCmdElementAccess__resolve__Scope,
  (void*) (ROGUEM329) RogueCmdElementAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM330) RogueCmdElementAccess__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM331) RogueCmdElementAccess__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdEnsure
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM332) RogueCmdEnsure__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM333) RogueCmdEnsure__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM334) RogueCmdEnsure__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM335) RogueCmdEnsure__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM336) RogueCmdEnsure__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM337) Rogue_CmdEnsure__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM338) RogueCmdEnsure__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdForEach
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM339) RogueCmdForEach__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM340) RogueCmdForEach__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM341) RogueCmdForEach__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM342) RogueCmdForEach__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM343) RogueCmdForEach__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdFormattedString
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM344) RogueCmdFormattedString__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM345) RogueCmdFormattedString__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM346) RogueCmdFormattedString__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM347) RogueCmdFormattedString__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM348) RogueCmdFormattedString__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM349) Rogue_CmdFormattedString__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM350) RogueCmdFormattedString__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTry
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM351) RogueCmdTry__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM352) RogueCmdTry__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM353) RogueCmdTry__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM289) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM354) RogueCmdTry__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM355) RogueCmdTry__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM356) RogueCmdTry__init_object,
  0,
  (void*) (ROGUEM286) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM0) RogueObject__init, // CmdCatch
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM357) RogueCmdCatch__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM358) RogueCmdCatch__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM359) RogueCmdCatch__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM360) RogueCmdCatch__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM361) RogueCmdCatch__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM362) RogueCmdCatch__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdThrow
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM363) RogueCmdThrow__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM364) RogueCmdThrow__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM365) RogueCmdThrow__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM366) RogueCmdThrow__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM367) RogueCmdThrow__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM368) RogueCmdThrow__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdEscape
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM369) RogueCmdEscape__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM370) RogueCmdEscape__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM371) RogueCmdEscape__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM372) RogueCmdEscape__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM373) RogueCmdEscape__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM374) RogueCmdEscape__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNextIteration
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM375) RogueCmdNextIteration__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM376) RogueCmdNextIteration__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM377) RogueCmdNextIteration__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM378) RogueCmdNextIteration__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM379) RogueCmdNextIteration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM380) RogueCmdNextIteration__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNecessary
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM381) RogueCmdNecessary__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM382) RogueCmdNecessary__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM383) RogueCmdNecessary__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM384) RogueCmdNecessary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM385) RogueCmdNecessary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM386) RogueCmdNecessary__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdSufficient
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM387) RogueCmdSufficient__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM388) RogueCmdSufficient__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM389) RogueCmdSufficient__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM390) RogueCmdSufficient__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM391) RogueCmdSufficient__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM392) RogueCmdSufficient__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteral
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM393) RogueCmdLiteral__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM394) RogueCmdLiteral__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM397) RogueCmdLiteral__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralString
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM398) RogueCmdLiteralString__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM399) RogueCmdLiteralString__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM400) RogueCmdLiteralString__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM401) RogueCmdLiteralString__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM402) Rogue_CmdLiteralString__type,
  (void*) (ROGUEM403) RogueCmdLiteralString__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM404) RogueCmdLiteralString__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateObject
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM405) RogueCmdCreateObject__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM406) RogueCmdCreateObject__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM407) RogueCmdCreateObject__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM408) RogueCmdCreateObject__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM409) Rogue_CmdCreateObject__type,
  (void*) (ROGUEM410) RogueCmdCreateObject__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM411) RogueCmdCreateObject__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateCompound
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM412) RogueCmdCreateCompound__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM413) RogueCmdCreateCompound__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM414) RogueCmdCreateCompound__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM415) RogueCmdCreateCompound__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM416) Rogue_CmdCreateCompound__type,
  (void*) (ROGUEM417) RogueCmdCreateCompound__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM418) RogueCmdCreateCompound__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdThisContext
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM419) RogueCmdThisContext__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM420) RogueCmdThisContext__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM421) RogueCmdThisContext__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM422) RogueCmdThisContext__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM423) RogueCmdThisContext__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM424) RogueCmdThisContext__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM425) Rogue_CmdThisContext__type,
  (void*) (ROGUEM426) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM427) RogueCmdThisContext__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadSingleton
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM428) RogueCmdReadSingleton__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM429) RogueCmdReadSingleton__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM430) RogueCmdReadSingleton__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM431) RogueCmdReadSingleton__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM432) RogueCmdReadSingleton__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM433) Rogue_CmdReadSingleton__type,
  (void*) (ROGUEM434) RogueCmdReadSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM435) RogueCmdReadSingleton__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdWriteSingleton
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM436) RogueCmdWriteSingleton__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM437) RogueCmdWriteSingleton__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM438) RogueCmdWriteSingleton__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM439) RogueCmdWriteSingleton__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM440) RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM441) RogueCmdWriteSingleton__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadLocal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM442) RogueCmdReadLocal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM443) RogueCmdReadLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM444) RogueCmdReadLocal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM445) RogueCmdReadLocal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM446) RogueCmdReadLocal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM447) Rogue_CmdReadLocal__type,
  (void*) (ROGUEM448) RogueCmdReadLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM449) RogueCmdReadLocal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdWriteLocal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM450) RogueCmdWriteLocal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM451) RogueCmdWriteLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM452) RogueCmdWriteLocal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM453) RogueCmdWriteLocal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM454) RogueCmdWriteLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM455) RogueCmdWriteLocal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadGlobal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM456) RogueCmdReadGlobal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM457) RogueCmdReadGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM458) RogueCmdReadGlobal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM459) RogueCmdReadGlobal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM460) RogueCmdReadGlobal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM461) Rogue_CmdReadGlobal__type,
  (void*) (ROGUEM462) RogueCmdReadGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM463) RogueCmdReadGlobal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdWriteGlobal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM464) RogueCmdWriteGlobal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM465) RogueCmdWriteGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM466) RogueCmdWriteGlobal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM467) RogueCmdWriteGlobal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM468) RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM469) RogueCmdWriteGlobal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadProperty
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM470) RogueCmdReadProperty__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM471) RogueCmdReadProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM472) RogueCmdReadProperty__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM473) RogueCmdReadProperty__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM474) RogueCmdReadProperty__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM475) Rogue_CmdReadProperty__type,
  (void*) (ROGUEM476) RogueCmdReadProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM477) RogueCmdReadProperty__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdWriteProperty
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM478) RogueCmdWriteProperty__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM479) RogueCmdWriteProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM480) RogueCmdWriteProperty__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM481) RogueCmdWriteProperty__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM482) RogueCmdWriteProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM483) RogueCmdWriteProperty__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCall
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM484) RogueCmdCall__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM485) RogueCmdCall__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM489) RogueCmdCall__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallDynamicMethod
  0,
  0,
  0,
  (void*) (ROGUEM490) RogueCmdCallDynamicMethod__to_String,
  0,
  (void*) (ROGUEM490) RogueCmdCallDynamicMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM491) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM492) RogueCmdCallDynamicMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM493) RogueCmdCallDynamicMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM494) RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM495) RogueCmdCallDynamicMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallMethod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM496) RogueCmdCallMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM491) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM497) RogueCmdCallMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM498) RogueCmdCallMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallPriorMethod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM499) RogueCmdCallPriorMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM500) RogueCmdCallPriorMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM501) RogueCmdCallPriorMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM502) RogueCmdCallPriorMethod__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM503) RogueCmdCallPriorMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdRange
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM504) RogueCmdRange__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM505) RogueCmdRange__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM506) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM507) RogueCmdRange__init_object,
  0,
  (void*) (ROGUEM508) RogueCmdRange__default_step_size,
  (void*) (ROGUEM0) RogueObject__init, // CmdUnary
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM509) RogueCmdUnary__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM510) RogueCmdUnary__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM511) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM512) Rogue_CmdUnary__type,
  (void*) (ROGUEM513) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM514) RogueCmdUnary__init_object,
  0,
  (void*) (ROGUEM509) RogueCmdUnary__prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__fn_name,
  (void*) (ROGUEM511) RogueCmdUnary__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM509) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBinary
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM516) RogueCmdBinary__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM520) RogueCmdBinary__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM515) RogueCmdBinary__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdAdjustLocal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM524) RogueCmdAdjustLocal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM525) RogueCmdAdjustLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM526) RogueCmdAdjustLocal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM527) RogueCmdAdjustLocal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM528) Rogue_CmdAdjustLocal__type,
  (void*) (ROGUEM529) RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM530) RogueCmdAdjustLocal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAdjustProperty
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM531) RogueCmdAdjustProperty__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM532) RogueCmdAdjustProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM533) RogueCmdAdjustProperty__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM534) RogueCmdAdjustProperty__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM535) Rogue_CmdAdjustProperty__type,
  (void*) (ROGUEM536) RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM537) RogueCmdAdjustProperty__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAdjustGlobal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM538) RogueCmdAdjustGlobal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM539) RogueCmdAdjustGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM540) RogueCmdAdjustGlobal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM541) RogueCmdAdjustGlobal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM542) Rogue_CmdAdjustGlobal__type,
  (void*) (ROGUEM543) RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM544) RogueCmdAdjustGlobal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdModifyAndAssignLocal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM545) RogueCmdModifyAndAssignLocal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM546) RogueCmdModifyAndAssignLocal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM547) RogueCmdModifyAndAssignLocal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM548) RogueCmdModifyAndAssignLocal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM549) Rogue_CmdModifyAndAssignLocal__type,
  (void*) (ROGUEM550) RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM551) RogueCmdModifyAndAssignLocal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdResolvedModifyAndAssign
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM552) RogueCmdResolvedModifyAndAssign__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM553) RogueCmdResolvedModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM554) RogueCmdResolvedModifyAndAssign__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdModifyAndAssignGlobal
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM555) RogueCmdModifyAndAssignGlobal__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM556) RogueCmdModifyAndAssignGlobal__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM557) RogueCmdModifyAndAssignGlobal__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM558) RogueCmdModifyAndAssignGlobal__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM559) Rogue_CmdModifyAndAssignGlobal__type,
  (void*) (ROGUEM560) RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM561) RogueCmdModifyAndAssignGlobal__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdModifyAndAssignProperty
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM562) RogueCmdModifyAndAssignProperty__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM563) RogueCmdModifyAndAssignProperty__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM564) RogueCmdModifyAndAssignProperty__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM565) RogueCmdModifyAndAssignProperty__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM566) Rogue_CmdModifyAndAssignProperty__type,
  (void*) (ROGUEM567) RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM568) RogueCmdModifyAndAssignProperty__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateArray
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM569) RogueCmdCreateArray__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM570) RogueCmdCreateArray__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM571) RogueCmdCreateArray__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM572) RogueCmdCreateArray__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM573) Rogue_CmdCreateArray__type,
  (void*) (ROGUEM574) RogueCmdCreateArray__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM575) RogueCmdCreateArray__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadArrayElement
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM576) RogueCmdReadArrayElement__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM577) RogueCmdReadArrayElement__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM578) RogueCmdReadArrayElement__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM579) RogueCmdReadArrayElement__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM580) RogueCmdReadArrayElement__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM581) Rogue_CmdReadArrayElement__type,
  (void*) (ROGUEM582) RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM583) RogueCmdReadArrayElement__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdReadArrayCount
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM584) RogueCmdReadArrayCount__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM585) RogueCmdReadArrayCount__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM586) RogueCmdReadArrayCount__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM587) RogueCmdReadArrayCount__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM588) Rogue_CmdReadArrayCount__type,
  (void*) (ROGUEM589) RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM590) RogueCmdReadArrayCount__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdWriteArrayElement
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM591) RogueCmdWriteArrayElement__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM592) RogueCmdWriteArrayElement__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM593) RogueCmdWriteArrayElement__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM594) RogueCmdWriteArrayElement__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM595) Rogue_CmdWriteArrayElement__type,
  (void*) (ROGUEM596) RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM597) RogueCmdWriteArrayElement__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTypeOperator
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM598) RogueCmdTypeOperator__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM599) RogueCmdTypeOperator__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM81) RogueCmd__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM600) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM601) RogueCmdTypeOperator__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTaskControl
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM602) RogueCmdTaskControl__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM603) RogueCmdTaskControl__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM604) RogueCmdTaskControl__requires_semicolon,
  (void*) (ROGUEM605) RogueCmdTaskControl__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM606) RogueCmdTaskControl__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM607) RogueCmdTaskControl__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTrace
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM608) RogueCmdTrace__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM609) RogueCmdTrace__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM610) RogueCmdTrace__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM611) RogueCmdTrace__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM612) RogueCmdTrace__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdInlineNative
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM613) RogueCmdInlineNative__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM614) RogueCmdInlineNative__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM615) RogueCmdInlineNative__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM616) RogueCmdInlineNative__requires_semicolon,
  (void*) (ROGUEM617) RogueCmdInlineNative__resolve__Scope,
  (void*) (ROGUEM618) RogueCmdInlineNative__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM619) RogueCmdInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM620) RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM621) Rogue_CmdInlineNative__type,
  (void*) (ROGUEM622) RogueCmdInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM623) RogueCmdInlineNative__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNoAction
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM624) RogueCmdNoAction__type_name,
  (void*) (ROGUEM625) RogueCmdNoAction__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM626) RogueCmdNoAction__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM627) RogueCmdNoAction__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM628) RogueCmdNoAction__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM628) RogueCmdNoAction__requires_semicolon,
  (void*) (ROGUEM629) RogueCmdNoAction__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM630) Rogue_CmdNoAction__type,
  (void*) (ROGUEM631) RogueCmdNoAction__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM632) RogueCmdNoAction__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdSelect
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM633) RogueCmdSelect__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM634) RogueCmdSelect__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM635) RogueCmdSelect__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM636) RogueCmdSelect__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM637) RogueCmdSelect__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM638) Rogue_CmdSelect__type,
  (void*) (ROGUEM639) RogueCmdSelect__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM640) RogueCmdSelect__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdSelectCase
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM641) RogueCmdSelectCase__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM642) RogueCmdSelectCase__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM643) RogueCmdSelectCase__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM644) RogueCmdSelectCase__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM645) RogueCmdSelectCase__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM646) Rogue_CmdSelectCase__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM647) RogueCmdSelectCase__init_object,
  (void*) (ROGUEM648) RogueCmdControlStructure_List__init, // CmdControlStructure[]
  0,
  0,
  0,
  (void*) (ROGUEM649) RogueCmdControlStructure_List__to_String,
  0,
  (void*) (ROGUEM649) RogueCmdControlStructure_List__type_name,
  (void*) (ROGUEM648) RogueCmdControlStructure_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralThis
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM650) RogueCmdLiteralThis__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM651) RogueCmdLiteralThis__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM652) RogueCmdLiteralThis__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM422) RogueCmdThisContext__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM653) RogueCmdLiteralThis__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM654) RogueCmdLiteralThis__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM425) Rogue_CmdThisContext__type,
  (void*) (ROGUEM426) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM655) RogueCmdLiteralThis__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralInt32
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM656) RogueCmdLiteralInt32__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM657) RogueCmdLiteralInt32__cast_to__Type_Scope,
  (void*) (ROGUEM658) RogueCmdLiteralInt32__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM659) RogueCmdLiteralInt32__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM660) RogueCmdLiteralInt32__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM661) Rogue_CmdLiteralInt32__type,
  (void*) (ROGUEM662) RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM663) RogueCmdLiteralInt32__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareNE
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM664) RogueCmdCompareNE__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM665) RogueCmdCompareNE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM666) RogueCmdCompareNE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM667) RogueCmdCompareNE__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM669) RogueCmdCompareNE__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM664) RogueCmdCompareNE__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM672) RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdComparison
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM673) RogueCmdComparison__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM674) RogueCmdComparison__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM675) RogueCmdComparison__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM515) RogueCmdBinary__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM676) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // TaskArgs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM677) RogueTaskArgs__type_name,
  (void*) (ROGUEM241) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM678) RogueTaskArgs__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTaskControlSection
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM679) RogueCmdTaskControlSection__type_name,
  (void*) (ROGUEM680) RogueTableEntry_String_Method_List__List__init, // TableEntry<<String,Method[]>>[]
  0,
  0,
  0,
  (void*) (ROGUEM681) RogueTableEntry_String_Method_List__List__to_String,
  0,
  (void*) (ROGUEM681) RogueTableEntry_String_Method_List__List__type_name,
  (void*) (ROGUEM680) RogueTableEntry_String_Method_List__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Method[]>>
  0,
  0,
  0,
  (void*) (ROGUEM682) RogueTableEntry_String_Method_List___to_String,
  0,
  (void*) (ROGUEM682) RogueTableEntry_String_Method_List___type_name,
  (void*) (ROGUEM683) RogueDefinition_List__init, // Definition[]
  0,
  0,
  0,
  (void*) (ROGUEM684) RogueDefinition_List__to_String,
  0,
  (void*) (ROGUEM684) RogueDefinition_List__type_name,
  (void*) (ROGUEM683) RogueDefinition_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Definition
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM685) RogueDefinition__type_name,
  (void*) (ROGUEM686) RogueTable_String_Definition___init, // Table<<String,Definition>>
  0,
  0,
  0,
  (void*) (ROGUEM687) RogueTable_String_Definition___to_String,
  0,
  (void*) (ROGUEM687) RogueTable_String_Definition___type_name,
  (void*) (ROGUEM688) RogueTable_String_Property___init, // Table<<String,Property>>
  0,
  0,
  0,
  (void*) (ROGUEM689) RogueTable_String_Property___to_String,
  0,
  (void*) (ROGUEM689) RogueTable_String_Property___type_name,
  (void*) (ROGUEM0) RogueObject__init, // MethodTemplates
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM690) RogueMethodTemplates__type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralNull
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM691) RogueCmdLiteralNull__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM692) RogueCmdLiteralNull__cast_to__Type_Scope,
  (void*) (ROGUEM693) RogueCmdLiteralNull__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM694) RogueCmdLiteralNull__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM695) RogueCmdLiteralNull__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM696) Rogue_CmdLiteralNull__type,
  (void*) (ROGUEM697) RogueCmdLiteralNull__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM698) RogueCmdLiteralNull__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralLogical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM699) RogueCmdLiteralLogical__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM700) RogueCmdLiteralLogical__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM701) RogueCmdLiteralLogical__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM702) RogueCmdLiteralLogical__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM703) Rogue_CmdLiteralLogical__type,
  (void*) (ROGUEM704) RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM705) RogueCmdLiteralLogical__init_object,
  (void*) (ROGUEM0) RogueObject__init, // UpdateThisTypeVisitor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM706) RogueUpdateThisTypeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM247) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM248) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM249) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM707) RogueUpdateThisTypeVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM251) RogueVisitor__on_leave__CmdCallDynamicMethod,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM708) RogueUpdateThisTypeVisitor__init_object,
  (void*) (ROGUEM709) RogueTableEntry_String_Type__List__init, // TableEntry<<String,Type>>[]
  0,
  0,
  0,
  (void*) (ROGUEM710) RogueTableEntry_String_Type__List__to_String,
  0,
  (void*) (ROGUEM710) RogueTableEntry_String_Type__List__type_name,
  (void*) (ROGUEM709) RogueTableEntry_String_Type__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Type>>
  0,
  0,
  0,
  (void*) (ROGUEM711) RogueTableEntry_String_Type___to_String,
  0,
  (void*) (ROGUEM711) RogueTableEntry_String_Type___type_name,
  (void*) (ROGUEM712) RogueTableEntry_String_Int32__List__init, // TableEntry<<String,Int32>>[]
  0,
  0,
  0,
  (void*) (ROGUEM713) RogueTableEntry_String_Int32__List__to_String,
  0,
  (void*) (ROGUEM713) RogueTableEntry_String_Int32__List__type_name,
  (void*) (ROGUEM712) RogueTableEntry_String_Int32__List__init_object,
  (void*) (ROGUEM714) RogueTableEntry_String_String_List__List__init, // TableEntry<<String,String[]>>[]
  0,
  0,
  0,
  (void*) (ROGUEM715) RogueTableEntry_String_String_List__List__to_String,
  0,
  (void*) (ROGUEM715) RogueTableEntry_String_String_List__List__type_name,
  (void*) (ROGUEM714) RogueTableEntry_String_String_List__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,String[]>>
  0,
  0,
  0,
  (void*) (ROGUEM716) RogueTableEntry_String_String_List___to_String,
  0,
  (void*) (ROGUEM716) RogueTableEntry_String_String_List___type_name,
  (void*) (ROGUEM717) RogueTableEntry_Int32_Template__List__init, // TableEntry<<Int32,Template>>[]
  0,
  0,
  0,
  (void*) (ROGUEM718) RogueTableEntry_Int32_Template__List__to_String,
  0,
  (void*) (ROGUEM718) RogueTableEntry_Int32_Template__List__type_name,
  (void*) (ROGUEM717) RogueTableEntry_Int32_Template__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<Int32,Template>>
  0,
  0,
  0,
  (void*) (ROGUEM719) RogueTableEntry_Int32_Template___to_String,
  0,
  (void*) (ROGUEM719) RogueTableEntry_Int32_Template___type_name,
  (void*) (ROGUEM0) RogueObject__init, // ListRebuilder<<Token>>
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM720) RogueListRebuilder_Token___type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdCastToType
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM721) RogueCmdCastToType__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM722) RogueCmdCastToType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM723) RogueCmdCastToType__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM724) RogueCmdCastToType__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM600) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM725) RogueCmdCastToType__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM726) RogueCmdCastToType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLogicalize
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM727) RogueCmdLogicalize__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM728) RogueCmdLogicalize__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM729) RogueCmdLogicalize__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM730) RogueCmdLogicalize__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM731) Rogue_CmdLogicalize__type,
  (void*) (ROGUEM513) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM732) RogueCmdLogicalize__init_object,
  0,
  (void*) (ROGUEM727) RogueCmdLogicalize__prefix_symbol,
  (void*) (ROGUEM727) RogueCmdLogicalize__fn_name,
  (void*) (ROGUEM730) RogueCmdLogicalize__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM727) RogueCmdLogicalize__suffix_symbol,
  (void*) (ROGUEM727) RogueCmdLogicalize__cpp_prefix_symbol,
  (void*) (ROGUEM727) RogueCmdLogicalize__cpp_suffix_symbol,
  (void*) (ROGUEM0) RogueObject__init, // MacroArgs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM733) RogueMacroArgs__type_name,
  (void*) (ROGUEM241) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM734) RogueMacroArgs__init_object,
  (void*) (ROGUEM735) RogueFnParam_List__init, // FnParam[]
  0,
  0,
  0,
  (void*) (ROGUEM736) RogueFnParam_List__to_String,
  0,
  (void*) (ROGUEM736) RogueFnParam_List__type_name,
  (void*) (ROGUEM735) RogueFnParam_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // FnParam
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM737) RogueFnParam__type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateFunction
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM738) RogueCmdCreateFunction__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM739) RogueCmdCreateFunction__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM740) RogueCmdCreateFunction__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM741) RogueCmdCreateFunction__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM742) RogueCmdCreateFunction__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM743) Rogue_CmdCreateFunction__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM744) RogueCmdCreateFunction__init_object,
  (void*) (ROGUEM745) RogueFnArg_List__init, // FnArg[]
  0,
  0,
  0,
  (void*) (ROGUEM746) RogueFnArg_List__to_String,
  0,
  (void*) (ROGUEM746) RogueFnArg_List__type_name,
  (void*) (ROGUEM745) RogueFnArg_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // FnArg
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM747) RogueFnArg__type_name,
  (void*) (ROGUEM0) RogueObject__init, // TraceUsedCodeVisitor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM748) RogueTraceUsedCodeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM749) RogueTraceUsedCodeVisitor__on_enter__Type,
  (void*) (ROGUEM750) RogueTraceUsedCodeVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM751) RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM250) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM752) RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM753) RogueTraceUsedCodeVisitor__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseAnd
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM754) RogueCmdBitwiseAnd__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM755) RogueCmdBitwiseAnd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM756) RogueCmdBitwiseAnd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM757) RogueCmdBitwiseAnd__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM758) RogueCmdBitwiseAnd__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM754) RogueCmdBitwiseAnd__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseOp
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM761) RogueCmdBitwiseOp__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM762) RogueCmdBitwiseOp__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM763) RogueCmdBitwiseOp__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM515) RogueCmdBinary__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdPower
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM764) RogueCmdPower__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM765) RogueCmdPower__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM766) RogueCmdPower__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM767) RogueCmdPower__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM768) RogueCmdPower__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM769) RogueCmdPower__init_object,
  0,
  (void*) (ROGUEM764) RogueCmdPower__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM764) RogueCmdPower__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdSubtract
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM770) RogueCmdSubtract__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM771) RogueCmdSubtract__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM772) RogueCmdSubtract__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM773) RogueCmdSubtract__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM774) RogueCmdSubtract__init_object,
  0,
  (void*) (ROGUEM770) RogueCmdSubtract__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM770) RogueCmdSubtract__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdMod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM775) RogueCmdMod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM776) RogueCmdMod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM777) RogueCmdMod__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM778) RogueCmdMod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM779) RogueCmdMod__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM780) RogueCmdMod__init_object,
  0,
  (void*) (ROGUEM775) RogueCmdMod__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM775) RogueCmdMod__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdAdd
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM781) RogueCmdAdd__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM782) RogueCmdAdd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM783) RogueCmdAdd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM784) RogueCmdAdd__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM785) RogueCmdAdd__init_object,
  0,
  (void*) (ROGUEM781) RogueCmdAdd__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM786) RogueCmdAdd__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM781) RogueCmdAdd__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdDivide
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM787) RogueCmdDivide__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM788) RogueCmdDivide__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM789) RogueCmdDivide__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM790) RogueCmdDivide__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM791) RogueCmdDivide__init_object,
  0,
  (void*) (ROGUEM787) RogueCmdDivide__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM787) RogueCmdDivide__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseXor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM792) RogueCmdBitwiseXor__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM793) RogueCmdBitwiseXor__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM794) RogueCmdBitwiseXor__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM795) RogueCmdBitwiseXor__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM796) RogueCmdBitwiseXor__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM792) RogueCmdBitwiseXor__symbol,
  (void*) (ROGUEM792) RogueCmdBitwiseXor__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdMultiply
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM797) RogueCmdMultiply__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM798) RogueCmdMultiply__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM799) RogueCmdMultiply__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM800) RogueCmdMultiply__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM801) RogueCmdMultiply__init_object,
  0,
  (void*) (ROGUEM797) RogueCmdMultiply__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM797) RogueCmdMultiply__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseOr
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM802) RogueCmdBitwiseOr__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM803) RogueCmdBitwiseOr__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM804) RogueCmdBitwiseOr__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM805) RogueCmdBitwiseOr__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM806) RogueCmdBitwiseOr__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM802) RogueCmdBitwiseOr__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // Function(CmdNamedArg)->Logical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM807) RogueFunction_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM808) RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg,
  (void*) (ROGUEM809) RogueFunction_CmdNamedArg_RETURNSLogical__init_object,
  (void*) (ROGUEM0) RogueObject__init, // ListRebuilder<<CmdNamedArg>>
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM810) RogueListRebuilder_CmdNamedArg___type_name,
  (void*) (ROGUEM0) RogueObject__init, // Function(CmdNamedArg,CmdNamedArg)->Logical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM811) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM812) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM813) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Quicksort<<CmdNamedArg>>
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM814) RogueQuicksort_CmdNamedArg___type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallInlineNativeRoutine
  0,
  0,
  0,
  (void*) (ROGUEM815) RogueCmdCallInlineNative__to_String,
  0,
  (void*) (ROGUEM816) RogueCmdCallInlineNativeRoutine__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM817) RogueCmdCallInlineNativeRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM818) RogueCmdCallInlineNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM819) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM820) Rogue_CmdCallInlineNativeRoutine__type,
  (void*) (ROGUEM821) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM822) RogueCmdCallInlineNativeRoutine__init_object,
  0,
  (void*) (ROGUEM823) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallInlineNative
  0,
  0,
  0,
  (void*) (ROGUEM815) RogueCmdCallInlineNative__to_String,
  0,
  (void*) (ROGUEM815) RogueCmdCallInlineNative__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM824) RogueCmdCallInlineNative__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM819) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM821) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM825) RogueCmdCallInlineNative__init_object,
  0,
  (void*) (ROGUEM823) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallNativeRoutine
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM826) RogueCmdCallNativeRoutine__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM827) RogueCmdCallNativeRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM828) RogueCmdCallNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM829) RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM830) RogueCmdCallNativeRoutine__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallRoutine
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM831) RogueCmdCallRoutine__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM832) RogueCmdCallRoutine__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM833) RogueCmdCallRoutine__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM834) RogueCmdCallRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM835) RogueCmdCallRoutine__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallInlineNativeMethod
  0,
  0,
  0,
  (void*) (ROGUEM815) RogueCmdCallInlineNative__to_String,
  0,
  (void*) (ROGUEM836) RogueCmdCallInlineNativeMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM837) RogueCmdCallInlineNativeMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM838) RogueCmdCallInlineNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM819) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM839) Rogue_CmdCallInlineNativeMethod__type,
  (void*) (ROGUEM821) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM840) RogueCmdCallInlineNativeMethod__init_object,
  0,
  (void*) (ROGUEM841) RogueCmdCallInlineNativeMethod__print_this__CPPWriter,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallNativeMethod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM842) RogueCmdCallNativeMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM843) RogueCmdCallNativeMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM844) RogueCmdCallNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM845) RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM846) RogueCmdCallNativeMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallAspectMethod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM847) RogueCmdCallAspectMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM848) RogueCmdCallAspectMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM849) RogueCmdCallAspectMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM487) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM850) RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM851) RogueCmdCallAspectMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CandidateMethods
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM852) RogueCandidateMethods__type_name,
  (void*) (ROGUEM0) RogueObject__init, // Function_1409
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM853) RogueFunction_1409__type_name,
  (void*) (ROGUEM854) RogueFunction_1409__call__CmdNamedArg,
  (void*) (ROGUEM855) RogueFunction_1409__init_object,
  (void*) (ROGUEM0) RogueObject__init, // Function_1410
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM856) RogueFunction_1410__type_name,
  (void*) (ROGUEM857) RogueFunction_1410__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM858) RogueFunction_1410__init_object,
  (void*) (ROGUEM859) RogueTableEntry_String_Method__List__init, // TableEntry<<String,Method>>[]
  0,
  0,
  0,
  (void*) (ROGUEM860) RogueTableEntry_String_Method__List__to_String,
  0,
  (void*) (ROGUEM860) RogueTableEntry_String_Method__List__type_name,
  (void*) (ROGUEM859) RogueTableEntry_String_Method__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Method>>
  0,
  0,
  0,
  (void*) (ROGUEM861) RogueTableEntry_String_Method___to_String,
  0,
  (void*) (ROGUEM861) RogueTableEntry_String_Method___type_name,
  (void*) (ROGUEM862) RogueTableEntry_String_TypeInfo__List__init, // TableEntry<<String,TypeInfo>>[]
  0,
  0,
  0,
  (void*) (ROGUEM863) RogueTableEntry_String_TypeInfo__List__to_String,
  0,
  (void*) (ROGUEM863) RogueTableEntry_String_TypeInfo__List__type_name,
  (void*) (ROGUEM862) RogueTableEntry_String_TypeInfo__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,TypeInfo>>
  0,
  0,
  0,
  (void*) (ROGUEM864) RogueTableEntry_String_TypeInfo___to_String,
  0,
  (void*) (ROGUEM864) RogueTableEntry_String_TypeInfo___type_name,
  (void*) (ROGUEM865) RogueTableEntry_String_Logical__List__init, // TableEntry<<String,Logical>>[]
  0,
  0,
  0,
  (void*) (ROGUEM866) RogueTableEntry_String_Logical__List__to_String,
  0,
  (void*) (ROGUEM866) RogueTableEntry_String_Logical__List__type_name,
  (void*) (ROGUEM865) RogueTableEntry_String_Logical__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Logical>>
  0,
  0,
  0,
  (void*) (ROGUEM867) RogueTableEntry_String_Logical___to_String,
  0,
  (void*) (ROGUEM867) RogueTableEntry_String_Logical___type_name,
  (void*) (ROGUEM0) RogueObject__init, // TokenReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM868) RogueTokenReader__type_name,
  (void*) (ROGUEM0) RogueObject__init, // Tokenizer
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM869) RogueTokenizer__type_name,
  (void*) (ROGUEM0) RogueObject__init, // ParseReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM870) RogueParseReader__type_name,
  (void*) (ROGUEM871) RogueParseReader__has_another,
  (void*) (ROGUEM872) RogueParseReader__peek,
  (void*) (ROGUEM872) RogueParseReader__read,
  (void*) (ROGUEM0) RogueObject__init, // Preprocessor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM873) RoguePreprocessor__type_name,
  (void*) (ROGUEM0) RogueObject__init, // EOLToken
  0,
  0,
  0,
  (void*) (ROGUEM874) RogueEOLToken__to_String,
  0,
  (void*) (ROGUEM874) RogueEOLToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM68) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM70) RogueToken__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM72) RogueToken__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM875) RogueEOLToken__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNativeHeader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM876) RogueCmdNativeHeader__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM877) RogueCmdNativeHeader__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM878) RogueCmdNativeHeader__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM879) RogueCmdNativeHeader__requires_semicolon,
  (void*) (ROGUEM880) RogueCmdNativeHeader__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM881) RogueCmdNativeHeader__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdNativeCode
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM882) RogueCmdNativeCode__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM883) RogueCmdNativeCode__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM884) RogueCmdNativeCode__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM885) RogueCmdNativeCode__requires_semicolon,
  (void*) (ROGUEM886) RogueCmdNativeCode__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM887) RogueCmdNativeCode__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAwait
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM888) RogueCmdAwait__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM889) RogueCmdAwait__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM890) RogueCmdAwait__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM891) RogueCmdAwait__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM892) RogueCmdAwait__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdYield
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM893) RogueCmdYield__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM894) RogueCmdYield__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM895) RogueCmdYield__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM896) RogueCmdYield__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM897) RogueCmdYield__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAdjust
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM898) RogueCmdAdjust__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM899) RogueCmdAdjust__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM900) RogueCmdAdjust__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM901) RogueCmdAdjust__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdModifyAndAssign
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM902) RogueCmdModifyAndAssign__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM903) RogueCmdModifyAndAssign__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM904) RogueCmdModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM905) RogueCmdModifyAndAssign__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM906) RogueCmdModifyAndAssign__init_object,
  (void*) (ROGUEM907) RogueCmdWhichCase_List__init, // CmdWhichCase[]
  0,
  0,
  0,
  (void*) (ROGUEM908) RogueCmdWhichCase_List__to_String,
  0,
  (void*) (ROGUEM908) RogueCmdWhichCase_List__type_name,
  (void*) (ROGUEM907) RogueCmdWhichCase_List__init_object,
  (void*) (ROGUEM909) RogueCmdCatch_List__init, // CmdCatch[]
  0,
  0,
  0,
  (void*) (ROGUEM910) RogueCmdCatch_List__to_String,
  0,
  (void*) (ROGUEM910) RogueCmdCatch_List__type_name,
  (void*) (ROGUEM909) RogueCmdCatch_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareLE
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM911) RogueCmdCompareLE__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM912) RogueCmdCompareLE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM913) RogueCmdCompareLE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM914) RogueCmdCompareLE__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM915) RogueCmdCompareLE__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM911) RogueCmdCompareLE__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM916) RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdRangeUpTo
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM917) RogueCmdRangeUpTo__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM918) RogueCmdRangeUpTo__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM919) RogueCmdRangeUpTo__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM506) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM920) RogueCmdRangeUpTo__init_object,
  0,
  (void*) (ROGUEM508) RogueCmdRange__default_step_size,
  (void*) (ROGUEM0) RogueObject__init, // CmdRangeUpToLessThan
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM921) RogueCmdRangeUpToLessThan__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM922) RogueCmdRangeUpToLessThan__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM923) RogueCmdRangeUpToLessThan__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM506) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM924) RogueCmdRangeUpToLessThan__init_object,
  0,
  (void*) (ROGUEM508) RogueCmdRange__default_step_size,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareLT
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM925) RogueCmdCompareLT__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM926) RogueCmdCompareLT__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM927) RogueCmdCompareLT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM928) RogueCmdCompareLT__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM929) RogueCmdCompareLT__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM925) RogueCmdCompareLT__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM930) RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareGE
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM931) RogueCmdCompareGE__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM932) RogueCmdCompareGE__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM933) RogueCmdCompareGE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM934) RogueCmdCompareGE__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM935) RogueCmdCompareGE__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM931) RogueCmdCompareGE__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM936) RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdRangeDownTo
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM937) RogueCmdRangeDownTo__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM938) RogueCmdRangeDownTo__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM939) RogueCmdRangeDownTo__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM506) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM940) RogueCmdRangeDownTo__init_object,
  0,
  (void*) (ROGUEM941) RogueCmdRangeDownTo__default_step_size,
  (void*) (ROGUEM0) RogueObject__init, // CmdLogicalXor
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM942) RogueCmdLogicalXor__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM943) RogueCmdLogicalXor__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM944) RogueCmdLogicalXor__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM945) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM946) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM947) RogueCmdLogicalXor__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM948) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM942) RogueCmdLogicalXor__symbol,
  (void*) (ROGUEM942) RogueCmdLogicalXor__cpp_symbol,
  (void*) (ROGUEM949) RogueCmdLogicalXor__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdBinaryLogical
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM950) RogueCmdBinaryLogical__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM99) RogueCmd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM951) RogueCmdBinaryLogical__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM945) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM946) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM952) RogueCmdBinaryLogical__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM948) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM515) RogueCmdBinary__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM953) RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdLogicalOr
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM954) RogueCmdLogicalOr__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM955) RogueCmdLogicalOr__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM956) RogueCmdLogicalOr__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM945) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM946) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM957) RogueCmdLogicalOr__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM948) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM954) RogueCmdLogicalOr__symbol,
  (void*) (ROGUEM954) RogueCmdLogicalOr__cpp_symbol,
  (void*) (ROGUEM958) RogueCmdLogicalOr__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdLogicalAnd
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM959) RogueCmdLogicalAnd__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM960) RogueCmdLogicalAnd__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM961) RogueCmdLogicalAnd__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM945) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM946) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM962) RogueCmdLogicalAnd__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM948) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM959) RogueCmdLogicalAnd__symbol,
  (void*) (ROGUEM959) RogueCmdLogicalAnd__cpp_symbol,
  (void*) (ROGUEM963) RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareEQ
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM964) RogueCmdCompareEQ__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM965) RogueCmdCompareEQ__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM966) RogueCmdCompareEQ__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM967) RogueCmdCompareEQ__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM968) RogueCmdCompareEQ__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM969) RogueCmdCompareEQ__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM964) RogueCmdCompareEQ__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM970) RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareIs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM971) RogueCmdCompareIs__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM972) RogueCmdCompareIs__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM973) RogueCmdCompareIs__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM974) RogueCmdCompareIs__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM975) RogueCmdCompareIs__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM976) RogueCmdCompareIs__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM971) RogueCmdCompareIs__symbol,
  (void*) (ROGUEM971) RogueCmdCompareIs__cpp_symbol,
  (void*) (ROGUEM676) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareIsNot
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM977) RogueCmdCompareIsNot__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM978) RogueCmdCompareIsNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM979) RogueCmdCompareIsNot__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM980) RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM981) RogueCmdCompareIsNot__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM982) RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM977) RogueCmdCompareIsNot__symbol,
  (void*) (ROGUEM977) RogueCmdCompareIsNot__cpp_symbol,
  (void*) (ROGUEM676) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdCompareGT
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM983) RogueCmdCompareGT__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM984) RogueCmdCompareGT__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM985) RogueCmdCompareGT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM986) RogueCmdCompareGT__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM668) Rogue_CmdComparison__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM987) RogueCmdCompareGT__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM670) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM671) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM523) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM983) RogueCmdCompareGT__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM988) RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM0) RogueObject__init, // CmdInstanceOf
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM989) RogueCmdInstanceOf__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM990) RogueCmdInstanceOf__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM991) RogueCmdInstanceOf__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM992) RogueCmdInstanceOf__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM993) Rogue_CmdInstanceOf__type,
  (void*) (ROGUEM994) RogueCmdInstanceOf__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM995) RogueCmdInstanceOf__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLogicalNot
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM996) RogueCmdLogicalNot__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM997) RogueCmdLogicalNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM998) RogueCmdLogicalNot__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM999) RogueCmdLogicalNot__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1000) Rogue_CmdLogicalNot__type,
  (void*) (ROGUEM513) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1001) RogueCmdLogicalNot__init_object,
  0,
  (void*) (ROGUEM996) RogueCmdLogicalNot__prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__fn_name,
  (void*) (ROGUEM999) RogueCmdLogicalNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM509) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM996) RogueCmdLogicalNot__cpp_prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseShiftLeft
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1002) RogueCmdBitwiseShiftLeft__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1003) RogueCmdBitwiseShiftLeft__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM1004) RogueCmdBitwiseShiftLeft__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1005) RogueCmdBitwiseShiftLeft__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1006) RogueCmdBitwiseShiftLeft__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM1002) RogueCmdBitwiseShiftLeft__symbol,
  (void*) (ROGUEM1002) RogueCmdBitwiseShiftLeft__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseShiftRight
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1007) RogueCmdBitwiseShiftRight__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1008) RogueCmdBitwiseShiftRight__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM1009) RogueCmdBitwiseShiftRight__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1010) RogueCmdBitwiseShiftRight__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1011) RogueCmdBitwiseShiftRight__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1012) RogueCmdBitwiseShiftRight__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM1007) RogueCmdBitwiseShiftRight__symbol,
  (void*) (ROGUEM515) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseShiftRightX
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1013) RogueCmdBitwiseShiftRightX__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1014) RogueCmdBitwiseShiftRightX__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM1015) RogueCmdBitwiseShiftRightX__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1016) RogueCmdBitwiseShiftRightX__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM517) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM518) Rogue_CmdBinary__type,
  (void*) (ROGUEM519) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1017) RogueCmdBitwiseShiftRightX__init_object,
  0,
  (void*) (ROGUEM515) RogueCmdBinary__fn_name,
  (void*) (ROGUEM521) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM522) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM759) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM760) RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM1013) RogueCmdBitwiseShiftRightX__symbol,
  (void*) (ROGUEM1013) RogueCmdBitwiseShiftRightX__cpp_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdNegate
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1018) RogueCmdNegate__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1019) RogueCmdNegate__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1020) RogueCmdNegate__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1021) RogueCmdNegate__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM511) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM512) Rogue_CmdUnary__type,
  (void*) (ROGUEM513) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1022) RogueCmdNegate__init_object,
  0,
  (void*) (ROGUEM1018) RogueCmdNegate__prefix_symbol,
  (void*) (ROGUEM1018) RogueCmdNegate__fn_name,
  (void*) (ROGUEM1023) RogueCmdNegate__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM1018) RogueCmdNegate__suffix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdBitwiseNot
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1024) RogueCmdBitwiseNot__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1025) RogueCmdBitwiseNot__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1026) RogueCmdBitwiseNot__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM511) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1027) Rogue_CmdBitwiseNot__type,
  (void*) (ROGUEM513) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1028) RogueCmdBitwiseNot__init_object,
  0,
  (void*) (ROGUEM1024) RogueCmdBitwiseNot__prefix_symbol,
  (void*) (ROGUEM1024) RogueCmdBitwiseNot__fn_name,
  (void*) (ROGUEM1029) RogueCmdBitwiseNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM509) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM1024) RogueCmdBitwiseNot__cpp_prefix_symbol,
  (void*) (ROGUEM509) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM0) RogueObject__init, // CmdListConvert
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1030) RogueCmdListConvert__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1031) RogueCmdListConvert__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1032) RogueCmdListConvert__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1033) RogueCmdListConvert__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1034) RogueCmdListConvert__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1035) Rogue_CmdListConvert__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1036) RogueCmdListConvert__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdConvertToType
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1037) RogueCmdConvertToType__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1038) RogueCmdConvertToType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1039) RogueCmdConvertToType__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1040) RogueCmdConvertToType__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM600) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1041) RogueCmdConvertToType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateCallback
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1042) RogueCmdCreateCallback__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1043) RogueCmdCreateCallback__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1044) RogueCmdCreateCallback__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1045) RogueCmdCreateCallback__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1046) RogueCmdCreateCallback__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdAs
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1047) RogueCmdAs__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1048) RogueCmdAs__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1049) RogueCmdAs__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1050) RogueCmdAs__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM600) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM1051) RogueCmdAs__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1052) RogueCmdAs__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdDefaultValue
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1053) RogueCmdDefaultValue__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1054) RogueCmdDefaultValue__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1055) RogueCmdDefaultValue__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1056) RogueCmdDefaultValue__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1057) Rogue_CmdDefaultValue__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1058) RogueCmdDefaultValue__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralReal64
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1059) RogueCmdLiteralReal64__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1060) RogueCmdLiteralReal64__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1061) RogueCmdLiteralReal64__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1062) RogueCmdLiteralReal64__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1063) Rogue_CmdLiteralReal64__type,
  (void*) (ROGUEM1064) RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1065) RogueCmdLiteralReal64__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralInt64
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1066) RogueCmdLiteralInt64__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM1067) RogueCmdLiteralInt64__cast_to__Type_Scope,
  (void*) (ROGUEM1068) RogueCmdLiteralInt64__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1069) RogueCmdLiteralInt64__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1070) RogueCmdLiteralInt64__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1071) Rogue_CmdLiteralInt64__type,
  (void*) (ROGUEM1072) RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1073) RogueCmdLiteralInt64__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdLiteralCharacter
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1074) RogueCmdLiteralCharacter__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1075) RogueCmdLiteralCharacter__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1076) RogueCmdLiteralCharacter__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM395) RogueCmdLiteral__implicit_type__Scope,
  (void*) (ROGUEM396) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1077) RogueCmdLiteralCharacter__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1078) Rogue_CmdLiteralCharacter__type,
  (void*) (ROGUEM1079) RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1080) RogueCmdLiteralCharacter__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCreateList
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1081) RogueCmdCreateList__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1082) RogueCmdCreateList__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1083) RogueCmdCreateList__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1084) RogueCmdCreateList__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1085) RogueCmdCreateList__init_object,
  (void*) (ROGUEM1086) RogueCmdSelectCase_List__init, // CmdSelectCase[]
  0,
  0,
  0,
  (void*) (ROGUEM1087) RogueCmdSelectCase_List__to_String,
  0,
  (void*) (ROGUEM1087) RogueCmdSelectCase_List__type_name,
  (void*) (ROGUEM1086) RogueCmdSelectCase_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdTypedLiteralList
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1088) RogueCmdTypedLiteralList__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1089) RogueCmdTypedLiteralList__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1090) RogueCmdTypedLiteralList__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1091) RogueCmdTypedLiteralList__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1092) RogueCmdTypedLiteralList__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM1093) Rogue_CmdTypedLiteralList__type,
  (void*) (ROGUEM104) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1094) RogueCmdTypedLiteralList__init_object,
  (void*) (ROGUEM1095) RogueTableEntry_String_ParseReader__List__init, // TableEntry<<String,ParseReader>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1096) RogueTableEntry_String_ParseReader__List__to_String,
  0,
  (void*) (ROGUEM1096) RogueTableEntry_String_ParseReader__List__type_name,
  (void*) (ROGUEM1095) RogueTableEntry_String_ParseReader__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,ParseReader>>
  0,
  0,
  0,
  (void*) (ROGUEM1097) RogueTableEntry_String_ParseReader___to_String,
  0,
  (void*) (ROGUEM1097) RogueTableEntry_String_ParseReader___type_name,
  (void*) (ROGUEM0) RogueObject__init, // IOError
  0,
  0,
  0,
  (void*) (ROGUEM1) RogueException__to_String,
  0,
  (void*) (ROGUEM1098) RogueIOError__type_name,
  (void*) (ROGUEM2) RogueException__init__String,
  (void*) (ROGUEM1099) RogueIOError__init_object,
  (void*) (ROGUEM0) RogueObject__init, // FileReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1100) RogueFileReader__type_name,
  (void*) (ROGUEM1101) RogueFileReader__has_another,
  (void*) (ROGUEM1102) RogueFileReader__peek,
  (void*) (ROGUEM1102) RogueFileReader__read,
  (void*) (ROGUEM0) RogueObject__init, // FileWriter
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1103) RogueFileWriter__type_name,
  (void*) (ROGUEM1104) RogueFileWriter__close,
  (void*) (ROGUEM1104) RogueFileWriter__flush,
  (void*) (ROGUEM1105) RogueFileWriter__write__Byte,
  (void*) (ROGUEM0) RogueObject__init, // UTF8Reader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1106) RogueUTF8Reader__type_name,
  (void*) (ROGUEM1107) RogueUTF8Reader__has_another,
  (void*) (ROGUEM1108) RogueUTF8Reader__peek,
  (void*) (ROGUEM1108) RogueUTF8Reader__read,
  (void*) (ROGUEM1109) RogueTableEntry_String_TokenType__List__init, // TableEntry<<String,TokenType>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1110) RogueTableEntry_String_TokenType__List__to_String,
  0,
  (void*) (ROGUEM1110) RogueTableEntry_String_TokenType__List__type_name,
  (void*) (ROGUEM1109) RogueTableEntry_String_TokenType__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,TokenType>>
  0,
  0,
  0,
  (void*) (ROGUEM1111) RogueTableEntry_String_TokenType___to_String,
  0,
  (void*) (ROGUEM1111) RogueTableEntry_String_TokenType___type_name,
  (void*) (ROGUEM1112) RogueTableEntry_String_TypeSpecializer__List__init, // TableEntry<<String,TypeSpecializer>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1113) RogueTableEntry_String_TypeSpecializer__List__to_String,
  0,
  (void*) (ROGUEM1113) RogueTableEntry_String_TypeSpecializer__List__type_name,
  (void*) (ROGUEM1112) RogueTableEntry_String_TypeSpecializer__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,TypeSpecializer>>
  0,
  0,
  0,
  (void*) (ROGUEM1114) RogueTableEntry_String_TypeSpecializer___to_String,
  0,
  (void*) (ROGUEM1114) RogueTableEntry_String_TypeSpecializer___type_name,
  (void*) (ROGUEM1115) RogueTableEntry_String_CmdLabel__List__init, // TableEntry<<String,CmdLabel>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1116) RogueTableEntry_String_CmdLabel__List__to_String,
  0,
  (void*) (ROGUEM1116) RogueTableEntry_String_CmdLabel__List__type_name,
  (void*) (ROGUEM1115) RogueTableEntry_String_CmdLabel__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,CmdLabel>>
  0,
  0,
  0,
  (void*) (ROGUEM1117) RogueTableEntry_String_CmdLabel___to_String,
  0,
  (void*) (ROGUEM1117) RogueTableEntry_String_CmdLabel___type_name,
  (void*) (ROGUEM1118) RogueToken_List_List__init, // Token[][]
  0,
  0,
  0,
  (void*) (ROGUEM1119) RogueToken_List_List__to_String,
  0,
  (void*) (ROGUEM1119) RogueToken_List_List__type_name,
  (void*) (ROGUEM1118) RogueToken_List_List__init_object,
  (void*) (ROGUEM1120) RogueTable_String_Token_List___init, // Table<<String,Token[]>>
  0,
  0,
  0,
  (void*) (ROGUEM1121) RogueTable_String_Token_List___to_String,
  0,
  (void*) (ROGUEM1121) RogueTable_String_Token_List___type_name,
  (void*) (ROGUEM1122) RogueCmdTaskControlSection_List__init, // CmdTaskControlSection[]
  0,
  0,
  0,
  (void*) (ROGUEM1123) RogueCmdTaskControlSection_List__to_String,
  0,
  (void*) (ROGUEM1123) RogueCmdTaskControlSection_List__type_name,
  (void*) (ROGUEM1122) RogueCmdTaskControlSection_List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // RequirementError
  0,
  0,
  0,
  (void*) (ROGUEM1) RogueException__to_String,
  0,
  (void*) (ROGUEM1124) RogueRequirementError__type_name,
  (void*) (ROGUEM1125) RogueRequirementError__init__String,
  (void*) (ROGUEM1126) RogueRequirementError__init_object,
  (void*) (ROGUEM0) RogueObject__init, // CmdCallStaticMethod
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1127) RogueCmdCallStaticMethod__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM491) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1128) RogueCmdCallStaticMethod__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1129) RogueCmdCallStaticMethod__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1130) RogueCmdCallStaticMethod__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM488) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM486) Rogue_CmdCall__type,
  (void*) (ROGUEM1131) RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1132) RogueCmdCallStaticMethod__init_object,
  (void*) (ROGUEM0) RogueObject__init, // ListReader<<CmdSelectCase>>
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1133) RogueListReader_CmdSelectCase___type_name,
  (void*) (ROGUEM1134) RogueListReader_CmdSelectCase___has_another,
  (void*) (ROGUEM1135) RogueListReader_CmdSelectCase___read,
  0, // Reader<<CmdSelectCase>>
  (void*) (ROGUEM1136) RogueTableEntry_String_Definition__List__init, // TableEntry<<String,Definition>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1137) RogueTableEntry_String_Definition__List__to_String,
  0,
  (void*) (ROGUEM1137) RogueTableEntry_String_Definition__List__type_name,
  (void*) (ROGUEM1136) RogueTableEntry_String_Definition__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Definition>>
  0,
  0,
  0,
  (void*) (ROGUEM1138) RogueTableEntry_String_Definition___to_String,
  0,
  (void*) (ROGUEM1138) RogueTableEntry_String_Definition___type_name,
  (void*) (ROGUEM1139) RogueTableEntry_String_Property__List__init, // TableEntry<<String,Property>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1140) RogueTableEntry_String_Property__List__to_String,
  0,
  (void*) (ROGUEM1140) RogueTableEntry_String_Property__List__type_name,
  (void*) (ROGUEM1139) RogueTableEntry_String_Property__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Property>>
  0,
  0,
  0,
  (void*) (ROGUEM1141) RogueTableEntry_String_Property___to_String,
  0,
  (void*) (ROGUEM1141) RogueTableEntry_String_Property___type_name,
  (void*) (ROGUEM1142) RogueMethodTemplate_List__init, // MethodTemplate[]
  0,
  0,
  0,
  (void*) (ROGUEM1143) RogueMethodTemplate_List__to_String,
  0,
  (void*) (ROGUEM1143) RogueMethodTemplate_List__type_name,
  (void*) (ROGUEM1142) RogueMethodTemplate_List__init_object,
  (void*) (ROGUEM1144) RogueTable_String_Cmd___init, // Table<<String,Cmd>>
  0,
  0,
  0,
  (void*) (ROGUEM1145) RogueTable_String_Cmd___to_String,
  0,
  (void*) (ROGUEM1145) RogueTable_String_Cmd___type_name,
  (void*) (ROGUEM0) RogueObject__init, // DirectiveTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1146) RogueDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1147) RogueDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1148) RogueDirectiveTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM142) RogueTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1149) RogueDirectiveTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // StructuralDirectiveTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1150) RogueStructuralDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1151) RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1152) RogueStructuralDirectiveTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1152) RogueStructuralDirectiveTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1153) RogueStructuralDirectiveTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // EOLTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1154) RogueEOLTokenType__type_name,
  0,
  (void*) (ROGUEM1155) RogueEOLTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1156) RogueEOLTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM142) RogueTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1157) RogueEOLTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1158) RogueEOLTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // StructureTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1159) RogueStructureTokenType__type_name,
  0,
  (void*) (ROGUEM1160) RogueStructureTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM142) RogueTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1161) RogueStructureTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1162) RogueStructureTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // NativeCodeTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1163) RogueNativeCodeTokenType__type_name,
  0,
  (void*) (ROGUEM139) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1164) RogueNativeCodeTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM1165) RogueNativeCodeTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM142) RogueTokenType__is_directive,
  (void*) (ROGUEM142) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM142) RogueTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1166) RogueNativeCodeTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // ModifyAndAssignTokenType
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueTokenType__to_String,
  0,
  (void*) (ROGUEM1167) RogueModifyAndAssignTokenType__type_name,
  0,
  (void*) (ROGUEM139) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM141) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM142) RogueTokenType__is_directive,
  (void*) (ROGUEM1168) RogueModifyAndAssignTokenType__is_op_with_assign,
  (void*) (ROGUEM142) RogueTokenType__is_structure,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1169) RogueModifyAndAssignTokenType__init_object,
  (void*) (ROGUEM0) RogueObject__init, // PreprocessorTokenReader
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1170) RoguePreprocessorTokenReader__type_name,
  (void*) (ROGUEM0) RogueObject__init, // CmdConvertToPrimitiveType
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  (void*) (ROGUEM1171) RogueCmdConvertToPrimitiveType__type_name,
  (void*) (ROGUEM80) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM81) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM82) RogueCmd__cast_to__Type_Scope,
  (void*) (ROGUEM1172) RogueCmdConvertToPrimitiveType__clone__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM84) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1173) RogueCmdConvertToPrimitiveType__dispatch__Visitor,
  (void*) (ROGUEM86) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM87) RogueCmd__generates_output,
  (void*) (ROGUEM87) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM101) RogueCmd__implicit_type__Scope,
  (void*) (ROGUEM87) RogueCmd__is_literal,
  (void*) (ROGUEM89) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM90) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM87) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1174) RogueCmdConvertToPrimitiveType__resolve__Scope,
  (void*) (ROGUEM102) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM93) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM103) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  0,
  (void*) (ROGUEM600) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM1175) RogueCmdConvertToPrimitiveType__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1176) RogueCmdConvertToPrimitiveType__init_object,
  (void*) (ROGUEM1177) RogueTableEntry_String_Token_List__List__init, // TableEntry<<String,Token[]>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1178) RogueTableEntry_String_Token_List__List__to_String,
  0,
  (void*) (ROGUEM1178) RogueTableEntry_String_Token_List__List__type_name,
  (void*) (ROGUEM1177) RogueTableEntry_String_Token_List__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Token[]>>
  0,
  0,
  0,
  (void*) (ROGUEM1179) RogueTableEntry_String_Token_List___to_String,
  0,
  (void*) (ROGUEM1179) RogueTableEntry_String_Token_List___type_name,
  (void*) (ROGUEM1180) RogueTableEntry_String_Cmd__List__init, // TableEntry<<String,Cmd>>[]
  0,
  0,
  0,
  (void*) (ROGUEM1181) RogueTableEntry_String_Cmd__List__to_String,
  0,
  (void*) (ROGUEM1181) RogueTableEntry_String_Cmd__List__type_name,
  (void*) (ROGUEM1180) RogueTableEntry_String_Cmd__List__init_object,
  (void*) (ROGUEM0) RogueObject__init, // TableEntry<<String,Cmd>>
  0,
  0,
  0,
  (void*) (ROGUEM1182) RogueTableEntry_String_Cmd___to_String,
  0,
  (void*) (ROGUEM1182) RogueTableEntry_String_Cmd___type_name,
  (void*) (ROGUEM0) RogueObject__init, // NativeCodeToken
  0,
  0,
  0,
  (void*) (ROGUEM1183) RogueNativeCodeToken__to_String,
  0,
  (void*) (ROGUEM1183) RogueNativeCodeToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1183) RogueNativeCodeToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM69) RogueToken__to_Character,
  (void*) (ROGUEM70) RogueToken__to_Int32,
  (void*) (ROGUEM71) RogueToken__to_Int64,
  (void*) (ROGUEM72) RogueToken__to_Real64,
  (void*) (ROGUEM73) RogueToken__to_Type,
  0,
  (void*) (ROGUEM1184) RogueNativeCodeToken__init_object,

};

int Rogue_type_info_table[1853] =
{
  // allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...
  0,0,1,1,0,0,0,0,0,0,0,9,1,1,0,0,0,0,0,0,0,0,0,0,
  16,1,1,0,23,1,1,0,70,2,11,1,0,0,0,0,78,1,1,0,86,2,11,1,0,
  0,0,0,0,0,0,94,1,1,0,119,2,11,1,0,0,2,18,1,0,0,1,1,0,127,
  2,1,20,0,136,0,0,137,0,0,138,3,1,23,24,0,153,1,24,0,154,0,0,155,2,
  11,1,0,163,1,1,0,172,2,26,1,0,181,1,1,0,0,2,18,1,0,188,3,1,31,
  24,0,196,1,24,0,197,1,1,0,204,2,11,1,0,212,1,1,0,219,1,1,0,226,1,
  1,0,233,1,1,0,240,2,11,1,0,248,1,1,0,255,1,1,0,262,2,11,1,0,270,
  1,1,0,277,1,1,0,284,1,1,0,291,1,1,0,298,1,1,0,305,1,1,0,312,1,
  1,0,319,2,11,1,0,327,1,1,0,350,2,0,1,0,359,3,51,0,1,0,368,2,54,
  1,0,407,1,1,0,446,3,56,11,1,0,455,2,11,1,0,464,2,11,1,0,472,2,54,
  1,0,511,3,56,11,1,0,520,2,54,1,0,0,2,18,1,0,559,3,63,54,1,0,598,
  2,54,1,0,637,1,1,0,0,2,18,1,0,662,1,1,0,669,2,11,1,0,0,2,18,
  1,0,0,2,18,1,0,677,2,11,1,0,685,1,1,0,0,2,18,1,0,692,1,1,0,
  701,2,73,1,0,710,2,73,1,0,719,1,1,0,726,1,1,0,733,2,11,1,0,741,1,
  1,0,0,2,18,1,0,748,2,11,1,0,0,2,18,1,0,756,1,1,0,0,2,18,1,
  0,763,1,1,0,770,1,1,0,777,0,0,778,0,0,0,2,18,1,0,779,2,11,1,0,
  787,1,1,0,0,2,18,1,0,794,1,1,0,801,2,11,1,0,809,1,1,0,816,1,1,
  0,823,1,1,0,830,1,1,0,0,2,18,1,0,837,2,54,1,0,876,2,1,21,0,885,
  2,103,1,0,894,1,1,0,903,2,11,1,0,911,1,1,0,918,2,11,1,0,926,1,1,
  0,0,2,18,1,0,933,1,1,0,940,2,50,1,0,963,2,50,1,0,986,2,50,1,0,
  1009,2,50,1,0,1032,2,50,1,0,0,2,18,1,0,1055,1,1,0,0,2,18,1,0,1062,
  1,1,0,1069,2,11,1,0,1077,2,11,1,0,1085,1,1,0,0,2,18,1,0,1092,2,11,
  1,0,1100,1,1,0,0,2,18,1,0,1107,2,11,1,0,1115,1,1,0,1122,1,1,0,1129,
  1,1,0,1138,2,129,1,0,1147,1,1,0,1435,2,54,1,0,1474,2,54,1,0,1513,2,54,
  1,0,1552,3,63,54,1,0,1591,4,137,63,54,1,0,1632,3,63,54,1,0,1673,4,137,63,
  54,1,0,1714,4,137,63,54,1,0,1755,4,137,63,54,1,0,1796,2,54,1,0,1835,4,137,
  63,54,1,0,1876,4,137,63,54,1,0,1917,2,54,1,0,1956,2,54,1,0,1995,4,137,63,
  54,1,0,2036,2,54,1,0,2075,4,137,63,54,1,0,2116,2,54,1,0,2155,2,54,1,0,
  2194,2,54,1,0,2233,2,54,1,0,2272,2,54,1,0,2311,2,54,1,0,2350,2,54,1,0,
  2389,3,155,54,1,0,2428,2,54,1,0,2467,2,54,1,0,2506,2,54,1,0,2545,2,54,1,
  0,2584,2,54,1,0,2623,2,54,1,0,2662,2,54,1,0,2701,2,54,1,0,2740,2,54,1,
  0,2779,2,54,1,0,2818,2,54,1,0,2857,2,54,1,0,2896,4,170,168,54,1,0,2935,3,
  168,54,1,0,2974,2,54,1,0,3013,2,54,1,0,3054,2,54,1,0,3101,2,54,1,0,3148,
  2,54,1,0,3187,2,54,1,0,3226,2,54,1,0,3265,3,179,54,1,0,3304,2,54,1,0,
  3343,3,179,54,1,0,3382,3,179,54,1,0,3421,2,54,1,0,3460,2,54,1,0,3499,2,54,
  1,0,3538,2,54,1,0,3577,2,54,1,0,3616,2,54,1,0,3655,2,54,1,0,3694,2,54,
  1,0,3733,2,54,1,0,3772,2,54,1,0,3811,2,54,1,0,3850,2,11,1,0,3858,3,159,
  54,1,0,0,2,18,1,0,3897,3,155,54,1,0,3936,4,198,174,54,1,0,3984,3,174,54,
  1,0,4032,2,129,1,0,0,2,18,1,0,4041,1,1,0,4048,2,11,1,0,4056,1,1,0,
  0,2,18,1,0,4063,2,11,1,0,4071,1,1,0,4078,1,1,0,4085,1,1,0,4092,1,1,
  0,4099,3,155,54,1,0,4138,3,155,54,1,0,0,2,18,1,0,4177,2,131,1,0,4465,2,
  11,1,0,4473,1,1,0,0,2,18,1,0,4480,2,11,1,0,0,2,18,1,0,4488,2,11,
  1,0,4496,1,1,0,0,2,18,1,0,4503,2,11,1,0,4511,1,1,0,0,2,18,1,0,
  4518,1,1,0,4525,3,186,54,1,0,4564,3,173,54,1,0,0,2,18,1,0,4611,2,129,1,
  0,4620,2,11,1,0,4628,1,1,0,4635,2,54,1,0,4674,2,11,1,0,4682,1,1,0,4689,
  2,131,1,0,4977,4,237,174,54,1,0,5024,3,174,54,1,0,5071,3,174,54,1,0,5118,3,
  174,54,1,0,5165,3,174,54,1,0,5212,3,174,54,1,0,5259,3,174,54,1,0,5306,4,237,
  174,54,1,0,5353,3,174,54,1,0,5400,4,237,174,54,1,0,5447,1,1,0,5456,1,1,0,
  5463,1,1,0,5472,1,1,0,5479,4,251,168,54,1,0,5520,3,168,54,1,0,5561,3,168,54,
  1,0,5600,3,168,54,1,0,5639,4,251,168,54,1,0,5680,3,168,54,1,0,5719,3,168,54,
  1,0,5758,1,1,0,5765,2,246,1,0,5774,2,248,1,0,0,2,18,1,0,0,2,18,1,
  0,5783,2,11,1,0,5791,1,1,0,0,2,18,1,0,5798,2,11,1,0,5806,1,1,0,0,
  2,18,1,0,5813,2,11,1,0,5821,1,1,0,0,2,18,1,0,5828,1,1,0,5835,1,1,
  0,5842,2,1,20,0,5852,1,1,0,5859,2,50,1,0,5882,2,54,1,0,5921,2,54,1,0,
  5960,2,54,1,0,5999,2,54,1,0,6038,2,54,1,0,6077,2,54,1,0,6116,2,11,1,0,
  6124,2,11,1,0,6132,4,198,174,54,1,0,6180,3,172,54,1,0,6221,3,172,54,1,0,6262,
  4,198,174,54,1,0,6310,4,198,174,54,1,0,6358,3,172,54,1,0,6399,4,291,174,54,1,
  0,6447,3,174,54,1,0,6495,4,291,174,54,1,0,6543,4,291,174,54,1,0,6591,4,198,174,
  54,1,0,6639,4,198,174,54,1,0,6687,4,198,174,54,1,0,6735,4,198,174,54,1,0,6783,
  3,186,54,1,0,6822,3,173,54,1,0,6869,4,237,174,54,1,0,6916,4,237,174,54,1,0,
  6963,4,237,174,54,1,0,7010,3,173,54,1,0,7057,3,173,54,1,0,7104,2,54,1,0,7143,
  3,186,54,1,0,7182,2,54,1,0,7221,3,186,54,1,0,7260,3,155,54,1,0,7299,3,155,
  54,1,0,7338,3,155,54,1,0,7377,3,155,54,1,0,7416,2,54,1,0,7455,2,11,1,0,
  7463,2,54,1,0,7502,2,11,1,0,7510,1,1,0,0,2,18,1,0,7517,3,51,0,1,0,
  7526,2,1,87,0,7536,2,1,88,0,7546,2,1,20,0,7556,2,11,1,0,7564,1,1,0,0,
  2,18,1,0,7571,2,11,1,0,7579,1,1,0,0,2,18,1,0,7586,2,11,1,0,7594,1,
  1,0,0,2,18,1,0,7601,2,11,1,0,7609,1,1,0,0,2,18,1,0,0,2,18,1,
  0,0,2,18,1,0,7616,2,11,1,0,0,2,18,1,0,0,2,18,1,0,7624,3,51,0,
  1,0,0,2,18,1,0,7633,4,170,168,54,1,0,7672,2,1,344,0,7681,0,0,7682,2,11,
  1,0,7690,1,1,0,0,2,18,1,0,7697,2,11,1,0,7705,1,1,0,0,2,18,1,0,
  7712,2,11,1,0,0,2,18,1,0,7720,1,1,0,0,2,18,1,0,7727,2,64,1,0,7752,
  2,64,1,0,7777,2,64,1,0,7802,2,64,1,0,7827,2,64,1,0,7852,2,64,1,0,7877,
  1,1,0,7884,4,306,186,54,1,0,7923,2,11,1,0,7931,1,1,0,0,2,18,1,0,7938,
  2,11,1,0,7946,1,1,0,0,2,18,1,0,7953,2,50,1,0,0,0,0,0,0,0,0,
  0,0,0,0
};

int Rogue_object_size_table[374] =
{
  (int) sizeof(RogueClassException),
  (int) sizeof(RogueObject),
  (int) sizeof(RogueString),
  (int) sizeof(RogueClassStackTrace),
  (int) sizeof(RogueInt32),
  (int) sizeof(RogueInt64),
  (int) sizeof(RogueLogical),
  (int) sizeof(RogueTypeInfo),
  (int) sizeof(RogueStringBuilder),
  (int) sizeof(RogueByte_List),
  (int) sizeof(RogueByte),
  (int) sizeof(RogueClassGenericList),
  (int) sizeof(RogueCharacter_List),
  (int) sizeof(RogueCharacter),
  (int) sizeof(RogueReal64),
  (int) sizeof(RogueClassTable_String_String_),
  (int) sizeof(RogueString_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassStringReader),
  (int) sizeof(RogueClassReader_Character_),
  (int) sizeof(RogueClassReader_String_),
  (int) sizeof(RogueClassGlobal),
  (int) sizeof(RogueClassPrintWriterAspect_Global_global_output_buffer_),
  (int) sizeof(RogueClassPrintWriter),
  (int) sizeof(RogueFunction___List),
  (int) sizeof(RogueClassFunction__),
  (int) sizeof(RogueClassFunction_81),
  (int) sizeof(RogueClassRogueC),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassConsole),
  (int) sizeof(RogueClassPrintWriterAspect_Console_output_buffer_),
  (int) sizeof(RogueClassProgram),
  (int) sizeof(RogueTemplate_List),
  (int) sizeof(RogueClassTemplate),
  (int) sizeof(RogueClassTable_String_Template_),
  (int) sizeof(RogueClassTable_String_Augment_List_),
  (int) sizeof(RogueClassMethod),
  (int) sizeof(RogueProperty_List),
  (int) sizeof(RogueClassProperty),
  (int) sizeof(RogueClassTable_String_Method_List_),
  (int) sizeof(RogueType_List),
  (int) sizeof(RogueClassType),
  (int) sizeof(RogueClassTable_String_Type_),
  (int) sizeof(RogueClassTable_String_Int32_),
  (int) sizeof(RogueClassTable_String_String_List_),
  (int) sizeof(RogueClassTableEntry_String_Int32_),
  (int) sizeof(RogueClassTable_Int32_Template_),
  (int) sizeof(RogueClassAttributes),
  (int) sizeof(RogueToken_List),
  (int) sizeof(RogueClassToken),
  (int) sizeof(RogueClassError),
  (int) sizeof(RogueClassRogueError),
  (int) sizeof(RogueClassCmdAccess),
  (int) sizeof(RogueClassCmd),
  (int) sizeof(RogueClassCmdArgs),
  (int) sizeof(RogueCmd_List),
  (int) sizeof(RogueCmdNamedArg_List),
  (int) sizeof(RogueClassCmdNamedArg),
  (int) sizeof(RogueClassCmdStatementList),
  (int) sizeof(RogueClassCmdLabel),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdReturn),
  (int) sizeof(RogueClassCmdStatement),
  (int) sizeof(RogueClassTokenType),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassScope),
  (int) sizeof(RogueMethod_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RoguePlugin_List),
  (int) sizeof(RogueClassPlugin),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassFunction_Type_RETURNSLogical),
  (int) sizeof(RogueClassFunction_229),
  (int) sizeof(RogueClassFunction_230),
  (int) sizeof(RogueClassCPPWriter),
  (int) sizeof(RogueClassTable_String_Method_),
  (int) sizeof(RogueLocal_List),
  (int) sizeof(RogueClassLocal),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueInt32_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassMath),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassSystem),
  (int) sizeof(RogueClassTable_String_TypeInfo_),
  (int) sizeof(RogueClassReader_Byte_),
  (int) sizeof(RogueClassWriter_Byte_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_String__List),
  (int) sizeof(RogueClassTableEntry_String_String_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Logical_),
  (int) sizeof(RogueParser_List),
  (int) sizeof(RogueClassParser),
  (int) sizeof(RogueClassTable_String_ParseReader_),
  (int) sizeof(RogueClassStopwatch),
  (int) sizeof(RogueClassFile),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdMakeRequisite),
  (int) sizeof(RogueClassLineReader),
  (int) sizeof(RogueClassFunction_545),
  (int) sizeof(RogueClassFunction__RETURNSLogical),
  (int) sizeof(RogueTypeParameter_List),
  (int) sizeof(RogueClassTypeParameter),
  (int) sizeof(RogueAugment_List),
  (int) sizeof(RogueClassAugment),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_TokenType_),
  (int) sizeof(RogueClassLiteralCharacterToken),
  (int) sizeof(RogueClassLiteralInt64Token),
  (int) sizeof(RogueClassLiteralInt32Token),
  (int) sizeof(RogueClassLiteralReal64Token),
  (int) sizeof(RogueClassStringDataToken),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_TypeSpecializer_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTypeSpecializer),
  (int) sizeof(RogueTypeSpecializer_List),
  (int) sizeof(RogueTableEntry_String_Template__List),
  (int) sizeof(RogueClassTableEntry_String_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Augment_List__List),
  (int) sizeof(RogueClassTableEntry_String_Augment_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueCmdLabel_List),
  (int) sizeof(RogueClassTable_String_CmdLabel_),
  (int) sizeof(RogueClassMethodTemplate),
  (int) sizeof(RogueClassCloneArgs),
  (int) sizeof(RogueClassCloneMethodArgs),
  (int) sizeof(RogueClassVisitor),
  (int) sizeof(RogueClassCmdAssert),
  (int) sizeof(RogueClassCmdRequire),
  (int) sizeof(RogueClassCmdAssign),
  (int) sizeof(RogueClassCmdLocalDeclaration),
  (int) sizeof(RogueClassCmdBlock),
  (int) sizeof(RogueClassCmdControlStructure),
  (int) sizeof(RogueClassCmdIf),
  (int) sizeof(RogueClassCmdSwitch),
  (int) sizeof(RogueClassCmdWhich),
  (int) sizeof(RogueClassCmdWhichCase),
  (int) sizeof(RogueClassCmdContingent),
  (int) sizeof(RogueClassCmdGenericLoop),
  (int) sizeof(RogueClassCmdElementAccess),
  (int) sizeof(RogueClassCmdEnsure),
  (int) sizeof(RogueClassCmdForEach),
  (int) sizeof(RogueClassCmdFormattedString),
  (int) sizeof(RogueClassCmdTry),
  (int) sizeof(RogueClassCmdCatch),
  (int) sizeof(RogueClassCmdThrow),
  (int) sizeof(RogueClassCmdEscape),
  (int) sizeof(RogueClassCmdNextIteration),
  (int) sizeof(RogueClassCmdNecessary),
  (int) sizeof(RogueClassCmdSufficient),
  (int) sizeof(RogueClassCmdLiteral),
  (int) sizeof(RogueClassCmdLiteralString),
  (int) sizeof(RogueClassCmdCreateObject),
  (int) sizeof(RogueClassCmdCreateCompound),
  (int) sizeof(RogueClassCmdThisContext),
  (int) sizeof(RogueClassCmdReadSingleton),
  (int) sizeof(RogueClassCmdWriteSingleton),
  (int) sizeof(RogueClassCmdReadLocal),
  (int) sizeof(RogueClassCmdWriteLocal),
  (int) sizeof(RogueClassCmdReadGlobal),
  (int) sizeof(RogueClassCmdWriteGlobal),
  (int) sizeof(RogueClassCmdReadProperty),
  (int) sizeof(RogueClassCmdWriteProperty),
  (int) sizeof(RogueClassCmdCall),
  (int) sizeof(RogueClassCmdCallDynamicMethod),
  (int) sizeof(RogueClassCmdCallMethod),
  (int) sizeof(RogueClassCmdCallPriorMethod),
  (int) sizeof(RogueClassCmdRange),
  (int) sizeof(RogueClassCmdUnary),
  (int) sizeof(RogueClassCmdBinary),
  (int) sizeof(RogueClassCmdAdjustLocal),
  (int) sizeof(RogueClassCmdAdjustProperty),
  (int) sizeof(RogueClassCmdAdjustGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignLocal),
  (int) sizeof(RogueClassCmdResolvedModifyAndAssign),
  (int) sizeof(RogueClassCmdModifyAndAssignGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignProperty),
  (int) sizeof(RogueClassCmdCreateArray),
  (int) sizeof(RogueClassCmdReadArrayElement),
  (int) sizeof(RogueClassCmdReadArrayCount),
  (int) sizeof(RogueClassCmdWriteArrayElement),
  (int) sizeof(RogueClassCmdTypeOperator),
  (int) sizeof(RogueClassCmdTaskControl),
  (int) sizeof(RogueClassCmdTrace),
  (int) sizeof(RogueClassCmdInlineNative),
  (int) sizeof(RogueClassCmdNoAction),
  (int) sizeof(RogueClassCmdSelect),
  (int) sizeof(RogueClassCmdSelectCase),
  (int) sizeof(RogueCmdControlStructure_List),
  (int) sizeof(RogueClassCmdLiteralThis),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdLiteralInt32),
  (int) sizeof(RogueClassCmdCompareNE),
  (int) sizeof(RogueClassCmdComparison),
  (int) sizeof(RogueClassTaskArgs),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdTaskControlSection),
  (int) sizeof(RogueTableEntry_String_Method_List__List),
  (int) sizeof(RogueClassTableEntry_String_Method_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueDefinition_List),
  (int) sizeof(RogueClassDefinition),
  (int) sizeof(RogueClassTable_String_Definition_),
  (int) sizeof(RogueClassTable_String_Property_),
  (int) sizeof(RogueClassMethodTemplates),
  (int) sizeof(RogueClassCmdLiteralNull),
  (int) sizeof(RogueClassCmdLiteralLogical),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassUpdateThisTypeVisitor),
  (int) sizeof(RogueTableEntry_String_Type__List),
  (int) sizeof(RogueClassTableEntry_String_Type_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Int32__List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_String_List__List),
  (int) sizeof(RogueClassTableEntry_String_String_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_Int32_Template__List),
  (int) sizeof(RogueClassTableEntry_Int32_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassListRebuilder_Token_),
  (int) sizeof(RogueClassCmdCastToType),
  (int) sizeof(RogueClassCmdLogicalize),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassMacroArgs),
  (int) sizeof(RogueFnParam_List),
  (int) sizeof(RogueClassFnParam),
  (int) sizeof(RogueClassCmdCreateFunction),
  (int) sizeof(RogueFnArg_List),
  (int) sizeof(RogueClassFnArg),
  (int) sizeof(RogueClassTraceUsedCodeVisitor),
  (int) sizeof(RogueClassCmdBitwiseAnd),
  (int) sizeof(RogueClassCmdBitwiseOp),
  (int) sizeof(RogueClassCmdPower),
  (int) sizeof(RogueClassCmdSubtract),
  (int) sizeof(RogueClassCmdMod),
  (int) sizeof(RogueClassCmdAdd),
  (int) sizeof(RogueClassCmdDivide),
  (int) sizeof(RogueClassCmdBitwiseXor),
  (int) sizeof(RogueClassCmdMultiply),
  (int) sizeof(RogueClassCmdBitwiseOr),
  (int) sizeof(RogueClassFunction_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassListRebuilder_CmdNamedArg_),
  (int) sizeof(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassQuicksort_CmdNamedArg_),
  (int) sizeof(RogueClassCmdCallInlineNativeRoutine),
  (int) sizeof(RogueClassCmdCallInlineNative),
  (int) sizeof(RogueClassCmdCallNativeRoutine),
  (int) sizeof(RogueClassCmdCallRoutine),
  (int) sizeof(RogueClassCmdCallInlineNativeMethod),
  (int) sizeof(RogueClassCmdCallNativeMethod),
  (int) sizeof(RogueClassCmdCallAspectMethod),
  (int) sizeof(RogueClassCandidateMethods),
  (int) sizeof(RogueClassFunction_1409),
  (int) sizeof(RogueClassFunction_1410),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Method__List),
  (int) sizeof(RogueClassTableEntry_String_Method_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_TypeInfo__List),
  (int) sizeof(RogueClassTableEntry_String_TypeInfo_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Logical__List),
  (int) sizeof(RogueClassTableEntry_String_Logical_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTokenReader),
  (int) sizeof(RogueClassTokenizer),
  (int) sizeof(RogueClassParseReader),
  (int) sizeof(RogueClassPreprocessor),
  (int) sizeof(RogueClassEOLToken),
  (int) sizeof(RogueClassCmdNativeHeader),
  (int) sizeof(RogueClassCmdNativeCode),
  (int) sizeof(RogueClassCmdAwait),
  (int) sizeof(RogueClassCmdYield),
  (int) sizeof(RogueClassCmdAdjust),
  (int) sizeof(RogueClassCmdModifyAndAssign),
  (int) sizeof(RogueCmdWhichCase_List),
  (int) sizeof(RogueCmdCatch_List),
  (int) sizeof(RogueClassCmdCompareLE),
  (int) sizeof(RogueClassCmdRangeUpTo),
  (int) sizeof(RogueClassCmdRangeUpToLessThan),
  (int) sizeof(RogueClassCmdCompareLT),
  (int) sizeof(RogueClassCmdCompareGE),
  (int) sizeof(RogueClassCmdRangeDownTo),
  (int) sizeof(RogueClassCmdLogicalXor),
  (int) sizeof(RogueClassCmdBinaryLogical),
  (int) sizeof(RogueClassCmdLogicalOr),
  (int) sizeof(RogueClassCmdLogicalAnd),
  (int) sizeof(RogueClassCmdCompareEQ),
  (int) sizeof(RogueClassCmdCompareIs),
  (int) sizeof(RogueClassCmdCompareIsNot),
  (int) sizeof(RogueClassCmdCompareGT),
  (int) sizeof(RogueClassCmdInstanceOf),
  (int) sizeof(RogueClassCmdLogicalNot),
  (int) sizeof(RogueClassCmdBitwiseShiftLeft),
  (int) sizeof(RogueClassCmdBitwiseShiftRight),
  (int) sizeof(RogueClassCmdBitwiseShiftRightX),
  (int) sizeof(RogueClassCmdNegate),
  (int) sizeof(RogueClassCmdBitwiseNot),
  (int) sizeof(RogueClassCmdListConvert),
  (int) sizeof(RogueClassCmdConvertToType),
  (int) sizeof(RogueClassCmdCreateCallback),
  (int) sizeof(RogueClassCmdAs),
  (int) sizeof(RogueClassCmdDefaultValue),
  (int) sizeof(RogueClassCmdLiteralReal64),
  (int) sizeof(RogueClassCmdLiteralInt64),
  (int) sizeof(RogueClassCmdLiteralCharacter),
  (int) sizeof(RogueClassCmdCreateList),
  (int) sizeof(RogueCmdSelectCase_List),
  (int) sizeof(RogueClassCmdTypedLiteralList),
  (int) sizeof(RogueTableEntry_String_ParseReader__List),
  (int) sizeof(RogueClassTableEntry_String_ParseReader_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassIOError),
  (int) sizeof(RogueClassFileReader),
  (int) sizeof(RogueClassFileWriter),
  (int) sizeof(RogueClassUTF8Reader),
  (int) sizeof(RogueTableEntry_String_TokenType__List),
  (int) sizeof(RogueClassTableEntry_String_TokenType_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_TypeSpecializer__List),
  (int) sizeof(RogueClassTableEntry_String_TypeSpecializer_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_CmdLabel__List),
  (int) sizeof(RogueClassTableEntry_String_CmdLabel_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueToken_List_List),
  (int) sizeof(RogueClassTable_String_Token_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueCmdTaskControlSection_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassRequirementError),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdCallStaticMethod),
  (int) sizeof(RogueClassListReader_CmdSelectCase_),
  (int) sizeof(RogueClassReader_CmdSelectCase_),
  (int) sizeof(RogueTableEntry_String_Definition__List),
  (int) sizeof(RogueClassTableEntry_String_Definition_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Property__List),
  (int) sizeof(RogueClassTableEntry_String_Property_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueMethodTemplate_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Cmd_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassDirectiveTokenType),
  (int) sizeof(RogueClassStructuralDirectiveTokenType),
  (int) sizeof(RogueClassEOLTokenType),
  (int) sizeof(RogueClassStructureTokenType),
  (int) sizeof(RogueClassNativeCodeTokenType),
  (int) sizeof(RogueClassModifyAndAssignTokenType),
  (int) sizeof(RogueClassPreprocessorTokenReader),
  (int) sizeof(RogueClassCmdConvertToPrimitiveType),
  (int) sizeof(RogueTableEntry_String_Token_List__List),
  (int) sizeof(RogueClassTableEntry_String_Token_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueTableEntry_String_Cmd__List),
  (int) sizeof(RogueClassTableEntry_String_Cmd_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassNativeCodeToken),
  (int) sizeof(RogueOptionalInt32),
  (int) sizeof(RogueOptionalByte),
  (int) sizeof(RogueClassSystemEnvironment),
  (int) sizeof(RogueOptionalCharacter)
};

int Rogue_allocator_count = 1;
RogueAllocator Rogue_allocators[1];

int Rogue_type_count = 374;
RogueType Rogue_types[374];

RogueType* RogueTypeException;
RogueType* RogueTypeObject;
RogueType* RogueTypeString;
RogueType* RogueTypeStackTrace;
RogueType* RogueTypeInt32;
RogueType* RogueTypeInt64;
RogueType* RogueTypeLogical;
RogueType* RogueTypeTypeInfo;
RogueType* RogueTypeStringBuilder;
RogueType* RogueTypeByte_List;
RogueType* RogueTypeByte;
RogueType* RogueTypeGenericList;
RogueType* RogueTypeCharacter_List;
RogueType* RogueTypeCharacter;
RogueType* RogueTypeReal64;
RogueType* RogueTypeTable_String_String_;
RogueType* RogueTypeString_List;
RogueType* RogueTypeArray;
RogueType* RogueTypeStringReader;
RogueType* RogueTypeReader_Character_;
RogueType* RogueTypeReader_String_;
RogueType* RogueTypeGlobal;
RogueType* RogueTypePrintWriterAspect_Global_global_output_buffer_;
RogueType* RogueTypePrintWriter;
RogueType* RogueTypeFunction___List;
RogueType* RogueTypeFunction__;
RogueType* RogueTypeFunction_81;
RogueType* RogueTypeRogueC;
RogueType* RogueTypeConsole;
RogueType* RogueTypePrintWriterAspect_Console_output_buffer_;
RogueType* RogueTypeProgram;
RogueType* RogueTypeTemplate_List;
RogueType* RogueTypeTemplate;
RogueType* RogueTypeTable_String_Template_;
RogueType* RogueTypeTable_String_Augment_List_;
RogueType* RogueTypeMethod;
RogueType* RogueTypeProperty_List;
RogueType* RogueTypeProperty;
RogueType* RogueTypeTable_String_Method_List_;
RogueType* RogueTypeType_List;
RogueType* RogueTypeType;
RogueType* RogueTypeTable_String_Type_;
RogueType* RogueTypeTable_String_Int32_;
RogueType* RogueTypeTable_String_String_List_;
RogueType* RogueTypeTableEntry_String_Int32_;
RogueType* RogueTypeTable_Int32_Template_;
RogueType* RogueTypeAttributes;
RogueType* RogueTypeToken_List;
RogueType* RogueTypeToken;
RogueType* RogueTypeError;
RogueType* RogueTypeRogueError;
RogueType* RogueTypeCmdAccess;
RogueType* RogueTypeCmd;
RogueType* RogueTypeCmdArgs;
RogueType* RogueTypeCmd_List;
RogueType* RogueTypeCmdNamedArg_List;
RogueType* RogueTypeCmdNamedArg;
RogueType* RogueTypeCmdStatementList;
RogueType* RogueTypeCmdLabel;
RogueType* RogueTypeCmdReturn;
RogueType* RogueTypeCmdStatement;
RogueType* RogueTypeTokenType;
RogueType* RogueTypeScope;
RogueType* RogueTypeMethod_List;
RogueType* RogueTypePlugin_List;
RogueType* RogueTypePlugin;
RogueType* RogueTypeFunction_Type_RETURNSLogical;
RogueType* RogueTypeFunction_229;
RogueType* RogueTypeFunction_230;
RogueType* RogueTypeCPPWriter;
RogueType* RogueTypeTable_String_Method_;
RogueType* RogueTypeLocal_List;
RogueType* RogueTypeLocal;
RogueType* RogueTypeInt32_List;
RogueType* RogueTypeMath;
RogueType* RogueTypeSystem;
RogueType* RogueTypeTable_String_TypeInfo_;
RogueType* RogueTypeReader_Byte_;
RogueType* RogueTypeWriter_Byte_;
RogueType* RogueTypeTableEntry_String_String__List;
RogueType* RogueTypeTableEntry_String_String_;
RogueType* RogueTypeTable_String_Logical_;
RogueType* RogueTypeParser_List;
RogueType* RogueTypeParser;
RogueType* RogueTypeTable_String_ParseReader_;
RogueType* RogueTypeStopwatch;
RogueType* RogueTypeFile;
RogueType* RogueTypeCmdMakeRequisite;
RogueType* RogueTypeLineReader;
RogueType* RogueTypeFunction_545;
RogueType* RogueTypeFunction__RETURNSLogical;
RogueType* RogueTypeTypeParameter_List;
RogueType* RogueTypeTypeParameter;
RogueType* RogueTypeAugment_List;
RogueType* RogueTypeAugment;
RogueType* RogueTypeTable_String_TokenType_;
RogueType* RogueTypeLiteralCharacterToken;
RogueType* RogueTypeLiteralInt64Token;
RogueType* RogueTypeLiteralInt32Token;
RogueType* RogueTypeLiteralReal64Token;
RogueType* RogueTypeStringDataToken;
RogueType* RogueTypeTable_String_TypeSpecializer_;
RogueType* RogueTypeTypeSpecializer;
RogueType* RogueTypeTypeSpecializer_List;
RogueType* RogueTypeTableEntry_String_Template__List;
RogueType* RogueTypeTableEntry_String_Template_;
RogueType* RogueTypeTableEntry_String_Augment_List__List;
RogueType* RogueTypeTableEntry_String_Augment_List_;
RogueType* RogueTypeCmdLabel_List;
RogueType* RogueTypeTable_String_CmdLabel_;
RogueType* RogueTypeMethodTemplate;
RogueType* RogueTypeCloneArgs;
RogueType* RogueTypeCloneMethodArgs;
RogueType* RogueTypeVisitor;
RogueType* RogueTypeCmdAssert;
RogueType* RogueTypeCmdRequire;
RogueType* RogueTypeCmdAssign;
RogueType* RogueTypeCmdLocalDeclaration;
RogueType* RogueTypeCmdBlock;
RogueType* RogueTypeCmdControlStructure;
RogueType* RogueTypeCmdIf;
RogueType* RogueTypeCmdSwitch;
RogueType* RogueTypeCmdWhich;
RogueType* RogueTypeCmdWhichCase;
RogueType* RogueTypeCmdContingent;
RogueType* RogueTypeCmdGenericLoop;
RogueType* RogueTypeCmdElementAccess;
RogueType* RogueTypeCmdEnsure;
RogueType* RogueTypeCmdForEach;
RogueType* RogueTypeCmdFormattedString;
RogueType* RogueTypeCmdTry;
RogueType* RogueTypeCmdCatch;
RogueType* RogueTypeCmdThrow;
RogueType* RogueTypeCmdEscape;
RogueType* RogueTypeCmdNextIteration;
RogueType* RogueTypeCmdNecessary;
RogueType* RogueTypeCmdSufficient;
RogueType* RogueTypeCmdLiteral;
RogueType* RogueTypeCmdLiteralString;
RogueType* RogueTypeCmdCreateObject;
RogueType* RogueTypeCmdCreateCompound;
RogueType* RogueTypeCmdThisContext;
RogueType* RogueTypeCmdReadSingleton;
RogueType* RogueTypeCmdWriteSingleton;
RogueType* RogueTypeCmdReadLocal;
RogueType* RogueTypeCmdWriteLocal;
RogueType* RogueTypeCmdReadGlobal;
RogueType* RogueTypeCmdWriteGlobal;
RogueType* RogueTypeCmdReadProperty;
RogueType* RogueTypeCmdWriteProperty;
RogueType* RogueTypeCmdCall;
RogueType* RogueTypeCmdCallDynamicMethod;
RogueType* RogueTypeCmdCallMethod;
RogueType* RogueTypeCmdCallPriorMethod;
RogueType* RogueTypeCmdRange;
RogueType* RogueTypeCmdUnary;
RogueType* RogueTypeCmdBinary;
RogueType* RogueTypeCmdAdjustLocal;
RogueType* RogueTypeCmdAdjustProperty;
RogueType* RogueTypeCmdAdjustGlobal;
RogueType* RogueTypeCmdModifyAndAssignLocal;
RogueType* RogueTypeCmdResolvedModifyAndAssign;
RogueType* RogueTypeCmdModifyAndAssignGlobal;
RogueType* RogueTypeCmdModifyAndAssignProperty;
RogueType* RogueTypeCmdCreateArray;
RogueType* RogueTypeCmdReadArrayElement;
RogueType* RogueTypeCmdReadArrayCount;
RogueType* RogueTypeCmdWriteArrayElement;
RogueType* RogueTypeCmdTypeOperator;
RogueType* RogueTypeCmdTaskControl;
RogueType* RogueTypeCmdTrace;
RogueType* RogueTypeCmdInlineNative;
RogueType* RogueTypeCmdNoAction;
RogueType* RogueTypeCmdSelect;
RogueType* RogueTypeCmdSelectCase;
RogueType* RogueTypeCmdControlStructure_List;
RogueType* RogueTypeCmdLiteralThis;
RogueType* RogueTypeCmdLiteralInt32;
RogueType* RogueTypeCmdCompareNE;
RogueType* RogueTypeCmdComparison;
RogueType* RogueTypeTaskArgs;
RogueType* RogueTypeCmdTaskControlSection;
RogueType* RogueTypeTableEntry_String_Method_List__List;
RogueType* RogueTypeTableEntry_String_Method_List_;
RogueType* RogueTypeDefinition_List;
RogueType* RogueTypeDefinition;
RogueType* RogueTypeTable_String_Definition_;
RogueType* RogueTypeTable_String_Property_;
RogueType* RogueTypeMethodTemplates;
RogueType* RogueTypeCmdLiteralNull;
RogueType* RogueTypeCmdLiteralLogical;
RogueType* RogueTypeUpdateThisTypeVisitor;
RogueType* RogueTypeTableEntry_String_Type__List;
RogueType* RogueTypeTableEntry_String_Type_;
RogueType* RogueTypeTableEntry_String_Int32__List;
RogueType* RogueTypeTableEntry_String_String_List__List;
RogueType* RogueTypeTableEntry_String_String_List_;
RogueType* RogueTypeTableEntry_Int32_Template__List;
RogueType* RogueTypeTableEntry_Int32_Template_;
RogueType* RogueTypeListRebuilder_Token_;
RogueType* RogueTypeCmdCastToType;
RogueType* RogueTypeCmdLogicalize;
RogueType* RogueTypeMacroArgs;
RogueType* RogueTypeFnParam_List;
RogueType* RogueTypeFnParam;
RogueType* RogueTypeCmdCreateFunction;
RogueType* RogueTypeFnArg_List;
RogueType* RogueTypeFnArg;
RogueType* RogueTypeTraceUsedCodeVisitor;
RogueType* RogueTypeCmdBitwiseAnd;
RogueType* RogueTypeCmdBitwiseOp;
RogueType* RogueTypeCmdPower;
RogueType* RogueTypeCmdSubtract;
RogueType* RogueTypeCmdMod;
RogueType* RogueTypeCmdAdd;
RogueType* RogueTypeCmdDivide;
RogueType* RogueTypeCmdBitwiseXor;
RogueType* RogueTypeCmdMultiply;
RogueType* RogueTypeCmdBitwiseOr;
RogueType* RogueTypeFunction_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeListRebuilder_CmdNamedArg_;
RogueType* RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeQuicksort_CmdNamedArg_;
RogueType* RogueTypeCmdCallInlineNativeRoutine;
RogueType* RogueTypeCmdCallInlineNative;
RogueType* RogueTypeCmdCallNativeRoutine;
RogueType* RogueTypeCmdCallRoutine;
RogueType* RogueTypeCmdCallInlineNativeMethod;
RogueType* RogueTypeCmdCallNativeMethod;
RogueType* RogueTypeCmdCallAspectMethod;
RogueType* RogueTypeCandidateMethods;
RogueType* RogueTypeFunction_1409;
RogueType* RogueTypeFunction_1410;
RogueType* RogueTypeTableEntry_String_Method__List;
RogueType* RogueTypeTableEntry_String_Method_;
RogueType* RogueTypeTableEntry_String_TypeInfo__List;
RogueType* RogueTypeTableEntry_String_TypeInfo_;
RogueType* RogueTypeTableEntry_String_Logical__List;
RogueType* RogueTypeTableEntry_String_Logical_;
RogueType* RogueTypeTokenReader;
RogueType* RogueTypeTokenizer;
RogueType* RogueTypeParseReader;
RogueType* RogueTypePreprocessor;
RogueType* RogueTypeEOLToken;
RogueType* RogueTypeCmdNativeHeader;
RogueType* RogueTypeCmdNativeCode;
RogueType* RogueTypeCmdAwait;
RogueType* RogueTypeCmdYield;
RogueType* RogueTypeCmdAdjust;
RogueType* RogueTypeCmdModifyAndAssign;
RogueType* RogueTypeCmdWhichCase_List;
RogueType* RogueTypeCmdCatch_List;
RogueType* RogueTypeCmdCompareLE;
RogueType* RogueTypeCmdRangeUpTo;
RogueType* RogueTypeCmdRangeUpToLessThan;
RogueType* RogueTypeCmdCompareLT;
RogueType* RogueTypeCmdCompareGE;
RogueType* RogueTypeCmdRangeDownTo;
RogueType* RogueTypeCmdLogicalXor;
RogueType* RogueTypeCmdBinaryLogical;
RogueType* RogueTypeCmdLogicalOr;
RogueType* RogueTypeCmdLogicalAnd;
RogueType* RogueTypeCmdCompareEQ;
RogueType* RogueTypeCmdCompareIs;
RogueType* RogueTypeCmdCompareIsNot;
RogueType* RogueTypeCmdCompareGT;
RogueType* RogueTypeCmdInstanceOf;
RogueType* RogueTypeCmdLogicalNot;
RogueType* RogueTypeCmdBitwiseShiftLeft;
RogueType* RogueTypeCmdBitwiseShiftRight;
RogueType* RogueTypeCmdBitwiseShiftRightX;
RogueType* RogueTypeCmdNegate;
RogueType* RogueTypeCmdBitwiseNot;
RogueType* RogueTypeCmdListConvert;
RogueType* RogueTypeCmdConvertToType;
RogueType* RogueTypeCmdCreateCallback;
RogueType* RogueTypeCmdAs;
RogueType* RogueTypeCmdDefaultValue;
RogueType* RogueTypeCmdLiteralReal64;
RogueType* RogueTypeCmdLiteralInt64;
RogueType* RogueTypeCmdLiteralCharacter;
RogueType* RogueTypeCmdCreateList;
RogueType* RogueTypeCmdSelectCase_List;
RogueType* RogueTypeCmdTypedLiteralList;
RogueType* RogueTypeTableEntry_String_ParseReader__List;
RogueType* RogueTypeTableEntry_String_ParseReader_;
RogueType* RogueTypeIOError;
RogueType* RogueTypeFileReader;
RogueType* RogueTypeFileWriter;
RogueType* RogueTypeUTF8Reader;
RogueType* RogueTypeTableEntry_String_TokenType__List;
RogueType* RogueTypeTableEntry_String_TokenType_;
RogueType* RogueTypeTableEntry_String_TypeSpecializer__List;
RogueType* RogueTypeTableEntry_String_TypeSpecializer_;
RogueType* RogueTypeTableEntry_String_CmdLabel__List;
RogueType* RogueTypeTableEntry_String_CmdLabel_;
RogueType* RogueTypeToken_List_List;
RogueType* RogueTypeTable_String_Token_List_;
RogueType* RogueTypeCmdTaskControlSection_List;
RogueType* RogueTypeRequirementError;
RogueType* RogueTypeCmdCallStaticMethod;
RogueType* RogueTypeListReader_CmdSelectCase_;
RogueType* RogueTypeReader_CmdSelectCase_;
RogueType* RogueTypeTableEntry_String_Definition__List;
RogueType* RogueTypeTableEntry_String_Definition_;
RogueType* RogueTypeTableEntry_String_Property__List;
RogueType* RogueTypeTableEntry_String_Property_;
RogueType* RogueTypeMethodTemplate_List;
RogueType* RogueTypeTable_String_Cmd_;
RogueType* RogueTypeDirectiveTokenType;
RogueType* RogueTypeStructuralDirectiveTokenType;
RogueType* RogueTypeEOLTokenType;
RogueType* RogueTypeStructureTokenType;
RogueType* RogueTypeNativeCodeTokenType;
RogueType* RogueTypeModifyAndAssignTokenType;
RogueType* RogueTypePreprocessorTokenReader;
RogueType* RogueTypeCmdConvertToPrimitiveType;
RogueType* RogueTypeTableEntry_String_Token_List__List;
RogueType* RogueTypeTableEntry_String_Token_List_;
RogueType* RogueTypeTableEntry_String_Cmd__List;
RogueType* RogueTypeTableEntry_String_Cmd_;
RogueType* RogueTypeNativeCodeToken;
RogueType* RogueTypeOptionalInt32;
RogueType* RogueTypeOptionalByte;
RogueType* RogueTypeSystemEnvironment;
RogueType* RogueTypeOptionalCharacter;

int Rogue_literal_string_count = 1281;
RogueString* Rogue_literal_strings[1281];

RogueLogical RogueLogical__create__Int32( RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "Logical.create(Int32)", "Primitives.rogue", 453 );
  __trace.line = 454;
  return (RogueLogical)(value_0 != 0);
}

void RogueStringBuilder__init_class()
{
  RogueDebugTrace __trace( "StringBuilder.init_class()", "StringBuilder.rogue", 1 );
  __trace.line = 3;
  RogueStringBuilder_work_bytes = ((RogueByte_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))) )));
}

RogueCharacter RogueCharacter__create__Int32( RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "Character.create(Int32)", "Primitives.rogue", 324 );
  __trace.line = 325;
  return (RogueCharacter)(((RogueCharacter)(value_0)));
}

void RogueToken__init_class()
{
  RogueDebugTrace __trace( "Token.init_class()", "Token.rogue", 1 );
  __trace.line = 3;
  RogueToken_filepath_to_filename = ((RogueTable_String_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_*,ROGUE_CREATE_OBJECT(Table_String_String_))) )));
}

void RogueCmdStatementList__init_class()
{
  RogueDebugTrace __trace( "CmdStatementList.init_class()", "Cmd.rogue", 182 );
}

void RogueTokenType__init_class()
{
  RogueDebugTrace __trace( "TokenType.init_class()", "TokenType.rogue", 1 );
}

RogueInt32 RogueMath__max__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  RogueDebugTrace __trace( "Math.max(Int32,Int32)", "Math.rogue", 61 );
  __trace.line = 62;
  if (a_0 >= b_1)
  {
    return (RogueInt32)(a_0);
  }
  else
  {
    __trace.line = 63;
    return (RogueInt32)(b_1);
  }
}

RogueInt32 RogueMath__mod__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  RogueDebugTrace __trace( "Math.mod(Int32,Int32)", "Math.rogue", 77 );
  __trace.line = 78;
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == 1))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 80;
  RogueInt32 r_2 = (a_0 % b_1);
  __trace.line = 81;
  if ((a_0 ^ b_1) < 0)
  {
    __trace.line = 82;
    if (!!(r_2))
    {
      return (RogueInt32)((r_2 + b_1));
    }
    else
    {
      __trace.line = 83;
      return (RogueInt32)(0);
    }
  }
  else
  {
    __trace.line = 85;
    return (RogueInt32)(r_2);
  }
}

RogueInt64 RogueMath__mod__Int64_Int64( RogueInt64 a_0, RogueInt64 b_1 )
{
  RogueDebugTrace __trace( "Math.mod(Int64,Int64)", "Math.rogue", 88 );
  __trace.line = 89;
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == ((RogueInt64)(1))))
  {
    return (RogueInt64)(((RogueInt64)(0)));
  }
  __trace.line = 91;
  RogueInt64 r_2 = (a_0 % b_1);
  __trace.line = 92;
  if ((a_0 ^ b_1) < ((RogueInt64)(0)))
  {
    __trace.line = 93;
    if (!!(r_2))
    {
      return (RogueInt64)((r_2 + b_1));
    }
    else
    {
      __trace.line = 94;
      return (RogueInt64)(((RogueInt64)(0)));
    }
  }
  else
  {
    __trace.line = 96;
    return (RogueInt64)(r_2);
  }
}

RogueReal64 RogueMath__mod__Real64_Real64( RogueReal64 a_0, RogueReal64 b_1 )
{
  RogueDebugTrace __trace( "Math.mod(Real64,Real64)", "Math.rogue", 99 );
  __trace.line = 100;
  RogueReal64 q_2 = ((a_0 / b_1));
  __trace.line = 101;
  return (RogueReal64)((a_0 - (floor((double)q_2) * b_1)));
}

RogueInt32 RogueMath__shift_right__Int32_Int32( RogueInt32 value_0, RogueInt32 bits_1 )
{
  RogueDebugTrace __trace( "Math.shift_right(Int32,Int32)", "Math.rogue", 103 );
  __trace.line = 104;
  if (bits_1 <= 0)
  {
    return (RogueInt32)(value_0);
  }
  __trace.line = 106;
  --bits_1;
  __trace.line = 107;
  if (!!(bits_1))
  {
    return (RogueInt32)((((value_0 >> 1) & 2147483647) >> bits_1));
  }
  else
  {
    __trace.line = 108;
    return (RogueInt32)(((value_0 >> 1) & 2147483647));
  }
}

void RogueSystem__init_class()
{
  RogueDebugTrace __trace( "System.init_class()", "System.rogue", 10 );
  __trace.line = 3;
  RogueSystem_command_line_arguments = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 7;
  RogueSystem_classes = ((RogueTable_String_TypeInfo___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeInfo_*,ROGUE_CREATE_OBJECT(Table_String_TypeInfo_))) )));
  __trace.line = 11;
  ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueSystemEnvironment__get__String( ROGUE_ARG(RogueSystem_environment), Rogue_literal_strings[2] )))));
  __trace.line = 12;
  if (((void*)value_0) != ((void*)NULL))
  {
    __trace.line = 13;
    RogueReal64 n_1 = (strtod( (char*)value_0->utf8, 0 ));
    __trace.line = 14;
    if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'M' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[3] )))))
    {
      n_1 *= 1048576.0;
    }
    else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'K' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[4] )))))
    {
      __trace.line = 15;
      n_1 *= 1024.0;
    }
    __trace.line = 16;
    RogueSystem__set_gc_threshold__Int32( ROGUE_ARG(((RogueInt32)(n_1))) );
  }
}

void RogueSystem__exit__Int32( RogueInt32 result_code_0 )
{
  RogueDebugTrace __trace( "System.exit(Int32)", "System.rogue", 19 );
  __trace.line = 21;
  Rogue_quit();
  exit( result_code_0 );

}

RogueInt32 RogueSystem__run__String( RogueString* command_0 )
{
  RogueDebugTrace __trace( "System.run(String)", "System.rogue", 25 );
  __trace.line = 26;
  RogueInt32 return_val_1 = (0);
  __trace.line = 27;
  return_val_1 = system( (char*)command_0->utf8 );

  __trace.line = 28;
  if (return_val_1 == -1)
  {
    ROGUE_THROW(((RogueClassError*)((call_ROGUEM2( 7, ROGUE_ARG(((RogueClassException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[718] )))));
  }
  __trace.line = 29;
  return (RogueInt32)(return_val_1);
}

void RogueSystem__set_gc_threshold__Int32( RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "System.set_gc_threshold(Int32)", "System.rogue", 37 );
  __trace.line = 38;
  if (value_0 <= 0)
  {
    value_0 = ((RogueInt32)2147483647);
  }
  __trace.line = 42;
  Rogue_gc_threshold = value_0;

}

RogueReal64 RogueSystem__time()
{
  RogueDebugTrace __trace( "System.time()", "System.rogue", 75 );
  __trace.line = 77;
#if defined(_WIN32)
    struct __timeb64 time_struct;
    RogueReal64 time_seconds;
    _ftime64_s( &time_struct );
    time_seconds = (RogueReal64) time_struct.time;
    time_seconds += time_struct.millitm / 1000.0;
    return time_seconds;
#else
    struct timeval time_struct;
    RogueReal64 time_seconds;
    gettimeofday( &time_struct, 0 );
    time_seconds = (RogueReal64) time_struct.tv_sec;
    time_seconds += (time_struct.tv_usec / 1000000.0);
    return time_seconds;
#endif

}

RogueString* RogueFile__absolute_filepath__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.absolute_filepath(String)", "File.rogue", 69 );
  __trace.line = 70;
  if (!(!!(filepath_0)))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  __trace.line = 72;
  if (!((RogueFile__exists__String( filepath_0 ))))
  {
    __trace.line = 73;
    ROGUE_DEF_LOCAL_REF(RogueString*,parent_1,((RogueFile__path__String( filepath_0 ))));
    __trace.line = 74;
    if (parent_1->character_count == 0)
    {
      parent_1 = ((RogueString*)Rogue_literal_strings[78]);
    }
    __trace.line = 75;
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__absolute_filepath__String( parent_1 ))) )))) )))), Rogue_literal_strings[75] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__filename__String( filepath_0 ))) )))) )))) ))));
  }
  __trace.line = 78;
  ROGUE_DEF_LOCAL_REF(RogueString*,return_value_2,0);
  __trace.line = 80;
#if defined(_WIN32)
  {
    char long_name[PATH_MAX+4];
    char full_name[PATH_MAX+4];
    if (GetInt64PathName((char*)filepath_0->utf8, long_name, PATH_MAX+4) == 0)
    {
      strcpy_s( long_name, PATH_MAX+4, (char*)filepath_0->utf8 );
    }
    if (GetFullPathName(long_name, PATH_MAX+4, full_name, 0) != 0)
    {
      return_value_2 = RogueString_create_from_utf8( full_name, -1 );
    }
  }
#else
  {
    int original_dir_fd;
    int new_dir_fd;
    char filename[PATH_MAX];
    char c_filepath[ PATH_MAX ];
    bool is_folder;
    is_folder = RogueFile__is_folder__String( filepath_0 );
    int len = filepath_0->byte_count;
    if (len >= PATH_MAX) len = PATH_MAX - 1;
    memcpy( c_filepath, (char*)filepath_0->utf8, len );
    c_filepath[len] = 0;
    // A way to get back to the starting folder when finished.
    original_dir_fd = open( ".", O_RDONLY );
    if (is_folder)
    {
      filename[0] = 0;
    }
    else
    {
      // fchdir only works with a path, not a path+filename (c_filepath).
      // Copy out the filename and null terminate the filepath to be just a path.
      int i = (int) strlen( c_filepath ) - 1;
      while (i >= 0 && c_filepath[i] != '/') --i;
      strcpy( filename, c_filepath+i+1 );
      if (i == -1) strcpy( c_filepath, "." );
      else         c_filepath[i] = 0;
    }
    new_dir_fd = open( c_filepath, O_RDONLY );
    do
    {
      if (original_dir_fd >= 0 && new_dir_fd >= 0)
      {
        int r = fchdir( new_dir_fd );
        if ( r != 0 ) break;
        char * r2 = getcwd( c_filepath, PATH_MAX );
        if ( r2 == 0 ) break;
        if ( !is_folder )
        {
          strcat( c_filepath, "/" );
          strcat( c_filepath, filename );
        }
        r = fchdir( original_dir_fd );
        if ( r != 0 ) break;
      }
      return_value_2 = RogueString_create_from_utf8( c_filepath, -1 );
    } while (false);
    if (original_dir_fd >= 0) close( original_dir_fd );
    if (new_dir_fd >= 0) close( new_dir_fd );
  }
#endif

  __trace.line = 153;
  if (((void*)return_value_2) == ((void*)NULL))
  {
    __trace.line = 154;
    ROGUE_THROW(((RogueClassIOError*)((call_ROGUEM2( 7, ROGUE_ARG(((RogueClassException*)ROGUE_CREATE_REF(RogueClassIOError*,ROGUE_CREATE_OBJECT(IOError)))), Rogue_literal_strings[79] )))));
  }
  __trace.line = 156;
  return (RogueString*)(return_value_2);
}

RogueLogical RogueFile__exists__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.exists(String)", "File.rogue", 181 );
  __trace.line = 182;
  if ( !filepath_0 ) return false;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return false;
  fclose( fp );
  return true;

}

RogueString* RogueFile__filename__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.filename(String)", "File.rogue", 193 );
  __trace.line = 194;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 195;
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 196;
  if (!(i_1.exists))
  {
    return (RogueString*)(filepath_0);
  }
  __trace.line = 197;
  return (RogueString*)(((RogueString__from__Int32( filepath_0, ROGUE_ARG((i_1.value + 1)) ))));
}

RogueLogical RogueFile__is_folder__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.is_folder(String)", "File.rogue", 199 );
  __trace.line = 200;
  if ( !filepath_0 ) return false;
#if defined(_WIN32)
    char filepath_copy[PATH_MAX];
    strcpy( filepath_copy, (char*)filepath_0->utf8 );
    int path_len = filepath_0->byte_count;
    int i = strlen(filepath_copy)-1;
    while (i > 0 && (filepath_copy[i] == '/' || filepath_copy[i] == '\\')) filepath_copy[i--] = 0;
    // Windows allows dir\* to count as a directory; guard against.
    for (i=0; filepath_copy[i]; ++i)
    {
      if (filepath_copy[i] == '*' || filepath_copy[i] == '?') return 0;
    }
    WIN32_FIND_DATA entry;
    HANDLE dir = FindFirstFile( filepath_copy, &entry );
    if (dir != INVALID_HANDLE_VALUE)
    {
      if (entry.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
      {
        FindClose( dir );
        return 1;
      }
    }
    FindClose( dir );
    return 0;
#else
    DIR* dir = opendir( (char*)filepath_0->utf8 );
    if ( !dir ) return 0;
    closedir( dir );
    return 1;
#endif

}

RogueString* RogueFile__load_as_string__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.load_as_string(String)", "File.rogue", 318 );
  __trace.line = 319;
  RogueInt32 count_1 = ((RogueFile__size__String( filepath_0 )));
  __trace.line = 320;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), count_1 )))));
  __trace.line = 321;
  ROGUE_DEF_LOCAL_REF(RogueClassFileReader*,infile_3,((RogueFile__reader__String( filepath_0 ))));
  __trace.line = 322;
  {
    RogueInt32 _auto_514_4 = (1);
    RogueInt32 _auto_515_5 = (count_1);
    for (;_auto_514_4 <= _auto_515_5;++_auto_514_4)
    {
      __trace.line = 323;
      RogueByte b_6 = (((RogueFileReader__read( infile_3 ))));
      __trace.line = 324;
      RogueByte_List__add__Byte( ROGUE_ARG(buffer_2->utf8), b_6 );
      __trace.line = 325;
      if ((((RogueInt32)(b_6)) & 192) != 128)
      {
        ++buffer_2->count;
      }
    }
  }
  __trace.line = 327;
  RogueFileReader__close( infile_3 );
  __trace.line = 328;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_2 ))));
}

RogueString* RogueFile__path__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.path(String)", "File.rogue", 333 );
  __trace.line = 334;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 335;
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 336;
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  __trace.line = 337;
  return (RogueString*)(((RogueString__from__Int32_Int32( filepath_0, 0, ROGUE_ARG((i_1.value - 1)) ))));
}

RogueClassFileReader* RogueFile__reader__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.reader(String)", "File.rogue", 339 );
  __trace.line = 340;
  return (RogueClassFileReader*)(((RogueFileReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileReader*,ROGUE_CREATE_OBJECT(FileReader))), filepath_0 ))));
}

RogueLogical RogueFile__save__String_String( RogueString* filepath_0, RogueString* data_1 )
{
  RogueDebugTrace __trace( "File.save(String,String)", "File.rogue", 348 );
  __trace.line = 349;
  ROGUE_DEF_LOCAL_REF(RogueClassFileWriter*,outfile_2,((RogueFile__writer__String( filepath_0 ))));
  __trace.line = 350;
  {
    RogueInt32 i_3 = (0);
    RogueInt32 _auto_516_4 = (data_1->byte_count);
    for (;i_3 < _auto_516_4;++i_3)
    {
      RogueFileWriter__write__Byte( outfile_2, ROGUE_ARG(data_1->utf8[ i_3 ]) );
    }
  }
  __trace.line = 351;
  RogueFileWriter__close( outfile_2 );
  __trace.line = 352;
  return (RogueLogical)(!(outfile_2->error));
}

RogueInt32 RogueFile__size__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.size(String)", "File.rogue", 354 );
  __trace.line = 355;
  if ( !filepath_0 ) return 0;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return 0;
  fseek( fp, 0, SEEK_END );
  RogueInt32 size = (RogueInt32) ftell( fp );
  fclose( fp );
  return size;

}

RogueClassFileWriter* RogueFile__writer__String( RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "File.writer(String)", "File.rogue", 366 );
  __trace.line = 367;
  return (RogueClassFileWriter*)(((RogueFileWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileWriter*,ROGUE_CREATE_OBJECT(FileWriter))), filepath_0 ))));
}

RogueCmdNamedArg_List* RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* list_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1 )
{
  RogueDebugTrace __trace( "Quicksort<<CmdNamedArg>>.sort(CmdNamedArg[],Function(CmdNamedArg,CmdNamedArg)->Logical)", "Sort.rogue", 76 );
  __trace.line = 77;
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( ROGUE_ARG(list_0->data), compare_fn_1, 0, ROGUE_ARG((list_0->count - 1)) );
  __trace.line = 78;
  return (RogueCmdNamedArg_List*)(list_0);
}

void RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( RogueArray* data_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1, RogueInt32 i1_2, RogueInt32 i2_3 )
{
  RogueDebugTrace __trace( "Quicksort<<CmdNamedArg>>.sort(Array<<CmdNamedArg>>,Function(CmdNamedArg,CmdNamedArg)->Logical,Int32,Int32)", "Sort.rogue", 80 );
  __trace.line = 81;
  if (i1_2 >= i2_3)
  {
    __trace.line = 83;
    return;
  }
  else if ((i1_2 + 1) == i2_3)
  {
    __trace.line = 87;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_4,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
    __trace.line = 88;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_5,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
    __trace.line = 89;
    if (!((call_ROGUEM812( 7, compare_fn_1, a_4, b_5 ))))
    {
      __trace.line = 90;
      data_0->objects[i2_3] = a_4;
      __trace.line = 91;
      data_0->objects[i1_2] = b_5;
    }
    __trace.line = 93;
    return;
  }
  else if ((i1_2 + 2) == i2_3)
  {
    __trace.line = 97;
    RogueInt32 ib_6 = ((i1_2 + 1));
    __trace.line = 98;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_7,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
    __trace.line = 99;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_8,(((RogueClassCmdNamedArg*)(data_0->objects[ib_6]))));
    __trace.line = 100;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,c_9,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
    __trace.line = 101;
    if ((call_ROGUEM812( 7, compare_fn_1, a_7, b_8 )))
    {
      __trace.line = 103;
      if ((call_ROGUEM812( 7, compare_fn_1, b_8, c_9 )))
      {
        __trace.line = 105;
        return;
      }
      else if ((call_ROGUEM812( 7, compare_fn_1, a_7, c_9 )))
      {
        __trace.line = 108;
        data_0->objects[ib_6] = c_9;
        __trace.line = 109;
        data_0->objects[i2_3] = b_8;
        __trace.line = 110;
        return;
      }
      else
      {
        __trace.line = 113;
        data_0->objects[i1_2] = c_9;
        __trace.line = 114;
        data_0->objects[ib_6] = a_7;
        __trace.line = 115;
        data_0->objects[i2_3] = b_8;
        __trace.line = 116;
        return;
      }
    }
    else if ((call_ROGUEM812( 7, compare_fn_1, a_7, c_9 )))
    {
      __trace.line = 122;
      data_0->objects[i1_2] = b_8;
      __trace.line = 123;
      data_0->objects[ib_6] = a_7;
      __trace.line = 124;
      return;
    }
    else if ((call_ROGUEM812( 7, compare_fn_1, b_8, c_9 )))
    {
      __trace.line = 127;
      data_0->objects[i1_2] = b_8;
      __trace.line = 128;
      data_0->objects[ib_6] = c_9;
      __trace.line = 129;
      data_0->objects[i2_3] = a_7;
      __trace.line = 130;
      return;
    }
    else
    {
      __trace.line = 133;
      data_0->objects[i1_2] = c_9;
      __trace.line = 134;
      data_0->objects[ib_6] = b_8;
      __trace.line = 135;
      data_0->objects[i2_3] = a_7;
      __trace.line = 136;
      return;
    }
  }
  __trace.line = 143;
  RogueInt32 pivot_index_10 = ((RogueMath__shift_right__Int32_Int32( ROGUE_ARG((i1_2 + i2_3)), 1 )));
  __trace.line = 144;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,pivot_11,(((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]))));
  __trace.line = 145;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,first_12,(((RogueClassCmdNamedArg*)(data_0->objects[i1_2]))));
  __trace.line = 146;
  if ((call_ROGUEM812( 7, compare_fn_1, pivot_11, first_12 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)first_12);
    pivot_index_10 = ((RogueInt32)i1_2);
  }
  __trace.line = 147;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,last_13,(((RogueClassCmdNamedArg*)(data_0->objects[i2_3]))));
  __trace.line = 148;
  if ((call_ROGUEM812( 7, compare_fn_1, last_13, pivot_11 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)last_13);
    pivot_index_10 = ((RogueInt32)i2_3);
  }
  __trace.line = 156;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,temp_14,(((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]))));
  __trace.line = 157;
  data_0->objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->objects[i2_3]));
  __trace.line = 158;
  data_0->objects[i2_3] = temp_14;
  __trace.line = 160;
  pivot_index_10 = ((RogueInt32)i1_2);
  __trace.line = 161;
  {
    RogueInt32 i_15 = (i1_2);
    RogueInt32 _auto_1349_16 = ((i2_3 - 1));
    for (;i_15 <= _auto_1349_16;++i_15)
    {
      __trace.line = 162;
      if ((call_ROGUEM812( 7, compare_fn_1, ROGUE_ARG(((RogueClassCmdNamedArg*)(data_0->objects[i_15]))), pivot_11 )))
      {
        __trace.line = 165;
        temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->objects[i_15])));
        __trace.line = 166;
        data_0->objects[i_15] = ((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10]));
        __trace.line = 167;
        data_0->objects[pivot_index_10] = temp_14;
        __trace.line = 168;
        ++pivot_index_10;
      }
    }
  }
  __trace.line = 173;
  temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->objects[pivot_index_10])));
  __trace.line = 174;
  data_0->objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->objects[i2_3]));
  __trace.line = 175;
  data_0->objects[i2_3] = temp_14;
  __trace.line = 177;
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, i1_2, ROGUE_ARG((pivot_index_10 - 1)) );
  __trace.line = 178;
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, ROGUE_ARG((pivot_index_10 + 1)), i2_3 );
}

void RoguePreprocessor__init_class()
{
  RogueDebugTrace __trace( "Preprocessor.init_class()", "Preprocessor.rogue", 1 );
  __trace.line = 3;
  RoguePreprocessor_definitions = ((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )));
}

RogueOptionalInt32 RogueOptionalInt32__create()
{
  RogueDebugTrace __trace( "Int32?.create()", "Optional.rogue", 3 );
  __trace.line = 4;
  RogueInt32 default_value_0 = 0;
  __trace.line = 5;
  return (RogueOptionalInt32)(RogueOptionalInt32( default_value_0, false ));
}

RogueOptionalCharacter RogueOptionalCharacter__create()
{
  RogueDebugTrace __trace( "Character?.create()", "Optional.rogue", 3 );
  __trace.line = 4;
  RogueCharacter default_value_0 = 0;
  __trace.line = 5;
  return (RogueOptionalCharacter)(RogueOptionalCharacter( default_value_0, false ));
}


RogueString* RogueException__to_String( RogueClassException* THIS )
{
  RogueDebugTrace __trace( "Exception.to_String()", "Exception.rogue", 9 );
  __trace.line = 10;
  return (RogueString*)(THIS->message);
}

RogueString* RogueException__type_name( RogueClassException* THIS )
{
  RogueDebugTrace __trace( "Exception.type_name()", "Exception.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[72]);
}

RogueClassException* RogueException__init__String( RogueClassException* THIS, RogueString* _auto_0_0 )
{
  RogueDebugTrace __trace( "Exception.init(String)", "Exception.rogue", 7 );
  THIS->message = _auto_0_0;
  __trace.line = 9;
  return (RogueClassException*)(THIS);
}

RogueClassException* RogueException__init_object( RogueClassException* THIS )
{
  RogueDebugTrace __trace( "Exception.init_object()", "Exception.rogue", 1 );
  __trace.line = 4;
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  __trace.line = 1;
  return (RogueClassException*)(THIS);
}

RogueObject* RogueObject__init( RogueObject* THIS )
{
  RogueDebugTrace __trace( "Object.init()", "Object.rogue", 3 );
  __trace.line = 6;
  return (RogueObject*)(THIS);
}

RogueInt64 RogueObject__object_id( RogueObject* THIS )
{
  RogueDebugTrace __trace( "Object.object_id()", "Object.rogue", 9 );
  __trace.line = 10;
  RogueInt64 addr_0 = 0;
  __trace.line = 11;
  addr_0 = (RogueInt64)(intptr_t)THIS;

  __trace.line = 12;
  return (RogueInt64)(addr_0);
}

RogueLogical RogueObject__operatorEQUALSEQUALS__Object( RogueObject* THIS, RogueObject* other_0 )
{
  RogueDebugTrace __trace( "Object.operator==(Object)", "Object.rogue", 14 );
  __trace.line = 15;
  return (RogueLogical)(((void*)THIS) == ((void*)other_0));
}

RogueString* RogueObject__to_String( RogueObject* THIS )
{
  RogueDebugTrace __trace( "Object.to_String()", "Object.rogue", 17 );
  __trace.line = 18;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM4( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[95] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt64__to_hex_string__Int32( ROGUE_ARG(((RogueObject__object_id( ROGUE_ARG(THIS) )))), 16 )))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueObject__type_name( RogueObject* THIS )
{
  RogueDebugTrace __trace( "Object.type_name()", "Object.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[65]);
}

RogueString* RogueString__after__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "String.after(Int32)", "String.rogue", 19 );
  __trace.line = 24;
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueString* RogueString__after_any__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.after_any(Character)", "String.rogue", 26 );
  __trace.line = 27;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 28;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    __trace.line = 29;
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_any__String( RogueString* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "String.after_any(String)", "String.rogue", 31 );
  __trace.line = 32;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 33;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    __trace.line = 34;
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.after_first(Character)", "String.rogue", 36 );
  __trace.line = 37;
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 38;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    __trace.line = 39;
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "String.after_first(String)", "String.rogue", 41 );
  __trace.line = 42;
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 43;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    __trace.line = 44;
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.after_last(Character)", "String.rogue", 46 );
  __trace.line = 47;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 48;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    __trace.line = 49;
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__before__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "String.before(Int32)", "String.rogue", 56 );
  __trace.line = 61;
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((index_0 - 1)) ))));
}

RogueString* RogueString__before_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.before_first(Character)", "String.rogue", 63 );
  __trace.line = 64;
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 65;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    __trace.line = 66;
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "String.before_first(String)", "String.rogue", 68 );
  __trace.line = 69;
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 70;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    __trace.line = 71;
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.before_last(Character)", "String.rogue", 73 );
  __trace.line = 74;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 75;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    __trace.line = 76;
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__String( RogueString* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "String.before_last(String)", "String.rogue", 78 );
  __trace.line = 79;
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 80;
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    __trace.line = 81;
    return (RogueString*)(THIS);
  }
}

RogueLogical RogueString__begins_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.begins_with(Character)", "String.rogue", 83 );
  __trace.line = 84;
  return (RogueLogical)((!!(THIS->character_count) && RogueString_character_at(THIS,0) == ch_0));
}

RogueLogical RogueString__begins_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueDebugTrace __trace( "String.begins_with(String)", "String.rogue", 86 );
  __trace.line = 87;
  RogueInt32 other_count_1 = (other_0->character_count);
  __trace.line = 88;
  return (RogueLogical)((THIS->character_count >= other_count_1 && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, 0 )))));
}

RogueLogical RogueString__contains__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.contains(Character)", "String.rogue", 106 );
  __trace.line = 107;
  return (RogueLogical)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))).exists);
}

RogueLogical RogueString__contains_at__String_Int32( RogueString* THIS, RogueString* substring_0, RogueInt32 at_index_1 )
{
  RogueDebugTrace __trace( "String.contains_at(String,Int32)", "String.rogue", 112 );
  __trace.line = 113;
  if (at_index_1 < 0)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 116;
  RogueInt32 offset = RogueString_set_cursor( THIS, at_index_1 );
  RogueInt32 other_count = substring_0->byte_count;
  if (offset + other_count > THIS->byte_count) return false;
  return (0 == memcmp(THIS->utf8 + offset, substring_0->utf8, other_count));

}

RogueLogical RogueString__ends_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.ends_with(Character)", "String.rogue", 127 );
  __trace.line = 128;
  return (RogueLogical)((THIS->character_count > 0 && RogueString_character_at(THIS,(THIS->character_count - 1)) == ch_0));
}

RogueLogical RogueString__ends_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueDebugTrace __trace( "String.ends_with(String)", "String.rogue", 130 );
  __trace.line = 131;
  RogueInt32 other_count_1 = (other_0->character_count);
  __trace.line = 132;
  return (RogueLogical)(((THIS->character_count >= other_count_1 && other_count_1 > 0) && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, ROGUE_ARG((THIS->character_count - other_count_1)) )))));
}

RogueString* RogueString__from__Int32( RogueString* THIS, RogueInt32 i1_0 )
{
  RogueDebugTrace __trace( "String.from(Int32)", "String.rogue", 134 );
  __trace.line = 135;
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, ROGUE_ARG((THIS->character_count - 1)) ))));
}

RogueString* RogueString__from__Int32_Int32( RogueString* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  RogueDebugTrace __trace( "String.from(Int32,Int32)", "String.rogue", 137 );
  __trace.line = 138;
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  else if (i2_1 >= THIS->character_count)
  {
    __trace.line = 139;
    i2_1 = ((RogueInt32)(THIS->character_count - 1));
  }
  __trace.line = 141;
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  __trace.line = 143;
  if (i1_0 == i2_1)
  {
    return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(RogueString_character_at(THIS,i1_0)) ))));
  }
  __trace.line = 146;
  RogueInt32 byte_i1 = RogueString_set_cursor( THIS, i1_0 );
  RogueInt32 byte_limit = RogueString_set_cursor( THIS, i2_1+1 );
  int new_count = (byte_limit - byte_i1);
  RogueString* result = RogueString_create_with_byte_count( new_count );
  memcpy( result->utf8, THIS->utf8+byte_i1, new_count );
  return RogueString_validate( result );

}

RogueString* RogueString__from_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "String.from_first(Character)", "String.rogue", 154 );
  __trace.line = 155;
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 156;
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  __trace.line = 157;
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG(i_1.value) ))));
}

RogueCharacter RogueString__last( RogueString* THIS )
{
  RogueDebugTrace __trace( "String.last()", "String.rogue", 194 );
  __trace.line = 195;
  return (RogueCharacter)(RogueString_character_at(THIS,(THIS->character_count - 1)));
}

RogueString* RogueString__left_justified__Int32( RogueString* THIS, RogueInt32 spaces_0 )
{
  RogueDebugTrace __trace( "String.left_justified(Int32)", "String.rogue", 197 );
  __trace.line = 198;
  if (THIS->character_count >= spaces_0)
  {
    return (RogueString*)(THIS);
  }
  __trace.line = 200;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_1,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), spaces_0 )))));
  __trace.line = 201;
  RogueStringBuilder__print__String( buffer_1, ROGUE_ARG(THIS) );
  __trace.line = 202;
  {
    RogueInt32 _auto_1_2 = (THIS->character_count);
    RogueInt32 _auto_2_3 = (spaces_0);
    for (;_auto_1_2 <= _auto_2_3;++_auto_1_2)
    {
      RogueStringBuilder__print__Character_Logical( buffer_1, (RogueCharacter)' ', true );
    }
  }
  __trace.line = 204;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_1 ))));
}

RogueString* RogueString__leftmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  RogueDebugTrace __trace( "String.leftmost(Int32)", "String.rogue", 206 );
  __trace.line = 207;
  if (n_0 >= 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((n_0 - 1)) ))));
  }
  else
  {
    __trace.line = 208;
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG(((THIS->character_count + n_0) - 1)) ))));
  }
}

RogueOptionalInt32 RogueString__locate__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueDebugTrace __trace( "String.locate(Character,Int32?)", "String.rogue", 210 );
  __trace.line = 211;
  RogueInt32 i_2 = (0);
  __trace.line = 212;
  RogueInt32 limit_3 = (THIS->character_count);
  __trace.line = 213;
  if (optional_i1_1.exists)
  {
    i_2 = ((RogueInt32)optional_i1_1.value);
  }
  __trace.line = 214;
  while (i_2 < limit_3)
  {
    __trace.line = 215;
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    __trace.line = 216;
    ++i_2;
  }
  __trace.line = 218;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueDebugTrace __trace( "String.locate(String,Int32?)", "String.rogue", 220 );
  __trace.line = 221;
  RogueInt32 other_count_2 = (other_0->character_count);
  __trace.line = 222;
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), optional_i1_1 ))));
  }
  __trace.line = 224;
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  __trace.line = 225;
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  __trace.line = 227;
  RogueInt32 i1_4 = 0;
  __trace.line = 228;
  if (optional_i1_1.exists)
  {
    __trace.line = 229;
    i1_4 = ((RogueInt32)(optional_i1_1.value - 1));
    __trace.line = 230;
    if (i1_4 < -1)
    {
      i1_4 = ((RogueInt32)-1);
    }
  }
  else
  {
    __trace.line = 232;
    i1_4 = ((RogueInt32)-1);
  }
  __trace.line = 235;
  while (++i1_4 < this_limit_3)
  {
    __trace.line = 236;
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i1_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i1_4, true ));
    }
  }
  __trace.line = 239;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 starting_index_1 )
{
  RogueDebugTrace __trace( "String.locate_last(Character,Int32?)", "String.rogue", 241 );
  __trace.line = 242;
  RogueInt32 i_2 = ((THIS->character_count - 1));
  __trace.line = 243;
  if (starting_index_1.exists)
  {
    i_2 = ((RogueInt32)starting_index_1.value);
  }
  __trace.line = 244;
  while (i_2 >= 0)
  {
    __trace.line = 245;
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    __trace.line = 246;
    --i_2;
  }
  __trace.line = 248;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 starting_index_1 )
{
  RogueDebugTrace __trace( "String.locate_last(String,Int32?)", "String.rogue", 250 );
  __trace.line = 251;
  RogueInt32 other_count_2 = (other_0->character_count);
  __trace.line = 252;
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), starting_index_1 ))));
  }
  __trace.line = 254;
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  __trace.line = 255;
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  __trace.line = 257;
  RogueInt32 i_4 = 0;
  __trace.line = 258;
  if (starting_index_1.exists)
  {
    __trace.line = 259;
    i_4 = ((RogueInt32)(starting_index_1.value + 1));
    __trace.line = 260;
    if (i_4 > this_limit_3)
    {
      i_4 = ((RogueInt32)this_limit_3);
    }
  }
  else
  {
    __trace.line = 262;
    i_4 = ((RogueInt32)this_limit_3);
  }
  __trace.line = 265;
  while (--i_4 >= 0)
  {
    __trace.line = 266;
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
    }
  }
  __trace.line = 269;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueString* RogueString__operatorPLUS__Character( RogueString* THIS, RogueCharacter value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Character)", "String.rogue", 312 );
  __trace.line = 313;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0, true )))) ))));
}

RogueString* RogueString__operatorPLUS__Int32( RogueString* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Int32)", "String.rogue", 315 );
  __trace.line = 316;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueLogical RogueString__operatorEQUALSEQUALS__String( RogueString* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "String.operator==(String)", "String.rogue", 318 );
  __trace.line = 319;
  if ((THIS->hash_code != value_0->hash_code || THIS->character_count != value_0->character_count))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 320;
  return (RogueLogical)((0==memcmp(THIS->utf8,value_0->utf8,THIS->byte_count)));
}

RogueInt32 RogueString__operatorLTGT__String( RogueString* THIS, RogueString* other_0 )
{
  RogueDebugTrace __trace( "String.operator<>(String)", "String.rogue", 325 );
  __trace.line = 327;
  if (THIS == other_0) return 0;
  RogueInt32 other_count = other_0->byte_count;
  RogueInt32 limit = THIS->byte_count;
  int result;
  if (limit == other_count)
  {
    // Strings are same length
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0) return 0;
  }
  else
  {
    // Strings differ in length.  Compare the part that matches first.
    if (limit > other_count) limit = other_count;
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0)
    {
      // Equal so far - the shorter string comes before the longer one.
      if (limit == other_count) return 1;
      return -1;
    }
  }
  if (result < 0) return -1;
  else            return 1;

}

RogueString* RogueString__operatorPLUS__Logical( RogueString* THIS, RogueLogical value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Logical)", "String.rogue", 355 );
  __trace.line = 356;
  if (value_0)
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[204] ))));
  }
  else
  {
    __trace.line = 357;
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[193] ))));
  }
}

RogueString* RogueString__operatorPLUS__Int64( RogueString* THIS, RogueInt64 value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Int64)", "String.rogue", 359 );
  __trace.line = 360;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__Object( RogueString* THIS, RogueObject* value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Object)", "String.rogue", 362 );
  __trace.line = 363;
  if (!!(value_0))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM4( 4, value_0 ))) ))));
  }
  else
  {
    __trace.line = 364;
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

RogueString* RogueString__operatorPLUS__Real64( RogueString* THIS, RogueReal64 value_0 )
{
  RogueDebugTrace __trace( "String.operator+(Real64)", "String.rogue", 366 );
  __trace.line = 367;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__String( RogueString* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "String.operator+(String)", "String.rogue", 372 );
  __trace.line = 373;
  if (((void*)value_0) == ((void*)NULL))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
  __trace.line = 374;
  if (THIS->character_count == 0)
  {
    return (RogueString*)(value_0);
  }
  __trace.line = 375;
  if (value_0->character_count == 0)
  {
    return (RogueString*)(THIS);
  }
  __trace.line = 376;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__pluralized__Int32( RogueString* THIS, RogueInt32 quantity_0 )
{
  RogueDebugTrace __trace( "String.pluralized(Int32)", "String.rogue", 381 );
  __trace.line = 407;
  ROGUE_DEF_LOCAL_REF(RogueString*,st_1,(((RogueString__replacing__String_String( ROGUE_ARG(THIS), Rogue_literal_strings[316], ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], quantity_0 )))) )))));
  __trace.line = 409;
  if (((RogueString__contains__Character( st_1, (RogueCharacter)'/' ))))
  {
    __trace.line = 410;
    if (quantity_0 == 1)
    {
      return (RogueString*)(((RogueString__before_first__Character( st_1, (RogueCharacter)'/' ))));
    }
    else
    {
      __trace.line = 411;
      return (RogueString*)(((RogueString__after_last__Character( st_1, (RogueCharacter)'/' ))));
    }
  }
  else
  {
    __trace.line = 414;
    RogueOptionalInt32 alt1_2 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)'(', ROGUE_ARG((RogueOptionalInt32__create())) ))));
    __trace.line = 415;
    if (alt1_2.exists)
    {
      __trace.line = 416;
      RogueOptionalInt32 alt2_3 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)')', ROGUE_ARG(RogueOptionalInt32( (alt1_2.value + 1), true )) ))));
      __trace.line = 417;
      if (!(alt2_3.exists))
      {
        return (RogueString*)(THIS);
      }
      __trace.line = 419;
      if (quantity_0 == 1)
      {
        __trace.line = 420;
        return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))), ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) ))));
      }
      __trace.line = 424;
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( st_1, ROGUE_ARG((alt1_2.value + 1)), ROGUE_ARG((alt2_3.value - 1)) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) )))) )))) ))));
    }
    else
    {
      __trace.line = 426;
      if (quantity_0 == 1)
      {
        return (RogueString*)(st_1);
      }
      __trace.line = 429;
      RogueInt32 index_4 = (0);
      __trace.line = 430;
      RogueInt32 i_5 = (st_1->character_count);
      __trace.line = 431;
      while (i_5 > 0)
      {
        __trace.line = 432;
        --i_5;
        __trace.line = 433;
        if (((RogueCharacter__is_letter( ROGUE_ARG(RogueString_character_at(st_1,i_5)) ))))
        {
          index_4 = ((RogueInt32)i_5);
          goto _auto_31;
        }
      }
      _auto_31:;
      __trace.line = 436;
      if (RogueString_character_at(st_1,index_4) == (RogueCharacter)'s')
      {
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[317] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
      else
      {
        __trace.line = 437;
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[318] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
    }
  }
}

RogueClassStringReader* RogueString__reader( RogueString* THIS )
{
  RogueDebugTrace __trace( "String.reader()", "String.rogue", 442 );
  __trace.line = 443;
  return (RogueClassStringReader*)(((RogueStringReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringReader*,ROGUE_CREATE_OBJECT(StringReader))), ROGUE_ARG(THIS) ))));
}

RogueString* RogueString__replacing__Character_Character( RogueString* THIS, RogueCharacter look_for_0, RogueCharacter replace_with_1 )
{
  RogueDebugTrace __trace( "String.replacing(Character,Character)", "String.rogue", 445 );
  __trace.line = 446;
  if (!(((RogueString__contains__Character( ROGUE_ARG(THIS), look_for_0 )))))
  {
    return (RogueString*)(THIS);
  }
  __trace.line = 448;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG(THIS->character_count) )))));
  __trace.line = 449;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_38_3,(THIS));
    RogueInt32 _auto_39_4 = (0);
    for (;_auto_39_4 < _auto_38_3->character_count;++_auto_39_4)
    {
      RogueCharacter ch_5 = (RogueString_character_at(_auto_38_3,_auto_39_4));
      __trace.line = 450;
      if (ch_5 == look_for_0)
      {
        RogueStringBuilder__print__Character_Logical( result_2, replace_with_1, true );
      }
      else
      {
        __trace.line = 451;
        RogueStringBuilder__print__Character_Logical( result_2, ch_5, true );
      }
    }
  }
  __trace.line = 453;
  return (RogueString*)(((RogueStringBuilder__to_String( result_2 ))));
}

RogueString* RogueString__replacing__String_String( RogueString* THIS, RogueString* look_for_0, RogueString* replace_with_1 )
{
  RogueDebugTrace __trace( "String.replacing(String,String)", "String.rogue", 468 );
  __trace.line = 471;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG((THIS->character_count * 2)) )))));
  __trace.line = 472;
  ROGUE_DEF_LOCAL_REF(RogueString*,st_3,(THIS));
  __trace.line = 473;
  RogueOptionalInt32 i_4 = (((RogueString__locate__String_OptionalInt32( st_3, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 474;
  if (!(i_4.exists))
  {
    return (RogueString*)(st_3);
  }
  __trace.line = 475;
  while (i_4.exists)
  {
    __trace.line = 476;
    RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(((RogueString__before__Int32( st_3, ROGUE_ARG(i_4.value) )))) );
    __trace.line = 477;
    RogueStringBuilder__print__String( buffer_2, replace_with_1 );
    __trace.line = 478;
    st_3 = ((RogueString*)((RogueString__from__Int32( st_3, ROGUE_ARG((i_4.value + look_for_0->character_count)) ))));
    __trace.line = 479;
    i_4 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( st_3, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 481;
  RogueStringBuilder__print__String( buffer_2, st_3 );
  __trace.line = 482;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_2 ))));
}

RogueString* RogueString__rightmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  RogueDebugTrace __trace( "String.rightmost(Int32)", "String.rogue", 500 );
  __trace.line = 501;
  RogueInt32 this_count_1 = (THIS->character_count);
  __trace.line = 502;
  if (n_0 < 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((-(n_0))), ROGUE_ARG((this_count_1 - 1)) ))));
  }
  else
  {
    __trace.line = 503;
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((this_count_1 - n_0)), ROGUE_ARG((this_count_1 - 1)) ))));
  }
}

RogueString_List* RogueString__split__Character( RogueString* THIS, RogueCharacter separator_0 )
{
  RogueDebugTrace __trace( "String.split(Character)", "String.rogue", 505 );
  __trace.line = 506;
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_1,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  __trace.line = 508;
  RogueInt32 i1_2 = (0);
  __trace.line = 509;
  RogueOptionalInt32 i2_3 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  __trace.line = 510;
  while (i2_3.exists)
  {
    __trace.line = 511;
    RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_2, ROGUE_ARG((i2_3.value - 1)) )))) );
    __trace.line = 512;
    i1_2 = ((RogueInt32)(i2_3.value + 1));
    __trace.line = 513;
    i2_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  }
  __trace.line = 516;
  RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32( ROGUE_ARG(THIS), i1_2 )))) );
  __trace.line = 518;
  return (RogueString_List*)(result_1);
}

RogueString* RogueString__to_lowercase( RogueString* THIS )
{
  RogueDebugTrace __trace( "String.to_lowercase()", "String.rogue", 610 );
  __trace.line = 611;
  RogueLogical has_uc_0 = (false);
  __trace.line = 612;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_59_2,(THIS));
    RogueInt32 _auto_60_3 = (0);
    for (;_auto_60_3 < _auto_59_2->character_count;++_auto_60_3)
    {
      RogueCharacter ch_4 = (RogueString_character_at(_auto_59_2,_auto_60_3));
      __trace.line = 613;
      if ((ch_4 >= (RogueCharacter)'A' && ch_4 <= (RogueCharacter)'Z'))
      {
        has_uc_0 = ((RogueLogical)true);
        goto _auto_61;
      }
    }
  }
  _auto_61:;
  __trace.line = 616;
  if (!(has_uc_0))
  {
    return (RogueString*)(THIS);
  }
  __trace.line = 618;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_1,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG(THIS->character_count) )))));
  __trace.line = 619;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_62_5,(THIS));
    RogueInt32 _auto_63_6 = (0);
    for (;_auto_63_6 < _auto_62_5->character_count;++_auto_63_6)
    {
      RogueCharacter ch_7 = (RogueString_character_at(_auto_62_5,_auto_63_6));
      __trace.line = 620;
      if ((ch_7 >= (RogueCharacter)'A' && ch_7 <= (RogueCharacter)'Z'))
      {
        RogueStringBuilder__print__Character_Logical( result_1, ROGUE_ARG(((ch_7 - (RogueCharacter)'A') + (RogueCharacter)'a')), true );
      }
      else
      {
        __trace.line = 621;
        RogueStringBuilder__print__Character_Logical( result_1, ch_7, true );
      }
    }
  }
  __trace.line = 623;
  return (RogueString*)(((RogueStringBuilder__to_String( result_1 ))));
}

RogueString* RogueString__trimmed( RogueString* THIS )
{
  RogueDebugTrace __trace( "String.trimmed()", "String.rogue", 643 );
  __trace.line = 644;
  RogueInt32 i1_0 = (0);
  __trace.line = 645;
  RogueInt32 i2_1 = ((THIS->character_count - 1));
  __trace.line = 647;
  while (i1_0 <= i2_1)
  {
    __trace.line = 648;
    if (RogueString_character_at(THIS,i1_0) <= (RogueCharacter)' ')
    {
      ++i1_0;
    }
    else if (RogueString_character_at(THIS,i2_1) <= (RogueCharacter)' ')
    {
      __trace.line = 649;
      --i2_1;
    }
    else
    {
      __trace.line = 650;
      goto _auto_69;
    }
  }
  _auto_69:;
  __trace.line = 653;
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  __trace.line = 654;
  if ((i1_0 == 0 && i2_1 == (THIS->character_count - 1)))
  {
    return (RogueString*)(THIS);
  }
  __trace.line = 655;
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, i2_1 ))));
}

RogueString_List* RogueString__word_wrapped__Int32( RogueString* THIS, RogueInt32 width_0 )
{
  RogueDebugTrace __trace( "String.word_wrapped(Int32)", "String.rogue", 677 );
  __trace.line = 682;
  return (RogueString_List*)(((RogueString__split__Character( ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueString__word_wrapped__Int32_StringBuilder( ROGUE_ARG(THIS), width_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) )))), (RogueCharacter)10 ))));
}

RogueStringBuilder* RogueString__word_wrapped__Int32_StringBuilder( RogueString* THIS, RogueInt32 width_0, RogueStringBuilder* buffer_1 )
{
  RogueDebugTrace __trace( "String.word_wrapped(Int32,StringBuilder)", "String.rogue", 684 );
  __trace.line = 689;
  RogueInt32 i1_2 = 0;
  RogueInt32 i2_3 = 0;
  __trace.line = 690;
  RogueInt32 len_4 = (THIS->character_count);
  __trace.line = 692;
  if (len_4 == 0)
  {
    return (RogueStringBuilder*)(buffer_1);
  }
  __trace.line = 694;
  RogueLogical needs_newline_5 = (false);
  __trace.line = 695;
  while (i2_3 < len_4)
  {
    __trace.line = 698;
    while ((((i2_3 - i1_2) < width_0 && i2_3 < len_4) && RogueString_character_at(THIS,i2_3) != (RogueCharacter)10))
    {
      ++i2_3;
    }
    __trace.line = 700;
    if ((i2_3 - i1_2) == width_0)
    {
      __trace.line = 701;
      if (i2_3 >= len_4)
      {
        __trace.line = 702;
        i2_3 = ((RogueInt32)len_4);
      }
      else
      {
        __trace.line = 704;
        while (((RogueString_character_at(THIS,i2_3) != (RogueCharacter)' ' && RogueString_character_at(THIS,i2_3) != (RogueCharacter)10) && i2_3 > i1_2))
        {
          --i2_3;
        }
        __trace.line = 705;
        if (i2_3 == i1_2)
        {
          i2_3 = ((RogueInt32)(i1_2 + width_0));
        }
      }
    }
    __trace.line = 709;
    if (needs_newline_5)
    {
      __trace.line = 710;
      RogueStringBuilder__println( buffer_1 );
    }
    __trace.line = 712;
    {
      RogueInt32 i_6 = (i1_2);
      RogueInt32 _auto_9_7 = ((i2_3 - 1));
      for (;i_6 <= _auto_9_7;++i_6)
      {
        RogueStringBuilder__print__Character_Logical( buffer_1, ROGUE_ARG(RogueString_character_at(THIS,i_6)), true );
      }
    }
    __trace.line = 713;
    needs_newline_5 = ((RogueLogical)true);
    __trace.line = 715;
    if (i2_3 == len_4)
    {
      __trace.line = 716;
      return (RogueStringBuilder*)(buffer_1);
    }
    else
    {
      __trace.line = 718;
      switch (RogueString_character_at(THIS,i2_3))
      {
        case (RogueCharacter)' ':
        {
          __trace.line = 720;
          while ((i2_3 < len_4 && RogueString_character_at(THIS,i2_3) == (RogueCharacter)' '))
          {
            ++i2_3;
          }
          __trace.line = 721;
          if ((i2_3 < len_4 && RogueString_character_at(THIS,i2_3) == (RogueCharacter)10))
          {
            ++i2_3;
          }
          break;
        }
        case (RogueCharacter)10:
        {
          __trace.line = 724;
          ++i2_3;
          break;
        }
      }
      __trace.line = 726;
      i1_2 = ((RogueInt32)i2_3);
    }
  }
  __trace.line = 730;
  return (RogueStringBuilder*)(buffer_1);
}

RogueString* RogueStackTrace__to_String( RogueClassStackTrace* THIS )
{
  RogueDebugTrace __trace( "StackTrace.to_String()", "StackTrace.rogue", 52 );
  __trace.line = 53;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueStackTrace__type_name( RogueClassStackTrace* THIS )
{
  RogueDebugTrace __trace( "StackTrace.type_name()", "StackTrace.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[743]);
}

RogueClassStackTrace* RogueStackTrace__init__Int32( RogueClassStackTrace* THIS, RogueInt32 omit_count_0 )
{
  RogueDebugTrace __trace( "StackTrace.init(Int32)", "StackTrace.rogue", 8 );
  __trace.line = 9;
  ++omit_count_0;
  __trace.line = 10;
  RogueDebugTrace* current = Rogue_call_stack;
  while (current && omit_count_0 > 0)
  {
    --omit_count_0;
    current = current->previous_trace;
  }
  if (current) THIS->count = current->count();

  __trace.line = 18;
  THIS->entries = ((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )));
  __trace.line = 19;
  while (current!=0)
  {
    __trace.line = 20;
    RogueString_List__add__String( ROGUE_ARG(THIS->entries), ROGUE_ARG(RogueString_create_from_utf8( current->to_c_string() )) );
    __trace.line = 21;
    current = current->previous_trace;

  }
  __trace.line = 24;
  return (RogueClassStackTrace*)(THIS);
}

void RogueStackTrace__format( RogueClassStackTrace* THIS )
{
  RogueDebugTrace __trace( "StackTrace.format()", "StackTrace.rogue", 24 );
  __trace.line = 25;
  if (THIS->is_formatted)
  {
    return;
  }
  __trace.line = 26;
  THIS->is_formatted = true;
  __trace.line = 28;
  RogueInt32 max_characters_0 = (0);
  __trace.line = 29;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_345_2,(THIS->entries));
    RogueInt32 _auto_346_3 = (0);
    for (;_auto_346_3 < _auto_345_2->count;++_auto_346_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_4,(((RogueString*)(_auto_345_2->data->objects[_auto_346_3]))));
      __trace.line = 30;
      RogueOptionalInt32 sp_1 = (((RogueString__locate__Character_OptionalInt32( entry_4, (RogueCharacter)' ', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      __trace.line = 31;
      if (sp_1.exists)
      {
        max_characters_0 = ((RogueInt32)(RogueMath__max__Int32_Int32( max_characters_0, ROGUE_ARG(sp_1.value) )));
      }
    }
  }
  __trace.line = 34;
  ++max_characters_0;
  __trace.line = 35;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_347_5,(THIS->entries));
    RogueInt32 i_6 = (0);
    for (;i_6 < _auto_347_5->count;++i_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_7,(((RogueString*)(_auto_347_5->data->objects[i_6]))));
      __trace.line = 36;
      if (((RogueString__contains__Character( entry_7, (RogueCharacter)' ' ))))
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->entries->data->objects[i_6] = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__left_justified__Int32( ROGUE_ARG(((RogueString__before_first__Character( entry_7, (RogueCharacter)' ' )))), max_characters_0 )))), ROGUE_ARG(((RogueString__from_first__Character( entry_7, (RogueCharacter)' ' )))) )));
      }
    }
  }
}

void RogueStackTrace__print( RogueClassStackTrace* THIS )
{
  RogueDebugTrace __trace( "StackTrace.print()", "StackTrace.rogue", 41 );
  __trace.line = 42;
  RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassGlobal*)ROGUE_SINGLETON(Global))->global_output_buffer) );
  __trace.line = 43;
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueStringBuilder* RogueStackTrace__print__StringBuilder( RogueClassStackTrace* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "StackTrace.print(StringBuilder)", "StackTrace.rogue", 45 );
  __trace.line = 46;
  RogueStackTrace__format( ROGUE_ARG(THIS) );
  __trace.line = 47;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_348_1,(THIS->entries));
    RogueInt32 _auto_349_2 = (0);
    for (;_auto_349_2 < _auto_348_1->count;++_auto_349_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_3,(((RogueString*)(_auto_348_1->data->objects[_auto_349_2]))));
      __trace.line = 48;
      RogueStringBuilder__println__String( buffer_0, entry_3 );
    }
  }
  __trace.line = 50;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassStackTrace* RogueStackTrace__init_object( RogueClassStackTrace* THIS )
{
  RogueDebugTrace __trace( "StackTrace.init_object()", "StackTrace.rogue", 1 );
  return (RogueClassStackTrace*)(THIS);
}

RogueInt32 RogueInt32__hash_code( RogueInt32 THIS )
{
  RogueDebugTrace __trace( "Int32.hash_code()", "Primitives.rogue", 280 );
  __trace.line = 281;
  return (RogueInt32)(THIS);
}

RogueString* RogueInt32__to_String( RogueInt32 THIS )
{
  RogueDebugTrace __trace( "Int32.to_String()", "Primitives.rogue", 289 );
  __trace.line = 290;
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueCharacter RogueInt32__to_digit( RogueInt32 THIS )
{
  RogueDebugTrace __trace( "Int32.to_digit()", "Primitives.rogue", 292 );
  __trace.line = 293;
  if ((THIS >= 0 && THIS <= 9))
  {
    return (RogueCharacter)((((RogueCharacter)(THIS)) + (RogueCharacter)'0'));
  }
  __trace.line = 294;
  if ((THIS >= 10 && THIS <= 35))
  {
    return (RogueCharacter)((((RogueCharacter)((THIS - 10))) + (RogueCharacter)'A'));
  }
  __trace.line = 295;
  return (RogueCharacter)((RogueCharacter)'0');
}

RogueStringBuilder* RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( RogueInt64 THIS, RogueInt32 base_0, RogueInt32 digits_1, RogueStringBuilder* buffer_2 )
{
  RogueDebugTrace __trace( "Int64.print_in_power2_base(Int32,Int32,StringBuilder)", "Primitives.rogue", 205 );
  __trace.line = 206;
  RogueInt32 bits_3 = (0);
  __trace.line = 207;
  RogueInt32 temp_4 = (base_0);
  __trace.line = 208;
  while (temp_4 > 1)
  {
    ++bits_3;
    temp_4 = ((RogueInt32)(temp_4 >> 1));
  }
  __trace.line = 210;
  if (digits_1 > 1)
  {
    RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG((THIS >> ((RogueInt64)(bits_3)))), base_0, ROGUE_ARG((digits_1 - 1)), buffer_2 );
  }
  __trace.line = 211;
  RogueStringBuilder__print__Character_Logical( buffer_2, ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG(((RogueInt32)((THIS & ((RogueInt64)((base_0 - 1))))))) )))), true );
  __trace.line = 212;
  return (RogueStringBuilder*)(buffer_2);
}

RogueString* RogueInt64__to_hex_string__Int32( RogueInt64 THIS, RogueInt32 digits_0 )
{
  RogueDebugTrace __trace( "Int64.to_hex_string(Int32)", "Primitives.rogue", 226 );
  __trace.line = 227;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG(THIS), 16, digits_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTypeInfo__type_name( RogueTypeInfo* THIS )
{
  RogueDebugTrace __trace( "TypeInfo.type_name()", "TypeInfo.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[68]);
}

RogueTypeInfo* RogueTypeInfo__init__Int32_String( RogueTypeInfo* THIS, RogueInt32 _auto_10_0, RogueString* _auto_11_1 )
{
  RogueDebugTrace __trace( "TypeInfo.init(Int32,String)", "TypeInfo.rogue", 7 );
  THIS->name = _auto_11_1;
  THIS->index = _auto_10_0;
  __trace.line = 9;
  return (RogueTypeInfo*)(THIS);
}

RogueTypeInfo* RogueTypeInfo__init_object( RogueTypeInfo* THIS )
{
  RogueDebugTrace __trace( "TypeInfo.init_object()", "TypeInfo.rogue", 1 );
  return (RogueTypeInfo*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__init( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.init()", "StringBuilder.rogue", 14 );
  __trace.line = 15;
  RogueStringBuilder__init__Int32( ROGUE_ARG(THIS), 40 );
  __trace.line = 17;
  return (RogueStringBuilder*)(THIS);
}

RogueString* RogueStringBuilder__to_String( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.to_String()", "StringBuilder.rogue", 398 );
  __trace.line = 399;
  return (RogueString*)(RogueString_create_from_utf8( (char*)THIS->utf8->data->bytes, THIS->utf8->count ));
}

RogueString* RogueStringBuilder__type_name( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.type_name()", "StringBuilder.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[67]);
}

RogueStringBuilder* RogueStringBuilder__init__Int32( RogueStringBuilder* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "StringBuilder.init(Int32)", "StringBuilder.rogue", 17 );
  __trace.line = 18;
  THIS->utf8 = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), initial_capacity_0 )));
  __trace.line = 20;
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__clear( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.clear()", "StringBuilder.rogue", 30 );
  __trace.line = 31;
  RogueByte_List__clear( ROGUE_ARG(THIS->utf8) );
  __trace.line = 32;
  THIS->count = 0;
  __trace.line = 33;
  THIS->at_newline = true;
  __trace.line = 34;
  THIS->cursor_index = 0;
  __trace.line = 35;
  THIS->cursor_offset = 0;
  __trace.line = 36;
  return (RogueStringBuilder*)(THIS);
}

RogueCharacter RogueStringBuilder__get__Int32( RogueStringBuilder* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "StringBuilder.get(Int32)", "StringBuilder.rogue", 46 );
  __trace.line = 47;
  if (index_0 == 0)
  {
    __trace.line = 48;
    THIS->cursor_offset = 0;
    __trace.line = 49;
    THIS->cursor_index = 0;
  }
  else if (index_0 == (THIS->count - 1))
  {
    __trace.line = 51;
    THIS->cursor_offset = THIS->utf8->count;
    __trace.line = 52;
    THIS->cursor_index = THIS->count;
  }
  __trace.line = 55;
  while (THIS->cursor_index < index_0)
  {
    __trace.line = 56;
    ++THIS->cursor_offset;
    __trace.line = 57;
    while ((((RogueInt32)(THIS->utf8->data->bytes[THIS->cursor_offset])) & 192) == 128)
    {
      ++THIS->cursor_offset;
    }
    __trace.line = 58;
    ++THIS->cursor_index;
  }
  __trace.line = 61;
  while (THIS->cursor_index > index_0)
  {
    __trace.line = 62;
    --THIS->cursor_offset;
    __trace.line = 63;
    while ((((RogueInt32)(THIS->utf8->data->bytes[THIS->cursor_offset])) & 192) == 128)
    {
      --THIS->cursor_offset;
    }
    __trace.line = 64;
    --THIS->cursor_index;
  }
  __trace.line = 67;
  RogueByte ch_1 = (THIS->utf8->data->bytes[THIS->cursor_offset]);
  __trace.line = 68;
  if (!!((((RogueInt32)(ch_1)) & 128)))
  {
    __trace.line = 69;
    if (!!((((RogueInt32)(ch_1)) & 32)))
    {
      __trace.line = 70;
      if (!!((((RogueInt32)(ch_1)) & 16)))
      {
        __trace.line = 71;
        return (RogueCharacter)(((RogueCharacter)((((((((RogueInt32)(ch_1)) & 7) << 18) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63) << 12)) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 2)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 3)])) & 63)))));
      }
      else
      {
        __trace.line = 74;
        return (RogueCharacter)(((RogueCharacter)(((((((RogueInt32)(ch_1)) & 15) << 12) | ((((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 2)])) & 63)))));
      }
    }
    else
    {
      __trace.line = 77;
      return (RogueCharacter)(((RogueCharacter)((((((RogueInt32)(ch_1)) & 31) << 6) | (((RogueInt32)(THIS->utf8->data->bytes[(THIS->cursor_offset + 1)])) & 63)))));
    }
  }
  else
  {
    __trace.line = 80;
    return (RogueCharacter)(((RogueCharacter)(ch_1)));
  }
}

RogueStringBuilder* RogueStringBuilder__insert_spaces__Int32_Int32( RogueStringBuilder* THIS, RogueInt32 index_0, RogueInt32 spaces_1 )
{
  RogueDebugTrace __trace( "StringBuilder.insert_spaces(Int32,Int32)", "StringBuilder.rogue", 98 );
  __trace.line = 99;
  if (((spaces_1 > 0 && index_0 >= 0) && index_0 < THIS->count))
  {
    __trace.line = 100;
    RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( ROGUE_ARG(THIS->utf8), index_0, ROGUE_ARG((RogueOptionalInt32__create())), spaces_1, ROGUE_ARG(RogueOptionalByte( ((RogueByte)((RogueCharacter)' ')), true )) );
    __trace.line = 101;
    THIS->count += 2;
  }
  __trace.line = 103;
  return (RogueStringBuilder*)(THIS);
}

RogueLogical RogueStringBuilder__needs_indent( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.needs_indent()", "StringBuilder.rogue", 117 );
  __trace.line = 118;
  return (RogueLogical)((THIS->at_newline && THIS->indent > 0));
}

RogueStringBuilder* RogueStringBuilder__print__Character_Logical( RogueStringBuilder* THIS, RogueCharacter value_0, RogueLogical formatted_1 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Character,Logical)", "StringBuilder.rogue", 137 );
  __trace.line = 138;
  if (formatted_1)
  {
    __trace.line = 139;
    if (value_0 == (RogueCharacter)10)
    {
      THIS->at_newline = true;
    }
    else if (((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) ))))
    {
      __trace.line = 140;
      RogueStringBuilder__print_indent( ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 143;
  ++THIS->count;
  __trace.line = 144;
  if (value_0 <= (RogueCharacter__create__Int32( 127 )))
  {
    __trace.line = 145;
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)(value_0))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 2047 )))
  {
    __trace.line = 147;
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(192)) | (value_0 >> ((RogueCharacter)(6))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 65535 )))
  {
    __trace.line = 149;
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(224)) | (value_0 >> ((RogueCharacter)(12))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 1114111 )))
  {
    __trace.line = 151;
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(240)) | (value_0 >> ((RogueCharacter)(18))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(63))))))) );
    __trace.line = 152;
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | ((value_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) )))), ROGUE_ARG(((RogueByte)((((RogueCharacter)(128)) | (value_0 & ((RogueCharacter)(63))))))) );
  }
  else
  {
    __trace.line = 154;
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)'?'))) );
  }
  __trace.line = 156;
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Int32)", "StringBuilder.rogue", 161 );
  __trace.line = 162;
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt64)(value_0))) ))));
}

RogueStringBuilder* RogueStringBuilder__print__Logical( RogueStringBuilder* THIS, RogueLogical value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Logical)", "StringBuilder.rogue", 164 );
  __trace.line = 165;
  if (value_0)
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[204] ))));
  }
  else
  {
    __trace.line = 166;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[193] ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Int64( RogueStringBuilder* THIS, RogueInt64 value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Int64)", "StringBuilder.rogue", 168 );
  __trace.line = 169;
  if (value_0 == (((RogueInt64)(1)) << ((RogueInt64)(63))))
  {
    __trace.line = 170;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[12] ))));
  }
  else if (value_0 < ((RogueInt64)(0)))
  {
    __trace.line = 172;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    __trace.line = 173;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((-(value_0))) ))));
  }
  else if (value_0 >= ((RogueInt64)(10)))
  {
    __trace.line = 175;
    RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((value_0 / ((RogueInt64)(10)))) );
    __trace.line = 176;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + (RogueMath__mod__Int64_Int64( value_0, ROGUE_ARG(((RogueInt64)(10))) )))))), true ))));
  }
  else
  {
    __trace.line = 178;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + value_0)))), true ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Object( RogueStringBuilder* THIS, RogueObject* value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Object)", "StringBuilder.rogue", 182 );
  __trace.line = 183;
  if (!!(value_0))
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM4( 4, value_0 ))) ))));
  }
  __trace.line = 184;
  return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
}

RogueStringBuilder* RogueStringBuilder__print__Real64( RogueStringBuilder* THIS, RogueReal64 value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Real64)", "StringBuilder.rogue", 186 );
  __trace.line = 187;
  if (value_0 == 0.0)
  {
    __trace.line = 188;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[907] );
    __trace.line = 189;
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_infinite( value_0 ))))
  {
    __trace.line = 191;
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[723] );
    }
    else
    {
      __trace.line = 192;
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[195] );
    }
    __trace.line = 193;
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    __trace.line = 195;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[197] );
    __trace.line = 196;
    return (RogueStringBuilder*)(THIS);
  }
  __trace.line = 199;
  if (value_0 < 0.0)
  {
    __trace.line = 200;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    __trace.line = 201;
    value_0 = ((RogueReal64)(-(value_0)));
  }
  __trace.line = 205;
  if (value_0 >= 1.0e15)
  {
    __trace.line = 206;
    RogueInt32 pow10_1 = (0);
    __trace.line = 207;
    while (value_0 >= 10.0)
    {
      __trace.line = 208;
      value_0 /= 10.0;
      __trace.line = 209;
      ++pow10_1;
    }
    __trace.line = 212;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_1 ))));
  }
  __trace.line = 215;
  if (value_0 < 0.00001)
  {
    __trace.line = 216;
    RogueInt32 pow10_2 = (0);
    __trace.line = 217;
    while (value_0 < 0.1)
    {
      __trace.line = 218;
      value_0 *= 10.0;
      __trace.line = 219;
      --pow10_2;
    }
    __trace.line = 222;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_2 ))));
  }
  __trace.line = 226;
  {
    RogueInt32 decimal_count_3 = (1);
    RogueInt32 _auto_12_4 = (18);
    for (;decimal_count_3 <= _auto_12_4;++decimal_count_3)
    {
      __trace.line = 227;
      RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_count_3 );
      __trace.line = 228;
      if (((RogueStringBuilder__scan_work_bytes( ROGUE_ARG(THIS) ))) == value_0)
      {
        goto _auto_356;
      }
    }
  }
  _auto_356:;
  __trace.line = 231;
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  __trace.line = 233;
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  RogueDebugTrace __trace( "StringBuilder.print(Real64,Int32)", "StringBuilder.rogue", 235 );
  __trace.line = 236;
  if (((RogueReal64__is_infinite( value_0 ))))
  {
    __trace.line = 237;
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[723] );
    }
    else
    {
      __trace.line = 238;
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[195] );
    }
    __trace.line = 239;
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    __trace.line = 241;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[197] );
    __trace.line = 242;
    return (RogueStringBuilder*)(THIS);
  }
  __trace.line = 245;
  if (value_0 < 0.0)
  {
    __trace.line = 246;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    __trace.line = 247;
    value_0 = ((RogueReal64)(-(value_0)));
  }
  __trace.line = 250;
  RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_places_1 );
  __trace.line = 251;
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  __trace.line = 253;
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.print(String)", "StringBuilder.rogue", 255 );
  __trace.line = 256;
  if (!!(value_0))
  {
    __trace.line = 257;
    if (!!(THIS->indent))
    {
      __trace.line = 258;
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_357_3,(value_0));
        RogueInt32 _auto_358_4 = (0);
        for (;_auto_358_4 < _auto_357_3->character_count;++_auto_358_4)
        {
          RogueCharacter ch_5 = (RogueString_character_at(_auto_357_3,_auto_358_4));
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ch_5, true );
        }
      }
    }
    else
    {
      __trace.line = 260;
      {
        RogueInt32 i_1 = (0);
        RogueInt32 _auto_13_2 = (value_0->byte_count);
        for (;i_1 < _auto_13_2;++i_1)
        {
          RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(value_0->utf8[ i_1 ]) );
        }
      }
      __trace.line = 261;
      THIS->count += value_0->character_count;
      __trace.line = 262;
      if ((!!(value_0->character_count) && ((RogueString__last( value_0 ))) == (RogueCharacter)10))
      {
        THIS->at_newline = true;
      }
    }
    __trace.line = 264;
    return (RogueStringBuilder*)(THIS);
  }
  else
  {
    __trace.line = 266;
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

void RogueStringBuilder__print_indent( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.print_indent()", "StringBuilder.rogue", 269 );
  __trace.line = 270;
  if ((!(((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) )))) || THIS->indent == 0))
  {
    return;
  }
  __trace.line = 271;
  {
    RogueInt32 i_0 = (1);
    RogueInt32 _auto_14_1 = (THIS->indent);
    for (;i_0 <= _auto_14_1;++i_0)
    {
      RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)' '))) );
    }
  }
  __trace.line = 272;
  THIS->count += THIS->indent;
  __trace.line = 273;
  THIS->at_newline = false;
}

RogueStringBuilder* RogueStringBuilder__print_to_work_bytes__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  RogueDebugTrace __trace( "StringBuilder.print_to_work_bytes(Real64,Int32)", "StringBuilder.rogue", 275 );
  __trace.line = 276;
  RogueByte_List__clear( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  __trace.line = 277;
  RogueReal64 whole_2 = (floor((double)value_0));
  __trace.line = 278;
  value_0 -= whole_2;
  __trace.line = 279;
  while (whole_2 >= 10.0)
  {
    __trace.line = 280;
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
    __trace.line = 281;
    whole_2 /= 10.0;
  }
  __trace.line = 283;
  RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
  __trace.line = 285;
  RogueByte_List__reverse( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  __trace.line = 287;
  if (decimal_places_1 != 0)
  {
    __trace.line = 288;
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'.'))) );
    __trace.line = 289;
    {
      RogueInt32 _auto_15_3 = (1);
      RogueInt32 _auto_16_4 = (decimal_places_1);
      for (;_auto_15_3 <= _auto_16_4;++_auto_15_3)
      {
        __trace.line = 290;
        value_0 *= 10.0;
        __trace.line = 291;
        RogueInt32 digit_5 = (((RogueInt32)(floor((double)value_0))));
        __trace.line = 292;
        value_0 -= ((RogueReal64)(digit_5));
        __trace.line = 293;
        RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)'0' + ((RogueCharacter)(digit_5)))))) );
      }
    }
  }
  __trace.line = 297;
  if (value_0 >= 0.5)
  {
    __trace.line = 298;
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'5'))) );
    __trace.line = 299;
    RogueStringBuilder__round_off_work_bytes( ROGUE_ARG(THIS) );
  }
  __trace.line = 302;
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__print_work_bytes( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.print_work_bytes()", "StringBuilder.rogue", 304 );
  __trace.line = 305;
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_359_0,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_360_1 = (0);
    for (;_auto_360_1 < _auto_359_0->count;++_auto_360_1)
    {
      RogueByte digit_2 = (_auto_359_0->data->bytes[_auto_360_1]);
      __trace.line = 306;
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(digit_2))), true );
    }
  }
}

RogueStringBuilder* RogueStringBuilder__println( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.println()", "StringBuilder.rogue", 309 );
  __trace.line = 310;
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.println(Int32)", "StringBuilder.rogue", 324 );
  __trace.line = 325;
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "StringBuilder.println(String)", "StringBuilder.rogue", 342 );
  __trace.line = 343;
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__reserve__Int32( RogueStringBuilder* THIS, RogueInt32 additional_bytes_0 )
{
  RogueDebugTrace __trace( "StringBuilder.reserve(Int32)", "StringBuilder.rogue", 345 );
  __trace.line = 346;
  RogueByte_List__reserve__Int32( ROGUE_ARG(THIS->utf8), additional_bytes_0 );
  __trace.line = 347;
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__round_off_work_bytes( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.round_off_work_bytes()", "StringBuilder.rogue", 349 );
  __trace.line = 350;
  if (((RogueCharacter)(((RogueByte_List__remove_last( ROGUE_ARG(RogueStringBuilder_work_bytes) ))))) >= (RogueCharacter)'5')
  {
    __trace.line = 351;
    RogueInt32 i_0 = ((RogueStringBuilder_work_bytes->count - 1));
    __trace.line = 352;
    while (i_0 >= 0)
    {
      __trace.line = 353;
      if (((RogueCharacter)(RogueStringBuilder_work_bytes->data->bytes[i_0])) != (RogueCharacter)'.')
      {
        __trace.filename = "List.rogue";
        __trace.line = 111;
        RogueStringBuilder_work_bytes->data->bytes[i_0] = ((RogueByte)((((RogueInt32)(RogueStringBuilder_work_bytes->data->bytes[i_0])) + 1)));
        __trace.filename = "StringBuilder.rogue";
        __trace.line = 355;
        if (((RogueCharacter)(RogueStringBuilder_work_bytes->data->bytes[i_0])) == ((RogueCharacter)'9' + ((RogueCharacter)(1))))
        {
          __trace.filename = "List.rogue";
          __trace.line = 308;
          RogueStringBuilder_work_bytes->data->bytes[i_0] = ((RogueByte)((RogueCharacter)'0'));
        }
        else
        {
          __trace.filename = "StringBuilder.rogue";
          __trace.line = 356;
          return;
        }
      }
      __trace.line = 358;
      --i_0;
    }
    __trace.line = 360;
    RogueByte_List__insert__Byte_Int32( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'1'))), 0 );
  }
}

RogueReal64 RogueStringBuilder__scan_work_bytes( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.scan_work_bytes()", "StringBuilder.rogue", 363 );
  __trace.line = 364;
  RogueReal64 whole_0 = (0.0);
  __trace.line = 365;
  RogueReal64 decimal_1 = (0.0);
  __trace.line = 366;
  RogueInt32 decimal_count_2 = (0);
  __trace.line = 367;
  RogueLogical scanning_whole_3 = (true);
  __trace.line = 368;
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_361_4,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_362_5 = (0);
    for (;_auto_362_5 < _auto_361_4->count;++_auto_362_5)
    {
      RogueByte digit_6 = (_auto_361_4->data->bytes[_auto_362_5]);
      __trace.line = 369;
      if (scanning_whole_3)
      {
        __trace.line = 370;
        if (((RogueCharacter)(digit_6)) == (RogueCharacter)'.')
        {
          scanning_whole_3 = ((RogueLogical)false);
        }
        else
        {
          __trace.line = 371;
          whole_0 = ((RogueReal64)((whole_0 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        }
      }
      else
      {
        __trace.line = 373;
        decimal_1 = ((RogueReal64)((decimal_1 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        __trace.line = 374;
        ++decimal_count_2;
      }
    }
  }
  __trace.line = 377;
  return (RogueReal64)((whole_0 + (decimal_1 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)(decimal_count_2)))))));
}

RogueStringBuilder* RogueStringBuilder__init_object( RogueStringBuilder* THIS )
{
  RogueDebugTrace __trace( "StringBuilder.init_object()", "StringBuilder.rogue", 1 );
  __trace.line = 11;
  THIS->at_newline = true;
  __trace.line = 1;
  return (RogueStringBuilder*)(THIS);
}

RogueByte_List* RogueByte_List__init( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueByte_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueByte_List*)(THIS);
}

RogueString* RogueByte_List__to_String( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_363_2,(THIS));
    RogueInt32 _auto_364_3 = (0);
    for (;_auto_364_3 < _auto_363_2->count;++_auto_364_3)
    {
      RogueByte value_4 = (_auto_363_2->data->bytes[_auto_364_3]);
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if ((false))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueByte__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueByte_List__type_name( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[810]);
}

RogueByte_List* RogueByte_List__init_object( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].init_object()", "List.rogue", 4 );
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__init__Int32( RogueByte_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Byte[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueByte) );
  }
  __trace.line = 16;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__add__Byte( RogueByte_List* THIS, RogueByte value_0 )
{
  RogueDebugTrace __trace( "Byte[].add(Byte)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->bytes[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueByte_List*)(THIS);
}

RogueInt32 RogueByte_List__capacity( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueByte_List* RogueByte_List__clear( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueByte_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__ensure_capacity__Int32( RogueByte_List* THIS, RogueInt32 desired_capacity_0 )
{
  RogueDebugTrace __trace( "Byte[].ensure_capacity(Int32)", "List.rogue", 57 );
  __trace.line = 58;
  return (RogueByte_List*)(((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueByte_List* RogueByte_List__expand_to_count__Int32( RogueByte_List* THIS, RogueInt32 minimum_count_0 )
{
  RogueDebugTrace __trace( "Byte[].expand_to_count(Int32)", "List.rogue", 60 );
  __trace.line = 62;
  if (THIS->count < minimum_count_0)
  {
    __trace.line = 63;
    RogueByte_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    __trace.line = 64;
    THIS->count = minimum_count_0;
  }
  __trace.line = 66;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__expand_to_include__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Byte[].expand_to_include(Int32)", "List.rogue", 68 );
  __trace.line = 70;
  return (RogueByte_List*)(((RogueByte_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

void RogueByte_List__discard_from__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Byte[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  RogueByte zero_value_1 = 0;
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->bytes[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueByte_List* RogueByte_List__insert__Byte_Int32( RogueByte_List* THIS, RogueByte value_0, RogueInt32 before_index_1 )
{
  RogueDebugTrace __trace( "Byte[].insert(Byte,Int32)", "List.rogue", 116 );
  __trace.line = 117;
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  __trace.line = 119;
  if (before_index_1 >= THIS->count)
  {
    __trace.line = 120;
    return (RogueByte_List*)(((RogueByte_List__add__Byte( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    __trace.line = 122;
    RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    __trace.line = 125;
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    __trace.line = 126;
    ++THIS->count;
    __trace.line = 129;
    THIS->data->bytes[before_index_1] = value_0;
  }
  __trace.line = 131;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__reserve__Int32( RogueByte_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Byte[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueByte) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueByte_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueByte) )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueByte_List*)(THIS);
}

RogueByte RogueByte_List__remove_at__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Byte[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  RogueByte result_1 = (THIS->data->bytes[index_0]);
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  RogueByte zero_value_2 = 0;
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->bytes[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueByte)(result_1);
}

RogueByte RogueByte_List__remove_last( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].remove_last()", "List.rogue", 286 );
  __trace.line = 287;
  return (RogueByte)(((RogueByte_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse( RogueByte_List* THIS )
{
  RogueDebugTrace __trace( "Byte[].reverse()", "List.rogue", 289 );
  __trace.line = 290;
  return (RogueByte_List*)(((RogueByte_List__reverse__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse__Int32_Int32( RogueByte_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  RogueDebugTrace __trace( "Byte[].reverse(Int32,Int32)", "List.rogue", 292 );
  __trace.line = 293;
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  __trace.line = 294;
  if (i2_1 >= THIS->count)
  {
    i2_1 = ((RogueInt32)(THIS->count - 1));
  }
  __trace.line = 296;
  ROGUE_DEF_LOCAL_REF(RogueArray*,_data_2,(THIS->data));
  __trace.line = 297;
  while (i1_0 < i2_1)
  {
    __trace.line = 298;
    RogueByte temp_3 = (_data_2->bytes[i1_0]);
    __trace.line = 299;
    _data_2->bytes[i1_0] = _data_2->bytes[i2_1];
    __trace.line = 300;
    _data_2->bytes[i2_1] = temp_3;
    __trace.line = 301;
    ++i1_0;
    __trace.line = 302;
    --i2_1;
  }
  __trace.line = 305;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( RogueByte_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalByte fill_3 )
{
  RogueDebugTrace __trace( "Byte[].shift(Int32,Int32?,Int32,Byte?)", "List.rogue", 310 );
  __trace.line = 311;
  if (delta_2 == 0)
  {
    return (RogueByte_List*)(THIS);
  }
  __trace.line = 313;
  RogueInt32 n_4 = 0;
  __trace.line = 314;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    __trace.line = 315;
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  __trace.line = 317;
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  __trace.line = 318;
  RogueByte_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  __trace.line = 319;
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  __trace.line = 320;
  if (fill_3.exists)
  {
    __trace.line = 321;
    RogueByte value_6 = (fill_3.value);
    __trace.line = 322;
    if (delta_2 > 0)
    {
      __trace.line = 323;
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_19_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_19_8;++i_7)
        {
          THIS->data->bytes[i_7] = value_6;
        }
      }
    }
    else
    {
      __trace.line = 325;
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_20_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_20_10;++i_9)
        {
          THIS->data->bytes[i_9] = value_6;
        }
      }
    }
  }
  __trace.line = 328;
  return (RogueByte_List*)(THIS);
}

RogueString* RogueByte__to_String( RogueByte THIS )
{
  RogueDebugTrace __trace( "Byte.to_String()", "Primitives.rogue", 429 );
  __trace.line = 430;
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(THIS))) ))));
}

RogueString* RogueGenericList__type_name( RogueClassGenericList* THIS )
{
  RogueDebugTrace __trace( "GenericList.type_name()", "List.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[70]);
}

RogueClassGenericList* RogueGenericList__init_object( RogueClassGenericList* THIS )
{
  RogueDebugTrace __trace( "GenericList.init_object()", "List.rogue", 1 );
  return (RogueClassGenericList*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__init( RogueCharacter_List* THIS )
{
  RogueDebugTrace __trace( "Character[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCharacter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCharacter_List*)(THIS);
}

RogueString* RogueCharacter_List__to_String( RogueCharacter_List* THIS )
{
  RogueDebugTrace __trace( "Character[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_397_2,(THIS));
    RogueInt32 _auto_398_3 = (0);
    for (;_auto_398_3 < _auto_397_2->count;++_auto_398_3)
    {
      RogueCharacter value_4 = (_auto_397_2->data->characters[_auto_398_3]);
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if ((false))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCharacter__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCharacter_List__type_name( RogueCharacter_List* THIS )
{
  RogueDebugTrace __trace( "Character[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[811]);
}

RogueCharacter_List* RogueCharacter_List__init_object( RogueCharacter_List* THIS )
{
  RogueDebugTrace __trace( "Character[].init_object()", "List.rogue", 4 );
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__init__Int32( RogueCharacter_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Character[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueCharacter) );
  }
  __trace.line = 16;
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__add__Character( RogueCharacter_List* THIS, RogueCharacter value_0 )
{
  RogueDebugTrace __trace( "Character[].add(Character)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCharacter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->characters[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCharacter_List*)(THIS);
}

RogueInt32 RogueCharacter_List__capacity( RogueCharacter_List* THIS )
{
  RogueDebugTrace __trace( "Character[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCharacter_List* RogueCharacter_List__reserve__Int32( RogueCharacter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Character[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCharacter_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCharacter_List*)(THIS);
}

RogueLogical RogueCharacter__is_alphanumeric( RogueCharacter THIS )
{
  RogueDebugTrace __trace( "Character.is_alphanumeric()", "Primitives.rogue", 347 );
  __trace.line = 348;
  return (RogueLogical)((((THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9') || (THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z')) || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_identifier( RogueCharacter THIS )
{
  RogueDebugTrace __trace( "Character.is_identifier()", "Primitives.rogue", 352 );
  __trace.line = 353;
  return (RogueLogical)(((((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')) || THIS == (RogueCharacter)'_') || (THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9')));
}

RogueLogical RogueCharacter__is_letter( RogueCharacter THIS )
{
  RogueDebugTrace __trace( "Character.is_letter()", "Primitives.rogue", 358 );
  __trace.line = 359;
  return (RogueLogical)(((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  RogueDebugTrace __trace( "Character.is_number(Int32)", "Primitives.rogue", 362 );
  __trace.line = 363;
  return (RogueLogical)(((RogueCharacter__to_number__Int32( ROGUE_ARG(THIS), base_0 ))) != -1);
}

RogueString* RogueCharacter__to_String( RogueCharacter THIS )
{
  RogueDebugTrace __trace( "Character.to_String()", "Primitives.rogue", 368 );
  __trace.line = 369;
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueInt32 RogueCharacter__to_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  RogueDebugTrace __trace( "Character.to_number(Int32)", "Primitives.rogue", 380 );
  __trace.line = 381;
  if ((THIS >= (RogueCharacter)'0' && THIS < ((RogueCharacter)'0' + ((RogueCharacter)(base_0)))))
  {
    return (RogueInt32)(((RogueInt32)((THIS - (RogueCharacter)'0'))));
  }
  __trace.line = 382;
  if ((THIS >= (RogueCharacter)'a' && THIS < ((RogueCharacter)'a' + ((RogueCharacter)((base_0 - 10))))))
  {
    return (RogueInt32)(((RogueInt32)(((THIS - (RogueCharacter)'a') + ((RogueCharacter)(10))))));
  }
  __trace.line = 383;
  if ((THIS >= (RogueCharacter)'A' && THIS < ((RogueCharacter)'A' + ((RogueCharacter)((base_0 - 10))))))
  {
    return (RogueInt32)(((RogueInt32)(((THIS - (RogueCharacter)'A') + ((RogueCharacter)(10))))));
  }
  __trace.line = 384;
  return (RogueInt32)(-1);
}

RogueLogical RogueReal64__is_infinite( RogueReal64 THIS )
{
  RogueDebugTrace __trace( "Real64.is_infinite()", "Primitives.rogue", 65 );
  __trace.line = 67;
  return (RogueLogical)((THIS == THIS && (THIS - THIS) != 0.0));
}

RogueLogical RogueReal64__is_not_a_number( RogueReal64 THIS )
{
  RogueDebugTrace __trace( "Real64.is_not_a_number()", "Primitives.rogue", 72 );
  __trace.line = 73;
  return (RogueLogical)(THIS != THIS);
}

RogueClassTable_String_String_* RogueTable_String_String___init( RogueClassTable_String_String_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_String___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_String_*)(THIS);
}

RogueString* RogueTable_String_String___to_String( RogueClassTable_String_String_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String___type_name( RogueClassTable_String_String_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[744]);
}

RogueClassTable_String_String_* RogueTable_String_String___init__Int32( RogueClassTable_String_String_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,String>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_String__List__init__Int32_TableEntry_String_String_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_String__List*,ROGUE_CREATE_OBJECT(TableEntry_String_String__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_String_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_String_*)(THIS);
}

RogueClassTableEntry_String_String_* RogueTable_String_String___find__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,String>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_2,(((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_String_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_String_*)(((RogueClassTableEntry_String_String_*)(NULL)));
}

RogueString* RogueTable_String_String___get__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,String>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_1,(((RogueTable_String_String___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueString*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueString*,default_value_2,0);
    __trace.line = 62;
    return (RogueString*)(default_value_2);
  }
}

RogueClassTable_String_String_* RogueTable_String_String___set__String_String( RogueClassTable_String_String_* THIS, RogueString* key_0, RogueString* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,String>>.set(String,String)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_4,(((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_String_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_String_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_String_*)((RogueTableEntry_String_String___init__String_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_String_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_String_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String___print_to__StringBuilder( RogueClassTable_String_String_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,String>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM17( 16, ROGUE_ARG(THIS), key_2 ))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_String_* RogueTable_String_String___init_object( RogueClassTable_String_String_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueString_List* RogueString_List__init( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueString_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__to_String( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_444_2,(THIS));
    RogueInt32 _auto_445_3 = (0);
    for (;_auto_445_3 < _auto_444_2->count;++_auto_445_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_4,(((RogueString*)(_auto_444_2->data->objects[_auto_445_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, value_4 );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueString_List__type_name( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[812]);
}

RogueString_List* RogueString_List__init_object( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].init_object()", "List.rogue", 4 );
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__init__Int32( RogueString_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "String[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueString*), true );
  }
  __trace.line = 16;
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__add__String( RogueString_List* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "String[].add(String)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueString_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__add__String_List( RogueString_List* THIS, RogueString_List* other_0 )
{
  RogueDebugTrace __trace( "String[].add(String[])", "List.rogue", 41 );
  __trace.line = 42;
  RogueString_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  __trace.line = 43;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_450_1,(other_0));
    RogueInt32 _auto_451_2 = (0);
    for (;_auto_451_2 < _auto_450_1->count;++_auto_451_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_3,(((RogueString*)(_auto_450_1->data->objects[_auto_451_2]))));
      RogueString_List__add__String( ROGUE_ARG(THIS), value_3 );
    }
  }
  __trace.line = 44;
  return (RogueString_List*)(THIS);
}

RogueInt32 RogueString_List__capacity( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueString_List* RogueString_List__clear( RogueString_List* THIS )
{
  RogueDebugTrace __trace( "String[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueString_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueString_List*)(THIS);
}

void RogueString_List__discard_from__Int32( RogueString_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "String[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueString*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueOptionalInt32 RogueString_List__locate__String( RogueString_List* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "String[].locate(String)", "List.rogue", 160 );
  __trace.line = 161;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_455_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_455_1->count;++i_2)
    {
      __trace.line = 162;
      if (((RogueString__operatorEQUALSEQUALS__String( value_0, ROGUE_ARG(((RogueString*)(THIS->data->objects[i_2]))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  __trace.line = 164;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueString_List* RogueString_List__reserve__Int32( RogueString_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "String[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueString*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueString_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueString*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__joined__String( RogueString_List* THIS, RogueString* separator_0 )
{
  RogueDebugTrace __trace( "String[].joined(String)", "List.rogue", 448 );
  __trace.line = 449;
  RogueInt32 total_count_1 = (0);
  __trace.line = 450;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_467_3,(THIS));
    RogueInt32 _auto_468_4 = (0);
    for (;_auto_468_4 < _auto_467_3->count;++_auto_468_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_5,(((RogueString*)(_auto_467_3->data->objects[_auto_468_4]))));
      total_count_1 += line_5->character_count;
    }
  }
  __trace.line = 452;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), total_count_1 )))));
  __trace.line = 453;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_469_6,(THIS));
    RogueInt32 _auto_470_7 = (0);
    for (;_auto_470_7 < _auto_469_6->count;++_auto_470_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_8,(((RogueString*)(_auto_469_6->data->objects[_auto_470_7]))));
      __trace.line = 454;
      if (!!(builder_2->count))
      {
        RogueStringBuilder__print__String( builder_2, separator_0 );
      }
      __trace.line = 455;
      RogueStringBuilder__print__String( builder_2, line_8 );
    }
  }
  __trace.line = 458;
  return (RogueString*)(((RogueStringBuilder__to_String( builder_2 ))));
}

RogueString* RogueArray_String___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<String>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[858]);
}

RogueString* RogueNativeArray__type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "NativeArray.type_name()", "Array.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[69]);
}

RogueString* RogueStringReader__type_name( RogueClassStringReader* THIS )
{
  RogueDebugTrace __trace( "StringReader.type_name()", "String.rogue", 738 );
  return (RogueString*)(Rogue_literal_strings[745]);
}

RogueLogical RogueStringReader__has_another( RogueClassStringReader* THIS )
{
  RogueDebugTrace __trace( "StringReader.has_another()", "String.rogue", 748 );
  __trace.line = 749;
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueStringReader__read( RogueClassStringReader* THIS )
{
  RogueDebugTrace __trace( "StringReader.read()", "String.rogue", 758 );
  __trace.line = 759;
  ++THIS->position;
  __trace.line = 760;
  return (RogueCharacter)(RogueString_character_at(THIS->string,(THIS->position - 1)));
}

RogueClassStringReader* RogueStringReader__init__String( RogueClassStringReader* THIS, RogueString* _auto_37_0 )
{
  RogueDebugTrace __trace( "StringReader.init(String)", "String.rogue", 745 );
  THIS->string = _auto_37_0;
  __trace.line = 746;
  if (!!(THIS->string))
  {
    THIS->count = THIS->string->character_count;
  }
  __trace.line = 748;
  return (RogueClassStringReader*)(THIS);
}

RogueClassStringReader* RogueStringReader__init_object( RogueClassStringReader* THIS )
{
  RogueDebugTrace __trace( "StringReader.init_object()", "String.rogue", 738 );
  return (RogueClassStringReader*)(THIS);
}

RogueLogical RogueReader_Character___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 19:
      return RogueStringReader__has_another( (RogueClassStringReader*)THIS );
    case 273:
      return RogueParseReader__has_another( (RogueClassParseReader*)THIS );
    case 322:
      return RogueUTF8Reader__has_another( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueCharacter RogueReader_Character___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 19:
      return RogueStringReader__read( (RogueClassStringReader*)THIS );
    case 273:
      return RogueParseReader__read( (RogueClassParseReader*)THIS );
    case 322:
      return RogueUTF8Reader__read( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueClassGlobal* RogueGlobal__init( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.init()", "Global.rogue", 8 );
  __trace.line = 9;
  RogueGlobal__on_exit__Function__( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassFunction__*)(((RogueClassFunction_81*)ROGUE_SINGLETON(Function_81))))) );
  __trace.line = 11;
  return (RogueClassGlobal*)(THIS);
}

RogueString* RogueGlobal__type_name( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.type_name()", "Global.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[71]);
}

RogueClassGlobal* RogueGlobal__flush( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.flush()", "PrintWriter.rogue", 28 );
  __trace.line = 29;
  if (!!(THIS->global_output_buffer->count))
  {
    __trace.line = 30;
    RogueGlobal__write__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_output_buffer) );
    __trace.line = 31;
    RogueStringBuilder__clear( ROGUE_ARG(THIS->global_output_buffer) );
  }
  __trace.line = 33;
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Character( RogueClassGlobal* THIS, RogueCharacter value_0 )
{
  RogueDebugTrace __trace( "Global.print(Character)", "PrintWriter.rogue", 39 );
  __trace.line = 40;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), value_0, true );
  __trace.line = 41;
  if (value_0 == (RogueCharacter)10)
  {
    return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
  }
  __trace.line = 42;
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  RogueDebugTrace __trace( "Global.print(Object)", "PrintWriter.rogue", 56 );
  __trace.line = 57;
  RogueStringBuilder__print__Object( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  __trace.line = 58;
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "Global.print(String)", "PrintWriter.rogue", 68 );
  __trace.line = 69;
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  __trace.line = 70;
  if (THIS->global_output_buffer->count > 1024)
  {
    RogueGlobal__flush( ROGUE_ARG(THIS) );
  }
  __trace.line = 71;
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__println( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.println()", "PrintWriter.rogue", 73 );
  __trace.line = 74;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), (RogueCharacter)10, true );
  __trace.line = 75;
  return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
}

RogueClassGlobal* RogueGlobal__println__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  RogueDebugTrace __trace( "Global.println(Object)", "PrintWriter.rogue", 98 );
  __trace.line = 99;
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__Object( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__println__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "Global.println(String)", "PrintWriter.rogue", 101 );
  __trace.line = 102;
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__String( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__write__StringBuilder( RogueClassGlobal* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Global.write(StringBuilder)", "Global.rogue", 24 );
  __trace.line = 25;
  RoguePrintWriter__write__StringBuilder( ROGUE_ARG(((RogueObject*)THIS->standard_output)), buffer_0 );
  __trace.line = 26;
  return (RogueClassGlobal*)(THIS);
}

void RogueGlobal__on_launch( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.on_launch()", "RogueC.rogue", 25 );
  RogueRogueC__launch( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
}

void RogueGlobal__run_tests( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.run_tests()", "[Built-in Type]", 0 );
}

void RogueGlobal__call_exit_functions( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.call_exit_functions()", "Global.rogue", 11 );
  __trace.line = 16;
  ROGUE_DEF_LOCAL_REF(RogueFunction___List*,functions_0,(THIS->exit_functions));
  __trace.line = 17;
  THIS->exit_functions = ((RogueFunction___List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFunction___List*,ROGUE_CREATE_OBJECT(Function___List))) )));
  __trace.line = 19;
  {
    ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_82_1,(functions_0));
    RogueInt32 _auto_83_2 = (0);
    for (;_auto_83_2 < _auto_82_1->count;++_auto_83_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,fn_3,(((RogueClassFunction__*)(_auto_82_1->data->objects[_auto_83_2]))));
      call_ROGUEM30( 7, fn_3 );
    }
  }
}

void RogueGlobal__on_exit__Function__( RogueClassGlobal* THIS, RogueClassFunction__* fn_0 )
{
  RogueDebugTrace __trace( "Global.on_exit(Function())", "Global.rogue", 21 );
  __trace.line = 22;
  RogueFunction___List__add__Function__( ROGUE_ARG(THIS->exit_functions), fn_0 );
}

RogueClassGlobal* RogueGlobal__init_object( RogueClassGlobal* THIS )
{
  RogueDebugTrace __trace( "Global.init_object()", "Global.rogue", 1 );
  __trace.line = 3;
  THIS->standard_output = ((RogueClassPrintWriter*)(((RogueClassConsole*)ROGUE_SINGLETON(Console))));
  __trace.line = 4;
  THIS->global_output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 5;
  THIS->exit_functions = ((RogueFunction___List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFunction___List*,ROGUE_CREATE_OBJECT(Function___List))) )));
  __trace.line = 1;
  return (RogueClassGlobal*)(THIS);
}

RogueClassPrintWriter* RoguePrintWriterAspect_Global_global_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 22:
      return (RogueClassPrintWriter*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueClassPrintWriter* RoguePrintWriter__write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 22:
      return (RogueClassPrintWriter*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    case 30:
      return (RogueClassPrintWriter*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueFunction___List* RogueFunction___List__init( RogueFunction___List* THIS )
{
  RogueDebugTrace __trace( "Function()[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueFunction___List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueFunction___List*)(THIS);
}

RogueString* RogueFunction___List__to_String( RogueFunction___List* THIS )
{
  RogueDebugTrace __trace( "Function()[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_471_2,(THIS));
    RogueInt32 _auto_472_3 = (0);
    for (;_auto_472_3 < _auto_471_2->count;++_auto_472_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,value_4,(((RogueClassFunction__*)(_auto_471_2->data->objects[_auto_472_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFunction___List__type_name( RogueFunction___List* THIS )
{
  RogueDebugTrace __trace( "Function()[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[813]);
}

RogueFunction___List* RogueFunction___List__init_object( RogueFunction___List* THIS )
{
  RogueDebugTrace __trace( "Function()[].init_object()", "List.rogue", 4 );
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__init__Int32( RogueFunction___List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Function()[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFunction__*), true );
  }
  __trace.line = 16;
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__add__Function__( RogueFunction___List* THIS, RogueClassFunction__* value_0 )
{
  RogueDebugTrace __trace( "Function()[].add(Function())", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueFunction___List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueFunction___List*)(THIS);
}

RogueInt32 RogueFunction___List__capacity( RogueFunction___List* THIS )
{
  RogueDebugTrace __trace( "Function()[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueFunction___List* RogueFunction___List__reserve__Int32( RogueFunction___List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Function()[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueFunction___List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueFunction___List*)(THIS);
}

RogueString* RogueFunction____type_name( RogueClassFunction__* THIS )
{
  RogueDebugTrace __trace( "Function().type_name()", "Global.rogue", 5 );
  return (RogueString*)(Rogue_literal_strings[746]);
}

void RogueFunction____call( RogueClassFunction__* THIS )
{
  RogueDebugTrace __trace( "Function().call()", "Global.rogue", 5 );
}

RogueClassFunction__* RogueFunction____init_object( RogueClassFunction__* THIS )
{
  RogueDebugTrace __trace( "Function().init_object()", "Global.rogue", 5 );
  return (RogueClassFunction__*)(THIS);
}

RogueString* RogueFunction_81__type_name( RogueClassFunction_81* THIS )
{
  RogueDebugTrace __trace( "Function_81.type_name()", "Global.rogue", 9 );
  return (RogueString*)(Rogue_literal_strings[906]);
}

void RogueFunction_81__call( RogueClassFunction_81* THIS )
{
  RogueDebugTrace __trace( "Function_81.call()", "Global.rogue", 9 );
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueClassFunction_81* RogueFunction_81__init_object( RogueClassFunction_81* THIS )
{
  RogueDebugTrace __trace( "Function_81.init_object()", "Global.rogue", 9 );
  return (RogueClassFunction_81*)(THIS);
}

RogueString* RogueRogueC__type_name( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.type_name()", "RogueC.rogue", 36 );
  return (RogueString*)(Rogue_literal_strings[747]);
}

void RogueRogueC__launch( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.launch()", "RogueC.rogue", 78 );
  __trace.line = 79;
  ROGUE_DEF_LOCAL_REF(RogueString*,libs_0,(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( ROGUE_ARG(RogueSystem_executable_filepath) ))), Rogue_literal_strings[5] )))));
  __trace.line = 80;
  if ((RogueFile__exists__String( libs_0 )))
  {
    __trace.line = 81;
    THIS->libraries_folder = libs_0;
    __trace.line = 82;
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), libs_0 );
    __trace.line = 83;
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), libs_0, true );
  }
  __trace.line = 86;
  ROGUE_TRY
  {
    __trace.line = 87;
    RogueRogueC__process_command_line_arguments( ROGUE_ARG(THIS) );
    __trace.line = 89;
    __trace.filename = "CPPWriter.rogue";
    __trace.line = 1287;
    RogueString_List__add__String( ROGUE_ARG(THIS->supported_targets), Rogue_literal_strings[46] );
    __trace.filename = "RogueC.rogue";
    __trace.line = 90;
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_518_4,(THIS->plugins));
      RogueInt32 _auto_519_5 = (0);
      for (;_auto_519_5 < _auto_518_4->count;++_auto_519_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_6,(((RogueClassPlugin*)(_auto_518_4->data->objects[_auto_519_5]))));
        RoguePlugin__collect_supported_targets( plugin_6 );
      }
    }
    __trace.line = 92;
    if (THIS->source_files->count == 0)
    {
      __trace.line = 93;
      if (THIS->print_version)
      {
        __trace.line = 95;
        RogueGlobal__println__String( ROGUE_ARG(((RogueGlobal__print__Character( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), (RogueCharacter)'v' )))), Rogue_literal_strings[47] );
        __trace.line = 96;
        RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[48] );
        __trace.line = 97;
        RogueSystem__exit__Int32( 0 );
      }
      __trace.line = 100;
      RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
      __trace.line = 101;
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[49], Rogue_literal_strings[47] )))) );
      __trace.line = 102;
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[48] );
      __trace.line = 104;
      ROGUE_DEF_LOCAL_REF(RogueString*,usage_1,(Rogue_literal_strings[50]));
      __trace.line = 151;
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, ROGUE_ARG(((RogueString__replacing__String_String( ROGUE_ARG(((RogueString__replacing__Character_Character( ROGUE_ARG(((RogueString_List__to_String( ROGUE_ARG(THIS->supported_targets) )))), (RogueCharacter)',', (RogueCharacter)'|' )))), Rogue_literal_strings[51], Rogue_literal_strings[52] )))) ))));
      __trace.line = 153;
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, Rogue_literal_strings[53] ))));
      __trace.line = 160;
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), usage_1 );
      __trace.line = 161;
      RogueSystem__exit__Int32( 1 );
    }
    __trace.line = 164;
    if (THIS->target_list->count == 0)
    {
      RogueString_List__add__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[46] );
    }
    __trace.line = 165;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_520_7,(THIS->target_list));
      RogueInt32 _auto_521_8 = (0);
      for (;_auto_521_8 < _auto_520_7->count;++_auto_521_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,target_9,(((RogueString*)(_auto_520_7->data->objects[_auto_521_8]))));
        __trace.line = 166;
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->compile_targets), target_9, true );
      }
    }
    __trace.line = 169;
    RogueProgram__configure( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    __trace.line = 171;
    THIS->stopwatch = ((RogueClassStopwatch*)((call_ROGUEM0( 0, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassStopwatch*,ROGUE_CREATE_OBJECT(Stopwatch)))) ))));
    __trace.line = 173;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_522_10,(THIS->source_files));
      RogueInt32 _auto_523_11 = (0);
      for (;_auto_523_11 < _auto_522_10->count;++_auto_523_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,filepath_12,(((RogueString*)(_auto_522_10->data->objects[_auto_523_11]))));
        __trace.line = 174;
        RogueRogueC__include_source__String( ROGUE_ARG(THIS), filepath_12 );
      }
    }
    __trace.line = 176;
    RogueRogueC__include_source__String( ROGUE_ARG(THIS), Rogue_literal_strings[290] );
    __trace.line = 178;
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_524_13,(THIS->parsers));
      RogueInt32 _auto_525_14 = (0);
      for (;_auto_525_14 < _auto_524_13->count;++_auto_525_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_15,(((RogueClassParser*)(_auto_524_13->data->objects[_auto_525_14]))));
        RogueParser__insert_module_prefixes( parser_15 );
      }
    }
    __trace.line = 179;
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_526_16,(THIS->parsers));
      RogueInt32 _auto_527_17 = (0);
      for (;_auto_527_17 < _auto_526_16->count;++_auto_527_17)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_18,(((RogueClassParser*)(_auto_526_16->data->objects[_auto_527_17]))));
        RogueParser__parse_elements( parser_18 );
      }
    }
    __trace.line = 182;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((call_ROGUEM139( 8, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[56] )))), Rogue_literal_strings[453], 0, 0 ))));
    __trace.line = 183;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_528_19,(THIS->requisite_declarations));
      RogueInt32 _auto_529_20 = (0);
      for (;_auto_529_20 < _auto_528_19->count;++_auto_529_20)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,declaration_21,(((RogueString*)(_auto_528_19->data->objects[_auto_529_20]))));
        __trace.line = 184;
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_2 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, declaration_21 )))))) );
      }
    }
    __trace.line = 187;
    if (THIS->all_requisite)
    {
      ((RogueClassProgram*)ROGUE_SINGLETON(Program))->all_requisite = true;
    }
    __trace.line = 189;
    RogueProgram__resolve( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    __trace.line = 191;
    RogueRogueC__write_output( ROGUE_ARG(THIS) );
  }
  ROGUE_CATCH( err_3,RogueClassError* )
  {
    __trace.line = 194;
    RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(err_3))) );
    __trace.line = 195;
    RogueSystem__exit__Int32( 1 );
  }
  ROGUE_END_TRY
}

void RogueRogueC__write_output( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.write_output()", "RogueC.rogue", 198 );
  __trace.line = 199;
  __trace.filename = "CPPWriter.rogue";
  __trace.line = 1291;
  if (((RogueTable_String_Logical___get__String( ROGUE_ARG(THIS->compile_targets), Rogue_literal_strings[46] ))))
  {
    RogueRogueC__write_cpp( ROGUE_ARG(THIS) );
    return;
  }
  __trace.filename = "RogueC.rogue";
  __trace.line = 200;
  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[719] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->target_list))) )))) )))), Rogue_literal_strings[720] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueRogueC__on_compile_finished( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.on_compile_finished()", "RogueC.rogue", 202 );
  __trace.line = 203;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[714] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->stopwatch))) )))) )))), Rogue_literal_strings[34] )))) )))) );
}

void RogueRogueC__include_source__String( RogueClassRogueC* THIS, RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "RogueC.include_source(String)", "RogueC.rogue", 205 );
  __trace.line = 206;
  if (!(!!(THIS->first_filepath)))
  {
    THIS->first_filepath = filepath_0;
  }
  __trace.line = 207;
  RogueRogueC__include_source__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassToken*)(NULL))), filepath_0 );
}

void RogueRogueC__include_source__Token_String( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* filepath_1 )
{
  RogueDebugTrace __trace( "RogueC.include_source(Token,String)", "RogueC.rogue", 209 );
  __trace.line = 211;
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_2,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 )))));
  __trace.line = 213;
  if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[73] )))) )))
  {
    __trace.line = 214;
    filepath_1 = ((RogueString*)((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[73] ))));
    __trace.line = 215;
    file_2 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 ))));
  }
  __trace.line = 218;
  if (!((RogueFile__exists__String( ROGUE_ARG(file_2->filepath) ))))
  {
    __trace.line = 219;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_532_10,(THIS->prefix_path_list));
      RogueInt32 _auto_533_11 = (0);
      for (;_auto_533_11 < _auto_532_10->count;++_auto_533_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_12,(((RogueString*)(_auto_532_10->data->objects[_auto_533_11]))));
        __trace.line = 220;
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_3,(((RogueString__operatorPLUS__String( prefix_12, filepath_1 )))));
        __trace.line = 221;
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_4,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_3 )))));
        __trace.line = 222;
        if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( prefixed_filepath_3, Rogue_literal_strings[73] )))) )))
        {
          __trace.line = 223;
          filepath_1 = ((RogueString*)((RogueString__operatorPLUS__String( prefixed_filepath_3, Rogue_literal_strings[73] ))));
          __trace.line = 224;
          file_2 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 ))));
          __trace.line = 225;
          goto _auto_534;
        }
        else if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_4->filepath) )))
        {
          __trace.line = 227;
          filepath_1 = ((RogueString*)prefixed_filepath_3);
          __trace.line = 228;
          file_2 = ((RogueClassFile*)prefixed_file_4);
          __trace.line = 229;
          goto _auto_534;
        }
      }
    }
    _auto_534:;
  }
  __trace.line = 234;
  if (!((RogueFile__exists__String( ROGUE_ARG(file_2->filepath) ))))
  {
    __trace.line = 235;
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[74] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[21] )))) )))));
    __trace.line = 236;
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_5 ))));
    }
    else
    {
      __trace.line = 237;
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_5, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  __trace.line = 240;
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_2->filepath) )))
  {
    __trace.line = 241;
    ROGUE_DEF_LOCAL_REF(RogueString*,path2_6,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[75] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueFile__filename( file_2 )))) )))) )))), Rogue_literal_strings[73] )))) )))));
    __trace.line = 242;
    ROGUE_DEF_LOCAL_REF(RogueClassFile*,file2_7,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), path2_6 )))));
    __trace.line = 243;
    if ((!((RogueFile__exists__String( ROGUE_ARG(file2_7->filepath) ))) || (RogueFile__is_folder__String( ROGUE_ARG(file2_7->filepath) ))))
    {
      __trace.line = 244;
      ROGUE_DEF_LOCAL_REF(RogueString*,mesg_8,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[76] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], path2_6 )))) )))), Rogue_literal_strings[77] )))) )))));
      __trace.line = 245;
      if (!!(t_0))
      {
        ROGUE_THROW(((RogueToken__error__String( t_0, mesg_8 ))));
      }
      else
      {
        __trace.line = 246;
        ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_8, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
      }
    }
    else
    {
      __trace.line = 248;
      if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_2->filepath) )))))
      {
        __trace.line = 249;
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_2->filepath), true );
        __trace.line = 250;
        RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), ROGUE_ARG(file_2->filepath) );
      }
      __trace.line = 252;
      filepath_1 = ((RogueString*)path2_6);
      __trace.line = 253;
      file_2 = ((RogueClassFile*)file2_7);
    }
  }
  __trace.line = 257;
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_2->filepath) )));
  __trace.line = 258;
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  __trace.line = 260;
  if (THIS->included_files->count == 0)
  {
    ((RogueClassProgram*)ROGUE_SINGLETON(Program))->first_filepath = filepath_1;
  }
  __trace.line = 262;
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  __trace.line = 264;
  ROGUE_DEF_LOCAL_REF(RogueString*,prefix_9,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[75] )))));
  __trace.line = 265;
  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_9 )))))
  {
    __trace.line = 266;
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_9, true );
    __trace.line = 267;
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_9 );
  }
  __trace.line = 270;
  RogueParser_List__add__Parser( ROGUE_ARG(THIS->parsers), ROGUE_ARG(((RogueParser__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), filepath_1 )))) );
}

void RogueRogueC__include_native__Token_String_String( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* filepath_1, RogueString* native_type_2 )
{
  RogueDebugTrace __trace( "RogueC.include_native(Token,String,String)", "RogueC.rogue", 272 );
  __trace.line = 273;
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_3,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 )))));
  __trace.line = 275;
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    __trace.line = 276;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_535_9,(THIS->prefix_path_list));
      RogueInt32 _auto_536_10 = (0);
      for (;_auto_536_10 < _auto_535_9->count;++_auto_536_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_11,(((RogueString*)(_auto_535_9->data->objects[_auto_536_10]))));
        __trace.line = 277;
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_4,(((RogueString__operatorPLUS__String( prefix_11, filepath_1 )))));
        __trace.line = 278;
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_5,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_4 )))));
        __trace.line = 279;
        if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_5->filepath) )))
        {
          __trace.line = 280;
          filepath_1 = ((RogueString*)prefixed_filepath_4);
          __trace.line = 281;
          file_3 = ((RogueClassFile*)prefixed_file_5);
          __trace.line = 282;
          goto _auto_537;
        }
      }
    }
    _auto_537:;
  }
  __trace.line = 287;
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    __trace.line = 288;
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_6,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[74] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[21] )))) )))));
    __trace.line = 289;
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_6 ))));
    }
    else
    {
      __trace.line = 290;
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_6, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  __trace.line = 293;
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_3->filepath) )))
  {
    __trace.line = 294;
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_7,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[85] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(file_3->filepath) )))) )))), Rogue_literal_strings[86] )))) )))));
    __trace.line = 295;
    if (!!(t_0))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, mesg_7 ))));
    }
    else
    {
      __trace.line = 296;
      ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_7, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  __trace.line = 299;
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_3->filepath) )));
  __trace.line = 300;
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  __trace.line = 302;
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  __trace.line = 304;
  ROGUE_DEF_LOCAL_REF(RogueString*,prefix_8,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[75] )))));
  __trace.line = 305;
  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8 )))))
  {
    __trace.line = 306;
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8, true );
    __trace.line = 307;
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_8 );
  }
  __trace.line = 310;
  if (((RogueString__operatorEQUALSEQUALS__String( native_type_2, Rogue_literal_strings[87] ))))
  {
    __trace.line = 311;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_539_12,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_539_12 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_13,(((RogueLineReader__read( _auto_539_12 )))));
        __trace.line = 312;
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), line_13 );
      }
    }
  }
  else
  {
    __trace.line = 315;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_540_14,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_540_14 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_15,(((RogueLineReader__read( _auto_540_14 )))));
        __trace.line = 316;
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), line_15 );
      }
    }
  }
}

void RogueRogueC__process_command_line_arguments( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.process_command_line_arguments()", "RogueC.rogue", 320 );
  __trace.line = 321;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_541_4,(RogueSystem_command_line_arguments));
    RogueInt32 _auto_542_5 = (0);
    for (;_auto_542_5 < _auto_541_4->count;++_auto_542_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,arg_6,(((RogueString*)(_auto_541_4->data->objects[_auto_542_5]))));
      __trace.line = 322;
      ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueString__after_first__Character( arg_6, (RogueCharacter)'=' )))));
      __trace.line = 323;
      arg_6 = ((RogueString*)((RogueString__before_first__Character( arg_6, (RogueCharacter)'=' ))));
      __trace.line = 324;
      if (((RogueString__begins_with__String( arg_6, Rogue_literal_strings[6] ))))
      {
        __trace.line = 326;
        {
          if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[7] ))))
          {
            __trace.line = 328;
            if (value_0->character_count == 0)
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[15], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 329;
            THIS->output_filepath = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[16] ))))
          {
            __trace.line = 332;
            THIS->generate_main = true;
            __trace.line = 333;
            THIS->execute_args = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[17] ))))
          {
            __trace.line = 336;
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[18] ))))
          {
            __trace.line = 339;
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[19], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 340;
            {
              ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_543_7,(((RogueString__split__Character( value_0, (RogueCharacter)';' )))));
              RogueInt32 _auto_544_8 = (0);
              for (;_auto_544_8 < _auto_543_7->count;++_auto_544_8)
              {
                ROGUE_DEF_LOCAL_REF(RogueString*,path_9,(((RogueString*)(_auto_543_7->data->objects[_auto_544_8]))));
                __trace.line = 341;
                if (!((RogueFile__exists__String( path_9 ))))
                {
                  __trace.line = 342;
                  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[20] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], path_9 )))) )))), Rogue_literal_strings[21] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
                }
                __trace.line = 344;
                if ((RogueFile__is_folder__String( path_9 )))
                {
                  __trace.line = 345;
                  if (!(((RogueString__ends_with__Character( path_9, (RogueCharacter)'/' )))))
                  {
                    path_9 = ((RogueString*)((RogueString__operatorPLUS__Character( path_9, (RogueCharacter)'/' ))));
                  }
                  __trace.line = 346;
                  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), path_9 )))))
                  {
                    __trace.line = 347;
                    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), path_9 );
                    __trace.line = 348;
                    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), path_9, true );
                  }
                }
                else
                {
                  __trace.line = 351;
                  RogueString_List__add__String( ROGUE_ARG(THIS->source_files), path_9 );
                }
              }
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[22] ))))
          {
            __trace.line = 356;
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[23], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 357;
            THIS->generate_main = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[24] ))))
          {
            __trace.line = 360;
            if (!(!!(value_0->character_count)))
            {
              __trace.line = 361;
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[25], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 363;
            THIS->package_name = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[26] ))))
          {
            __trace.line = 366;
            if (!!(value_0->character_count))
            {
              __trace.line = 367;
              RogueString_List__add__String_List( ROGUE_ARG(THIS->requisite_declarations), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
            }
            else
            {
              __trace.line = 369;
              THIS->all_requisite = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[27] ))))
          {
            __trace.line = 373;
            if (!(!!(value_0->character_count)))
            {
              __trace.line = 374;
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[28], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 376;
            RogueString_List__add__String_List( ROGUE_ARG(THIS->target_list), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[29] ))))
          {
            __trace.line = 379;
            if ((!(!!(value_0->character_count)) || ((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[30] )))))
            {
              __trace.line = 381;
              THIS->gc_mode = 1;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[31] ))))
            {
              __trace.line = 383;
              THIS->gc_mode = 0;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[32] ))))
            {
              __trace.line = 385;
              THIS->gc_mode = 2;
            }
            else
            {
              __trace.line = 387;
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[33] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], value_0 )))) )))), Rogue_literal_strings[34] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[35] ))))
          {
            __trace.line = 391;
            if (!(!!(value_0->character_count)))
            {
              __trace.line = 392;
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[36], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 394;
            value_0 = ((RogueString*)((RogueString__to_lowercase( value_0 ))));
            __trace.line = 395;
            RogueReal64 n_1 = (strtod( (char*)value_0->utf8, 0 ));
            __trace.line = 396;
            if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'m' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[37] )))))
            {
              n_1 *= 1048576.0;
            }
            else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'k' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[38] )))))
            {
              __trace.line = 397;
              n_1 *= 1024.0;
            }
            __trace.line = 398;
            RogueInt32 thresh_2 = (((RogueInt32)(n_1)));
            __trace.line = 399;
            if (thresh_2 < 1)
            {
              thresh_2 = ((RogueInt32)2147483647);
            }
            __trace.line = 400;
            THIS->gc_threshold = thresh_2;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[39] ))))
          {
            __trace.line = 403;
            RoguePlugin_List__add__Plugin( ROGUE_ARG(THIS->plugins), ROGUE_ARG(((RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( ROGUE_ARG(((RoguePlugin__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPlugin*,ROGUE_CREATE_OBJECT(Plugin))), Rogue_literal_strings[40] )))), ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)(((RogueClassFunction_545*)ROGUE_SINGLETON(Function_545))))) )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[41] ))))
          {
            __trace.line = 426;
            THIS->run_tests = true;
            __trace.line = 427;
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_6, Rogue_literal_strings[42] ))))
          {
            __trace.line = 430;
            if (!!(value_0->character_count))
            {
              __trace.line = 431;
              ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[43], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            __trace.line = 433;
            THIS->print_version = true;
          }
          else
          {
            __trace.line = 436;
            ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[44] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_6 )))) )))), Rogue_literal_strings[45] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
          }
        }
      }
      else
      {
        __trace.line = 441;
        RogueString_List__add__String( ROGUE_ARG(THIS->source_files), arg_6 );
      }
    }
  }
}

void RogueRogueC__write_cpp( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.write_cpp()", "CPPWriter.rogue", 1293 );
  __trace.line = 1294;
  if (((void*)THIS->output_filepath) == ((void*)NULL))
  {
    __trace.line = 1295;
    THIS->output_filepath = (RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ));
    __trace.line = 1296;
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[73] ))))
    {
      THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -6 )));
    }
  }
  else if ((RogueFile__is_folder__String( ROGUE_ARG(THIS->output_filepath) )))
  {
    __trace.line = 1299;
    THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[75] )));
    __trace.line = 1300;
    ROGUE_DEF_LOCAL_REF(RogueString*,filename_0,((RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ))));
    __trace.line = 1301;
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( filename_0 )))), Rogue_literal_strings[73] ))))
    {
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), ROGUE_ARG(((RogueString__leftmost__Int32( filename_0, -6 )))) )));
    }
    else
    {
      __trace.line = 1302;
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[515] )));
    }
  }
  else if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[516] ))))
  {
    __trace.line = 1305;
    THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -4 )));
  }
  __trace.line = 1309;
  RogueProgram__write_cpp__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->output_filepath) );
  __trace.line = 1310;
  RogueRogueC__on_compile_finished( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
  __trace.line = 1312;
  if (!!(THIS->execute_args))
  {
    __trace.line = 1313;
    ROGUE_DEF_LOCAL_REF(RogueString*,exe_1,(THIS->output_filepath));
    __trace.line = 1314;
    if (((RogueString__contains__Character( exe_1, (RogueCharacter)'/' ))))
    {
      __trace.line = 1315;
      exe_1 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( exe_1 ))), Rogue_literal_strings[75] )))), ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG((RogueFile__filename__String( exe_1 ))) )))) ))));
    }
    else
    {
      __trace.line = 1317;
      exe_1 = ((RogueString*)((RogueString__to_lowercase( exe_1 ))));
    }
    __trace.line = 1319;
    ROGUE_DEF_LOCAL_REF(RogueString*,cmd_2,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[715] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->output_filepath) )))) )))), Rogue_literal_strings[716] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))), Rogue_literal_strings[717] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->execute_args) )))) )))) )))));
    __trace.line = 1320;
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), cmd_2 );
    __trace.line = 1321;
    RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
    __trace.line = 1322;
    RogueSystem__run__String( cmd_2 );
  }
}

RogueClassRogueC* RogueRogueC__init_object( RogueClassRogueC* THIS )
{
  RogueDebugTrace __trace( "RogueC.init_object()", "RogueC.rogue", 36 );
  __trace.line = 38;
  THIS->included_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 39;
  THIS->prefix_path_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 40;
  THIS->prefix_path_lookup = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  __trace.line = 41;
  THIS->compile_targets = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  __trace.line = 42;
  THIS->target_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 43;
  THIS->libraries_folder = Rogue_literal_strings[0];
  __trace.line = 45;
  THIS->source_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 50;
  THIS->supported_targets = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 51;
  THIS->requisite_declarations = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 54;
  THIS->all_requisite = false;
  __trace.line = 64;
  THIS->parsers = ((RogueParser_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueParser_List*,ROGUE_CREATE_OBJECT(Parser_List))) )));
  __trace.line = 69;
  THIS->parsereaders_by_filepath = ((RogueTable_String_ParseReader___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_ParseReader_*,ROGUE_CREATE_OBJECT(Table_String_ParseReader_))) )));
  __trace.line = 72;
  THIS->gc_mode = 0;
  __trace.line = 73;
  THIS->gc_threshold = 1048576;
  __trace.line = 75;
  THIS->plugins = ((RoguePlugin_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePlugin_List*,ROGUE_CREATE_OBJECT(Plugin_List))) )));
  __trace.line = 36;
  return (RogueClassRogueC*)(THIS);
}

RogueString* RogueArray_Function_____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Function()>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[859]);
}

RogueString* RogueConsole__type_name( RogueClassConsole* THIS )
{
  RogueDebugTrace __trace( "Console.type_name()", "Console.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[748]);
}

RogueClassConsole* RogueConsole__write__StringBuilder( RogueClassConsole* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Console.write(StringBuilder)", "Console.rogue", 27 );
  __trace.line = 28;
  RogueString_print_utf8( buffer_0->utf8->data->bytes, buffer_0->utf8->count );
  __trace.line = 29;
  return (RogueClassConsole*)(THIS);
}

RogueClassConsole* RogueConsole__init_object( RogueClassConsole* THIS )
{
  RogueDebugTrace __trace( "Console.init_object()", "Console.rogue", 1 );
  __trace.line = 16;
  THIS->output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 1;
  return (RogueClassConsole*)(THIS);
}

RogueClassPrintWriter* RoguePrintWriterAspect_Console_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 30:
      return (RogueClassPrintWriter*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueString* RogueProgram__type_name( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.type_name()", "Program.rogue", 5 );
  return (RogueString*)(Rogue_literal_strings[749]);
}

RogueInt32 RogueProgram__add_literal_string__String( RogueClassProgram* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "Program.add_literal_string(String)", "Program.rogue", 59 );
  __trace.line = 60;
  if (!(!!(value_0)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 62;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_1,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS->literal_string_lookup), value_0 )))));
  __trace.line = 63;
  if (!!(entry_1))
  {
    __trace.line = 64;
    return (RogueInt32)(entry_1->value);
  }
  else
  {
    __trace.line = 66;
    RogueInt32 index_2 = (THIS->literal_string_list->count);
    __trace.line = 67;
    RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), value_0, index_2 );
    __trace.line = 68;
    RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), value_0 );
    __trace.line = 69;
    return (RogueInt32)(index_2);
  }
}

void RogueProgram__add_module_id__String_String( RogueClassProgram* THIS, RogueString* module_name_0, RogueString* id_name_1 )
{
  RogueDebugTrace __trace( "Program.add_module_id(String,String)", "Program.rogue", 72 );
  __trace.line = 73;
  ROGUE_DEF_LOCAL_REF(RogueString_List*,list_2,(((RogueTable_String_String_List___get__String( ROGUE_ARG(THIS->ids_by_module), module_name_0 )))));
  __trace.line = 74;
  if (!(!!(list_2)))
  {
    __trace.line = 75;
    list_2 = ((RogueString_List*)((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) ))));
    __trace.line = 76;
    RogueTable_String_String_List___set__String_String_List( ROGUE_ARG(THIS->ids_by_module), module_name_0, list_2 );
  }
  __trace.line = 78;
  RogueString_List__add__String( list_2, id_name_1 );
}

void RogueProgram__add_template__Template( RogueClassProgram* THIS, RogueClassTemplate* template_0 )
{
  RogueDebugTrace __trace( "Program.add_template(Template)", "Program.rogue", 80 );
  __trace.line = 81;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,existing_template_1,(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name) )))));
  __trace.line = 83;
  {
    {
      __trace.line = 84;
      RogueInt32 param_count_2 = (((RogueTemplate__type_parameter_count( template_0 ))));
      __trace.line = 85;
      if (!(!!(existing_template_1))) goto _auto_114;
      __trace.line = 86;
      if ( !(param_count_2 != ((RogueTemplate__type_parameter_count( existing_template_1 )))) ) goto _auto_115;
      __trace.line = 88;
      if (!(!!(existing_template_1->alternates_by_param_count)))
      {
        __trace.line = 89;
        existing_template_1->alternates_by_param_count = ((RogueTable_Int32_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Int32_Template_*,ROGUE_CREATE_OBJECT(Table_Int32_Template_))) )));
      }
      __trace.line = 91;
      if ( !(!(((RogueTable_Int32_Template___contains__Int32( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2 ))))) ) goto _auto_115;
      __trace.line = 93;
      RogueTable_Int32_Template___set__Int32_Template( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2, template_0 );
      __trace.line = 94;
      goto _auto_113;
      _auto_114:;
      __trace.line = 97;
      RogueTemplate_List__add__Template( ROGUE_ARG(THIS->template_list), template_0 );
      __trace.line = 98;
      RogueTable_String_Template___set__String_Template( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name), template_0 );
      goto _auto_113;
    }
    _auto_115:;
    __trace.line = 102;
    if ((!!((template_0->attributes->flags & 1048576)) && !!((existing_template_1->attributes->flags & 1048576))))
    {
      __trace.line = 104;
      RogueToken_List__add__Token_List( ROGUE_ARG(existing_template_1->tokens), ROGUE_ARG(template_0->tokens) );
    }
    else if (!!((existing_template_1->attributes->flags & 1048576)))
    {
      __trace.line = 107;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[446] )))) )))) ))));
    }
    else
    {
      __trace.line = 109;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[447] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[446] )))) )))) ))));
    }
  }
  _auto_113:;
}

void RogueProgram__configure( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.configure()", "Program.rogue", 116 );
  __trace.line = 117;
  THIS->type_null = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[1], 32 )));
  __trace.line = 118;
  THIS->type_Real64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[58], 1 )));
  __trace.line = 119;
  THIS->type_Real32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[59], 1 )));
  __trace.line = 120;
  THIS->type_Int64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[60], 1 )));
  __trace.line = 121;
  THIS->type_Int32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[61], 1 )));
  __trace.line = 122;
  THIS->type_Character = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[62], 1 )));
  __trace.line = 123;
  THIS->type_Byte = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[63], 1 )));
  __trace.line = 124;
  THIS->type_Logical = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[64], 1 )));
  __trace.line = 126;
  THIS->type_Object = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[65], 32 )));
  __trace.line = 127;
  THIS->type_String = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[66], 48 )));
  __trace.line = 128;
  THIS->type_StringBuilder = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[67], 0 )));
  __trace.line = 129;
  THIS->type_TypeInfo = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[68], 0 )));
  __trace.line = 130;
  THIS->type_NativeArray = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[69], 32 )));
  __trace.line = 131;
  THIS->type_GenericList = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[70], 0 )));
  __trace.line = 132;
  THIS->type_Global = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[71], 0 )));
  __trace.line = 133;
  THIS->type_Exception = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[72], 0 )));
  __trace.line = 135;
  THIS->type_Object->simplify_name = true;
  __trace.line = 136;
  THIS->type_String->simplify_name = true;
  __trace.line = 137;
  THIS->type_StringBuilder->simplify_name = true;
  __trace.line = 138;
  THIS->type_TypeInfo->simplify_name = true;
  __trace.line = 140;
  THIS->type_null->organized = true;
  __trace.line = 141;
  THIS->type_null->defined = true;
  __trace.line = 144;
  RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), Rogue_literal_strings[0] );
  __trace.line = 145;
  RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), Rogue_literal_strings[0], 0 );
}

RogueString* RogueProgram__create_unique_id( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.create_unique_id()", "Program.rogue", 147 );
  __trace.line = 148;
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[326], ROGUE_ARG(((RogueProgram__next_unique_integer( ROGUE_ARG(THIS) )))) ))));
}

RogueClassMethod* RogueProgram__get_on_launch_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "Program.get_on_launch_method(Token)", "Program.rogue", 150 );
  __trace.line = 151;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[71] )))));
  __trace.line = 152;
  if (!(!!(THIS->m_on_launch)))
  {
    __trace.line = 153;
    THIS->m_on_launch = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[291] )));
    __trace.line = 154;
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
    {
      __trace.line = 155;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[292] )))))) );
      __trace.line = 156;
      RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), t_0 );
    }
    __trace.line = 158;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), t_0, Rogue_literal_strings[293], false )))))) );
    __trace.line = 159;
    RogueMethod__make_requisite( ROGUE_ARG(THIS->m_on_launch) );
  }
  __trace.line = 161;
  return (RogueClassMethod*)(THIS->m_on_launch);
}

RogueClassMethod* RogueProgram__get_run_tests_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "Program.get_run_tests_method(Token)", "Program.rogue", 163 );
  __trace.line = 164;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[71] )))));
  __trace.line = 165;
  if (!(!!(THIS->m_run_tests)))
  {
    __trace.line = 166;
    THIS->m_run_tests = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[292] )));
    __trace.line = 167;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_run_tests->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_run_tests), t_0, Rogue_literal_strings[293], false )))))) );
    __trace.line = 168;
    RogueMethod__make_requisite( ROGUE_ARG(THIS->m_run_tests) );
  }
  __trace.line = 170;
  return (RogueClassMethod*)(THIS->m_run_tests);
}

RogueInt32 RogueProgram__next_unique_integer( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.next_unique_integer()", "Program.rogue", 172 );
  __trace.line = 173;
  ++THIS->unique_integer;
  __trace.line = 174;
  return (RogueInt32)((THIS->unique_integer - 1));
}

RogueClassTemplate* RogueProgram__find_template__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Program.find_template(String)", "Program.rogue", 176 );
  __trace.line = 177;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,0);
  __trace.line = 179;
  switch (((RogueString__last( name_0 ))))
  {
    case (RogueCharacter)'?':
    {
      __trace.line = 181;
      if (!!(((RogueProgram__find_type__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( name_0, -1 )))) )))))
      {
        return (RogueClassTemplate*)(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[311] ))));
      }
      else
      {
        __trace.line = 182;
        return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
      }
      break;
    }
    case (RogueCharacter)']':
    {
      __trace.line = 184;
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[312] ))));
      break;
    }
    default:
    {
      __trace.line = 186;
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(((RogueString__before_first__Character( name_0, (RogueCharacter)'<' )))) ))));
    }
  }
  __trace.line = 189;
  if (!!(template_1))
  {
    return (RogueClassTemplate*)(template_1);
  }
  __trace.line = 191;
  return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
}

RogueClassType* RogueProgram__find_type__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Program.find_type(String)", "Program.rogue", 193 );
  __trace.line = 194;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  __trace.line = 195;
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  __trace.line = 197;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ROGUE_ARG(THIS), name_0 )))));
  __trace.line = 198;
  if (!!(template_2))
  {
    __trace.line = 199;
    type_1 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), ROGUE_ARG(template_2->t), name_0 ))));
    __trace.line = 200;
    RogueAttributes__add__Attributes( ROGUE_ARG(type_1->attributes), ROGUE_ARG(template_2->attributes) );
    __trace.line = 201;
    RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_0, type_1 );
    __trace.line = 202;
    return (RogueClassType*)(type_1);
  }
  __trace.line = 205;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassType* RogueProgram__get_type_reference__Token_String( RogueClassProgram* THIS, RogueClassToken* t_0, RogueString* name_1 )
{
  RogueDebugTrace __trace( "Program.get_type_reference(Token,String)", "Program.rogue", 207 );
  __trace.line = 208;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_1 )))));
  __trace.line = 209;
  if (!!(type_2))
  {
    return (RogueClassType*)(type_2);
  }
  __trace.line = 211;
  type_2 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), t_0, name_1 ))));
  __trace.line = 212;
  RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_1, type_2 );
  __trace.line = 214;
  return (RogueClassType*)(type_2);
}

RogueString* RogueProgram__get_callback_type_signature__Type_List( RogueClassProgram* THIS, RogueType_List* parameter_types_0 )
{
  RogueDebugTrace __trace( "Program.get_callback_type_signature(Type[])", "Program.rogue", 216 );
  __trace.line = 217;
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), Rogue_literal_strings[94] );
  __trace.line = 218;
  if (!!(parameter_types_0))
  {
    __trace.line = 219;
    RogueLogical first_1 = (true);
    __trace.line = 220;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_170_2,(parameter_types_0));
      RogueInt32 _auto_171_3 = (0);
      for (;_auto_171_3 < _auto_170_2->count;++_auto_171_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueClassType*)(_auto_170_2->data->objects[_auto_171_3]))));
        __trace.line = 221;
        if (first_1)
        {
          first_1 = ((RogueLogical)false);
        }
        else
        {
          __trace.line = 222;
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
        }
        __trace.line = 223;
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(type_4->name) );
      }
    }
  }
  __trace.line = 226;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)')', true );
  __trace.line = 227;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueClassType* RogueProgram__get_callback_type_reference__Token_Type_List_Type( RogueClassProgram* THIS, RogueClassToken* t_0, RogueType_List* parameter_types_1, RogueClassType* return_type_2 )
{
  RogueDebugTrace __trace( "Program.get_callback_type_reference(Token,Type[],Type)", "Program.rogue", 229 );
  __trace.line = 230;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[302], ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ROGUE_ARG(THIS), parameter_types_1 )))) )))));
  __trace.line = 231;
  if (!!(return_type_2))
  {
    name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[209], ROGUE_ARG(return_type_2->name) )))) ))));
  }
  __trace.line = 233;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, name_3 )))));
  __trace.line = 234;
  if (type_4->defined)
  {
    return (RogueClassType*)(type_4);
  }
  __trace.line = 236;
  type_4->defined = true;
  __trace.line = 237;
  type_4->callback_parameter_types = parameter_types_1;
  __trace.line = 238;
  type_4->_callback_return_type = return_type_2;
  __trace.line = 239;
  RogueAttributes__add__Int32( ROGUE_ARG(type_4->attributes), 0 );
  __trace.line = 240;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( type_4, t_0, Rogue_literal_strings[428] )))));
  __trace.line = 241;
  if (!!(parameter_types_1))
  {
    __trace.line = 242;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_172_6,(parameter_types_1));
      RogueInt32 i_7 = (0);
      for (;i_7 < _auto_172_6->count;++i_7)
      {
        RogueMethod__add_parameter__Token_String_Type( m_call_5, t_0, ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[429], ROGUE_ARG((i_7 + 1)) )))), ROGUE_ARG(((RogueClassType*)(parameter_types_1->data->objects[i_7]))) );
      }
    }
  }
  __trace.line = 244;
  if (!!(return_type_2))
  {
    __trace.line = 245;
    m_call_5->_return_type = return_type_2;
    __trace.line = 246;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_5->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueType__create_default_value__Token( return_type_2, t_0 )))) )))))) );
  }
  __trace.line = 249;
  return (RogueClassType*)(type_4);
}

RogueLogical RogueProgram__is_type_defined__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Program.is_type_defined(String)", "Program.rogue", 251 );
  __trace.line = 252;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  __trace.line = 253;
  if (!(!!(type_1)))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 254;
  return (RogueLogical)(type_1->defined);
}

RogueClassType* RogueProgram__create_built_in_type__String_Int32( RogueClassProgram* THIS, RogueString* name_0, RogueInt32 attributes_1 )
{
  RogueDebugTrace __trace( "Program.create_built_in_type(String,Int32)", "Program.rogue", 256 );
  __trace.line = 257;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((call_ROGUEM139( 8, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[56] )))), Rogue_literal_strings[57], 0, 0 ))));
  __trace.line = 258;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_2, name_0 )))));
  __trace.line = 259;
  RogueAttributes__add__Int32( ROGUE_ARG(type_3->attributes), attributes_1 );
  __trace.line = 260;
  return (RogueClassType*)(type_3);
}

void RogueProgram__resolve( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.resolve()", "Program.rogue", 262 );
  __trace.line = 263;
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_on_launch_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  __trace.line = 264;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), ROGUE_ARG(THIS->m_on_launch->t), Rogue_literal_strings[295], false )))))) );
  __trace.line = 265;
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  __trace.line = 267;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_176_5,(THIS->global_properties));
    RogueInt32 _auto_177_6 = (0);
    for (;_auto_177_6 < _auto_176_5->count;++_auto_177_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueClassProperty*)(_auto_176_5->data->objects[_auto_177_6]))));
      __trace.line = 268;
      if (!(!!(p_7->_type)))
      {
        __trace.line = 269;
        if (!!(p_7->initial_value))
        {
          __trace.line = 270;
          p_7->_type = (call_ROGUEM101( 23, ROGUE_ARG(p_7->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          __trace.line = 271;
          if (!(!!(p_7->_type)))
          {
            __trace.line = 272;
            ROGUE_DEF_LOCAL_REF(RogueString*,mesg_0,(Rogue_literal_strings[454]));
            __trace.line = 273;
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_7->t), mesg_0 ))));
          }
        }
        else
        {
          __trace.line = 276;
          ROGUE_DEF_LOCAL_REF(RogueString*,mesg_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[455] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->name) )))) )))), Rogue_literal_strings[456] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->name) )))) )))), Rogue_literal_strings[457] )))) )))));
          __trace.line = 277;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_7->t), mesg_1 ))));
        }
      }
      __trace.line = 280;
      RogueType__add_property__Property( ROGUE_ARG(THIS->type_Global), p_7 );
    }
  }
  __trace.line = 283;
  RogueType__resolve( ROGUE_ARG(THIS->type_null) );
  __trace.line = 284;
  RogueType__resolve( ROGUE_ARG(THIS->type_Exception) );
  __trace.line = 285;
  RogueType__resolve( ROGUE_ARG(THIS->type_Real64) );
  __trace.line = 286;
  RogueType__resolve( ROGUE_ARG(THIS->type_Real32) );
  __trace.line = 287;
  RogueType__resolve( ROGUE_ARG(THIS->type_Int64) );
  __trace.line = 288;
  RogueType__resolve( ROGUE_ARG(THIS->type_Int32) );
  __trace.line = 289;
  RogueType__resolve( ROGUE_ARG(THIS->type_Character) );
  __trace.line = 290;
  RogueType__resolve( ROGUE_ARG(THIS->type_Byte) );
  __trace.line = 291;
  RogueType__resolve( ROGUE_ARG(THIS->type_Logical) );
  __trace.line = 292;
  RogueType__resolve( ROGUE_ARG(THIS->type_Global) );
  __trace.line = 294;
  RogueType__resolve( ROGUE_ARG(THIS->type_Object) );
  __trace.line = 295;
  RogueType__resolve( ROGUE_ARG(THIS->type_NativeArray) );
  __trace.line = 296;
  RogueType__resolve( ROGUE_ARG(THIS->type_GenericList) );
  __trace.line = 297;
  RogueType__resolve( ROGUE_ARG(THIS->type_String) );
  __trace.line = 299;
  if (THIS->all_requisite)
  {
    __trace.line = 300;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Type_*,_auto_180_8,(THIS->type_lookup));
      RogueInt32 _auto_181_9 = (0);
      for (;_auto_181_9 < ((RogueTable_String_Type___count( _auto_180_8 )));++_auto_181_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,t_10,(((RogueTable_String_Type___at__Int32( _auto_180_8, _auto_181_9 )))));
        __trace.line = 301;
        RogueType__resolve( t_10 );
        __trace.line = 302;
        RogueAttributes__add__Int32( ROGUE_ARG(t_10->attributes), 32768 );
        __trace.line = 303;
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_186_11,(t_10->global_method_list));
          RogueInt32 _auto_187_12 = (0);
          for (;_auto_187_12 < _auto_186_11->count;++_auto_187_12)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_13,(((RogueClassMethod*)(_auto_186_11->data->objects[_auto_187_12]))));
            RogueAttributes__add__Int32( ROGUE_ARG(r_13->attributes), 32768 );
          }
        }
        __trace.line = 304;
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_188_14,(t_10->method_list));
          RogueInt32 _auto_189_15 = (0);
          for (;_auto_189_15 < _auto_188_14->count;++_auto_189_15)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueClassMethod*)(_auto_188_14->data->objects[_auto_189_15]))));
            RogueAttributes__add__Int32( ROGUE_ARG(m_16->attributes), 32768 );
          }
        }
      }
    }
    __trace.line = 306;
    {
      ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_190_17,(THIS->template_list));
      RogueInt32 _auto_191_18 = (0);
      for (;_auto_191_18 < _auto_190_17->count;++_auto_191_18)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,templ_19,(((RogueClassTemplate*)(_auto_190_17->data->objects[_auto_191_18]))));
        __trace.line = 307;
        if (!(!!(templ_19->type_parameters)))
        {
          __trace.line = 308;
          RogueAttributes__add__Int32( ROGUE_ARG(templ_19->attributes), 32768 );
          __trace.line = 309;
          ROGUE_DEF_LOCAL_REF(RogueClassType*,t_2,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_19->t), ROGUE_ARG(templ_19->name) )))));
          __trace.line = 310;
          RogueType__resolve( t_2 );
          __trace.line = 311;
          {
            ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_192_20,(t_2->global_method_list));
            RogueInt32 _auto_193_21 = (0);
            for (;_auto_193_21 < _auto_192_20->count;++_auto_193_21)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_22,(((RogueClassMethod*)(_auto_192_20->data->objects[_auto_193_21]))));
              RogueAttributes__add__Int32( ROGUE_ARG(r_22->attributes), 32768 );
            }
          }
          __trace.line = 312;
          {
            ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_194_23,(t_2->method_list));
            RogueInt32 _auto_195_24 = (0);
            for (;_auto_195_24 < _auto_194_23->count;++_auto_195_24)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_25,(((RogueClassMethod*)(_auto_194_23->data->objects[_auto_195_24]))));
              RogueAttributes__add__Int32( ROGUE_ARG(m_25->attributes), 32768 );
            }
          }
        }
      }
    }
  }
  __trace.line = 317;
  RogueLogical resolve_types_3 = (true);
  __trace.line = 318;
  while (resolve_types_3)
  {
    __trace.line = 319;
    resolve_types_3 = ((RogueLogical)false);
    __trace.line = 322;
    {
      ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_196_26,(THIS->template_list));
      RogueInt32 _auto_197_27 = (0);
      for (;_auto_197_27 < _auto_196_26->count;++_auto_197_27)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,templ_28,(((RogueClassTemplate*)(_auto_196_26->data->objects[_auto_197_27]))));
        __trace.line = 323;
        if ((!!((templ_28->attributes->flags & 32768)) && !(!!(templ_28->type_parameters))))
        {
          __trace.line = 324;
          RogueType__resolve( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_28->t), ROGUE_ARG(templ_28->name) )))) );
        }
      }
    }
    __trace.line = 328;
    RogueInt32 i_4 = (0);
    __trace.line = 329;
    while (i_4 < THIS->type_list->count)
    {
      __trace.line = 330;
      RogueType__resolve( ROGUE_ARG(((RogueClassType*)(THIS->type_list->data->objects[i_4]))) );
      __trace.line = 331;
      ++i_4;
      __trace.line = 332;
      if (i_4 == THIS->type_list->count)
      {
        __trace.line = 335;
        if (!!(THIS->m_run_tests))
        {
          __trace.line = 336;
          THIS->m_run_tests->resolved = false;
          __trace.line = 337;
          RogueMethod__resolve( ROGUE_ARG(THIS->m_run_tests) );
        }
      }
    }
    __trace.line = 343;
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_205_29,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
      RogueInt32 _auto_206_30 = (0);
      for (;_auto_206_30 < _auto_205_29->count;++_auto_206_30)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_31,(((RogueClassPlugin*)(_auto_205_29->data->objects[_auto_206_30]))));
        __trace.line = 344;
        if (((RoguePlugin__generate_additional_types( plugin_31 ))))
        {
          resolve_types_3 = ((RogueLogical)true);
        }
      }
    }
  }
  __trace.line = 348;
  RogueProgram__cull_unused_code( ROGUE_ARG(THIS) );
  __trace.line = 350;
  RogueProgram__reorder_compounds( ROGUE_ARG(THIS) );
}

void RogueProgram__reorder_compounds( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.reorder_compounds()", "Program.rogue", 352 );
  __trace.line = 359;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,compounds_0,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  __trace.line = 361;
  RogueInt32 write_i_1 = (0);
  __trace.line = 362;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_207_5,(THIS->type_list));
    RogueInt32 read_i_6 = (0);
    for (;read_i_6 < _auto_207_5->count;++read_i_6)
    {
      __trace.line = 363;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(THIS->type_list->data->objects[read_i_6]))));
      __trace.line = 364;
      if (((RogueType__is_compound( type_2 ))))
      {
        __trace.line = 365;
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), type_2, compounds_0 );
      }
      else
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->type_list->data->objects[write_i_1] = type_2;
        __trace.filename = "Program.rogue";
        __trace.line = 368;
        type_2->index = write_i_1;
        __trace.line = 369;
        ++write_i_1;
      }
    }
  }
  __trace.line = 372;
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_1 );
  __trace.line = 374;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_208_7,(compounds_0));
    RogueInt32 _auto_209_8 = (0);
    for (;_auto_209_8 < _auto_208_7->count;++_auto_209_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_9,(((RogueClassType*)(_auto_208_7->data->objects[_auto_209_8]))));
      __trace.line = 375;
      type_9->index = THIS->type_list->count;
      __trace.line = 376;
      RogueType_List__add__Type( ROGUE_ARG(THIS->type_list), type_9 );
    }
  }
  __trace.line = 380;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_210_10,(THIS->type_list));
    RogueInt32 _auto_211_11 = (0);
    for (;_auto_211_11 < _auto_210_10->count;++_auto_211_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_12,(((RogueClassType*)(_auto_210_10->data->objects[_auto_211_11]))));
      __trace.line = 381;
      if ((((RogueType__instance_of__Type( type_12, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))) && ((void*)type_12) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception)))
      {
        __trace.line = 382;
        if (type_12->base_class->index > type_12->index)
        {
          __trace.line = 383;
          RogueInt32 i1_3 = (type_12->base_class->index);
          __trace.line = 384;
          RogueInt32 i2_4 = (type_12->index);
          __trace.line = 385;
          RogueType_List__swap__Int32_Int32( ROGUE_ARG(THIS->type_list), i1_3, i2_4 );
          __trace.line = 386;
          type_12->index = i1_3;
          __trace.line = 387;
          type_12->base_class->index = i2_4;
        }
      }
    }
  }
}

void RogueProgram__collect_compound_dependencies__Type_Type_List( RogueClassProgram* THIS, RogueClassType* type_0, RogueType_List* compounds_1 )
{
  RogueDebugTrace __trace( "Program.collect_compound_dependencies(Type,Type[])", "Program.rogue", 393 );
  __trace.line = 394;
  if (type_0->index == -1)
  {
    return;
  }
  __trace.line = 395;
  type_0->index = -1;
  __trace.line = 397;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_212_2,(type_0->property_list));
    RogueInt32 _auto_213_3 = (0);
    for (;_auto_213_3 < _auto_212_2->count;++_auto_213_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_4,(((RogueClassProperty*)(_auto_212_2->data->objects[_auto_213_3]))));
      __trace.line = 398;
      if (((RogueType__is_compound( ROGUE_ARG(p_4->_type) ))))
      {
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), ROGUE_ARG(p_4->_type), compounds_1 );
      }
    }
  }
  __trace.line = 400;
  RogueType_List__add__Type( compounds_1, type_0 );
}

void RogueProgram__cull_unused_code( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.cull_unused_code()", "Program.rogue", 402 );
  __trace.line = 403;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_214_2,(THIS->type_list));
    RogueInt32 _auto_215_3 = (0);
    for (;_auto_215_3 < _auto_214_2->count;++_auto_215_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueClassType*)(_auto_214_2->data->objects[_auto_215_3]))));
      __trace.line = 404;
      if (((RogueType__is_requisite( type_4 ))))
      {
        RogueType__trace_used_code( type_4 );
      }
    }
  }
  __trace.line = 407;
  RogueProgram__trace_overridden_methods( ROGUE_ARG(THIS) );
  __trace.line = 409;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_216_5,(THIS->type_list));
    RogueInt32 _auto_217_6 = (0);
    for (;_auto_217_6 < _auto_216_5->count;++_auto_217_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueClassType*)(_auto_216_5->data->objects[_auto_217_6]))));
      __trace.line = 410;
      RogueType__cull_unused_methods( type_7 );
    }
  }
  __trace.line = 413;
  RogueInt32 write_i_0 = (0);
  __trace.line = 414;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_218_8,(THIS->type_list));
    RogueInt32 read_i_9 = (0);
    for (;read_i_9 < _auto_218_8->count;++read_i_9)
    {
      __trace.line = 415;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueClassType*)(THIS->type_list->data->objects[read_i_9]))));
      __trace.line = 416;
      if (!(((RogueType__should_cull( type_1 )))))
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->type_list->data->objects[write_i_0] = type_1;
        __trace.filename = "Program.rogue";
        __trace.line = 418;
        type_1->index = write_i_0;
        __trace.line = 419;
        ++write_i_0;
      }
    }
  }
  __trace.line = 422;
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_0 );
}

void RogueProgram__trace_overridden_methods( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.trace_overridden_methods()", "Program.rogue", 424 );
  __trace.line = 430;
  RogueLogical traced_new_methods_0 = (true);
  __trace.line = 431;
  while (traced_new_methods_0)
  {
    __trace.line = 432;
    traced_new_methods_0 = ((RogueLogical)false);
    __trace.line = 434;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_219_5,(THIS->type_list));
      RogueInt32 _auto_220_6 = (0);
      for (;_auto_220_6 < _auto_219_5->count;++_auto_220_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueClassType*)(_auto_219_5->data->objects[_auto_220_6]))));
        __trace.line = 435;
        if (type_7->is_used)
        {
          __trace.line = 436;
          if (((RogueType__is_aspect( type_7 ))))
          {
            __trace.line = 438;
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_221_8,(type_7->method_list));
              RogueInt32 _auto_222_9 = (0);
              for (;_auto_222_9 < _auto_221_8->count;++_auto_222_9)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_221_8->data->objects[_auto_222_9]))));
                __trace.line = 439;
                if ((m_10->is_used && !!(m_10->incorporating_classes)))
                {
                  __trace.line = 440;
                  {
                    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_223_11,(m_10->incorporating_classes));
                    RogueInt32 _auto_224_12 = (0);
                    for (;_auto_224_12 < _auto_223_11->count;++_auto_224_12)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_13,(((RogueClassType*)(_auto_223_11->data->objects[_auto_224_12]))));
                      __trace.line = 441;
                      if (ic_13->is_used)
                      {
                        __trace.line = 442;
                        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,im_1,(((RogueType__find_method__String( ic_13, ROGUE_ARG(m_10->signature) )))));
                        __trace.line = 443;
                        if (!(im_1->is_used))
                        {
                          __trace.line = 444;
                          traced_new_methods_0 = ((RogueLogical)true);
                          __trace.line = 445;
                          RogueMethod__trace_used_code( im_1 );
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            __trace.line = 453;
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_225_14,(type_7->method_list));
              RogueInt32 _auto_226_15 = (0);
              for (;_auto_226_15 < _auto_225_14->count;++_auto_226_15)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueClassMethod*)(_auto_225_14->data->objects[_auto_226_15]))));
                __trace.line = 454;
                if (m_16->is_used)
                {
                  __trace.line = 462;
                  {
                    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_227_17,(m_16->overriding_methods));
                    RogueInt32 _auto_228_18 = (0);
                    for (;_auto_228_18 < _auto_227_17->count;++_auto_228_18)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_19,(((RogueClassMethod*)(_auto_227_17->data->objects[_auto_228_18]))));
                      __trace.line = 463;
                      if ((!(overriding_m_19->is_used) && overriding_m_19->type_context->is_used))
                      {
                        __trace.line = 464;
                        traced_new_methods_0 = ((RogueLogical)true);
                        __trace.line = 465;
                        RogueMethod__trace_used_code( overriding_m_19 );
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __trace.line = 481;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,class_list_2,(((RogueType_List__filtered__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_229*)ROGUE_SINGLETON(Function_229))))) )))));
  __trace.line = 482;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,aspect_list_3,(((RogueType_List__filtered__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_230*)ROGUE_SINGLETON(Function_230))))) )))));
  __trace.line = 485;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_231_20,(aspect_list_3));
    RogueInt32 _auto_232_21 = (0);
    for (;_auto_232_21 < _auto_231_20->count;++_auto_232_21)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_22,(((RogueClassType*)(_auto_231_20->data->objects[_auto_232_21]))));
      __trace.line = 486;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_233_23,(aspect_22->method_list));
        RogueInt32 _auto_234_24 = (0);
        for (;_auto_234_24 < _auto_233_23->count;++_auto_234_24)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_25,(((RogueClassMethod*)(_auto_233_23->data->objects[_auto_234_24]))));
          __trace.line = 487;
          if ((aspect_m_25->is_used && !!(aspect_m_25->incorporating_classes)))
          {
            RogueType_List__clear( ROGUE_ARG(aspect_m_25->incorporating_classes) );
          }
        }
      }
    }
  }
  __trace.line = 491;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_235_26,(aspect_list_3));
    RogueInt32 _auto_236_27 = (0);
    for (;_auto_236_27 < _auto_235_26->count;++_auto_236_27)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_28,(((RogueClassType*)(_auto_235_26->data->objects[_auto_236_27]))));
      __trace.line = 492;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_237_29,(class_list_2));
        RogueInt32 _auto_238_30 = (0);
        for (;_auto_238_30 < _auto_237_29->count;++_auto_238_30)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,type_31,(((RogueClassType*)(_auto_237_29->data->objects[_auto_238_30]))));
          __trace.line = 493;
          if (((RogueType__instance_of__Type( type_31, aspect_28 ))))
          {
            __trace.line = 494;
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_239_32,(aspect_28->method_list));
              RogueInt32 _auto_240_33 = (0);
              for (;_auto_240_33 < _auto_239_32->count;++_auto_240_33)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_34,(((RogueClassMethod*)(_auto_239_32->data->objects[_auto_240_33]))));
                __trace.line = 495;
                if (aspect_m_34->is_used)
                {
                  __trace.line = 496;
                  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,class_m_4,(((RogueType__find_method__String( type_31, ROGUE_ARG(aspect_m_34->signature) )))));
                  __trace.line = 497;
                  if (((!!(class_m_4) && class_m_4->is_used) && !!(aspect_m_34->incorporating_classes)))
                  {
                    __trace.line = 498;
                    RogueType_List__add__Type( ROGUE_ARG(aspect_m_34->incorporating_classes), type_31 );
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

RogueString* RogueProgram__validate_cpp_name__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Program.validate_cpp_name(String)", "CPPWriter.rogue", 6 );
  __trace.line = 7;
  RogueLogical begins_with_code_prefix_1 = (false);
  __trace.line = 8;
  if (((RogueString__begins_with__String( name_0, ROGUE_ARG(THIS->code_prefix) ))))
  {
    __trace.line = 9;
    begins_with_code_prefix_1 = ((RogueLogical)true);
    __trace.line = 10;
    name_0 = ((RogueString*)((RogueString__from__Int32( name_0, ROGUE_ARG(THIS->code_prefix->character_count) ))));
  }
  __trace.line = 14;
  RogueLogical all_underscores_2 = (true);
  __trace.line = 15;
  if (((RogueString__ends_with__String( name_0, Rogue_literal_strings[517] ))))
  {
    __trace.line = 16;
    {
      RogueInt32 i_3 = (0);
      RogueInt32 _auto_84_4 = ((name_0->character_count - 5));
      for (;i_3 <= _auto_84_4;++i_3)
      {
        __trace.line = 17;
        if (RogueString_character_at(name_0,i_3) != (RogueCharacter)'_')
        {
          all_underscores_2 = ((RogueLogical)false);
          goto _auto_241;
        }
      }
    }
    _auto_241:;
    __trace.line = 19;
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[461], name_0 ))));
  }
  __trace.line = 23;
  RogueOptionalInt32 i1_5 = (((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 24;
  while (i1_5.exists)
  {
    __trace.line = 25;
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[311], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))), ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 1)) )))) ))));
    __trace.line = 26;
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 30;
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[209], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 31;
  while (i1_5.exists)
  {
    __trace.line = 32;
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))) )))), Rogue_literal_strings[518] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    __trace.line = 33;
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[209], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 37;
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[236], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 38;
  while (i1_5.exists)
  {
    __trace.line = 39;
    RogueOptionalInt32 i2_6 = (((RogueProgram__locate_matching_close_specialize__String_OptionalInt32( ROGUE_ARG(THIS), name_0, i1_5 ))));
    __trace.line = 40;
    if (!(i2_6.exists))
    {
      goto _auto_242;
    }
    __trace.line = 42;
    ROGUE_DEF_LOCAL_REF(RogueString*,before_7,(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))));
    __trace.line = 43;
    ROGUE_DEF_LOCAL_REF(RogueString*,after_8,(((RogueString__from__Int32( name_0, ROGUE_ARG((i2_6.value + 2)) )))));
    __trace.line = 44;
    ROGUE_DEF_LOCAL_REF(RogueString*,middle_9,(((RogueString__from__Int32_Int32( name_0, ROGUE_ARG((i1_5.value + 2)), ROGUE_ARG((i2_6.value - 1)) )))));
    __trace.line = 46;
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], before_7 )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], middle_9 )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], after_8 )))) )))) ))));
    __trace.line = 48;
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[236], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  _auto_242:;
  __trace.line = 52;
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[222], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 53;
  while (i1_5.exists)
  {
    __trace.line = 54;
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))) )))) )))), Rogue_literal_strings[519] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    __trace.line = 55;
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[222], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 58;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  __trace.line = 59;
  if (begins_with_code_prefix_1)
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->code_prefix) );
  }
  __trace.line = 61;
  RogueInt32 count_10 = (name_0->character_count);
  __trace.line = 62;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_243_12,(name_0));
    RogueInt32 i_13 = (0);
    for (;i_13 < _auto_243_12->character_count;++i_13)
    {
      __trace.line = 63;
      RogueCharacter ch_11 = (RogueString_character_at(name_0,i_13));
      __trace.line = 64;
      if ((((RogueCharacter__is_alphanumeric( ch_11 ))) || ch_11 == (RogueCharacter)'$'))
      {
        __trace.line = 65;
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), ch_11, true );
      }
      else
      {
        __trace.line = 67;
        switch (ch_11)
        {
          case (RogueCharacter)'!':
          {
            __trace.line = 68;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[520] );
            break;
          }
          case (RogueCharacter)'%':
          {
            __trace.line = 69;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[521] );
            break;
          }
          case (RogueCharacter)'&':
          {
            __trace.line = 70;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[522] );
            break;
          }
          case (RogueCharacter)'*':
          {
            __trace.line = 71;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[523] );
            break;
          }
          case (RogueCharacter)'+':
          {
            __trace.line = 72;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[524] );
            break;
          }
          case (RogueCharacter)'-':
          {
            __trace.line = 74;
            if ((i_13 + 1) < name_0->character_count)
            {
              __trace.line = 75;
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'>':
                {
                  __trace.line = 77;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[518] );
                  __trace.line = 78;
                  ++i_13;
                  break;
                }
                default:
                {
                  __trace.line = 80;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[525] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'.':
          {
            __trace.line = 83;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[461] );
            break;
          }
          case (RogueCharacter)'/':
          {
            __trace.line = 84;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[526] );
            break;
          }
          case (RogueCharacter)'<':
          {
            __trace.line = 86;
            if ((i_13 + 1) < name_0->character_count)
            {
              __trace.line = 87;
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  __trace.line = 89;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[527] );
                  __trace.line = 90;
                  ++i_13;
                  break;
                }
                default:
                {
                  __trace.line = 92;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[528] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'=':
          {
            __trace.line = 95;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[529] );
            break;
          }
          case (RogueCharacter)'>':
          {
            __trace.line = 97;
            if ((i_13 + 1) < name_0->character_count)
            {
              __trace.line = 98;
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  __trace.line = 100;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[530] );
                  __trace.line = 101;
                  ++i_13;
                  break;
                }
                default:
                {
                  __trace.line = 103;
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[531] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'^':
          {
            __trace.line = 106;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[532] );
            break;
          }
          case (RogueCharacter)'|':
          {
            __trace.line = 107;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[533] );
            break;
          }
          case (RogueCharacter)'~':
          {
            __trace.line = 108;
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[534] );
            break;
          }
          default:
          {
            __trace.line = 109;
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)'_', true );
          }
        }
      }
    }
  }
  __trace.line = 114;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueOptionalInt32 RogueProgram__locate_matching_close_specialize__String_OptionalInt32( RogueClassProgram* THIS, RogueString* st_0, RogueOptionalInt32 i1_1 )
{
  RogueDebugTrace __trace( "Program.locate_matching_close_specialize(String,Int32?)", "CPPWriter.rogue", 116 );
  __trace.line = 117;
  RogueInt32 nesting_level_2 = (1);
  __trace.line = 118;
  {
    RogueInt32 i_3 = ((i1_1.value + 2));
    RogueInt32 _auto_85_4 = ((st_0->character_count - 2));
    for (;i_3 <= _auto_85_4;++i_3)
    {
      __trace.line = 119;
      if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'<' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'<'))
      {
        __trace.line = 120;
        ++nesting_level_2;
        __trace.line = 121;
        ++i_3;
      }
      else if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'>' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'>'))
      {
        __trace.line = 123;
        --nesting_level_2;
        __trace.line = 124;
        if (nesting_level_2 == 0)
        {
          return (RogueOptionalInt32)(RogueOptionalInt32( i_3, true ));
        }
        __trace.line = 125;
        ++i_3;
      }
    }
  }
  __trace.line = 128;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

void RogueProgram__write_cpp__String( RogueClassProgram* THIS, RogueString* filepath_0 )
{
  RogueDebugTrace __trace( "Program.write_cpp(String)", "CPPWriter.rogue", 130 );
  __trace.line = 131;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_244_25,(THIS->type_list));
    RogueInt32 _auto_245_26 = (0);
    for (;_auto_245_26 < _auto_244_25->count;++_auto_245_26)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_27,(((RogueClassType*)(_auto_244_25->data->objects[_auto_245_26]))));
      __trace.line = 132;
      RogueType__assign_cpp_name( type_27 );
    }
  }
  __trace.line = 134;
  THIS->type_NativeArray->cpp_class_name = Rogue_literal_strings[535];
  __trace.line = 136;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_246_28,(THIS->type_list));
    RogueInt32 _auto_247_29 = (0);
    for (;_auto_247_29 < _auto_246_28->count;++_auto_247_29)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_30,(((RogueClassType*)(_auto_246_28->data->objects[_auto_247_29]))));
      __trace.line = 137;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_248_31,(type_30->global_method_list));
        RogueInt32 _auto_249_32 = (0);
        for (;_auto_249_32 < _auto_248_31->count;++_auto_249_32)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_33,(((RogueClassMethod*)(_auto_248_31->data->objects[_auto_249_32]))));
          RogueMethod__assign_cpp_name( r_33 );
        }
      }
      __trace.line = 138;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_250_34,(type_30->method_list));
        RogueInt32 _auto_251_35 = (0);
        for (;_auto_251_35 < _auto_250_34->count;++_auto_251_35)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_36,(((RogueClassMethod*)(_auto_250_34->data->objects[_auto_251_35]))));
          RogueMethod__assign_cpp_name( m_36 );
        }
      }
    }
  }
  __trace.line = 142;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[539] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[540] )))) )))) );
  __trace.line = 143;
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_1,(((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[541] )))) )))));
  __trace.line = 146;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[542] );
  __trace.line = 147;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[543] );
  __trace.line = 148;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[542] );
  __trace.line = 149;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[544] );
  __trace.line = 152;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[545] );
  __trace.line = 153;
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 0))) ? (Rogue_literal_strings[546]) : Rogue_literal_strings[547])) );
  __trace.line = 154;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[548] );
  __trace.line = 155;
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 1))) ? (Rogue_literal_strings[546]) : Rogue_literal_strings[547])) );
  __trace.line = 156;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[549] );
  __trace.line = 157;
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 2))) ? (Rogue_literal_strings[546]) : Rogue_literal_strings[547])) );
  __trace.line = 158;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 161;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[550] );
  __trace.line = 162;
  RogueCPPWriter__println__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[551] )))), ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_threshold) );
  __trace.line = 163;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[552] );
  __trace.line = 164;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 167;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[553] );
  __trace.line = 168;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_255_37,(THIS->native_header));
    RogueInt32 _auto_256_38 = (0);
    for (;_auto_256_38 < _auto_255_37->count;++_auto_256_38)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_39,(((RogueString*)(_auto_255_37->data->objects[_auto_256_38]))));
      __trace.line = 169;
      RogueCPPWriter__println__String( writer_1, line_39 );
    }
  }
  __trace.line = 172;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[554] );
  __trace.line = 173;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 176;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[555] );
  __trace.line = 177;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_257_40,(THIS->type_list));
    RogueInt32 _auto_258_41 = (0);
    for (;_auto_258_41 < _auto_257_40->count;++_auto_258_41)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_42,(((RogueClassType*)(_auto_257_40->data->objects[_auto_258_41]))));
      __trace.line = 178;
      if ((!(((RogueType__omit_output( type_42 )))) && !(((RogueType__is_primitive( type_42 ))))))
      {
        __trace.line = 179;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[556] )))), ROGUE_ARG(type_42->cpp_class_name) )))), Rogue_literal_strings[243] );
      }
    }
  }
  __trace.line = 182;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 185;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[557] );
  __trace.line = 186;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_259_43,(THIS->type_list));
    RogueInt32 _auto_260_44 = (0);
    for (;_auto_260_44 < _auto_259_43->count;++_auto_260_44)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_45,(((RogueClassType*)(_auto_259_43->data->objects[_auto_260_44]))));
      __trace.line = 187;
      if ((((RogueType__is_compound( type_45 ))) && !(((RogueType__omit_output( type_45 ))))))
      {
        __trace.line = 188;
        RogueType__print_data_definition__CPPWriter( type_45, writer_1 );
        __trace.line = 189;
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  __trace.line = 192;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 195;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[589] );
  __trace.line = 196;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_261_46,(THIS->type_list));
    RogueInt32 _auto_262_47 = (0);
    for (;_auto_262_47 < _auto_261_46->count;++_auto_262_47)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_48,(((RogueClassType*)(_auto_261_46->data->objects[_auto_262_47]))));
      __trace.line = 197;
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_263_49,(type_48->global_list));
        RogueInt32 _auto_264_50 = (0);
        for (;_auto_264_50 < _auto_263_49->count;++_auto_264_50)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_51,(((RogueClassProperty*)(_auto_263_49->data->objects[_auto_264_50]))));
          __trace.line = 198;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[590] )))), ROGUE_ARG(g_51->_type) )))), Rogue_literal_strings[591] );
          __trace.line = 199;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_48->cpp_name) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(g_51->cpp_name) )))), Rogue_literal_strings[243] );
        }
      }
    }
  }
  __trace.line = 202;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 205;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[592] );
  __trace.line = 206;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_265_52,(THIS->type_list));
    RogueInt32 _auto_266_53 = (0);
    for (;_auto_266_53 < _auto_265_52->count;++_auto_266_53)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_54,(((RogueClassType*)(_auto_265_52->data->objects[_auto_266_53]))));
      __trace.line = 207;
      if ((!(((RogueType__is_compound( type_54 )))) && !(((RogueType__omit_output( type_54 ))))))
      {
        __trace.line = 208;
        RogueType__print_data_definition__CPPWriter( type_54, writer_1 );
        __trace.line = 209;
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  __trace.line = 212;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 215;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[593] );
  __trace.line = 216;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_267_55,(THIS->type_list));
    RogueInt32 _auto_268_56 = (0);
    for (;_auto_268_56 < _auto_267_55->count;++_auto_268_56)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_57,(((RogueClassType*)(_auto_267_55->data->objects[_auto_268_56]))));
      __trace.line = 217;
      if ((!(((RogueType__omit_output( type_57 )))) || (((RogueType__is_native( type_57 ))) && !(type_57->is_array))))
      {
        __trace.line = 218;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[594] );
        __trace.line = 219;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_57->cpp_name) )))), Rogue_literal_strings[243] );
      }
    }
  }
  __trace.line = 222;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 225;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[595] );
  __trace.line = 226;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_269_58,(THIS->type_list));
    RogueInt32 _auto_270_59 = (0);
    for (;_auto_270_59 < _auto_269_58->count;++_auto_270_59)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_60,(((RogueClassType*)(_auto_269_58->data->objects[_auto_270_59]))));
      RogueType__print_global_method_prototypes__CPPWriter( type_60, writer_1 );
    }
  }
  __trace.line = 227;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 230;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[597] );
  __trace.line = 231;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_271_61,(THIS->type_list));
    RogueInt32 _auto_272_62 = (0);
    for (;_auto_272_62 < _auto_271_61->count;++_auto_272_62)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_63,(((RogueClassType*)(_auto_271_61->data->objects[_auto_272_62]))));
      RogueType__print_method_prototypes__CPPWriter( type_63, writer_1 );
    }
  }
  __trace.line = 232;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 235;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[598] );
  __trace.line = 236;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[599] );
  __trace.line = 237;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 239;
  RogueCPPWriter__close( writer_1 );
  __trace.line = 242;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[539] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[600] )))) )))) );
  __trace.line = 243;
  writer_1 = ((RogueClassCPPWriter*)((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[516] )))) ))));
  __trace.line = 245;
  ROGUE_DEF_LOCAL_REF(RogueString*,base_filename_2,(filepath_0));
  __trace.line = 246;
  if (((RogueString__contains__Character( base_filename_2, (RogueCharacter)'/' ))))
  {
    base_filename_2 = ((RogueString*)((RogueString__after_last__Character( base_filename_2, (RogueCharacter)'/' ))));
  }
  __trace.line = 247;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[601] );
  __trace.line = 248;
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[602] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_filename_2 )))) )))), Rogue_literal_strings[603] )))) )))) );
  __trace.line = 249;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 252;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_273_64,(THIS->native_code));
    RogueInt32 _auto_274_65 = (0);
    for (;_auto_274_65 < _auto_273_64->count;++_auto_274_65)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_66,(((RogueString*)(_auto_273_64->data->objects[_auto_274_65]))));
      __trace.line = 253;
      RogueCPPWriter__println__String( writer_1, line_66 );
    }
  }
  __trace.line = 257;
  ROGUE_DEF_LOCAL_REF(RogueString_List*,native_method_signature_list_3,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  __trace.line = 258;
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Method_*,native_method_signature_lookup_4,(((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )))));
  __trace.line = 259;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_275_67,(THIS->type_list));
    RogueInt32 _auto_276_68 = (0);
    for (;_auto_276_68 < _auto_275_67->count;++_auto_276_68)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_69,(((RogueClassType*)(_auto_275_67->data->objects[_auto_276_68]))));
      __trace.line = 260;
      if (type_69->is_used)
      {
        __trace.line = 261;
        RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( type_69, native_method_signature_list_3, native_method_signature_lookup_4 );
      }
    }
  }
  __trace.line = 265;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_277_70,(native_method_signature_list_3));
    RogueInt32 _auto_278_71 = (0);
    for (;_auto_278_71 < _auto_277_70->count;++_auto_278_71)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_72,(((RogueString*)(_auto_277_70->data->objects[_auto_278_71]))));
      __trace.line = 266;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[606] )))), ROGUE_ARG(((RogueString__before_first__String( sig_72, Rogue_literal_strings[607] )))) )))), Rogue_literal_strings[608] );
      __trace.line = 267;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueTable_String_Method___get__String( native_method_signature_lookup_4, sig_72 )))->cpp_typedef) )))), Rogue_literal_strings[34] );
      __trace.line = 268;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueString__after_first__String( sig_72, Rogue_literal_strings[607] )))) )))), Rogue_literal_strings[243] );
    }
  }
  __trace.line = 270;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 273;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_279_73,(native_method_signature_list_3));
    RogueInt32 _auto_280_74 = (0);
    for (;_auto_280_74 < _auto_279_73->count;++_auto_280_74)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_75,(((RogueString*)(_auto_279_73->data->objects[_auto_280_74]))));
      __trace.line = 274;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueTable_String_Method___get__String( native_method_signature_lookup_4, sig_75 )))));
      __trace.line = 275;
      if (m_5->called_dynamically)
      {
        __trace.line = 276;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(m_5->_return_type) )))), Rogue_literal_strings[609] )))), ROGUE_ARG(m_5->cpp_typedef) );
        __trace.line = 277;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[610] )))), ROGUE_ARG(m_5->type_context) )))), Rogue_literal_strings[596] );
        __trace.line = 278;
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_287_76,(m_5->parameters));
          RogueInt32 i_77 = (0);
          for (;i_77 < _auto_287_76->count;++i_77)
          {
            __trace.line = 279;
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_6,(((RogueClassLocal*)(m_5->parameters->data->objects[i_77]))));
            __trace.line = 280;
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[574] )))), ROGUE_ARG(p_6->_type) )))), Rogue_literal_strings[611] )))), i_77 );
          }
        }
        __trace.line = 282;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[612] );
        __trace.line = 283;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
        __trace.line = 284;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[335] );
        __trace.line = 285;
        if (!!(m_5->_return_type))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[613] );
        }
        __trace.line = 286;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[614] )))), ROGUE_ARG(m_5->cpp_typedef) );
        __trace.line = 287;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[615] );
        __trace.line = 288;
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_288_78,(m_5->parameters));
          RogueInt32 i_79 = (0);
          for (;i_79 < _auto_288_78->count;++i_79)
          {
            __trace.line = 289;
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[616] )))), i_79 );
          }
        }
        __trace.line = 291;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[617] );
        __trace.line = 292;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
        __trace.line = 293;
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  __trace.line = 296;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 299;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[589] );
  __trace.line = 300;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_289_80,(THIS->type_list));
    RogueInt32 _auto_290_81 = (0);
    for (;_auto_290_81 < _auto_289_80->count;++_auto_290_81)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_82,(((RogueClassType*)(_auto_289_80->data->objects[_auto_290_81]))));
      __trace.line = 301;
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_291_83,(type_82->global_list));
        RogueInt32 _auto_292_84 = (0);
        for (;_auto_292_84 < _auto_291_83->count;++_auto_292_84)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_85,(((RogueClassProperty*)(_auto_291_83->data->objects[_auto_292_84]))));
          __trace.line = 302;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(g_85->_type) )))), Rogue_literal_strings[591] );
          __trace.line = 303;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_82->cpp_name) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(g_85->cpp_name) );
          __trace.line = 304;
          RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[618] )))), ROGUE_ARG(g_85->_type) );
          __trace.line = 305;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[243] );
        }
      }
    }
  }
  __trace.line = 308;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 311;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_293_86,(THIS->type_list));
    RogueInt32 _auto_294_87 = (0);
    for (;_auto_294_87 < _auto_293_86->count;++_auto_294_87)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_88,(((RogueClassType*)(_auto_293_86->data->objects[_auto_294_87]))));
      __trace.line = 312;
      if (((((RogueType__has_object_references( type_88 ))) && !(((RogueType__is_reference_array( type_88 ))))) && !(((RogueType__is_aspect( type_88 ))))))
      {
        __trace.line = 314;
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_7,(type_88->cpp_name));
        __trace.line = 315;
        if ((type_88->is_array && ((RogueType__is_compound( ROGUE_ARG(type_88->_element_type) )))))
        {
          __trace.line = 316;
          trace_name_7 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_88->name) ))));
        }
        __trace.line = 319;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[619] )))), trace_name_7 )))), Rogue_literal_strings[620] );
      }
    }
  }
  __trace.line = 322;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 325;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_295_89,(THIS->type_list));
    RogueInt32 _auto_296_90 = (0);
    for (;_auto_296_90 < _auto_295_89->count;++_auto_296_90)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_91,(((RogueClassType*)(_auto_295_89->data->objects[_auto_296_90]))));
      __trace.line = 326;
      if (((((RogueType__has_object_references( type_91 ))) && !(((RogueType__is_reference_array( type_91 ))))) && !(((RogueType__is_aspect( type_91 ))))))
      {
        __trace.line = 328;
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_8,(type_91->cpp_name));
        __trace.line = 329;
        if ((type_91->is_array && ((RogueType__is_compound( ROGUE_ARG(type_91->_element_type) )))))
        {
          __trace.line = 330;
          trace_name_8 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_91->name) ))));
        }
        __trace.line = 333;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[619] )))), trace_name_8 )))), Rogue_literal_strings[621] );
        __trace.line = 334;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
        __trace.line = 335;
        writer_1->indent += 2;
        __trace.line = 337;
        if (((RogueType__is_compound( type_91 ))))
        {
          __trace.line = 338;
          RogueLogical uses_link_9 = (false);
          __trace.line = 339;
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_297_92,(type_91->property_list));
            RogueInt32 _auto_298_93 = (0);
            for (;_auto_298_93 < _auto_297_92->count;++_auto_298_93)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_94,(((RogueClassProperty*)(_auto_297_92->data->objects[_auto_298_93]))));
              __trace.line = 340;
              if (((RogueType__is_reference( ROGUE_ARG(p_94->_type) ))))
              {
                __trace.line = 341;
                uses_link_9 = ((RogueLogical)true);
                __trace.line = 342;
                goto _auto_299;
              }
            }
          }
          _auto_299:;
          __trace.line = 345;
          if (uses_link_9)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[622] );
          }
          __trace.line = 347;
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_91, writer_1 );
        }
        else if (type_91->is_array)
        {
          __trace.line = 352;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[630] );
          __trace.line = 355;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(type_91->_element_type) )))), Rogue_literal_strings[631] );
          __trace.line = 357;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[632] );
          __trace.line = 363;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[633] )))), ROGUE_ARG(type_91->_element_type->cpp_class_name) )))), Rogue_literal_strings[634] );
          __trace.line = 365;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[635] );
          __trace.line = 366;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
          __trace.line = 367;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[636] )))), ROGUE_ARG(type_91->_element_type->cpp_name) )))), Rogue_literal_strings[637] );
          __trace.line = 368;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
        }
        else
        {
          __trace.line = 372;
          RogueLogical uses_link_10 = (false);
          __trace.line = 373;
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_300_95,(type_91->property_list));
            RogueInt32 _auto_301_96 = (0);
            for (;_auto_301_96 < _auto_300_95->count;++_auto_301_96)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_97,(((RogueClassProperty*)(_auto_300_95->data->objects[_auto_301_96]))));
              __trace.line = 374;
              if (((RogueType__is_reference( ROGUE_ARG(p_97->_type) ))))
              {
                __trace.line = 375;
                uses_link_10 = ((RogueLogical)true);
                __trace.line = 376;
                goto _auto_302;
              }
            }
          }
          _auto_302:;
          __trace.line = 380;
          if (uses_link_10)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[622] );
          }
          __trace.line = 382;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[638] );
          __trace.line = 385;
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_91, writer_1 );
        }
        __trace.line = 388;
        writer_1->indent -= 2;
        __trace.line = 389;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
        __trace.line = 390;
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  __trace.line = 394;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 397;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[639] );
  __trace.line = 398;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 399;
  writer_1->indent += 2;
  __trace.line = 400;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_303_98,(THIS->type_list));
    RogueInt32 i_99 = (0);
    for (;i_99 < _auto_303_98->count;++i_99)
    {
      __trace.line = 401;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_11,(((RogueClassType*)(THIS->type_list->data->objects[i_99]))));
      __trace.line = 402;
      if (i_99 > 0)
      {
        __trace.line = 403;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[217] );
        __trace.line = 404;
        if ((i_99 & 15) == 0)
        {
          RogueCPPWriter__println( writer_1 );
        }
      }
      __trace.line = 406;
      RogueCPPWriter__print__Int32( writer_1, ROGUE_ARG(((RogueProgram__add_literal_string__String( ROGUE_ARG(THIS), ROGUE_ARG(type_11->name) )))) );
    }
  }
  __trace.line = 408;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 409;
  writer_1->indent -= 2;
  __trace.line = 410;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 413;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  __trace.line = 414;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 415;
  writer_1->indent += 2;
  __trace.line = 416;
  RogueLogical first_12 = (true);
  __trace.line = 417;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_304_100,(THIS->type_list));
    RogueInt32 _auto_305_101 = (0);
    for (;_auto_305_101 < _auto_304_100->count;++_auto_305_101)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_102,(((RogueClassType*)(_auto_304_100->data->objects[_auto_305_101]))));
      __trace.line = 418;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 419;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 421;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_13,(((RogueType__find_method__String( type_102, Rogue_literal_strings[408] )))));
      __trace.line = 422;
      if ((((!!(m_13) && !(((RogueType__omit_output( type_102 ))))) && m_13->is_used) && m_13->statements->count > 1))
      {
        __trace.line = 423;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[641] );
        __trace.line = 424;
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_13->cpp_name) );
      }
      else
      {
        __trace.line = 426;
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  __trace.line = 429;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 431;
  writer_1->indent -= 2;
  __trace.line = 432;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 433;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 436;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[642] );
  __trace.line = 437;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 438;
  writer_1->indent += 2;
  __trace.line = 439;
  first_12 = ((RogueLogical)true);
  __trace.line = 440;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_306_103,(THIS->type_list));
    RogueInt32 _auto_307_104 = (0);
    for (;_auto_307_104 < _auto_306_103->count;++_auto_307_104)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_105,(((RogueClassType*)(_auto_306_103->data->objects[_auto_307_104]))));
      __trace.line = 441;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 442;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 444;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueType__find_method__String( type_105, Rogue_literal_strings[514] )))));
      __trace.line = 445;
      if ((((!!(m_14) && !(((RogueType__omit_output( type_105 ))))) && m_14->is_used) && m_14->statements->count > 1))
      {
        __trace.line = 447;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[641] );
        __trace.line = 448;
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_14->cpp_name) );
      }
      else
      {
        __trace.line = 450;
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  __trace.line = 453;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 455;
  writer_1->indent -= 2;
  __trace.line = 456;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 457;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 460;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[643] );
  __trace.line = 461;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 462;
  writer_1->indent += 2;
  __trace.line = 463;
  first_12 = ((RogueLogical)true);
  __trace.line = 464;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_308_106,(THIS->type_list));
    RogueInt32 _auto_309_107 = (0);
    for (;_auto_309_107 < _auto_308_106->count;++_auto_309_107)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_108,(((RogueClassType*)(_auto_308_106->data->objects[_auto_309_107]))));
      __trace.line = 465;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 466;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 468;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueType__find_method__String( type_108, Rogue_literal_strings[410] )))));
      __trace.line = 469;
      if ((((!!(m_15) && !(((RogueType__omit_output( type_108 ))))) && m_15->is_used) && !!(m_15->statements->count)))
      {
        __trace.line = 470;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[644] );
        __trace.line = 471;
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_15->cpp_name) );
      }
      else
      {
        __trace.line = 473;
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  __trace.line = 476;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 478;
  writer_1->indent -= 2;
  __trace.line = 479;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 480;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 483;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[645] );
  __trace.line = 484;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 485;
  writer_1->indent += 2;
  __trace.line = 486;
  first_12 = ((RogueLogical)true);
  __trace.line = 487;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_310_109,(THIS->type_list));
    RogueInt32 _auto_311_110 = (0);
    for (;_auto_311_110 < _auto_310_109->count;++_auto_311_110)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_111,(((RogueClassType*)(_auto_310_109->data->objects[_auto_311_110]))));
      __trace.line = 488;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 489;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 491;
      if (((RogueType__is_reference( type_111 ))))
      {
        __trace.line = 492;
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueType__find_method__String( type_111, Rogue_literal_strings[412] )))));
        __trace.line = 493;
        if ((((!!(m_16) && !(((RogueType__omit_output( type_111 ))))) && m_16->is_used) && !!(m_16->statements->count)))
        {
          __trace.line = 494;
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[646] );
          __trace.line = 495;
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_16->cpp_name) );
        }
        else
        {
          __trace.line = 497;
          RogueCPPWriter__print__Int32( writer_1, 0 );
        }
      }
      else
      {
        __trace.line = 500;
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  __trace.line = 504;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 505;
  writer_1->indent -= 2;
  __trace.line = 506;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 507;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 510;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[647] );
  __trace.line = 511;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 512;
  writer_1->indent += 2;
  __trace.line = 513;
  first_12 = ((RogueLogical)true);
  __trace.line = 514;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_312_112,(THIS->type_list));
    RogueInt32 _auto_313_113 = (0);
    for (;_auto_313_113 < _auto_312_112->count;++_auto_313_113)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_114,(((RogueClassType*)(_auto_312_112->data->objects[_auto_313_113]))));
      __trace.line = 515;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 516;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 518;
      if ((((RogueType__has_object_references( type_114 ))) && !(((RogueType__is_aspect( type_114 ))))))
      {
        __trace.line = 519;
        if (((RogueType__is_reference_array( type_114 ))))
        {
          __trace.line = 520;
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[648] );
        }
        else
        {
          __trace.line = 522;
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_17,(type_114->cpp_name));
          __trace.line = 523;
          if ((type_114->is_array && ((RogueType__is_compound( ROGUE_ARG(type_114->_element_type) )))))
          {
            __trace.line = 524;
            trace_name_17 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_114->name) ))));
          }
          __trace.line = 527;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[54] )))), trace_name_17 )))), Rogue_literal_strings[649] );
        }
      }
      else if (((RogueType__is_class( type_114 ))))
      {
        __trace.line = 530;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[650] );
      }
      else
      {
        __trace.line = 532;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[547] );
      }
    }
  }
  __trace.line = 535;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 536;
  writer_1->indent -= 2;
  __trace.line = 537;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 538;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 541;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[651] );
  __trace.line = 542;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 543;
  writer_1->indent += 2;
  __trace.line = 545;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[622] );
  __trace.line = 546;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[652] );
  __trace.line = 547;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 548;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[653] );
  __trace.line = 549;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_314_115,(THIS->type_list));
    RogueInt32 _auto_315_116 = (0);
    for (;_auto_315_116 < _auto_314_115->count;++_auto_315_116)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_117,(((RogueClassType*)(_auto_314_115->data->objects[_auto_315_116]))));
      __trace.line = 550;
      if (((RogueType__has_global_references( type_117 ))))
      {
        __trace.line = 551;
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_316_118,(type_117->global_list));
          RogueInt32 _auto_317_119 = (0);
          for (;_auto_317_119 < _auto_316_118->count;++_auto_317_119)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_120,(((RogueClassProperty*)(_auto_316_118->data->objects[_auto_317_119]))));
            __trace.line = 552;
            if ((((RogueType__is_reference( ROGUE_ARG(g_120->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(g_120->_type) )))))
            {
              __trace.line = 554;
              if (((((RogueType__is_reference( ROGUE_ARG(g_120->_type) ))) && !(((RogueType__is_foreign( ROGUE_ARG(g_120->_type) ))))) && !(g_120->_type->is_array)))
              {
                __trace.line = 555;
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[654] )))), ROGUE_ARG(type_117->cpp_name) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(g_120->cpp_name) );
                __trace.line = 556;
                RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[625] );
              }
              else
              {
                __trace.line = 559;
                ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_18,(Rogue_literal_strings[65]));
                __trace.line = 560;
                if (g_120->_type->is_array)
                {
                  __trace.line = 561;
                  if ((((RogueType__is_compound( ROGUE_ARG(g_120->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_120->_type->_element_type) )))))
                  {
                    __trace.line = 562;
                    trace_class_name_18 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_120->_type->name) ))));
                  }
                  else
                  {
                    __trace.line = 564;
                    trace_class_name_18 = ((RogueString*)Rogue_literal_strings[536]);
                  }
                }
                else
                {
                  __trace.line = 568;
                  trace_class_name_18 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_120->_type->cpp_name) ))));
                }
                __trace.line = 571;
                RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[627] );
                __trace.line = 572;
                if (!(((RogueType__is_reference( ROGUE_ARG(g_120->_type) )))))
                {
                  RogueCPPWriter__print__Character( writer_1, (RogueCharacter)'&' );
                }
                __trace.line = 573;
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[54] )))), ROGUE_ARG(type_117->cpp_name) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(g_120->cpp_name) );
                __trace.line = 574;
                RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[628] )))), trace_class_name_18 )))), Rogue_literal_strings[629] );
              }
            }
          }
        }
      }
    }
  }
  __trace.line = 583;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 585;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[655] );
  __trace.line = 594;
  writer_1->indent -= 2;
  __trace.line = 595;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
  __trace.line = 596;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 601;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[656] );
  __trace.line = 602;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 603;
  writer_1->indent += 2;
  __trace.line = 604;
  RogueInt32 table_index_19 = (0);
  __trace.line = 605;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_318_121,(THIS->type_list));
    RogueInt32 _auto_319_122 = (0);
    for (;_auto_319_122 < _auto_318_121->count;++_auto_319_122)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_123,(((RogueClassType*)(_auto_318_121->data->objects[_auto_319_122]))));
      __trace.line = 606;
      if (!(((RogueType__omit_output( type_123 )))))
      {
        __trace.line = 607;
        table_index_19 = ((RogueInt32)((RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( type_123, table_index_19, writer_1 ))));
      }
    }
  }
  __trace.line = 610;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 611;
  writer_1->indent -= 2;
  __trace.line = 612;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 613;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 616;
  ROGUE_DEF_LOCAL_REF(RogueInt32_List*,info_20,(((RogueInt32_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueInt32_List*,ROGUE_CREATE_OBJECT(Int32_List))) )))));
  __trace.line = 617;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_324_124,(THIS->type_list));
    RogueInt32 _auto_325_125 = (0);
    for (;_auto_325_125 < _auto_324_124->count;++_auto_325_125)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_126,(((RogueClassType*)(_auto_324_124->data->objects[_auto_325_125]))));
      __trace.line = 618;
      RogueType__collect_type_info__Int32_List( type_126, info_20 );
    }
  }
  __trace.line = 621;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[661] )))), ROGUE_ARG(info_20->count) )))), Rogue_literal_strings[662] );
  __trace.line = 622;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 623;
  writer_1->indent += 2;
  __trace.line = 624;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[663] );
  __trace.line = 626;
  first_12 = ((RogueLogical)true);
  __trace.line = 627;
  RogueInt32 items_21 = (0);
  __trace.line = 628;
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_326_127,(info_20));
    RogueInt32 _auto_327_128 = (0);
    for (;_auto_327_128 < _auto_326_127->count;++_auto_327_128)
    {
      RogueInt32 n_129 = (_auto_326_127->data->integers[_auto_327_128]);
      __trace.line = 629;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 630;
        RogueCPPWriter__print_literal_character__Character_Logical( writer_1, (RogueCharacter)',', false );
      }
      __trace.line = 632;
      ++items_21;
      __trace.line = 633;
      if (items_21 == 25)
      {
        RogueCPPWriter__println( writer_1 );
        items_21 = ((RogueInt32)0);
      }
      __trace.line = 635;
      RogueCPPWriter__print__Int32( writer_1, n_129 );
    }
  }
  __trace.line = 638;
  if (items_21 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  __trace.line = 639;
  writer_1->indent -= 2;
  __trace.line = 640;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 641;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 645;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[671] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[662] );
  __trace.line = 646;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 647;
  writer_1->indent += 2;
  __trace.line = 649;
  first_12 = ((RogueLogical)true);
  __trace.line = 650;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_328_130,(THIS->type_list));
    RogueInt32 _auto_329_131 = (0);
    for (;_auto_329_131 < _auto_328_130->count;++_auto_329_131)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_132,(((RogueClassType*)(_auto_328_130->data->objects[_auto_329_131]))));
      __trace.line = 651;
      if (first_12)
      {
        first_12 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 652;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[217] );
      }
      __trace.line = 654;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[672] )))), ROGUE_ARG(type_132->cpp_class_name) )))), Rogue_literal_strings[34] );
    }
  }
  __trace.line = 657;
  if (items_21 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  __trace.line = 658;
  writer_1->indent -= 2;
  __trace.line = 659;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  __trace.line = 660;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 663;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[673] )))), 1 )))), Rogue_literal_strings[243] );
  __trace.line = 664;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[674] )))), 1 )))), Rogue_literal_strings[675] );
  __trace.line = 665;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 668;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[676] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[243] );
  __trace.line = 669;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[677] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[675] );
  __trace.line = 670;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 673;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_330_133,(THIS->type_list));
    RogueInt32 _auto_331_134 = (0);
    for (;_auto_331_134 < _auto_330_133->count;++_auto_331_134)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_135,(((RogueClassType*)(_auto_330_133->data->objects[_auto_331_134]))));
      __trace.line = 674;
      if ((!(((RogueType__omit_output( type_135 )))) || (((RogueType__is_native( type_135 ))) && !(type_135->is_array))))
      {
        __trace.line = 675;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[678] );
        __trace.line = 676;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_135->cpp_name) )))), Rogue_literal_strings[243] );
      }
    }
  }
  __trace.line = 679;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 681;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[679] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[243] );
  __trace.line = 682;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[680] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[675] );
  __trace.line = 683;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 685;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_332_136,(THIS->type_list));
    RogueInt32 _auto_333_137 = (0);
    for (;_auto_333_137 < _auto_332_136->count;++_auto_333_137)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_138,(((RogueClassType*)(_auto_332_136->data->objects[_auto_333_137]))));
      RogueType__print_global_method_definitions__CPPWriter( type_138, writer_1 );
    }
  }
  __trace.line = 686;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 688;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_334_139,(THIS->type_list));
    RogueInt32 _auto_335_140 = (0);
    for (;_auto_335_140 < _auto_334_139->count;++_auto_335_140)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_141,(((RogueClassType*)(_auto_334_139->data->objects[_auto_335_140]))));
      RogueType__print_method_definitions__CPPWriter( type_141, writer_1 );
    }
  }
  __trace.line = 689;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 692;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[695] );
  __trace.line = 693;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 694;
  writer_1->indent += 2;
  __trace.line = 696;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[696] );
  __trace.line = 709;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_336_142,(THIS->type_list));
    RogueInt32 _auto_337_143 = (0);
    for (;_auto_337_143 < _auto_336_142->count;++_auto_337_143)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_144,(((RogueClassType*)(_auto_336_142->data->objects[_auto_337_143]))));
      __trace.line = 710;
      if ((!(((RogueType__omit_output( type_144 )))) || (((RogueType__is_native( type_144 ))) && !(type_144->is_array))))
      {
        __trace.line = 711;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[538] )))), ROGUE_ARG(type_144->cpp_name) )))), Rogue_literal_strings[697] )))), ROGUE_ARG(type_144->index) )))), Rogue_literal_strings[698] );
      }
    }
  }
  __trace.line = 715;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 717;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_338_145,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list));
    RogueInt32 i_146 = (0);
    for (;i_146 < _auto_338_145->count;++i_146)
    {
      __trace.line = 718;
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[699] )))), i_146 );
      __trace.line = 719;
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[700] );
      __trace.line = 720;
      ROGUE_DEF_LOCAL_REF(RogueString*,st_22,(((RogueString*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->data->objects[i_146]))));
      __trace.line = 721;
      ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,encoded_count_23,(((RogueCPPWriter__print_literal_string__String( writer_1, st_22 )))));
      __trace.line = 722;
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[574] )))), ROGUE_ARG(st_22->byte_count) );
      __trace.line = 723;
      RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[701] );
    }
  }
  __trace.line = 725;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 728;
  writer_1->indent -= 2;
  __trace.line = 729;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
  __trace.line = 730;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 733;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[702] );
  __trace.line = 734;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[234] );
  __trace.line = 735;
  writer_1->indent += 2;
  __trace.line = 738;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_339_147,(THIS->type_list));
    RogueInt32 _auto_340_148 = (0);
    for (;_auto_340_148 < _auto_339_147->count;++_auto_340_148)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_149,(((RogueClassType*)(_auto_339_147->data->objects[_auto_340_148]))));
      __trace.line = 739;
      if (type_149->is_used)
      {
        __trace.line = 740;
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_24,(((RogueType__find_global_method__String( type_149, Rogue_literal_strings[405] )))));
        __trace.line = 741;
        if ((!!(m_24) && ((void*)m_24->type_context) == ((void*)type_149)))
        {
          __trace.line = 742;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_24->cpp_name) )))), Rogue_literal_strings[703] );
        }
      }
    }
  }
  __trace.line = 746;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 749;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[704] );
  __trace.line = 757;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 760;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[705] );
  __trace.line = 761;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_341_150,(THIS->type_list));
    RogueInt32 _auto_342_151 = (0);
    for (;_auto_342_151 < _auto_341_150->count;++_auto_342_151)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_152,(((RogueClassType*)(_auto_341_150->data->objects[_auto_342_151]))));
      __trace.line = 762;
      if ((!(((RogueType__omit_output( type_152 )))) && ((RogueType__is_singleton( type_152 )))))
      {
        __trace.line = 763;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[706] )))), ROGUE_ARG(type_152->cpp_name) )))), Rogue_literal_strings[617] );
      }
    }
  }
  __trace.line = 766;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 770;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[707] );
  __trace.line = 773;
  writer_1->indent -= 2;
  __trace.line = 774;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[143] );
  __trace.line = 775;
  RogueCPPWriter__println( writer_1 );
  __trace.line = 778;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[708] );
  __trace.line = 782;
  if (((RogueProgram__is_type_defined__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[709] ))))
  {
    __trace.line = 783;
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[710] );
  }
  else
  {
    __trace.line = 788;
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[711] );
  }
  __trace.line = 792;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[712] );
  __trace.line = 797;
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->generate_main)
  {
    __trace.line = 798;
    RogueCPPWriter__println( writer_1 );
    __trace.line = 799;
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[713] );
  }
  __trace.line = 813;
  RogueCPPWriter__close( writer_1 );
}

void RogueProgram__print_property_trace_code__Type_CPPWriter( RogueClassProgram* THIS, RogueClassType* type_0, RogueClassCPPWriter* writer_1 )
{
  RogueDebugTrace __trace( "Program.print_property_trace_code(Type,CPPWriter)", "CPPWriter.rogue", 815 );
  __trace.line = 816;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_343_3,(type_0->property_list));
    RogueInt32 _auto_344_4 = (0);
    for (;_auto_344_4 < _auto_343_3->count;++_auto_344_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_343_3->data->objects[_auto_344_4]))));
      __trace.line = 818;
      if ((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(p_5->_type) )))))
      {
        __trace.line = 820;
        if (((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) && !(((RogueType__is_foreign( ROGUE_ARG(p_5->_type) ))))) && !(p_5->_type->is_array)))
        {
          __trace.line = 821;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[623] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[624] )))), ROGUE_ARG(p_5->cpp_name) );
          __trace.line = 822;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[625] );
        }
        else if (((RogueType__is_compound( ROGUE_ARG(p_5->_type) ))))
        {
          __trace.line = 826;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[54] )))), ROGUE_ARG(p_5->_type->cpp_name) )))), Rogue_literal_strings[626] );
          __trace.line = 827;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[614] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[624] )))), ROGUE_ARG(p_5->cpp_name) );
          __trace.line = 828;
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[617] );
        }
        else
        {
          __trace.line = 831;
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_2,(Rogue_literal_strings[65]));
          __trace.line = 832;
          if (p_5->_type->is_array)
          {
            __trace.line = 833;
            if ((((RogueType__is_compound( ROGUE_ARG(p_5->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_5->_type->_element_type) )))))
            {
              __trace.line = 834;
              trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->name) ))));
            }
            else
            {
              __trace.line = 836;
              trace_class_name_2 = ((RogueString*)Rogue_literal_strings[536]);
            }
          }
          else
          {
            __trace.line = 840;
            trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->cpp_name) ))));
          }
          __trace.line = 843;
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[627] );
          __trace.line = 844;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[614] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[624] )))), ROGUE_ARG(p_5->cpp_name) );
          __trace.line = 845;
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[628] )))), trace_class_name_2 )))), Rogue_literal_strings[629] );
        }
      }
    }
  }
}

RogueClassProgram* RogueProgram__init_object( RogueClassProgram* THIS )
{
  RogueDebugTrace __trace( "Program.init_object()", "Program.rogue", 5 );
  __trace.line = 7;
  THIS->code_prefix = Rogue_literal_strings[54];
  __trace.line = 8;
  THIS->program_name = Rogue_literal_strings[55];
  __trace.line = 12;
  THIS->template_list = ((RogueTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTemplate_List*,ROGUE_CREATE_OBJECT(Template_List))) )));
  __trace.line = 13;
  THIS->template_lookup = ((RogueTable_String_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Template_*,ROGUE_CREATE_OBJECT(Table_String_Template_))) )));
  __trace.line = 15;
  THIS->augment_lookup = ((RogueTable_String_Augment_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Augment_List_*,ROGUE_CREATE_OBJECT(Table_String_Augment_List_))) )));
  __trace.line = 18;
  THIS->all_requisite = false;
  __trace.line = 20;
  THIS->first_filepath = Rogue_literal_strings[0];
  __trace.line = 23;
  THIS->global_properties = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  __trace.line = 25;
  THIS->native_header = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 26;
  THIS->native_code = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 28;
  THIS->methods_by_signature = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  __trace.line = 30;
  THIS->type_list = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  __trace.line = 31;
  THIS->type_lookup = ((RogueTable_String_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Type_*,ROGUE_CREATE_OBJECT(Table_String_Type_))) )));
  __trace.line = 52;
  THIS->literal_string_lookup = ((RogueTable_String_Int32___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Int32_*,ROGUE_CREATE_OBJECT(Table_String_Int32_))) )));
  __trace.line = 53;
  THIS->literal_string_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 55;
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 56;
  THIS->ids_by_module = ((RogueTable_String_String_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_List_*,ROGUE_CREATE_OBJECT(Table_String_String_List_))) )));
  __trace.line = 5;
  return (RogueClassProgram*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__init( RogueTemplate_List* THIS )
{
  RogueDebugTrace __trace( "Template[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueTemplate_List__to_String( RogueTemplate_List* THIS )
{
  RogueDebugTrace __trace( "Template[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_546_2,(THIS));
    RogueInt32 _auto_547_3 = (0);
    for (;_auto_547_3 < _auto_546_2->count;++_auto_547_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,value_4,(((RogueClassTemplate*)(_auto_546_2->data->objects[_auto_547_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTemplate_List__type_name( RogueTemplate_List* THIS )
{
  RogueDebugTrace __trace( "Template[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[814]);
}

RogueTemplate_List* RogueTemplate_List__init_object( RogueTemplate_List* THIS )
{
  RogueDebugTrace __trace( "Template[].init_object()", "List.rogue", 4 );
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__init__Int32( RogueTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Template[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTemplate*), true );
  }
  __trace.line = 16;
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__add__Template( RogueTemplate_List* THIS, RogueClassTemplate* value_0 )
{
  RogueDebugTrace __trace( "Template[].add(Template)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTemplate_List*)(THIS);
}

RogueInt32 RogueTemplate_List__capacity( RogueTemplate_List* THIS )
{
  RogueDebugTrace __trace( "Template[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTemplate_List* RogueTemplate_List__reserve__Int32( RogueTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Template[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueTemplate__type_name( RogueClassTemplate* THIS )
{
  RogueDebugTrace __trace( "Template.type_name()", "Template.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[750]);
}

RogueClassTemplate* RogueTemplate__init__Token_String_Int32( RogueClassTemplate* THIS, RogueClassToken* _auto_86_0, RogueString* _auto_87_1, RogueInt32 attribute_flags_2 )
{
  RogueDebugTrace __trace( "Template.init(Token,String,Int32)", "Template.rogue", 13 );
  THIS->name = _auto_87_1;
  THIS->t = _auto_86_0;
  __trace.line = 14;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), attribute_flags_2 );
  __trace.line = 16;
  return (RogueClassTemplate*)(THIS);
}

RogueClassTypeParameter* RogueTemplate__add_type_parameter__Token_String( RogueClassTemplate* THIS, RogueClassToken* p_t_0, RogueString* p_name_1 )
{
  RogueDebugTrace __trace( "Template.add_type_parameter(Token,String)", "Template.rogue", 16 );
  __trace.line = 17;
  if (((void*)THIS->type_parameters) == ((void*)NULL))
  {
    THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  }
  __trace.line = 18;
  ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_2,(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), p_t_0, p_name_1 )))));
  __trace.line = 19;
  RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(THIS->type_parameters), param_2 );
  __trace.line = 20;
  return (RogueClassTypeParameter*)(param_2);
}

RogueInt32 Rogue_Template__element_type( RogueClassTemplate* THIS )
{
  RogueDebugTrace __trace( "Template.element_type()", "Template.rogue", 22 );
  __trace.line = 23;
  return (RogueInt32)((THIS->attributes->flags & 7));
}

void RogueTemplate__instantiate__Type_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "Template.instantiate(Type,Scope)", "Template.rogue", 25 );
  __trace.line = 26;
  if (!!(THIS->alternates_by_param_count))
  {
    __trace.line = 27;
    RogueInt32 specializer_count_2 = (0);
    __trace.line = 28;
    if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
    {
      __trace.line = 29;
      specializer_count_2 = ((RogueInt32)((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(type_0->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))) ))));
    }
    __trace.line = 31;
    if (((RogueTemplate__type_parameter_count( ROGUE_ARG(THIS) ))) != specializer_count_2)
    {
      __trace.line = 32;
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,alternate_3,(((RogueTable_Int32_Template___get__Int32( ROGUE_ARG(THIS->alternates_by_param_count), specializer_count_2 )))));
      __trace.line = 33;
      if (!!(alternate_3))
      {
        __trace.line = 34;
        RogueTemplate__instantiate__Type_Scope( alternate_3, type_0, scope_1 );
        __trace.line = 35;
        return;
      }
      else
      {
        __trace.line = 37;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[314] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__pluralized__Int32( Rogue_literal_strings[315], specializer_count_2 )))) )))) )))), Rogue_literal_strings[319] )))) )))) ))));
      }
    }
  }
  __trace.line = 42;
  type_0->t = THIS->t;
  __trace.line = 45;
  RogueAttributes__add__Attributes( ROGUE_ARG(type_0->attributes), ROGUE_ARG(THIS->attributes) );
  __trace.line = 46;
  type_0->source_template = THIS;
  __trace.line = 48;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,augmented_tokens_4,(THIS->tokens));
  __trace.line = 49;
  augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(THIS->name), augmented_tokens_4 ))));
  __trace.line = 50;
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(type_0->name), ROGUE_ARG(THIS->name) ))) != 0)
  {
    __trace.line = 51;
    augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(type_0->name), augmented_tokens_4 ))));
  }
  __trace.line = 54;
  if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)']' ))))
  {
    __trace.line = 55;
    RogueTemplate__instantiate_list__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'?' ))))
  {
    __trace.line = 57;
    RogueTemplate__instantiate_optional__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (!!(THIS->type_parameters))
  {
    __trace.line = 59;
    RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( ROGUE_ARG(THIS), type_0, augmented_tokens_4, scope_1 );
  }
  else
  {
    __trace.line = 61;
    RogueTemplate__instantiate_standard_type__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
}

RogueToken_List* RogueTemplate__add_augmented_tokens__Type_String_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueString* augment_name_1, RogueToken_List* augmented_tokens_2 )
{
  RogueDebugTrace __trace( "Template.add_augmented_tokens(Type,String,Token[])", "Template.rogue", 64 );
  __trace.line = 65;
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_3,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), augment_name_1 )))));
  __trace.line = 67;
  if (!(!!(augments_3)))
  {
    return (RogueToken_List*)(augmented_tokens_2);
  }
  __trace.line = 70;
  RogueInt32 t_count_4 = (2);
  __trace.line = 71;
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_591_5,(augments_3));
    RogueInt32 _auto_592_6 = (0);
    for (;_auto_592_6 < _auto_591_5->count;++_auto_592_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_7,(((RogueClassAugment*)(_auto_591_5->data->objects[_auto_592_6]))));
      t_count_4 += aug_7->tokens->count;
    }
  }
  __trace.line = 73;
  if (((void*)augmented_tokens_2) == ((void*)THIS->tokens))
  {
    __trace.line = 75;
    augmented_tokens_2 = ((RogueToken_List*)((RogueToken_List__add__Token_List( ROGUE_ARG(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((THIS->tokens->count + t_count_4)) )))), augmented_tokens_2 ))));
  }
  else
  {
    __trace.line = 77;
    RogueToken_List__reserve__Int32( augmented_tokens_2, t_count_4 );
  }
  __trace.line = 80;
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(RogueTokenType_begin_augment_tokens) )))) );
  __trace.line = 81;
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_606_8,(augments_3));
    RogueInt32 _auto_607_9 = (0);
    for (;_auto_607_9 < _auto_606_8->count;++_auto_607_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_10,(((RogueClassAugment*)(_auto_606_8->data->objects[_auto_607_9]))));
      __trace.line = 82;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_608_11,(aug_10->base_types));
        RogueInt32 _auto_609_12 = (0);
        for (;_auto_609_12 < _auto_608_11->count;++_auto_609_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_13,(((RogueClassType*)(_auto_608_11->data->objects[_auto_609_12]))));
          __trace.line = 83;
          RogueType_List__add__Type( ROGUE_ARG(type_0->base_types), base_type_13 );
        }
      }
      __trace.line = 85;
      RogueToken_List__add__Token_List( augmented_tokens_2, ROGUE_ARG(aug_10->tokens) );
    }
  }
  __trace.line = 87;
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) );
  __trace.line = 89;
  return (RogueToken_List*)(augmented_tokens_2);
}

void RogueTemplate__instantiate_list__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  RogueDebugTrace __trace( "Template.instantiate_list(Type,Token[])", "Template.rogue", 91 );
  __trace.line = 92;
  type_0->is_list = true;
  __trace.line = 93;
  type_0->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -2 )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )));
  __trace.line = 95;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  __trace.line = 96;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_610_3,(augmented_tokens_1));
    RogueInt32 _auto_611_4 = (0);
    for (;_auto_611_4 < _auto_610_3->count;++_auto_611_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_610_3->data->objects[_auto_611_4]))));
      __trace.line = 97;
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        __trace.line = 98;
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM68( 4, template_t_5 ))), Rogue_literal_strings[320] ))))
        {
          __trace.line = 99;
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((call_ROGUEM141( 15, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          __trace.line = 101;
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        __trace.line = 104;
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  __trace.line = 108;
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_optional__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  RogueDebugTrace __trace( "Template.instantiate_optional(Type,Token[])", "Template.rogue", 110 );
  __trace.line = 111;
  type_0->is_optional = true;
  __trace.line = 112;
  type_0->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -1 )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )));
  __trace.line = 114;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  __trace.line = 115;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_612_3,(augmented_tokens_1));
    RogueInt32 _auto_613_4 = (0);
    for (;_auto_613_4 < _auto_612_3->count;++_auto_613_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_612_3->data->objects[_auto_613_4]))));
      __trace.line = 116;
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        __trace.line = 117;
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM68( 4, template_t_5 ))), Rogue_literal_strings[320] ))))
        {
          __trace.line = 118;
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((call_ROGUEM141( 15, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          __trace.line = 120;
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        __trace.line = 123;
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  __trace.line = 127;
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1, RogueClassScope* scope_2 )
{
  RogueDebugTrace __trace( "Template.instantiate_parameterized_type(Type,Token[],Scope)", "Template.rogue", 129 );
  __trace.line = 130;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_3,(augmented_tokens_1));
  __trace.line = 132;
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_TypeSpecializer_*,type_specializers_4,(((RogueTable_String_TypeSpecializer___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(Table_String_TypeSpecializer_))) )))));
  __trace.line = 134;
  ROGUE_DEF_LOCAL_REF(RogueString*,specialization_string_5,(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))));
  __trace.line = 135;
  if (specialization_string_5->character_count == 0)
  {
    __trace.line = 136;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[370] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[371] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[372] )))) )))) ))));
  }
  __trace.line = 139;
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_6,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(THIS->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))));
  __trace.line = 140;
  RogueParser__read( parser_6 );
  __trace.line = 142;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_7,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 143;
  RogueLogical first_8 = (true);
  __trace.line = 144;
  while ((first_8 || ((RogueParser__consume__TokenType( parser_6, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 145;
    first_8 = ((RogueLogical)false);
    __trace.line = 146;
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,specializer_tokens_9,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
    __trace.line = 147;
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_6, ROGUE_ARG(((RogueStringBuilder__clear( buffer_7 )))), specializer_tokens_9 );
    __trace.line = 149;
    RogueInt32 index_10 = (((RogueTable_String_TypeSpecializer___count( type_specializers_4 ))));
    __trace.line = 150;
    if (index_10 >= THIS->type_parameters->count)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[373] ))));
    }
    __trace.line = 152;
    ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_11,(((RogueClassTypeParameter*)(THIS->type_parameters->data->objects[index_10]))));
    __trace.line = 153;
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_12,(((RogueTypeSpecializer__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeSpecializer*,ROGUE_CREATE_OBJECT(TypeSpecializer))), ROGUE_ARG(param_11->name), index_10 )))));
    __trace.line = 154;
    specializer_12->tokens = specializer_tokens_9;
    __trace.line = 155;
    RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( type_specializers_4, ROGUE_ARG(specializer_12->name), specializer_12 );
    __trace.line = 157;
    if (!(!!(type_0->specializers)))
    {
      type_0->specializers = ((RogueTypeSpecializer_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeSpecializer_List*,ROGUE_CREATE_OBJECT(TypeSpecializer_List))) )));
    }
    __trace.line = 158;
    RogueTypeSpecializer_List__add__TypeSpecializer( ROGUE_ARG(type_0->specializers), specializer_12 );
  }
  __trace.line = 161;
  if (((RogueTable_String_TypeSpecializer___count( type_specializers_4 ))) < THIS->type_parameters->count)
  {
    __trace.line = 162;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[374] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[375] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueTable_String_TypeSpecializer___count( type_specializers_4 )))) )))) )))), Rogue_literal_strings[376] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[377] )))) )))) ))));
  }
  __trace.line = 166;
  instance_tokens_3 = ((RogueToken_List*)((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((augmented_tokens_1->count * 2)) ))));
  __trace.line = 167;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_620_14,(augmented_tokens_1));
    RogueInt32 _auto_621_15 = (0);
    for (;_auto_621_15 < _auto_620_14->count;++_auto_621_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_16,(((RogueClassToken*)(_auto_620_14->data->objects[_auto_621_15]))));
      __trace.line = 168;
      if (((void*)template_t_16->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        __trace.line = 169;
        ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_13,(((RogueTable_String_TypeSpecializer___get__String( type_specializers_4, ROGUE_ARG((call_ROGUEM68( 4, template_t_16 ))) )))));
        __trace.line = 170;
        if (!!(specializer_13))
        {
          __trace.line = 172;
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_622_17,(specializer_13->tokens));
            RogueInt32 _auto_623_18 = (0);
            for (;_auto_623_18 < _auto_622_17->count;++_auto_623_18)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_19,(((RogueClassToken*)(_auto_622_17->data->objects[_auto_623_18]))));
              __trace.line = 173;
              RogueToken_List__add__Token( instance_tokens_3, specializer_t_19 );
            }
          }
        }
        else
        {
          __trace.line = 176;
          RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
        }
      }
      else
      {
        __trace.line = 179;
        RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
      }
    }
  }
  __trace.line = 183;
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_3, false )))), type_0 );
}

void RogueTemplate__instantiate_standard_type__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  RogueDebugTrace __trace( "Template.instantiate_standard_type(Type,Token[])", "Template.rogue", 185 );
  __trace.line = 186;
  if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
  {
    __trace.line = 187;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[378] ))));
  }
  __trace.line = 190;
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), augmented_tokens_1, false )))), type_0 );
}

RogueInt32 RogueTemplate__type_parameter_count( RogueClassTemplate* THIS )
{
  RogueDebugTrace __trace( "Template.type_parameter_count()", "Template.rogue", 198 );
  __trace.line = 199;
  if (!!(THIS->type_parameters))
  {
    return (RogueInt32)(THIS->type_parameters->count);
  }
  __trace.line = 200;
  return (RogueInt32)(0);
}

RogueClassTemplate* RogueTemplate__init_object( RogueClassTemplate* THIS )
{
  RogueDebugTrace __trace( "Template.init_object()", "Template.rogue", 1 );
  __trace.line = 5;
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  __trace.line = 6;
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  __trace.line = 1;
  return (RogueClassTemplate*)(THIS);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init( RogueClassTable_String_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueString* RogueTable_String_Template___to_String( RogueClassTable_String_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Template___type_name( RogueClassTable_String_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[751]);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init__Int32( RogueClassTable_String_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Template__List__init__Int32_TableEntry_String_Template_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Template__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Template__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Template_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTableEntry_String_Template_* RogueTable_String_Template___find__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_2,(((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Template_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Template_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Template_*)(((RogueClassTableEntry_String_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_String_Template___get__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_1,(((RogueTable_String_Template___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_String_Template_* RogueTable_String_Template___set__String_Template( RogueClassTable_String_Template_* THIS, RogueString* key_0, RogueClassTemplate* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.set(String,Template)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_4,(((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Template_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Template_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Template_*)((RogueTableEntry_String_Template___init__String_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Template_*,ROGUE_CREATE_OBJECT(TableEntry_String_Template_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Template_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Template___print_to__StringBuilder( RogueClassTable_String_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init_object( RogueClassTable_String_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Template>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init( RogueClassTable_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Augment_List___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueString* RogueTable_String_Augment_List___to_String( RogueClassTable_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Augment_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Augment_List___type_name( RogueClassTable_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[752]);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init__Int32( RogueClassTable_String_Augment_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Augment_List__List__init__Int32_TableEntry_String_Augment_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Augment_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Augment_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Augment_List_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueClassTableEntry_String_Augment_List_* RogueTable_String_Augment_List___find__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_2,(((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Augment_List_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Augment_List_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Augment_List_*)(((RogueClassTableEntry_String_Augment_List_*)(NULL)));
}

RogueAugment_List* RogueTable_String_Augment_List___get__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_1,(((RogueTable_String_Augment_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueAugment_List*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,default_value_2,0);
    __trace.line = 62;
    return (RogueAugment_List*)(default_value_2);
  }
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___set__String_Augment_List( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0, RogueAugment_List* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.set(String,Augment[])", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_4,(((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Augment_List_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Augment_List_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Augment_List_*)((RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Augment_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Augment_List_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Augment_List___print_to__StringBuilder( RogueClassTable_String_Augment_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init_object( RogueClassTable_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Augment[]>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueString* RogueMethod__to_String( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.to_String()", "Method.rogue", 436 );
  __trace.line = 437;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))) ))));
}

RogueString* RogueMethod__type_name( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.type_name()", "Method.rogue", 3 );
  return (RogueString*)(Rogue_literal_strings[753]);
}

RogueClassMethod* RogueMethod__init__Token_Type_String( RogueClassMethod* THIS, RogueClassToken* _auto_92_0, RogueClassType* _auto_93_1, RogueString* _auto_94_2 )
{
  RogueDebugTrace __trace( "Method.init(Token,Type,String)", "Method.rogue", 45 );
  THIS->name = _auto_94_2;
  RogueMethod__set_type_context__Type( ROGUE_ARG(THIS), _auto_93_1 );
  THIS->t = _auto_92_0;
  __trace.line = 47;
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__clone( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.clone()", "Method.rogue", 47 );
  __trace.line = 48;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_0,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name) )))));
  __trace.line = 50;
  __trace.filename = "CPPWriter.rogue";
  __trace.line = 1596;
  result_0->cpp_name = THIS->cpp_name;
  __trace.line = 1597;
  result_0->cpp_typedef = THIS->cpp_typedef;
  __trace.filename = "Method.rogue";
  __trace.line = 51;
  result_0->signature = THIS->signature;
  __trace.line = 52;
  result_0->attributes = ((RogueAttributes__clone( ROGUE_ARG(THIS->attributes) )));
  __trace.line = 53;
  result_0->_return_type = THIS->_return_type;
  __trace.line = 54;
  result_0->_task_result_type = THIS->_task_result_type;
  __trace.line = 56;
  result_0->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 57;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_675_1,(THIS->locals));
    RogueInt32 _auto_676_2 = (0);
    for (;_auto_676_2 < _auto_675_1->count;++_auto_676_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_3,(((RogueClassLocal*)(_auto_675_1->data->objects[_auto_676_2]))));
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->locals), ROGUE_ARG(((RogueLocal__clone__CloneArgs( v_3, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
    }
  }
  __trace.line = 58;
  result_0->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 59;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_677_4,(THIS->parameters));
    RogueInt32 i_5 = (0);
    for (;i_5 < _auto_677_4->count;++i_5)
    {
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->parameters), ROGUE_ARG(((RogueClassLocal*)(THIS->locals->data->objects[i_5]))) );
    }
  }
  __trace.line = 63;
  result_0->label_list = ((RogueCmdLabel_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))), ROGUE_ARG(THIS->label_list->count) )));
  __trace.line = 64;
  result_0->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  __trace.line = 66;
  result_0->min_args = THIS->min_args;
  __trace.line = 67;
  result_0->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCloneArgs*)(((RogueCloneMethodArgs__init__Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCloneMethodArgs*,ROGUE_CREATE_OBJECT(CloneMethodArgs))), result_0 )))))) )));
  __trace.line = 68;
  result_0->native_code = THIS->native_code;
  __trace.line = 69;
  result_0->index = THIS->index;
  __trace.line = 71;
  return (RogueClassMethod*)(result_0);
}

void RogueMethod__dispatch__Visitor( RogueClassMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "Method.dispatch(Visitor)", "Method.rogue", 73 );
  __trace.line = 74;
  RogueVisitor__visit__Method( v_0, ROGUE_ARG(THIS) );
}

RogueClassMethod* RogueMethod__incorporate__Type( RogueClassMethod* THIS, RogueClassType* into_type_0 )
{
  RogueDebugTrace __trace( "Method.incorporate(Type)", "Method.rogue", 76 );
  __trace.line = 77;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueMethod__set_incorporated( ROGUE_ARG(((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__clone( ROGUE_ARG(THIS) )))), into_type_0 )))) )))));
  __trace.line = 79;
  __trace.filename = "CPPWriter.rogue";
  __trace.line = 1615;
  m_1->cpp_name = ((RogueString*)(NULL));
  __trace.filename = "Method.rogue";
  __trace.line = 80;
  if (!!(THIS->aspect_statements))
  {
    __trace.line = 85;
    m_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->aspect_statements), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )));
  }
  __trace.line = 88;
  if (((void*)THIS->incorporating_classes) == ((void*)NULL))
  {
    THIS->incorporating_classes = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  }
  __trace.line = 89;
  RogueType_List__add__Type( ROGUE_ARG(THIS->incorporating_classes), into_type_0 );
  __trace.line = 91;
  m_1->signature = ((RogueString*)(NULL));
  __trace.line = 92;
  RogueMethod__assign_signature( m_1 );
  __trace.line = 94;
  return (RogueClassMethod*)(m_1);
}

RogueLogical RogueMethod__accepts_arg_count__Int32( RogueClassMethod* THIS, RogueInt32 n_0 )
{
  RogueDebugTrace __trace( "Method.accepts_arg_count(Int32)", "Method.rogue", 96 );
  __trace.line = 97;
  return (RogueLogical)((n_0 >= THIS->min_args && n_0 <= THIS->parameters->count));
}

RogueClassLocal* RogueMethod__add_local__Token_String_Type_Cmd( RogueClassMethod* THIS, RogueClassToken* v_t_0, RogueString* v_name_1, RogueClassType* v_type_2, RogueClassCmd* v_initial_value_3 )
{
  RogueDebugTrace __trace( "Method.add_local(Token,String,Type,Cmd)", "Method.rogue", 99 );
  __trace.line = 100;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), v_t_0, v_name_1 )))));
  __trace.line = 101;
  v_4->index = THIS->locals->count;
  __trace.line = 102;
  v_4->_type = v_type_2;
  __trace.line = 103;
  v_4->initial_value = v_initial_value_3;
  __trace.line = 104;
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->locals), v_4 );
  __trace.line = 105;
  return (RogueClassLocal*)(v_4);
}

RogueClassLocal* RogueMethod__add_parameter__Token_String_Type( RogueClassMethod* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2 )
{
  RogueDebugTrace __trace( "Method.add_parameter(Token,String,Type)", "Method.rogue", 107 );
  __trace.line = 108;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS), p_t_0, p_name_1, p_type_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  __trace.line = 109;
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->parameters), p_3 );
  __trace.line = 110;
  return (RogueClassLocal*)(p_3);
}

void RogueMethod__assign_signature( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.assign_signature()", "Method.rogue", 112 );
  __trace.line = 113;
  if (!!(THIS->signature))
  {
    return;
  }
  __trace.line = 114;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 115;
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  __trace.line = 116;
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[94] );
  __trace.line = 117;
  RogueLogical first_1 = (true);
  __trace.line = 118;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_878_2,(THIS->parameters));
    RogueInt32 _auto_879_3 = (0);
    for (;_auto_879_3 < _auto_878_2->count;++_auto_879_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_878_2->data->objects[_auto_879_3]))));
      __trace.line = 119;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 120;
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[217] );
      }
      __trace.line = 121;
      RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_4->_type->name) );
    }
  }
  __trace.line = 123;
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[34] );
  __trace.line = 124;
  THIS->signature = ((RogueStringBuilder__to_String( buffer_0 )));
}

RogueClassCmdLabel* RogueMethod__begin_label__Token_String_Logical( RogueClassMethod* THIS, RogueClassToken* label_t_0, RogueString* label_name_1, RogueLogical consolidate_duplicates_2 )
{
  RogueDebugTrace __trace( "Method.begin_label(Token,String,Logical)", "Method.rogue", 126 );
  __trace.line = 127;
  if (consolidate_duplicates_2)
  {
    __trace.line = 128;
    THIS->cur_label = ((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )));
    __trace.line = 129;
    if (!!(THIS->cur_label))
    {
      return (RogueClassCmdLabel*)(THIS->cur_label);
    }
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[293] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    __trace.line = 133;
    ROGUE_THROW(((RogueToken__error__String( label_t_0, Rogue_literal_strings[294] ))));
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[295] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    __trace.line = 135;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))->t), Rogue_literal_strings[296] ))));
  }
  __trace.line = 140;
  THIS->cur_label = ((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), label_t_0, label_name_1, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )));
  __trace.line = 141;
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->label_lookup), label_name_1, ROGUE_ARG(THIS->cur_label) );
  __trace.line = 142;
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->label_list), ROGUE_ARG(THIS->cur_label) );
  __trace.line = 143;
  return (RogueClassCmdLabel*)(THIS->cur_label);
}

RogueLogical RogueMethod__is_abstract( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_abstract()", "Method.rogue", 150 );
  __trace.line = 151;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 524288)) )));
}

RogueLogical RogueMethod__is_augment( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_augment()", "Method.rogue", 153 );
  __trace.line = 154;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 262144)) )));
}

RogueLogical RogueMethod__is_dynamic( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_dynamic()", "Method.rogue", 156 );
  __trace.line = 157;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2048)) )));
}

RogueLogical RogueMethod__is_fallback( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_fallback()", "Method.rogue", 159 );
  __trace.line = 160;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2097152)) )));
}

RogueLogical RogueMethod__is_generated( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_generated()", "Method.rogue", 162 );
  __trace.line = 163;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16384)) )));
}

RogueLogical RogueMethod__is_incorporated( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_incorporated()", "Method.rogue", 165 );
  __trace.line = 166;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8192)) )));
}

RogueLogical RogueMethod__is_initializer( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_initializer()", "Method.rogue", 168 );
  __trace.line = 169;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 128)) )));
}

RogueLogical RogueMethod__is_macro( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_macro()", "Method.rogue", 171 );
  __trace.line = 172;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 64)) )));
}

RogueLogical RogueMethod__is_native( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_native()", "Method.rogue", 174 );
  __trace.line = 175;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueMethod__is_overridden( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_overridden()", "Method.rogue", 177 );
  __trace.line = 178;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 4096)) )));
}

RogueLogical RogueMethod__is_requisite( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_requisite()", "Method.rogue", 180 );
  __trace.line = 181;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32768)) )));
}

RogueLogical RogueMethod__is_global( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_global()", "Method.rogue", 183 );
  __trace.line = 184;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 512)) )));
}

RogueLogical RogueMethod__is_propagated( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_propagated()", "Method.rogue", 186 );
  __trace.line = 187;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8388608)) )));
}

RogueLogical RogueMethod__is_task( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_task()", "Method.rogue", 192 );
  __trace.line = 193;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 65536)) )));
}

RogueLogical RogueMethod__is_task_conversion( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.is_task_conversion()", "Method.rogue", 195 );
  __trace.line = 196;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 131072)) )));
}

RogueClassMethod* RogueMethod__make_requisite( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.make_requisite()", "Method.rogue", 202 );
  __trace.line = 203;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 32768 );
  __trace.line = 204;
  return (RogueClassMethod*)(THIS);
}

RogueLogical RogueMethod__omit_output( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.omit_output()", "Method.rogue", 206 );
  __trace.line = 207;
  return (RogueLogical)((((((RogueMethod__is_native( ROGUE_ARG(THIS) ))) || ((RogueMethod__is_macro( ROGUE_ARG(THIS) )))) || !(THIS->is_used)) || ((((RogueMethod__is_generated( ROGUE_ARG(THIS) ))) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[321] )))) && ((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))));
}

RogueClassMethod* RogueMethod__organize__Scope_Logical( RogueClassMethod* THIS, RogueClassScope* scope_0, RogueLogical add_to_lookup_1 )
{
  RogueDebugTrace __trace( "Method.organize(Scope,Logical)", "Method.rogue", 209 );
  __trace.line = 210;
  if (THIS->organized)
  {
    return (RogueClassMethod*)(THIS);
  }
  __trace.line = 211;
  THIS->organized = true;
  __trace.line = 213;
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[307] ))))
  {
    __trace.line = 214;
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      __trace.line = 215;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[308] ))));
    }
    else if (((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))
    {
      __trace.line = 217;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[309] ))));
    }
    __trace.line = 219;
    THIS->attributes->flags |= 128;
    __trace.line = 220;
    THIS->_return_type = THIS->type_context;
  }
  __trace.line = 223;
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 224;
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[310] ))));
    }
    __trace.line = 226;
    THIS->_task_result_type = THIS->_return_type;
    __trace.line = 227;
    if (!!(THIS->_return_type))
    {
      __trace.line = 228;
      RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      __trace.line = 229;
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[418] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_return_type->name) )))) )))), Rogue_literal_strings[145] )))) )))) )));
    }
    else
    {
      __trace.line = 231;
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), Rogue_literal_strings[419] )));
    }
    __trace.line = 233;
    RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  __trace.line = 236;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_880_8,(THIS->parameters));
    RogueInt32 _auto_881_9 = (0);
    for (;_auto_881_9 < _auto_880_8->count;++_auto_881_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_10,(((RogueClassLocal*)(_auto_880_8->data->objects[_auto_881_9]))));
      __trace.line = 237;
      if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
      {
        __trace.line = 238;
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,property_2,(((RogueType__find_property__String( ROGUE_ARG(THIS->type_context), ROGUE_ARG(param_10->name) )))));
        __trace.line = 240;
        if (!!(property_2))
        {
          __trace.line = 241;
          if (((void*)param_10->_type) == ((void*)NULL))
          {
            __trace.line = 243;
            ROGUE_DEF_LOCAL_REF(RogueString*,new_name_3,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
            __trace.line = 244;
            ROGUE_DEF_LOCAL_REF(RogueClassToken*,pt_4,(param_10->t));
            __trace.line = 245;
            RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), pt_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, ROGUE_ARG(param_10->name) )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, new_name_3 )))))) )))))), 0 );
            __trace.line = 246;
            param_10->name = new_name_3;
            __trace.line = 247;
            param_10->_type = property_2->_type;
          }
          else if ((((void*)property_2->type_context) == ((void*)THIS->type_context) && ((RogueProperty__is_incorporated( property_2 ))) == ((RogueMethod__is_incorporated( ROGUE_ARG(THIS) )))))
          {
            __trace.line = 249;
            RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[420] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(property_2->type_context))) )))) )))), Rogue_literal_strings[421] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->type_context))) )))) )))), Rogue_literal_strings[422] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(((RogueMethod__is_incorporated( ROGUE_ARG(THIS) )))) )))) )))) )))) );
            __trace.line = 250;
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[390] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[391] )))) )))) ))));
          }
        }
      }
      __trace.line = 255;
      if (!(!!(param_10->_type)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[423] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[21] )))) )))) ))));
      }
    }
  }
  __trace.line = 258;
  RogueMethod__assign_signature( ROGUE_ARG(THIS) );
  __trace.line = 260;
  if ((add_to_lookup_1 && !(((RogueMethod__is_augment( ROGUE_ARG(THIS) ))))))
  {
    __trace.line = 263;
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_5,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature) )))));
    __trace.line = 264;
    if (!(!!(list_5)))
    {
      __trace.line = 265;
      list_5 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
      __trace.line = 266;
      RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature), list_5 );
    }
    __trace.line = 268;
    RogueMethod_List__add__Method( list_5, ROGUE_ARG(THIS) );
    __trace.line = 270;
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      __trace.line = 271;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_6,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      __trace.line = 272;
      if ((!!(existing_m_6) && ((void*)existing_m_6->type_context) == ((void*)THIS->type_context)))
      {
        __trace.line = 273;
        if (((RogueType__is_routine( ROGUE_ARG(THIS->type_context) ))))
        {
          __trace.line = 274;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[424] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(THIS->signature), (RogueCharacter)'(' )))) )))) )))), Rogue_literal_strings[425] )))) )))) ))));
        }
        else
        {
          __trace.line = 277;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[426] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[425] )))) )))) ))));
        }
      }
      __trace.line = 280;
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
    else
    {
      __trace.line = 282;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_7,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      __trace.line = 283;
      if ((!!(existing_m_7) && ((void*)existing_m_7->type_context) == ((void*)THIS->type_context)))
      {
        __trace.line = 284;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[427] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[425] )))) )))) ))));
      }
      __trace.line = 286;
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 290;
  THIS->min_args = THIS->parameters->count;
  __trace.line = 291;
  while ((THIS->min_args >= 1 && !!(((RogueClassLocal*)(THIS->parameters->data->objects[(THIS->min_args - 1)]))->initial_value)))
  {
    __trace.line = 292;
    --THIS->min_args;
  }
  __trace.line = 295;
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__resolve( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.resolve()", "Method.rogue", 298 );
  __trace.line = 299;
  if (THIS->resolved)
  {
    return;
  }
  __trace.line = 300;
  THIS->resolved = true;
  __trace.line = 302;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_882_2,(THIS->parameters));
    RogueInt32 _auto_883_3 = (0);
    for (;_auto_883_3 < _auto_882_2->count;++_auto_883_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_882_2->data->objects[_auto_883_3]))));
      __trace.line = 303;
      RogueType__organize__Scope( ROGUE_ARG(param_4->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  __trace.line = 305;
  if (!!(THIS->_return_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  __trace.line = 307;
  if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
  {
    __trace.line = 308;
    THIS->aspect_statements = THIS->statements;
    __trace.line = 309;
    THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  __trace.line = 312;
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    RogueMethod__convert_to_task( ROGUE_ARG(THIS) );
  }
  __trace.line = 314;
  ROGUE_DEF_LOCAL_REF(RogueClassScope*,scope_0,(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  __trace.line = 315;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_884_5,(THIS->parameters));
    RogueInt32 _auto_885_6 = (0);
    for (;_auto_885_6 < _auto_884_5->count;++_auto_885_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_7,(((RogueClassLocal*)(_auto_884_5->data->objects[_auto_885_6]))));
      RogueScope__push_local__Local_Logical( scope_0, p_7, true );
    }
  }
  __trace.line = 317;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, ROGUE_ARG(((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->m_on_launch)) );
  __trace.line = 319;
  if (scope_0->local_list->count > THIS->parameters->count)
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[469] ))));
  }
  __trace.line = 320;
  if (!!(scope_0->control_stack->count))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[470] ))));
  }
  __trace.line = 322;
  if (((RogueMethod__is_initializer( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 323;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,return_t_1,(THIS->t));
    __trace.line = 324;
    if (!!(THIS->statements->count))
    {
      return_t_1 = ((RogueClassToken*)((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) )))->t);
    }
    __trace.line = 325;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmdReturn__resolve__Scope( ROGUE_ARG(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), return_t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), return_t_1, ROGUE_ARG(THIS->type_context) )))))))) )))), scope_0 )))) );
  }
}

void RogueMethod__convert_augment_to_standalone( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.convert_augment_to_standalone()", "Method.rogue", 328 );
  __trace.line = 329;
  THIS->attributes->flags &= -262145;
  __trace.line = 330;
  if (!(!!(THIS->native_code)))
  {
    __trace.line = 334;
    if (THIS->label_list->count > 2)
    {
      __trace.line = 336;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_0,(((RogueClassCmdLabel*)(THIS->label_list->data->objects[2]))));
      __trace.line = 337;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(label_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[303] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_0->name) )))) )))), Rogue_literal_strings[304] )))) )))) ))));
    }
    __trace.line = 340;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,insert_label_1,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[293] )))));
    __trace.line = 341;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,append_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[295] )))));
    __trace.line = 342;
    RogueTable_String_CmdLabel___clear( ROGUE_ARG(THIS->label_lookup) );
    __trace.line = 343;
    RogueCmdLabel_List__clear( ROGUE_ARG(THIS->label_list) );
    __trace.line = 347;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[293], false )))))) );
    __trace.line = 348;
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(insert_label_1->statements))) );
    __trace.line = 349;
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(append_label_2->statements))) );
    __trace.line = 350;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[295], false )))))) );
  }
}

void RogueMethod__convert_to_task( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.convert_to_task()", "Method.rogue", 353 );
  __trace.line = 355;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_0,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[458] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[459] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))) )))) )))) )))));
  __trace.line = 356;
  RogueAttributes__add__Int32( ROGUE_ARG(task_type_0->attributes), 0 );
  __trace.line = 357;
  RogueType_List__add__Type( ROGUE_ARG(task_type_0->base_types), ROGUE_ARG(THIS->_return_type) );
  __trace.line = 360;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_1,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[307] )))));
  __trace.line = 361;
  RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), Rogue_literal_strings[460], ROGUE_ARG(((RogueClassType*)(NULL))) );
  __trace.line = 362;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_890_9,(THIS->parameters));
    RogueInt32 _auto_891_10 = (0);
    for (;_auto_891_10 < _auto_890_9->count;++_auto_891_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_11,(((RogueClassLocal*)(_auto_890_9->data->objects[_auto_891_10]))));
      __trace.line = 363;
      RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_11->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(p_11->index) )))) )))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
    }
  }
  __trace.line = 366;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_update_2,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[462] )))));
  __trace.line = 367;
  m_update_2->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  __trace.line = 368;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[463], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))))) );
  __trace.line = 369;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[464] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) )))))))) )))))) );
  __trace.line = 371;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_execute_3,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[463] )))));
  __trace.line = 372;
  m_execute_3->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  __trace.line = 373;
  task_type_0->defined = true;
  __trace.line = 378;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_4,(((RogueString__operatorPLUS__String( Rogue_literal_strings[465], ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  __trace.line = 379;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_temp_5,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), m_name_4 )))));
  __trace.line = 380;
  m_temp_5->_return_type = THIS->_task_result_type;
  __trace.line = 381;
  RogueAttributes__add__Int32( ROGUE_ARG(m_temp_5->attributes), 131072 );
  __trace.line = 385;
  m_temp_5->parameters = THIS->parameters;
  __trace.line = 386;
  m_temp_5->locals = THIS->locals;
  __trace.line = 387;
  m_temp_5->statements = THIS->statements;
  __trace.line = 388;
  RogueMethod__organize__Scope_Logical( m_temp_5, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
  __trace.line = 389;
  RogueMethod__resolve( m_temp_5 );
  __trace.line = 392;
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 393;
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 394;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_894_12,(m_temp_5->locals));
    RogueInt32 _auto_895_13 = (0);
    for (;_auto_895_13 < _auto_894_12->count;++_auto_895_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_894_12->data->objects[_auto_895_13]))));
      __trace.line = 395;
      if (v_14->index < m_temp_5->parameters->count)
      {
        __trace.line = 396;
        RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS), ROGUE_ARG(v_14->t), ROGUE_ARG(v_14->name), ROGUE_ARG(v_14->_type) );
      }
    }
  }
  __trace.line = 401;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  __trace.line = 402;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
  __trace.line = 403;
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context) )))))))) );
  __trace.line = 404;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_896_15,(m_temp_5->parameters));
    RogueInt32 _auto_897_16 = (0);
    for (;_auto_897_16 < _auto_896_15->count;++_auto_897_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_17,(((RogueClassLocal*)(_auto_896_15->data->objects[_auto_897_16]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(p_17->name) )))))) );
    }
  }
  __trace.line = 405;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_type_0->name), args_6 )))))) )))))) );
  __trace.line = 408;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_898_18,(m_temp_5->locals));
    RogueInt32 _auto_899_19 = (0);
    for (;_auto_899_19 < _auto_898_18->count;++_auto_899_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_20,(((RogueClassLocal*)(_auto_898_18->data->objects[_auto_899_19]))));
      __trace.line = 409;
      ROGUE_DEF_LOCAL_REF(RogueString*,p_name_7,(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(v_20->name), Rogue_literal_strings[461] )))), ROGUE_ARG(v_20->index) )))));
      __trace.line = 410;
      RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(v_20->t), p_name_7, ROGUE_ARG(v_20->_type), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
    }
  }
  __trace.line = 413;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_8,(((RogueTaskArgs__init__Type_Method_Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTaskArgs*,ROGUE_CREATE_OBJECT(TaskArgs))), task_type_0, m_execute_3, ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  __trace.line = 414;
  task_args_8->context_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[460], ROGUE_ARG(THIS->type_context), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  __trace.line = 415;
  task_args_8->ip_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[464], ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  __trace.line = 417;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_904_21,(m_temp_5->statements));
    RogueInt32 _auto_905_22 = (0);
    for (;_auto_905_22 < _auto_904_21->count;++_auto_905_22)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_23,(((RogueClassCmd*)(_auto_904_21->data->objects[_auto_905_22]))));
      __trace.line = 418;
      statement_23 = ((RogueClassCmd*)(call_ROGUEM99( 10, statement_23, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_8))) )));
      __trace.line = 419;
      if (!!(statement_23))
      {
        RogueTaskArgs__add__Cmd( task_args_8, statement_23 );
      }
    }
  }
  __trace.line = 421;
  if (task_args_8->cmd_task_control->current_section->statements->count == 0)
  {
    __trace.line = 422;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)task_args_8->cmd_task_control->current_section->statements)), ROGUE_ARG(((RogueTaskArgs__create_return__Token_Cmd( task_args_8, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
  }
  __trace.line = 425;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_execute_3->statements)), ROGUE_ARG(((RogueClassCmd*)(task_args_8->cmd_task_control))) );
  __trace.line = 427;
  RogueType__organize__Scope( task_type_0, ROGUE_ARG(((RogueClassScope*)(NULL))) );
}

RogueClassMethod* RogueMethod__set_incorporated( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.set_incorporated()", "Method.rogue", 429 );
  __trace.line = 430;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  __trace.line = 431;
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__set_type_context__Type( RogueClassMethod* THIS, RogueClassType* _auto_95_0 )
{
  RogueDebugTrace __trace( "Method.set_type_context(Type)", "Method.rogue", 433 );
  THIS->type_context = _auto_95_0;
  __trace.line = 434;
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__trace_used_code( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.trace_used_code()", "Method.rogue", 439 );
  __trace.line = 440;
  if (THIS->is_used)
  {
    return;
  }
  __trace.line = 441;
  THIS->is_used = true;
  __trace.line = 443;
  RogueType__trace_used_code( ROGUE_ARG(THIS->type_context) );
  __trace.line = 445;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_907_0,(THIS->parameters));
    RogueInt32 _auto_908_1 = (0);
    for (;_auto_908_1 < _auto_907_0->count;++_auto_908_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_2,(((RogueClassLocal*)(_auto_907_0->data->objects[_auto_908_1]))));
      RogueType__trace_used_code( ROGUE_ARG(param_2->_type) );
    }
  }
  __trace.line = 446;
  if (!!(THIS->_return_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_return_type) );
  }
  __trace.line = 448;
  RogueCmdStatementList__trace_used_code( ROGUE_ARG(THIS->statements) );
}

void RogueMethod__assign_cpp_name( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.assign_cpp_name()", "CPPWriter.rogue", 1599 );
  __trace.line = 1600;
  if (!!(THIS->cpp_name))
  {
    return;
  }
  __trace.line = 1601;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 1602;
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[458] );
  __trace.line = 1603;
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  __trace.line = 1604;
  if (!!(THIS->parameters->count))
  {
    __trace.line = 1605;
    RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[461] );
    __trace.line = 1606;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_909_1,(THIS->parameters));
      RogueInt32 _auto_910_2 = (0);
      for (;_auto_910_2 < _auto_909_1->count;++_auto_910_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_3,(((RogueClassLocal*)(_auto_909_1->data->objects[_auto_910_2]))));
        __trace.line = 1607;
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[461] );
        __trace.line = 1608;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_3->_type->cpp_name) );
      }
    }
  }
  __trace.line = 1611;
  THIS->cpp_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[54], ROGUE_ARG(((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) )));
}

void RogueMethod__print_prototype__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Method.print_prototype(CPPWriter)", "CPPWriter.rogue", 1617 );
  __trace.line = 1618;
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  __trace.line = 1619;
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  __trace.line = 1620;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
}

void RogueMethod__print_signature__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Method.print_signature(CPPWriter)", "CPPWriter.rogue", 1622 );
  __trace.line = 1623;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(THIS->cpp_name) );
  __trace.line = 1624;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
  __trace.line = 1625;
  RogueLogical first_1 = (true);
  __trace.line = 1626;
  if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 1627;
    first_1 = ((RogueLogical)false);
    __trace.line = 1628;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
    __trace.line = 1629;
    if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
    {
      __trace.line = 1630;
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
    }
    else
    {
      __trace.line = 1632;
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->type_context) );
    }
    __trace.line = 1634;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[596] );
  }
  __trace.line = 1636;
  if (!!(THIS->parameters->count))
  {
    __trace.line = 1637;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_911_2,(THIS->parameters));
      RogueInt32 _auto_912_3 = (0);
      for (;_auto_912_3 < _auto_911_2->count;++_auto_912_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_911_2->data->objects[_auto_912_3]))));
        __trace.line = 1638;
        if (first_1)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
          first_1 = ((RogueLogical)false);
        }
        else
        {
          __trace.line = 1639;
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
        }
        __trace.line = 1640;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(param_4->_type) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_4 )))) );
      }
    }
  }
  __trace.line = 1643;
  if (!(first_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
  }
  __trace.line = 1644;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

void RogueMethod__print_definition__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Method.print_definition(CPPWriter)", "CPPWriter.rogue", 1646 );
  __trace.line = 1647;
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  __trace.line = 1649;
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  __trace.line = 1650;
  RogueCPPWriter__println( writer_0 );
  __trace.line = 1651;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1652;
  writer_0->indent += 2;
  __trace.line = 1653;
  if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
  {
    __trace.line = 1654;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[681] );
    __trace.line = 1655;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
    __trace.line = 1656;
    writer_0->indent += 2;
    __trace.line = 1657;
    if (!!(THIS->incorporating_classes))
    {
      __trace.line = 1658;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_913_2,(THIS->incorporating_classes));
        RogueInt32 _auto_914_3 = (0);
        for (;_auto_914_3 < _auto_913_2->count;++_auto_914_3)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_4,(((RogueClassType*)(_auto_913_2->data->objects[_auto_914_3]))));
          __trace.line = 1659;
          if (ic_4->is_used)
          {
            __trace.line = 1660;
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueType__find_method__String( ic_4, ROGUE_ARG(THIS->signature) )))));
            __trace.line = 1661;
            if (m_1->is_used)
            {
              __trace.line = 1662;
              RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[682] )))), ROGUE_ARG(ic_4->index) )))), Rogue_literal_strings[216] );
              __trace.line = 1663;
              if (!!(THIS->_return_type))
              {
                __trace.line = 1664;
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[683] );
                __trace.line = 1665;
                if (((void*)THIS->_return_type) != ((void*)m_1->_return_type))
                {
                  __trace.line = 1667;
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[34] );
                }
              }
              else
              {
                __trace.line = 1670;
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[335] );
              }
              __trace.line = 1672;
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(m_1->cpp_name) )))), Rogue_literal_strings[684] )))), ROGUE_ARG(m_1->type_context) )))), Rogue_literal_strings[685] );
              __trace.line = 1673;
              {
                ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_915_5,(THIS->parameters));
                RogueInt32 _auto_916_6 = (0);
                for (;_auto_916_6 < _auto_915_5->count;++_auto_916_6)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueClassLocal*)(_auto_915_5->data->objects[_auto_916_6]))));
                  __trace.line = 1674;
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_7 )))) );
                }
              }
              __trace.line = 1676;
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[617] );
            }
          }
        }
      }
    }
    __trace.line = 1681;
    if (!!(THIS->_return_type))
    {
      __trace.line = 1682;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[686] );
      __trace.line = 1683;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[683] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[243] );
    }
    __trace.line = 1685;
    writer_0->indent -= 2;
    __trace.line = 1686;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  }
  else
  {
    __trace.line = 1688;
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
    {
      __trace.line = 1689;
      writer_0->trace_token = THIS->t;
      __trace.line = 1690;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[687] );
      __trace.line = 1691;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(THIS->signature) )))), Rogue_literal_strings[688] );
      __trace.line = 1692;
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueToken__filename( ROGUE_ARG(THIS->t) )))) )))), Rogue_literal_strings[690] )))), ROGUE_ARG(THIS->t->line) );
      __trace.line = 1693;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[617] );
    }
    __trace.line = 1695;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  }
  __trace.line = 1698;
  writer_0->indent -= 2;
  __trace.line = 1699;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1700;
  RogueCPPWriter__println( writer_0 );
}

RogueClassMethod* RogueMethod__init_object( RogueClassMethod* THIS )
{
  RogueDebugTrace __trace( "Method.init_object()", "Method.rogue", 3 );
  __trace.line = 10;
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  __trace.line = 18;
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 19;
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 23;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  __trace.line = 28;
  THIS->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  __trace.line = 38;
  THIS->label_list = ((RogueCmdLabel_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))) )));
  __trace.line = 39;
  THIS->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  __trace.line = 3;
  return (RogueClassMethod*)(THIS);
}

RogueProperty_List* RogueProperty_List__init( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueProperty_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueProperty_List*)(THIS);
}

RogueString* RogueProperty_List__to_String( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_917_2,(THIS));
    RogueInt32 _auto_918_3 = (0);
    for (;_auto_918_3 < _auto_917_2->count;++_auto_918_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,value_4,(((RogueClassProperty*)(_auto_917_2->data->objects[_auto_918_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueProperty__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueProperty_List__type_name( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[815]);
}

RogueProperty_List* RogueProperty_List__init_object( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].init_object()", "List.rogue", 4 );
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__init__Int32( RogueProperty_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Property[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassProperty*), true );
  }
  __trace.line = 16;
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__add__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  RogueDebugTrace __trace( "Property[].add(Property)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueProperty_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueProperty_List*)(THIS);
}

RogueInt32 RogueProperty_List__capacity( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueProperty_List* RogueProperty_List__clear( RogueProperty_List* THIS )
{
  RogueDebugTrace __trace( "Property[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueProperty_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueProperty_List*)(THIS);
}

void RogueProperty_List__discard_from__Int32( RogueProperty_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Property[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueOptionalInt32 RogueProperty_List__locate__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  RogueDebugTrace __trace( "Property[].locate(Property)", "List.rogue", 160 );
  __trace.line = 161;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_938_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_938_1->count;++i_2)
    {
      __trace.line = 162;
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassProperty*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  __trace.line = 164;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueProperty_List* RogueProperty_List__reserve__Int32( RogueProperty_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Property[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueProperty_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueProperty_List*)(THIS);
}

RogueString* RogueProperty__to_String( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.to_String()", "Property.rogue", 39 );
  __trace.line = 40;
  return (RogueString*)(THIS->name);
}

RogueString* RogueProperty__type_name( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.type_name()", "Property.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[754]);
}

RogueClassProperty* RogueProperty__init__Token_Type_String_Type_Cmd( RogueClassProperty* THIS, RogueClassToken* _auto_96_0, RogueClassType* _auto_97_1, RogueString* _auto_98_2, RogueClassType* _auto_99_3, RogueClassCmd* _auto_100_4 )
{
  RogueDebugTrace __trace( "Property.init(Token,Type,String,Type,Cmd)", "Property.rogue", 11 );
  THIS->initial_value = _auto_100_4;
  THIS->_type = _auto_99_3;
  THIS->name = _auto_98_2;
  RogueProperty__set_type_context__Type( ROGUE_ARG(THIS), _auto_97_1 );
  THIS->t = _auto_96_0;
  __trace.line = 13;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__clone( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.clone()", "Property.rogue", 13 );
  __trace.line = 14;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,result_0,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  __trace.line = 16;
  __trace.filename = "CPPWriter.rogue";
  __trace.line = 1714;
  result_0->cpp_name = THIS->cpp_name;
  __trace.filename = "Property.rogue";
  __trace.line = 17;
  result_0->_type = THIS->_type;
  __trace.line = 18;
  result_0->attributes = THIS->attributes;
  __trace.line = 19;
  if (!!(THIS->initial_value))
  {
    result_0->initial_value = (call_ROGUEM99( 10, ROGUE_ARG(THIS->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  __trace.line = 20;
  return (RogueClassProperty*)(result_0);
}

RogueLogical RogueProperty__is_incorporated( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.is_incorporated()", "Property.rogue", 22 );
  __trace.line = 23;
  return (RogueLogical)(!!((THIS->attributes & 8192)));
}

RogueLogical RogueProperty__is_native( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.is_native()", "Property.rogue", 25 );
  __trace.line = 26;
  return (RogueLogical)(!!((THIS->attributes & 32)));
}

RogueClassProperty* RogueProperty__mark_incorporated( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.mark_incorporated()", "Property.rogue", 28 );
  __trace.line = 29;
  THIS->attributes |= 8192;
  __trace.line = 30;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__mark_native( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.mark_native()", "Property.rogue", 32 );
  __trace.line = 33;
  THIS->attributes |= 32;
  __trace.line = 34;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__set_type_context__Type( RogueClassProperty* THIS, RogueClassType* _auto_101_0 )
{
  RogueDebugTrace __trace( "Property.set_type_context(Type)", "Property.rogue", 36 );
  THIS->type_context = _auto_101_0;
  __trace.line = 37;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__init_object( RogueClassProperty* THIS )
{
  RogueDebugTrace __trace( "Property.init_object()", "Property.rogue", 1 );
  return (RogueClassProperty*)(THIS);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init( RogueClassTable_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Method_List___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueString* RogueTable_String_Method_List___to_String( RogueClassTable_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method_List___type_name( RogueClassTable_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[755]);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init__Int32( RogueClassTable_String_Method_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Method_List__List__init__Int32_TableEntry_String_Method_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Method_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Method_List_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Method_List_*)(THIS);
}

void RogueTable_String_Method_List___clear( RogueClassTable_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.clear()", "Table.rogue", 32 );
  __trace.line = 33;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method_List__List*,_auto_956_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_956_0->count;++i_1)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Method_List_*)(NULL));
    }
  }
  __trace.filename = "Table.rogue";
  __trace.line = 34;
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Method_List_* RogueTable_String_Method_List___find__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_2,(((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_List_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Method_List_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Method_List_*)(((RogueClassTableEntry_String_Method_List_*)(NULL)));
}

RogueMethod_List* RogueTable_String_Method_List___get__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_1,(((RogueTable_String_Method_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueMethod_List*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,default_value_2,0);
    __trace.line = 62;
    return (RogueMethod_List*)(default_value_2);
  }
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___set__String_Method_List( RogueClassTable_String_Method_List_* THIS, RogueString* key_0, RogueMethod_List* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.set(String,Method[])", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_4,(((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Method_List_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Method_List_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Method_List_*)((RogueTableEntry_String_Method_List___init__String_Method_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_List_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Method_List_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method_List___print_to__StringBuilder( RogueClassTable_String_Method_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init_object( RogueClassTable_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method[]>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueType_List* RogueType_List__init( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueType_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueType_List*)(THIS);
}

RogueString* RogueType_List__to_String( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_976_2,(THIS));
    RogueInt32 _auto_977_3 = (0);
    for (;_auto_977_3 < _auto_976_2->count;++_auto_977_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_4,(((RogueClassType*)(_auto_976_2->data->objects[_auto_977_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueType__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueType_List__type_name( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[816]);
}

RogueType_List* RogueType_List__init_object( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].init_object()", "List.rogue", 4 );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__init__Int32( RogueType_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Type[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassType*), true );
  }
  __trace.line = 16;
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__clone( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].clone()", "List.rogue", 29 );
  __trace.line = 30;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,result_0,(((RogueType_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))), ROGUE_ARG(THIS->count) )))));
  __trace.line = 31;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_980_1,(THIS));
    RogueInt32 _auto_981_2 = (0);
    for (;_auto_981_2 < _auto_980_1->count;++_auto_981_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_3,(((RogueClassType*)(_auto_980_1->data->objects[_auto_981_2]))));
      __trace.line = 32;
      RogueType_List__add__Type( result_0, value_3 );
    }
  }
  __trace.line = 34;
  return (RogueType_List*)(result_0);
}

RogueType_List* RogueType_List__add__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  RogueDebugTrace __trace( "Type[].add(Type)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueType_List*)(THIS);
}

RogueInt32 RogueType_List__capacity( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueType_List* RogueType_List__clear( RogueType_List* THIS )
{
  RogueDebugTrace __trace( "Type[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueType_List*)(THIS);
}

void RogueType_List__discard_from__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Type[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueType_List* RogueType_List__filter__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* fn_0 )
{
  RogueDebugTrace __trace( "Type[].filter(Function(Type)->Logical)", "List.rogue", 95 );
  __trace.line = 96;
  RogueInt32 write_pos_1 = (0);
  __trace.line = 97;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_994_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_994_3->count;++i_4)
    {
      __trace.line = 98;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_2,(((RogueClassType*)(THIS->data->objects[i_4]))));
      __trace.line = 99;
      if ((call_ROGUEM151( 7, fn_0, value_2 )))
      {
        __trace.line = 308;
        THIS->data->objects[write_pos_1] = value_2;
        __trace.line = 101;
        ++write_pos_1;
      }
    }
  }
  __trace.line = 104;
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), write_pos_1 );
  __trace.line = 105;
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__filtered__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* fn_0 )
{
  RogueDebugTrace __trace( "Type[].filtered(Function(Type)->Logical)", "List.rogue", 107 );
  __trace.line = 108;
  return (RogueType_List*)(((RogueType_List__filter__Function_Type_RETURNSLogical( ROGUE_ARG(((RogueType_List__clone( ROGUE_ARG(THIS) )))), fn_0 ))));
}

RogueType_List* RogueType_List__insert__Type_Int32( RogueType_List* THIS, RogueClassType* value_0, RogueInt32 before_index_1 )
{
  RogueDebugTrace __trace( "Type[].insert(Type,Int32)", "List.rogue", 116 );
  __trace.line = 117;
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  __trace.line = 119;
  if (before_index_1 >= THIS->count)
  {
    __trace.line = 120;
    return (RogueType_List*)(((RogueType_List__add__Type( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    __trace.line = 122;
    RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    __trace.line = 125;
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    __trace.line = 126;
    ++THIS->count;
    __trace.line = 129;
    THIS->data->objects[before_index_1] = value_0;
  }
  __trace.line = 131;
  return (RogueType_List*)(THIS);
}

RogueOptionalInt32 RogueType_List__locate__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  RogueDebugTrace __trace( "Type[].locate(Type)", "List.rogue", 160 );
  __trace.line = 161;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_997_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_997_1->count;++i_2)
    {
      __trace.line = 162;
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassType*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  __trace.line = 164;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueType_List* RogueType_List__reserve__Int32( RogueType_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Type[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueType_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueType_List*)(THIS);
}

RogueClassType* RogueType_List__remove__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  RogueDebugTrace __trace( "Type[].remove(Type)", "List.rogue", 255 );
  __trace.line = 256;
  RogueOptionalInt32 index_1 = (((RogueType_List__locate__Type( ROGUE_ARG(THIS), value_0 ))));
  __trace.line = 257;
  if (index_1.exists)
  {
    __trace.line = 258;
    return (RogueClassType*)(((RogueType_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    __trace.line = 260;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_2,0);
    __trace.line = 261;
    return (RogueClassType*)(zero_value_2);
  }
}

RogueClassType* RogueType_List__remove_at__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Type[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueClassType*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassType*)(result_1);
}

RogueType_List* RogueType_List__swap__Int32_Int32( RogueType_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  RogueDebugTrace __trace( "Type[].swap(Int32,Int32)", "List.rogue", 344 );
  __trace.line = 345;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,temp_2,(((RogueClassType*)(THIS->data->objects[i1_0]))));
  __trace.line = 346;
  THIS->data->objects[i1_0] = ((RogueClassType*)(THIS->data->objects[i2_1]));
  __trace.line = 347;
  THIS->data->objects[i2_1] = temp_2;
  __trace.line = 348;
  return (RogueType_List*)(THIS);
}

RogueString* RogueType__to_String( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.to_String()", "Type.rogue", 991 );
  __trace.line = 992;
  return (RogueString*)(THIS->name);
}

RogueString* RogueType__type_name( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.type_name()", "Type.rogue", 3 );
  return (RogueString*)(Rogue_literal_strings[756]);
}

RogueClassType* RogueType__init__Token_String( RogueClassType* THIS, RogueClassToken* _auto_107_0, RogueString* _auto_108_1 )
{
  RogueDebugTrace __trace( "Type.init(Token,String)", "Type.rogue", 61 );
  THIS->name = _auto_108_1;
  THIS->t = _auto_107_0;
  __trace.line = 63;
  return (RogueClassType*)(THIS);
}

RogueClassMethod* RogueType__add_method__Token_String( RogueClassType* THIS, RogueClassToken* m_t_0, RogueString* m_name_1 )
{
  RogueDebugTrace __trace( "Type.add_method(Token,String)", "Type.rogue", 63 );
  __trace.line = 64;
  return (RogueClassMethod*)(((RogueType__add_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), m_t_0, ROGUE_ARG(THIS), m_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Type.add_method(Method)", "Type.rogue", 66 );
  __trace.line = 67;
  if ((THIS->organized && !(THIS->organizing)))
  {
    RogueType__inject_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, ROGUE_ARG((RogueOptionalInt32__create())) );
    return (RogueClassMethod*)(m_0);
  }
  __trace.line = 69;
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->method_list), m_0 );
  __trace.line = 70;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  __trace.line = 71;
  if (!(!!(list_1)))
  {
    __trace.line = 72;
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    __trace.line = 73;
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  __trace.line = 75;
  RogueMethod_List__add__Method( list_1, m_0 );
  __trace.line = 77;
  return (RogueClassMethod*)(m_0);
}

RogueClassMethod* RogueType__add_global_method__Token_String( RogueClassType* THIS, RogueClassToken* r_t_0, RogueString* r_name_1 )
{
  RogueDebugTrace __trace( "Type.add_global_method(Token,String)", "Type.rogue", 88 );
  __trace.line = 89;
  return (RogueClassMethod*)(((RogueType__add_global_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), r_t_0, ROGUE_ARG(THIS), r_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_global_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Type.add_global_method(Method)", "Type.rogue", 91 );
  __trace.line = 92;
  RogueAttributes__add__Int32( ROGUE_ARG(m_0->attributes), 512 );
  __trace.line = 94;
  if ((THIS->organized && !(THIS->organizing)))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, ROGUE_ARG((RogueOptionalInt32__create())) );
    return (RogueClassMethod*)(m_0);
  }
  __trace.line = 96;
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->global_method_list), m_0 );
  __trace.line = 97;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  __trace.line = 98;
  if (!(!!(list_1)))
  {
    __trace.line = 99;
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    __trace.line = 100;
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  __trace.line = 102;
  RogueMethod_List__add__Method( list_1, m_0 );
  __trace.line = 104;
  return (RogueClassMethod*)(m_0);
}

RogueClassProperty* RogueType__add_global__Token_String( RogueClassType* THIS, RogueClassToken* s_t_0, RogueString* s_name_1 )
{
  RogueDebugTrace __trace( "Type.add_global(Token,String)", "Type.rogue", 106 );
  __trace.line = 107;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), s_t_0, ROGUE_ARG(THIS), s_name_1, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  __trace.line = 108;
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->global_list), s_2 );
  __trace.line = 109;
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->global_lookup), s_name_1, s_2 );
  __trace.line = 110;
  return (RogueClassProperty*)(s_2);
}

RogueClassProperty* RogueType__add_property__Token_String_Type_Cmd( RogueClassType* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2, RogueClassCmd* initial_value_3 )
{
  RogueDebugTrace __trace( "Type.add_property(Token,String,Type,Cmd)", "Type.rogue", 112 );
  __trace.line = 113;
  return (RogueClassProperty*)(((RogueType__add_property__Property( ROGUE_ARG(THIS), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), p_t_0, ROGUE_ARG(THIS), p_name_1, p_type_2, initial_value_3 )))) ))));
}

RogueClassProperty* RogueType__add_property__Property( RogueClassType* THIS, RogueClassProperty* p_0 )
{
  RogueDebugTrace __trace( "Type.add_property(Property)", "Type.rogue", 115 );
  __trace.line = 116;
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_0 );
  __trace.line = 117;
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->property_lookup), ROGUE_ARG(p_0->name), p_0 );
  __trace.line = 118;
  return (RogueClassProperty*)(p_0);
}

void RogueType__collect_type_info__Int32_List( RogueClassType* THIS, RogueInt32_List* info_0 )
{
  RogueDebugTrace __trace( "Type.collect_type_info(Int32[])", "Type.rogue", 120 );
  __trace.line = 121;
  RogueInt32_List__add__Int32( info_0, 0 );
  __trace.line = 123;
  if (((RogueType__is_primitive( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 124;
    RogueInt32_List__add__Int32( info_0, 0 );
  }
  else
  {
    __trace.line = 126;
    RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->dynamic_method_table_index) );
  }
  __trace.line = 129;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,flat_base_types_1,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  __trace.line = 130;
  if (!!(THIS->base_class))
  {
    RogueType__collect_base_types__Type_List( ROGUE_ARG(THIS->base_class), flat_base_types_1 );
  }
  __trace.line = 131;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1018_2,(THIS->base_types));
    RogueInt32 _auto_1019_3 = (0);
    for (;_auto_1019_3 < _auto_1018_2->count;++_auto_1019_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1018_2->data->objects[_auto_1019_3]))));
      __trace.line = 132;
      RogueType__collect_base_types__Type_List( base_type_4, flat_base_types_1 );
    }
  }
  __trace.line = 135;
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(flat_base_types_1->count) );
  __trace.line = 136;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1020_5,(flat_base_types_1));
    RogueInt32 _auto_1021_6 = (0);
    for (;_auto_1021_6 < _auto_1020_5->count;++_auto_1021_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueClassType*)(_auto_1020_5->data->objects[_auto_1021_6]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(base_type_7->index) );
    }
  }
}

RogueClassCmd* RogueType__create_default_value__Token( RogueClassType* THIS, RogueClassToken* _t_0 )
{
  RogueDebugTrace __trace( "Type.create_default_value(Token)", "Type.rogue", 141 );
  __trace.line = 142;
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), _t_0 ))))));
  }
  __trace.line = 143;
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), _t_0, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdArgs*)(NULL))) ))))));
  }
  __trace.line = 144;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), _t_0, false ))))));
  }
  __trace.line = 145;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), _t_0, 0 ))))));
}

void RogueType__dispatch__Visitor( RogueClassType* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "Type.dispatch(Visitor)", "Type.rogue", 153 );
  __trace.line = 154;
  RogueVisitor__visit__Type( v_0, ROGUE_ARG(THIS) );
}

RogueClassMethod* RogueType__find_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  RogueDebugTrace __trace( "Type.find_method(String)", "Type.rogue", 159 );
  __trace.line = 160;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->method_lookup_by_signature), signature_0 )))));
  __trace.line = 161;
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  __trace.line = 163;
  return (RogueClassMethod*)(((RogueType__find_global_method__String( ROGUE_ARG(THIS), signature_0 ))));
}

RogueClassMethod* RogueType__find_global_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  RogueDebugTrace __trace( "Type.find_global_method(String)", "Type.rogue", 165 );
  __trace.line = 166;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->global_method_lookup_by_signature), signature_0 )))));
  __trace.line = 167;
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  __trace.line = 169;
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueClassProperty* RogueType__find_property__String( RogueClassType* THIS, RogueString* p_name_0 )
{
  RogueDebugTrace __trace( "Type.find_property(String)", "Type.rogue", 171 );
  __trace.line = 172;
  if (RogueString_character_at(p_name_0,0) == (RogueCharacter)'@')
  {
    p_name_0 = ((RogueString*)((RogueString__rightmost__Int32( p_name_0, -1 ))));
  }
  __trace.line = 173;
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->property_lookup), p_name_0 ))));
}

RogueClassProperty* RogueType__find_global__String( RogueClassType* THIS, RogueString* s_name_0 )
{
  RogueDebugTrace __trace( "Type.find_global(String)", "Type.rogue", 175 );
  __trace.line = 176;
  if (RogueString_character_at(s_name_0,0) == (RogueCharacter)'@')
  {
    s_name_0 = ((RogueString*)((RogueString__rightmost__Int32( s_name_0, -1 ))));
  }
  __trace.line = 177;
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->global_lookup), s_name_0 ))));
}

RogueLogical RogueType__has_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  RogueDebugTrace __trace( "Type.has_method_named(String)", "Type.rogue", 179 );
  __trace.line = 180;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), m_name_0 )))));
  __trace.line = 181;
  if ((!!(list_1) && !!(list_1->count)))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 183;
  return (RogueLogical)(((RogueType__has_global_method_named__String( ROGUE_ARG(THIS), m_name_0 ))));
}

RogueLogical RogueType__has_global_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  RogueDebugTrace __trace( "Type.has_global_method_named(String)", "Type.rogue", 185 );
  __trace.line = 186;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), m_name_0 )))));
  __trace.line = 187;
  return (RogueLogical)((!!(list_1) && !!(list_1->count)));
}

RogueLogical RogueType__instance_of__Type( RogueClassType* THIS, RogueClassType* ancestor_type_0 )
{
  RogueDebugTrace __trace( "Type.instance_of(Type)", "Type.rogue", 189 );
  __trace.line = 190;
  if (((void*)THIS) == ((void*)ancestor_type_0))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 191;
  if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null) && ((RogueType__is_reference( ancestor_type_0 )))))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 192;
  if (((((RogueType__is_reference( ROGUE_ARG(THIS) ))) && ((void*)ancestor_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)) && !(((RogueType__is_foreign( ROGUE_ARG(THIS) ))))))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 194;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1025_1,(THIS->base_types));
    RogueInt32 _auto_1026_2 = (0);
    for (;_auto_1026_2 < _auto_1025_1->count;++_auto_1026_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1025_1->data->objects[_auto_1026_2]))));
      __trace.line = 195;
      if (((RogueType__instance_of__Type( base_type_3, ancestor_type_0 ))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  __trace.line = 198;
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_compatible_with__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  RogueDebugTrace __trace( "Type.is_compatible_with(Type)", "Type.rogue", 200 );
  __trace.line = 201;
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 202;
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    __trace.line = 203;
    if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) ^ ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical)))
    {
      return (RogueLogical)(false);
    }
    __trace.line = 204;
    return (RogueLogical)(true);
  }
  __trace.line = 206;
  if (other_0->is_optional)
  {
    __trace.line = 207;
    if (((void*)other_0->_element_type) == ((void*)THIS))
    {
      return (RogueLogical)(true);
    }
    __trace.line = 208;
    if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
    {
      return (RogueLogical)(true);
    }
  }
  __trace.line = 210;
  if ((((RogueType__is_aspect( ROGUE_ARG(THIS) ))) && ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 211;
  return (RogueLogical)(((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))));
}

RogueLogical RogueType__is_equivalent_or_more_specific_than__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  RogueDebugTrace __trace( "Type.is_equivalent_or_more_specific_than(Type)", "Type.rogue", 237 );
  __trace.line = 238;
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 239;
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    __trace.line = 240;
    return (RogueLogical)(((RogueType__primitive_rank( ROGUE_ARG(THIS) ))) >= ((RogueType__primitive_rank( other_0 ))));
  }
  __trace.line = 242;
  if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 243;
  if ((other_0->is_list && ((void*)other_0->_element_type) == ((void*)THIS)))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 244;
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_aspect( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_aspect()", "Type.rogue", 249 );
  __trace.line = 250;
  return (RogueLogical)((THIS->attributes->flags & 7) == 2);
}

RogueLogical RogueType__is_class( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_class()", "Type.rogue", 252 );
  __trace.line = 253;
  return (RogueLogical)((THIS->attributes->flags & 7) == 0);
}

RogueLogical RogueType__is_compound( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_compound()", "Type.rogue", 255 );
  __trace.line = 256;
  return (RogueLogical)((THIS->attributes->flags & 7) == 3);
}

RogueLogical RogueType__is_foreign( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_foreign()", "Type.rogue", 258 );
  __trace.line = 259;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16)) )));
}

RogueLogical RogueType__is_native( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_native()", "Type.rogue", 264 );
  __trace.line = 265;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueType__is_primitive( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_primitive()", "Type.rogue", 267 );
  __trace.line = 268;
  return (RogueLogical)((THIS->attributes->flags & 7) == 1);
}

RogueLogical RogueType__is_reference( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_reference()", "Type.rogue", 270 );
  __trace.line = 271;
  switch ((THIS->attributes->flags & 7))
  {
    case 0:
    case 2:
    {
      __trace.line = 273;
      return (RogueLogical)(true);
      break;
    }
    default:
    {
      __trace.line = 275;
      return (RogueLogical)(false);
    }
  }
}

RogueLogical RogueType__is_requisite( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_requisite()", "Type.rogue", 278 );
  __trace.line = 279;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32768)) )));
}

RogueLogical RogueType__is_routine( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_routine()", "Type.rogue", 281 );
  __trace.line = 282;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 1048576)) )));
}

RogueLogical RogueType__is_singleton( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_singleton()", "Type.rogue", 284 );
  __trace.line = 285;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 1024)) )));
}

RogueClassType* RogueType__make_requisite( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.make_requisite()", "Type.rogue", 290 );
  __trace.line = 291;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 32768 );
  __trace.line = 292;
  return (RogueClassType*)(THIS);
}

RogueClassType* RogueType__organize__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Type.organize(Scope)", "Type.rogue", 294 );
  __trace.line = 295;
  if (THIS->organized)
  {
    return (RogueClassType*)(THIS);
  }
  __trace.line = 296;
  THIS->organized = true;
  __trace.line = 297;
  THIS->organizing = true;
  __trace.line = 299;
  THIS->index = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list->count;
  __trace.line = 300;
  RogueType_List__add__Type( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list), ROGUE_ARG(THIS) );
  __trace.line = 302;
  if (!(THIS->defined))
  {
    __trace.line = 303;
    THIS->defined = true;
    __trace.line = 304;
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
    __trace.line = 305;
    if (!!(template_1))
    {
      __trace.line = 306;
      RogueTemplate__instantiate__Type_Scope( template_1, ROGUE_ARG(THIS), scope_0 );
    }
    else
    {
      __trace.line = 308;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[379] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[45] )))) )))) ))));
    }
  }
  __trace.line = 312;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1029_18,(THIS->base_types));
    RogueInt32 _auto_1030_19 = (0);
    for (;_auto_1030_19 < _auto_1029_18->count;++_auto_1030_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_20,(((RogueClassType*)(_auto_1029_18->data->objects[_auto_1030_19]))));
      __trace.line = 313;
      RogueType__organize__Scope( base_type_20, scope_0 );
      __trace.line = 315;
      if (!(((RogueType__is_aspect( base_type_20 )))))
      {
        __trace.line = 316;
        if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
        {
          __trace.line = 317;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[380] ))));
        }
        else if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
        {
          __trace.line = 319;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[381] ))));
        }
      }
      __trace.line = 323;
      if (((RogueType__instance_of__Type( base_type_20, ROGUE_ARG(THIS) ))))
      {
        __trace.line = 324;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[382] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[383] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_20))) )))) )))), Rogue_literal_strings[384] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_20))) )))) )))), Rogue_literal_strings[385] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
      }
    }
  }
  __trace.line = 329;
  if (((RogueType__is_class( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 330;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1031_21,(THIS->base_types));
      RogueInt32 _auto_1032_22 = (0);
      for (;_auto_1032_22 < _auto_1031_21->count;++_auto_1032_22)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_23,(((RogueClassType*)(_auto_1031_21->data->objects[_auto_1032_22]))));
        __trace.line = 331;
        if (((RogueType__is_class( base_type_23 ))))
        {
          __trace.line = 332;
          if ((!!(THIS->base_class) && ((void*)THIS->base_class) != ((void*)base_type_23)))
          {
            __trace.line = 333;
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[386] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[387] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->base_class))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_23))) )))) )))), Rogue_literal_strings[389] )))) )))) ))));
          }
          else
          {
            __trace.line = 335;
            THIS->base_class = base_type_23;
          }
        }
      }
    }
    __trace.line = 340;
    if (((!(!!(THIS->base_class)) && !(((RogueType__is_foreign( ROGUE_ARG(THIS) ))))) && ((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
    {
      __trace.line = 341;
      RogueType__organize__Scope( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      __trace.line = 342;
      THIS->base_class = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object;
      __trace.line = 343;
      RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class), 0 );
    }
  }
  __trace.line = 347;
  if (!!(THIS->base_class))
  {
    RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(((RogueType_List__remove__Type( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class) )))), 0 );
  }
  __trace.line = 350;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1033_24,(THIS->base_types));
    RogueInt32 _auto_1034_25 = (0);
    for (;_auto_1034_25 < _auto_1033_24->count;++_auto_1034_25)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_26,(((RogueClassType*)(_auto_1033_24->data->objects[_auto_1034_25]))));
      __trace.line = 351;
      RogueType__mark_extended_types( base_type_26 );
    }
  }
  __trace.line = 355;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1035_27,(THIS->base_types));
    RogueInt32 _auto_1036_28 = (0);
    for (;_auto_1036_28 < _auto_1035_27->count;++_auto_1036_28)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_29,(((RogueClassType*)(_auto_1035_27->data->objects[_auto_1036_28]))));
      __trace.line = 356;
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_29 );
    }
  }
  __trace.line = 360;
  ROGUE_DEF_LOCAL_REF(RogueProperty_List*,full_property_list_2,(((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )))));
  __trace.line = 361;
  RogueTable_String_Property___clear( ROGUE_ARG(THIS->property_lookup) );
  __trace.line = 362;
  RogueType__inherit_properties__Property_List_Table_String_Property_( ROGUE_ARG(THIS), full_property_list_2, ROGUE_ARG(THIS->property_lookup) );
  __trace.line = 363;
  THIS->property_list = full_property_list_2;
  __trace.line = 366;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_type_name_3,(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[397] )))));
  __trace.line = 367;
  m_type_name_3->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
  __trace.line = 368;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_type_name_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) )))))) );
  __trace.line = 370;
  RogueType__inherit_methods__Scope( ROGUE_ARG(THIS), scope_0 );
  __trace.line = 373;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_class_4,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[405] )))));
  __trace.line = 374;
  if (!!(m_init_class_4))
  {
    __trace.line = 375;
    if (((void*)m_init_class_4->type_context) == ((void*)THIS))
    {
      __trace.line = 376;
      RogueMethod__make_requisite( m_init_class_4 );
    }
  }
  else
  {
    __trace.line = 379;
    m_init_class_4 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[405] ))));
    __trace.line = 380;
    if (!!(m_init_class_4))
    {
      __trace.line = 381;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_init_class_4->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[406] )))) )))) ))));
    }
  }
  __trace.line = 385;
  if (!!(THIS->global_list->count))
  {
    __trace.line = 387;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[405] )))));
    __trace.line = 388;
    if ((!(!!(m_5)) || ((void*)m_5->type_context) != ((void*)THIS)))
    {
      m_5 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[407] )))), scope_0, true ))));
    }
    __trace.line = 389;
    RogueMethod__make_requisite( m_5 );
    __trace.line = 392;
    RogueInt32 i_6 = ((THIS->global_list->count - 1));
    __trace.line = 393;
    while (i_6 >= 0)
    {
      __trace.line = 394;
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_7,(((RogueClassProperty*)(THIS->global_list->data->objects[i_6]))));
      __trace.line = 395;
      if (!!(s_7->initial_value))
      {
        __trace.line = 396;
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_5->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(s_7->t), s_7, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(s_7->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      __trace.line = 398;
      --i_6;
    }
  }
  __trace.line = 403;
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    __trace.line = 404;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[408] )))));
    __trace.line = 405;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,prior_m_9,(m_8));
    __trace.line = 406;
    if ((!!(m_8) && ((void*)m_8->type_context) == ((void*)THIS)))
    {
      __trace.line = 407;
      RogueMethod__make_requisite( m_8 );
    }
    else
    {
      __trace.line = 409;
      m_8 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[409] )))), scope_0, true ))));
      __trace.line = 410;
      RogueMethod__make_requisite( m_8 );
      __trace.line = 411;
      if (!!(prior_m_9))
      {
        __trace.line = 412;
        RogueAttributes__add__Int32( ROGUE_ARG(prior_m_9->attributes), 2048 );
        __trace.line = 413;
        RogueAttributes__add__Int32( ROGUE_ARG(prior_m_9->attributes), 4096 );
        __trace.line = 414;
        RogueAttributes__add__Int32( ROGUE_ARG(m_8->attributes), 2048 );
        __trace.line = 415;
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_8 );
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->method_list->data->objects[((RogueMethod_List__locate__Method( ROGUE_ARG(THIS->method_list), prior_m_9 ))).value] = m_8;
      }
    }
    __trace.filename = "Type.rogue";
    __trace.line = 419;
    m_8->_return_type = THIS;
    __trace.line = 420;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_8->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))))) )))))) );
    __trace.line = 423;
    RogueInt32 i_10 = ((THIS->property_list->count - 1));
    __trace.line = 424;
    while (i_10 >= 0)
    {
      __trace.line = 425;
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_11,(((RogueClassProperty*)(THIS->property_list->data->objects[i_10]))));
      __trace.line = 426;
      if (!!(p_11->initial_value))
      {
        __trace.line = 427;
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_8->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(p_11->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_11->t), ROGUE_ARG(p_11->type_context) )))))))), p_11, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(p_11->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      __trace.line = 429;
      --i_10;
    }
  }
  __trace.line = 434;
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    __trace.line = 435;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_12,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[410] )))));
    __trace.line = 436;
    if ((!!(m_12) && ((void*)m_12->type_context) == ((void*)THIS)))
    {
      __trace.line = 437;
      if (!!(m_12->_return_type))
      {
        __trace.line = 438;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_12->t), Rogue_literal_strings[411] ))));
      }
      __trace.line = 440;
      RogueMethod__make_requisite( m_12 );
    }
  }
  __trace.line = 445;
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    __trace.line = 446;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_13,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[412] )))));
    __trace.line = 447;
    if (!!(m_13))
    {
      RogueMethod__make_requisite( m_13 );
    }
  }
  __trace.line = 451;
  if (((((RogueType__is_compound( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))) || ((RogueType__is_foreign( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 452;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[412] )))));
    __trace.line = 453;
    if (!(!!(m_14)))
    {
      __trace.line = 454;
      m_14 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[413] ))));
      __trace.line = 455;
      m_14->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
      __trace.line = 456;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_14->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[34] )))) )))), 0 )))))) )))))) );
      __trace.line = 457;
      RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
    }
  }
  __trace.line = 464;
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 465;
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1037_30,(THIS->property_list));
      RogueInt32 _auto_1038_31 = (0);
      for (;_auto_1038_31 < _auto_1037_30->count;++_auto_1038_31)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_32,(((RogueClassProperty*)(_auto_1037_30->data->objects[_auto_1038_31]))));
        __trace.line = 466;
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(p_32->name), Rogue_literal_strings[414] )))) )))));
        __trace.line = 467;
        if (!(!!(m_15)))
        {
          __trace.line = 468;
          m_15 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_32->t), ROGUE_ARG(p_32->name) ))));
          __trace.line = 469;
          RogueAttributes__add__Int32( ROGUE_ARG(m_15->attributes), 2097152 );
          __trace.line = 470;
          m_15->_return_type = p_32->_type;
          __trace.line = 471;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_15->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_32->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(p_32->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[210], ROGUE_ARG(p_32->name) )))) )))))) )))))) );
          __trace.line = 472;
          RogueMethod__organize__Scope_Logical( m_15, scope_0, true );
        }
        __trace.line = 475;
        m_15 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[415] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_32->name) )))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_32->_type))) )))) )))), Rogue_literal_strings[34] )))) )))) ))));
        __trace.line = 476;
        if (!(!!(m_15)))
        {
          __trace.line = 477;
          m_15 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_32->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[415], ROGUE_ARG(p_32->name) )))) ))));
          __trace.line = 478;
          RogueMethod__add_parameter__Token_String_Type( m_15, ROGUE_ARG(p_32->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[210], ROGUE_ARG(p_32->name) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
          __trace.line = 479;
          RogueAttributes__add__Int32( ROGUE_ARG(m_15->attributes), 2097152 );
          __trace.line = 480;
          m_15->_return_type = THIS;
          __trace.line = 481;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_15->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_32->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_32->t), ROGUE_ARG(THIS) )))))))) )))))) );
          __trace.line = 482;
          RogueMethod__organize__Scope_Logical( m_15, scope_0, true );
        }
      }
    }
  }
  __trace.line = 487;
  if (((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray))
  {
    __trace.line = 488;
    THIS->is_array = ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray) )));
    __trace.line = 489;
    if (THIS->is_array)
    {
      __trace.line = 490;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,cur_type_16,(THIS));
      __trace.line = 491;
      while (!(((RogueString__begins_with__String( ROGUE_ARG(cur_type_16->name), Rogue_literal_strings[417] )))))
      {
        __trace.line = 492;
        cur_type_16 = ((RogueClassType*)cur_type_16->base_class);
        __trace.line = 493;
        if (((void*)cur_type_16) == ((void*)NULL))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[416] ))));
        }
      }
      __trace.line = 496;
      ROGUE_DEF_LOCAL_REF(RogueString*,element_type_name_17,(((RogueString__before_last__String( ROGUE_ARG(((RogueString__after_first__String( ROGUE_ARG(cur_type_16->name), Rogue_literal_strings[236] )))), Rogue_literal_strings[145] )))));
      __trace.line = 497;
      THIS->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), element_type_name_17 )))), scope_0 )));
    }
  }
  __trace.line = 501;
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_method_list) );
  __trace.line = 502;
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->method_list) );
  __trace.line = 504;
  THIS->organizing = false;
  __trace.line = 506;
  return (RogueClassType*)(THIS);
}

RogueInt32 RogueType__primitive_rank( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.primitive_rank()", "Type.rogue", 508 );
  __trace.line = 509;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueInt32)(7);
  }
  __trace.line = 510;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))
  {
    return (RogueInt32)(6);
  }
  __trace.line = 511;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    return (RogueInt32)(5);
  }
  __trace.line = 512;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    return (RogueInt32)(4);
  }
  __trace.line = 513;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueInt32)(3);
  }
  __trace.line = 514;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueInt32)(2);
  }
  __trace.line = 515;
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueInt32)(1);
  }
  __trace.line = 516;
  return (RogueInt32)(0);
}

void RogueType__mark_extended_types( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.mark_extended_types()", "Type.rogue", 518 );
  __trace.line = 519;
  THIS->has_extended_class = true;
  __trace.line = 520;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1039_0,(THIS->base_types));
    RogueInt32 _auto_1040_1 = (0);
    for (;_auto_1040_1 < _auto_1039_0->count;++_auto_1040_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_2,(((RogueClassType*)(_auto_1039_0->data->objects[_auto_1040_1]))));
      __trace.line = 521;
      RogueType__mark_extended_types( base_type_2 );
    }
  }
}

void RogueType__collect_base_types__Type_List( RogueClassType* THIS, RogueType_List* list_0 )
{
  RogueDebugTrace __trace( "Type.collect_base_types(Type[])", "Type.rogue", 524 );
  __trace.line = 525;
  THIS->has_extended_class = true;
  __trace.line = 526;
  if (((RogueType_List__locate__Type( list_0, ROGUE_ARG(THIS) ))).exists)
  {
    return;
  }
  __trace.line = 527;
  RogueType_List__add__Type( list_0, ROGUE_ARG(THIS) );
  __trace.line = 528;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1041_1,(THIS->base_types));
    RogueInt32 _auto_1042_2 = (0);
    for (;_auto_1042_2 < _auto_1041_1->count;++_auto_1042_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1041_1->data->objects[_auto_1042_2]))));
      __trace.line = 529;
      RogueType__collect_base_types__Type_List( base_type_3, list_0 );
    }
  }
}

void RogueType__cull_unused_methods( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.cull_unused_methods()", "Type.rogue", 532 );
  __trace.line = 533;
  if (THIS->culled)
  {
    return;
  }
  __trace.line = 534;
  THIS->culled = true;
  __trace.line = 536;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1043_3,(THIS->base_types));
    RogueInt32 _auto_1044_4 = (0);
    for (;_auto_1044_4 < _auto_1043_3->count;++_auto_1044_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_5,(((RogueClassType*)(_auto_1043_3->data->objects[_auto_1044_4]))));
      RogueType__cull_unused_methods( base_type_5 );
    }
  }
  __trace.line = 539;
  RogueInt32 i_0 = ((THIS->method_list->count - 1));
  __trace.line = 540;
  while (i_0 >= 0)
  {
    __trace.line = 541;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueClassMethod*)(THIS->method_list->data->objects[i_0]))));
    __trace.line = 542;
    if (((RogueMethod__is_macro( m_1 ))))
    {
      RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_1 );
    }
    __trace.line = 543;
    --i_0;
  }
  __trace.line = 546;
  if (!(THIS->has_extended_class))
  {
    __trace.line = 551;
    i_0 = ((RogueInt32)(THIS->method_list->count - 1));
    __trace.line = 552;
    while (i_0 >= 0)
    {
      __trace.line = 553;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(THIS->method_list->data->objects[i_0]))));
      __trace.line = 554;
      if (!(m_2->is_used))
      {
        __trace.line = 555;
        if ((!(!!(THIS->base_class)) || THIS->base_class->method_list->count <= i_0))
        {
          __trace.line = 556;
          RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_2 );
        }
      }
      __trace.line = 559;
      --i_0;
    }
  }
  __trace.line = 563;
  i_0 = ((RogueInt32)0);
  __trace.line = 564;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1045_6,(THIS->method_list));
    RogueInt32 _auto_1046_7 = (0);
    for (;_auto_1046_7 < _auto_1045_6->count;++_auto_1046_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1045_6->data->objects[_auto_1046_7]))));
      __trace.line = 565;
      m_8->index = i_0;
      __trace.line = 566;
      ++i_0;
    }
  }
}

RogueLogical RogueType__has_global_references( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.has_global_references()", "Type.rogue", 569 );
  __trace.line = 570;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1047_0,(THIS->global_list));
    RogueInt32 _auto_1048_1 = (0);
    for (;_auto_1048_1 < _auto_1047_0->count;++_auto_1048_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_2,(((RogueClassProperty*)(_auto_1047_0->data->objects[_auto_1048_1]))));
      __trace.line = 571;
      if (((RogueType__is_reference( ROGUE_ARG(g_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      __trace.line = 572;
      if ((((RogueType__is_compound( ROGUE_ARG(g_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  __trace.line = 575;
  return (RogueLogical)(false);
}

RogueLogical RogueType__has_object_references( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.has_object_references()", "Type.rogue", 577 );
  __trace.line = 583;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1049_0,(THIS->property_list));
    RogueInt32 _auto_1050_1 = (0);
    for (;_auto_1050_1 < _auto_1049_0->count;++_auto_1050_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_2,(((RogueClassProperty*)(_auto_1049_0->data->objects[_auto_1050_1]))));
      __trace.line = 584;
      if (((RogueType__is_reference( ROGUE_ARG(p_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      __trace.line = 585;
      if ((((RogueType__is_compound( ROGUE_ARG(p_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  __trace.line = 588;
  return (RogueLogical)((THIS->is_array && ((RogueType__has_object_references( ROGUE_ARG(THIS->_element_type) )))));
}

RogueLogical RogueType__is_reference_array( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.is_reference_array()", "Type.rogue", 590 );
  __trace.line = 591;
  return (RogueLogical)((THIS->is_array && ((RogueType__is_reference( ROGUE_ARG(THIS->_element_type) )))));
}

void RogueType__inherit_definitions__Type( RogueClassType* THIS, RogueClassType* from_type_0 )
{
  RogueDebugTrace __trace( "Type.inherit_definitions(Type)", "Type.rogue", 593 );
  __trace.line = 594;
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_1051_1,(from_type_0->definition_list));
    RogueInt32 _auto_1052_2 = (0);
    for (;_auto_1052_2 < _auto_1051_1->count;++_auto_1052_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_3,(((RogueClassDefinition*)(_auto_1051_1->data->objects[_auto_1052_2]))));
      __trace.line = 595;
      if (!(((RogueTable_String_Definition___contains__String( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name) )))))
      {
        __trace.line = 596;
        RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->definition_list), def_3 );
        __trace.line = 597;
        RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name), ROGUE_ARG(((RogueTable_String_Definition___get__String( ROGUE_ARG(from_type_0->definition_lookup), ROGUE_ARG(def_3->name) )))) );
      }
    }
  }
  __trace.line = 601;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1053_4,(from_type_0->base_types));
    RogueInt32 _auto_1054_5 = (0);
    for (;_auto_1054_5 < _auto_1053_4->count;++_auto_1054_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_6,(((RogueClassType*)(_auto_1053_4->data->objects[_auto_1054_5]))));
      __trace.line = 602;
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_6 );
    }
  }
}

void RogueType__inherit_properties__Property_List_Table_String_Property_( RogueClassType* THIS, RogueProperty_List* list_0, RogueClassTable_String_Property_* lookup_1 )
{
  RogueDebugTrace __trace( "Type.inherit_properties(Property[],Table<<String,Property>>)", "Type.rogue", 605 );
  __trace.line = 606;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1055_2,(THIS->base_types));
    RogueInt32 _auto_1056_3 = (0);
    for (;_auto_1056_3 < _auto_1055_2->count;++_auto_1056_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1055_2->data->objects[_auto_1056_3]))));
      __trace.line = 607;
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1057_5,(base_type_4->property_list));
        RogueInt32 _auto_1058_6 = (0);
        for (;_auto_1058_6 < _auto_1057_5->count;++_auto_1058_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,base_p_7,(((RogueClassProperty*)(_auto_1057_5->data->objects[_auto_1058_6]))));
          __trace.line = 608;
          RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), base_p_7, list_0, lookup_1 );
        }
      }
    }
  }
  __trace.line = 612;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1059_8,(THIS->property_list));
    RogueInt32 _auto_1060_9 = (0);
    for (;_auto_1060_9 < _auto_1059_8->count;++_auto_1060_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1059_8->data->objects[_auto_1060_9]))));
      __trace.line = 613;
      RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), p_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_property__Property_Property_List_Table_String_Property_( RogueClassType* THIS, RogueClassProperty* p_0, RogueProperty_List* list_1, RogueClassTable_String_Property_* lookup_2 )
{
  RogueDebugTrace __trace( "Type.inherit_property(Property,Property[],Table<<String,Property>>)", "Type.rogue", 616 );
  __trace.line = 617;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,existing_p_3,(((RogueTable_String_Property___get__String( lookup_2, ROGUE_ARG(p_0->name) )))));
  __trace.line = 618;
  if (!!(existing_p_3))
  {
    __trace.line = 619;
    RogueInt32 i_4 = (((RogueProperty_List__locate__Property( list_1, existing_p_3 ))).value);
    __trace.line = 621;
    if (((((void*)p_0->type_context) == ((void*)existing_p_3->type_context) && !(((RogueProperty__is_incorporated( p_0 ))))) && !(((RogueProperty__is_incorporated( existing_p_3 ))))))
    {
      __trace.line = 622;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[390] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[391] )))) )))) ))));
    }
    else if (((void*)p_0->_type) == ((void*)existing_p_3->_type))
    {
      __trace.line = 625;
      if (!!(p_0->initial_value))
      {
        __trace.line = 626;
        if (!!(existing_p_3->initial_value))
        {
          __trace.line = 627;
          if (((RogueType__instance_of__Type( ROGUE_ARG(p_0->_type), ROGUE_ARG(existing_p_3->_type) ))))
          {
            __trace.line = 629;
            if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
            {
              __trace.line = 630;
              p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
              __trace.line = 631;
              RogueProperty__mark_incorporated( p_0 );
            }
            __trace.filename = "List.rogue";
            __trace.line = 308;
            list_1->data->objects[i_4] = p_0;
            __trace.filename = "Type.rogue";
            __trace.line = 634;
            RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
          }
          else
          {
            __trace.line = 636;
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[392] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[393] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
          }
        }
        else
        {
          __trace.line = 641;
          if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
          {
            __trace.line = 642;
            p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
            __trace.line = 643;
            RogueProperty__mark_incorporated( p_0 );
          }
          __trace.filename = "List.rogue";
          __trace.line = 308;
          list_1->data->objects[i_4] = p_0;
          __trace.filename = "Type.rogue";
          __trace.line = 646;
          RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
        }
      }
    }
    else
    {
      __trace.line = 654;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[394] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[395] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->_type))) )))) )))), Rogue_literal_strings[396] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->_type))) )))) )))), Rogue_literal_strings[396] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
    }
  }
  else
  {
    __trace.line = 660;
    if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
    {
      __trace.line = 661;
      p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__clone( p_0 )))), ROGUE_ARG(THIS) ))));
      __trace.line = 662;
      RogueProperty__mark_incorporated( p_0 );
    }
    __trace.line = 664;
    RogueProperty_List__add__Property( list_1, p_0 );
    __trace.line = 665;
    RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
  }
}

void RogueType__inherit_methods__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Type.inherit_methods(Scope)", "Type.rogue", 668 );
  __trace.line = 670;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1061_6,(THIS->base_types));
    RogueInt32 _auto_1062_7 = (0);
    for (;_auto_1062_7 < _auto_1061_6->count;++_auto_1062_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_8,(((RogueClassType*)(_auto_1061_6->data->objects[_auto_1062_7]))));
      __trace.line = 671;
      if (!!(base_type_8->method_templates))
      {
        __trace.line = 672;
        if (!(!!(THIS->method_templates)))
        {
          THIS->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS) )));
        }
        __trace.line = 673;
        RogueMethodTemplates__inherit__MethodTemplates( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(base_type_8->method_templates) );
      }
    }
  }
  __trace.line = 678;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1063_9,(THIS->global_method_list));
    RogueInt32 _auto_1064_10 = (0);
    for (;_auto_1064_10 < _auto_1063_9->count;++_auto_1064_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_1063_9->data->objects[_auto_1064_10]))));
      __trace.line = 679;
      RogueMethod__organize__Scope_Logical( m_11, scope_0, true );
    }
  }
  __trace.line = 682;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1065_12,(THIS->method_list));
    RogueInt32 _auto_1066_13 = (0);
    for (;_auto_1066_13 < _auto_1065_12->count;++_auto_1066_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_1065_12->data->objects[_auto_1066_13]))));
      __trace.line = 683;
      RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
    }
  }
  __trace.line = 686;
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  __trace.line = 687;
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->global_method_lookup_by_name) );
  __trace.line = 688;
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->method_lookup_by_signature) );
  __trace.line = 689;
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->method_lookup_by_name) );
  __trace.line = 692;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_routine_list_1,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  __trace.line = 693;
  RogueType__inherit_global_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_routine_list_1, ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  __trace.line = 694;
  THIS->global_method_list = full_routine_list_1;
  __trace.line = 695;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1067_15,(THIS->global_method_list));
    RogueInt32 _auto_1068_16 = (0);
    for (;_auto_1068_16 < _auto_1067_15->count;++_auto_1068_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_17,(((RogueClassMethod*)(_auto_1067_15->data->objects[_auto_1068_16]))));
      __trace.line = 696;
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_2,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name) )))));
      __trace.line = 697;
      if (!(!!(list_2)))
      {
        __trace.line = 698;
        list_2 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        __trace.line = 699;
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name), list_2 );
      }
      __trace.line = 701;
      RogueMethod_List__add__Method( list_2, r_17 );
    }
  }
  __trace.line = 704;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_method_list_3,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  __trace.line = 705;
  RogueType__inherit_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_method_list_3, ROGUE_ARG(THIS->method_lookup_by_signature) );
  __trace.line = 706;
  THIS->method_list = full_method_list_3;
  __trace.line = 707;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1069_18,(THIS->method_list));
    RogueInt32 _auto_1070_19 = (0);
    for (;_auto_1070_19 < _auto_1069_18->count;++_auto_1070_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_20,(((RogueClassMethod*)(_auto_1069_18->data->objects[_auto_1070_19]))));
      __trace.line = 708;
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name) )))));
      __trace.line = 709;
      if (!(!!(list_4)))
      {
        __trace.line = 710;
        list_4 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        __trace.line = 711;
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name), list_4 );
      }
      __trace.line = 713;
      RogueMethod_List__add__Method( list_4, m_20 );
    }
  }
  __trace.line = 717;
  if (!!(THIS->method_templates))
  {
    __trace.line = 718;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1071_21,(THIS->method_list));
      RogueInt32 _auto_1072_22 = (0);
      for (;_auto_1072_22 < _auto_1071_21->count;++_auto_1072_22)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_23,(((RogueClassMethod*)(_auto_1071_21->data->objects[_auto_1072_22]))));
        __trace.line = 719;
        if (((void*)m_23->type_context) != ((void*)THIS))
        {
          __trace.line = 720;
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,st_5,(m_23->source_template));
          __trace.line = 721;
          if (!!(st_5))
          {
            __trace.line = 722;
            RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(st_5->name), ROGUE_ARG(st_5->type_parameters->count), ROGUE_ARG(st_5->t), ROGUE_ARG(m_23->name) );
          }
        }
      }
    }
  }
}

void RogueType__inherit_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  RogueDebugTrace __trace( "Type.inherit_methods(Method[],Table<<String,Method>>)", "Type.rogue", 728 );
  __trace.line = 729;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1073_2,(THIS->base_types));
    RogueInt32 _auto_1074_3 = (0);
    for (;_auto_1074_3 < _auto_1073_2->count;++_auto_1074_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1073_2->data->objects[_auto_1074_3]))));
      __trace.line = 730;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1075_5,(base_type_4->method_list));
        RogueInt32 _auto_1076_6 = (0);
        for (;_auto_1076_6 < _auto_1075_5->count;++_auto_1076_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1075_5->data->objects[_auto_1076_6]))));
          __trace.line = 731;
          RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  __trace.line = 735;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1077_8,(THIS->method_list));
    RogueInt32 _auto_1078_9 = (0);
    for (;_auto_1078_9 < _auto_1077_8->count;++_auto_1078_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1077_8->data->objects[_auto_1078_9]))));
      __trace.line = 736;
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  RogueDebugTrace __trace( "Type.inherit_method(Method,Method[],Table<<String,Method>>)", "Type.rogue", 739 );
  __trace.line = 740;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  __trace.line = 742;
  if (!!(existing_m_3))
  {
    __trace.line = 743;
    if (((void*)m_0->_return_type) != ((void*)existing_m_3->_return_type))
    {
      __trace.line = 744;
      if (((((void*)m_0->_return_type) == ((void*)NULL) || ((void*)existing_m_3->_return_type) == ((void*)NULL)) || !(((RogueType__instance_of__Type( ROGUE_ARG(m_0->_return_type), ROGUE_ARG(existing_m_3->_return_type) ))))))
      {
        __trace.line = 745;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[398] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->type_context->name) )))) )))), Rogue_literal_strings[96] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[399] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->_return_type))) )))) )))), Rogue_literal_strings[400] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_m_3->_return_type))) )))) )))), Rogue_literal_strings[401] )))) )))) ))));
      }
    }
    __trace.line = 749;
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    __trace.line = 751;
    if (!(((RogueMethod__is_incorporated( existing_m_3 )))))
    {
      __trace.line = 752;
      if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
      {
        __trace.line = 753;
        if (((RogueMethod__is_augment( m_0 ))))
        {
          __trace.line = 754;
          RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
          __trace.line = 755;
          return;
        }
        else
        {
          __trace.line = 757;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[305] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[402] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
        }
      }
    }
    __trace.line = 762;
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      __trace.line = 763;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_3 );
      __trace.line = 764;
      if (((RogueMethod__is_abstract( m_0 ))))
      {
        return;
      }
      __trace.line = 766;
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      __trace.line = 769;
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    __trace.line = 773;
    if (!(((RogueType__is_aspect( ROGUE_ARG(existing_m_3->type_context) )))))
    {
      __trace.line = 774;
      RogueAttributes__add__Int32( ROGUE_ARG(existing_m_3->attributes), 2048 );
      __trace.line = 775;
      RogueAttributes__add__Int32( ROGUE_ARG(existing_m_3->attributes), 4096 );
      __trace.line = 776;
      RogueAttributes__add__Int32( ROGUE_ARG(m_0->attributes), 2048 );
    }
    __trace.line = 779;
    m_0->overridden_method = existing_m_3;
    __trace.line = 780;
    while ((!!(m_0->overridden_method) && ((void*)m_0->type_context) == ((void*)m_0->overridden_method->type_context)))
    {
      __trace.line = 784;
      if (!!(m_0->overridden_method->overridden_method))
      {
        __trace.line = 787;
        RogueMethod_List__remove__Method( ROGUE_ARG(m_0->overridden_method->overridden_method->overriding_methods), ROGUE_ARG(m_0->overridden_method) );
      }
      __trace.line = 789;
      m_0->overridden_method = m_0->overridden_method->overridden_method;
    }
    __trace.line = 791;
    if (!!(m_0->overridden_method))
    {
      __trace.line = 792;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overridden_method->overriding_methods), m_0 );
    }
    __trace.filename = "List.rogue";
    __trace.line = 308;
    list_1->data->objects[i_4] = m_0;
    __trace.filename = "Type.rogue";
    __trace.line = 795;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    __trace.line = 796;
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
  else
  {
    __trace.line = 800;
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      __trace.line = 801;
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
      __trace.line = 802;
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      __trace.line = 804;
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    __trace.line = 807;
    RogueMethod_List__add__Method( list_1, m_0 );
    __trace.line = 808;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    __trace.line = 809;
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  RogueDebugTrace __trace( "Type.override_inherited_propagated_method(Method,Method[],Table<<String,Method>>)", "Type.rogue", 813 );
  __trace.line = 814;
  if ((((RogueMethod__is_propagated( m_0 ))) && ((void*)m_0->type_context) != ((void*)THIS)))
  {
    __trace.line = 816;
    m_0 = ((RogueClassMethod*)((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__clone( m_0 )))), ROGUE_ARG(THIS) ))));
    __trace.line = 817;
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    __trace.line = 818;
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__inherit_global_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  RogueDebugTrace __trace( "Type.inherit_global_methods(Method[],Table<<String,Method>>)", "Type.rogue", 821 );
  __trace.line = 822;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1081_2,(THIS->base_types));
    RogueInt32 _auto_1082_3 = (0);
    for (;_auto_1082_3 < _auto_1081_2->count;++_auto_1082_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1081_2->data->objects[_auto_1082_3]))));
      __trace.line = 823;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1083_5,(base_type_4->global_method_list));
        RogueInt32 _auto_1084_6 = (0);
        for (;_auto_1084_6 < _auto_1083_5->count;++_auto_1084_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1083_5->data->objects[_auto_1084_6]))));
          __trace.line = 824;
          RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  __trace.line = 828;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1085_8,(THIS->global_method_list));
    RogueInt32 _auto_1086_9 = (0);
    for (;_auto_1086_9 < _auto_1085_8->count;++_auto_1086_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1085_8->data->objects[_auto_1086_9]))));
      __trace.line = 829;
      RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  RogueDebugTrace __trace( "Type.inherit_global_method(Method,Method[],Table<<String,Method>>)", "Type.rogue", 832 );
  __trace.line = 833;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  __trace.line = 835;
  if (!!(existing_m_3))
  {
    __trace.line = 836;
    if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
    {
      __trace.line = 837;
      if (((RogueMethod__is_augment( m_0 ))))
      {
        __trace.line = 838;
        RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
        __trace.line = 839;
        return;
      }
      else
      {
        __trace.line = 841;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[305] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[306] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
      }
    }
    __trace.line = 845;
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    __trace.line = 848;
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      return;
    }
    __trace.line = 850;
    if (((RogueMethod__is_augment( m_0 ))))
    {
      __trace.line = 851;
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    __trace.filename = "List.rogue";
    __trace.line = 308;
    list_1->data->objects[i_4] = m_0;
    __trace.filename = "Type.rogue";
    __trace.line = 856;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
  else
  {
    __trace.line = 860;
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      return;
    }
    __trace.line = 862;
    if (((RogueMethod__is_augment( m_0 ))))
    {
      __trace.line = 863;
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    __trace.line = 866;
    RogueMethod_List__add__Method( list_1, m_0 );
    __trace.line = 867;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
}

void RogueType__inject_global_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  RogueDebugTrace __trace( "Type.inject_global_method(Method,Int32?)", "Type.rogue", 870 );
  __trace.line = 871;
  RogueMethod__assign_signature( m_0 );
  __trace.line = 873;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  __trace.line = 874;
  if (!!(existing_m_2))
  {
    __trace.line = 875;
    RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    __trace.line = 876;
    RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
  }
  else if (at_index_1.exists)
  {
    __trace.line = 879;
    RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    __trace.line = 880;
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->method_list) )))), ROGUE_ARG(at_index_1.value) );
  }
  else
  {
    __trace.line = 883;
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    __trace.line = 884;
    RogueInt32 index_3 = (THIS->method_list->count);
    __trace.line = 885;
    RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    __trace.line = 886;
    if (THIS->has_extended_class)
    {
      __trace.line = 887;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1087_4,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list));
        RogueInt32 _auto_1088_5 = (0);
        for (;_auto_1088_5 < _auto_1087_4->count;++_auto_1088_5)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,type_6,(((RogueClassType*)(_auto_1087_4->data->objects[_auto_1088_5]))));
          __trace.line = 888;
          if (((type_6->organized && ((void*)type_6) != ((void*)THIS)) && ((RogueType__instance_of__Type( type_6, ROGUE_ARG(THIS) )))))
          {
            __trace.line = 889;
            RogueType__inject_method__Method_OptionalInt32( type_6, m_0, ROGUE_ARG(RogueOptionalInt32( index_3, true )) );
          }
        }
      }
    }
  }
  __trace.line = 895;
  RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
}

void RogueType__inject_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  RogueDebugTrace __trace( "Type.inject_method(Method,Int32?)", "Type.rogue", 897 );
  __trace.line = 898;
  if (((RogueMethod__is_global( m_0 ))))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, at_index_1 );
    return;
  }
  __trace.line = 900;
  RogueMethod__assign_signature( m_0 );
  __trace.line = 902;
  if (!(!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) ))))))
  {
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), ROGUE_ARG(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))) );
  }
  __trace.line = 904;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  __trace.line = 905;
  if (!!(existing_m_2))
  {
    __trace.line = 906;
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    __trace.line = 907;
    RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
  }
  else if (at_index_1.exists)
  {
    __trace.line = 910;
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    __trace.line = 911;
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->method_list) )))), ROGUE_ARG(at_index_1.value) );
  }
  else
  {
    __trace.line = 914;
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    __trace.line = 915;
    RogueInt32 index_3 = (THIS->method_list->count);
    __trace.line = 916;
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    __trace.line = 917;
    if (THIS->has_extended_class)
    {
      __trace.line = 918;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1089_4,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list));
        RogueInt32 _auto_1090_5 = (0);
        for (;_auto_1090_5 < _auto_1089_4->count;++_auto_1090_5)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,type_6,(((RogueClassType*)(_auto_1089_4->data->objects[_auto_1090_5]))));
          __trace.line = 919;
          if (((type_6->organized && ((void*)type_6) != ((void*)THIS)) && ((RogueType__instance_of__Type( type_6, ROGUE_ARG(THIS) )))))
          {
            __trace.line = 920;
            RogueType__inject_method__Method_OptionalInt32( type_6, m_0, ROGUE_ARG(RogueOptionalInt32( index_3, true )) );
          }
        }
      }
    }
  }
  __trace.line = 926;
  RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
}

void RogueType__apply_augment_labels__Method_Method( RogueClassType* THIS, RogueClassMethod* aug_m_0, RogueClassMethod* existing_m_1 )
{
  RogueDebugTrace __trace( "Type.apply_augment_labels(Method,Method)", "Type.rogue", 928 );
  __trace.line = 930;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1091_3,(existing_m_1->label_list));
    RogueInt32 _auto_1092_4 = (0);
    for (;_auto_1092_4 < _auto_1091_3->count;++_auto_1092_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,method_label_5,(((RogueClassCmdLabel*)(_auto_1091_3->data->objects[_auto_1092_4]))));
      __trace.line = 931;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,aug_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(aug_m_0->label_lookup), ROGUE_ARG(method_label_5->name) )))));
      __trace.line = 932;
      if (!!(aug_label_2))
      {
        __trace.line = 933;
        RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)method_label_5->statements)), ROGUE_ARG(((RogueCmd_List*)(aug_label_2->statements))) );
        __trace.line = 934;
        aug_label_2->is_referenced = true;
      }
    }
  }
  __trace.line = 938;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1093_6,(aug_m_0->label_list));
    RogueInt32 _auto_1094_7 = (0);
    for (;_auto_1094_7 < _auto_1093_6->count;++_auto_1094_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_8,(((RogueClassCmdLabel*)(_auto_1093_6->data->objects[_auto_1094_7]))));
      __trace.line = 939;
      if (!(label_8->is_referenced))
      {
        __trace.line = 940;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(label_8->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[303] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_8->name) )))) )))), Rogue_literal_strings[304] )))) )))) ))));
      }
    }
  }
}

void RogueType__index_and_move_inline_to_end__Method_List( RogueClassType* THIS, RogueMethod_List* list_0 )
{
  RogueDebugTrace __trace( "Type.index_and_move_inline_to_end(Method[])", "Type.rogue", 944 );
  __trace.line = 945;
  RogueInt32 i_1 = ((list_0->count - 1));
  __trace.line = 946;
  while (i_1 >= 0)
  {
    __trace.line = 947;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(list_0->data->objects[i_1]))));
    __trace.line = 948;
    if (((RogueMethod__is_macro( m_2 ))))
    {
      __trace.line = 949;
      RogueMethod_List__remove__Method( list_0, m_2 );
      __trace.line = 950;
      RogueMethod_List__add__Method( list_0, m_2 );
    }
    __trace.line = 952;
    --i_1;
  }
  __trace.line = 955;
  i_1 = ((RogueInt32)0);
  __trace.line = 956;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1095_3,(list_0));
    RogueInt32 _auto_1096_4 = (0);
    for (;_auto_1096_4 < _auto_1095_3->count;++_auto_1096_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueClassMethod*)(_auto_1095_3->data->objects[_auto_1096_4]))));
      __trace.line = 957;
      m_5->index = i_1;
      __trace.line = 958;
      ++i_1;
    }
  }
}

RogueLogical RogueType__omit_output( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.omit_output()", "Type.rogue", 961 );
  __trace.line = 962;
  return (RogueLogical)((((RogueType__is_native( ROGUE_ARG(THIS) ))) || !(THIS->is_used)));
}

RogueClassType* RogueType__resolve( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.resolve()", "Type.rogue", 964 );
  __trace.line = 965;
  if (THIS->resolved)
  {
    return (RogueClassType*)(THIS);
  }
  __trace.line = 966;
  THIS->resolved = true;
  __trace.line = 968;
  RogueType__organize__Scope( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  __trace.line = 970;
  if (!!(THIS->_element_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_element_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  __trace.line = 972;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1097_0,(THIS->global_list));
    RogueInt32 _auto_1098_1 = (0);
    for (;_auto_1098_1 < _auto_1097_0->count;++_auto_1098_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueClassProperty*)(_auto_1097_0->data->objects[_auto_1098_1]))));
      RogueType__organize__Scope( ROGUE_ARG(s_2->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  __trace.line = 974;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1099_3,(THIS->property_list));
    RogueInt32 _auto_1100_4 = (0);
    for (;_auto_1100_4 < _auto_1099_3->count;++_auto_1100_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1099_3->data->objects[_auto_1100_4]))));
      __trace.line = 975;
      RogueType__organize__Scope( ROGUE_ARG(p_5->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  __trace.line = 978;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1101_6,(THIS->global_method_list));
    RogueInt32 _auto_1102_7 = (0);
    for (;_auto_1102_7 < _auto_1101_6->count;++_auto_1102_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_8,(((RogueClassMethod*)(_auto_1101_6->data->objects[_auto_1102_7]))));
      __trace.line = 979;
      RogueMethod__resolve( r_8 );
    }
  }
  __trace.line = 982;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1103_9,(THIS->method_list));
    RogueInt32 _auto_1104_10 = (0);
    for (;_auto_1104_10 < _auto_1103_9->count;++_auto_1104_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_1103_9->data->objects[_auto_1104_10]))));
      __trace.line = 983;
      RogueMethod__resolve( m_11 );
    }
  }
  __trace.line = 986;
  return (RogueClassType*)(THIS);
}

RogueLogical RogueType__should_cull( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.should_cull()", "Type.rogue", 988 );
  __trace.line = 989;
  return (RogueLogical)(!(THIS->is_used));
}

void RogueType__trace_used_code( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.trace_used_code()", "Type.rogue", 994 );
  __trace.line = 995;
  if (THIS->is_used)
  {
    return;
  }
  __trace.line = 996;
  THIS->is_used = true;
  __trace.line = 998;
  if (((RogueType__is_singleton( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 999;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_0,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[514] )))));
    __trace.line = 1000;
    if (!!(m_0))
    {
      __trace.line = 1001;
      RogueMethod__make_requisite( m_0 );
    }
  }
  __trace.line = 1005;
  if (!!(THIS->_element_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_element_type) );
  }
  __trace.line = 1007;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1105_1,(THIS->base_types));
    RogueInt32 _auto_1106_2 = (0);
    for (;_auto_1106_2 < _auto_1105_1->count;++_auto_1106_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1105_1->data->objects[_auto_1106_2]))));
      __trace.line = 1008;
      RogueType__trace_used_code( base_type_3 );
    }
  }
  __trace.line = 1011;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1107_4,(THIS->global_list));
    RogueInt32 _auto_1108_5 = (0);
    for (;_auto_1108_5 < _auto_1107_4->count;++_auto_1108_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_6,(((RogueClassProperty*)(_auto_1107_4->data->objects[_auto_1108_5]))));
      __trace.line = 1012;
      RogueType__trace_used_code( ROGUE_ARG(s_6->_type) );
    }
  }
  __trace.line = 1015;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1109_7,(THIS->property_list));
    RogueInt32 _auto_1110_8 = (0);
    for (;_auto_1110_8 < _auto_1109_7->count;++_auto_1110_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_9,(((RogueClassProperty*)(_auto_1109_7->data->objects[_auto_1110_8]))));
      __trace.line = 1016;
      RogueType__trace_used_code( ROGUE_ARG(p_9->_type) );
    }
  }
  __trace.line = 1019;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1111_10,(THIS->global_method_list));
    RogueInt32 _auto_1112_11 = (0);
    for (;_auto_1112_11 < _auto_1111_10->count;++_auto_1112_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_12,(((RogueClassMethod*)(_auto_1111_10->data->objects[_auto_1112_11]))));
      __trace.line = 1020;
      if (((RogueMethod__is_requisite( r_12 ))))
      {
        RogueMethod__trace_used_code( r_12 );
      }
    }
  }
  __trace.line = 1023;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1113_13,(THIS->method_list));
    RogueInt32 _auto_1114_14 = (0);
    for (;_auto_1114_14 < _auto_1113_13->count;++_auto_1114_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueClassMethod*)(_auto_1113_13->data->objects[_auto_1114_14]))));
      __trace.line = 1024;
      if (((RogueMethod__is_requisite( m_15 ))))
      {
        RogueMethod__trace_used_code( m_15 );
      }
    }
  }
}

void RogueType__assign_cpp_name( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.assign_cpp_name()", "CPPWriter.rogue", 1338 );
  __trace.line = 1339;
  THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )));
  __trace.line = 1341;
  if ((THIS->is_array || ((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray)))
  {
    __trace.line = 1342;
    THIS->cpp_class_name = Rogue_literal_strings[535];
    __trace.line = 1343;
    THIS->cpp_name = Rogue_literal_strings[536];
  }
  else if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) || THIS->simplify_name))
  {
    __trace.line = 1346;
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[54], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_list)
  {
    __trace.line = 1349;
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[54], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_optional)
  {
    __trace.line = 1352;
    THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[311], ROGUE_ARG(THIS->_element_type->cpp_name) )))) )));
    __trace.line = 1353;
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[54], ROGUE_ARG(THIS->cpp_name) )));
  }
  else
  {
    __trace.line = 1356;
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[537], ROGUE_ARG(THIS->cpp_name) )));
  }
  __trace.line = 1359;
  THIS->cpp_type_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[538], ROGUE_ARG(THIS->cpp_name) )));
  __trace.line = 1361;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1115_0,(THIS->global_list));
    RogueInt32 _auto_1116_1 = (0);
    for (;_auto_1116_1 < _auto_1115_0->count;++_auto_1116_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueClassProperty*)(_auto_1115_0->data->objects[_auto_1116_1]))));
      __trace.line = 1362;
      s_2->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(s_2->name) )));
    }
  }
  __trace.line = 1365;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1117_3,(THIS->property_list));
    RogueInt32 _auto_1118_4 = (0);
    for (;_auto_1118_4 < _auto_1117_3->count;++_auto_1118_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1117_3->data->objects[_auto_1118_4]))));
      __trace.line = 1366;
      if (((RogueProperty__is_native( p_5 ))))
      {
        p_5->cpp_name = p_5->name;
      }
      else
      {
        __trace.line = 1367;
        p_5->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->name) )));
      }
    }
  }
}

void RogueType__print_data_definition__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Type.print_data_definition(CPPWriter)", "CPPWriter.rogue", 1370 );
  __trace.line = 1371;
  if ((((RogueType__omit_output( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    return;
  }
  __trace.line = 1373;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[556] )))), ROGUE_ARG(THIS->cpp_class_name) );
  __trace.line = 1374;
  RogueLogical is_error_1 = (false);
  __trace.line = 1375;
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 1376;
    if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))))
    {
      __trace.line = 1377;
      is_error_1 = ((RogueLogical)true);
      __trace.line = 1378;
      RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[558] )))), ROGUE_ARG(THIS->base_class) );
    }
    else
    {
      __trace.line = 1380;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[560] );
    }
  }
  __trace.line = 1383;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__println( writer_0 )))), Rogue_literal_strings[234] );
  __trace.line = 1384;
  writer_0->indent += 2;
  __trace.line = 1387;
  if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 1388;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[561] );
    __trace.line = 1389;
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1119_3,(THIS->property_list));
      RogueInt32 _auto_1120_4 = (0);
      for (;_auto_1120_4 < _auto_1119_3->count;++_auto_1120_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1119_3->data->objects[_auto_1120_4]))));
        __trace.line = 1390;
        if ((!(is_error_1) || ((void*)p_5->type_context) == ((void*)THIS)))
        {
          __trace.line = 1391;
          if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) && ((RogueType__is_reference( ROGUE_ARG(p_5->_type) )))))
          {
            __trace.line = 1392;
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[562] );
            __trace.line = 1393;
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_5->_type) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(p_5->cpp_name) );
            __trace.line = 1394;
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[563] );
          }
          else if (((RogueProperty__is_native( p_5 ))))
          {
            __trace.line = 1396;
            RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( writer_0, ROGUE_ARG(p_5->t), ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassMethod*)(NULL))), ROGUE_ARG(p_5->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
          }
          else
          {
            __trace.line = 1398;
            RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_5->_type) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(p_5->cpp_name) )))), Rogue_literal_strings[243] );
          }
        }
      }
    }
    __trace.line = 1402;
    RogueCPPWriter__println( writer_0 );
  }
  __trace.line = 1405;
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 1406;
    if (!!(THIS->property_list->count))
    {
      __trace.line = 1408;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[573] );
      __trace.line = 1409;
      RogueLogical first_2 = (true);
      __trace.line = 1410;
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1121_6,(THIS->property_list));
        RogueInt32 _auto_1122_7 = (0);
        for (;_auto_1122_7 < _auto_1121_6->count;++_auto_1122_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_8,(((RogueClassProperty*)(_auto_1121_6->data->objects[_auto_1122_7]))));
          __trace.line = 1411;
          if (first_2)
          {
            first_2 = ((RogueLogical)false);
          }
          else
          {
            __trace.line = 1412;
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
          }
          __trace.line = 1413;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(p_8->cpp_name) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(p_8->_type) )))), Rogue_literal_strings[34] );
        }
      }
      __trace.line = 1415;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[575] );
      __trace.line = 1416;
      RogueCPPWriter__println( writer_0 );
      __trace.line = 1418;
      if (THIS->is_optional)
      {
        __trace.line = 1420;
        RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[576] )))), ROGUE_ARG(((RogueClassProperty*)(THIS->property_list->data->objects[0]))->_type) );
        __trace.line = 1421;
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[577] );
      }
      else
      {
        __trace.line = 1424;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[576] );
        __trace.line = 1425;
        first_2 = ((RogueLogical)true);
        __trace.line = 1426;
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1123_9,(THIS->property_list));
          RogueInt32 _auto_1124_10 = (0);
          for (;_auto_1124_10 < _auto_1123_9->count;++_auto_1124_10)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_11,(((RogueClassProperty*)(_auto_1123_9->data->objects[_auto_1124_10]))));
            __trace.line = 1427;
            if (first_2)
            {
              first_2 = ((RogueLogical)false);
            }
            else
            {
              __trace.line = 1428;
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
            }
            __trace.line = 1429;
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_11->_type) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(p_11->cpp_name) );
          }
        }
        __trace.line = 1431;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[578] );
        __trace.line = 1432;
        first_2 = ((RogueLogical)true);
        __trace.line = 1433;
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1125_12,(THIS->property_list));
          RogueInt32 _auto_1126_13 = (0);
          for (;_auto_1126_13 < _auto_1125_12->count;++_auto_1126_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_14,(((RogueClassProperty*)(_auto_1125_12->data->objects[_auto_1126_13]))));
            __trace.line = 1434;
            if (first_2)
            {
              first_2 = ((RogueLogical)false);
            }
            else
            {
              __trace.line = 1435;
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
            }
            __trace.line = 1436;
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(p_14->cpp_name) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(p_14->cpp_name) )))), Rogue_literal_strings[34] );
          }
        }
        __trace.line = 1438;
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[575] );
        __trace.line = 1439;
        RogueCPPWriter__println( writer_0 );
      }
    }
    __trace.line = 1443;
    if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
    {
      __trace.line = 1445;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[579] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[580] );
      __trace.line = 1446;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
      __trace.line = 1447;
      if (THIS->is_optional)
      {
        __trace.line = 1448;
        writer_0->indent += 2;
        __trace.line = 1449;
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[581] );
        __trace.line = 1459;
        writer_0->indent -= 2;
      }
      else
      {
        __trace.line = 1461;
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1127_15,(THIS->property_list));
          RogueInt32 _auto_1128_16 = (0);
          for (;_auto_1128_16 < _auto_1127_15->count;++_auto_1128_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_17,(((RogueClassProperty*)(_auto_1127_15->data->objects[_auto_1128_16]))));
            __trace.line = 1462;
            RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] )))), ROGUE_ARG(p_17->cpp_name) )))), Rogue_literal_strings[583] )))), ROGUE_ARG(p_17->cpp_name) )))), Rogue_literal_strings[584] );
          }
        }
        __trace.line = 1464;
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[585] );
      }
      __trace.line = 1466;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
      __trace.line = 1467;
      RogueCPPWriter__println( writer_0 );
      __trace.line = 1469;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[586] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[580] );
      __trace.line = 1470;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[587] );
    }
  }
  __trace.line = 1479;
  writer_0->indent -= 2;
  __trace.line = 1480;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[588] );
}

void RogueType__print_global_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Type.print_global_method_prototypes(CPPWriter)", "CPPWriter.rogue", 1482 );
  __trace.line = 1483;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1129_1,(THIS->global_method_list));
    RogueInt32 _auto_1130_2 = (0);
    for (;_auto_1130_2 < _auto_1129_1->count;++_auto_1130_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1129_1->data->objects[_auto_1130_2]))));
      __trace.line = 1484;
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__print_global_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Type.print_global_method_definitions(CPPWriter)", "CPPWriter.rogue", 1487 );
  __trace.line = 1488;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1131_1,(THIS->global_method_list));
    RogueInt32 _auto_1132_2 = (0);
    for (;_auto_1132_2 < _auto_1131_1->count;++_auto_1132_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1131_1->data->objects[_auto_1132_2]))));
      __trace.line = 1489;
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        __trace.line = 1490;
        RogueCPPWriter__mark_routine_start__Method( writer_0, m_3 );
        __trace.line = 1491;
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        __trace.line = 1492;
        RogueCPPWriter__mark_routine_end( writer_0 );
      }
    }
  }
}

void RogueType__print_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Type.print_method_prototypes(CPPWriter)", "CPPWriter.rogue", 1496 );
  __trace.line = 1497;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1133_1,(THIS->method_list));
    RogueInt32 _auto_1134_2 = (0);
    for (;_auto_1134_2 < _auto_1133_1->count;++_auto_1134_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1133_1->data->objects[_auto_1134_2]))));
      __trace.line = 1498;
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( RogueClassType* THIS, RogueString_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  RogueDebugTrace __trace( "Type.determine_cpp_method_typedefs(String[],Table<<String,Method>>)", "CPPWriter.rogue", 1501 );
  __trace.line = 1502;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 1503;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1135_6,(THIS->method_list));
    RogueInt32 _auto_1136_7 = (0);
    for (;_auto_1136_7 < _auto_1135_6->count;++_auto_1136_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1135_6->data->objects[_auto_1136_7]))));
      __trace.line = 1504;
      if (((!(((RogueMethod__is_macro( m_8 )))) && ((RogueMethod__is_dynamic( m_8 )))) && m_8->is_used))
      {
        __trace.line = 1505;
        RogueStringBuilder__clear( buffer_2 );
        __trace.line = 1506;
        if (!!(m_8->_return_type))
        {
          __trace.line = 1507;
          RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->_return_type->cpp_class_name) );
          __trace.line = 1508;
          if (((RogueType__is_reference( ROGUE_ARG(m_8->_return_type) ))))
          {
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
          }
        }
        else
        {
          __trace.line = 1510;
          RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[559] );
        }
        __trace.line = 1512;
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[604] );
        __trace.line = 1513;
        RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->type_context->cpp_class_name) )))), Rogue_literal_strings[250] );
        __trace.line = 1514;
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1137_9,(m_8->parameters));
          RogueInt32 i_10 = (0);
          for (;i_10 < _auto_1137_9->count;++i_10)
          {
            __trace.line = 1515;
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)',', true );
            __trace.line = 1516;
            ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_3,(((RogueClassLocal*)(m_8->parameters->data->objects[i_10]))->_type));
            __trace.line = 1517;
            RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(param_type_3->cpp_class_name) );
            __trace.line = 1518;
            if (((RogueType__is_reference( param_type_3 ))))
            {
              RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
            }
          }
        }
        __trace.line = 1520;
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[34] );
        __trace.line = 1521;
        ROGUE_DEF_LOCAL_REF(RogueString*,sig_4,(((RogueStringBuilder__to_String( buffer_2 )))));
        __trace.line = 1522;
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,mapping_5,(((RogueTable_String_Method___get__String( lookup_1, sig_4 )))));
        __trace.line = 1523;
        if (!!(mapping_5))
        {
          __trace.line = 1524;
          m_8->cpp_typedef = mapping_5->cpp_typedef;
          __trace.line = 1525;
          if ((!(mapping_5->called_dynamically) && m_8->called_dynamically))
          {
            __trace.line = 1527;
            RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          }
        }
        else
        {
          __trace.line = 1530;
          m_8->cpp_typedef = ((RogueString__operatorPLUS__Int32( Rogue_literal_strings[605], ROGUE_ARG(list_0->count) )));
          __trace.line = 1531;
          RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          __trace.line = 1532;
          RogueString_List__add__String( list_0, sig_4 );
        }
      }
    }
  }
}

RogueInt32 RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( RogueClassType* THIS, RogueInt32 at_index_0, RogueClassCPPWriter* writer_1 )
{
  RogueDebugTrace __trace( "Type.print_dynamic_method_table_entries(Int32,CPPWriter)", "CPPWriter.rogue", 1537 );
  __trace.line = 1538;
  if (!(((RogueType__is_reference( ROGUE_ARG(THIS) )))))
  {
    return (RogueInt32)(at_index_0);
  }
  __trace.line = 1540;
  THIS->dynamic_method_table_index = at_index_0;
  __trace.line = 1542;
  RogueInt32 i2_2 = ((THIS->method_list->count - 1));
  __trace.line = 1543;
  while (i2_2 > 0)
  {
    __trace.line = 1544;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(THIS->method_list->data->objects[i2_2]))));
    __trace.line = 1545;
    if (((!(((RogueMethod__is_macro( m_3 )))) && ((RogueMethod__is_dynamic( m_3 )))) && m_3->is_used))
    {
      goto _auto_1138;
    }
    __trace.line = 1546;
    --i2_2;
  }
  _auto_1138:;
  __trace.line = 1549;
  RogueLogical print_type_name_4 = (true);
  __trace.line = 1550;
  {
    RogueInt32 i_5 = (0);
    RogueInt32 _auto_106_6 = (i2_2);
    for (;i_5 <= _auto_106_6;++i_5)
    {
      __trace.line = 1551;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_7,(((RogueClassMethod*)(THIS->method_list->data->objects[i_5]))));
      __trace.line = 1552;
      if (!(((RogueMethod__is_macro( m_7 )))))
      {
        __trace.line = 1553;
        if ((((RogueMethod__is_dynamic( m_7 ))) && m_7->is_used))
        {
          __trace.line = 1555;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[657] )))), ROGUE_ARG(m_7->cpp_typedef) )))), Rogue_literal_strings[658] )))), ROGUE_ARG(m_7->cpp_name) )))), Rogue_literal_strings[217] );
        }
        else
        {
          __trace.line = 1557;
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[659] );
        }
        __trace.line = 1559;
        if (print_type_name_4)
        {
          print_type_name_4 = ((RogueLogical)false);
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[660] )))), ROGUE_ARG(THIS->name) );
        }
        __trace.line = 1560;
        RogueCPPWriter__println( writer_1 );
        __trace.line = 1561;
        ++at_index_0;
      }
    }
  }
  __trace.line = 1565;
  return (RogueInt32)(at_index_0);
}

void RogueType__print_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "Type.print_method_definitions(CPPWriter)", "CPPWriter.rogue", 1567 );
  __trace.line = 1568;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1139_1,(THIS->method_list));
    RogueInt32 _auto_1140_2 = (0);
    for (;_auto_1140_2 < _auto_1139_1->count;++_auto_1140_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1139_1->data->objects[_auto_1140_2]))));
      __trace.line = 1569;
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        __trace.line = 1570;
        RogueCPPWriter__mark_method_start__Type_Method( writer_0, ROGUE_ARG(THIS), m_3 );
        __trace.line = 1571;
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        __trace.line = 1572;
        RogueCPPWriter__mark_method_end( writer_0 );
      }
    }
  }
}

RogueClassType* RogueType__init_object( RogueClassType* THIS )
{
  RogueDebugTrace __trace( "Type.init_object()", "Type.rogue", 3 );
  __trace.line = 7;
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  __trace.line = 8;
  THIS->index = -1;
  __trace.line = 20;
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  __trace.line = 34;
  THIS->definition_list = ((RogueDefinition_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueDefinition_List*,ROGUE_CREATE_OBJECT(Definition_List))) )));
  __trace.line = 35;
  THIS->definition_lookup = ((RogueTable_String_Definition___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Definition_*,ROGUE_CREATE_OBJECT(Table_String_Definition_))) )));
  __trace.line = 37;
  THIS->next_enum_offset = 0;
  __trace.line = 39;
  THIS->global_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  __trace.line = 40;
  THIS->global_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  __trace.line = 42;
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  __trace.line = 43;
  THIS->property_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  __trace.line = 45;
  THIS->global_method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  __trace.line = 46;
  THIS->global_method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  __trace.line = 47;
  THIS->global_method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  __trace.line = 49;
  THIS->method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  __trace.line = 50;
  THIS->method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  __trace.line = 51;
  THIS->method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  __trace.line = 3;
  return (RogueClassType*)(THIS);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init( RogueClassTable_String_Type_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Type___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueString* RogueTable_String_Type___to_String( RogueClassTable_String_Type_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Type___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Type___type_name( RogueClassTable_String_Type_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[757]);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Type__List__init__Int32_TableEntry_String_Type_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Type__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Type__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Type_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassType* RogueTable_String_Type___at__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.at(Int32)", "Table.rogue", 29 );
  __trace.line = 30;
  return (RogueClassType*)(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString*)(THIS->keys->data->objects[index_0]))) ))));
}

RogueInt32 RogueTable_String_Type___count( RogueClassTable_String_Type_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.count()", "Table.rogue", 42 );
  __trace.line = 43;
  return (RogueInt32)(THIS->keys->count);
}

RogueClassTableEntry_String_Type_* RogueTable_String_Type___find__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_2,(((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Type_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Type_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Type_*)(((RogueClassTableEntry_String_Type_*)(NULL)));
}

RogueClassType* RogueTable_String_Type___get__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_1,(((RogueTable_String_Type___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassType*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassType*)(default_value_2);
  }
}

RogueClassTable_String_Type_* RogueTable_String_Type___set__String_Type( RogueClassTable_String_Type_* THIS, RogueString* key_0, RogueClassType* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.set(String,Type)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_4,(((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Type_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Type_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Type_*)((RogueTableEntry_String_Type___init__String_Type_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Type_*,ROGUE_CREATE_OBJECT(TableEntry_String_Type_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Type_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Type___print_to__StringBuilder( RogueClassTable_String_Type_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init_object( RogueClassTable_String_Type_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Type>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init( RogueClassTable_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Int32___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueString* RogueTable_String_Int32___to_String( RogueClassTable_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Int32___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Int32___type_name( RogueClassTable_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[758]);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init__Int32( RogueClassTable_String_Int32_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Int32__List__init__Int32_TableEntry_String_Int32_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Int32__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Int32__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Int32_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTableEntry_String_Int32_* RogueTable_String_Int32___find__String( RogueClassTable_String_Int32_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_2,(((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Int32_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Int32_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Int32_*)(((RogueClassTableEntry_String_Int32_*)(NULL)));
}

RogueInt32 RogueTable_String_Int32___get__String( RogueClassTable_String_Int32_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_1,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueInt32)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    RogueInt32 default_value_2 = 0;
    __trace.line = 62;
    return (RogueInt32)(default_value_2);
  }
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___set__String_Int32( RogueClassTable_String_Int32_* THIS, RogueString* key_0, RogueInt32 value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.set(String,Int32)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_4,(((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Int32_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Int32_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Int32_*)((RogueTableEntry_String_Int32___init__String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Int32_*,ROGUE_CREATE_OBJECT(TableEntry_String_Int32_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Int32_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Int32___print_to__StringBuilder( RogueClassTable_String_Int32_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Int32( buffer_0, ROGUE_ARG(((RogueTable_String_Int32___get__String( ROGUE_ARG(THIS), key_2 )))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init_object( RogueClassTable_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Int32>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init( RogueClassTable_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_String_List___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueString* RogueTable_String_String_List___to_String( RogueClassTable_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String_List___type_name( RogueClassTable_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[759]);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init__Int32( RogueClassTable_String_String_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_String_List__List__init__Int32_TableEntry_String_String_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_String_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_String_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_String_List_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueClassTableEntry_String_String_List_* RogueTable_String_String_List___find__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_2,(((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_List_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_String_List_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_String_List_*)(((RogueClassTableEntry_String_String_List_*)(NULL)));
}

RogueString_List* RogueTable_String_String_List___get__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_1,(((RogueTable_String_String_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueString_List*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueString_List*,default_value_2,0);
    __trace.line = 62;
    return (RogueString_List*)(default_value_2);
  }
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___set__String_String_List( RogueClassTable_String_String_List_* THIS, RogueString* key_0, RogueString_List* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.set(String,String[])", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_4,(((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_String_List_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_String_List_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_String_List_*)((RogueTableEntry_String_String_List___init__String_String_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_List_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_String_List_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String_List___print_to__StringBuilder( RogueClassTable_String_String_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_String_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init_object( RogueClassTable_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,String[]>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Int32___to_String( RogueClassTableEntry_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Int32___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Int32___type_name( RogueClassTableEntry_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[721]);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init__String_Int32_Int32( RogueClassTableEntry_String_Int32_* THIS, RogueString* _key_0, RogueInt32 _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>.init(String,Int32,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init_object( RogueClassTableEntry_String_Int32_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init( RogueClassTable_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_Int32_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueString* RogueTable_Int32_Template___to_String( RogueClassTable_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Int32_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Int32_Template___type_name( RogueClassTable_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[760]);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_Int32_Template__List__init__Int32_TableEntry_Int32_Template_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_Int32_Template__List*,ROGUE_CREATE_OBJECT(TableEntry_Int32_Template__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_Int32_Template_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueInt32_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueInt32_List*,ROGUE_CREATE_OBJECT(Int32_List))) )));
  __trace.line = 20;
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueLogical RogueTable_Int32_Template___contains__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.contains(Int32)", "Table.rogue", 39 );
  __trace.line = 40;
  return (RogueLogical)(!!(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_Int32_Template_* RogueTable_Int32_Template___find__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.find(Int32)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (((RogueInt32__hash_code( key_0 ))));
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_2,(((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && entry_2->key == key_0))
    {
      return (RogueClassTableEntry_Int32_Template_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_Int32_Template_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_Int32_Template_*)(((RogueClassTableEntry_Int32_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_Int32_Template___get__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.get(Int32)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_1,(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___set__Int32_Template( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0, RogueClassTemplate* value_1 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.set(Int32,Template)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (((RogueInt32__hash_code( key_0 ))));
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_4,(((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && entry_4->key == key_0))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_Int32_Template_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_Int32_Template_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_Int32_Template_*)((RogueTableEntry_Int32_Template___init__Int32_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Int32_Template_*,ROGUE_CREATE_OBJECT(TableEntry_Int32_Template_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_Int32_Template_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueInt32_List__add__Int32( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_Int32_Template___print_to__StringBuilder( RogueClassTable_Int32_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    RogueInt32 key_2 = (THIS->keys->data->integers[i_1]);
    __trace.line = 127;
    RogueStringBuilder__print__Int32( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_Int32_Template___get__Int32( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init_object( RogueClassTable_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "Table<<Int32,Template>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueClassAttributes* RogueAttributes__init( RogueClassAttributes* THIS )
{
  RogueDebugTrace __trace( "Attributes.init()", "Attributes.rogue", 42 );
  __trace.line = 44;
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__type_name( RogueClassAttributes* THIS )
{
  RogueDebugTrace __trace( "Attributes.type_name()", "Attributes.rogue", 36 );
  return (RogueString*)(Rogue_literal_strings[761]);
}

RogueClassAttributes* RogueAttributes__init__Int32( RogueClassAttributes* THIS, RogueInt32 _auto_116_0 )
{
  RogueDebugTrace __trace( "Attributes.init(Int32)", "Attributes.rogue", 44 );
  THIS->flags = _auto_116_0;
  __trace.line = 46;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__clone( RogueClassAttributes* THIS )
{
  RogueDebugTrace __trace( "Attributes.clone()", "Attributes.rogue", 46 );
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassAttributes*,result_0,(((RogueAttributes__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))), ROGUE_ARG(THIS->flags) )))));
  __trace.line = 48;
  if (!!(THIS->tags))
  {
    __trace.line = 49;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1223_1,(THIS->tags));
      RogueInt32 _auto_1224_2 = (0);
      for (;_auto_1224_2 < _auto_1223_1->count;++_auto_1224_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1223_1->data->objects[_auto_1224_2]))));
        __trace.line = 50;
        RogueAttributes__add__String( result_0, tag_3 );
      }
    }
  }
  __trace.line = 53;
  return (RogueClassAttributes*)(result_0);
}

RogueClassAttributes* RogueAttributes__add__Int32( RogueClassAttributes* THIS, RogueInt32 flag_0 )
{
  RogueDebugTrace __trace( "Attributes.add(Int32)", "Attributes.rogue", 55 );
  __trace.line = 56;
  THIS->flags |= flag_0;
  __trace.line = 57;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__String( RogueClassAttributes* THIS, RogueString* tag_0 )
{
  RogueDebugTrace __trace( "Attributes.add(String)", "Attributes.rogue", 59 );
  __trace.line = 60;
  if (((void*)THIS->tags) == ((void*)NULL))
  {
    THIS->tags = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  }
  __trace.line = 61;
  RogueString_List__add__String( ROGUE_ARG(THIS->tags), tag_0 );
  __trace.line = 62;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__Attributes( RogueClassAttributes* THIS, RogueClassAttributes* other_0 )
{
  RogueDebugTrace __trace( "Attributes.add(Attributes)", "Attributes.rogue", 64 );
  __trace.line = 65;
  THIS->flags |= other_0->flags;
  __trace.line = 66;
  if (!!(other_0->tags))
  {
    __trace.line = 67;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1225_1,(other_0->tags));
      RogueInt32 _auto_1226_2 = (0);
      for (;_auto_1226_2 < _auto_1225_1->count;++_auto_1226_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1225_1->data->objects[_auto_1226_2]))));
        RogueAttributes__add__String( ROGUE_ARG(THIS), tag_3 );
      }
    }
  }
  __trace.line = 69;
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__element_type_name( RogueClassAttributes* THIS )
{
  RogueDebugTrace __trace( "Attributes.element_type_name()", "Attributes.rogue", 71 );
  __trace.line = 72;
  switch ((THIS->flags & 7))
  {
    case 1:
    {
      __trace.line = 73;
      return (RogueString*)(Rogue_literal_strings[357]);
      break;
    }
    case 2:
    {
      __trace.line = 74;
      return (RogueString*)(Rogue_literal_strings[354]);
      break;
    }
    case 3:
    {
      __trace.line = 75;
      return (RogueString*)(Rogue_literal_strings[358]);
      break;
    }
    default:
    {
      __trace.line = 76;
      return (RogueString*)(Rogue_literal_strings[116]);
    }
  }
}

RogueClassAttributes* RogueAttributes__init_object( RogueClassAttributes* THIS )
{
  RogueDebugTrace __trace( "Attributes.init_object()", "Attributes.rogue", 36 );
  return (RogueClassAttributes*)(THIS);
}

RogueToken_List* RogueToken_List__init( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueToken_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueToken_List*)(THIS);
}

RogueString* RogueToken_List__to_String( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1227_2,(THIS));
    RogueInt32 _auto_1228_3 = (0);
    for (;_auto_1228_3 < _auto_1227_2->count;++_auto_1228_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_4,(((RogueClassToken*)(_auto_1227_2->data->objects[_auto_1228_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM68( 4, value_4 ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List__type_name( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[817]);
}

RogueToken_List* RogueToken_List__init_object( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].init_object()", "List.rogue", 4 );
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__init__Int32( RogueToken_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Token[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassToken*), true );
  }
  __trace.line = 16;
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token( RogueToken_List* THIS, RogueClassToken* value_0 )
{
  RogueDebugTrace __trace( "Token[].add(Token)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token_List( RogueToken_List* THIS, RogueToken_List* other_0 )
{
  RogueDebugTrace __trace( "Token[].add(Token[])", "List.rogue", 41 );
  __trace.line = 42;
  RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  __trace.line = 43;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1233_1,(other_0));
    RogueInt32 _auto_1234_2 = (0);
    for (;_auto_1234_2 < _auto_1233_1->count;++_auto_1234_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_3,(((RogueClassToken*)(_auto_1233_1->data->objects[_auto_1234_2]))));
      RogueToken_List__add__Token( ROGUE_ARG(THIS), value_3 );
    }
  }
  __trace.line = 44;
  return (RogueToken_List*)(THIS);
}

RogueInt32 RogueToken_List__capacity( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

void RogueToken_List__discard_from__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Token[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueClassToken* RogueToken_List__last( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].last()", "List.rogue", 157 );
  __trace.line = 158;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueClassListRebuilder_Token_* RogueToken_List__rebuilder( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].rebuilder()", "List.rogue", 229 );
  __trace.line = 230;
  return (RogueClassListRebuilder_Token_*)(((RogueListRebuilder_Token___init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRebuilder_Token_*,ROGUE_CREATE_OBJECT(ListRebuilder_Token_))), ROGUE_ARG(THIS) ))));
}

RogueToken_List* RogueToken_List__reserve__Int32( RogueToken_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Token[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueToken_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueToken_List*)(THIS);
}

RogueClassToken* RogueToken_List__remove_at__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Token[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,result_1,(((RogueClassToken*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassToken*)(result_1);
}

RogueClassToken* RogueToken_List__remove_last( RogueToken_List* THIS )
{
  RogueDebugTrace __trace( "Token[].remove_last()", "List.rogue", 286 );
  __trace.line = 287;
  return (RogueClassToken*)(((RogueToken_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueString* RogueToken__to_String( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_String()", "Token.rogue", 59 );
  __trace.line = 60;
  return (RogueString*)(((RogueTokenType__to_String__Token( ROGUE_ARG(THIS->_type), ROGUE_ARG(THIS) ))));
}

RogueString* RogueToken__type_name( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.type_name()", "Token.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[762]);
}

RogueClassToken* RogueToken__init__TokenType( RogueClassToken* THIS, RogueClassTokenType* _auto_117_0 )
{
  RogueDebugTrace __trace( "Token.init(TokenType)", "Token.rogue", 12 );
  THIS->_type = _auto_117_0;
  __trace.line = 14;
  return (RogueClassToken*)(THIS);
}

RogueClassRogueError* RogueToken__error__String( RogueClassToken* THIS, RogueString* message_0 )
{
  RogueDebugTrace __trace( "Token.error(String)", "Token.rogue", 17 );
  __trace.line = 18;
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->line), ROGUE_ARG(THIS->column) ))));
}

RogueString* RogueToken__filename( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.filename()", "Token.rogue", 20 );
  __trace.line = 21;
  if (!(!!(THIS->filepath)))
  {
    return (RogueString*)(Rogue_literal_strings[689]);
  }
  __trace.line = 22;
  ROGUE_DEF_LOCAL_REF(RogueString*,f_0,((call_ROGUEM17( 16, ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath) ))));
  __trace.line = 23;
  if (!!(f_0))
  {
    return (RogueString*)(f_0);
  }
  __trace.line = 25;
  f_0 = ((RogueString*)(RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
  __trace.line = 26;
  RogueTable_String_String___set__String_String( ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath), f_0 );
  __trace.line = 27;
  return (RogueString*)(f_0);
}

RogueLogical RogueToken__is_directive( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.is_directive()", "Token.rogue", 29 );
  __trace.line = 30;
  return (RogueLogical)((call_ROGUEM142( 17, ROGUE_ARG(THIS->_type) )));
}

RogueLogical RogueToken__is_structure( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.is_structure()", "Token.rogue", 32 );
  __trace.line = 33;
  return (RogueLogical)((call_ROGUEM142( 19, ROGUE_ARG(THIS->_type) )));
}

RogueString* RogueToken__quoted_name( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.quoted_name()", "Token.rogue", 35 );
  __trace.line = 36;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[83] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 4, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[83] )))) ))));
}

RogueClassToken* RogueToken__set_location__String_Int32_Int32( RogueClassToken* THIS, RogueString* _auto_118_0, RogueInt32 _auto_119_1, RogueInt32 _auto_120_2 )
{
  RogueDebugTrace __trace( "Token.set_location(String,Int32,Int32)", "Token.rogue", 38 );
  THIS->column = _auto_120_2;
  THIS->line = _auto_119_1;
  THIS->filepath = _auto_118_0;
  __trace.line = 39;
  return (RogueClassToken*)(THIS);
}

RogueClassToken* RogueToken__set_location__Token( RogueClassToken* THIS, RogueClassToken* existing_0 )
{
  RogueDebugTrace __trace( "Token.set_location(Token)", "Token.rogue", 41 );
  __trace.line = 42;
  THIS->filepath = existing_0->filepath;
  __trace.line = 43;
  THIS->line = existing_0->line;
  __trace.line = 44;
  THIS->column = existing_0->column;
  __trace.line = 45;
  return (RogueClassToken*)(THIS);
}

RogueCharacter RogueToken__to_Character( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_Character()", "Token.rogue", 47 );
  __trace.line = 48;
  return (RogueCharacter)(((RogueCharacter)(0)));
}

RogueInt32 RogueToken__to_Int32( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_Int32()", "Token.rogue", 50 );
  __trace.line = 51;
  return (RogueInt32)(0);
}

RogueInt64 RogueToken__to_Int64( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_Int64()", "Token.rogue", 53 );
  __trace.line = 54;
  return (RogueInt64)(((RogueInt64)((call_ROGUEM70( 17, ROGUE_ARG(THIS) )))));
}

RogueReal64 RogueToken__to_Real64( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_Real64()", "Token.rogue", 56 );
  __trace.line = 57;
  return (RogueReal64)(0.0);
}

RogueClassType* RogueToken__to_Type( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.to_Type()", "Token.rogue", 62 );
  __trace.line = 63;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassToken* RogueToken__init_object( RogueClassToken* THIS )
{
  RogueDebugTrace __trace( "Token.init_object()", "Token.rogue", 1 );
  return (RogueClassToken*)(THIS);
}

RogueString* RogueError__type_name( RogueClassError* THIS )
{
  RogueDebugTrace __trace( "Error.type_name()", "Exception.rogue", 13 );
  return (RogueString*)(Rogue_literal_strings[1257]);
}

RogueClassError* RogueError__init_object( RogueClassError* THIS )
{
  RogueDebugTrace __trace( "Error.init_object()", "Exception.rogue", 13 );
  __trace.line = 4;
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  __trace.line = 13;
  return (RogueClassError*)(THIS);
}

RogueString* RogueRogueError__to_String( RogueClassRogueError* THIS )
{
  RogueDebugTrace __trace( "RogueError.to_String()", "RogueError.rogue", 10 );
  __trace.line = 11;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 12;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_1,(((RogueString_List__joined__String( ROGUE_ARG(((RogueString__word_wrapped__Int32( ROGUE_ARG(THIS->message), 79 )))), Rogue_literal_strings[8] )))));
  __trace.line = 13;
  if (!!(THIS->filepath))
  {
    __trace.line = 14;
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[9] );
    __trace.line = 15;
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[10] )))), ROGUE_ARG((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) ))) );
    __trace.line = 16;
    RogueStringBuilder__println__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[11] )))), ROGUE_ARG(THIS->line) )))), Rogue_literal_strings[13] )))), ROGUE_ARG(THIS->column) );
    __trace.line = 17;
    RogueStringBuilder__println( builder_0 );
    __trace.line = 18;
    RogueStringBuilder__println__String( builder_0, m_1 );
    __trace.line = 19;
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[9] );
  }
  else
  {
    __trace.line = 21;
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[9] );
    __trace.line = 22;
    RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[14] );
    __trace.line = 23;
    RogueStringBuilder__println( builder_0 );
    __trace.line = 24;
    RogueStringBuilder__println__String( builder_0, m_1 );
    __trace.line = 25;
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[9] );
  }
  __trace.line = 27;
  return (RogueString*)(((RogueStringBuilder__to_String( builder_0 ))));
}

RogueString* RogueRogueError__type_name( RogueClassRogueError* THIS )
{
  RogueDebugTrace __trace( "RogueError.type_name()", "RogueError.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[1260]);
}

RogueClassRogueError* RogueRogueError__init_object( RogueClassRogueError* THIS )
{
  RogueDebugTrace __trace( "RogueError.init_object()", "RogueError.rogue", 1 );
  __trace.filename = "Exception.rogue";
  __trace.line = 4;
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  __trace.filename = "RogueError.rogue";
  __trace.line = 1;
  return (RogueClassRogueError*)(THIS);
}

RogueClassRogueError* RogueRogueError__init__String_String_Int32_Int32( RogueClassRogueError* THIS, RogueString* _auto_125_0, RogueString* _auto_126_1, RogueInt32 _auto_127_2, RogueInt32 _auto_128_3 )
{
  RogueDebugTrace __trace( "RogueError.init(String,String,Int32,Int32)", "RogueError.rogue", 8 );
  THIS->column = _auto_128_3;
  THIS->line = _auto_127_2;
  THIS->filepath = _auto_126_1;
  THIS->message = _auto_125_0;
  __trace.line = 10;
  return (RogueClassRogueError*)(THIS);
}

RogueString* RogueCmdAccess__type_name( RogueClassCmdAccess* THIS )
{
  RogueDebugTrace __trace( "CmdAccess.type_name()", "Cmd.rogue", 1547 );
  return (RogueString*)(Rogue_literal_strings[917]);
}

RogueClassCmd* RogueCmdAccess__clone__CloneArgs( RogueClassCmdAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAccess.clone(CloneArgs)", "Cmd.rogue", 1572 );
  __trace.line = 1573;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,result_1,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))) )))));
  __trace.line = 1575;
  if (!!(THIS->named_args))
  {
    __trace.line = 1576;
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    __trace.line = 1577;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1260_3,(THIS->named_args));
      RogueInt32 _auto_1261_4 = (0);
      for (;_auto_1261_4 < _auto_1260_3->count;++_auto_1261_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_5,(((RogueClassCmdNamedArg*)(_auto_1260_3->data->objects[_auto_1261_4]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_5, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  __trace.line = 1580;
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_2,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  __trace.line = 1581;
  if (!!(macro_args_2))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_access__CmdAccess( macro_args_2, result_1 ))));
  }
  __trace.line = 1582;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdAccess__dispatch__Visitor( RogueClassCmdAccess* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAccess.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAccess( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdAccess__implicit_type__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAccess.implicit_type(Scope)", "Cmd.rogue", 1584 );
  __trace.line = 1585;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
  __trace.line = 1586;
  if ((!(!!(result_1)) || !(((RogueType__is_routine( result_1 ))))))
  {
    return (RogueClassType*)(result_1);
  }
  __trace.line = 1588;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
  __trace.line = 1589;
  if (!!(template_2))
  {
    __trace.line = 1590;
    if (!!(template_2->_routine_return_type))
    {
      return (RogueClassType*)(template_2->_routine_return_type);
    }
    __trace.line = 1591;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[973] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[974] )))) )))) ))));
  }
  __trace.line = 1594;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassCmd* RogueCmdAccess__resolve__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAccess.resolve(Scope)", "Cmd.rogue", 1596 );
  __trace.line = 1597;
  if (!!(THIS->args))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  }
  __trace.line = 1599;
  if (!!(THIS->context))
  {
    __trace.line = 1600;
    if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' ))))
    {
      __trace.line = 1601;
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    __trace.line = 1604;
    THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  }
  else
  {
    __trace.line = 1607;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_1,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    __trace.line = 1608;
    if (!!(v_1))
    {
      __trace.line = 1609;
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      __trace.line = 1610;
      return (RogueClassCmd*)(((RogueCmdReadLocal__resolve__Scope( ROGUE_ARG(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), v_1 )))), scope_0 ))));
    }
    __trace.line = 1613;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,new_type_2,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(((RogueString__after_any__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' )))) )))));
    __trace.line = 1614;
    if (!!(new_type_2))
    {
      __trace.line = 1616;
      RogueType__organize__Scope( new_type_2, scope_0 );
      __trace.line = 1618;
      if (((RogueType__is_routine( new_type_2 ))))
      {
        __trace.line = 1620;
        if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
        {
          __trace.line = 1621;
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,m_call_list_3,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(new_type_2->global_method_lookup_by_name), Rogue_literal_strings[428] )))));
          __trace.line = 1622;
          if ((!!(m_call_list_3) && m_call_list_3->count == 1))
          {
            __trace.line = 1623;
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_4,(((RogueClassMethod*)(m_call_list_3->data->objects[0]))));
            __trace.line = 1624;
            ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_5,(((RogueFnParam_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))), ROGUE_ARG(m_call_4->parameters->count) )))));
            __trace.line = 1625;
            ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
            __trace.line = 1626;
            {
              ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1269_24,(m_call_4->parameters));
              RogueInt32 _auto_1270_25 = (0);
              for (;_auto_1270_25 < _auto_1269_24->count;++_auto_1270_25)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_26,(((RogueClassLocal*)(_auto_1269_24->data->objects[_auto_1270_25]))));
                __trace.line = 1627;
                RogueFnParam_List__add__FnParam( parameters_5, ROGUE_ARG(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(param_26->name) )))) );
                __trace.line = 1628;
                ((RogueFnParam_List__last( parameters_5 )))->_type = param_26->_type;
                __trace.line = 1629;
                RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(param_26->name) )))))) );
              }
            }
            __trace.line = 1631;
            ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_7,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), 1 )))));
            __trace.line = 1632;
            if (!!(m_call_4->_return_type))
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name), args_6 )))))) )))))) );
            }
            else
            {
              __trace.line = 1633;
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name), args_6 )))))) );
            }
            __trace.line = 1634;
            return (RogueClassCmd*)(((RogueCmdCreateFunction__resolve__Scope( ROGUE_ARG(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), parameters_5, ROGUE_ARG(m_call_4->_return_type), ROGUE_ARG(((RogueFnArg_List*)(NULL))), statements_7, false )))), scope_0 ))));
          }
        }
        else
        {
          __trace.line = 1637;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_8,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), new_type_2 )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))));
          __trace.line = 1638;
          cmd_8->named_args = THIS->named_args;
          __trace.line = 1639;
          return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( cmd_8, scope_0 ))));
        }
      }
      __trace.line = 1643;
      if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
      {
        __trace.line = 1644;
        if (!!(THIS->args))
        {
          __trace.line = 1645;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[478] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
        }
        __trace.line = 1647;
        ROGUE_DEF_LOCAL_REF(RogueString*,type_name_9,(((RogueString__from__Int32( ROGUE_ARG(THIS->name), 1 )))));
        __trace.line = 1648;
        RogueType__make_requisite( ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), type_name_9 )))), scope_0 )))) );
        __trace.line = 1649;
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[479] )))))), Rogue_literal_strings[480], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), type_name_9, 0 )))))) )))) )))), scope_0 ))));
      }
      __trace.line = 1652;
      if (((void*)THIS->args) == ((void*)NULL))
      {
        __trace.line = 1653;
        if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)']' ))))
        {
          __trace.line = 1655;
          THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
        }
        else
        {
          __trace.line = 1657;
          return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), new_type_2 ))))));
        }
      }
      __trace.line = 1661;
      if (new_type_2->is_array)
      {
        __trace.line = 1662;
        return (RogueClassCmd*)(((RogueCmdCreateArray__resolve__Scope( ROGUE_ARG(((RogueCmdCreateArray__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), new_type_2, ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      __trace.line = 1665;
      if (((RogueType__is_compound( new_type_2 ))))
      {
        __trace.line = 1666;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_10,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[321], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, false )))));
        __trace.line = 1667;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdCall*,cmd_call_11,(((RogueClassCmdCall*)(RogueObject_as(cmd_10,RogueTypeCmdCall)))));
        __trace.line = 1668;
        if ((!!(cmd_call_11) && ((RogueMethod__is_generated( ROGUE_ARG(cmd_call_11->method_info) )))))
        {
          __trace.line = 1670;
          return (RogueClassCmd*)(((RogueCmdCreateCompound__resolve__Scope( ROGUE_ARG(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), new_type_2, ROGUE_ARG(cmd_call_11->args) )))), scope_0 ))));
        }
        else if (!!(cmd_call_11))
        {
          __trace.line = 1672;
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_call_11)));
        }
        else
        {
          __trace.line = 1674;
          return (RogueClassCmd*)(cmd_10);
        }
      }
      __trace.line = 1678;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateObject*,cmd_create_12,(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), new_type_2 )))));
      __trace.line = 1679;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_new_13,(((RogueClassCmd*)(cmd_create_12))));
      __trace.line = 1681;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_call_14,0);
      __trace.line = 1682;
      if (((RogueType__is_native( new_type_2 ))))
      {
        __trace.line = 1683;
        cmd_call_14 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_2->name) )))))), Rogue_literal_strings[321], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, false ))));
      }
      else
      {
        __trace.line = 1686;
        cmd_call_14 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, new_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_new_13, Rogue_literal_strings[307], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, true ))));
      }
      __trace.line = 1689;
      if (!!(cmd_call_14))
      {
        __trace.line = 1690;
        return (RogueClassCmd*)((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, cmd_call_14, new_type_2, scope_0 ))), scope_0 )));
      }
      else
      {
        __trace.line = 1692;
        return (RogueClassCmd*)((call_ROGUEM81( 31, cmd_new_13, scope_0 )));
      }
    }
    else if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' ))))
    {
      __trace.line = 1697;
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    __trace.line = 1702;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_15,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), false, false )))));
    __trace.line = 1703;
    if (!!(result_15))
    {
      __trace.line = 1704;
      RogueCmdAccess__check_for_recursive_getter__Scope( ROGUE_ARG(THIS), scope_0 );
      __trace.line = 1705;
      return (RogueClassCmd*)(result_15);
    }
    __trace.line = 1708;
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_16,(((RogueType__find_global__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) )))));
    __trace.line = 1709;
    if (!!(p_16))
    {
      __trace.line = 1710;
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      else
      {
        __trace.line = 1711;
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_16 ))))));
      }
    }
    __trace.line = 1714;
    p_16 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) ))));
    __trace.line = 1715;
    if (!!(p_16))
    {
      __trace.line = 1716;
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      __trace.line = 1721;
      if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
      {
        __trace.line = 1722;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[507] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[508] )))) )))) ))));
      }
      __trace.line = 1724;
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
      __trace.line = 1726;
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_16 ))))));
    }
    __trace.line = 1729;
    if (!(!!(THIS->args)))
    {
      __trace.line = 1730;
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_17,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
      __trace.line = 1731;
      if ((!(!!(def_17)) && !!(scope_0->_implicit_type)))
      {
        def_17 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
      }
      __trace.line = 1732;
      if (!!(def_17))
      {
        return (RogueClassCmd*)((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(def_17->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 )));
      }
      __trace.line = 1734;
      p_16 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
      __trace.line = 1735;
      if (!!(p_16))
      {
        __trace.line = 1736;
        return (RogueClassCmd*)(((RogueCmdReadProperty__resolve__Scope( ROGUE_ARG(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_16 )))), scope_0 ))));
      }
    }
    __trace.line = 1741;
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), true, false ))));
  }
  __trace.line = 1744;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_18,((call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ))));
  __trace.line = 1745;
  RogueType__organize__Scope( context_type_18, scope_0 );
  __trace.line = 1747;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_19,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_18, ROGUE_ARG(THIS), false, false )))));
  __trace.line = 1748;
  if (!!(result_19))
  {
    return (RogueClassCmd*)(result_19);
  }
  __trace.line = 1750;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_20,(((RogueType__find_global__String( context_type_18, ROGUE_ARG(THIS->name) )))));
  __trace.line = 1751;
  if (!!(p_20))
  {
    __trace.line = 1752;
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    __trace.line = 1753;
    call_ROGUEM89( 25, ROGUE_ARG(THIS->context) );
    __trace.line = 1754;
    return (RogueClassCmd*)(((RogueCmdReadGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_20 )))), scope_0 ))));
  }
  __trace.line = 1757;
  p_20 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_18, ROGUE_ARG(THIS->name) ))));
  __trace.line = 1758;
  if (!!(p_20))
  {
    __trace.line = 1759;
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[428], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    __trace.line = 1760;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_20 ))))));
  }
  __trace.line = 1763;
  if (!(!!(THIS->args)))
  {
    __trace.line = 1764;
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_21,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_18->definition_lookup), ROGUE_ARG(THIS->name) )))));
    __trace.line = 1765;
    if (!!(def_21))
    {
      __trace.line = 1766;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,old_implicit_type_22,(((RogueScope__set_implicit_type__Type( scope_0, context_type_18 )))));
      __trace.line = 1767;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,def_result_23,((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(def_21->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))));
      __trace.line = 1768;
      RogueScope__set_implicit_type__Type( scope_0, old_implicit_type_22 );
      __trace.line = 1769;
      return (RogueClassCmd*)(def_result_23);
    }
  }
  __trace.line = 1773;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_18, ROGUE_ARG(THIS), true, false ))));
}

RogueClassCmd* RogueCmdAccess__resolve_assignment__Scope_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  RogueDebugTrace __trace( "CmdAccess.resolve_assignment(Scope,Cmd)", "Cmd.rogue", 1784 );
  __trace.line = 1785;
  if (!!(THIS->args))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1045] ))));
  }
  __trace.line = 1787;
  RogueLogical explicit_context_2 = (!!(THIS->context));
  __trace.line = 1789;
  RogueCharacter _auto_129_4;
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_3,(((((_auto_129_4=RogueString_character_at(THIS->name,0))==((RogueCharacter)'@'))) ? (((RogueString*)(NULL))) : ((RogueString__operatorPLUS__String( Rogue_literal_strings[415], ROGUE_ARG(THIS->name) ))))));
  __trace.line = 1791;
  RogueLogical context_was_null_5 = (((void*)THIS->context) == ((void*)NULL));
  __trace.line = 1792;
  if (((void*)THIS->context) == ((void*)NULL))
  {
    __trace.line = 1793;
    if (!!(setter_name_3))
    {
      __trace.line = 1794;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, false )))));
      __trace.line = 1795;
      if (!!(setter_6))
      {
        __trace.line = 1796;
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(scope_0->this_method->name), setter_name_3 ))))
        {
          __trace.line = 1797;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1046], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1047] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1048] )))) ))));
        }
        __trace.line = 1799;
        return (RogueClassCmd*)(setter_6);
      }
    }
    __trace.line = 1803;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_7,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
    __trace.line = 1804;
    if ((!!(as_type_7) && ((RogueType__is_singleton( as_type_7 )))))
    {
      __trace.line = 1805;
      return (RogueClassCmd*)(((RogueCmdWriteSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), as_type_7, new_value_1 )))), scope_0 ))));
    }
    __trace.line = 1808;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    __trace.line = 1809;
    if (!!(v_8))
    {
      __trace.line = 1810;
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), v_8, new_value_1 )))), scope_0 ))));
    }
    __trace.line = 1813;
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_9,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
    __trace.line = 1814;
    if ((!(!!(def_9)) && !!(scope_0->_implicit_type)))
    {
      def_9 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
    }
    __trace.line = 1815;
    if (!!(def_9))
    {
      return (RogueClassCmd*)((call_ROGUEM102( 32, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(def_9->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
    }
    __trace.line = 1817;
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueType__find_global__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) )))));
    __trace.line = 1818;
    if (!!(p_10))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_10, new_value_1 )))), scope_0 ))));
    }
    __trace.line = 1820;
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      __trace.line = 1821;
      p_10 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) ))));
      __trace.line = 1822;
      if (!!(p_10))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[507] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[508] )))) )))) ))));
      }
    }
    __trace.line = 1825;
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
  }
  else
  {
    __trace.line = 1827;
    THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  }
  __trace.line = 1830;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_11,((call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ))));
  __trace.line = 1831;
  RogueType__organize__Scope( context_type_11, scope_0 );
  __trace.line = 1833;
  if (!!(setter_name_3))
  {
    __trace.line = 1834;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_12,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, false )))));
    __trace.line = 1835;
    if (!!(setter_12))
    {
      return (RogueClassCmd*)(setter_12);
    }
  }
  __trace.line = 1838;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueType__find_global__String( context_type_11, ROGUE_ARG(THIS->name) )))));
  __trace.line = 1839;
  if (!!(p_13))
  {
    __trace.line = 1840;
    call_ROGUEM89( 25, ROGUE_ARG(THIS->context) );
    __trace.line = 1841;
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_13, new_value_1 )))), scope_0 ))));
  }
  __trace.line = 1844;
  p_13 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_11, ROGUE_ARG(THIS->name) ))));
  __trace.line = 1845;
  if (!!(p_13))
  {
    __trace.line = 1846;
    if ((((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))) && !(explicit_context_2)))
    {
      __trace.line = 1847;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[507] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[508] )))) )))) ))));
    }
    else
    {
      __trace.line = 1849;
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  __trace.line = 1853;
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_14,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_11->definition_lookup), ROGUE_ARG(THIS->name) )))));
  __trace.line = 1854;
  if ((!(!!(def_14)) && !!(scope_0->_implicit_type)))
  {
    def_14 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  __trace.line = 1855;
  if (!!(def_14))
  {
    return (RogueClassCmd*)((call_ROGUEM102( 32, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(def_14->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
  }
  __trace.line = 1857;
  if (!!(setter_name_3))
  {
    __trace.line = 1858;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_15,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), true, false )))));
    __trace.line = 1859;
    if (!!(setter_15))
    {
      return (RogueClassCmd*)(setter_15);
    }
  }
  __trace.line = 1862;
  if ((context_was_null_5 && ((void*)scope_0->_this_type) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global)))
  {
    __trace.line = 1863;
    p_13 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
    __trace.line = 1864;
    if (!!(p_13))
    {
      __trace.line = 1865;
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  __trace.line = 1869;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1049] )))) )))) ))));
}

RogueClassCmd* RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  RogueDebugTrace __trace( "CmdAccess.resolve_modify_and_assign(Scope,TokenType,Cmd)", "Cmd.rogue", 1890 );
  __trace.line = 1891;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_3,0);
  __trace.line = 1893;
  if (!!(THIS->context))
  {
    __trace.line = 1894;
    THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
    __trace.line = 1895;
    context_type_3 = ((RogueClassType*)(call_ROGUEM90( 28, ROGUE_ARG(THIS->context) )));
  }
  else
  {
    __trace.line = 1897;
    if (((void*)THIS->args) == ((void*)NULL))
    {
      __trace.line = 1898;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
      __trace.line = 1899;
      if (!!(v_4))
      {
        __trace.line = 1900;
        if (!!(THIS->args))
        {
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1053] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1054] )))) )))) ))));
        }
        __trace.line = 1901;
        return (RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), v_4, op_1, new_value_2 )))), scope_0 ))));
      }
    }
    __trace.line = 1905;
    context_type_3 = ((RogueClassType*)scope_0->_this_type);
  }
  __trace.line = 1909;
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_5,0);
  __trace.line = 1910;
  if (RogueString_character_at(THIS->name,0) != (RogueCharacter)'@')
  {
    __trace.line = 1911;
    setter_name_5 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[415], ROGUE_ARG(THIS->name) ))));
    __trace.line = 1912;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), false, false )))));
    __trace.line = 1913;
    if (!!(setter_6))
    {
      __trace.line = 1914;
      return (RogueClassCmd*)((call_ROGUEM81( 31, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  __trace.line = 1918;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueType__find_global__String( context_type_3, ROGUE_ARG(THIS->name) )))));
  __trace.line = 1919;
  if (!!(p_7))
  {
    __trace.line = 1920;
    if (!!(THIS->context))
    {
      call_ROGUEM89( 25, ROGUE_ARG(THIS->context) );
    }
    __trace.line = 1921;
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  __trace.line = 1924;
  p_7 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_3, ROGUE_ARG(THIS->name) ))));
  __trace.line = 1925;
  if (!!(p_7))
  {
    __trace.line = 1926;
    if (!(!!(THIS->context)))
    {
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), context_type_3 )))));
    }
    __trace.line = 1927;
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      __trace.line = 1928;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[507] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[508] )))) )))) ))));
    }
    __trace.line = 1930;
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  __trace.line = 1933;
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_8,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_3->definition_lookup), ROGUE_ARG(THIS->name) )))));
  __trace.line = 1934;
  if ((!(!!(def_8)) && !!(scope_0->_implicit_type)))
  {
    def_8 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  __trace.line = 1935;
  if (!!(def_8))
  {
    return (RogueClassCmd*)((call_ROGUEM103( 34, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(def_8->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, op_1, new_value_2 )));
  }
  __trace.line = 1937;
  if (!!(setter_name_5))
  {
    __trace.line = 1938;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_9,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), true, false )))));
    __trace.line = 1939;
    if (!!(setter_9))
    {
      return (RogueClassCmd*)((call_ROGUEM81( 31, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  __trace.line = 1942;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1049] )))) )))) ))));
}

RogueClassType* Rogue_CmdAccess__type( RogueClassCmdAccess* THIS )
{
  RogueDebugTrace __trace( "CmdAccess.type()", "Cmd.rogue", 1944 );
  __trace.line = 1945;
  ROGUE_DEF_LOCAL_REF(RogueClassRogueError*,err_0,(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1058] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1059] )))) )))) )))));
  __trace.line = 1947;
  ROGUE_THROW(err_0);
}

void RogueCmdAccess__write_cpp__CPPWriter_Logical( RogueClassCmdAccess* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAccess.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2124 );
  __trace.line = 2125;
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  __trace.line = 2126;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1063] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[401] )))) )))) ))));
}

RogueClassCmdAccess* RogueCmdAccess__init_object( RogueClassCmdAccess* THIS )
{
  RogueDebugTrace __trace( "CmdAccess.init_object()", "Cmd.rogue", 1547 );
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_130_0, RogueString* _auto_131_1 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,String)", "Cmd.rogue", 1556 );
  THIS->name = _auto_131_1;
  THIS->t = _auto_130_0;
  __trace.line = 1558;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_132_0, RogueString* _auto_133_1, RogueClassCmdArgs* _auto_134_2 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,String,CmdArgs)", "Cmd.rogue", 1558 );
  THIS->args = _auto_134_2;
  THIS->name = _auto_133_1;
  THIS->t = _auto_132_0;
  __trace.line = 1560;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_135_0, RogueString* _auto_136_1, RogueClassCmdArgs* _auto_137_2, RogueCmdNamedArg_List* _auto_138_3 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,String,CmdArgs,CmdNamedArg[])", "Cmd.rogue", 1560 );
  THIS->named_args = _auto_138_3;
  THIS->args = _auto_137_2;
  THIS->name = _auto_136_1;
  THIS->t = _auto_135_0;
  __trace.line = 1562;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_139_0, RogueClassCmd* _auto_140_1, RogueString* _auto_141_2 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,Cmd,String)", "Cmd.rogue", 1562 );
  THIS->name = _auto_141_2;
  THIS->context = _auto_140_1;
  THIS->t = _auto_139_0;
  __trace.line = 1564;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_142_0, RogueClassCmd* _auto_143_1, RogueString* _auto_144_2, RogueClassCmdArgs* _auto_145_3 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,Cmd,String,CmdArgs)", "Cmd.rogue", 1564 );
  THIS->args = _auto_145_3;
  THIS->name = _auto_144_2;
  THIS->context = _auto_143_1;
  THIS->t = _auto_142_0;
  __trace.line = 1566;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_146_0, RogueClassCmd* _auto_147_1, RogueString* _auto_148_2, RogueClassCmdArgs* _auto_149_3, RogueCmdNamedArg_List* _auto_150_4 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,Cmd,String,CmdArgs,CmdNamedArg[])", "Cmd.rogue", 1566 );
  THIS->named_args = _auto_150_4;
  THIS->args = _auto_149_3;
  THIS->name = _auto_148_2;
  THIS->context = _auto_147_1;
  THIS->t = _auto_146_0;
  __trace.line = 1568;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_Cmd( RogueClassCmdAccess* THIS, RogueClassToken* _auto_151_0, RogueClassCmd* _auto_152_1, RogueString* _auto_153_2, RogueClassCmd* arg_3 )
{
  RogueDebugTrace __trace( "CmdAccess.init(Token,Cmd,String,Cmd)", "Cmd.rogue", 1568 );
  THIS->name = _auto_153_2;
  THIS->context = _auto_152_1;
  THIS->t = _auto_151_0;
  __trace.line = 1569;
  THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  __trace.line = 1570;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), arg_3 );
  __trace.line = 1572;
  return (RogueClassCmdAccess*)(THIS);
}

void RogueCmdAccess__check_for_recursive_getter__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAccess.check_for_recursive_getter(Scope)", "Cmd.rogue", 1776 );
  __trace.line = 1777;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,this_type_1,(scope_0->_this_type));
  __trace.line = 1778;
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(THIS->name), ROGUE_ARG(scope_0->this_method->name) ))) != 0)
  {
    return;
  }
  __trace.line = 1779;
  if ((!!(THIS->args) && THIS->args->count > 0))
  {
    return;
  }
  __trace.line = 1780;
  if (!((!!(((RogueType__find_property__String( this_type_1, ROGUE_ARG(THIS->name) )))) || !!(((RogueType__find_global__String( this_type_1, ROGUE_ARG(THIS->name) )))))))
  {
    return;
  }
  __trace.line = 1782;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[504], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[505] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[506] )))) ))));
}

RogueClassCmd* RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  RogueDebugTrace __trace( "CmdAccess.expand_modify_and_assign(Scope,TokenType,Cmd)", "Cmd.rogue", 1871 );
  __trace.line = 1872;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_3,0);
  __trace.line = 1873;
  {
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_ampersand_equals))) ))))
    {
      __trace.line = 1874;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      __trace.line = 1875;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      __trace.line = 1876;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(THIS->name), new_value_2 ))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_minus_equals))) ))))
    {
      __trace.line = 1877;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      __trace.line = 1878;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_plus_equals))) ))))
    {
      __trace.line = 1879;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_slash_equals))) ))))
    {
      __trace.line = 1880;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_tilde_equals))) ))))
    {
      __trace.line = 1881;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_times_equals))) ))))
    {
      __trace.line = 1882;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_vertical_bar_equals))) ))))
    {
      __trace.line = 1883;
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else
    {
      __trace.line = 1885;
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1055] )))) )))) );
      __trace.line = 1886;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1056] ))));
    }
  }
  __trace.line = 1888;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdAccess__clone__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), cmd_3 ))))));
}

RogueString* RogueCmd__type_name( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.type_name()", "Cmd.rogue", 5 );
  return (RogueString*)(Rogue_literal_strings[341]);
}

void RogueCmd__add_to__CmdStatementList( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Cmd.add_to(CmdStatementList)", "Cmd.rogue", 10 );
  __trace.line = 11;
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmd__call_prior__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Cmd.call_prior(Scope)", "Cmd.rogue", 13 );
  __trace.line = 14;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1008] ))));
}

RogueClassCmd* RogueCmd__cast_to__Type_Scope( RogueClassCmd* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "Cmd.cast_to(Type,Scope)", "Cmd.rogue", 16 );
  __trace.line = 17;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,this_type_2,((call_ROGUEM90( 28, ROGUE_ARG(THIS) ))));
  __trace.line = 18;
  if (((void*)this_type_2) == ((void*)target_type_0))
  {
    return (RogueClassCmd*)(THIS);
  }
  __trace.line = 21;
  RogueType__organize__Scope( this_type_2, scope_1 );
  __trace.line = 22;
  RogueType__organize__Scope( target_type_0, scope_1 );
  __trace.line = 24;
  if ((((RogueType__instance_of__Type( this_type_2, target_type_0 ))) || ((RogueType__instance_of__Type( target_type_0, this_type_2 )))))
  {
    __trace.line = 25;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_0 ))))))));
  }
  else
  {
    __trace.line = 27;
    if ((((RogueType__is_primitive( this_type_2 ))) && ((RogueType__is_primitive( target_type_0 )))))
    {
      __trace.line = 28;
      if (!((((void*)this_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) || ((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))))
      {
        __trace.line = 29;
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_0 ))))))));
      }
    }
    __trace.line = 33;
    ROGUE_DEF_LOCAL_REF(RogueString*,m_name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[352], ROGUE_ARG(target_type_0->name) )))));
    __trace.line = 34;
    if (((RogueType__has_method_named__String( this_type_2, m_name_3 ))))
    {
      __trace.line = 35;
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), m_name_3 ))))));
    }
    __trace.line = 38;
    if ((!!(((RogueType__find_method__String( target_type_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[474] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[34] )))) )))) )))) || !!(((RogueType__find_global_method__String( target_type_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[475] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[34] )))) )))) ))))))
    {
      __trace.line = 40;
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(target_type_0->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) )))), scope_1 ))));
    }
    __trace.line = 43;
    if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) ))))))));
    }
    __trace.line = 45;
    if (target_type_0->is_optional)
    {
      __trace.line = 46;
      if (((void*)this_type_2) == ((void*)target_type_0->_element_type))
      {
        __trace.line = 47;
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[242] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) ))))));
      }
      else if (((void*)this_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
      {
        __trace.line = 49;
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_2->name) )))) )))), Rogue_literal_strings[242] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
      }
    }
    __trace.line = 53;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[305] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(this_type_2))) )))) )))), Rogue_literal_strings[512] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(target_type_0))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
}

RogueClassCmd* RogueCmd__clone__CloneArgs( RogueClassCmd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "Cmd.clone(CloneArgs)", "Cmd.rogue", 57 );
  __trace.line = 58;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[342] )))) )))) ))));
}

RogueClassCmd* RogueCmd__clone__Cmd_CloneArgs( RogueClassCmd* THIS, RogueClassCmd* other_0, RogueClassCloneArgs* clone_args_1 )
{
  RogueDebugTrace __trace( "Cmd.clone(Cmd,CloneArgs)", "Cmd.rogue", 60 );
  __trace.line = 61;
  if (!!(other_0))
  {
    return (RogueClassCmd*)((call_ROGUEM99( 10, other_0, clone_args_1 )));
  }
  __trace.line = 62;
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueClassCmdArgs* RogueCmd__clone__CmdArgs_CloneArgs( RogueClassCmd* THIS, RogueClassCmdArgs* args_0, RogueClassCloneArgs* clone_args_1 )
{
  RogueDebugTrace __trace( "Cmd.clone(CmdArgs,CloneArgs)", "Cmd.rogue", 64 );
  __trace.line = 65;
  if (!!(args_0))
  {
    return (RogueClassCmdArgs*)(((RogueCmdArgs__clone__CloneArgs( args_0, clone_args_1 ))));
  }
  __trace.line = 66;
  return (RogueClassCmdArgs*)(((RogueClassCmdArgs*)(NULL)));
}

RogueClassCmdStatementList* RogueCmd__clone__CmdStatementList_CloneArgs( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0, RogueClassCloneArgs* clone_args_1 )
{
  RogueDebugTrace __trace( "Cmd.clone(CmdStatementList,CloneArgs)", "Cmd.rogue", 68 );
  __trace.line = 69;
  if (!!(statements_0))
  {
    return (RogueClassCmdStatementList*)(((RogueCmdStatementList__clone__CloneArgs( statements_0, clone_args_1 ))));
  }
  __trace.line = 70;
  return (RogueClassCmdStatementList*)(((RogueClassCmdStatementList*)(NULL)));
}

RogueClassCmd* RogueCmd__combine_literal_operands__Type( RogueClassCmd* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "Cmd.combine_literal_operands(Type)", "Cmd.rogue", 72 );
  __trace.line = 73;
  return (RogueClassCmd*)(THIS);
}

void RogueCmd__dispatch__Visitor( RogueClassCmd* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "Cmd.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(THIS) );
}

void RogueCmd__exit_scope__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Cmd.exit_scope(Scope)", "Cmd.rogue", 81 );
}

RogueClassType* RogueCmd__find_operation_result_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  RogueDebugTrace __trace( "Cmd.find_operation_result_type(Type,Type)", "Cmd.rogue", 83 );
  __trace.line = 84;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  __trace.line = 85;
  if (!(!!(result_2)))
  {
    return (RogueClassType*)(left_type_0);
  }
  __trace.line = 87;
  if (((void*)result_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
  }
  __trace.line = 88;
  return (RogueClassType*)(result_2);
}

RogueClassType* RogueCmd__find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  RogueDebugTrace __trace( "Cmd.find_common_type(Type,Type)", "Cmd.rogue", 90 );
  __trace.line = 91;
  if (((void*)left_type_0) == ((void*)NULL))
  {
    return (RogueClassType*)(right_type_1);
  }
  __trace.line = 92;
  if (((void*)right_type_1) == ((void*)NULL))
  {
    return (RogueClassType*)(left_type_0);
  }
  __trace.line = 94;
  if (((void*)left_type_0) == ((void*)right_type_1))
  {
    return (RogueClassType*)(left_type_0);
  }
  __trace.line = 96;
  if (((RogueType__is_primitive( left_type_0 ))))
  {
    __trace.line = 97;
    if (((RogueType__is_primitive( right_type_1 ))))
    {
      __trace.line = 98;
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
      }
      __trace.line = 99;
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32);
      }
      __trace.line = 100;
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
      }
      __trace.line = 101;
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
      }
      __trace.line = 102;
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
      }
    }
  }
  __trace.line = 106;
  if (((RogueType__instance_of__Type( left_type_0, right_type_1 ))))
  {
    return (RogueClassType*)(right_type_1);
  }
  __trace.line = 107;
  if (((RogueType__instance_of__Type( right_type_1, left_type_0 ))))
  {
    return (RogueClassType*)(left_type_0);
  }
  __trace.line = 109;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__generates_output( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.generates_output()", "Cmd.rogue", 111 );
  __trace.line = 112;
  return (RogueLogical)(true);
}

RogueLogical RogueCmd__is_generic_function( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.is_generic_function()", "Cmd.rogue", 114 );
  __trace.line = 115;
  return (RogueLogical)(false);
}

RogueClassType* RogueCmd__must_find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  RogueDebugTrace __trace( "Cmd.must_find_common_type(Type,Type)", "Cmd.rogue", 117 );
  __trace.line = 118;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  __trace.line = 119;
  if (!!(common_type_2))
  {
    return (RogueClassType*)(common_type_2);
  }
  __trace.line = 120;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1009] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_0))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_1))) )))) )))), Rogue_literal_strings[1010] )))) )))) ))));
}

RogueClassType* RogueCmd__implicit_type__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Cmd.implicit_type(Scope)", "Cmd.rogue", 122 );
  __trace.line = 123;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__is_literal( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.is_literal()", "Cmd.rogue", 125 );
  __trace.line = 126;
  return (RogueLogical)(false);
}

void RogueCmd__require_type_context( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.require_type_context()", "Cmd.rogue", 128 );
  __trace.line = 129;
  if (!!((call_ROGUEM90( 36, ROGUE_ARG(THIS) ))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[497] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM90( 36, ROGUE_ARG(THIS) ))))) )))) )))), Rogue_literal_strings[498] )))) )))) ))));
  }
  else
  {
    __trace.line = 130;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[499] ))));
  }
}

RogueClassCmd* RogueCmd__require_integer( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.require_integer()", "Cmd.rogue", 132 );
  __trace.line = 133;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,_type_0,((call_ROGUEM90( 36, ROGUE_ARG(THIS) ))));
  __trace.line = 134;
  if ((((void*)_type_0) == ((void*)NULL) || ((void*)_type_0) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    __trace.line = 135;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[482] ))));
  }
  __trace.line = 137;
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__require_logical__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Cmd.require_logical(Scope)", "Cmd.rogue", 139 );
  __trace.line = 140;
  if (((void*)(call_ROGUEM90( 28, ROGUE_ARG(THIS) ))) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    __trace.line = 141;
    return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))), scope_0 ))));
  }
  __trace.line = 143;
  return (RogueClassCmd*)(THIS);
}

RogueClassType* Rogue_Cmd__require_type( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.require_type()", "Cmd.rogue", 145 );
  __trace.line = 146;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((call_ROGUEM90( 36, ROGUE_ARG(THIS) ))));
  __trace.line = 147;
  if (((void*)result_0) == ((void*)NULL))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[473] ))));
  }
  __trace.line = 148;
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmd__require_value( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.require_value()", "Cmd.rogue", 150 );
  __trace.line = 151;
  call_ROGUEM90( 28, ROGUE_ARG(THIS) );
  __trace.line = 152;
  return (RogueClassCmd*)(THIS);
}

RogueLogical RogueCmd__requires_semicolon( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.requires_semicolon()", "Cmd.rogue", 154 );
  __trace.line = 155;
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmd__resolve__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "Cmd.resolve(Scope)", "Cmd.rogue", 157 );
  __trace.line = 158;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[468] )))) )))) ))));
  __trace.line = 159;
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__resolve_assignment__Scope_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  RogueDebugTrace __trace( "Cmd.resolve_assignment(Scope,Cmd)", "Cmd.rogue", 161 );
  __trace.line = 162;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[980] ))));
}

RogueClassCmd* RogueCmd__resolve_adjust__Scope_Int32( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "Cmd.resolve_adjust(Scope,Int32)", "Cmd.rogue", 164 );
  __trace.line = 165;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1034] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[34] )))) )))) ))));
}

RogueClassCmd* RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  RogueDebugTrace __trace( "Cmd.resolve_modify_and_assign(Scope,TokenType,Cmd)", "Cmd.rogue", 167 );
  __trace.line = 168;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[980] ))));
}

RogueClassType* Rogue_Cmd__type( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.type()", "Cmd.rogue", 173 );
  __trace.line = 174;
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  __trace.line = 175;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[472] )))) )))) ))));
}

void RogueCmd__write_cpp__CPPWriter_Logical( RogueClassCmd* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "Cmd.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1740 );
  __trace.line = 1741;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[694] )))) )))) ))));
}

RogueClassCmd* RogueCmd__init_object( RogueClassCmd* THIS )
{
  RogueDebugTrace __trace( "Cmd.init_object()", "Cmd.rogue", 5 );
  return (RogueClassCmd*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init( RogueClassCmdArgs* THIS )
{
  RogueDebugTrace __trace( "CmdArgs.init()", "Cmd.rogue", 262 );
  __trace.line = 263;
  RogueCmd_List__init( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  __trace.line = 265;
  return (RogueClassCmdArgs*)(THIS);
}

RogueString* RogueCmdArgs__type_name( RogueClassCmdArgs* THIS )
{
  RogueDebugTrace __trace( "CmdArgs.type_name()", "Cmd.rogue", 260 );
  return (RogueString*)(Rogue_literal_strings[1130]);
}

RogueClassCmdArgs* RogueCmdArgs__init_object( RogueClassCmdArgs* THIS )
{
  RogueDebugTrace __trace( "CmdArgs.init_object()", "Cmd.rogue", 260 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Int32( RogueClassCmdArgs* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdArgs.init(Int32)", "Cmd.rogue", 265 );
  __trace.line = 266;
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  __trace.line = 268;
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg_0 )
{
  RogueDebugTrace __trace( "CmdArgs.init(Cmd)", "Cmd.rogue", 268 );
  __trace.line = 269;
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  __trace.line = 270;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg_0 );
  __trace.line = 272;
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1 )
{
  RogueDebugTrace __trace( "CmdArgs.init(Cmd,Cmd)", "Cmd.rogue", 272 );
  __trace.line = 273;
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  __trace.line = 274;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 );
  __trace.line = 276;
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1, RogueClassCmd* arg3_2 )
{
  RogueDebugTrace __trace( "CmdArgs.init(Cmd,Cmd,Cmd)", "Cmd.rogue", 276 );
  __trace.line = 277;
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  __trace.line = 278;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 )))), arg3_2 );
  __trace.line = 280;
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__clone__CloneArgs( RogueClassCmdArgs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdArgs.clone(CloneArgs)", "Cmd.rogue", 280 );
  __trace.line = 281;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,result_1,(((RogueCmdArgs__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->count) )))));
  __trace.line = 282;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1317_2,(THIS));
    RogueInt32 _auto_1318_3 = (0);
    for (;_auto_1318_3 < _auto_1317_2->count;++_auto_1318_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_1317_2->data->objects[_auto_1318_3]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), ROGUE_ARG((call_ROGUEM99( 10, cmd_4, clone_args_0 ))) );
    }
  }
  __trace.line = 283;
  return (RogueClassCmdArgs*)(result_1);
}

void RogueCmdArgs__dispatch__Visitor( RogueClassCmdArgs* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdArgs.dispatch(Visitor)", "Cmd.rogue", 285 );
  __trace.line = 286;
  RogueVisitor__visit__CmdArgs( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdArgs__resolve__Scope( RogueClassCmdArgs* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdArgs.resolve(Scope)", "Cmd.rogue", 288 );
  __trace.line = 289;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1319_2,(THIS));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_1319_2->count;++i_3)
    {
      __trace.line = 290;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,((call_ROGUEM81( 31, ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[i_3]))), scope_0 ))));
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->data->objects[i_3] = arg_1;
      __trace.filename = "Cmd.rogue";
      __trace.line = 292;
      RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, arg_1 ))), scope_0 );
    }
  }
}

RogueCmd_List* RogueCmd_List__init( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].init()", "List.rogue", 10 );
  __trace.line = 11;
  call_ROGUEM111( 8, ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmd_List*)(THIS);
}

RogueString* RogueCmd_List__to_String( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_1284_2,(THIS));
    RogueInt32 _auto_1285_3 = (0);
    for (;_auto_1285_3 < _auto_1284_2->count;++_auto_1285_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,(((RogueClassCmd*)(_auto_1284_2->data->objects[_auto_1285_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmd_List__type_name( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[818]);
}

RogueCmd_List* RogueCmd_List__init_object( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].init_object()", "List.rogue", 4 );
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__init__Int32( RogueCmd_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Cmd[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmd*), true );
  }
  __trace.line = 16;
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd( RogueCmd_List* THIS, RogueClassCmd* value_0 )
{
  RogueDebugTrace __trace( "Cmd[].add(Cmd)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd_List( RogueCmd_List* THIS, RogueCmd_List* other_0 )
{
  RogueDebugTrace __trace( "Cmd[].add(Cmd[])", "List.rogue", 41 );
  __trace.line = 42;
  RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  __trace.line = 43;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_1290_1,(other_0));
    RogueInt32 _auto_1291_2 = (0);
    for (;_auto_1291_2 < _auto_1290_1->count;++_auto_1291_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,(((RogueClassCmd*)(_auto_1290_1->data->objects[_auto_1291_2]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_3 );
    }
  }
  __trace.line = 44;
  return (RogueCmd_List*)(THIS);
}

RogueInt32 RogueCmd_List__capacity( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmd_List* RogueCmd_List__clear( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueCmd_List*)(THIS);
}

void RogueCmd_List__discard__Int32_Int32( RogueCmd_List* THIS, RogueInt32 i1_0, RogueInt32 n_1 )
{
  RogueDebugTrace __trace( "Cmd[].discard(Int32,Int32)", "List.rogue", 81 );
  __trace.line = 82;
  RogueInt32 i2_2 = ((i1_0 + n_1));
  __trace.line = 83;
  RogueArray_set(THIS->data,i1_0,((RogueArray*)(THIS->data)),i2_2,(THIS->count - i2_2));
  __trace.line = 84;
  RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - n_1)) );
}

void RogueCmd_List__discard_from__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Cmd[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueCmd_List* RogueCmd_List__insert__Cmd_Int32( RogueCmd_List* THIS, RogueClassCmd* value_0, RogueInt32 before_index_1 )
{
  RogueDebugTrace __trace( "Cmd[].insert(Cmd,Int32)", "List.rogue", 116 );
  __trace.line = 117;
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  __trace.line = 119;
  if (before_index_1 >= THIS->count)
  {
    __trace.line = 120;
    return (RogueCmd_List*)(((RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    __trace.line = 122;
    RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    __trace.line = 125;
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    __trace.line = 126;
    ++THIS->count;
    __trace.line = 129;
    THIS->data->objects[before_index_1] = value_0;
  }
  __trace.line = 131;
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__last( RogueCmd_List* THIS )
{
  RogueDebugTrace __trace( "Cmd[].last()", "List.rogue", 157 );
  __trace.line = 158;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueCmd_List* RogueCmd_List__reserve__Int32( RogueCmd_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Cmd[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmd_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__remove_at__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Cmd[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassCmd*)(result_1);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueString* RogueCmdNamedArg_List__to_String( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1320_2,(THIS));
    RogueInt32 _auto_1321_3 = (0);
    for (;_auto_1321_3 < _auto_1320_2->count;++_auto_1321_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueClassCmdNamedArg*)(_auto_1320_2->data->objects[_auto_1321_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdNamedArg_List__type_name( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[819]);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init_object( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].init_object()", "List.rogue", 4 );
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdNamedArg*), true );
  }
  __trace.line = 16;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__add__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].add(CmdNamedArg)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueInt32 RogueCmdNamedArg_List__capacity( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

void RogueCmdNamedArg_List__discard_from__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueOptionalInt32 RogueCmdNamedArg_List__locate__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].locate(CmdNamedArg)", "List.rogue", 160 );
  __trace.line = 161;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1341_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_1341_1->count;++i_2)
    {
      __trace.line = 162;
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassCmdNamedArg*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  __trace.line = 164;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueClassListRebuilder_CmdNamedArg_* RogueCmdNamedArg_List__rebuilder( RogueCmdNamedArg_List* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg[].rebuilder()", "List.rogue", 229 );
  __trace.line = 230;
  return (RogueClassListRebuilder_CmdNamedArg_*)(((RogueListRebuilder_CmdNamedArg___init__CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRebuilder_CmdNamedArg_*,ROGUE_CREATE_OBJECT(ListRebuilder_CmdNamedArg_))), ROGUE_ARG(THIS) ))));
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__reserve__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].remove(CmdNamedArg)", "List.rogue", 255 );
  __trace.line = 256;
  RogueOptionalInt32 index_1 = (((RogueCmdNamedArg_List__locate__CmdNamedArg( ROGUE_ARG(THIS), value_0 ))));
  __trace.line = 257;
  if (index_1.exists)
  {
    __trace.line = 258;
    return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    __trace.line = 260;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_2,0);
    __trace.line = 261;
    return (RogueClassCmdNamedArg*)(zero_value_2);
  }
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_RETURNSLogical* fn_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].remove(Function(CmdNamedArg)->Logical)", "List.rogue", 264 );
  __trace.line = 267;
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,result_1,(((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) )))));
  __trace.line = 268;
  ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_CmdNamedArg_*,rewriter_2,(((RogueCmdNamedArg_List__rebuilder( ROGUE_ARG(THIS) )))));
  __trace.line = 269;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_CmdNamedArg_*,_auto_1347_3,(rewriter_2));
    while (((RogueListRebuilder_CmdNamedArg___has_another( _auto_1347_3 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueListRebuilder_CmdNamedArg___read( _auto_1347_3 )))));
      __trace.line = 270;
      if ((call_ROGUEM808( 7, fn_0, value_4 )))
      {
        RogueCmdNamedArg_List__add__CmdNamedArg( result_1, value_4 );
      }
      else
      {
        __trace.line = 271;
        RogueListRebuilder_CmdNamedArg___write__CmdNamedArg( rewriter_2, value_4 );
      }
    }
  }
  __trace.line = 273;
  return (RogueCmdNamedArg_List*)(result_1);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove_at__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,result_1,(((RogueClassCmdNamedArg*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassCmdNamedArg*)(result_1);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg[].sort(Function(CmdNamedArg,CmdNamedArg)->Logical)", "List.rogue", 338 );
  __trace.line = 339;
  return (RogueCmdNamedArg_List*)((RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( ROGUE_ARG(THIS), compare_fn_0 )));
}

RogueString* RogueCmdNamedArg__type_name( RogueClassCmdNamedArg* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg.type_name()", "Cmd.rogue", 1521 );
  return (RogueString*)(Rogue_literal_strings[918]);
}

RogueClassCmdNamedArg* RogueCmdNamedArg__clone__CloneArgs( RogueClassCmdNamedArg* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg.clone(CloneArgs)", "Cmd.rogue", 1531 );
  __trace.line = 1532;
  return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->is_negative) ))));
}

void RogueCmdNamedArg__dispatch__Visitor( RogueClassCmdNamedArg* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNamedArg.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdNamedArg( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init_object( RogueClassCmdNamedArg* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg.init_object()", "Cmd.rogue", 1521 );
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init__Token_String_Cmd_Logical( RogueClassCmdNamedArg* THIS, RogueClassToken* _auto_158_0, RogueString* _auto_159_1, RogueClassCmd* _auto_160_2, RogueLogical _auto_161_3 )
{
  RogueDebugTrace __trace( "CmdNamedArg.init(Token,String,Cmd,Logical)", "Cmd.rogue", 1529 );
  THIS->is_negative = _auto_161_3;
  THIS->value = _auto_160_2;
  THIS->name = _auto_159_1;
  THIS->t = _auto_158_0;
  __trace.line = 1531;
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueClassCmd* RogueCmdNamedArg__to_value( RogueClassCmdNamedArg* THIS )
{
  RogueDebugTrace __trace( "CmdNamedArg.to_value()", "Cmd.rogue", 1534 );
  __trace.line = 1535;
  if (!!(THIS->value))
  {
    __trace.line = 1536;
    if (THIS->is_negative)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[491] ))));
    }
    __trace.line = 1537;
    return (RogueClassCmd*)(THIS->value);
  }
  else if (THIS->is_negative)
  {
    __trace.line = 1539;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
  else
  {
    __trace.line = 1540;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), true ))))));
  }
}

RogueClassCmdStatementList* RogueCmdStatementList__init( RogueClassCmdStatementList* THIS )
{
  RogueDebugTrace __trace( "CmdStatementList.init()", "Cmd.rogue", 187 );
  __trace.line = 188;
  RogueCmd_List__init( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  __trace.line = 190;
  return (RogueClassCmdStatementList*)(THIS);
}

RogueString* RogueCmdStatementList__type_name( RogueClassCmdStatementList* THIS )
{
  RogueDebugTrace __trace( "CmdStatementList.type_name()", "Cmd.rogue", 182 );
  return (RogueString*)(Rogue_literal_strings[1131]);
}

RogueClassCmdStatementList* RogueCmdStatementList__init_object( RogueClassCmdStatementList* THIS )
{
  RogueDebugTrace __trace( "CmdStatementList.init_object()", "Cmd.rogue", 182 );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Int32( RogueClassCmdStatementList* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdStatementList.init(Int32)", "Cmd.rogue", 190 );
  __trace.line = 191;
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  __trace.line = 193;
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Cmd( RogueClassCmdStatementList* THIS, RogueClassCmd* statement_0 )
{
  RogueDebugTrace __trace( "CmdStatementList.init(Cmd)", "Cmd.rogue", 193 );
  __trace.line = 194;
  RogueCmdStatementList__init( ROGUE_ARG(THIS) );
  __trace.line = 195;
  if (!!(statement_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), statement_0 );
  }
  __trace.line = 197;
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__clone__CloneArgs( RogueClassCmdStatementList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdStatementList.clone(CloneArgs)", "Cmd.rogue", 210 );
  __trace.line = 211;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_1,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
  __trace.line = 212;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1353_2,(THIS));
    RogueInt32 _auto_1354_3 = (0);
    for (;_auto_1354_3 < _auto_1353_2->count;++_auto_1354_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_1353_2->data->objects[_auto_1354_3]))));
      __trace.line = 213;
      cmd_4 = ((RogueClassCmd*)(call_ROGUEM99( 10, cmd_4, clone_args_0 )));
      __trace.line = 214;
      if (!!(cmd_4))
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), cmd_4 );
      }
    }
  }
  __trace.line = 216;
  return (RogueClassCmdStatementList*)(result_1);
}

void RogueCmdStatementList__dispatch__Visitor( RogueClassCmdStatementList* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdStatementList.dispatch(Visitor)", "Cmd.rogue", 218 );
  __trace.line = 219;
  RogueVisitor__visit__CmdStatementList( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdStatementList__resolve__Scope_Logical( RogueClassCmdStatementList* THIS, RogueClassScope* scope_0, RogueLogical use_separate_results_list_1 )
{
  RogueDebugTrace __trace( "CmdStatementList.resolve(Scope,Logical)", "Cmd.rogue", 221 );
  __trace.line = 222;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,original_body_2,(scope_0->this_body));
  __trace.line = 223;
  scope_0->this_body = THIS;
  __trace.line = 225;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,original_statement_3,(scope_0->this_statement));
  __trace.line = 227;
  if (use_separate_results_list_1)
  {
    __trace.line = 231;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_4,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
    __trace.line = 232;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1355_9,(THIS));
      RogueInt32 _auto_1356_10 = (0);
      for (;_auto_1356_10 < _auto_1355_9->count;++_auto_1356_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,(((RogueClassCmd*)(_auto_1355_9->data->objects[_auto_1356_10]))));
        __trace.line = 233;
        scope_0->this_statement = cmd_11;
        __trace.line = 234;
        call_ROGUEM80( 7, ROGUE_ARG((call_ROGUEM81( 31, cmd_11, scope_0 ))), result_4 );
      }
    }
    __trace.line = 236;
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List__clear( ROGUE_ARG(((RogueCmd_List*)THIS)) )))), ROGUE_ARG(((RogueCmd_List*)(result_4))) );
  }
  else
  {
    __trace.line = 238;
    RogueInt32 n_5 = (THIS->count);
    __trace.line = 239;
    {
      RogueInt32 i_6 = (0);
      RogueInt32 _auto_166_7 = ((n_5 - 1));
      for (;i_6 <= _auto_166_7;++i_6)
      {
        __trace.line = 240;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_8,(((RogueClassCmd*)(THIS->data->objects[i_6]))));
        __trace.line = 241;
        scope_0->this_statement = cmd_8;
        __trace.line = 242;
        call_ROGUEM80( 7, ROGUE_ARG((call_ROGUEM81( 31, cmd_8, scope_0 ))), ROGUE_ARG(THIS) );
      }
    }
    __trace.line = 244;
    RogueCmd_List__discard__Int32_Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), 0, n_5 );
  }
  __trace.line = 247;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1357_12,(THIS));
    RogueInt32 _auto_1358_13 = (0);
    for (;_auto_1358_13 < _auto_1357_12->count;++_auto_1358_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_14,(((RogueClassCmd*)(_auto_1357_12->data->objects[_auto_1358_13]))));
      call_ROGUEM86( 17, statement_14, scope_0 );
    }
  }
  __trace.line = 249;
  scope_0->this_statement = original_statement_3;
  __trace.line = 250;
  scope_0->this_body = original_body_2;
}

void RogueCmdStatementList__trace_used_code( RogueClassCmdStatementList* THIS )
{
  RogueDebugTrace __trace( "CmdStatementList.trace_used_code()", "Cmd.rogue", 252 );
  __trace.line = 253;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassVisitor*)(((RogueClassTraceUsedCodeVisitor*)ROGUE_SINGLETON(TraceUsedCodeVisitor))))) );
}

void RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( RogueClassCmdStatementList* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1, RogueLogical skip_trace_update_2 )
{
  RogueDebugTrace __trace( "CmdStatementList.write_cpp(CPPWriter,Logical,Logical)", "CPPWriter.rogue", 1746 );
  __trace.line = 1747;
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_start__String_Int32_Int32( writer_0, ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[0]))->t->filepath), ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[0]))->t->line), ROGUE_ARG(((RogueClassCmd*)(THIS->data->objects[(THIS->count - 1)]))->t->line) );
  }
  __trace.line = 1748;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1359_3,(THIS));
    RogueInt32 _auto_1360_4 = (0);
    for (;_auto_1360_4 < _auto_1359_3->count;++_auto_1360_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_1359_3->data->objects[_auto_1360_4]))));
      __trace.line = 1749;
      if ((!(skip_trace_update_2) && (call_ROGUEM87( 20, statement_5 ))))
      {
        RogueCPPWriter__update_trace_info__Token( writer_0, ROGUE_ARG(statement_5->t) );
      }
      __trace.line = 1750;
      call_ROGUEM104( 37, statement_5, writer_0, true );
      __trace.line = 1751;
      if ((call_ROGUEM87( 30, statement_5 )))
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
      }
    }
  }
  __trace.line = 1753;
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_end( writer_0 );
  }
}

RogueString* RogueCmdLabel__type_name( RogueClassCmdLabel* THIS )
{
  RogueDebugTrace __trace( "CmdLabel.type_name()", "Cmd.rogue", 4351 );
  return (RogueString*)(Rogue_literal_strings[919]);
}

RogueClassCmdLabel* RogueCmdLabel__clone__CloneArgs( RogueClassCmdLabel* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLabel.clone(CloneArgs)", "Cmd.rogue", 4360 );
  __trace.line = 4361;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,result_1,(((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) )))));
  __trace.line = 4362;
  if (!!(clone_args_0))
  {
    call_ROGUEM241( 7, clone_args_0, result_1 );
  }
  __trace.line = 4363;
  return (RogueClassCmdLabel*)(result_1);
}

void RogueCmdLabel__dispatch__Visitor( RogueClassCmdLabel* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLabel.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLabel( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdLabel__generates_output( RogueClassCmdLabel* THIS )
{
  RogueDebugTrace __trace( "CmdLabel.generates_output()", "Cmd.rogue", 4365 );
  __trace.line = 4366;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1361_0,(THIS->statements));
    RogueInt32 _auto_1362_1 = (0);
    for (;_auto_1362_1 < _auto_1361_0->count;++_auto_1362_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_2,(((RogueClassCmd*)(_auto_1361_0->data->objects[_auto_1362_1]))));
      __trace.line = 4367;
      if ((call_ROGUEM87( 20, statement_2 )))
      {
        return (RogueLogical)(true);
      }
    }
  }
  __trace.line = 4369;
  return (RogueLogical)(false);
}

RogueLogical RogueCmdLabel__requires_semicolon( RogueClassCmdLabel* THIS )
{
  RogueDebugTrace __trace( "CmdLabel.requires_semicolon()", "Cmd.rogue", 4371 );
  __trace.line = 4372;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdLabel__resolve__Scope( RogueClassCmdLabel* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLabel.resolve(Scope)", "Cmd.rogue", 4374 );
  __trace.line = 4375;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 4376;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLabel__write_cpp__CPPWriter_Logical( RogueClassCmdLabel* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLabel.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2853 );
  __trace.line = 2854;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, is_statement_1, false );
}

RogueClassCmdLabel* RogueCmdLabel__init_object( RogueClassCmdLabel* THIS )
{
  RogueDebugTrace __trace( "CmdLabel.init_object()", "Cmd.rogue", 4351 );
  return (RogueClassCmdLabel*)(THIS);
}

RogueClassCmdLabel* RogueCmdLabel__init__Token_String_CmdStatementList( RogueClassCmdLabel* THIS, RogueClassToken* _auto_167_0, RogueString* _auto_168_1, RogueClassCmdStatementList* _auto_169_2 )
{
  RogueDebugTrace __trace( "CmdLabel.init(Token,String,CmdStatementList)", "Cmd.rogue", 4358 );
  THIS->statements = _auto_169_2;
  THIS->name = _auto_168_1;
  THIS->t = _auto_167_0;
  __trace.line = 4360;
  return (RogueClassCmdLabel*)(THIS);
}

RogueString* RogueArray_Type___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Type>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[860]);
}

RogueString* RogueCmdReturn__type_name( RogueClassCmdReturn* THIS )
{
  RogueDebugTrace __trace( "CmdReturn.type_name()", "Cmd.rogue", 351 );
  return (RogueString*)(Rogue_literal_strings[1133]);
}

RogueClassCmd* RogueCmdReturn__clone__CloneArgs( RogueClassCmdReturn* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReturn.clone(CloneArgs)", "Cmd.rogue", 358 );
  __trace.line = 359;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 360;
  if (!!(task_args_1))
  {
    __trace.line = 361;
    return (RogueClassCmd*)(((RogueTaskArgs__create_return__Token_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))));
  }
  else
  {
    __trace.line = 363;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))))));
  }
}

void RogueCmdReturn__dispatch__Visitor( RogueClassCmdReturn* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReturn.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReturn( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReturn__resolve__Scope( RogueClassCmdReturn* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReturn.resolve(Scope)", "Cmd.rogue", 366 );
  __trace.line = 367;
  if (!!(THIS->value))
  {
    __trace.line = 368;
    if (!(!!(scope_0->this_method->_return_type)))
    {
      __trace.line = 369;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(scope_0->this_method->signature) )))) )))), Rogue_literal_strings[471] )))) )))) ))));
    }
    __trace.line = 371;
    THIS->value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->value), scope_0 ))), ROGUE_ARG(scope_0->this_method->_return_type), scope_0 ))), scope_0 ));
  }
  else if (((RogueMethod__is_initializer( ROGUE_ARG(scope_0->this_method) ))))
  {
    __trace.line = 375;
    THIS->value = ((RogueCmdLiteralThis__resolve__Scope( ROGUE_ARG(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->this_method->type_context) )))))), scope_0 )));
  }
  __trace.line = 377;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReturn__type( RogueClassCmdReturn* THIS )
{
  RogueDebugTrace __trace( "CmdReturn.type()", "Cmd.rogue", 379 );
  __trace.line = 380;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->value) )));
}

void RogueCmdReturn__write_cpp__CPPWriter_Logical( RogueClassCmdReturn* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReturn.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1797 );
  __trace.line = 1798;
  if (!!(THIS->value))
  {
    __trace.line = 1799;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1064] )))), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->value) ))) )))), Rogue_literal_strings[1065] );
    __trace.line = 1800;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->value), writer_0, false );
    __trace.line = 1801;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
  else
  {
    __trace.line = 1803;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[176] );
  }
}

RogueClassCmdReturn* RogueCmdReturn__init_object( RogueClassCmdReturn* THIS )
{
  RogueDebugTrace __trace( "CmdReturn.init_object()", "Cmd.rogue", 351 );
  return (RogueClassCmdReturn*)(THIS);
}

RogueClassCmdReturn* RogueCmdReturn__init__Token_Cmd( RogueClassCmdReturn* THIS, RogueClassToken* _auto_173_0, RogueClassCmd* _auto_174_1 )
{
  RogueDebugTrace __trace( "CmdReturn.init(Token,Cmd)", "Cmd.rogue", 356 );
  THIS->value = _auto_174_1;
  THIS->t = _auto_173_0;
  __trace.line = 358;
  return (RogueClassCmdReturn*)(THIS);
}

RogueString* RogueCmdStatement__type_name( RogueClassCmdStatement* THIS )
{
  RogueDebugTrace __trace( "CmdStatement.type_name()", "Cmd.rogue", 303 );
  return (RogueString*)(Rogue_literal_strings[920]);
}

void RogueCmdStatement__dispatch__Visitor( RogueClassCmdStatement* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdStatement.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdStatement* RogueCmdStatement__init_object( RogueClassCmdStatement* THIS )
{
  RogueDebugTrace __trace( "CmdStatement.init_object()", "Cmd.rogue", 303 );
  return (RogueClassCmdStatement*)(THIS);
}

RogueString* RogueTokenType__to_String( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.to_String()", "TokenType.rogue", 249 );
  __trace.line = 250;
  return (RogueString*)(THIS->name);
}

RogueString* RogueTokenType__type_name( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.type_name()", "TokenType.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[763]);
}

RogueClassTokenType* RogueTokenType__init__String( RogueClassTokenType* THIS, RogueString* _auto_175_0 )
{
  RogueDebugTrace __trace( "TokenType.init(String)", "TokenType.rogue", 197 );
  THIS->name = _auto_175_0;
  __trace.line = 199;
  return (RogueClassTokenType*)(THIS);
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32)", "TokenType.rogue", 199 );
  __trace.line = 200;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(THIS) )))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Character( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueCharacter value_3 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32,Character)", "TokenType.rogue", 202 );
  __trace.line = 203;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralCharacterToken__init__TokenType_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralCharacterToken*,ROGUE_CREATE_OBJECT(LiteralCharacterToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt64 value_3 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32,Int64)", "TokenType.rogue", 205 );
  __trace.line = 206;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt64Token__init__TokenType_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt64Token*,ROGUE_CREATE_OBJECT(LiteralInt64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt32 value_3 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32,Int32)", "TokenType.rogue", 208 );
  __trace.line = 209;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt32Token__init__TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt32Token*,ROGUE_CREATE_OBJECT(LiteralInt32Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Real64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueReal64 value_3 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32,Real64)", "TokenType.rogue", 211 );
  __trace.line = 212;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralReal64Token__init__TokenType_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralReal64Token*,ROGUE_CREATE_OBJECT(LiteralReal64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_String( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  RogueDebugTrace __trace( "TokenType.create_token(String,Int32,Int32,String)", "TokenType.rogue", 214 );
  __trace.line = 215;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueStringDataToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringDataToken*,ROGUE_CREATE_OBJECT(StringDataToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__Token( RogueClassTokenType* THIS, RogueClassToken* existing_0 )
{
  RogueDebugTrace __trace( "TokenType.create_token(Token)", "TokenType.rogue", 217 );
  __trace.line = 218;
  return (RogueClassToken*)((call_ROGUEM139( 8, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) )));
}

RogueClassToken* RogueTokenType__create_token__Token_String( RogueClassTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  RogueDebugTrace __trace( "TokenType.create_token(Token,String)", "TokenType.rogue", 220 );
  __trace.line = 221;
  return (RogueClassToken*)((call_ROGUEM140( 13, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column), value_1 )));
}

RogueLogical RogueTokenType__is_directive( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.is_directive()", "TokenType.rogue", 226 );
  __trace.line = 227;
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_op_with_assign( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.is_op_with_assign()", "TokenType.rogue", 232 );
  __trace.line = 233;
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_structure( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.is_structure()", "TokenType.rogue", 235 );
  __trace.line = 236;
  return (RogueLogical)(false);
}

RogueClassTokenType* RogueTokenType__mark_end_command( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.mark_end_command()", "TokenType.rogue", 238 );
  __trace.line = 239;
  THIS->is_end_command = true;
  __trace.line = 240;
  return (RogueClassTokenType*)(THIS);
}

RogueClassTokenType* RogueTokenType__mark_non_method( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.mark_non_method()", "TokenType.rogue", 242 );
  __trace.line = 243;
  THIS->is_non_method = true;
  __trace.line = 244;
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueTokenType__quoted_name( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.quoted_name()", "TokenType.rogue", 246 );
  __trace.line = 247;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[83] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[83] )))) ))));
}

RogueString* RogueTokenType__to_String__Token( RogueClassTokenType* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "TokenType.to_String(Token)", "TokenType.rogue", 252 );
  __trace.line = 253;
  return (RogueString*)(THIS->name);
}

RogueClassTokenType* RogueTokenType__init_object( RogueClassTokenType* THIS )
{
  RogueDebugTrace __trace( "TokenType.init_object()", "TokenType.rogue", 1 );
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueArray_Property___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Property>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[861]);
}

RogueString* RogueScope__type_name( RogueClassScope* THIS )
{
  RogueDebugTrace __trace( "Scope.type_name()", "Scope.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[764]);
}

RogueClassScope* RogueScope__init__Type_Method( RogueClassScope* THIS, RogueClassType* _auto_178_0, RogueClassMethod* _auto_179_1 )
{
  RogueDebugTrace __trace( "Scope.init(Type,Method)", "Scope.rogue", 14 );
  THIS->this_method = _auto_179_1;
  THIS->_this_type = _auto_178_0;
  __trace.line = 16;
  return (RogueClassScope*)(THIS);
}

RogueClassLocal* RogueScope__find_local__String( RogueClassScope* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Scope.find_local(String)", "Scope.rogue", 16 );
  __trace.line = 17;
  RogueInt32 i_1 = ((THIS->local_list->count - 1));
  __trace.line = 18;
  while (i_1 >= 0)
  {
    __trace.line = 19;
    if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(((RogueClassLocal*)(THIS->local_list->data->objects[i_1]))->name), name_0 ))))
    {
      return (RogueClassLocal*)(((RogueClassLocal*)(THIS->local_list->data->objects[i_1])));
    }
    __trace.line = 20;
    --i_1;
  }
  __trace.line = 22;
  return (RogueClassLocal*)(((RogueClassLocal*)(NULL)));
}

RogueClassType* RogueScope__find_type__String( RogueClassScope* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Scope.find_type(String)", "Scope.rogue", 24 );
  __trace.line = 25;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), name_0 )))));
  __trace.line = 26;
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  __trace.line = 28;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueScope__push_local__Local_Logical( RogueClassScope* THIS, RogueClassLocal* v_0, RogueLogical validate_name_1 )
{
  RogueDebugTrace __trace( "Scope.push_local(Local,Logical)", "Scope.rogue", 30 );
  __trace.line = 31;
  if (validate_name_1)
  {
    __trace.line = 32;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,existing_2,(((RogueScope__find_local__String( ROGUE_ARG(THIS), ROGUE_ARG(v_0->name) )))));
    __trace.line = 33;
    if (!!(existing_2))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(v_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[467] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(v_0->name) )))) )))), Rogue_literal_strings[391] )))) )))) ))));
    }
  }
  __trace.line = 35;
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_list), v_0 );
}

void RogueScope__pop_local( RogueClassScope* THIS )
{
  RogueDebugTrace __trace( "Scope.pop_local()", "Scope.rogue", 37 );
  __trace.line = 38;
  RogueLocal_List__remove_last( ROGUE_ARG(THIS->local_list) );
}

RogueClassType* RogueScope__set_implicit_type__Type( RogueClassScope* THIS, RogueClassType* new_implicit_type_0 )
{
  RogueDebugTrace __trace( "Scope.set_implicit_type(Type)", "Scope.rogue", 40 );
  __trace.line = 41;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(THIS->_implicit_type));
  __trace.line = 42;
  THIS->_implicit_type = new_implicit_type_0;
  __trace.line = 43;
  return (RogueClassType*)(result_1);
}

RogueClassCmd* RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( RogueClassScope* THIS, RogueClassType* type_context_0, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueLogical suppress_inherited_3 )
{
  RogueDebugTrace __trace( "Scope.resolve_call(Type,CmdAccess,Logical,Logical)", "Scope.rogue", 45 );
  __trace.line = 46;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, ROGUE_ARG((error_on_fail_2 && !!(access_1->context))), suppress_inherited_3 )))));
  __trace.line = 47;
  if ((!(!!(m_4)) && !(!!(access_1->context))))
  {
    __trace.line = 49;
    m_4 = ((RogueClassMethod*)((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, false, suppress_inherited_3 ))));
    __trace.line = 50;
    if (!!(m_4))
    {
      __trace.line = 51;
      type_context_0 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global);
      __trace.line = 52;
      access_1->context = ((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(access_1->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))));
    }
    else if (error_on_fail_2)
    {
      __trace.line = 55;
      if (((RogueType__has_method_named__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(access_1->name) ))))
      {
        __trace.line = 56;
        RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, true, suppress_inherited_3 );
      }
      else
      {
        __trace.line = 58;
        RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, true, suppress_inherited_3 );
      }
    }
  }
  __trace.line = 63;
  if (!(!!(m_4)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 70;
  if (((!(error_on_fail_2) && ((RogueMethod__is_fallback( m_4 )))) && !(((RogueType__is_aspect( ROGUE_ARG(m_4->type_context) ))))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 72;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_5,(access_1->t));
  __trace.line = 74;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,context_6,(access_1->context));
  __trace.line = 75;
  if (!(!!(context_6)))
  {
    __trace.line = 76;
    if ((((RogueMethod__is_global( ROGUE_ARG(THIS->this_method) ))) && !(((RogueMethod__is_global( m_4 ))))))
    {
      __trace.line = 78;
      context_6 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), t_5, type_context_0 ))))));
    }
    else
    {
      __trace.line = 80;
      context_6 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_5, type_context_0 ))))));
    }
  }
  __trace.line = 84;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_7,(access_1->args));
  __trace.line = 85;
  if (!(!!(args_7)))
  {
    args_7 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
  }
  __trace.line = 88;
  while (args_7->count < m_4->parameters->count)
  {
    __trace.line = 89;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_8,(((RogueClassLocal*)(m_4->parameters->data->objects[args_7->count]))));
    __trace.line = 92;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_9,0);
    __trace.line = 93;
    if (!!(access_1->named_args))
    {
      __trace.line = 94;
      {
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1363_18,(access_1->named_args));
        RogueInt32 _auto_1364_19 = (0);
        for (;_auto_1364_19 < _auto_1363_18->count;++_auto_1364_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_20,(((RogueClassCmdNamedArg*)(_auto_1363_18->data->objects[_auto_1364_19]))));
          __trace.line = 95;
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(arg_20->name), ROGUE_ARG(param_8->original_name) ))))
          {
            __trace.line = 96;
            named_arg_9 = ((RogueClassCmdNamedArg*)arg_20);
            __trace.line = 97;
            RogueCmdNamedArg_List__remove__CmdNamedArg( ROGUE_ARG(access_1->named_args), arg_20 );
            __trace.line = 98;
            goto _auto_1365;
          }
        }
      }
      _auto_1365:;
    }
    __trace.line = 103;
    if (!!(named_arg_9))
    {
      __trace.line = 104;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_9 )))) );
    }
    else
    {
      __trace.line = 106;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(param_8->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) );
    }
  }
  __trace.line = 110;
  if ((!!(access_1->named_args) && !!(access_1->named_args->count)))
  {
    __trace.line = 111;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_10,(((RogueClassCmdNamedArg*)(access_1->named_args->data->objects[0]))));
    __trace.line = 112;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(arg_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[496] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(arg_10->name) )))) )))), Rogue_literal_strings[45] )))) )))) ))));
  }
  __trace.line = 115;
  RogueCmdArgs__resolve__Scope( args_7, ROGUE_ARG(THIS) );
  __trace.line = 117;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1366_21,(args_7));
    RogueInt32 i_22 = (0);
    for (;i_22 < _auto_1366_21->count;++i_22)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      args_7->data->objects[i_22] = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(((RogueClassCmd*)(args_7->data->objects[i_22]))), ROGUE_ARG(((RogueClassLocal*)(m_4->parameters->data->objects[i_22]))->_type), ROGUE_ARG(THIS) ))), ROGUE_ARG(THIS) ));
    }
  }
  __trace.filename = "Scope.rogue";
  __trace.line = 121;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,0);
  __trace.line = 122;
  if (((RogueMethod__is_global( m_4 ))))
  {
    __trace.line = 124;
    if (((RogueMethod__is_native( m_4 ))))
    {
      __trace.line = 125;
      if (!!(m_4->native_code))
      {
        __trace.line = 126;
        context_6 = ((RogueClassCmd*)(call_ROGUEM81( 31, context_6, ROGUE_ARG(THIS) )));
        __trace.line = 127;
        call_ROGUEM89( 25, context_6 );
        __trace.line = 128;
        cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), t_5, m_4, args_7 ))))));
      }
      else
      {
        __trace.line = 130;
        cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), t_5, m_4, args_7 ))))));
      }
    }
    else if (((RogueMethod__is_macro( m_4 ))))
    {
      __trace.line = 134;
      ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_12,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_6, m_4, args_7 )))));
      __trace.line = 135;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_13,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
      __trace.line = 136;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1374_23,(m_4->statements));
        RogueInt32 _auto_1375_24 = (0);
        for (;_auto_1375_24 < _auto_1374_23->count;++_auto_1375_24)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_25,(((RogueClassCmd*)(_auto_1374_23->data->objects[_auto_1375_24]))));
          __trace.line = 137;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_14,((call_ROGUEM99( 10, statement_25, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_12))) ))));
          __trace.line = 138;
          if (!!(inline_statement_14))
          {
            RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_13), inline_statement_14 );
          }
        }
      }
      __trace.line = 141;
      RogueCmdStatementList__resolve__Scope_Logical( inline_statements_13, ROGUE_ARG(THIS), false );
      __trace.line = 143;
      switch (inline_statements_13->count)
      {
        case 0:
        {
          __trace.line = 145;
          if (!!(m_4->_return_type))
          {
            ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[500] ))));
          }
          __trace.line = 146;
          return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_5, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
          break;
        }
        case 1:
        {
          __trace.line = 148;
          return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_13->data->objects[0])));
          break;
        }
        case 2:
        {
          __trace.line = 150;
          ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[501] ))));
          break;
        }
      }
    }
    else
    {
      __trace.line = 154;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), t_5, m_4, args_7 ))))));
    }
  }
  else if (((RogueMethod__is_native( m_4 ))))
  {
    __trace.line = 161;
    if (type_context_0->is_array)
    {
      __trace.line = 162;
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_1379_26,(m_4->name));
        if (((RogueString__operatorEQUALSEQUALS__String( _auto_1379_26, Rogue_literal_strings[502] ))))
        {
          __trace.line = 164;
          if ((!!(args_7) && !!(args_7->count)))
          {
            ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[503] ))));
          }
          __trace.line = 165;
          return (RogueClassCmd*)(((RogueCmdReadArrayCount__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), t_5, context_6 )))), ROGUE_ARG(THIS) ))));
        }
      }
    }
    __trace.line = 171;
    if (!!(m_4->native_code))
    {
      __trace.line = 172;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), t_5, context_6, m_4, args_7 ))))))));
    }
    else
    {
      __trace.line = 174;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), t_5, context_6, m_4, args_7 ))))))));
    }
  }
  else if (((RogueMethod__is_macro( m_4 ))))
  {
    __trace.line = 178;
    ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_15,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_6, m_4, args_7 )))));
    __trace.line = 179;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_16,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    __trace.line = 180;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_1380_27,(m_4->statements));
      RogueInt32 _auto_1381_28 = (0);
      for (;_auto_1381_28 < _auto_1380_27->count;++_auto_1381_28)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_29,(((RogueClassCmd*)(_auto_1380_27->data->objects[_auto_1381_28]))));
        __trace.line = 181;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_17,((call_ROGUEM99( 10, statement_29, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_15))) ))));
        __trace.line = 182;
        if (!!(inline_statement_17))
        {
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_16), inline_statement_17 );
        }
      }
    }
    __trace.line = 185;
    RogueCmdStatementList__resolve__Scope_Logical( inline_statements_16, ROGUE_ARG(THIS), false );
    __trace.line = 187;
    switch (inline_statements_16->count)
    {
      case 0:
      {
        __trace.line = 189;
        if (!!(m_4->_return_type))
        {
          ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[500] ))));
        }
        __trace.line = 190;
        return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_5, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
        break;
      }
      case 1:
      {
        __trace.line = 192;
        return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_16->data->objects[0])));
        break;
      }
      case 2:
      {
        __trace.line = 194;
        ROGUE_THROW(((RogueToken__error__String( t_5, Rogue_literal_strings[501] ))));
        break;
      }
    }
  }
  else if (((RogueType__is_aspect( type_context_0 ))))
  {
    __trace.line = 199;
    cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), t_5, context_6, m_4, args_7 ))))))));
  }
  else
  {
    __trace.line = 202;
    cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), t_5, context_6, m_4, args_7 ))))))));
  }
  __trace.line = 206;
  return (RogueClassCmd*)((call_ROGUEM81( 31, cmd_11, ROGUE_ARG(THIS) )));
}

RogueClassMethod* RogueScope__find_method__Type_CmdAccess_Logical_Logical( RogueClassScope* THIS, RogueClassType* type_context_0, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueLogical suppress_inherited_3 )
{
  RogueDebugTrace __trace( "Scope.find_method(Type,CmdAccess,Logical,Logical)", "Scope.rogue", 208 );
  __trace.line = 209;
  ROGUE_DEF_LOCAL_REF(RogueClassCandidateMethods*,candidates_4,(((RogueCandidateMethods__init__Type_CmdAccess_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCandidateMethods*,ROGUE_CREATE_OBJECT(CandidateMethods))), type_context_0, access_1, error_on_fail_2 )))));
  __trace.line = 211;
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_5,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), ROGUE_ARG(access_1->name) )))));
  __trace.line = 212;
  if (!!(list_5))
  {
    __trace.line = 213;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1385_39,(list_5));
      RogueInt32 _auto_1386_40 = (0);
      for (;_auto_1386_40 < _auto_1385_39->count;++_auto_1386_40)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_41,(((RogueClassMethod*)(_auto_1385_39->data->objects[_auto_1386_40]))));
        __trace.line = 214;
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_41 );
      }
    }
  }
  __trace.line = 218;
  if ((suppress_inherited_3 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_1->name), Rogue_literal_strings[307] )))))
  {
    __trace.line = 220;
    list_5 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), Rogue_literal_strings[321] ))));
    __trace.line = 221;
    if (!!(list_5))
    {
      __trace.line = 222;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1387_42,(list_5));
        RogueInt32 _auto_1388_43 = (0);
        for (;_auto_1388_43 < _auto_1387_42->count;++_auto_1388_43)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_44,(((RogueClassMethod*)(_auto_1387_42->data->objects[_auto_1388_43]))));
          __trace.line = 223;
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_44 );
        }
      }
    }
  }
  __trace.line = 228;
  list_5 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->method_lookup_by_name), ROGUE_ARG(access_1->name) ))));
  __trace.line = 229;
  if (!!(list_5))
  {
    __trace.line = 230;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1389_45,(list_5));
      RogueInt32 _auto_1390_46 = (0);
      for (;_auto_1390_46 < _auto_1389_45->count;++_auto_1390_46)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_47,(((RogueClassMethod*)(_auto_1389_45->data->objects[_auto_1390_46]))));
        __trace.line = 231;
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->available), m_47 );
      }
    }
  }
  __trace.line = 235;
  if (((candidates_4->available->count == 0 && ((RogueString__contains__Character( ROGUE_ARG(access_1->name), (RogueCharacter)'<' )))) && !!(type_context_0->method_templates)))
  {
    __trace.line = 236;
    ROGUE_DEF_LOCAL_REF(RogueString*,base_name_6,(((RogueString__before_first__Character( ROGUE_ARG(access_1->name), (RogueCharacter)'<' )))));
    __trace.line = 237;
    if (((RogueMethodTemplates__has_templates_named__String( ROGUE_ARG(type_context_0->method_templates), base_name_6 ))))
    {
      __trace.line = 238;
      RogueInt32 specializer_count_7 = (((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(access_1->t), ROGUE_ARG(access_1->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(access_1->name), (RogueCharacter)'<' )))) )))) ))));
      __trace.line = 239;
      if (((RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(type_context_0->method_templates), base_name_6, specializer_count_7, ROGUE_ARG(access_1->t), ROGUE_ARG(access_1->name) ))))
      {
        __trace.line = 241;
        return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, suppress_inherited_3 ))));
      }
    }
  }
  __trace.line = 246;
  if (!(((RogueCandidateMethods__update_available( candidates_4 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  __trace.line = 248;
  if (suppress_inherited_3)
  {
    __trace.line = 250;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,most_specific_type_8,0);
    __trace.line = 251;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1391_48,(candidates_4->available));
      RogueInt32 _auto_1392_49 = (0);
      for (;_auto_1392_49 < _auto_1391_48->count;++_auto_1392_49)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_50,(((RogueClassMethod*)(_auto_1391_48->data->objects[_auto_1392_49]))));
        __trace.line = 252;
        if ((((RogueMethod__is_initializer( m_50 ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_50->name), Rogue_literal_strings[321] )))))
        {
          __trace.line = 253;
          ROGUE_DEF_LOCAL_REF(RogueClassType*,m_type_context_9,(m_50->type_context));
          __trace.line = 254;
          if ((((void*)most_specific_type_8) == ((void*)NULL) || ((RogueType__instance_of__Type( m_type_context_9, most_specific_type_8 )))))
          {
            __trace.line = 255;
            most_specific_type_8 = ((RogueClassType*)m_type_context_9);
          }
        }
      }
    }
    __trace.line = 260;
    if (!!(most_specific_type_8))
    {
      __trace.line = 262;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1393_51,(candidates_4->available));
        RogueInt32 _auto_1394_52 = (0);
        for (;_auto_1394_52 < _auto_1393_51->count;++_auto_1394_52)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_53,(((RogueClassMethod*)(_auto_1393_51->data->objects[_auto_1394_52]))));
          __trace.line = 263;
          if (((void*)m_53->type_context) == ((void*)most_specific_type_8))
          {
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_53 );
          }
        }
      }
      __trace.line = 265;
      if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
    }
  }
  __trace.line = 269;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_10,(access_1->args));
  __trace.line = 271;
  RogueInt32 arg_count_11 = (0);
  __trace.line = 272;
  if (!!(args_10))
  {
    __trace.line = 273;
    RogueCmdArgs__resolve__Scope( args_10, ROGUE_ARG(THIS) );
    __trace.line = 274;
    arg_count_11 = ((RogueInt32)args_10->count);
    __trace.line = 275;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1395_54,(args_10));
      RogueInt32 _auto_1396_55 = (0);
      for (;_auto_1396_55 < _auto_1395_54->count;++_auto_1396_55)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_56,(((RogueClassCmd*)(_auto_1395_54->data->objects[_auto_1396_55]))));
        RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 36, arg_56 ))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      }
    }
  }
  __trace.line = 278;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1397_57,(candidates_4->available));
    RogueInt32 _auto_1398_58 = (0);
    for (;_auto_1398_58 < _auto_1397_57->count;++_auto_1398_58)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_59,(((RogueClassMethod*)(_auto_1397_57->data->objects[_auto_1398_58]))));
      __trace.line = 279;
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1399_60,(m_59->parameters));
        RogueInt32 _auto_1400_61 = (0);
        for (;_auto_1400_61 < _auto_1399_60->count;++_auto_1400_61)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_62,(((RogueClassLocal*)(_auto_1399_60->data->objects[_auto_1400_61]))));
          RogueType__organize__Scope( ROGUE_ARG(param_62->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
        }
      }
      __trace.line = 280;
      if (((RogueMethod__accepts_arg_count__Int32( m_59, arg_count_11 ))))
      {
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_59 );
      }
    }
  }
  __trace.line = 282;
  if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  __trace.line = 284;
  if (!!(access_1->named_args))
  {
    __trace.line = 286;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1401_63,(candidates_4->available));
      RogueInt32 _auto_1402_64 = (0);
      for (;_auto_1402_64 < _auto_1401_63->count;++_auto_1402_64)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_65,(((RogueClassMethod*)(_auto_1401_63->data->objects[_auto_1402_64]))));
        __trace.line = 287;
        {
          {
            __trace.line = 288;
            {
              ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1404_66,(access_1->named_args));
              RogueInt32 _auto_1405_67 = (0);
              for (;_auto_1405_67 < _auto_1404_66->count;++_auto_1405_67)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_68,(((RogueClassCmdNamedArg*)(_auto_1404_66->data->objects[_auto_1405_67]))));
                __trace.line = 289;
                {
                  __trace.line = 290;
                  {
                    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1406_69,(m_65->parameters));
                    RogueInt32 index_70 = (0);
                    for (;index_70 < _auto_1406_69->count;++index_70)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_71,(((RogueClassLocal*)(_auto_1406_69->data->objects[index_70]))));
                      __trace.line = 291;
                      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(param_71->original_name), ROGUE_ARG(arg_68->name) ))))
                      {
                        __trace.line = 292;
                        if (!(arg_68->inferred_index.exists))
                        {
                          __trace.line = 293;
                          arg_68->inferred_index = RogueOptionalInt32( index_70, true );
                        }
                        else if (arg_68->inferred_index.value != index_70)
                        {
                          __trace.line = 295;
                          arg_68->inferred_index = RogueOptionalInt32( -1, true );
                        }
                        __trace.line = 297;
                        goto _auto_1407;
                      }
                    }
                  }
                  __trace.line = 300;
                  if ( !(false) ) goto _auto_1408;
                }
                _auto_1407:;
              }
            }
            __trace.line = 303;
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_65 );
            goto _auto_1403;
          }
          _auto_1408:;
        }
        _auto_1403:;
      }
    }
    __trace.line = 306;
    if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    __trace.line = 312;
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_12,(((RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( ROGUE_ARG(access_1->named_args), ROGUE_ARG(((RogueClassFunction_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_1409*)ROGUE_SINGLETON(Function_1409))))) )))));
    __trace.line = 313;
    RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( named_args_12, ROGUE_ARG(((RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_1410*)ROGUE_SINGLETON(Function_1410))))) );
    __trace.line = 314;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_1411_72,(named_args_12));
      RogueInt32 _auto_1412_73 = (0);
      for (;_auto_1412_73 < _auto_1411_72->count;++_auto_1412_73)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_74,(((RogueClassCmdNamedArg*)(_auto_1411_72->data->objects[_auto_1412_73]))));
        __trace.line = 315;
        RogueInt32 index_13 = (named_arg_74->inferred_index.value);
        __trace.line = 316;
        if (index_13 <= args_10->count)
        {
          __trace.line = 317;
          RogueCmd_List__insert__Cmd_Int32( ((RogueCmd_List*)args_10), ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_74 )))), ROGUE_ARG(THIS) ))), index_13 );
        }
        else
        {
          __trace.line = 319;
          RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(access_1->named_args), named_arg_74 );
        }
      }
    }
  }
  __trace.line = 325;
  if (!!(arg_count_11))
  {
    __trace.line = 327;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1413_75,(candidates_4->available));
      RogueInt32 _auto_1414_76 = (0);
      for (;_auto_1414_76 < _auto_1413_75->count;++_auto_1414_76)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_77,(((RogueClassMethod*)(_auto_1413_75->data->objects[_auto_1414_76]))));
        __trace.line = 328;
        {
          {
            __trace.line = 329;
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1416_78,(args_10));
              RogueInt32 index_79 = (0);
              for (;index_79 < _auto_1416_78->count;++index_79)
              {
                __trace.line = 330;
                ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_14,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[index_79]))) ))));
                __trace.line = 331;
                ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_15,(((RogueClassLocal*)(m_77->parameters->data->objects[index_79]))->_type));
                __trace.line = 332;
                if ( !(((void*)arg_type_14) == ((void*)param_type_15)) ) goto _auto_1417;
              }
            }
            __trace.line = 335;
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_77 );
            goto _auto_1415;
          }
          _auto_1417:;
        }
        _auto_1415:;
      }
    }
    __trace.line = 338;
    if (!(((RogueCandidateMethods__refine_matches( candidates_4 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    __trace.line = 341;
    RogueLogical has_generic_fn_16 = (false);
    __trace.line = 342;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1418_80,(args_10));
      RogueInt32 _auto_1419_81 = (0);
      for (;_auto_1419_81 < _auto_1418_80->count;++_auto_1419_81)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_82,(((RogueClassCmd*)(_auto_1418_80->data->objects[_auto_1419_81]))));
        __trace.line = 343;
        if ((call_ROGUEM87( 21, arg_82 )))
        {
          has_generic_fn_16 = ((RogueLogical)true);
          goto _auto_1420;
        }
      }
    }
    _auto_1420:;
    __trace.line = 346;
    if (has_generic_fn_16)
    {
      __trace.line = 347;
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_generic_fn_t_17,0);
      __trace.line = 348;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1421_83,(candidates_4->available));
        RogueInt32 _auto_1422_84 = (0);
        for (;_auto_1422_84 < _auto_1421_83->count;++_auto_1422_84)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_85,(((RogueClassMethod*)(_auto_1421_83->data->objects[_auto_1422_84]))));
          __trace.line = 349;
          {
            {
              __trace.line = 350;
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1424_86,(args_10));
                RogueInt32 index_87 = (0);
                for (;index_87 < _auto_1424_86->count;++index_87)
                {
                  __trace.line = 351;
                  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_18,(((RogueClassCmd*)(args_10->data->objects[index_87]))));
                  __trace.line = 352;
                  if ((call_ROGUEM87( 21, arg_18 )))
                  {
                    __trace.line = 353;
                    if (!(!!(first_generic_fn_t_17)))
                    {
                      first_generic_fn_t_17 = ((RogueClassToken*)arg_18->t);
                    }
                    __trace.line = 354;
                    ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_19,(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_18,RogueTypeCmdCreateFunction)))));
                    __trace.line = 355;
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_20,(((RogueClassLocal*)(m_85->parameters->data->objects[index_87]))->_type));
                    __trace.line = 356;
                    if ( !(((RogueString__begins_with__String( ROGUE_ARG(param_type_20->name), Rogue_literal_strings[492] )))) ) goto _auto_1425;
                    __trace.line = 358;
                    RogueInt32 callback_param_count_21 = (0);
                    __trace.line = 359;
                    if (!!(param_type_20->callback_parameter_types))
                    {
                      callback_param_count_21 = ((RogueInt32)param_type_20->callback_parameter_types->count);
                    }
                    __trace.line = 360;
                    RogueInt32 fn_param_count_22 = (0);
                    __trace.line = 361;
                    if (!!(fn_19->parameters))
                    {
                      fn_param_count_22 = ((RogueInt32)fn_19->parameters->count);
                    }
                    __trace.line = 362;
                    if ( !(fn_param_count_22 == callback_param_count_21) ) goto _auto_1425;
                  }
                }
              }
              __trace.line = 366;
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_85 );
              goto _auto_1423;
            }
            _auto_1425:;
          }
          _auto_1423:;
        }
      }
      __trace.line = 370;
      if (!(((RogueCandidateMethods__refine_matches( candidates_4 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
      __trace.line = 372;
      if (((RogueCandidateMethods__has_match( candidates_4 ))))
      {
        __trace.line = 374;
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_23,(((RogueCandidateMethods__match( candidates_4 )))));
        __trace.line = 375;
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1426_88,(args_10));
          RogueInt32 index_89 = (0);
          for (;index_89 < _auto_1426_88->count;++index_89)
          {
            __trace.line = 376;
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_24,(((RogueClassCmd*)(args_10->data->objects[index_89]))));
            __trace.line = 377;
            if ((call_ROGUEM87( 21, arg_24 )))
            {
              __trace.line = 378;
              ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_25,(((RogueCmdCreateFunction__clone__CloneArgs( ROGUE_ARG(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_24,RogueTypeCmdCreateFunction)))), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )))));
              __trace.line = 379;
              fn_25->is_generic = false;
              __trace.filename = "List.rogue";
              __trace.line = 308;
              args_10->data->objects[index_89] = ((RogueClassCmd*)(fn_25));
              __trace.filename = "Scope.rogue";
              __trace.line = 381;
              ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_26,(((RogueClassLocal*)(m_23->parameters->data->objects[index_89]))->_type));
              __trace.line = 383;
              if (!!(fn_25->parameters))
              {
                __trace.line = 384;
                {
                  ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_1427_90,(fn_25->parameters));
                  RogueInt32 i_91 = (0);
                  for (;i_91 < _auto_1427_90->count;++i_91)
                  {
                    __trace.line = 385;
                    ((RogueClassFnParam*)(fn_25->parameters->data->objects[i_91]))->_type = ((RogueClassType*)(callback_type_26->callback_parameter_types->data->objects[i_91]));
                  }
                }
              }
              __trace.line = 388;
              fn_25->_return_type = callback_type_26->_callback_return_type;
              __trace.line = 390;
              if ((!!(fn_25->_return_type) && !!(fn_25->statements->count)))
              {
                __trace.line = 391;
                ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_expression_27,(((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)fn_25->statements)) )))));
                __trace.line = 392;
                if (!(RogueObject_instance_of(last_expression_27,RogueTypeCmdReturn)))
                {
                  __trace.filename = "List.rogue";
                  __trace.line = 308;
                  fn_25->statements->data->objects[(fn_25->statements->count - 1)] = ((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(last_expression_27->t), last_expression_27 )))));
                }
              }
            }
          }
        }
        __trace.filename = "Scope.rogue";
        __trace.line = 400;
        return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Logical( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, suppress_inherited_3 ))));
      }
      else if (candidates_4->available->count == 0)
      {
        __trace.line = 404;
        ROGUE_THROW(((RogueToken__error__String( first_generic_fn_t_17, Rogue_literal_strings[493] ))));
      }
      else
      {
        __trace.line = 406;
        ROGUE_THROW(((RogueToken__error__String( first_generic_fn_t_17, Rogue_literal_strings[494] ))));
      }
    }
    __trace.line = 413;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1428_92,(candidates_4->available));
      RogueInt32 _auto_1429_93 = (0);
      for (;_auto_1429_93 < _auto_1428_92->count;++_auto_1429_93)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_94,(((RogueClassMethod*)(_auto_1428_92->data->objects[_auto_1429_93]))));
        __trace.line = 414;
        {
          {
            __trace.line = 415;
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1431_95,(args_10));
              RogueInt32 index_96 = (0);
              for (;index_96 < _auto_1431_95->count;++index_96)
              {
                __trace.line = 416;
                ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_28,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[index_96]))) ))));
                __trace.line = 417;
                ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_29,(((RogueClassLocal*)(m_94->parameters->data->objects[index_96]))->_type));
                __trace.line = 418;
                if ( !(((RogueType__is_compatible_with__Type( arg_type_28, param_type_29 )))) ) goto _auto_1432;
              }
            }
            __trace.line = 421;
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m_94 );
            goto _auto_1430;
          }
          _auto_1432:;
        }
        _auto_1430:;
      }
    }
    __trace.line = 425;
    if (!!(candidates_4->compatible->count))
    {
      __trace.line = 426;
      RogueCandidateMethods__update_matches( candidates_4 );
      __trace.line = 427;
      if (((RogueCandidateMethods__has_match( candidates_4 ))))
      {
        return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
      }
    }
  }
  __trace.line = 431;
  if (!!(candidates_4->compatible->count))
  {
    __trace.line = 432;
    RogueCandidateMethods__update_matches( candidates_4 );
    __trace.line = 433;
    if (((RogueCandidateMethods__has_match( candidates_4 ))))
    {
      return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
    }
  }
  __trace.line = 439;
  if (!!(arg_count_11))
  {
    __trace.line = 440;
    if (candidates_4->available->count > 1)
    {
      __trace.line = 441;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1433_97,(candidates_4->available));
        RogueInt32 _auto_1434_98 = (0);
        for (;_auto_1434_98 < _auto_1433_97->count;++_auto_1434_98)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m1_99,(((RogueClassMethod*)(_auto_1433_97->data->objects[_auto_1434_98]))));
          __trace.line = 442;
          {
            {
              __trace.line = 443;
              {
                ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1436_100,(candidates_4->available));
                RogueInt32 _auto_1437_101 = (0);
                for (;_auto_1437_101 < _auto_1436_100->count;++_auto_1437_101)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m2_102,(((RogueClassMethod*)(_auto_1436_100->data->objects[_auto_1437_101]))));
                  __trace.line = 444;
                  if (((void*)m1_99) != ((void*)m2_102))
                  {
                    __trace.line = 445;
                    RogueLogical m2_is_better_30 = (true);
                    __trace.line = 446;
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_1438_103,(args_10));
                      RogueInt32 index_104 = (0);
                      for (;index_104 < _auto_1438_103->count;++index_104)
                      {
                        __trace.line = 447;
                        ROGUE_DEF_LOCAL_REF(RogueClassType*,m1_arg_type_31,(((RogueClassLocal*)(m1_99->parameters->data->objects[index_104]))->_type));
                        __trace.line = 448;
                        ROGUE_DEF_LOCAL_REF(RogueClassType*,m2_arg_type_32,(((RogueClassLocal*)(m2_102->parameters->data->objects[index_104]))->_type));
                        __trace.line = 449;
                        if ( !(((RogueType__is_equivalent_or_more_specific_than__Type( m2_arg_type_32, m1_arg_type_31 )))) ) goto _auto_1439;
                      }
                    }
                    __trace.line = 451;
                    if (true) goto _auto_1440;
                  }
                }
              }
              _auto_1440:;
              goto _auto_1435;
            }
            _auto_1439:;
            __trace.line = 455;
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_4->compatible), m1_99 );
          }
          _auto_1435:;
        }
      }
      __trace.line = 458;
      if (!!(candidates_4->compatible->count))
      {
        __trace.line = 459;
        if (!(((RogueCandidateMethods__update_matches( candidates_4 )))))
        {
          return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
        }
        __trace.line = 460;
        if (((RogueCandidateMethods__has_match( candidates_4 ))))
        {
          return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
        }
      }
    }
  }
  else if (((RogueCandidateMethods__has_match( candidates_4 ))))
  {
    __trace.line = 465;
    return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_4 ))));
  }
  __trace.line = 469;
  if (arg_count_11 == 1)
  {
    __trace.line = 471;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1441_105,(candidates_4->available));
      RogueInt32 _auto_1442_106 = (0);
      for (;_auto_1442_106 < _auto_1441_105->count;++_auto_1442_106)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_107,(((RogueClassMethod*)(_auto_1441_105->data->objects[_auto_1442_106]))));
        __trace.line = 472;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_33,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))) ))));
        __trace.line = 473;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_34,(((RogueClassLocal*)(m_107->parameters->data->objects[0]))->_type));
        __trace.line = 474;
        RogueType__organize__Scope( param_type_34, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        __trace.line = 475;
        if ((((void*)param_type_34) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_33, Rogue_literal_strings[495] )))))
        {
          __trace.filename = "List.rogue";
          __trace.line = 308;
          args_10->data->objects[0] = (call_ROGUEM82( 9, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(THIS) ));
          __trace.filename = "Scope.rogue";
          __trace.line = 477;
          return (RogueClassMethod*)(m_107);
        }
      }
    }
    __trace.line = 482;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1443_108,(candidates_4->available));
      RogueInt32 _auto_1444_109 = (0);
      for (;_auto_1444_109 < _auto_1443_108->count;++_auto_1444_109)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_110,(((RogueClassMethod*)(_auto_1443_108->data->objects[_auto_1444_109]))));
        __trace.line = 483;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_35,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))) ))));
        __trace.line = 484;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_36,(((RogueClassLocal*)(m_110->parameters->data->objects[0]))->_type));
        __trace.line = 485;
        RogueType__organize__Scope( param_type_36, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        __trace.line = 486;
        if ((((void*)param_type_36) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((RogueType__has_method_named__String( arg_type_35, Rogue_literal_strings[413] )))))
        {
          __trace.filename = "List.rogue";
          __trace.line = 308;
          args_10->data->objects[0] = (call_ROGUEM82( 9, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), ROGUE_ARG(THIS) ));
          __trace.filename = "Scope.rogue";
          __trace.line = 488;
          return (RogueClassMethod*)(m_110);
        }
      }
    }
    __trace.line = 493;
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1445_111,(candidates_4->available));
      RogueInt32 _auto_1446_112 = (0);
      for (;_auto_1446_112 < _auto_1445_111->count;++_auto_1446_112)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_113,(((RogueClassMethod*)(_auto_1445_111->data->objects[_auto_1446_112]))));
        __trace.line = 494;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_37,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))) ))));
        __trace.line = 495;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_38,(((RogueClassLocal*)(m_113->parameters->data->objects[0]))->_type));
        __trace.line = 496;
        RogueType__organize__Scope( param_type_38, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        __trace.line = 497;
        if ((((void*)param_type_38) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_37, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[352], ROGUE_ARG(param_type_38->name) )))) )))))
        {
          __trace.filename = "List.rogue";
          __trace.line = 308;
          args_10->data->objects[0] = (call_ROGUEM82( 9, ROGUE_ARG(((RogueClassCmd*)(args_10->data->objects[0]))), param_type_38, ROGUE_ARG(THIS) ));
          __trace.filename = "Scope.rogue";
          __trace.line = 499;
          return (RogueClassMethod*)(m_113);
        }
      }
    }
  }
  __trace.line = 506;
  RogueCandidateMethods__update_matches( candidates_4 );
  __trace.line = 507;
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueClassScope* RogueScope__init_object( RogueClassScope* THIS )
{
  RogueDebugTrace __trace( "Scope.init_object()", "Scope.rogue", 1 );
  __trace.line = 9;
  THIS->local_list = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 11;
  THIS->control_stack = ((RogueCmdControlStructure_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdControlStructure_List*,ROGUE_CREATE_OBJECT(CmdControlStructure_List))) )));
  __trace.line = 1;
  return (RogueClassScope*)(THIS);
}

RogueMethod_List* RogueMethod_List__init( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueMethod_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueMethod_List*)(THIS);
}

RogueString* RogueMethod_List__to_String( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1447_2,(THIS));
    RogueInt32 _auto_1448_3 = (0);
    for (;_auto_1448_3 < _auto_1447_2->count;++_auto_1448_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_4,(((RogueClassMethod*)(_auto_1447_2->data->objects[_auto_1448_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethod__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethod_List__type_name( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[820]);
}

RogueMethod_List* RogueMethod_List__init_object( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].init_object()", "List.rogue", 4 );
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__init__Int32( RogueMethod_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Method[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethod*), true );
  }
  __trace.line = 16;
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  RogueDebugTrace __trace( "Method[].add(Method)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method_List( RogueMethod_List* THIS, RogueMethod_List* other_0 )
{
  RogueDebugTrace __trace( "Method[].add(Method[])", "List.rogue", 41 );
  __trace.line = 42;
  RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  __trace.line = 43;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1453_1,(other_0));
    RogueInt32 _auto_1454_2 = (0);
    for (;_auto_1454_2 < _auto_1453_1->count;++_auto_1454_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_3,(((RogueClassMethod*)(_auto_1453_1->data->objects[_auto_1454_2]))));
      RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_3 );
    }
  }
  __trace.line = 44;
  return (RogueMethod_List*)(THIS);
}

RogueInt32 RogueMethod_List__capacity( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueMethod_List* RogueMethod_List__clear( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueMethod_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueMethod_List*)(THIS);
}

void RogueMethod_List__discard_from__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Method[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueMethod_List* RogueMethod_List__insert__Method_Int32( RogueMethod_List* THIS, RogueClassMethod* value_0, RogueInt32 before_index_1 )
{
  RogueDebugTrace __trace( "Method[].insert(Method,Int32)", "List.rogue", 116 );
  __trace.line = 117;
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  __trace.line = 119;
  if (before_index_1 >= THIS->count)
  {
    __trace.line = 120;
    return (RogueMethod_List*)(((RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    __trace.line = 122;
    RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    __trace.line = 125;
    RogueArray_set(THIS->data,(before_index_1 + 1),((RogueArray*)(THIS->data)),before_index_1,(THIS->count - before_index_1));
    __trace.line = 126;
    ++THIS->count;
    __trace.line = 129;
    THIS->data->objects[before_index_1] = value_0;
  }
  __trace.line = 131;
  return (RogueMethod_List*)(THIS);
}

RogueOptionalInt32 RogueMethod_List__locate__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  RogueDebugTrace __trace( "Method[].locate(Method)", "List.rogue", 160 );
  __trace.line = 161;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1468_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_1468_1->count;++i_2)
    {
      __trace.line = 162;
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassMethod*)(THIS->data->objects[i_2]))))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  __trace.line = 164;
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueMethod_List* RogueMethod_List__reserve__Int32( RogueMethod_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Method[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueMethod_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueMethod_List*)(THIS);
}

RogueClassMethod* RogueMethod_List__remove__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  RogueDebugTrace __trace( "Method[].remove(Method)", "List.rogue", 255 );
  __trace.line = 256;
  RogueOptionalInt32 index_1 = (((RogueMethod_List__locate__Method( ROGUE_ARG(THIS), value_0 ))));
  __trace.line = 257;
  if (index_1.exists)
  {
    __trace.line = 258;
    return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    __trace.line = 260;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_2,0);
    __trace.line = 261;
    return (RogueClassMethod*)(zero_value_2);
  }
}

RogueClassMethod* RogueMethod_List__remove_at__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Method[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_1,(((RogueClassMethod*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassMethod*)(result_1);
}

RogueClassMethod* RogueMethod_List__remove_last( RogueMethod_List* THIS )
{
  RogueDebugTrace __trace( "Method[].remove_last()", "List.rogue", 286 );
  __trace.line = 287;
  return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueString* RogueArray_Method___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Method>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[862]);
}

RogueString* RogueArray_Template___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Template>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[863]);
}

RoguePlugin_List* RoguePlugin_List__init( RoguePlugin_List* THIS )
{
  RogueDebugTrace __trace( "Plugin[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RoguePlugin_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RoguePlugin_List*)(THIS);
}

RogueString* RoguePlugin_List__to_String( RoguePlugin_List* THIS )
{
  RogueDebugTrace __trace( "Plugin[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_1480_2,(THIS));
    RogueInt32 _auto_1481_3 = (0);
    for (;_auto_1481_3 < _auto_1480_2->count;++_auto_1481_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,value_4,(((RogueClassPlugin*)(_auto_1480_2->data->objects[_auto_1481_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RoguePlugin_List__type_name( RoguePlugin_List* THIS )
{
  RogueDebugTrace __trace( "Plugin[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[821]);
}

RoguePlugin_List* RoguePlugin_List__init_object( RoguePlugin_List* THIS )
{
  RogueDebugTrace __trace( "Plugin[].init_object()", "List.rogue", 4 );
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__init__Int32( RoguePlugin_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Plugin[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassPlugin*), true );
  }
  __trace.line = 16;
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__add__Plugin( RoguePlugin_List* THIS, RogueClassPlugin* value_0 )
{
  RogueDebugTrace __trace( "Plugin[].add(Plugin)", "List.rogue", 36 );
  __trace.line = 308;
  ((RoguePlugin_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RoguePlugin_List*)(THIS);
}

RogueInt32 RoguePlugin_List__capacity( RoguePlugin_List* THIS )
{
  RogueDebugTrace __trace( "Plugin[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RoguePlugin_List* RoguePlugin_List__reserve__Int32( RoguePlugin_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Plugin[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RoguePlugin_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RoguePlugin_List*)(THIS);
}

RogueString* RoguePlugin__type_name( RogueClassPlugin* THIS )
{
  RogueDebugTrace __trace( "Plugin.type_name()", "Plugin.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[765]);
}

RogueClassPlugin* RoguePlugin__init__String( RogueClassPlugin* THIS, RogueString* _auto_198_0 )
{
  RogueDebugTrace __trace( "Plugin.init(String)", "Plugin.rogue", 10 );
  THIS->name = _auto_198_0;
  __trace.line = 12;
  return (RogueClassPlugin*)(THIS);
}

void RoguePlugin__collect_supported_targets( RogueClassPlugin* THIS )
{
  RogueDebugTrace __trace( "Plugin.collect_supported_targets()", "Plugin.rogue", 12 );
  __trace.line = 16;
  if (!!(THIS->collect_supported_types_callback))
  {
    call_ROGUEM30( 7, ROGUE_ARG(THIS->collect_supported_types_callback) );
  }
}

RogueLogical RoguePlugin__generate_additional_types( RogueClassPlugin* THIS )
{
  RogueDebugTrace __trace( "Plugin.generate_additional_types()", "Plugin.rogue", 18 );
  __trace.line = 21;
  if (!!(THIS->generate_additonal_types_callback))
  {
    return (RogueLogical)((call_ROGUEM196( 7, ROGUE_ARG(THIS->generate_additonal_types_callback) )));
  }
  __trace.line = 22;
  return (RogueLogical)(false);
}

RogueClassPlugin* RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( RogueClassPlugin* THIS, RogueClassFunction__RETURNSLogical* _auto_200_0 )
{
  RogueDebugTrace __trace( "Plugin.on_generate_additional_types(Function()->Logical)", "Plugin.rogue", 27 );
  THIS->generate_additonal_types_callback = _auto_200_0;
  __trace.line = 28;
  return (RogueClassPlugin*)(THIS);
}

RogueClassPlugin* RoguePlugin__init_object( RogueClassPlugin* THIS )
{
  RogueDebugTrace __trace( "Plugin.init_object()", "Plugin.rogue", 1 );
  return (RogueClassPlugin*)(THIS);
}

RogueString* RogueArray_Plugin___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Plugin>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[864]);
}

RogueString* RogueFunction_Type_RETURNSLogical__type_name( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(Type)->Logical.type_name()", "List.rogue", 95 );
  return (RogueString*)(Rogue_literal_strings[766]);
}

RogueLogical RogueFunction_Type_RETURNSLogical__call__Type( RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* param1_0 )
{
  RogueDebugTrace __trace( "Function(Type)->Logical.call(Type)", "List.rogue", 95 );
  return (RogueLogical)(false);
}

RogueClassFunction_Type_RETURNSLogical* RogueFunction_Type_RETURNSLogical__init_object( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(Type)->Logical.init_object()", "List.rogue", 95 );
  return (RogueClassFunction_Type_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_229__type_name( RogueClassFunction_229* THIS )
{
  RogueDebugTrace __trace( "Function_229.type_name()", "Program.rogue", 481 );
  return (RogueString*)(Rogue_literal_strings[1142]);
}

RogueLogical RogueFunction_229__call__Type( RogueClassFunction_229* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Function_229.call(Type)", "Program.rogue", 481 );
  return (RogueLogical)((((RogueType__is_class( type_0 ))) && type_0->is_used));
}

RogueClassFunction_229* RogueFunction_229__init_object( RogueClassFunction_229* THIS )
{
  RogueDebugTrace __trace( "Function_229.init_object()", "Program.rogue", 481 );
  return (RogueClassFunction_229*)(THIS);
}

RogueString* RogueFunction_230__type_name( RogueClassFunction_230* THIS )
{
  RogueDebugTrace __trace( "Function_230.type_name()", "Program.rogue", 482 );
  return (RogueString*)(Rogue_literal_strings[1143]);
}

RogueLogical RogueFunction_230__call__Type( RogueClassFunction_230* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Function_230.call(Type)", "Program.rogue", 482 );
  return (RogueLogical)((((RogueType__is_aspect( type_0 ))) && type_0->is_used));
}

RogueClassFunction_230* RogueFunction_230__init_object( RogueClassFunction_230* THIS )
{
  RogueDebugTrace __trace( "Function_230.init_object()", "Program.rogue", 482 );
  return (RogueClassFunction_230*)(THIS);
}

RogueString* RogueCPPWriter__type_name( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.type_name()", "CPPWriter.rogue", 858 );
  return (RogueString*)(Rogue_literal_strings[767]);
}

RogueClassCPPWriter* RogueCPPWriter__init__String( RogueClassCPPWriter* THIS, RogueString* _auto_254_0 )
{
  RogueDebugTrace __trace( "CPPWriter.init(String)", "CPPWriter.rogue", 871 );
  THIS->filepath = _auto_254_0;
  __trace.line = 873;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__close( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.close()", "CPPWriter.rogue", 873 );
  __trace.filename = "File.rogue";
  __trace.line = 418;
  RogueFile__save__String_String( ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(THIS->filepath) )))->filepath), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
}

void RogueCPPWriter__print_indent( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.print_indent()", "CPPWriter.rogue", 876 );
  __trace.line = 877;
  if (THIS->needs_indent)
  {
    __trace.line = 878;
    THIS->needs_indent = false;
    __trace.line = 879;
    {
      RogueInt32 _auto_252_0 = (1);
      RogueInt32 _auto_253_1 = (THIS->indent);
      for (;_auto_252_0 <= _auto_253_1;++_auto_252_0)
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)' ', true );
      }
    }
  }
}

RogueClassCPPWriter* RogueCPPWriter__print__Int64( RogueClassCPPWriter* THIS, RogueInt64 value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(Int64)", "CPPWriter.rogue", 882 );
  __trace.line = 883;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 884;
  RogueStringBuilder__print__Int64( ROGUE_ARG(THIS->buffer), value_0 );
  __trace.line = 885;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(Int32)", "CPPWriter.rogue", 887 );
  __trace.line = 888;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 889;
  RogueStringBuilder__print__Int32( ROGUE_ARG(THIS->buffer), value_0 );
  __trace.line = 890;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Real64( RogueClassCPPWriter* THIS, RogueReal64 value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(Real64)", "CPPWriter.rogue", 892 );
  __trace.line = 893;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 895;
  RogueStringBuilder__print__Real64( ROGUE_ARG(THIS->buffer), value_0 );
  __trace.line = 897;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Character( RogueClassCPPWriter* THIS, RogueCharacter value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(Character)", "CPPWriter.rogue", 899 );
  __trace.line = 901;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 902;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), value_0, true );
  __trace.line = 903;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(String)", "CPPWriter.rogue", 905 );
  __trace.line = 906;
  RogueLogical needs_newline_1 = (false);
  __trace.line = 907;
  if (((RogueString__contains__Character( value_0, (RogueCharacter)10 ))))
  {
    __trace.line = 908;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_1513_2,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), value_0 )))));
      while (((RogueLineReader__has_another( _auto_1513_2 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_3,(((RogueLineReader__read( _auto_1513_2 )))));
        __trace.line = 909;
        if (needs_newline_1)
        {
          __trace.line = 910;
          RogueCPPWriter__println( ROGUE_ARG(THIS) );
        }
        __trace.line = 912;
        RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
        __trace.line = 913;
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), line_3 );
        __trace.line = 914;
        needs_newline_1 = ((RogueLogical)true);
      }
    }
  }
  else
  {
    __trace.line = 917;
    RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
    __trace.line = 918;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), value_0 );
  }
  __trace.line = 920;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.println()", "CPPWriter.rogue", 933 );
  __trace.line = 934;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  __trace.line = 935;
  ++THIS->line_number;
  __trace.line = 936;
  THIS->needs_indent = true;
  __trace.line = 937;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.println(Int32)", "CPPWriter.rogue", 946 );
  __trace.line = 947;
  RogueCPPWriter__print__Int32( ROGUE_ARG(THIS), value_0 );
  __trace.line = 948;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  __trace.line = 949;
  ++THIS->line_number;
  __trace.line = 950;
  THIS->needs_indent = true;
  __trace.line = 951;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.println(String)", "CPPWriter.rogue", 960 );
  __trace.line = 961;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), value_0 );
  __trace.line = 962;
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  __trace.line = 963;
  ++THIS->line_number;
  __trace.line = 964;
  THIS->needs_indent = true;
  __trace.line = 965;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print(Type)", "CPPWriter.rogue", 967 );
  __trace.line = 968;
  RogueCPPWriter__print_type_name__Type( ROGUE_ARG(THIS), type_0 );
  __trace.line = 969;
  if ((!!(type_0) && ((RogueType__is_reference( type_0 )))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[250] );
  }
  __trace.line = 970;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  RogueDebugTrace __trace( "CPPWriter.print_cast(Type,Type)", "CPPWriter.rogue", 972 );
  __trace.line = 973;
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  __trace.line = 974;
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[94] )))), to_type_1 )))), Rogue_literal_strings[34] ))));
  __trace.line = 975;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_open_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  RogueDebugTrace __trace( "CPPWriter.print_open_cast(Type,Type)", "CPPWriter.rogue", 977 );
  __trace.line = 978;
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  __trace.line = 979;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[94] );
  __trace.line = 980;
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 ))));
}

RogueClassCPPWriter* RogueCPPWriter__print_close_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  RogueDebugTrace __trace( "CPPWriter.print_close_cast(Type,Type)", "CPPWriter.rogue", 982 );
  __trace.line = 983;
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  __trace.line = 984;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[34] );
  __trace.line = 985;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type_Cmd( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1, RogueClassCmd* cmd_2 )
{
  RogueDebugTrace __trace( "CPPWriter.print_cast(Type,Type,Cmd)", "CPPWriter.rogue", 987 );
  __trace.line = 988;
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    __trace.line = 989;
    call_ROGUEM104( 37, cmd_2, ROGUE_ARG(THIS), false );
  }
  else
  {
    __trace.line = 991;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[94] );
    __trace.line = 992;
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 );
    __trace.line = 993;
    call_ROGUEM104( 37, cmd_2, ROGUE_ARG(THIS), false );
    __trace.line = 994;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[34] );
  }
  __trace.line = 996;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_access_operator__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_access_operator(Type)", "CPPWriter.rogue", 998 );
  __trace.line = 999;
  if (((RogueType__is_reference( type_0 ))))
  {
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[209] ))));
  }
  else
  {
    __trace.line = 1000;
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[78] ))));
  }
}

RogueClassCPPWriter* RogueCPPWriter__print_type_name__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_type_name(Type)", "CPPWriter.rogue", 1002 );
  __trace.line = 1003;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 1004;
  if (!!(type_0))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), ROGUE_ARG(type_0->cpp_class_name) );
  }
  else
  {
    __trace.line = 1005;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[559] );
  }
  __trace.line = 1006;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_type_info__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_type_info(Type)", "CPPWriter.rogue", 1008 );
  __trace.line = 1009;
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  __trace.line = 1010;
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[538] )))), ROGUE_ARG(type_0->cpp_name) );
  __trace.line = 1011;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_default_value__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_default_value(Type)", "CPPWriter.rogue", 1013 );
  __trace.line = 1014;
  if (((RogueType__is_compound( type_0 ))))
  {
    __trace.line = 1015;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_0 )))), Rogue_literal_strings[414] );
  }
  else
  {
    __trace.line = 1017;
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[547] );
  }
  __trace.line = 1019;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_hex_pair__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_hex_pair(Int32)", "CPPWriter.rogue", 1021 );
  __trace.line = 1022;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[670] );
  __trace.line = 1023;
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 >> 4)) )))) );
  __trace.line = 1024;
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 & 15)) )))) );
  __trace.line = 1025;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_character__Character_Logical( RogueClassCPPWriter* THIS, RogueCharacter ch_0, RogueLogical in_string_1 )
{
  RogueDebugTrace __trace( "CPPWriter.print_literal_character(Character,Logical)", "CPPWriter.rogue", 1027 );
  __trace.line = 1028;
  if ((ch_0 >= ((RogueCharacter)(32)) && ch_0 <= ((RogueCharacter)(126))))
  {
    __trace.line = 1029;
    switch (ch_0)
    {
      case (RogueCharacter)'"':
      {
        __trace.line = 1031;
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[664] );
        }
        else
        {
          __trace.line = 1032;
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[665] );
        }
        break;
      }
      case (RogueCharacter)'\'':
      {
        __trace.line = 1034;
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[83] );
        }
        else
        {
          __trace.line = 1035;
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[666] );
        }
        break;
      }
      case (RogueCharacter)'\\':
      {
        __trace.line = 1037;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[667] );
        break;
      }
      default:
      {
        __trace.line = 1039;
        RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ch_0 );
      }
    }
  }
  else
  {
    __trace.line = 1042;
    switch (ch_0)
    {
      case 10:
      {
        __trace.line = 1044;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[668] );
        break;
      }
      default:
      {
        __trace.line = 1049;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[669] );
        __trace.line = 1050;
        if (ch_0 <= ((RogueCharacter)(127)))
        {
          __trace.line = 1051;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)(ch_0))) );
        }
        else if (ch_0 <= ((RogueCharacter)(2047)))
        {
          __trace.line = 1053;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(192)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(31))))))) );
          __trace.line = 1054;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        else if (ch_0 <= ((RogueCharacter)(65535)))
        {
          __trace.line = 1056;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(224)) | ((ch_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(15))))))) );
          __trace.line = 1057;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) );
          __trace.line = 1058;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        else
        {
          __trace.line = 1060;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(240)) | ((ch_0 >> ((RogueCharacter)(18))) & ((RogueCharacter)(7))))))) );
          __trace.line = 1061;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(12))) & ((RogueCharacter)(63))))))) );
          __trace.line = 1062;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | ((ch_0 >> ((RogueCharacter)(6))) & ((RogueCharacter)(63))))))) );
          __trace.line = 1063;
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)((((RogueCharacter)(128)) | (ch_0 & ((RogueCharacter)(63))))))) );
        }
        __trace.line = 1065;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[669] );
      }
    }
  }
  __trace.line = 1069;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_string__String( RogueClassCPPWriter* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "CPPWriter.print_literal_string(String)", "CPPWriter.rogue", 1071 );
  __trace.line = 1072;
  if (((void*)st_0) == ((void*)NULL))
  {
    __trace.line = 1073;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[547] );
    __trace.line = 1074;
    return (RogueClassCPPWriter*)(THIS);
  }
  __trace.line = 1077;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[665] );
  __trace.line = 1078;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_1515_1,(st_0));
    RogueInt32 _auto_1516_2 = (0);
    for (;_auto_1516_2 < _auto_1515_1->character_count;++_auto_1516_2)
    {
      RogueCharacter ch_3 = (RogueString_character_at(_auto_1515_1,_auto_1516_2));
      __trace.line = 1079;
      RogueCPPWriter__print_literal_character__Character_Logical( ROGUE_ARG(THIS), ch_3, true );
    }
  }
  __trace.line = 1081;
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[665] );
  __trace.line = 1083;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueString* code_3, RogueClassType* result_type_4 )
{
  RogueDebugTrace __trace( "CPPWriter.print_native_code(Token,Type,Method,String,Type)", "CPPWriter.rogue", 1085 );
  __trace.line = 1086;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_1517_10,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), code_3 )))));
    while (((RogueLineReader__has_another( _auto_1517_10 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_11,(((RogueLineReader__read( _auto_1517_10 )))));
      __trace.line = 1087;
      RogueInt32 original_indent_5 = (THIS->indent);
      __trace.line = 1088;
      if (((RogueString__begins_with__Character( line_11, (RogueCharacter)'#' ))))
      {
        THIS->indent = 0;
      }
      __trace.line = 1092;
      RogueOptionalInt32 marker_6 = (((RogueString__locate__Character_OptionalInt32( line_11, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      __trace.line = 1093;
      while (marker_6.exists)
      {
        __trace.line = 1094;
        ROGUE_DEF_LOCAL_REF(RogueString*,name_7,0);
        __trace.line = 1096;
        RogueInt32 i1_8 = (marker_6.value);
        __trace.line = 1097;
        if (i1_8 > 0)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( line_11, i1_8 )))) );
        }
        __trace.line = 1098;
        RogueInt32 i2_9 = ((i1_8 + 1));
        __trace.line = 1099;
        if ((i2_9 < line_11->character_count && RogueString_character_at(line_11,i2_9) == (RogueCharacter)'('))
        {
          __trace.line = 1101;
          ++i2_9;
          __trace.line = 1102;
          while ((i2_9 < line_11->character_count && RogueString_character_at(line_11,i2_9) != (RogueCharacter)')'))
          {
            ++i2_9;
          }
          __trace.line = 1103;
          name_7 = ((RogueString*)((RogueString__from__Int32_Int32( line_11, ROGUE_ARG((i1_8 + 2)), ROGUE_ARG((i2_9 - 1)) ))));
          __trace.line = 1104;
          line_11 = ((RogueString*)((RogueString__from__Int32( line_11, ROGUE_ARG((i2_9 + 1)) ))));
        }
        else
        {
          __trace.line = 1107;
          while ((i2_9 < line_11->character_count && ((RogueCharacter__is_identifier( ROGUE_ARG(RogueString_character_at(line_11,i2_9)) )))))
          {
            ++i2_9;
          }
          __trace.line = 1108;
          name_7 = ((RogueString*)((RogueString__from__Int32_Int32( line_11, ROGUE_ARG((i1_8 + 1)), ROGUE_ARG((i2_9 - 1)) ))));
          __trace.line = 1109;
          line_11 = ((RogueString*)((RogueString__from__Int32( line_11, i2_9 ))));
        }
        __trace.line = 1112;
        RogueCPPWriter__print_native_marker__Token_Type_Method_String( ROGUE_ARG(THIS), t_0, type_context_1, method_context_2, name_7 );
        __trace.line = 1114;
        marker_6 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( line_11, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      }
      __trace.line = 1117;
      if (!!(line_11->character_count))
      {
        __trace.line = 1118;
        if (!!(result_type_4))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), line_11 );
        }
        else
        {
          __trace.line = 1119;
          RogueCPPWriter__println__String( ROGUE_ARG(THIS), line_11 );
        }
      }
      __trace.line = 1122;
      THIS->indent = original_indent_5;
    }
  }
  __trace.line = 1124;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_marker__Token_Type_Method_String( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueString* name_3 )
{
  RogueDebugTrace __trace( "CPPWriter.print_native_marker(Token,Type,Method,String)", "CPPWriter.rogue", 1126 );
  __trace.line = 1128;
  ROGUE_DEF_LOCAL_REF(RogueString*,operation_4,(((RogueString__after_first__Character( name_3, (RogueCharacter)'.' )))));
  __trace.line = 1129;
  name_3 = ((RogueString*)((RogueString__before_first__Character( name_3, (RogueCharacter)'.' ))));
  __trace.line = 1131;
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[281] ))))
    {
      __trace.line = 1133;
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[281] );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[203] ))))
    {
      __trace.line = 1136;
      RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, Rogue_literal_strings[570], type_context_1 );
    }
    else
    {
      __trace.line = 1139;
      if (((RogueString__begins_with__Character( name_3, (RogueCharacter)'$' ))))
      {
        __trace.line = 1141;
        if (!!(type_context_1->specializers))
        {
          __trace.line = 1142;
          {
            ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_1518_7,(type_context_1->specializers));
            RogueInt32 _auto_1519_8 = (0);
            for (;_auto_1519_8 < _auto_1518_7->count;++_auto_1519_8)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_9,(((RogueClassTypeSpecializer*)(_auto_1518_7->data->objects[_auto_1519_8]))));
              __trace.line = 1143;
              if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(specializer_9->name), name_3 ))))
              {
                __trace.line = 1144;
                {
                  if (((RogueString__operatorEQUALSEQUALS__String( operation_4, Rogue_literal_strings[0] ))))
                  {
                    __trace.line = 1146;
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((RogueType__organize__Scope( ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(specializer_9->tokens), false )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
                    __trace.line = 1147;
                    RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_5 );
                  }
                  else
                  {
                    __trace.line = 1149;
                    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[569] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_3 )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_4 )))) )))) )))) ))));
                  }
                }
                __trace.line = 1151;
                goto _auto_1520;
              }
            }
          }
        }
      }
      __trace.line = 1157;
      if (!!(method_context_2))
      {
        __trace.line = 1158;
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1521_10,(method_context_2->locals));
          RogueInt32 _auto_1522_11 = (0);
          for (;_auto_1522_11 < _auto_1521_10->count;++_auto_1522_11)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_12,(((RogueClassLocal*)(_auto_1521_10->data->objects[_auto_1522_11]))));
            __trace.line = 1159;
            if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(v_12->name), name_3 ))))
            {
              __trace.line = 1160;
              RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, ROGUE_ARG(((RogueLocal__cpp_name( v_12 )))), ROGUE_ARG(v_12->_type) );
              __trace.line = 1161;
              goto _auto_1520;
            }
          }
        }
      }
      __trace.line = 1166;
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_6,(((RogueTable_String_Property___get__String( ROGUE_ARG(type_context_1->property_lookup), name_3 )))));
      __trace.line = 1167;
      if (!!(p_6))
      {
        __trace.line = 1168;
        RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_3, operation_4, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[571], ROGUE_ARG(p_6->cpp_name) )))), ROGUE_ARG(p_6->_type) );
        __trace.line = 1169;
        goto _auto_1520;
      }
      __trace.line = 1172;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[281] )))), name_3 );
    }
  }
  _auto_1520:;
  __trace.line = 1174;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueString* name_1, RogueString* operation_2, RogueString* default_3, RogueClassType* type_4 )
{
  RogueDebugTrace __trace( "CPPWriter.print_native_code_marker_value(Token,String,String,String,Type)", "CPPWriter.rogue", 1176 );
  __trace.line = 1177;
  {
    if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[564] ))))
    {
      __trace.line = 1179;
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        __trace.line = 1180;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[565] );
        __trace.line = 1181;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[566] );
      }
      else
      {
        __trace.line = 1183;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[567] ))))
    {
      __trace.line = 1186;
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        __trace.line = 1187;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[568] );
        __trace.line = 1188;
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[566] );
      }
      else
      {
        __trace.line = 1190;
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[517] ))))
    {
      __trace.line = 1193;
      RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_4 );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[0] ))))
    {
      __trace.line = 1195;
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
    }
    else
    {
      __trace.line = 1197;
      ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[569] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_1 )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_2 )))) )))) )))) ))));
    }
  }
}

void RogueCPPWriter__print_arg__Cmd_Type_Type( RogueClassCPPWriter* THIS, RogueClassCmd* arg_0, RogueClassType* param_type_1, RogueClassType* cast_to_2 )
{
  RogueDebugTrace __trace( "CPPWriter.print_arg(Cmd,Type,Type)", "CPPWriter.rogue", 1200 );
  __trace.line = 1209;
  RogueInt32 close_paren_3 = (0);
  __trace.line = 1215;
  if (RogueObject_instance_of(arg_0,RogueTypeCmdReadLocal))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdReadSingleton))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdLiteral))
  {
  }
  else
  {
    __trace.line = 1223;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1091] );
    __trace.line = 1224;
    ++close_paren_3;
  }
  __trace.line = 1227;
  if ((!!(param_type_1) && ((RogueType__is_aspect( param_type_1 )))))
  {
    __trace.line = 1228;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[94] )))), ROGUE_ARG((call_ROGUEM90( 36, arg_0 ))), param_type_1 )))), Rogue_literal_strings[94] );
    __trace.line = 1229;
    close_paren_3 += 2;
  }
  __trace.line = 1232;
  if (!!(cast_to_2))
  {
    __trace.line = 1233;
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM90( 36, arg_0 ))), cast_to_2, arg_0 );
  }
  else if (((void*)(call_ROGUEM90( 36, arg_0 ))) != ((void*)param_type_1))
  {
    __trace.line = 1235;
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((call_ROGUEM90( 36, arg_0 ))), param_type_1, arg_0 );
  }
  else
  {
    __trace.line = 1237;
    call_ROGUEM104( 37, arg_0, ROGUE_ARG(THIS), false );
  }
  __trace.line = 1240;
  while (!!(close_paren_3))
  {
    __trace.line = 1241;
    --close_paren_3;
    __trace.line = 1242;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[34] );
  }
}

void RogueCPPWriter__mark_statement_start__String_Int32_Int32( RogueClassCPPWriter* THIS, RogueString* statement_filepath_0, RogueInt32 start_line_1, RogueInt32 end_line_2 )
{
  RogueDebugTrace __trace( "CPPWriter.mark_statement_start(String,Int32,Int32)", "CPPWriter.rogue", 1245 );
}

void RogueCPPWriter__mark_statement_end( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.mark_statement_end()", "CPPWriter.rogue", 1248 );
}

void RogueCPPWriter__mark_method_start__Type_Method( RogueClassCPPWriter* THIS, RogueClassType* t_0, RogueClassMethod* m_1 )
{
  RogueDebugTrace __trace( "CPPWriter.mark_method_start(Type,Method)", "CPPWriter.rogue", 1251 );
  __trace.line = 1252;
  if (((RogueMethod__omit_output( m_1 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_method_end( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.mark_method_end()", "CPPWriter.rogue", 1255 );
}

void RogueCPPWriter__mark_routine_start__Method( RogueClassCPPWriter* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "CPPWriter.mark_routine_start(Method)", "CPPWriter.rogue", 1258 );
  __trace.line = 1259;
  if (((RogueMethod__omit_output( m_0 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_routine_end( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.mark_routine_end()", "CPPWriter.rogue", 1262 );
}

void RogueCPPWriter__update_trace_info__Token( RogueClassCPPWriter* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "CPPWriter.update_trace_info(Token)", "CPPWriter.rogue", 1265 );
  __trace.line = 1266;
  if (((!!(THIS->trace_token) && !!(t_0)) && !!(t_0->filepath)))
  {
    __trace.line = 1267;
    if (((void*)t_0->filepath) != ((void*)THIS->trace_token->filepath))
    {
      __trace.line = 1268;
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        __trace.line = 1269;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[691] )))), ROGUE_ARG(((RogueToken__filename( t_0 )))) )))), Rogue_literal_strings[692] );
        __trace.line = 1270;
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[693] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[243] );
      }
    }
    else if (t_0->line != THIS->trace_token->line)
    {
      __trace.line = 1273;
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[693] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[243] );
      }
    }
  }
  __trace.line = 1276;
  THIS->trace_token = t_0;
}

RogueClassCPPWriter* RogueCPPWriter__init_object( RogueClassCPPWriter* THIS )
{
  RogueDebugTrace __trace( "CPPWriter.init_object()", "CPPWriter.rogue", 858 );
  __trace.line = 861;
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 862;
  THIS->indent = 0;
  __trace.line = 863;
  THIS->needs_indent = true;
  __trace.line = 864;
  THIS->line_number = 1;
  __trace.line = 868;
  THIS->temp_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 858;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init( RogueClassTable_String_Method_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Method___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueString* RogueTable_String_Method___to_String( RogueClassTable_String_Method_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method___type_name( RogueClassTable_String_Method_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[768]);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init__Int32( RogueClassTable_String_Method_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Method__List__init__Int32_TableEntry_String_Method_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Method__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Method__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Method_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Method_*)(THIS);
}

void RogueTable_String_Method___clear( RogueClassTable_String_Method_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.clear()", "Table.rogue", 32 );
  __trace.line = 33;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method__List*,_auto_1529_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_1529_0->count;++i_1)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Method_*)(NULL));
    }
  }
  __trace.filename = "Table.rogue";
  __trace.line = 34;
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Method_* RogueTable_String_Method___find__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_2,(((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Method_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Method_*)(((RogueClassTableEntry_String_Method_*)(NULL)));
}

RogueClassMethod* RogueTable_String_Method___get__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_1,(((RogueTable_String_Method___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassMethod*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassMethod*)(default_value_2);
  }
}

RogueClassTable_String_Method_* RogueTable_String_Method___set__String_Method( RogueClassTable_String_Method_* THIS, RogueString* key_0, RogueClassMethod* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.set(String,Method)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_4,(((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Method_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Method_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Method_*)((RogueTableEntry_String_Method___init__String_Method_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Method_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method___print_to__StringBuilder( RogueClassTable_String_Method_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init_object( RogueClassTable_String_Method_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Method>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueLocal_List* RogueLocal_List__init( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueLocal_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueLocal_List*)(THIS);
}

RogueString* RogueLocal_List__to_String( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1540_2,(THIS));
    RogueInt32 _auto_1541_3 = (0);
    for (;_auto_1541_3 < _auto_1540_2->count;++_auto_1541_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,value_4,(((RogueClassLocal*)(_auto_1540_2->data->objects[_auto_1541_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueLocal_List__type_name( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[822]);
}

RogueLocal_List* RogueLocal_List__init_object( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].init_object()", "List.rogue", 4 );
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__init__Int32( RogueLocal_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Local[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassLocal*), true );
  }
  __trace.line = 16;
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__add__Local( RogueLocal_List* THIS, RogueClassLocal* value_0 )
{
  RogueDebugTrace __trace( "Local[].add(Local)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueLocal_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueLocal_List*)(THIS);
}

RogueInt32 RogueLocal_List__capacity( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueLocal_List* RogueLocal_List__clear( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueLocal_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueLocal_List*)(THIS);
}

void RogueLocal_List__discard_from__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Local[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueLocal_List* RogueLocal_List__reserve__Int32( RogueLocal_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Local[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueLocal_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueLocal_List*)(THIS);
}

RogueClassLocal* RogueLocal_List__remove_at__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "Local[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueClassLocal*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassLocal*)(result_1);
}

RogueClassLocal* RogueLocal_List__remove_last( RogueLocal_List* THIS )
{
  RogueDebugTrace __trace( "Local[].remove_last()", "List.rogue", 286 );
  __trace.line = 287;
  return (RogueClassLocal*)(((RogueLocal_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueString* RogueLocal__type_name( RogueClassLocal* THIS )
{
  RogueDebugTrace __trace( "Local.type_name()", "Local.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[769]);
}

RogueClassLocal* RogueLocal__init__Token_String( RogueClassLocal* THIS, RogueClassToken* _auto_281_0, RogueString* _auto_282_1 )
{
  RogueDebugTrace __trace( "Local.init(Token,String)", "Local.rogue", 12 );
  THIS->name = _auto_282_1;
  THIS->t = _auto_281_0;
  __trace.line = 13;
  THIS->original_name = THIS->name;
  __trace.line = 15;
  return (RogueClassLocal*)(THIS);
}

RogueClassLocal* RogueLocal__clone__CloneArgs( RogueClassLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "Local.clone(CloneArgs)", "Local.rogue", 15 );
  __trace.line = 16;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name) )))));
  __trace.line = 17;
  result_1->original_name = THIS->original_name;
  __trace.line = 19;
  __trace.filename = "CPPWriter.rogue";
  __trace.line = 1727;
  result_1->_cpp_name = THIS->_cpp_name;
  __trace.filename = "Local.rogue";
  __trace.line = 20;
  result_1->_type = THIS->_type;
  __trace.line = 21;
  result_1->index = THIS->index;
  __trace.line = 22;
  if (!!(THIS->initial_value))
  {
    result_1->initial_value = (call_ROGUEM99( 10, ROGUE_ARG(THIS->initial_value), clone_args_0 ));
  }
  __trace.line = 24;
  return (RogueClassLocal*)(result_1);
}

RogueString* RogueLocal__cpp_name( RogueClassLocal* THIS )
{
  RogueDebugTrace __trace( "Local.cpp_name()", "CPPWriter.rogue", 1729 );
  __trace.line = 1730;
  if (!(!!(THIS->_cpp_name)))
  {
    THIS->_cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[461] )))), ROGUE_ARG(THIS->index) )))) )));
  }
  __trace.line = 1731;
  return (RogueString*)(THIS->_cpp_name);
}

RogueClassLocal* RogueLocal__init_object( RogueClassLocal* THIS )
{
  RogueDebugTrace __trace( "Local.init_object()", "Local.rogue", 1 );
  return (RogueClassLocal*)(THIS);
}

RogueString* RogueArray_Local___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Local>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[865]);
}

RogueInt32_List* RogueInt32_List__init( RogueInt32_List* THIS )
{
  RogueDebugTrace __trace( "Int32[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueInt32_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueInt32_List__to_String( RogueInt32_List* THIS )
{
  RogueDebugTrace __trace( "Int32[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_1573_2,(THIS));
    RogueInt32 _auto_1574_3 = (0);
    for (;_auto_1574_3 < _auto_1573_2->count;++_auto_1574_3)
    {
      RogueInt32 value_4 = (_auto_1573_2->data->integers[_auto_1574_3]);
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if ((false))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueInt32__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueInt32_List__type_name( RogueInt32_List* THIS )
{
  RogueDebugTrace __trace( "Int32[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[823]);
}

RogueInt32_List* RogueInt32_List__init_object( RogueInt32_List* THIS )
{
  RogueDebugTrace __trace( "Int32[].init_object()", "List.rogue", 4 );
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__init__Int32( RogueInt32_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Int32[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueInt32) );
  }
  __trace.line = 16;
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__add__Int32( RogueInt32_List* THIS, RogueInt32 value_0 )
{
  RogueDebugTrace __trace( "Int32[].add(Int32)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueInt32_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->integers[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueInt32_List*)(THIS);
}

RogueInt32 RogueInt32_List__capacity( RogueInt32_List* THIS )
{
  RogueDebugTrace __trace( "Int32[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueInt32_List* RogueInt32_List__reserve__Int32( RogueInt32_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Int32[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueInt32) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueInt32_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueInt32) )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueArray_Int32___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Int32>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[866]);
}

RogueString* RogueMath__type_name( RogueClassMath* THIS )
{
  RogueDebugTrace __trace( "Math.type_name()", "Math.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[770]);
}

RogueClassMath* RogueMath__init_object( RogueClassMath* THIS )
{
  RogueDebugTrace __trace( "Math.init_object()", "Math.rogue", 1 );
  return (RogueClassMath*)(THIS);
}

RogueString* RogueArray_Byte___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Byte>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[867]);
}

RogueString* RogueSystem__type_name( RogueClassSystem* THIS )
{
  RogueDebugTrace __trace( "System.type_name()", "System.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[479]);
}

RogueClassSystem* RogueSystem__init_object( RogueClassSystem* THIS )
{
  RogueDebugTrace __trace( "System.init_object()", "System.rogue", 1 );
  return (RogueClassSystem*)(THIS);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_TypeInfo___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueString* RogueTable_String_TypeInfo___to_String( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeInfo___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeInfo___type_name( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[771]);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init__Int32( RogueClassTable_String_TypeInfo_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_TypeInfo__List__init__Int32_TableEntry_String_TypeInfo_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TypeInfo__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeInfo__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TypeInfo_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueClassTableEntry_String_TypeInfo_* RogueTable_String_TypeInfo___find__String( RogueClassTable_String_TypeInfo_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,entry_2,(((RogueClassTableEntry_String_TypeInfo_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TypeInfo_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_TypeInfo_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_TypeInfo_*)(((RogueClassTableEntry_String_TypeInfo_*)(NULL)));
}

RogueTypeInfo* RogueTable_String_TypeInfo___get__String( RogueClassTable_String_TypeInfo_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,entry_1,(((RogueTable_String_TypeInfo___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueTypeInfo*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueTypeInfo*,default_value_2,0);
    __trace.line = 62;
    return (RogueTypeInfo*)(default_value_2);
  }
}

RogueStringBuilder* RogueTable_String_TypeInfo___print_to__StringBuilder( RogueClassTable_String_TypeInfo_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TypeInfo___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init_object( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeInfo>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueLogical RogueReader_Byte___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 320:
      return RogueFileReader__has_another( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueByte RogueReader_Byte___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 320:
      return RogueFileReader__read( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueString* RogueArray_Character___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Character>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[868]);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init( RogueTableEntry_String_String__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_String__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueString* RogueTableEntry_String_String__List__to_String( RogueTableEntry_String_String__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_String__List*,_auto_1637_2,(THIS));
    RogueInt32 _auto_1638_3 = (0);
    for (;_auto_1638_3 < _auto_1637_2->count;++_auto_1638_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,value_4,(((RogueClassTableEntry_String_String_*)(_auto_1637_2->data->objects[_auto_1638_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_String___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_String__List__type_name( RogueTableEntry_String_String__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[824]);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init_object( RogueTableEntry_String_String__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init__Int32( RogueTableEntry_String_String__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__init__Int32_TableEntry_String_String_( RogueTableEntry_String_String__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_String_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].init(Int32,TableEntry<<String,String>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_425_3 = (initial_capacity_0);
      for (;i_2 <= _auto_425_3;++i_2)
      {
        RogueTableEntry_String_String__List__add__TableEntry_String_String_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__add__TableEntry_String_String_( RogueTableEntry_String_String__List* THIS, RogueClassTableEntry_String_String_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].add(TableEntry<<String,String>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_String__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_String__List__capacity( RogueTableEntry_String_String__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_String__List* RogueTableEntry_String_String__List__reserve__Int32( RogueTableEntry_String_String__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_String__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_String__List*)(THIS);
}

RogueString* RogueTableEntry_String_String___to_String( RogueClassTableEntry_String_String_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_String___type_name( RogueClassTableEntry_String_String_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[722]);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init__String_String_Int32( RogueClassTableEntry_String_String_* THIS, RogueString* _key_0, RogueString* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>.init(String,String,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init_object( RogueClassTableEntry_String_String_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_String____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,String>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[869]);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init( RogueClassTable_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Logical___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueString* RogueTable_String_Logical___to_String( RogueClassTable_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Logical___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Logical___type_name( RogueClassTable_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[772]);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init__Int32( RogueClassTable_String_Logical_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Logical__List__init__Int32_TableEntry_String_Logical_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Logical__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Logical__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Logical_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueLogical RogueTable_String_Logical___contains__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.contains(String)", "Table.rogue", 39 );
  __trace.line = 40;
  return (RogueLogical)(!!(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Logical_* RogueTable_String_Logical___find__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_2,(((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Logical_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Logical_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Logical_*)(((RogueClassTableEntry_String_Logical_*)(NULL)));
}

RogueLogical RogueTable_String_Logical___get__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_1,(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueLogical)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    RogueLogical default_value_2 = 0;
    __trace.line = 62;
    return (RogueLogical)(default_value_2);
  }
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___set__String_Logical( RogueClassTable_String_Logical_* THIS, RogueString* key_0, RogueLogical value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.set(String,Logical)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_4,(((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Logical_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Logical_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Logical_*)((RogueTableEntry_String_Logical___init__String_Logical_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Logical_*,ROGUE_CREATE_OBJECT(TableEntry_String_Logical_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Logical_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Logical___print_to__StringBuilder( RogueClassTable_String_Logical_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Logical( buffer_0, ROGUE_ARG(((RogueTable_String_Logical___get__String( ROGUE_ARG(THIS), key_2 )))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init_object( RogueClassTable_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Logical>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueParser_List* RogueParser_List__init( RogueParser_List* THIS )
{
  RogueDebugTrace __trace( "Parser[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueParser_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueParser_List*)(THIS);
}

RogueString* RogueParser_List__to_String( RogueParser_List* THIS )
{
  RogueDebugTrace __trace( "Parser[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_1701_2,(THIS));
    RogueInt32 _auto_1702_3 = (0);
    for (;_auto_1702_3 < _auto_1701_2->count;++_auto_1702_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassParser*,value_4,(((RogueClassParser*)(_auto_1701_2->data->objects[_auto_1702_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueParser_List__type_name( RogueParser_List* THIS )
{
  RogueDebugTrace __trace( "Parser[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[825]);
}

RogueParser_List* RogueParser_List__init_object( RogueParser_List* THIS )
{
  RogueDebugTrace __trace( "Parser[].init_object()", "List.rogue", 4 );
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__init__Int32( RogueParser_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Parser[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassParser*), true );
  }
  __trace.line = 16;
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__add__Parser( RogueParser_List* THIS, RogueClassParser* value_0 )
{
  RogueDebugTrace __trace( "Parser[].add(Parser)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueParser_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueParser_List*)(THIS);
}

RogueInt32 RogueParser_List__capacity( RogueParser_List* THIS )
{
  RogueDebugTrace __trace( "Parser[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueParser_List* RogueParser_List__reserve__Int32( RogueParser_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Parser[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueParser_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueParser_List*)(THIS);
}

RogueString* RogueParser__type_name( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.type_name()", "Parser.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[773]);
}

RogueClassParser* RogueParser__init__String( RogueClassParser* THIS, RogueString* _auto_504_0 )
{
  RogueDebugTrace __trace( "Parser.init(String)", "Parser.rogue", 23 );
  THIS->filepath = _auto_504_0;
  __trace.line = 24;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM0( 0, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath) )))) )))), true );
  __trace.line = 26;
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__String_String( RogueClassParser* THIS, RogueString* _auto_505_0, RogueString* content_1 )
{
  RogueDebugTrace __trace( "Parser.init(String,String)", "Parser.rogue", 26 );
  THIS->filepath = _auto_505_0;
  __trace.line = 27;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM0( 0, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath), content_1 )))) )))), true );
  __trace.line = 29;
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_String_String( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* _auto_506_1, RogueString* data_2 )
{
  RogueDebugTrace __trace( "Parser.init(Token,String,String)", "Parser.rogue", 29 );
  THIS->filepath = _auto_506_1;
  __trace.line = 30;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__Token_String_String( ROGUE_ARG(((RogueClassTokenizer*)((call_ROGUEM0( 0, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), t_0, ROGUE_ARG(THIS->filepath), data_2 )))) )))), true );
  __trace.line = 32;
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_List_Logical( RogueClassParser* THIS, RogueToken_List* tokens_0, RogueLogical skip_reprocess_1 )
{
  RogueDebugTrace __trace( "Parser.init(Token[],Logical)", "Parser.rogue", 32 );
  __trace.line = 33;
  if (!(skip_reprocess_1))
  {
    tokens_0 = ((RogueToken_List*)((RoguePreprocessor__reprocess__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), tokens_0 ))));
  }
  __trace.line = 34;
  THIS->reader = ((RogueTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenReader*,ROGUE_CREATE_OBJECT(TokenReader))), tokens_0 )));
  __trace.line = 36;
  return (RogueClassParser*)(THIS);
}

void RogueParser__add_used_module__String( RogueClassParser* THIS, RogueString* module_name_0 )
{
  RogueDebugTrace __trace( "Parser.add_used_module(String)", "Parser.rogue", 36 );
  __trace.line = 37;
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->used_modules), module_name_0 ))).exists)
  {
    return;
  }
  __trace.line = 38;
  RogueString_List__add__String( ROGUE_ARG(THIS->used_modules), module_name_0 );
  __trace.line = 40;
  ROGUE_DEF_LOCAL_REF(RogueString_List*,module_ids_1,(((RogueTable_String_String_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->ids_by_module), module_name_0 )))));
  __trace.line = 41;
  if (!!(module_ids_1))
  {
    __trace.line = 42;
    if (!(!!(THIS->module_id_map)))
    {
      THIS->module_id_map = ((RogueTable_String_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_*,ROGUE_CREATE_OBJECT(Table_String_String_))) )));
    }
    __trace.line = 43;
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1755_2,(module_ids_1));
      RogueInt32 _auto_1756_3 = (0);
      for (;_auto_1756_3 < _auto_1755_2->count;++_auto_1756_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,m_id_4,(((RogueString*)(_auto_1755_2->data->objects[_auto_1756_3]))));
        __trace.line = 44;
        RogueTable_String_String___set__String_String( ROGUE_ARG(THIS->module_id_map), m_id_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], module_name_0 )))) )))), Rogue_literal_strings[96] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_id_4 )))) )))) )))) );
      }
    }
  }
}

RogueLogical RogueParser__consume__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Parser.consume(TokenType)", "Parser.rogue", 48 );
  __trace.line = 49;
  if (!(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 50;
  RogueTokenReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 51;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume__String( RogueClassParser* THIS, RogueString* identifier_0 )
{
  RogueDebugTrace __trace( "Parser.consume(String)", "Parser.rogue", 53 );
  __trace.line = 54;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  __trace.line = 55;
  if (((void*)t_1->_type) != ((void*)RogueTokenType_identifier))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 56;
  if (((RogueString__operatorLTGT__String( ROGUE_ARG((call_ROGUEM68( 4, t_1 ))), identifier_0 ))) != 0)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 57;
  RogueParser__read( ROGUE_ARG(THIS) );
  __trace.line = 58;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume_end_commands( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.consume_end_commands()", "Parser.rogue", 60 );
  __trace.line = 61;
  RogueLogical found_0 = (false);
  __trace.line = 62;
  while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
  {
    found_0 = ((RogueLogical)true);
  }
  __trace.line = 63;
  return (RogueLogical)(found_0);
}

RogueLogical RogueParser__consume_eols( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.consume_eols()", "Parser.rogue", 65 );
  __trace.line = 66;
  RogueLogical found_any_0 = (false);
  __trace.line = 67;
  while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
  {
    found_any_0 = ((RogueLogical)true);
  }
  __trace.line = 68;
  return (RogueLogical)(found_any_0);
}

RogueClassRogueError* RogueParser__error__String( RogueClassParser* THIS, RogueString* message_0 )
{
  RogueDebugTrace __trace( "Parser.error(String)", "Parser.rogue", 70 );
  __trace.line = 71;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))), message_0 ))));
}

void RogueParser__insert_module_prefixes( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.insert_module_prefixes()", "Parser.rogue", 73 );
  __trace.line = 74;
  if (THIS->inserted_module_prefixes)
  {
    return;
  }
  __trace.line = 75;
  THIS->inserted_module_prefixes = true;
  __trace.line = 77;
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 79;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    __trace.line = 80;
    if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
    {
      __trace.line = 81;
      ROGUE_DEF_LOCAL_REF(RogueString*,name_1,((call_ROGUEM68( 4, t_0 ))));
      __trace.line = 82;
      if (RogueString_character_at(name_1,0) == (RogueCharacter)':')
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->reader->tokens->data->objects[(THIS->reader->position - 1)] = (call_ROGUEM141( 15, ROGUE_ARG(t_0->_type), t_0, ROGUE_ARG(((RogueString__from__Int32( name_1, 2 )))) ));
      }
      else if (!!(THIS->module_id_map))
      {
        __trace.filename = "Parser.rogue";
        __trace.line = 86;
        ROGUE_DEF_LOCAL_REF(RogueString*,mapping_2,((call_ROGUEM17( 16, ROGUE_ARG(THIS->module_id_map), name_1 ))));
        __trace.line = 87;
        if (!!(mapping_2))
        {
          __trace.filename = "List.rogue";
          __trace.line = 308;
          THIS->reader->tokens->data->objects[(THIS->reader->position - 1)] = (call_ROGUEM141( 15, ROGUE_ARG(t_0->_type), t_0, mapping_2 ));
        }
      }
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
    {
      __trace.filename = "Parser.rogue";
      __trace.line = 93;
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
    {
      __trace.line = 96;
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
  }
  __trace.line = 101;
  THIS->reader->position = 0;
}

void RogueParser__must_consume__TokenType_String( RogueClassParser* THIS, RogueClassTokenType* type_0, RogueString* error_message_1 )
{
  RogueDebugTrace __trace( "Parser.must_consume(TokenType,String)", "Parser.rogue", 103 );
  __trace.line = 104;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), type_0 ))))
  {
    return;
  }
  __trace.line = 105;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 106;
  if (!(!!(error_message_1)))
  {
    __trace.line = 107;
    error_message_1 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( type_0 )))) )))) )))), Rogue_literal_strings[297] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 13, t_2 ))) )))) )))), Rogue_literal_strings[78] )))) ))));
  }
  __trace.line = 109;
  ROGUE_THROW(((RogueToken__error__String( t_2, error_message_1 ))));
}

void RogueParser__must_consume_eols( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.must_consume_eols()", "Parser.rogue", 111 );
  __trace.line = 112;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 113;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
}

RogueClassToken* RogueParser__must_read__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Parser.must_read(TokenType)", "Parser.rogue", 115 );
  __trace.line = 116;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  __trace.line = 117;
  if (((void*)t_1->_type) != ((void*)type_0))
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), type_0, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  __trace.line = 118;
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueLogical RogueParser__next_is__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Parser.next_is(TokenType)", "Parser.rogue", 120 );
  __trace.line = 121;
  return (RogueLogical)(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 ))));
}

RogueLogical RogueParser__next_is_end_command( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.next_is_end_command()", "Parser.rogue", 123 );
  __trace.line = 124;
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 125;
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,type_0,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type));
  __trace.line = 126;
  return (RogueLogical)(type_0->is_end_command);
}

RogueLogical RogueParser__next_is_identifier__String( RogueClassParser* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "Parser.next_is_identifier(String)", "Parser.rogue", 128 );
  __trace.line = 129;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 130;
  if (!(((RogueObject__operatorEQUALSEQUALS__Object( ROGUE_ARG(((RogueObject*)t_1->_type)), ROGUE_ARG(((RogueObject*)(RogueTokenType_identifier))) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 131;
  if (!(!!(name_0)))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 132;
  return (RogueLogical)(((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((call_ROGUEM68( 4, t_1 ))), name_0 ))));
}

RogueLogical RogueParser__next_is_statement( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.next_is_statement()", "Parser.rogue", 134 );
  __trace.line = 135;
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 136;
  return (RogueLogical)(((RogueTokenReader__next_is_statement_token( ROGUE_ARG(THIS->reader) ))));
}

void RogueParser__parse_elements( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_elements()", "Parser.rogue", 138 );
  __trace.line = 139;
  RogueParser__insert_module_prefixes( ROGUE_ARG(THIS) );
  __trace.line = 141;
  while (((RogueParser__parse_element( ROGUE_ARG(THIS) ))))
  {
  }
  __trace.line = 143;
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 144;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 145;
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[369] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 13, t_0 ))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_element( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_element()", "Parser.rogue", 148 );
  __trace.line = 149;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 150;
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 152;
  if (((RogueParser__parse_native_element( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 154;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 156;
  if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_class))
  {
    __trace.line = 157;
    RogueParser__parse_class_template( ROGUE_ARG(THIS) );
    __trace.line = 158;
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_routine))
  {
    __trace.line = 161;
    RogueParser__parse_routine( ROGUE_ARG(THIS) );
    __trace.line = 162;
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_augment))
  {
    __trace.line = 165;
    RogueParser__parse_augment( ROGUE_ARG(THIS) );
    __trace.line = 166;
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
  {
    __trace.line = 170;
    RogueParser__read( ROGUE_ARG(THIS) );
    __trace.line = 171;
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    __trace.line = 172;
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 173;
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
  {
    __trace.line = 177;
    RogueParser__read( ROGUE_ARG(THIS) );
    __trace.line = 178;
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    __trace.line = 179;
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 180;
    return (RogueLogical)(true);
  }
  else if (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 183;
    THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[71] )));
    __trace.line = 184;
    THIS->this_method = ((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
    __trace.line = 185;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    __trace.line = 186;
    return (RogueLogical)(true);
  }
  __trace.line = 190;
  return (RogueLogical)(false);
}

void RogueParser__parse_class_template( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_class_template()", "Parser.rogue", 192 );
  __trace.line = 193;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 194;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  __trace.line = 195;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 0 )))));
  __trace.line = 196;
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endClass) );
  __trace.line = 198;
  switch (((Rogue_Template__element_type( template_2 ))))
  {
    case 3:
    {
      __trace.line = 200;
      RogueAttributes__add__Int32( ROGUE_ARG(template_2->attributes), 16 );
      break;
    }
  }
}

void RogueParser__parse_routine( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_routine()", "Parser.rogue", 203 );
  __trace.line = 204;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 205;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  __trace.line = 206;
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 1048576 )))));
  __trace.line = 207;
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endRoutine) );
}

void RogueParser__parse_template_tokens__Template_TokenType( RogueClassParser* THIS, RogueClassTemplate* template_0, RogueClassTokenType* end_type_1 )
{
  RogueDebugTrace __trace( "Parser.parse_template_tokens(Template,TokenType)", "Parser.rogue", 209 );
  __trace.line = 210;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 212;
  RogueLogical is_routine_3 = (((void*)end_type_1) == ((void*)RogueTokenType_keyword_endRoutine));
  __trace.line = 214;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    __trace.line = 215;
    RogueLogical first_4 = (true);
    __trace.line = 216;
    while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      __trace.line = 217;
      first_4 = ((RogueLogical)false);
      __trace.line = 218;
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
      __trace.line = 219;
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_6,(((RogueTemplate__add_type_parameter__Token_String( template_0, t_5, ROGUE_ARG((call_ROGUEM68( 4, t_5 ))) )))));
    }
    __trace.line = 221;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  __trace.line = 227;
  RogueInt32 starting_pos_7 = (THIS->reader->position);
  __trace.line = 229;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    __trace.line = 231;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 232;
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      __trace.line = 233;
      RogueLogical first_8 = (true);
      __trace.line = 234;
      while ((first_8 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 235;
        first_8 = ((RogueLogical)false);
        __trace.line = 236;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 237;
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) );
        __trace.line = 238;
        RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
        __trace.line = 239;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 240;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          RogueParser__parse_expression( ROGUE_ARG(THIS) );
        }
        __trace.line = 241;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 242;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          __trace.line = 243;
          if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))))
          {
            RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
          }
        }
        __trace.line = 245;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      __trace.line = 247;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  __trace.line = 251;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    __trace.line = 252;
    RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    __trace.line = 253;
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    }
  }
  __trace.line = 256;
  RogueInt32 final_pos_9 = (THIS->reader->position);
  __trace.line = 258;
  if (is_routine_3)
  {
    __trace.line = 265;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      __trace.line = 266;
      template_0->_routine_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
    }
    __trace.line = 269;
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    __trace.line = 271;
    THIS->reader->position = starting_pos_7;
    __trace.line = 273;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 274;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    __trace.line = 275;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_GLOBAL), first_t_2 )))) );
    __trace.line = 276;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_METHODS), first_t_2 )))) );
    __trace.line = 277;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    __trace.line = 278;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), first_t_2 )))) );
    __trace.line = 279;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG((call_ROGUEM141( 15, ROGUE_ARG(RogueTokenType_identifier), first_t_2, Rogue_literal_strings[428] ))) );
  }
  else
  {
    __trace.line = 282;
    THIS->reader->position = starting_pos_7;
    __trace.line = 283;
    while (THIS->reader->position < final_pos_9)
    {
      RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) );
    }
    __trace.line = 286;
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    __trace.line = 288;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,semi_t_10,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 289;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
      __trace.line = 290;
      if (template_0->tokens->count == 0)
      {
        RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eol), semi_t_10 )))) );
      }
      __trace.line = 291;
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      __trace.line = 292;
      return;
    }
  }
  __trace.line = 297;
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 298;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_11,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    __trace.line = 299;
    if (((void*)t_11->_type) == ((void*)end_type_1))
    {
      __trace.line = 300;
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      __trace.line = 301;
      return;
    }
    __trace.line = 303;
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), t_11 );
  }
  __trace.line = 306;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[448] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(end_type_1))) )))) )))) )))) );
  __trace.line = 307;
  ROGUE_THROW(((RogueTokenReader__error__String( ROGUE_ARG(THIS->reader), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( end_type_1 )))) )))) )))), Rogue_literal_strings[449] )))) )))) ))));
}

void RogueParser__parse_augment( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_augment()", "Parser.rogue", 309 );
  __trace.line = 310;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  __trace.line = 312;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
  __trace.line = 313;
  if (((RogueString__contains__Character( name_1, (RogueCharacter)'$' ))))
  {
    __trace.line = 314;
    ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__before_first__Character( name_1, (RogueCharacter)'<' )))));
    __trace.line = 315;
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[450] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[451] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[452] )))) )))) ))));
  }
  __trace.line = 318;
  ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_3,(((RogueAugment__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAugment*,ROGUE_CREATE_OBJECT(Augment))), t_0, name_1 )))));
  __trace.line = 319;
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_4,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1 )))));
  __trace.line = 320;
  if (!(!!(augments_4)))
  {
    __trace.line = 321;
    augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
    __trace.line = 322;
    RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1, augments_4 );
  }
  __trace.line = 324;
  RogueAugment_List__add__Augment( augments_4, aug_3 );
  __trace.line = 326;
  ROGUE_DEF_LOCAL_REF(RogueString*,base_name_5,(((RogueString__after_any__String( name_1, Rogue_literal_strings[96] )))));
  __trace.line = 328;
  if (base_name_5->character_count < name_1->character_count)
  {
    __trace.line = 329;
    augments_4 = ((RogueAugment_List*)((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5 ))));
    __trace.line = 330;
    if (!(!!(augments_4)))
    {
      __trace.line = 331;
      augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
      __trace.line = 332;
      RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5, augments_4 );
    }
    __trace.line = 334;
    RogueAugment_List__add__Augment( augments_4, aug_3 );
  }
  __trace.line = 337;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
  {
    return;
  }
  __trace.line = 339;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    __trace.line = 340;
    RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
    __trace.line = 341;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 342;
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      __trace.line = 343;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 344;
      RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      __trace.line = 345;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 348;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 350;
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment) ))))))
  {
    __trace.line = 351;
    RogueToken_List__add__Token( ROGUE_ARG(aug_3->tokens), ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  __trace.line = 354;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__parse_attributes__Attributes( RogueClassParser* THIS, RogueClassAttributes* attributes_0 )
{
  RogueDebugTrace __trace( "Parser.parse_attributes(Attributes)", "Parser.rogue", 357 );
  __trace.line = 358;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) )))))
  {
    return;
  }
  __trace.line = 360;
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))))
  {
    __trace.line = 361;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 362;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      __trace.line = 363;
      RogueAttributes__add__Int32( attributes_0, 32 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[353] ))))
    {
      __trace.line = 366;
      RogueAttributes__add__Int32( attributes_0, 524288 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[354] ))))
    {
      __trace.line = 368;
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      __trace.line = 369;
      RogueAttributes__add__Int32( attributes_0, 2 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[358] ))))
    {
      __trace.line = 371;
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      __trace.line = 372;
      RogueAttributes__add__Int32( attributes_0, 3 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[359] ))))
    {
      __trace.line = 374;
      RogueAttributes__add__Int32( attributes_0, 2097152 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[360] ))))
    {
      __trace.line = 376;
      RogueAttributes__add__Int32( attributes_0, 48 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[361] ))))
    {
      __trace.line = 378;
      RogueAttributes__add__Int32( attributes_0, 256 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[362] ))))
    {
      __trace.line = 380;
      RogueAttributes__add__Int32( attributes_0, 64 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[357] ))))
    {
      __trace.line = 382;
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      __trace.line = 383;
      RogueAttributes__add__Int32( attributes_0, 1 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[363] ))))
    {
      __trace.line = 385;
      RogueAttributes__add__Int32( attributes_0, 8388608 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[280] ))))
    {
      __trace.line = 387;
      RogueAttributes__add__Int32( attributes_0, 32768 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[364] ))))
    {
      __trace.line = 389;
      RogueAttributes__add__Int32( attributes_0, 1024 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[365] ))))
    {
      __trace.line = 391;
      RogueAttributes__add__Int32( attributes_0, 4194304 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[366] ))))
    {
      __trace.line = 393;
      RogueAttributes__add__Int32( attributes_0, 65536 );
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))))
    {
      __trace.line = 395;
      RogueAttributes__add__String( attributes_0, ROGUE_ARG((call_ROGUEM68( 4, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))) );
    }
    else
    {
      __trace.line = 397;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[367], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))) ))));
    }
  }
  __trace.line = 401;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__ensure_unspecialized_element_type__Token_Attributes( RogueClassParser* THIS, RogueClassToken* t_0, RogueClassAttributes* attributes_1 )
{
  RogueDebugTrace __trace( "Parser.ensure_unspecialized_element_type(Token,Attributes)", "Parser.rogue", 403 );
  __trace.line = 404;
  if (!!((attributes_1->flags & 7)))
  {
    __trace.line = 405;
    ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[355] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 4, t_0 ))) )))) )))), Rogue_literal_strings[356] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueAttributes__element_type_name( attributes_1 )))) )))) )))), Rogue_literal_strings[45] )))) )))) ))));
  }
}

void RogueParser__parse_type_def__Type( RogueClassParser* THIS, RogueClassType* _auto_507_0 )
{
  RogueDebugTrace __trace( "Parser.parse_type_def(Type)", "Parser.rogue", 408 );
  THIS->_this_type = _auto_507_0;
  __trace.line = 409;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 411;
  RogueLogical compound_has_create_2 = (false);
  __trace.line = 412;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    __trace.line = 414;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 415;
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      __trace.line = 416;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,0);
      __trace.line = 417;
      if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
      {
        __trace.line = 418;
        compound_has_create_2 = ((RogueLogical)true);
        __trace.line = 419;
        m_3 = ((RogueClassMethod*)((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[321] ))));
        __trace.line = 420;
        RogueAttributes__add__Int32( ROGUE_ARG(m_3->attributes), 16384 );
      }
      else
      {
        __trace.line = 422;
        m_3 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[307] ))));
      }
      __trace.line = 424;
      m_3->_return_type = THIS->_this_type;
      __trace.line = 425;
      RogueLogical first_4 = (true);
      __trace.line = 426;
      while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 427;
        first_4 = ((RogueLogical)false);
        __trace.line = 428;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 431;
        t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        __trace.line = 432;
        RogueLogical is_flag_5 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        __trace.line = 433;
        ROGUE_DEF_LOCAL_REF(RogueString*,p_name_6,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
        __trace.line = 434;
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueMethod__add_parameter__Token_String_Type( m_3, t_1, p_name_6, ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        __trace.line = 435;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 436;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          param_7->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        __trace.line = 437;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 439;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_8,0);
        __trace.line = 440;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          __trace.line = 441;
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          __trace.line = 442;
          p_type_8 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
          __trace.line = 444;
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            __trace.line = 445;
            param_7->_type = p_type_8;
          }
          __trace.line = 448;
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        else if (is_flag_5)
        {
          __trace.line = 451;
          p_type_8 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
          __trace.line = 452;
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            param_7->_type = p_type_8;
          }
          __trace.line = 453;
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        __trace.line = 456;
        if ((is_flag_5 && !(!!(param_7->initial_value))))
        {
          __trace.line = 457;
          if (((void*)p_type_8) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
          {
            __trace.line = 458;
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_1, false )))));
          }
          else
          {
            __trace.line = 460;
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, 0 )))));
          }
        }
        __trace.line = 464;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      __trace.line = 466;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  __trace.line = 470;
  if ((((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))) && !(compound_has_create_2)))
  {
    __trace.line = 471;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[321] )))));
    __trace.line = 472;
    RogueAttributes__add__Int32( ROGUE_ARG(m_9->attributes), 16384 );
    __trace.line = 473;
    m_9->_return_type = THIS->_this_type;
  }
  __trace.line = 476;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    __trace.line = 478;
    RogueLogical first_10 = (true);
    __trace.line = 479;
    while ((first_10 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      __trace.line = 480;
      first_10 = ((RogueLogical)false);
      __trace.line = 481;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 482;
      RogueType_List__add__Type( ROGUE_ARG(THIS->_this_type->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      __trace.line = 483;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 487;
  while (((RogueParser__parse_section( ROGUE_ARG(THIS) ))))
  {
  }
  __trace.line = 488;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 490;
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 491;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[369] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 13, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_section( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_section()", "Parser.rogue", 494 );
  __trace.line = 495;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 497;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_CLASS) ))))
  {
    __trace.line = 498;
    while (((RogueParser__parse_class_level_element( ROGUE_ARG(THIS) ))))
    {
    }
    __trace.line = 499;
    return (RogueLogical)(true);
  }
  __trace.line = 502;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_begin_augment_tokens) ))))
  {
    __trace.line = 503;
    THIS->parsing_augment = true;
    __trace.line = 504;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  __trace.line = 507;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ENUMERATE) ))))
  {
    __trace.line = 508;
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), true ))))
    {
    }
    __trace.line = 509;
    return (RogueLogical)(true);
  }
  __trace.line = 512;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_DEFINITIONS) ))))
  {
    __trace.line = 513;
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    __trace.line = 514;
    return (RogueLogical)(true);
  }
  __trace.line = 517;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_GLOBAL) ))))
  {
    __trace.line = 518;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
    {
      __trace.line = 519;
      while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), true ))))
      {
      }
      __trace.line = 520;
      return (RogueLogical)(true);
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
    {
      __trace.line = 522;
      while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), true, false ))))
      {
      }
      __trace.line = 523;
      return (RogueLogical)(true);
    }
  }
  __trace.line = 527;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
  {
    __trace.line = 528;
    while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    __trace.line = 529;
    return (RogueLogical)(true);
  }
  __trace.line = 532;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
  {
    __trace.line = 533;
    while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), false, false ))))
    {
    }
    __trace.line = 534;
    return (RogueLogical)(true);
  }
  __trace.line = 538;
  return (RogueLogical)(false);
}

RogueLogical RogueParser__parse_definitions__Logical( RogueClassParser* THIS, RogueLogical enumerate_0 )
{
  RogueDebugTrace __trace( "Parser.parse_definitions(Logical)", "Parser.rogue", 540 );
  __trace.line = 541;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 542;
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 544;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 545;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  __trace.line = 546;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
  __trace.line = 548;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    __trace.line = 549;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 550;
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  else if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 552;
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  __trace.line = 555;
  if ((!(enumerate_0) && !(!!(value_3))))
  {
    __trace.line = 556;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[339] ))));
  }
  __trace.line = 559;
  if (!!(value_3))
  {
    __trace.line = 560;
    if (RogueObject_instance_of(value_3,RogueTypeCmdLiteralInt32))
    {
      __trace.line = 561;
      THIS->_this_type->prev_enum_cmd = ((RogueClassCmd*)(NULL));
      __trace.line = 562;
      THIS->_this_type->next_enum_offset = (((RogueClassCmdLiteralInt32*)(RogueObject_as(value_3,RogueTypeCmdLiteralInt32)))->value + 1);
    }
    else
    {
      __trace.line = 564;
      THIS->_this_type->prev_enum_cmd = value_3;
      __trace.line = 565;
      THIS->_this_type->next_enum_offset = 1;
    }
  }
  else
  {
    __trace.line = 568;
    if (!!(THIS->_this_type->prev_enum_cmd))
    {
      __trace.line = 569;
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->_this_type->prev_enum_cmd), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) )))))) ))))))));
    }
    else
    {
      __trace.line = 571;
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) ))))));
    }
    __trace.line = 573;
    ++THIS->_this_type->next_enum_offset;
  }
  __trace.line = 576;
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_4,(((RogueDefinition__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassDefinition*,ROGUE_CREATE_OBJECT(Definition))), t_1, name_2, value_3, enumerate_0 )))));
  __trace.line = 577;
  RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->_this_type->definition_lookup), name_2, def_4 );
  __trace.line = 578;
  RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->_this_type->definition_list), def_4 );
  __trace.line = 580;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_properties__Logical( RogueClassParser* THIS, RogueLogical as_global_0 )
{
  RogueDebugTrace __trace( "Parser.parse_properties(Logical)", "Parser.rogue", 582 );
  __trace.line = 583;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 585;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    __trace.line = 587;
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      __trace.line = 588;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[343] ))));
    }
    __trace.line = 591;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,native_t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
    __trace.line = 592;
    RogueProperty__mark_native( ROGUE_ARG(((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), native_t_1, ROGUE_ARG((call_ROGUEM68( 4, native_t_1 ))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
    __trace.line = 594;
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 595;
    return (RogueLogical)(true);
  }
  __trace.line = 598;
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 600;
  RogueProperty_List__clear( ROGUE_ARG(THIS->property_list) );
  __trace.line = 604;
  RogueLogical first_2 = (true);
  __trace.line = 605;
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 606;
    first_2 = ((RogueLogical)false);
    __trace.line = 607;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 608;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 609;
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 610;
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,0);
    __trace.line = 611;
    if (as_global_0)
    {
      p_5 = ((RogueClassProperty*)((RogueType__add_global__Token_String( ROGUE_ARG(THIS->_this_type), t_3, name_4 ))));
    }
    else
    {
      __trace.line = 612;
      p_5 = ((RogueClassProperty*)((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_3, name_4, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
    }
    __trace.line = 613;
    RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_5 );
    __trace.line = 614;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      __trace.line = 615;
      p_5->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  __trace.line = 619;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 620;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    __trace.line = 621;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_6,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    __trace.line = 622;
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1759_8,(THIS->property_list));
      RogueInt32 _auto_1760_9 = (0);
      for (;_auto_1760_9 < _auto_1759_8->count;++_auto_1760_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1759_8->data->objects[_auto_1760_9]))));
        __trace.line = 623;
        p_10->_type = p_type_6;
      }
    }
  }
  else
  {
    __trace.line = 626;
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1761_11,(THIS->property_list));
      RogueInt32 _auto_1762_12 = (0);
      for (;_auto_1762_12 < _auto_1761_11->count;++_auto_1762_12)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_1761_11->data->objects[_auto_1762_12]))));
        __trace.line = 627;
        ROGUE_DEF_LOCAL_REF(RogueString*,name_7,(Rogue_literal_strings[344]));
        __trace.line = 628;
        if (as_global_0)
        {
          name_7 = ((RogueString*)Rogue_literal_strings[345]);
        }
        __trace.line = 629;
        if (!!(p_13->initial_value))
        {
          __trace.line = 630;
          p_13->_type = (call_ROGUEM101( 23, ROGUE_ARG(p_13->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          __trace.line = 631;
          if (((void*)p_13->_type) == ((void*)NULL))
          {
            __trace.line = 632;
            RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG((call_ROGUEM98( 6, ROGUE_ARG(p_13->initial_value) ))) );
            __trace.line = 633;
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_13->initial_value->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[346] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[347] )))) )))) ))));
          }
        }
        else
        {
          __trace.line = 637;
          ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(p_13->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[348] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[349] )))) )))) ))));
        }
      }
    }
  }
  __trace.line = 642;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_method__Logical_Logical( RogueClassParser* THIS, RogueLogical as_global_0, RogueLogical use_injection_1 )
{
  RogueDebugTrace __trace( "Parser.parse_method(Logical,Logical)", "Parser.rogue", 644 );
  __trace.line = 645;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 647;
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_method) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 649;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 650;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  __trace.line = 651;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
  __trace.line = 652;
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[350] ))))
    {
      __trace.line = 654;
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG((call_ROGUEM68( 4, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) ))));
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[351] ))))
    {
      __trace.line = 656;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 657;
      return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
      __trace.line = 658;
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[352], ROGUE_ARG(return_type_4->name) ))));
    }
    else
    {
    }
  }
  __trace.line = 662;
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    __trace.line = 663;
    RogueParser__parse_method_template__Token_String_Logical( ROGUE_ARG(THIS), t_2, name_3, as_global_0 );
    __trace.line = 664;
    return (RogueLogical)(true);
  }
  __trace.line = 667;
  THIS->this_method = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_2, ROGUE_ARG(THIS->_this_type), name_3 )));
  __trace.line = 668;
  THIS->this_method->_return_type = return_type_4;
  __trace.line = 671;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    __trace.line = 672;
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      __trace.line = 673;
      RogueLogical first_5 = (true);
      __trace.line = 674;
      while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 675;
        first_5 = ((RogueLogical)false);
        __trace.line = 676;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 678;
        RogueLogical is_flag_6 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        __trace.line = 681;
        t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        __trace.line = 682;
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), true )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        __trace.line = 684;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          __trace.line = 686;
          param_7->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        __trace.line = 689;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          __trace.line = 691;
          param_7->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
        }
        __trace.line = 694;
        if (is_flag_6)
        {
          __trace.line = 695;
          if (!(!!(param_7->_type)))
          {
            param_7->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
          }
          __trace.line = 696;
          if (!(!!(param_7->initial_value)))
          {
            param_7->initial_value = ((RogueType__create_default_value__Token( ROGUE_ARG(param_7->_type), ROGUE_ARG(param_7->t) )));
          }
        }
      }
      __trace.line = 699;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  __trace.line = 704;
  if (!(!!(return_type_4)))
  {
    __trace.line = 705;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      __trace.line = 706;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
      {
        __trace.line = 707;
        THIS->this_method->_return_type = THIS->_this_type;
      }
      else
      {
        __trace.line = 709;
        THIS->this_method->_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
      }
    }
  }
  __trace.line = 714;
  RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->attributes) );
  __trace.line = 715;
  if (THIS->parsing_augment)
  {
    RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 262144 );
  }
  __trace.line = 717;
  if (use_injection_1)
  {
    __trace.line = 718;
    if (as_global_0)
    {
      RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method), ROGUE_ARG((RogueOptionalInt32__create())) );
    }
    else
    {
      __trace.line = 719;
      RogueType__inject_method__Method_OptionalInt32( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method), ROGUE_ARG((RogueOptionalInt32__create())) );
    }
  }
  else if (as_global_0)
  {
    __trace.line = 721;
    RogueType__add_global_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
  }
  else
  {
    __trace.line = 722;
    RogueType__add_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
  }
  __trace.line = 725;
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
  __trace.line = 727;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 729;
  if (((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) ))))
  {
    __trace.line = 730;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      __trace.line = 731;
      RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 32 );
    }
    __trace.line = 734;
    if (((RogueMethod__is_native( ROGUE_ARG(THIS->this_method) ))))
    {
      __trace.line = 737;
      RogueLogical has_parens_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
      __trace.line = 738;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 740;
      if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
      {
        __trace.line = 741;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[343] ))));
      }
      __trace.line = 744;
      THIS->this_method->native_code = (call_ROGUEM68( 4, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ));
      __trace.line = 746;
      if (has_parens_8)
      {
        __trace.line = 747;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 748;
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      __trace.line = 751;
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
      {
        __trace.line = 752;
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) );
        __trace.line = 753;
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_9,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
        __trace.line = 754;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[368] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(type_9))) )))) )))), Rogue_literal_strings[21] )))) )))) ))));
      }
    }
    else
    {
      __trace.line = 760;
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    }
  }
  else if (THIS->parsing_augment)
  {
    __trace.line = 765;
    RogueParser__parse_augment_statements( ROGUE_ARG(THIS) );
  }
  else
  {
    __trace.line = 767;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[293], false )))))) );
    __trace.line = 768;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    __trace.line = 769;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[295], false )))))) );
  }
  __trace.line = 773;
  return (RogueLogical)(true);
}

void RogueParser__parse_method_template__Token_String_Logical( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* name_1, RogueLogical is_global_2 )
{
  RogueDebugTrace __trace( "Parser.parse_method_template(Token,String,Logical)", "Parser.rogue", 775 );
  __trace.line = 776;
  RogueParser__read( ROGUE_ARG(THIS) );
  __trace.line = 778;
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueMethodTemplate__init__Token_Type_String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplate*,ROGUE_CREATE_OBJECT(MethodTemplate))), t_0, ROGUE_ARG(THIS->_this_type), name_1, is_global_2 )))));
  __trace.line = 780;
  RogueLogical first_4 = (true);
  __trace.line = 781;
  while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 782;
    first_4 = ((RogueLogical)false);
    __trace.line = 783;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
    __trace.line = 784;
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,param_6,(((RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(m_3->type_parameters), ROGUE_ARG(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), t2_5, ROGUE_ARG((call_ROGUEM68( 4, t2_5 ))) )))) )))));
  }
  __trace.line = 786;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 788;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(m_3->template_tokens));
  __trace.line = 789;
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__peek( ROGUE_ARG(THIS) )))->_type->is_non_method)))
  {
    __trace.line = 790;
    RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  __trace.line = 793;
  if (!(!!(THIS->_this_type->method_templates)))
  {
    THIS->_this_type->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS->_this_type) )));
  }
  __trace.line = 794;
  RogueMethodTemplates__add__MethodTemplate( ROGUE_ARG(THIS->_this_type->method_templates), m_3 );
}

void RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueClassTokenType* end_type_1 )
{
  RogueDebugTrace __trace( "Parser.parse_single_or_multi_line_statements(CmdStatementList,TokenType)", "Parser.rogue", 796 );
  __trace.line = 797;
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 799;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    __trace.line = 800;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_1, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    __trace.line = 803;
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    __trace.line = 804;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
}

void RogueParser__parse_multi_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Parser.parse_multi_line_statements(CmdStatementList)", "Parser.rogue", 807 );
  __trace.line = 808;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  __trace.line = 809;
  THIS->cur_statement_list = statements_0;
  __trace.line = 811;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  __trace.line = 812;
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 813;
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, true );
    __trace.line = 815;
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    __trace.line = 816;
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  __trace.line = 819;
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_augment_statements( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_augment_statements()", "Parser.rogue", 821 );
  __trace.line = 822;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_0,(THIS->cur_statement_list));
  __trace.line = 824;
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[293], true );
  __trace.line = 825;
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[295], true );
  __trace.line = 827;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,cur_label_1,(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[293], true )))));
  __trace.line = 828;
  THIS->cur_statement_list = cur_label_1->statements;
  __trace.line = 830;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  __trace.line = 831;
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 833;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 835;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      __trace.line = 836;
      cur_label_1 = ((RogueClassCmdLabel*)((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), true ))));
      __trace.line = 837;
      THIS->cur_statement_list = cur_label_1->statements;
      __trace.line = 838;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 839;
      RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
      __trace.line = 840;
      continue;
    }
    __trace.line = 843;
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), ROGUE_ARG(cur_label_1->statements), true );
    __trace.line = 845;
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    __trace.line = 846;
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  __trace.line = 849;
  THIS->cur_statement_list = prev_statement_list_0;
}

void RogueParser__parse_single_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Parser.parse_single_line_statements(CmdStatementList)", "Parser.rogue", 851 );
  __trace.line = 852;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  __trace.line = 853;
  THIS->cur_statement_list = statements_0;
  __trace.line = 855;
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 856;
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, false );
    __trace.line = 857;
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
      __trace.line = 858;
      THIS->cur_statement_list = prev_statement_list_1;
      __trace.line = 859;
      return;
    }
    __trace.line = 861;
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
    }
    __trace.line = 864;
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      goto _auto_1764;
    }
  }
  _auto_1764:;
  __trace.line = 867;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) )))))
  {
    __trace.line = 868;
    if (!(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) )))))
    {
      __trace.line = 869;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  __trace.line = 873;
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_statement__CmdStatementList_Logical( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueLogical allow_control_structures_1 )
{
  RogueDebugTrace __trace( "Parser.parse_statement(CmdStatementList,Logical)", "Parser.rogue", 876 );
  __trace.line = 877;
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  __trace.line = 879;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 881;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    __trace.line = 886;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), t_2, ROGUE_ARG((call_ROGUEM68( 4, t_2 ))) )))))) );
    __trace.line = 887;
    return;
  }
  __trace.line = 890;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    __trace.line = 895;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), t_2, ROGUE_ARG((call_ROGUEM68( 4, t_2 ))) )))))) );
    __trace.line = 896;
    return;
  }
  __trace.line = 899;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite) ))))
  {
    __trace.line = 902;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, ROGUE_ARG((call_ROGUEM68( 4, t_2 ))) )))))) );
    __trace.line = 903;
    return;
  }
  __trace.line = 906;
  if (allow_control_structures_1)
  {
    __trace.line = 907;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_if) ))))
    {
      __trace.line = 908;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_if( ROGUE_ARG(THIS) )))))) );
      __trace.line = 909;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_which) ))))
    {
      __trace.line = 912;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_which( ROGUE_ARG(THIS) )))))) );
      __trace.line = 913;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_forEach) ))))
    {
      __trace.line = 922;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_for_each( ROGUE_ARG(THIS) )))) );
      __trace.line = 923;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_block) ))))
    {
      __trace.line = 926;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_block( ROGUE_ARG(THIS) )))))) );
      __trace.line = 927;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_contingent) ))))
    {
      __trace.line = 930;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_contingent( ROGUE_ARG(THIS) )))))) );
      __trace.line = 931;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_while) ))))
    {
      __trace.line = 934;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_while( ROGUE_ARG(THIS) )))))) );
      __trace.line = 935;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_loop) ))))
    {
      __trace.line = 938;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_loop( ROGUE_ARG(THIS) )))))) );
      __trace.line = 939;
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_try) ))))
    {
      __trace.line = 942;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_try( ROGUE_ARG(THIS) )))))) );
      __trace.line = 943;
      return;
    }
  }
  __trace.line = 954;
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_local) ))))
  {
    __trace.line = 955;
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    __trace.line = 956;
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_global) ))))
  {
    __trace.line = 959;
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) );
    __trace.line = 960;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_return) ))))
  {
    __trace.line = 963;
    if ((((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) ))) && !!(THIS->this_method->_return_type)))
    {
      __trace.line = 964;
      ROGUE_THROW(((RogueToken__error__String( t_2, Rogue_literal_strings[333] ))));
    }
    __trace.line = 967;
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      __trace.line = 968;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))) );
    }
    else
    {
      __trace.line = 973;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    }
    __trace.line = 975;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    __trace.line = 991;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_3,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    __trace.line = 992;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_3, ROGUE_ARG(((RogueClassLocal*)(NULL))) )))))) );
    __trace.line = 993;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_yield) ))))
  {
    __trace.line = 996;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), t_2 )))))) );
    __trace.line = 997;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_throw) ))))
  {
    __trace.line = 1000;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    __trace.line = 1001;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_noAction) ))))
  {
    __trace.line = 1005;
    return;
  }
  else if ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace_position) )))))
  {
    __trace.line = 1008;
    RogueLogical include_position_4 = (((void*)t_2->_type) == ((void*)RogueTokenType_keyword_trace_position));
    __trace.line = 1010;
    ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_5,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
    __trace.line = 1011;
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)'[', true )))), ROGUE_ARG(THIS->_this_type->name) );
    __trace.line = 1012;
    if (!!(THIS->this_method))
    {
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[78] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[334] );
    }
    __trace.line = 1013;
    RogueStringBuilder__print__String( buffer_5, ROGUE_ARG(((RogueFile__filename( ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(t_2->filepath) )))) )))) );
    __trace.line = 1014;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)':', true )))), ROGUE_ARG(t_2->line) )))), (RogueCharacter)']', true );
    __trace.line = 1016;
    RogueInt32 data_pos_6 = ((buffer_5->count + 2));
    __trace.line = 1017;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    __trace.line = 1018;
    RogueLogical needs_space_8 = (false);
    __trace.line = 1019;
    RogueLogical first_9 = (true);
    __trace.line = 1020;
    while (((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))) && (first_9 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))))
    {
      __trace.line = 1021;
      if (first_9)
      {
        __trace.line = 1022;
        if (include_position_4)
        {
          __trace.line = 1023;
          RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[335] );
        }
        else
        {
          __trace.line = 1025;
          RogueStringBuilder__clear( buffer_5 );
        }
      }
      __trace.line = 1028;
      first_9 = ((RogueLogical)false);
      __trace.line = 1029;
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_10,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
      __trace.line = 1030;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_11,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      __trace.line = 1031;
      if (RogueObject_instance_of(expr_11,RogueTypeCmdLiteralString))
      {
        __trace.line = 1032;
        RogueStringBuilder__print__String( buffer_5, ROGUE_ARG(((RogueClassCmdLiteralString*)(RogueObject_as(expr_11,RogueTypeCmdLiteralString)))->value) );
        __trace.line = 1033;
        needs_space_8 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 1035;
        if (needs_space_8)
        {
          RogueStringBuilder__print__Character_Logical( buffer_5, (RogueCharacter)' ', true );
        }
        __trace.line = 1036;
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_12,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        __trace.line = 1038;
        ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_13,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_10->filepath) )))));
        __trace.line = 1039;
        if ((((!!(parse_reader_13) && !!(start_t_10->line)) && !!(start_t_10->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_10->filepath), ROGUE_ARG(end_t_12->filepath) )))))
        {
          __trace.line = 1040;
          RogueParseReader__seek_location__Int32_Int32( parse_reader_13, ROGUE_ARG(start_t_10->line), ROGUE_ARG(start_t_10->column) );
          __trace.line = 1041;
          while ((((RogueParseReader__has_another( parse_reader_13 ))) && (parse_reader_13->line < end_t_12->line || (parse_reader_13->line == end_t_12->line && parse_reader_13->column < end_t_12->column))))
          {
            __trace.line = 1043;
            RogueStringBuilder__print__Character_Logical( buffer_5, ROGUE_ARG(((RogueParseReader__read( parse_reader_13 )))), true );
          }
          __trace.line = 1045;
          RogueStringBuilder__print__String( buffer_5, Rogue_literal_strings[336] );
          __trace.line = 1046;
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), expr_11 );
          __trace.line = 1047;
          needs_space_8 = ((RogueLogical)true);
        }
      }
    }
    __trace.line = 1052;
    if ((include_position_4 && !!(args_7->count)))
    {
      __trace.line = 1053;
      RogueStringBuilder__insert_spaces__Int32_Int32( buffer_5, data_pos_6, ROGUE_ARG((((data_pos_6 + 3) & -4) - data_pos_6)) );
    }
    __trace.line = 1056;
    if ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))))
    {
      __trace.line = 1057;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[337] ))));
    }
    __trace.line = 1060;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_5 )))), args_7 )))))) )))))) );
    __trace.line = 1061;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    __trace.line = 1064;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1065;
    RogueLogical has_parens_14 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    __trace.line = 1067;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_15,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 1068;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_16,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 1069;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_17,0);
    __trace.line = 1070;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_17 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 1071;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_18,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 1073;
    if (has_parens_14)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    __trace.line = 1075;
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return;
    }
    __trace.line = 1077;
    if (!(!!(message_17)))
    {
      __trace.line = 1078;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_19,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 1079;
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_20,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_15->filepath) )))));
      __trace.line = 1080;
      if ((((!!(parse_reader_20) && !!(start_t_15->line)) && !!(start_t_15->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_15->filepath), ROGUE_ARG(end_t_18->filepath) )))))
      {
        __trace.line = 1081;
        RogueParseReader__seek_location__Int32_Int32( parse_reader_20, ROGUE_ARG(start_t_15->line), ROGUE_ARG(start_t_15->column) );
        __trace.line = 1082;
        while ((((RogueParseReader__has_another( parse_reader_20 ))) && (parse_reader_20->line < end_t_18->line || (parse_reader_20->line == end_t_18->line && parse_reader_20->column < end_t_18->column))))
        {
          __trace.line = 1084;
          RogueStringBuilder__print__Character_Logical( buffer_19, ROGUE_ARG(((RogueParseReader__read( parse_reader_20 )))), true );
        }
      }
      __trace.line = 1087;
      message_17 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_19 )))), 0 ))))));
    }
    __trace.line = 1090;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_21,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 1091;
    temp_var_21->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    __trace.line = 1092;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_2, temp_var_21, true )))))) );
    __trace.line = 1093;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_2, expr_16, message_17, temp_var_21 )))))) );
    __trace.line = 1094;
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ensure) ))))
  {
    __trace.line = 1097;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_ensure( ROGUE_ARG(THIS) )))) );
    __trace.line = 1098;
    return;
  }
  __trace.line = 1112;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    __trace.line = 1113;
    if (THIS->parsing_augment)
    {
      __trace.line = 1114;
      ROGUE_THROW(((RogueToken__error__String( t_2, Rogue_literal_strings[338] ))));
    }
    else
    {
      __trace.line = 1116;
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), false )))))) );
    }
    __trace.line = 1118;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 1119;
    return;
  }
  __trace.line = 1122;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhile) ))))
  {
    __trace.line = 1123;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 8, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1124;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeForEach) ))))
  {
    __trace.line = 1127;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 9, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1128;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeBlock) ))))
  {
    __trace.line = 1131;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 0, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1132;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeContingent) ))))
  {
    __trace.line = 1135;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 1, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1136;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeLoop) ))))
  {
    __trace.line = 1139;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 7, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1140;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeIf) ))))
  {
    __trace.line = 1143;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1144;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeTry) ))))
  {
    __trace.line = 1147;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 4, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1148;
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhich) ))))
  {
    __trace.line = 1151;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 5, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1152;
    return;
  }
  __trace.line = 1155;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nextIteration) ))))
  {
    __trace.line = 1156;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), t_2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    __trace.line = 1157;
    return;
  }
  __trace.line = 1160;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_necessary) ))))
  {
    __trace.line = 1161;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    __trace.line = 1162;
    return;
  }
  __trace.line = 1165;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_sufficient) ))))
  {
    __trace.line = 1166;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    __trace.line = 1167;
    return;
  }
  __trace.line = 1170;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    __trace.line = 1171;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), 1 )))))) );
    __trace.line = 1172;
    return;
  }
  __trace.line = 1175;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    __trace.line = 1176;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), -1 )))))) );
    __trace.line = 1177;
    return;
  }
  __trace.line = 1180;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expression_22,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  __trace.line = 1182;
  t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
  __trace.line = 1183;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    __trace.line = 1184;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_2, expression_22, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    __trace.line = 1185;
    return;
  }
  __trace.line = 1188;
  if ((call_ROGUEM142( 18, ROGUE_ARG(t_2->_type) )))
  {
    __trace.line = 1189;
    RogueParser__read( ROGUE_ARG(THIS) );
    __trace.line = 1190;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, expression_22, ROGUE_ARG(t_2->_type), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    __trace.line = 1191;
    return;
  }
  __trace.line = 1209;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    __trace.line = 1210;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_22, 1 )))))) );
    __trace.line = 1211;
    return;
  }
  __trace.line = 1214;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    __trace.line = 1215;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_22, -1 )))))) );
    __trace.line = 1216;
    return;
  }
  __trace.line = 1219;
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,t_type_23,(t_2->_type));
  __trace.line = 1220;
  if ((call_ROGUEM142( 18, t_type_23 )))
  {
    __trace.line = 1221;
    RogueParser__read( ROGUE_ARG(THIS) );
    __trace.line = 1222;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,target_24,(expression_22));
    __trace.line = 1223;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_25,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 1224;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, target_24, t_type_23, new_value_25 )))))) );
    __trace.line = 1225;
    return;
  }
  __trace.line = 1229;
  if (!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 1230;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_26,(((RogueClassCmdAccess*)(RogueObject_as(expression_22,RogueTypeCmdAccess)))));
    __trace.line = 1231;
    if ((!!(access_26) && ((void*)access_26->args) == ((void*)NULL)))
    {
      __trace.line = 1232;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_27,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      __trace.line = 1233;
      while ((!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))) && !(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))))))
      {
        __trace.line = 1234;
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_27), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      __trace.line = 1236;
      access_26->args = args_27;
    }
  }
  __trace.line = 1240;
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), expression_22 );
}

RogueClassCmdWhich* RogueParser__parse_which( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_which()", "Parser.rogue", 1242 );
  __trace.line = 1243;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1244;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,cmd_which_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdWhichCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))) )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  __trace.line = 1245;
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 1246;
  while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_case) ))))
  {
    __trace.line = 1247;
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    __trace.line = 1248;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1249;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_2,(((RogueCmdWhich__add_case__Token( cmd_which_1, t_0 )))));
    __trace.line = 1250;
    RogueLogical first_3 = (true);
    __trace.line = 1251;
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      __trace.line = 1252;
      first_3 = ((RogueLogical)false);
      __trace.line = 1253;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_case_2->conditions)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      __trace.line = 1254;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 1256;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 1257;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_2->statements) );
  }
  __trace.line = 1260;
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
  {
    __trace.line = 1261;
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    __trace.line = 1262;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1263;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_4,(((RogueCmdWhich__add_case_others__Token( cmd_which_1, t_0 )))));
    __trace.line = 1264;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 1265;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_4->statements) );
  }
  __trace.line = 1268;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhich), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 1269;
  return (RogueClassCmdWhich*)(cmd_which_1);
}

RogueLogical RogueParser__parse_class_level_element( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_class_level_element()", "Parser.rogue", 1271 );
  __trace.line = 1272;
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  __trace.line = 1273;
  return (RogueLogical)(((RogueParser__parse_native_element( ROGUE_ARG(THIS) ))));
}

RogueLogical RogueParser__parse_unit_test( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_unit_test()", "Parser.rogue", 1275 );
  __trace.line = 1276;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 1278;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1279;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unitTest) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 1281;
  RogueLogical is_multi_line_1 = (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))));
  __trace.line = 1283;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,original_type_2,(THIS->_this_type));
  __trace.line = 1284;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,original_method_3,(THIS->this_method));
  __trace.line = 1285;
  THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[71] )));
  __trace.line = 1286;
  THIS->this_method = ((RogueProgram__get_run_tests_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
  __trace.line = 1288;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_4,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  __trace.line = 1289;
  if (is_multi_line_1)
  {
    __trace.line = 1290;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
    __trace.line = 1291;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endUnitTest), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    __trace.line = 1293;
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
  }
  __trace.line = 1295;
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_block_4))) );
  }
  __trace.line = 1297;
  THIS->_this_type = original_type_2;
  __trace.line = 1298;
  THIS->this_method = original_method_3;
  __trace.line = 1299;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_native_element( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_native_element()", "Parser.rogue", 1301 );
  __trace.line = 1302;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 1304;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1306;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    __trace.line = 1307;
    ROGUE_DEF_LOCAL_REF(RogueString*,code_1,((call_ROGUEM68( 4, t_0 ))));
    __trace.line = 1308;
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 ))).exists))
    {
      __trace.line = 1309;
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 );
    }
    __trace.line = 1311;
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    __trace.line = 1314;
    ROGUE_DEF_LOCAL_REF(RogueString*,code_2,((call_ROGUEM68( 4, t_0 ))));
    __trace.line = 1315;
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_2 ))).exists))
    {
      __trace.line = 1316;
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), code_2 );
    }
    __trace.line = 1318;
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite) ))))
  {
    __trace.line = 1321;
    ROGUE_DEF_LOCAL_REF(RogueString*,pattern_3,((call_ROGUEM68( 4, t_0 ))));
    __trace.line = 1322;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_0, pattern_3 )))))) );
    __trace.line = 1323;
    return (RogueLogical)(true);
  }
  else
  {
    __trace.line = 1326;
    return (RogueLogical)(false);
  }
}

RogueClassCmdContingent* RogueParser__parse_contingent( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_contingent()", "Parser.rogue", 1329 );
  __trace.line = 1330;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1331;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_1,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  __trace.line = 1332;
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->statements) );
  __trace.line = 1334;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_satisfied) ))))
  {
    __trace.line = 1335;
    cmd_contingent_1->satisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    __trace.line = 1336;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->satisfied_statements) );
  }
  __trace.line = 1339;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unsatisfied) ))))
  {
    __trace.line = 1340;
    cmd_contingent_1->unsatisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    __trace.line = 1341;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->unsatisfied_statements) );
  }
  __trace.line = 1344;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endContingent), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 1345;
  return (RogueClassCmdContingent*)(cmd_contingent_1);
}

RogueClassCmdTry* RogueParser__parse_try( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_try()", "Parser.rogue", 1347 );
  __trace.line = 1348;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1349;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,cmd_try_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))) )))));
  __trace.line = 1350;
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_try_1->statements) );
  __trace.line = 1351;
  while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_catch) ))))
  {
    __trace.line = 1352;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,cmd_catch_2,(((RogueCmdTry__add_catch__Token( cmd_try_1, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) )))));
    __trace.line = 1353;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1354;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 1355;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,error_t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 1356;
    ROGUE_DEF_LOCAL_REF(RogueString*,error_name_4,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 1357;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1358;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 1359;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1360;
    cmd_catch_2->error_var = ((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), error_t_3, error_name_4, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
    __trace.line = 1361;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1362;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 1363;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_catch_2->statements) );
  }
  __trace.line = 1365;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endTry), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 1367;
  return (RogueClassCmdTry*)(cmd_try_1);
}

void RogueParser__parse_local_or_global__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Parser.parse_local_or_global(CmdStatementList)", "Parser.rogue", 1369 );
  __trace.line = 1370;
  RogueLocal_List__clear( ROGUE_ARG(THIS->local_declarations) );
  __trace.line = 1371;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1374;
  RogueLogical first_2 = (true);
  __trace.line = 1375;
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 1376;
    first_2 = ((RogueLogical)false);
    __trace.line = 1377;
    t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 1378;
    ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 1379;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_1, name_3, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 1380;
    RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_declarations), v_4 );
    __trace.line = 1381;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      v_4->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  __trace.line = 1385;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    __trace.line = 1386;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    __trace.line = 1387;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1789_6,(THIS->local_declarations));
      RogueInt32 _auto_1790_7 = (0);
      for (;_auto_1790_7 < _auto_1789_6->count;++_auto_1790_7)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueClassLocal*)(_auto_1789_6->data->objects[_auto_1790_7]))));
        v_8->_type = type_5;
      }
    }
  }
  else
  {
    __trace.line = 1389;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1791_9,(THIS->local_declarations));
      RogueInt32 _auto_1792_10 = (0);
      for (;_auto_1792_10 < _auto_1791_9->count;++_auto_1792_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_11,(((RogueClassLocal*)(_auto_1791_9->data->objects[_auto_1792_10]))));
        __trace.line = 1390;
        if ((((void*)v_11->_type) == ((void*)NULL) && !!(v_11->initial_value)))
        {
          __trace.line = 1391;
          v_11->_type = (call_ROGUEM101( 23, ROGUE_ARG(v_11->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
        }
      }
    }
  }
  __trace.line = 1397;
  if (!!(statements_0))
  {
    __trace.line = 1399;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1793_12,(THIS->local_declarations));
      RogueInt32 _auto_1794_13 = (0);
      for (;_auto_1794_13 < _auto_1793_12->count;++_auto_1794_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_1793_12->data->objects[_auto_1794_13]))));
        __trace.line = 1400;
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_14->t), v_14, false )))))) );
      }
    }
  }
  else
  {
    __trace.line = 1404;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1795_15,(THIS->local_declarations));
      RogueInt32 _auto_1796_16 = (0);
      for (;_auto_1796_16 < _auto_1795_15->count;++_auto_1796_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_17,(((RogueClassLocal*)(_auto_1795_15->data->objects[_auto_1796_16]))));
        __trace.line = 1405;
        RogueProperty_List__add__Property( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->global_properties), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(v_17->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(v_17->name), ROGUE_ARG(v_17->_type), ROGUE_ARG(v_17->initial_value) )))) );
      }
    }
  }
}

RogueClassType* Rogue_Parser__parse_type( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_type()", "Parser.rogue", 1409 );
  __trace.line = 1410;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_0,0);
  __trace.line = 1412;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1413;
  if (!!((call_ROGUEM73( 20, t_1 ))))
  {
    __trace.line = 1414;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,((call_ROGUEM73( 20, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    __trace.line = 1415;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) )))))
    {
      __trace.line = 1416;
      name_0 = ((RogueString*)type_2->name);
      __trace.line = 1417;
      for (;;)
      {
        __trace.line = 1418;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
        {
          __trace.line = 1419;
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[222] ))));
        }
        else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
        {
          __trace.line = 1421;
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[242] ))));
        }
        else
        {
          __trace.line = 1423;
          goto _auto_1797;
        }
      }
      _auto_1797:;
    }
    else
    {
      __trace.line = 1427;
      return (RogueClassType*)(type_2);
    }
  }
  else
  {
    __trace.line = 1431;
    name_0 = ((RogueString*)((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false ))));
  }
  __trace.line = 1435;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, name_0 )))));
  __trace.line = 1436;
  return (RogueClassType*)(type_3);
}

RogueString* RogueParser__parse_possible_type__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  RogueDebugTrace __trace( "Parser.parse_possible_type(Logical)", "Parser.rogue", 1438 );
  __trace.line = 1439;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1440;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), allow_at_sign_0 )))));
  __trace.line = 1442;
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    __trace.line = 1443;
    name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, ROGUE_ARG(((RogueParser__parse_specialization_string( ROGUE_ARG(THIS) )))) ))));
  }
  else if (((RogueString__operatorEQUALSEQUALS__String( name_2, Rogue_literal_strings[302] ))))
  {
    __trace.line = 1446;
    ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_3,0);
    __trace.line = 1447;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
    __trace.line = 1448;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 1449;
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        __trace.line = 1450;
        parameter_types_3 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
        __trace.line = 1451;
        RogueLogical first_5 = (true);
        __trace.line = 1452;
        while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          __trace.line = 1453;
          first_5 = ((RogueLogical)false);
          __trace.line = 1454;
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,type_t_6,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
          __trace.line = 1455;
          ROGUE_DEF_LOCAL_REF(RogueString*,type_name_7,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
          __trace.line = 1456;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            __trace.line = 1458;
            RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
          }
          else
          {
            __trace.line = 1460;
            RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), type_t_6, type_name_7 )))) );
          }
        }
        __trace.line = 1463;
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    __trace.line = 1467;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      __trace.line = 1468;
      RogueLogical has_parens_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
      __trace.line = 1469;
      return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
      __trace.line = 1470;
      if (has_parens_8)
      {
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    __trace.line = 1473;
    name_2 = ((RogueString*)((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, parameter_types_3, return_type_4 )))->name);
  }
  __trace.line = 1476;
  for (;;)
  {
    __trace.line = 1477;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
    {
      __trace.line = 1478;
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[222] ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
    {
      __trace.line = 1480;
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[242] ))));
    }
    else
    {
      __trace.line = 1482;
      goto _auto_1798;
    }
  }
  _auto_1798:;
  __trace.line = 1486;
  return (RogueString*)(name_2);
}

RogueClassCmdIf* RogueParser__parse_if( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_if()", "Parser.rogue", 1488 );
  __trace.line = 1489;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1490;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_1,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))), 2 )))));
  __trace.line = 1491;
  cmd_if_1->condition = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
  __trace.line = 1493;
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 1495;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    __trace.line = 1497;
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 1498;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_2,(cmd_if_1));
    __trace.line = 1499;
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      __trace.line = 1501;
      RogueInt32 starting_position_3 = (THIS->reader->position);
      __trace.line = 1502;
      RogueParser__read( ROGUE_ARG(THIS) );
      __trace.line = 1504;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      __trace.line = 1506;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        __trace.line = 1508;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_5,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_4, 3 )))));
        __trace.line = 1509;
        RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_5->statements) );
        __trace.line = 1510;
        cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        __trace.line = 1511;
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_2->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_5))) );
        __trace.line = 1512;
        cur_if_2 = ((RogueClassCmdIf*)cmd_else_if_5);
      }
      else
      {
        __trace.line = 1515;
        THIS->reader->position = starting_position_3;
        __trace.line = 1516;
        goto _auto_1799;
      }
      __trace.line = 1518;
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1799:;
    __trace.line = 1521;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) == ((void*)RogueTokenType_eol)))
    {
      __trace.line = 1522;
      RogueParser__read( ROGUE_ARG(THIS) );
      __trace.line = 1523;
      cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      __trace.line = 1524;
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_2->else_statements) );
    }
    __trace.line = 1527;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endIf), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    __trace.line = 1531;
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    __trace.line = 1532;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1534;
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 1535;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_6,(cmd_if_1));
    __trace.line = 1536;
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      __trace.line = 1538;
      RogueInt32 starting_position_7 = (THIS->reader->position);
      __trace.line = 1539;
      RogueParser__read( ROGUE_ARG(THIS) );
      __trace.line = 1541;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_8,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      __trace.line = 1543;
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        __trace.line = 1545;
        THIS->reader->position = starting_position_7;
        __trace.line = 1546;
        goto _auto_1800;
      }
      else
      {
        __trace.line = 1548;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_8, 3 )))));
        __trace.line = 1549;
        RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_9->statements) );
        __trace.line = 1550;
        cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        __trace.line = 1551;
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_6->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) );
        __trace.line = 1552;
        cur_if_6 = ((RogueClassCmdIf*)cmd_else_if_9);
        __trace.line = 1553;
        RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
      }
      __trace.line = 1555;
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1800:;
    __trace.line = 1558;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) != ((void*)RogueTokenType_eol)))
    {
      __trace.line = 1559;
      RogueParser__read( ROGUE_ARG(THIS) );
      __trace.line = 1560;
      cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      __trace.line = 1561;
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_6->else_statements) );
    }
  }
  __trace.line = 1565;
  return (RogueClassCmdIf*)(cmd_if_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_loop( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_loop()", "Parser.rogue", 1567 );
  __trace.line = 1568;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1569;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 7, ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  __trace.line = 1571;
  if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    __trace.line = 1575;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_2,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 1576;
    control_var_2->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, 1 )))));
    __trace.line = 1578;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 1579;
    last_var_3->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    __trace.line = 1580;
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1582;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAdjustLocal*,step_cmd_4,(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), t_0, control_var_2, 1 )))));
    __trace.line = 1584;
    cmd_loop_1->condition = ((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_2 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_3 )))))) )))))));
    __trace.line = 1586;
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, control_var_2 );
    __trace.line = 1587;
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, last_var_3 );
    __trace.line = 1588;
    RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_1, ROGUE_ARG(((RogueClassCmd*)(step_cmd_4))) );
  }
  __trace.line = 1591;
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_loop_1->statements) );
  __trace.line = 1592;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endLoop), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 1594;
  return (RogueClassCmdGenericLoop*)(cmd_loop_1);
}

RogueClassCmdBlock* RogueParser__parse_block( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_block()", "Parser.rogue", 1596 );
  __trace.line = 1597;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1598;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_1,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  __trace.line = 1600;
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 1601;
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_1->statements) );
  __trace.line = 1602;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endBlock), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 1604;
  return (RogueClassCmdBlock*)(cmd_block_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_while( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_while()", "Parser.rogue", 1606 );
  __trace.line = 1607;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1608;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 8, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  __trace.line = 1610;
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    __trace.line = 1612;
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    __trace.line = 1613;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhile), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    __trace.line = 1616;
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    __trace.line = 1617;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  __trace.line = 1620;
  return (RogueClassCmdGenericLoop*)(cmd_while_1);
}

RogueClassCmd* RogueParser__parse_for_each( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_for_each()", "Parser.rogue", 1622 );
  __trace.line = 1623;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 1625;
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  __trace.line = 1627;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_2,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  __trace.line = 1628;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(expr_2,RogueTypeCmdAccess)))));
  __trace.line = 1629;
  if (!!(access_3))
  {
    __trace.line = 1630;
    if ((!!(access_3->context) || !!(access_3->args)))
    {
      __trace.line = 1631;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[322] ))));
    }
    else
    {
      __trace.line = 1633;
      ROGUE_DEF_LOCAL_REF(RogueString*,index_var_name_4,0);
      __trace.line = 1634;
      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_3->name), Rogue_literal_strings[323] ))))
      {
        __trace.line = 1636;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[324] ))));
      }
      else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[323] ))))
      {
        __trace.line = 1638;
        index_var_name_4 = ((RogueString*)((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false ))));
      }
      __trace.line = 1641;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_in) ))))
      {
        __trace.line = 1642;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_5,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        __trace.line = 1643;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_6,(((RogueClassCmdRange*)(RogueObject_as(collection_5,RogueTypeCmdRange)))));
        __trace.line = 1644;
        if (!!(range_6))
        {
          __trace.line = 1645;
          if (!!(index_var_name_4))
          {
            ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(range_6->t), Rogue_literal_strings[325] ))));
          }
          __trace.line = 1647;
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_7,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(access_3->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          __trace.line = 1648;
          control_var_7->initial_value = range_6->first;
          __trace.line = 1650;
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_8,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          __trace.line = 1651;
          last_var_8->initial_value = range_6->last;
          __trace.line = 1653;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_9,(((RogueClassCmd*)(NULL))));
          __trace.line = 1654;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            __trace.line = 1655;
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_value_10,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
            __trace.line = 1656;
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_6->t), control_var_7, ROGUE_ARG(RogueTokenType_symbol_plus_equals), step_value_10 ))))));
          }
          else if ((RogueObject_instance_of(range_6,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_6,RogueTypeCmdRangeUpToLessThan)))
          {
            __trace.line = 1659;
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_6->t), control_var_7, 1 ))))));
          }
          else
          {
            __trace.line = 1661;
            step_cmd_9 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_6->t), control_var_7, -1 ))))));
          }
          __trace.line = 1665;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_11,0);
          __trace.line = 1666;
          if (RogueObject_instance_of(range_6,RogueTypeCmdRangeUpTo))
          {
            __trace.line = 1667;
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          else if (RogueObject_instance_of(range_6,RogueTypeCmdRangeUpToLessThan))
          {
            __trace.line = 1669;
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          else
          {
            __trace.line = 1671;
            compare_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_7 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_8 )))))) ))))))));
          }
          __trace.line = 1674;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_12,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_11, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
          __trace.line = 1676;
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_12, control_var_7 );
          __trace.line = 1677;
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_12, last_var_8 );
          __trace.line = 1678;
          RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_12, step_cmd_9 );
          __trace.line = 1680;
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          __trace.line = 1681;
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_12->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          __trace.line = 1683;
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_12)));
        }
        else
        {
          __trace.line = 1686;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_13,0);
          __trace.line = 1687;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            __trace.line = 1688;
            step_cmd_13 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          __trace.line = 1691;
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          __trace.line = 1693;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_14,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(access_3->name), index_var_name_4, collection_5, step_cmd_13, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          __trace.line = 1694;
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_14->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          __trace.line = 1695;
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_14)));
        }
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_of) ))))
      {
        __trace.line = 1699;
        if (!!(index_var_name_4))
        {
          ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[327] ))));
        }
        __trace.line = 1700;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_15,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        __trace.line = 1701;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_16,(((RogueClassCmdRange*)(RogueObject_as(collection_15,RogueTypeCmdRange)))));
        __trace.line = 1702;
        if (!!(range_16))
        {
          __trace.line = 1703;
          ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[328] ))));
        }
        else
        {
          __trace.line = 1705;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_17,0);
          __trace.line = 1706;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            __trace.line = 1707;
            step_cmd_17 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          __trace.line = 1710;
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          __trace.line = 1712;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_18,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(((RogueString*)(NULL))), ROGUE_ARG(access_3->name), collection_15, step_cmd_17, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          __trace.line = 1713;
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_18->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          __trace.line = 1714;
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_18)));
        }
      }
      else
      {
        __trace.line = 1718;
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[329] ))));
      }
    }
  }
  else
  {
    __trace.line = 1724;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_19,(((RogueClassCmdRange*)(RogueObject_as(expr_2,RogueTypeCmdRange)))));
    __trace.line = 1725;
    if (!!(range_19))
    {
      __trace.line = 1726;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_20,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      __trace.line = 1727;
      control_var_20->initial_value = range_19->first;
      __trace.line = 1729;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_21,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      __trace.line = 1730;
      last_var_21->initial_value = range_19->last;
      __trace.line = 1732;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_22,0);
      __trace.line = 1733;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
      {
        __trace.line = 1734;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_value_23,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        __trace.line = 1735;
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_19->t), control_var_20, ROGUE_ARG(RogueTokenType_symbol_plus_equals), step_value_23 ))))));
      }
      else if ((RogueObject_instance_of(range_19,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_19,RogueTypeCmdRangeUpToLessThan)))
      {
        __trace.line = 1738;
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_19->t), control_var_20, 1 ))))));
      }
      else
      {
        __trace.line = 1740;
        step_cmd_22 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_19->t), control_var_20, -1 ))))));
      }
      __trace.line = 1744;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_24,0);
      __trace.line = 1745;
      if (RogueObject_instance_of(range_19,RogueTypeCmdRangeUpTo))
      {
        __trace.line = 1746;
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      else if (RogueObject_instance_of(range_19,RogueTypeCmdRangeUpToLessThan))
      {
        __trace.line = 1748;
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      else
      {
        __trace.line = 1750;
        compare_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_20 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_21 )))))) ))))))));
      }
      __trace.line = 1753;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_25,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_24, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
      __trace.line = 1755;
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_25, control_var_20 );
      __trace.line = 1756;
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_25, last_var_21 );
      __trace.line = 1757;
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_25, step_cmd_22 );
      __trace.line = 1759;
      if (has_parens_1)
      {
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      __trace.line = 1760;
      RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_25->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
      __trace.line = 1762;
      return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_25)));
    }
    else
    {
      __trace.line = 1765;
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[330] ))));
    }
  }
  __trace.line = 1770;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[331] )))) )))) );
  __trace.line = 1771;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(expr_2->t), Rogue_literal_strings[332] ))));
}

RogueClassToken* RogueParser__peek( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.peek()", "Parser.rogue", 1773 );
  __trace.line = 1774;
  return (RogueClassToken*)(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) ))));
}

RogueClassToken* RogueParser__read( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.read()", "Parser.rogue", 1776 );
  __trace.line = 1777;
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueString* RogueParser__read_identifier__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  RogueDebugTrace __trace( "Parser.read_identifier(Logical)", "Parser.rogue", 1779 );
  __trace.line = 1780;
  RogueLogical direct_access_1 = (false);
  __trace.line = 1781;
  if (allow_at_sign_0)
  {
    direct_access_1 = ((RogueLogical)((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) ))));
  }
  __trace.line = 1783;
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    __trace.line = 1784;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_type_identifier) ))))
    {
      __trace.line = 1785;
      ROGUE_DEF_LOCAL_REF(RogueString*,result_2,((call_ROGUEM73( 20, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))->name));
      __trace.line = 1786;
      if (direct_access_1)
      {
        result_2 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[210], result_2 ))));
      }
      __trace.line = 1787;
      return (RogueString*)(result_2);
    }
    __trace.line = 1789;
    ROGUE_THROW(((RogueParser__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[82] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 13, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
  __trace.line = 1792;
  ROGUE_DEF_LOCAL_REF(RogueString*,result_3,((call_ROGUEM68( 4, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
  __trace.line = 1793;
  if (direct_access_1)
  {
    result_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[210], result_3 ))));
  }
  __trace.line = 1797;
  return (RogueString*)(result_3);
}

RogueClassCmd* RogueParser__parse_expression( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_expression()", "Parser.rogue", 1799 );
  __trace.line = 1800;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 1801;
  return (RogueClassCmd*)(((RogueParser__parse_range( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_range( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_range()", "Parser.rogue", 1803 );
  __trace.line = 1804;
  return (RogueClassCmd*)(((RogueParser__parse_range__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_range__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_range(Cmd)", "Parser.rogue", 1806 );
  __trace.line = 1807;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1808;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upTo) ))))
  {
    __trace.line = 1809;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpTo*,result_2,(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    __trace.line = 1810;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_2->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    __trace.line = 1811;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upToLessThan) ))))
  {
    __trace.line = 1813;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpToLessThan*,result_3,(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    __trace.line = 1814;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_3->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    __trace.line = 1815;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_downTo) ))))
  {
    __trace.line = 1821;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeDownTo*,result_4,(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    __trace.line = 1822;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_4->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    __trace.line = 1823;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
  else
  {
    __trace.line = 1825;
    return (RogueClassCmd*)(lhs_0);
  }
}

RogueClassCmd* RogueParser__parse_logical_xor( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_logical_xor()", "Parser.rogue", 1828 );
  __trace.line = 1829;
  return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_logical_xor(Cmd)", "Parser.rogue", 1831 );
  __trace.line = 1832;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1833;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_xor) ))))
  {
    __trace.line = 1834;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1835;
    return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1837;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_or( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_logical_or()", "Parser.rogue", 1839 );
  __trace.line = 1840;
  return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_logical_or(Cmd)", "Parser.rogue", 1842 );
  __trace.line = 1843;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1844;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    __trace.line = 1845;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1846;
    return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1848;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_and( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_logical_and()", "Parser.rogue", 1850 );
  __trace.line = 1851;
  return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_logical_and(Cmd)", "Parser.rogue", 1853 );
  __trace.line = 1854;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1855;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    __trace.line = 1856;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1857;
    return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1859;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_comparison( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_comparison()", "Parser.rogue", 1861 );
  __trace.line = 1862;
  return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_comparison__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_comparison(Cmd)", "Parser.rogue", 1864 );
  __trace.line = 1865;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1866;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_eq) ))))
  {
    __trace.line = 1867;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1868;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_is) ))))
  {
    __trace.line = 1870;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1871;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ne) ))))
  {
    __trace.line = 1873;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1874;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_isNot) ))))
  {
    __trace.line = 1876;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1877;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_lt) ))))
  {
    __trace.line = 1879;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1880;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_gt) ))))
  {
    __trace.line = 1882;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1883;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_le) ))))
  {
    __trace.line = 1885;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1886;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ge) ))))
  {
    __trace.line = 1888;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1889;
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_instanceOf) ))))
  {
    __trace.line = 1891;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1892;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_notInstanceOf) ))))
  {
    __trace.line = 1894;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1895;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) )))))))) ))))))));
  }
  __trace.line = 1897;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_xor( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_xor()", "Parser.rogue", 1899 );
  __trace.line = 1900;
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_xor(Cmd)", "Parser.rogue", 1902 );
  __trace.line = 1903;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1904;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_tilde) ))))
  {
    __trace.line = 1905;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1906;
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1908;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_or( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_or()", "Parser.rogue", 1910 );
  __trace.line = 1911;
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_or(Cmd)", "Parser.rogue", 1913 );
  __trace.line = 1914;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1915;
  RogueInt32 starting_pos_2 = (THIS->reader->position);
  __trace.line = 1916;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_vertical_bar) ))))
  {
    __trace.line = 1917;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1918;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,rhs_3,(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))));
    __trace.line = 1919;
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), t_1, lhs_0, rhs_3 )))))))) ))));
  }
  __trace.line = 1921;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_and( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_and()", "Parser.rogue", 1923 );
  __trace.line = 1924;
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_and(Cmd)", "Parser.rogue", 1926 );
  __trace.line = 1927;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1928;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
  {
    __trace.line = 1929;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1930;
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1932;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_shift( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_shift()", "Parser.rogue", 1934 );
  __trace.line = 1935;
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_shift__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_shift__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_bitwise_shift(Cmd)", "Parser.rogue", 1937 );
  __trace.line = 1938;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1939;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_left) ))))
  {
    __trace.line = 1940;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1941;
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right) ))))
  {
    __trace.line = 1943;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1944;
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right_x) ))))
  {
    __trace.line = 1946;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1947;
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1949;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_add_subtract( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_add_subtract()", "Parser.rogue", 1951 );
  __trace.line = 1952;
  return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_add_subtract__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_add_subtract(Cmd)", "Parser.rogue", 1954 );
  __trace.line = 1955;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1956;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus) ))))
  {
    __trace.line = 1957;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1958;
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    __trace.line = 1960;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1961;
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1963;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_multiply_divide_mod()", "Parser.rogue", 1965 );
  __trace.line = 1966;
  return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_multiply_divide_mod(Cmd)", "Parser.rogue", 1968 );
  __trace.line = 1969;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1970;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_times) ))))
  {
    __trace.line = 1971;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1972;
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_slash) ))))
  {
    __trace.line = 1974;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1975;
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_percent) ))))
  {
    __trace.line = 1977;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1978;
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1980;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_power( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_power()", "Parser.rogue", 1982 );
  __trace.line = 1983;
  return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_power__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  RogueDebugTrace __trace( "Parser.parse_power(Cmd)", "Parser.rogue", 1985 );
  __trace.line = 1986;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1987;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_caret) ))))
  {
    __trace.line = 1988;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1989;
    return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  __trace.line = 1991;
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_pre_unary( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_pre_unary()", "Parser.rogue", 1993 );
  __trace.line = 1994;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 1996;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    __trace.line = 1997;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 1998;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
  {
    __trace.line = 2001;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2002;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))))
  {
    __trace.line = 2005;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2006;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  __trace.line = 2009;
  return (RogueClassCmd*)(((RogueParser__parse_post_unary( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_post_unary( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_post_unary()", "Parser.rogue", 2011 );
  __trace.line = 2012;
  return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_member_access( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_post_unary__Cmd( RogueClassParser* THIS, RogueClassCmd* operand_0 )
{
  RogueDebugTrace __trace( "Parser.parse_post_unary(Cmd)", "Parser.rogue", 2014 );
  __trace.line = 2015;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 2016;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
  {
    __trace.line = 2017;
    return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), t_1, operand_0 )))))))) ))));
  }
  __trace.line = 2019;
  return (RogueClassCmd*)(operand_0);
}

RogueClassCmd* RogueParser__parse_member_access( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_member_access()", "Parser.rogue", 2021 );
  __trace.line = 2022;
  return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_term( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_member_access__Cmd( RogueClassParser* THIS, RogueClassCmd* context_0 )
{
  RogueDebugTrace __trace( "Parser.parse_member_access(Cmd)", "Parser.rogue", 2024 );
  __trace.line = 2025;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 2027;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot) ))))
  {
    __trace.line = 2029;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,access_2,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_1, context_0 )))));
    __trace.line = 2030;
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), access_2 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    __trace.line = 2034;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2035;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdElementAccess*,access_3,(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), t_1, context_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))));
    __trace.line = 2036;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2037;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2038;
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(access_3))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
  {
    __trace.line = 2042;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2043;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,to_type_4,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    __trace.line = 2044;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2045;
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
      {
        __trace.line = 2046;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[430] ))));
      }
      __trace.line = 2048;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,convert_fn_5,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      __trace.line = 2049;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 2050;
      return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdListConvert__init__Token_Cmd_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdListConvert*,ROGUE_CREATE_OBJECT(CmdListConvert))), t_1, context_0, to_type_4, convert_fn_5 )))))) ))));
    }
    __trace.line = 2052;
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), t_1, context_0, to_type_4 )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) ))))
  {
    __trace.line = 2056;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2057;
    ROGUE_DEF_LOCAL_REF(RogueString*,name_6,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 2058;
    ROGUE_DEF_LOCAL_REF(RogueType_List*,arg_types_7,0);
    __trace.line = 2059;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2060;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2061;
      arg_types_7 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
      __trace.line = 2062;
      RogueLogical first_8 = (true);
      __trace.line = 2063;
      while ((first_8 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 2064;
        first_8 = ((RogueLogical)false);
        __trace.line = 2065;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 2066;
        RogueType_List__add__Type( arg_types_7, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
        __trace.line = 2067;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      __trace.line = 2069;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 2070;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 2072;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_9,0);
    __trace.line = 2073;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      return_type_9 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2074;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), t_1, context_0, name_6, ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), arg_types_7 )))), return_type_9 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_as) ))))
  {
    __trace.line = 2078;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2079;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_10,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    __trace.line = 2080;
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), t_1, context_0, as_type_10 )))))))) ))));
  }
  __trace.line = 2084;
  return (RogueClassCmd*)(context_0);
}

RogueClassCmd* RogueParser__parse_access__Token_Cmd( RogueClassParser* THIS, RogueClassToken* t_0, RogueClassCmd* context_1 )
{
  RogueDebugTrace __trace( "Parser.parse_access(Token,Cmd)", "Parser.rogue", 2086 );
  __trace.line = 2087;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 2089;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) ))))
  {
    __trace.line = 2090;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,0);
    __trace.line = 2091;
    if (!!(context_1))
    {
      context_type_2 = ((RogueClassType*)(call_ROGUEM101( 23, context_1, ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) )));
    }
    else
    {
      __trace.line = 2092;
      context_type_2 = ((RogueClassType*)THIS->_this_type);
    }
    __trace.line = 2093;
    if (!(!!(context_type_2)))
    {
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[298] ))));
    }
    __trace.line = 2095;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2096;
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 2097;
    ROGUE_DEF_LOCAL_REF(RogueString*,id_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 2098;
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_3, Rogue_literal_strings[299] ))))
      {
        __trace.line = 2100;
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), t_0, context_type_2 ))))));
      }
      else
      {
        __trace.line = 2102;
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[300] ))));
      }
    }
  }
  __trace.line = 2107;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_4,(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), true )))) )))));
  __trace.line = 2108;
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    __trace.line = 2109;
    access_4->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
    __trace.line = 2110;
    access_4->named_args = ((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), ROGUE_ARG(access_4->args) )));
  }
  __trace.line = 2112;
  access_4->context = context_1;
  __trace.line = 2113;
  return (RogueClassCmd*)(((RogueClassCmd*)(access_4)));
}

RogueCmdNamedArg_List* RogueParser__parse_args__CmdArgs( RogueClassParser* THIS, RogueClassCmdArgs* args_0 )
{
  RogueDebugTrace __trace( "Parser.parse_args(CmdArgs)", "Parser.rogue", 2116 );
  __trace.line = 2117;
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_1,0);
  __trace.line = 2118;
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,end_type_2,(RogueTokenType_symbol_close_paren));
  __trace.line = 2120;
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) );
  __trace.line = 2121;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 2123;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), end_type_2 )))))
  {
    __trace.line = 2124;
    RogueLogical first_3 = (true);
    __trace.line = 2125;
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      __trace.line = 2126;
      first_3 = ((RogueLogical)false);
      __trace.line = 2127;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2128;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
      {
        __trace.line = 2129;
        if (!(!!(named_args_1)))
        {
          named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) ))));
        }
        __trace.line = 2130;
        RogueLogical is_negative_4 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))));
        __trace.line = 2131;
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,arg_t_5,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        __trace.line = 2132;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_6,(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), arg_t_5, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), ROGUE_ARG(((RogueClassCmd*)(NULL))), false )))));
        __trace.line = 2133;
        arg_6->is_negative = is_negative_4;
        __trace.line = 2134;
        RogueCmdNamedArg_List__add__CmdNamedArg( named_args_1, arg_6 );
        __trace.line = 2135;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          __trace.line = 2136;
          arg_6->value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
      }
      else
      {
        __trace.line = 2139;
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_0), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
    }
    __trace.line = 2142;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2143;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_2, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  __trace.line = 2146;
  return (RogueCmdNamedArg_List*)(named_args_1);
}

RogueString* RogueParser__parse_specialization_string( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_specialization_string()", "Parser.rogue", 2149 );
  __trace.line = 2150;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  __trace.line = 2151;
  RogueParser__read( ROGUE_ARG(THIS) );
  __trace.line = 2152;
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[236] );
  __trace.line = 2154;
  RogueLogical first_0 = (true);
  __trace.line = 2155;
  while ((first_0 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 2156;
    if (first_0)
    {
      first_0 = ((RogueLogical)false);
    }
    else
    {
      __trace.line = 2157;
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    __trace.line = 2158;
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueToken_List*)(NULL))) );
  }
  __trace.line = 2161;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2162;
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[145] );
  __trace.line = 2164;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueInt32 RogueParser__parse_specializer_count( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_specializer_count()", "Parser.rogue", 2166 );
  __trace.line = 2167;
  RogueInt32 num_specializers_0 = (0);
  __trace.line = 2168;
  RogueParser__read( ROGUE_ARG(THIS) );
  __trace.line = 2170;
  RogueLogical first_1 = (true);
  __trace.line = 2171;
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 2172;
    if (first_1)
    {
      first_1 = ((RogueLogical)false);
    }
    __trace.line = 2173;
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), ROGUE_ARG(((RogueToken_List*)(NULL))) );
    __trace.line = 2174;
    ++num_specializers_0;
  }
  __trace.line = 2177;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2179;
  return (RogueInt32)(num_specializers_0);
}

void RogueParser__parse_specializer__StringBuilder_Token_List( RogueClassParser* THIS, RogueStringBuilder* buffer_0, RogueToken_List* tokens_1 )
{
  RogueDebugTrace __trace( "Parser.parse_specializer(StringBuilder,Token[])", "Parser.rogue", 2181 );
  __trace.line = 2182;
  RogueInt32 nesting_level_2 = (1);
  __trace.line = 2183;
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 2184;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
    {
      __trace.line = 2185;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[301] ))));
    }
    __trace.line = 2188;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2189;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_backslash) ))))
    {
      __trace.line = 2190;
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[213] );
      __trace.line = 2192;
      if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
      {
        ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[81] ))));
      }
      __trace.line = 2194;
      t_3 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
      __trace.line = 2195;
      RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(t_3))) );
      __trace.line = 2196;
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
    }
    else if (((void*)t_3->_type) == ((void*)RogueTokenType_symbol_comma))
    {
      __trace.line = 2199;
      if (nesting_level_2 == 1)
      {
        return;
      }
      __trace.line = 2200;
      RogueParser__read( ROGUE_ARG(THIS) );
      __trace.line = 2201;
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      __trace.line = 2202;
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      __trace.line = 2205;
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      __trace.line = 2206;
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[236] );
      __trace.line = 2207;
      ++nesting_level_2;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize) ))))
    {
      __trace.line = 2210;
      --nesting_level_2;
      __trace.line = 2211;
      if (nesting_level_2 == 0)
      {
        __trace.line = 2212;
        return;
      }
      else
      {
        __trace.line = 2214;
        RogueParser__read( ROGUE_ARG(THIS) );
        __trace.line = 2215;
        if (!!(tokens_1))
        {
          RogueToken_List__add__Token( tokens_1, t_3 );
        }
        __trace.line = 2216;
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[145] );
      }
    }
    else
    {
      __trace.line = 2220;
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      __trace.line = 2221;
      ROGUE_DEF_LOCAL_REF(RogueString*,st_4,((call_ROGUEM68( 4, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
      __trace.line = 2222;
      if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
      {
        __trace.line = 2223;
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'"', true )))), st_4 )))), (RogueCharacter)'"', true );
      }
      else
      {
        __trace.line = 2225;
        RogueStringBuilder__print__String( buffer_0, st_4 );
      }
    }
  }
}

RogueClassCmd* RogueParser__parse_term( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_term()", "Parser.rogue", 2230 );
  __trace.line = 2231;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  __trace.line = 2232;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    __trace.line = 2233;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2234;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
    {
      __trace.line = 2235;
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[431] ))));
    }
    __trace.line = 2237;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 2238;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2239;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2240;
    return (RogueClassCmd*)(result_1);
  }
  else if (((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) )))))
  {
    __trace.line = 2243;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_2,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 2244;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(result_2,RogueTypeCmdAccess)))));
    __trace.line = 2245;
    if (((!!(access_3) && ((RogueString__ends_with__Character( ROGUE_ARG(access_3->name), (RogueCharacter)']' )))) && !(!!(access_3->args))))
    {
      __trace.line = 2246;
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        return (RogueClassCmd*)(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(access_3->t), ROGUE_ARG(access_3->name) ))));
      }
    }
    __trace.line = 2248;
    return (RogueClassCmd*)(result_2);
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_type_identifier) ))))
  {
    __trace.line = 2251;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_4,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 2252;
    return (RogueClassCmd*)(result_4);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) ))))
  {
    __trace.line = 2256;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2257;
      RogueLogical first_5 = (true);
      __trace.line = 2258;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      __trace.line = 2259;
      while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 2260;
        first_5 = ((RogueLogical)false);
        __trace.line = 2261;
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      __trace.line = 2263;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 2264;
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_0, ROGUE_ARG((call_ROGUEM68( 4, t_0 ))), args_6 ))))));
    }
    __trace.line = 2267;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG((call_ROGUEM68( 4, t_0 ))), 0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_null) ))))
  {
    __trace.line = 2270;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), t_0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real) ))))
  {
    __trace.line = 2273;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, ROGUE_ARG((call_ROGUEM72( 19, t_0 ))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer) ))))
  {
    __trace.line = 2276;
    RogueInt32 value_7 = ((call_ROGUEM70( 17, t_0 )));
    __trace.line = 2277;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, value_7 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long) ))))
  {
    __trace.line = 2280;
    RogueInt64 value_8 = ((call_ROGUEM71( 18, t_0 )));
    __trace.line = 2281;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), t_0, value_8 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character) ))))
  {
    __trace.line = 2284;
    RogueCharacter value_9 = ((call_ROGUEM69( 16, t_0 )));
    __trace.line = 2285;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), t_0, value_9 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
  {
    __trace.line = 2288;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), t_0, ROGUE_ARG(THIS->_this_type) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
  {
    __trace.line = 2291;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
  {
    __trace.line = 2294;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_pi) ))))
  {
    __trace.line = 2297;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, 3.141592653589793 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_infinity) ))))
  {
    __trace.line = 2300;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (1.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_NaN) ))))
  {
    __trace.line = 2303;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (0.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    __trace.line = 2307;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateList*,list_10,(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
    __trace.line = 2308;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2309;
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) )))))
    {
      __trace.line = 2310;
      RogueLogical first_11 = (true);
      __trace.line = 2311;
      while ((first_11 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        __trace.line = 2312;
        first_11 = ((RogueLogical)false);
        __trace.line = 2313;
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)list_10->args)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        __trace.line = 2314;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      __trace.line = 2316;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    __trace.line = 2318;
    return (RogueClassCmd*)(((RogueClassCmd*)(list_10)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_brace) ))))
  {
    __trace.line = 2321;
    return (RogueClassCmd*)(((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_bracket) ))))
  {
    __trace.line = 2324;
    return (RogueClassCmd*)(((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_braces) ))))
  {
    __trace.line = 2327;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[434], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
  {
    __trace.line = 2330;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[435], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_prior) ))))
  {
    __trace.line = 2333;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2334;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2335;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2336;
    ROGUE_DEF_LOCAL_REF(RogueString*,name_12,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    __trace.line = 2337;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_13,0);
    __trace.line = 2338;
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_14,0);
    __trace.line = 2339;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2340;
      args_13 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
      __trace.line = 2341;
      named_args_14 = ((RogueCmdNamedArg_List*)((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_13 ))));
    }
    __trace.line = 2343;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), t_0, name_12, args_13, named_args_14 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    __trace.line = 2362;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_var_15,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 2363;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_16,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    __trace.line = 2364;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, result_var_15, false )))))) );
    __trace.line = 2365;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_16, result_var_15 )))))) );
    __trace.line = 2366;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(result_var_15->name) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_function) ))))
  {
    __trace.line = 2369;
    ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_17,0);
    __trace.line = 2370;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_18,0);
    __trace.line = 2371;
    RogueLogical is_generic_19 = (false);
    __trace.line = 2372;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2373;
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        __trace.line = 2374;
        parameters_17 = ((RogueFnParam_List*)((RogueFnParam_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))) ))));
        __trace.line = 2375;
        RogueLogical first_20 = (true);
        __trace.line = 2376;
        while ((first_20 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          __trace.line = 2377;
          first_20 = ((RogueLogical)false);
          __trace.line = 2378;
          ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_21,(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) )))));
          __trace.line = 2379;
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_22,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
          __trace.line = 2380;
          RogueLogical cur_generic_23 = (false);
          __trace.line = 2381;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            param_21->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
          }
          else
          {
            __trace.line = 2382;
            cur_generic_23 = ((RogueLogical)true);
          }
          __trace.line = 2384;
          if ((!!(parameters_17->count) && is_generic_19 != cur_generic_23))
          {
            __trace.line = 2385;
            ROGUE_THROW(((RogueToken__error__String( t2_22, Rogue_literal_strings[438] ))));
          }
          __trace.line = 2388;
          is_generic_19 = ((RogueLogical)cur_generic_23);
          __trace.line = 2389;
          RogueFnParam_List__add__FnParam( parameters_17, param_21 );
        }
        __trace.line = 2391;
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    __trace.line = 2395;
    RogueLogical parsed_arrow_24 = (false);
    __trace.line = 2396;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_25,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2397;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      __trace.line = 2398;
      if (is_generic_19)
      {
        ROGUE_THROW(((RogueToken__error__String( t2_25, Rogue_literal_strings[439] ))));
      }
      __trace.line = 2399;
      parsed_arrow_24 = ((RogueLogical)true);
      __trace.line = 2400;
      return_type_18 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2403;
    ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,with_args_26,0);
    __trace.line = 2404;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_with) ))))
    {
      __trace.line = 2405;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 2406;
      if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
      {
        __trace.line = 2407;
        with_args_26 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
        __trace.line = 2408;
        RogueLogical first_27 = (true);
        __trace.line = 2409;
        while ((first_27 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
        {
          __trace.line = 2410;
          first_27 = ((RogueLogical)false);
          __trace.line = 2411;
          t2_25 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
          __trace.line = 2412;
          ROGUE_DEF_LOCAL_REF(RogueString*,name_28,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
          __trace.line = 2413;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_29,0);
          __trace.line = 2414;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
          {
            __trace.line = 2415;
            value_29 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          else
          {
            __trace.line = 2418;
            value_29 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t2_25, name_28 ))))));
          }
          __trace.line = 2420;
          ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_30,(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), name_28, value_29 )))));
          __trace.line = 2421;
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
          {
            RogueFnArg__set_type__Type( arg_30, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
          }
          __trace.line = 2422;
          RogueFnArg_List__add__FnArg( with_args_26, arg_30 );
        }
        __trace.line = 2424;
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
    }
    __trace.line = 2428;
    RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
    __trace.line = 2430;
    if (!(parsed_arrow_24))
    {
      __trace.line = 2431;
      t2_25 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      __trace.line = 2432;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
      {
        __trace.line = 2433;
        if (((!!(parameters_17) && !!(parameters_17->count)) && !(is_generic_19)))
        {
          __trace.line = 2436;
          ROGUE_THROW(((RogueToken__error__String( t2_25, Rogue_literal_strings[440] ))));
        }
        __trace.line = 2439;
        is_generic_19 = ((RogueLogical)true);
      }
    }
    __trace.line = 2443;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_31,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    __trace.line = 2444;
    if ((!(is_generic_19) && ((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
    {
      __trace.line = 2445;
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_31 );
      __trace.line = 2446;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endFunction), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    else
    {
      __trace.line = 2448;
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_31 );
    }
    __trace.line = 2451;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), t_0, parameters_17, return_type_18, with_args_26, statements_31, is_generic_19 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    __trace.line = 2454;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2455;
    RogueLogical has_parens_32 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    __trace.line = 2456;
    if (has_parens_32)
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 2458;
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      __trace.line = 2459;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[343] ))));
    }
    __trace.line = 2461;
    ROGUE_DEF_LOCAL_REF(RogueString*,code_33,((call_ROGUEM68( 4, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    __trace.line = 2463;
    if (has_parens_32)
    {
      __trace.line = 2464;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2465;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    __trace.line = 2468;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,result_type_34,0);
    __trace.line = 2469;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      result_type_34 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2471;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_0, code_33, result_type_34 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_select) ))))
  {
    __trace.line = 2474;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2475;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,cmd_select_35,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdSelectCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))) )))) )))));
    __trace.line = 2477;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2478;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2479;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,comparison_var_36,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      __trace.line = 2480;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, comparison_var_36, true )))))) );
      __trace.line = 2481;
      comparison_var_36->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
      __trace.line = 2482;
      cmd_select_35->local_info = comparison_var_36;
      __trace.line = 2483;
      cmd_select_35->expression = comparison_var_36->initial_value;
      __trace.line = 2484;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2485;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      __trace.line = 2486;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    __trace.line = 2489;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2490;
    RogueLogical first_37 = (true);
    __trace.line = 2491;
    while ((first_37 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) )))))
    {
      __trace.line = 2492;
      first_37 = ((RogueLogical)false);
      __trace.line = 2493;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2494;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_38,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG((call_ROGUEM111( 8, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), 1 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      __trace.line = 2495;
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(cmd_select_35->cases), select_case_38 );
      __trace.line = 2497;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
      {
        __trace.line = 2498;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 2499;
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        __trace.line = 2500;
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        __trace.line = 2505;
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        __trace.line = 2507;
        goto _auto_1825;
      }
      else
      {
        __trace.line = 2510;
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        __trace.line = 2511;
        while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
        {
          __trace.line = 2512;
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          __trace.line = 2513;
          RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_38->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
          __trace.line = 2514;
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        __trace.line = 2517;
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          __trace.line = 2518;
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          __trace.line = 2519;
          select_case_38->value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
          __trace.line = 2520;
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        else if (select_case_38->conditions->count > 1)
        {
          __trace.line = 2522;
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        }
      }
    }
    _auto_1825:;
    __trace.line = 2527;
    if (((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions->count > 1)
    {
      __trace.line = 2528;
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[441] ))));
    }
    else if (!!(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->value))
    {
      __trace.line = 2530;
      ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[442] ))));
    }
    else
    {
      __trace.line = 2532;
      ((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->value = ((RogueCmd_List__remove_at__Int32( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions), 0 )));
      __trace.line = 2533;
      RogueCmd_List__clear( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_35->cases) )))->conditions) );
    }
    __trace.line = 2536;
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    __trace.line = 2538;
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_select_35)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    __trace.line = 2541;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2542;
    RogueLogical has_parens_39 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    __trace.line = 2544;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_40,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2545;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_41,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 2546;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_42,0);
    __trace.line = 2547;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_42 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2548;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_43,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2550;
    if (has_parens_39)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    __trace.line = 2552;
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return (RogueClassCmd*)(expr_41);
    }
    __trace.line = 2554;
    if (!(!!(message_42)))
    {
      __trace.line = 2555;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_44,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 2556;
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_45,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_40->filepath) )))));
      __trace.line = 2557;
      if ((((!!(parse_reader_45) && !!(start_t_40->line)) && !!(start_t_40->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_40->filepath), ROGUE_ARG(end_t_43->filepath) )))))
      {
        __trace.line = 2558;
        RogueParseReader__seek_location__Int32_Int32( parse_reader_45, ROGUE_ARG(start_t_40->line), ROGUE_ARG(start_t_40->column) );
        __trace.line = 2559;
        while ((((RogueParseReader__has_another( parse_reader_45 ))) && (parse_reader_45->line < end_t_43->line || (parse_reader_45->line == end_t_43->line && parse_reader_45->column < end_t_43->column))))
        {
          __trace.line = 2561;
          RogueStringBuilder__print__Character_Logical( buffer_44, ROGUE_ARG(((RogueParseReader__read( parse_reader_45 )))), true );
        }
      }
      __trace.line = 2564;
      message_42 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_44 )))), 0 ))))));
    }
    __trace.line = 2567;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_46,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 2568;
    temp_var_46->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    __trace.line = 2569;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_46, true )))))) );
    __trace.line = 2570;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_0, expr_41, message_42, temp_var_46 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_require) ))))
  {
    __trace.line = 2573;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2574;
    RogueLogical has_parens_47 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    __trace.line = 2576;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_48,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2577;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_49,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 2578;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_50,0);
    __trace.line = 2579;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_50 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2580;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_51,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    __trace.line = 2582;
    if (has_parens_47)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    __trace.line = 2584;
    if (!(!!(message_50)))
    {
      __trace.line = 2585;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_52,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 2586;
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_53,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_48->filepath) )))));
      __trace.line = 2587;
      if ((((!!(parse_reader_53) && !!(start_t_48->line)) && !!(start_t_48->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_48->filepath), ROGUE_ARG(end_t_51->filepath) )))))
      {
        __trace.line = 2588;
        RogueParseReader__seek_location__Int32_Int32( parse_reader_53, ROGUE_ARG(start_t_48->line), ROGUE_ARG(start_t_48->column) );
        __trace.line = 2589;
        while ((((RogueParseReader__has_another( parse_reader_53 ))) && (parse_reader_53->line < end_t_51->line || (parse_reader_53->line == end_t_51->line && parse_reader_53->column < end_t_51->column))))
        {
          __trace.line = 2591;
          RogueStringBuilder__print__Character_Logical( buffer_52, ROGUE_ARG(((RogueParseReader__read( parse_reader_53 )))), true );
        }
      }
      __trace.line = 2594;
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_52, Rogue_literal_strings[396] )))), ROGUE_ARG(THIS->_this_type->name) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[414] );
      __trace.line = 2595;
      message_50 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_52 )))), 0 ))))));
    }
    __trace.line = 2598;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_54,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 2599;
    temp_var_54->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    __trace.line = 2600;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_54, true )))))) );
    __trace.line = 2601;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), t_0, expr_49, message_50, temp_var_54 ))))));
  }
  else
  {
    __trace.line = 2604;
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[443] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_this_type->name) )))) )))) )))) );
    __trace.line = 2605;
    RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
    __trace.line = 2606;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[444], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))), Rogue_literal_strings[45] )))) ))));
  }
}

RogueClassCmd* RogueParser__parse_ensure( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.parse_ensure()", "Parser.rogue", 2609 );
  __trace.line = 2610;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  __trace.line = 2612;
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  __trace.line = 2613;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  __trace.line = 2615;
  RogueLogical first_3 = (true);
  __trace.line = 2616;
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_ampersand) )))))
  {
    __trace.line = 2617;
    first_3 = ((RogueLogical)false);
    __trace.line = 2619;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    __trace.line = 2621;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,cmd_ensure_5,0);
    __trace.line = 2622;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 2625;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      __trace.line = 2626;
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_7,(((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_6 )))));
      __trace.line = 2627;
      cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, args_6, named_args_7 ))));
    }
    else
    {
      __trace.line = 2630;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_8,(((RogueClassCmdAccess*)(RogueObject_as(expr_4,RogueTypeCmdAccess)))));
      __trace.line = 2631;
      if (!!(access_8))
      {
        __trace.line = 2632;
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(access_8->args));
        __trace.line = 2633;
        if (!(!!(args_9)))
        {
          args_9 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
        }
        __trace.line = 2634;
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_10,(access_8->named_args));
        __trace.line = 2635;
        access_8->args = ((RogueClassCmdArgs*)(NULL));
        __trace.line = 2636;
        access_8->named_args = ((RogueCmdNamedArg_List*)(NULL));
        __trace.line = 2637;
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, ROGUE_ARG(((RogueClassCmd*)(access_8))), args_9, named_args_10 ))));
      }
      else
      {
        __trace.line = 2639;
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) ))));
      }
    }
    __trace.line = 2643;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_block_2->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_ensure_5))) );
  }
  __trace.line = 2652;
  if (has_parens_1)
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  __trace.line = 2654;
  if (cmd_block_2->statements->count == 1)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2->statements->data->objects[0])));
  }
  else
  {
    __trace.line = 2655;
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2)));
  }
}

RogueClassCmd* RogueParser__parse_property_table__Token( RogueClassParser* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "Parser.parse_property_table(Token)", "Parser.rogue", 2657 );
  __trace.line = 2659;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,table_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[434], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  __trace.line = 2660;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 2661;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace) ))))
  {
    return (RogueClassCmd*)(table_1);
  }
  __trace.line = 2663;
  RogueLogical first_2 = (true);
  __trace.line = 2664;
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 2665;
    first_2 = ((RogueLogical)false);
    __trace.line = 2666;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2668;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,key_3,0);
    __trace.line = 2669;
    if (((RogueParser__next_is_identifier__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString*)(NULL))) ))))
    {
      __trace.line = 2670;
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      __trace.line = 2671;
      key_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), 0 ))))));
    }
    else
    {
      __trace.line = 2673;
      key_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2675;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2677;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,0);
    __trace.line = 2678;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      __trace.line = 2679;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      __trace.line = 2680;
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      __trace.line = 2681;
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
      {
        __trace.line = 2682;
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        __trace.line = 2684;
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else
      {
        __trace.line = 2686;
        value_4 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
      }
    }
    else
    {
      __trace.line = 2689;
      value_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
    }
    __trace.line = 2692;
    table_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(key_3->t), table_1, Rogue_literal_strings[437], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), key_3, value_4 )))) ))))));
    __trace.line = 2694;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  __trace.line = 2697;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2698;
  return (RogueClassCmd*)(table_1);
}

RogueClassCmd* RogueParser__parse_property_list__Token( RogueClassParser* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "Parser.parse_property_list(Token)", "Parser.rogue", 2700 );
  __trace.line = 2702;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,list_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[435], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  __trace.line = 2703;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 2704;
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))
  {
    return (RogueClassCmd*)(list_1);
  }
  __trace.line = 2706;
  RogueLogical first_2 = (true);
  __trace.line = 2707;
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 2708;
    first_2 = ((RogueLogical)false);
    __trace.line = 2709;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2711;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
    __trace.line = 2712;
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 2713;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
    {
      __trace.line = 2714;
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      __trace.line = 2716;
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else
    {
      __trace.line = 2718;
      value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    __trace.line = 2721;
    list_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(value_3->t), list_1, Rogue_literal_strings[436], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), value_3 )))) ))))));
    __trace.line = 2723;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  __trace.line = 2726;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2727;
  return (RogueClassCmd*)(list_1);
}

RogueClassCmd* RogueParser__parse_typed_literal_list__Token_String( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* list_type_name_1 )
{
  RogueDebugTrace __trace( "Parser.parse_typed_literal_list(Token,String)", "Parser.rogue", 2729 );
  __trace.line = 2730;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTypedLiteralList*,list_2,(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), t_0, list_type_name_1, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  __trace.line = 2732;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2733;
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  __trace.line = 2735;
  RogueLogical first_3 = (true);
  __trace.line = 2736;
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 2737;
    first_3 = ((RogueLogical)false);
    __trace.line = 2738;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    __trace.line = 2739;
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    __trace.line = 2740;
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      __trace.line = 2742;
      if (((RogueString__ends_with__String( list_type_name_1, Rogue_literal_strings[432] ))))
      {
        __trace.line = 2743;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,item_4,(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueString__leftmost__Int32( list_type_name_1, -2 )))) )))));
        __trace.line = 2744;
        RogueCmdTypedLiteralList__add__Cmd( list_2, item_4 );
      }
      else
      {
        __trace.line = 2746;
        ROGUE_THROW(((RogueToken__error__String( t_0, Rogue_literal_strings[433] ))));
      }
    }
    else
    {
      __trace.line = 2749;
      RogueCmdTypedLiteralList__add__Cmd( list_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
    }
    __trace.line = 2751;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  __trace.line = 2753;
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  __trace.line = 2755;
  return (RogueClassCmd*)(((RogueClassCmd*)(list_2)));
}

RogueClassParser* RogueParser__init_object( RogueClassParser* THIS )
{
  RogueDebugTrace __trace( "Parser.init_object()", "Parser.rogue", 1 );
  __trace.line = 8;
  THIS->local_declarations = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  __trace.line = 9;
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  __trace.line = 11;
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 17;
  THIS->used_modules = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 1;
  return (RogueClassParser*)(THIS);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init( RogueClassTable_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_ParseReader___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueString* RogueTable_String_ParseReader___to_String( RogueClassTable_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_ParseReader___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_ParseReader___type_name( RogueClassTable_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[774]);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init__Int32( RogueClassTable_String_ParseReader_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_ParseReader__List__init__Int32_TableEntry_String_ParseReader_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_ParseReader__List*,ROGUE_CREATE_OBJECT(TableEntry_String_ParseReader__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_ParseReader_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueClassTableEntry_String_ParseReader_* RogueTable_String_ParseReader___find__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_2,(((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_ParseReader_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_ParseReader_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_ParseReader_*)(((RogueClassTableEntry_String_ParseReader_*)(NULL)));
}

RogueClassParseReader* RogueTable_String_ParseReader___get__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_1,(((RogueTable_String_ParseReader___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassParseReader*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassParseReader*)(default_value_2);
  }
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___set__String_ParseReader( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0, RogueClassParseReader* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.set(String,ParseReader)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_4,(((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_ParseReader_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_ParseReader_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_ParseReader_*)((RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_ParseReader_*,ROGUE_CREATE_OBJECT(TableEntry_String_ParseReader_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueStringBuilder* RogueTable_String_ParseReader___print_to__StringBuilder( RogueClassTable_String_ParseReader_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init_object( RogueClassTable_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,ParseReader>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueString* RogueStopwatch__to_String( RogueClassStopwatch* THIS )
{
  RogueDebugTrace __trace( "Stopwatch.to_String()", "Time.rogue", 13 );
  __trace.line = 14;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Real64_Int32( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueStopwatch__elapsed( ROGUE_ARG(THIS) )))), 2 )))), Rogue_literal_strings[724] )))) ))));
}

RogueString* RogueStopwatch__type_name( RogueClassStopwatch* THIS )
{
  RogueDebugTrace __trace( "Stopwatch.type_name()", "Time.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[775]);
}

RogueReal64 RogueStopwatch__elapsed( RogueClassStopwatch* THIS )
{
  RogueDebugTrace __trace( "Stopwatch.elapsed()", "Time.rogue", 6 );
  __trace.line = 7;
  return (RogueReal64)(((RogueSystem__time()) - THIS->start_time));
}

RogueClassStopwatch* RogueStopwatch__init_object( RogueClassStopwatch* THIS )
{
  RogueDebugTrace __trace( "Stopwatch.init_object()", "Time.rogue", 1 );
  __trace.line = 3;
  THIS->start_time = (RogueSystem__time());
  __trace.line = 1;
  return (RogueClassStopwatch*)(THIS);
}

RogueString* RogueFile__to_String( RogueClassFile* THIS )
{
  RogueDebugTrace __trace( "File.to_String()", "File.rogue", 426 );
  __trace.line = 427;
  return (RogueString*)(THIS->filepath);
}

RogueString* RogueFile__type_name( RogueClassFile* THIS )
{
  RogueDebugTrace __trace( "File.type_name()", "File.rogue", 64 );
  return (RogueString*)(Rogue_literal_strings[776]);
}

RogueClassFile* RogueFile__init__String( RogueClassFile* THIS, RogueString* _auto_517_0 )
{
  RogueDebugTrace __trace( "File.init(String)", "File.rogue", 373 );
  THIS->filepath = _auto_517_0;
  __trace.line = 375;
  return (RogueClassFile*)(THIS);
}

RogueString* RogueFile__filename( RogueClassFile* THIS )
{
  RogueDebugTrace __trace( "File.filename()", "File.rogue", 393 );
  __trace.line = 394;
  return (RogueString*)((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
}

RogueClassFile* RogueFile__init_object( RogueClassFile* THIS )
{
  RogueDebugTrace __trace( "File.init_object()", "File.rogue", 64 );
  return (RogueClassFile*)(THIS);
}

RogueString* RogueArray_Parser___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Parser>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[870]);
}

RogueString* RogueCmdMakeRequisite__type_name( RogueClassCmdMakeRequisite* THIS )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.type_name()", "Cmd.rogue", 4488 );
  return (RogueString*)(Rogue_literal_strings[921]);
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__clone__CloneArgs( RogueClassCmdMakeRequisite* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.clone(CloneArgs)", "Cmd.rogue", 4495 );
  __trace.line = 4496;
  return (RogueClassCmdMakeRequisite*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) ))));
}

void RogueCmdMakeRequisite__dispatch__Visitor( RogueClassCmdMakeRequisite* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdMakeRequisite( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdMakeRequisite__requires_semicolon( RogueClassCmdMakeRequisite* THIS )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.requires_semicolon()", "Cmd.rogue", 4498 );
  __trace.line = 4499;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdMakeRequisite__resolve__Scope( RogueClassCmdMakeRequisite* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.resolve(Scope)", "Cmd.rogue", 4501 );
  __trace.line = 4502;
  if (((RogueString__contains__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' ))))
  {
    __trace.line = 4503;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_1,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__before_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))) )))));
    __trace.line = 4504;
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_requisite( req_type_1 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    __trace.line = 4505;
    ROGUE_DEF_LOCAL_REF(RogueString*,sig_2,(((RogueString__after_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))));
    __trace.line = 4507;
    if (((RogueString__operatorEQUALSEQUALS__String( sig_2, Rogue_literal_strings[250] ))))
    {
      __trace.line = 4508;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1865_6,(req_type_1->global_method_list));
        RogueInt32 _auto_1866_7 = (0);
        for (;_auto_1866_7 < _auto_1865_6->count;++_auto_1866_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_8,(((RogueClassMethod*)(_auto_1865_6->data->objects[_auto_1866_7]))));
          RogueMethod__make_requisite( r_8 );
        }
      }
      __trace.line = 4509;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1867_9,(req_type_1->method_list));
        RogueInt32 _auto_1868_10 = (0);
        for (;_auto_1868_10 < _auto_1867_9->count;++_auto_1868_10)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_1867_9->data->objects[_auto_1868_10]))));
          RogueMethod__make_requisite( m_11 );
        }
      }
    }
    else if (((RogueString__contains__Character( sig_2, (RogueCharacter)'(' ))))
    {
      __trace.line = 4512;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueType__find_method__String( req_type_1, sig_2 )))));
      __trace.line = 4513;
      if (!!(m_3))
      {
        RogueMethod__make_requisite( m_3 );
      }
      else
      {
        __trace.line = 4514;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[975] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], sig_2 )))) )))), Rogue_literal_strings[976] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(req_type_1->name) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
      }
    }
    else
    {
      __trace.line = 4517;
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->global_method_lookup_by_name), sig_2 )))));
      __trace.line = 4518;
      if (!!(list_4))
      {
        __trace.line = 4519;
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1869_12,(list_4));
          RogueInt32 _auto_1870_13 = (0);
          for (;_auto_1870_13 < _auto_1869_12->count;++_auto_1870_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_1869_12->data->objects[_auto_1870_13]))));
            RogueMethod__make_requisite( m_14 );
          }
        }
      }
      __trace.line = 4522;
      list_4 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->method_lookup_by_name), sig_2 ))));
      __trace.line = 4523;
      if (!!(list_4))
      {
        __trace.line = 4524;
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1871_15,(list_4));
          RogueInt32 _auto_1872_16 = (0);
          for (;_auto_1872_16 < _auto_1871_15->count;++_auto_1872_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_17,(((RogueClassMethod*)(_auto_1871_15->data->objects[_auto_1872_16]))));
            RogueMethod__make_requisite( m_17 );
          }
        }
      }
    }
  }
  else
  {
    __trace.line = 4529;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_5,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) )))));
    __trace.line = 4530;
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_requisite( req_type_5 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  __trace.line = 4532;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

void RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical( RogueClassCmdMakeRequisite* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2879 );
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init_object( RogueClassCmdMakeRequisite* THIS )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.init_object()", "Cmd.rogue", 4488 );
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init__Token_String( RogueClassCmdMakeRequisite* THIS, RogueClassToken* _auto_530_0, RogueString* _auto_531_1 )
{
  RogueDebugTrace __trace( "CmdMakeRequisite.init(Token,String)", "Cmd.rogue", 4493 );
  THIS->pattern = _auto_531_1;
  THIS->t = _auto_530_0;
  __trace.line = 4495;
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueString* RogueLineReader__type_name( RogueClassLineReader* THIS )
{
  RogueDebugTrace __trace( "LineReader.type_name()", "LineReader.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[777]);
}

RogueLogical RogueLineReader__has_another( RogueClassLineReader* THIS )
{
  RogueDebugTrace __trace( "LineReader.has_another()", "LineReader.rogue", 18 );
  __trace.line = 19;
  return (RogueLogical)(!!(THIS->next));
}

RogueString* RogueLineReader__read( RogueClassLineReader* THIS )
{
  RogueDebugTrace __trace( "LineReader.read()", "LineReader.rogue", 38 );
  __trace.line = 39;
  ROGUE_DEF_LOCAL_REF(RogueString*,result_0,(THIS->next));
  __trace.line = 40;
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  __trace.line = 41;
  ++THIS->position;
  __trace.line = 42;
  return (RogueString*)(result_0);
}

RogueClassLineReader* RogueLineReader__init__Reader_Character_( RogueClassLineReader* THIS, RogueClassReader_Character_* _auto_538_0 )
{
  RogueDebugTrace __trace( "LineReader.init(Reader<<Character>>)", "LineReader.rogue", 9 );
  THIS->source = _auto_538_0;
  __trace.line = 10;
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  __trace.line = 12;
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__File( RogueClassLineReader* THIS, RogueClassFile* file_0 )
{
  RogueDebugTrace __trace( "LineReader.init(File)", "LineReader.rogue", 12 );
  __trace.line = 13;
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueUTF8Reader__init__Reader_Byte_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUTF8Reader*,ROGUE_CREATE_OBJECT(UTF8Reader))), ROGUE_ARG(((((RogueClassReader_Byte_*)((RogueFile__reader__String( ROGUE_ARG(file_0->filepath) ))))))) )))))))) );
  __trace.line = 15;
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__String( RogueClassLineReader* THIS, RogueString* string_0 )
{
  RogueDebugTrace __trace( "LineReader.init(String)", "LineReader.rogue", 15 );
  __trace.line = 16;
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueString__reader( string_0 )))))))) );
  __trace.line = 18;
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueLineReader__prepare_next( RogueClassLineReader* THIS )
{
  RogueDebugTrace __trace( "LineReader.prepare_next()", "LineReader.rogue", 24 );
  __trace.line = 25;
  if (!((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) ))))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  __trace.line = 27;
  THIS->prev = ((RogueCharacter)(0));
  __trace.line = 29;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 30;
  while ((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) )))
  {
    __trace.line = 31;
    RogueCharacter ch_0 = ((RogueReader_Character___read( ROGUE_ARG(((RogueObject*)THIS->source)) )));
    __trace.line = 32;
    if (ch_0 == (RogueCharacter)10)
    {
      THIS->prev = (RogueCharacter)10;
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
    }
    __trace.line = 33;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
  }
  __trace.line = 36;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueClassLineReader* RogueLineReader__init_object( RogueClassLineReader* THIS )
{
  RogueDebugTrace __trace( "LineReader.init_object()", "LineReader.rogue", 1 );
  __trace.line = 5;
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 1;
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueFunction_545__type_name( RogueClassFunction_545* THIS )
{
  RogueDebugTrace __trace( "Function_545.type_name()", "RogueC.rogue", 405 );
  return (RogueString*)(Rogue_literal_strings[1144]);
}

RogueLogical RogueFunction_545__call( RogueClassFunction_545* THIS )
{
  RogueDebugTrace __trace( "Function_545.call()", "RogueC.rogue", 405 );
  __trace.line = 406;
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1145] )))) )))) );
  __trace.line = 407;
  if (!(!!(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[1146] ))))))
  {
    __trace.line = 408;
    ROGUE_DEF_LOCAL_REF(RogueString*,src_3,(Rogue_literal_strings[1147]));
    __trace.line = 413;
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1148] );
    __trace.line = 414;
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), src_3 );
    __trace.line = 415;
    RogueParser__parse_elements( ROGUE_ARG(((RogueParser__init__String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), Rogue_literal_strings[1149], src_3 )))) );
    __trace.line = 416;
    return (RogueLogical)(true);
  }
  else
  {
    __trace.line = 418;
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1150] );
    __trace.line = 419;
    return (RogueLogical)(false);
  }
}

RogueClassFunction_545* RogueFunction_545__init_object( RogueClassFunction_545* THIS )
{
  RogueDebugTrace __trace( "Function_545.init_object()", "RogueC.rogue", 405 );
  return (RogueClassFunction_545*)(THIS);
}

RogueString* RogueFunction__RETURNSLogical__type_name( RogueClassFunction__RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function()->Logical.type_name()", "Plugin.rogue", 7 );
  return (RogueString*)(Rogue_literal_strings[778]);
}

RogueLogical RogueFunction__RETURNSLogical__call( RogueClassFunction__RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function()->Logical.call()", "Plugin.rogue", 7 );
  return (RogueLogical)(false);
}

RogueClassFunction__RETURNSLogical* RogueFunction__RETURNSLogical__init_object( RogueClassFunction__RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function()->Logical.init_object()", "Plugin.rogue", 7 );
  return (RogueClassFunction__RETURNSLogical*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__init( RogueTypeParameter_List* THIS )
{
  RogueDebugTrace __trace( "TypeParameter[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTypeParameter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTypeParameter_List*)(THIS);
}

RogueString* RogueTypeParameter_List__to_String( RogueTypeParameter_List* THIS )
{
  RogueDebugTrace __trace( "TypeParameter[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_1878_2,(THIS));
    RogueInt32 _auto_1879_3 = (0);
    for (;_auto_1879_3 < _auto_1878_2->count;++_auto_1879_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,value_4,(((RogueClassTypeParameter*)(_auto_1878_2->data->objects[_auto_1879_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeParameter_List__type_name( RogueTypeParameter_List* THIS )
{
  RogueDebugTrace __trace( "TypeParameter[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[826]);
}

RogueTypeParameter_List* RogueTypeParameter_List__init_object( RogueTypeParameter_List* THIS )
{
  RogueDebugTrace __trace( "TypeParameter[].init_object()", "List.rogue", 4 );
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__init__Int32( RogueTypeParameter_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TypeParameter[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeParameter*), true );
  }
  __trace.line = 16;
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__add__TypeParameter( RogueTypeParameter_List* THIS, RogueClassTypeParameter* value_0 )
{
  RogueDebugTrace __trace( "TypeParameter[].add(TypeParameter)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTypeParameter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTypeParameter_List*)(THIS);
}

RogueInt32 RogueTypeParameter_List__capacity( RogueTypeParameter_List* THIS )
{
  RogueDebugTrace __trace( "TypeParameter[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTypeParameter_List* RogueTypeParameter_List__reserve__Int32( RogueTypeParameter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TypeParameter[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTypeParameter_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTypeParameter_List*)(THIS);
}

RogueString* RogueTypeParameter__type_name( RogueClassTypeParameter* THIS )
{
  RogueDebugTrace __trace( "TypeParameter.type_name()", "Template.rogue", 205 );
  return (RogueString*)(Rogue_literal_strings[779]);
}

RogueClassTypeParameter* RogueTypeParameter__init__Token_String( RogueClassTypeParameter* THIS, RogueClassToken* _auto_579_0, RogueString* _auto_580_1 )
{
  RogueDebugTrace __trace( "TypeParameter.init(Token,String)", "Template.rogue", 211 );
  THIS->name = _auto_580_1;
  THIS->t = _auto_579_0;
  return (RogueClassTypeParameter*)(THIS);
}

RogueClassTypeParameter* RogueTypeParameter__init_object( RogueClassTypeParameter* THIS )
{
  RogueDebugTrace __trace( "TypeParameter.init_object()", "Template.rogue", 205 );
  return (RogueClassTypeParameter*)(THIS);
}

RogueAugment_List* RogueAugment_List__init( RogueAugment_List* THIS )
{
  RogueDebugTrace __trace( "Augment[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueAugment_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueAugment_List*)(THIS);
}

RogueString* RogueAugment_List__to_String( RogueAugment_List* THIS )
{
  RogueDebugTrace __trace( "Augment[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_1911_2,(THIS));
    RogueInt32 _auto_1912_3 = (0);
    for (;_auto_1912_3 < _auto_1911_2->count;++_auto_1912_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,value_4,(((RogueClassAugment*)(_auto_1911_2->data->objects[_auto_1912_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueAugment_List__type_name( RogueAugment_List* THIS )
{
  RogueDebugTrace __trace( "Augment[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[827]);
}

RogueAugment_List* RogueAugment_List__init_object( RogueAugment_List* THIS )
{
  RogueDebugTrace __trace( "Augment[].init_object()", "List.rogue", 4 );
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__init__Int32( RogueAugment_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Augment[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassAugment*), true );
  }
  __trace.line = 16;
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__add__Augment( RogueAugment_List* THIS, RogueClassAugment* value_0 )
{
  RogueDebugTrace __trace( "Augment[].add(Augment)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueAugment_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueAugment_List*)(THIS);
}

RogueInt32 RogueAugment_List__capacity( RogueAugment_List* THIS )
{
  RogueDebugTrace __trace( "Augment[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueAugment_List* RogueAugment_List__reserve__Int32( RogueAugment_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Augment[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueAugment_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueAugment_List*)(THIS);
}

RogueString* RogueAugment__type_name( RogueClassAugment* THIS )
{
  RogueDebugTrace __trace( "Augment.type_name()", "Augment.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[780]);
}

RogueClassAugment* RogueAugment__init__Token_String( RogueClassAugment* THIS, RogueClassToken* _auto_585_0, RogueString* _auto_586_1 )
{
  RogueDebugTrace __trace( "Augment.init(Token,String)", "Augment.rogue", 9 );
  THIS->name = _auto_586_1;
  THIS->t = _auto_585_0;
  return (RogueClassAugment*)(THIS);
}

RogueClassAugment* RogueAugment__init_object( RogueClassAugment* THIS )
{
  RogueDebugTrace __trace( "Augment.init_object()", "Augment.rogue", 1 );
  __trace.line = 5;
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  __trace.line = 6;
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  __trace.line = 1;
  return (RogueClassAugment*)(THIS);
}

RogueString* RogueArray_Augment___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Augment>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[871]);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init( RogueClassTable_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_TokenType___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueString* RogueTable_String_TokenType___to_String( RogueClassTable_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TokenType___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TokenType___type_name( RogueClassTable_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[781]);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init__Int32( RogueClassTable_String_TokenType_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_TokenType__List__init__Int32_TableEntry_String_TokenType_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TokenType__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TokenType__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TokenType_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueClassTableEntry_String_TokenType_* RogueTable_String_TokenType___find__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_2,(((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TokenType_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_TokenType_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_TokenType_*)(((RogueClassTableEntry_String_TokenType_*)(NULL)));
}

RogueClassTokenType* RogueTable_String_TokenType___get__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_1,(((RogueTable_String_TokenType___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassTokenType*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassTokenType*)(default_value_2);
  }
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___set__String_TokenType( RogueClassTable_String_TokenType_* THIS, RogueString* key_0, RogueClassTokenType* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.set(String,TokenType)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_4,(((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_TokenType_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_TokenType_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_TokenType_*)((RogueTableEntry_String_TokenType___init__String_TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TokenType_*,ROGUE_CREATE_OBJECT(TableEntry_String_TokenType_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_TokenType_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TokenType___print_to__StringBuilder( RogueClassTable_String_TokenType_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TokenType___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init_object( RogueClassTable_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TokenType>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueString* RogueLiteralCharacterToken__to_String( RogueClassLiteralCharacterToken* THIS )
{
  RogueDebugTrace __trace( "LiteralCharacterToken.to_String()", "Token.rogue", 126 );
  __trace.line = 127;
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralCharacterToken__type_name( RogueClassLiteralCharacterToken* THIS )
{
  RogueDebugTrace __trace( "LiteralCharacterToken.type_name()", "Token.rogue", 116 );
  return (RogueString*)(Rogue_literal_strings[909]);
}

RogueCharacter RogueLiteralCharacterToken__to_Character( RogueClassLiteralCharacterToken* THIS )
{
  RogueDebugTrace __trace( "LiteralCharacterToken.to_Character()", "Token.rogue", 123 );
  __trace.line = 124;
  return (RogueCharacter)(THIS->value);
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init_object( RogueClassLiteralCharacterToken* THIS )
{
  RogueDebugTrace __trace( "LiteralCharacterToken.init_object()", "Token.rogue", 116 );
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init__TokenType_Character( RogueClassLiteralCharacterToken* THIS, RogueClassTokenType* _auto_593_0, RogueCharacter _auto_594_1 )
{
  RogueDebugTrace __trace( "LiteralCharacterToken.init(TokenType,Character)", "Token.rogue", 121 );
  THIS->value = _auto_594_1;
  THIS->_type = _auto_593_0;
  __trace.line = 123;
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueString* RogueLiteralInt64Token__to_String( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.to_String()", "Token.rogue", 146 );
  __trace.line = 147;
  return (RogueString*)(((RogueString__operatorPLUS__Int64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt64Token__type_name( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.type_name()", "Token.rogue", 130 );
  return (RogueString*)(Rogue_literal_strings[910]);
}

RogueInt32 RogueLiteralInt64Token__to_Int32( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.to_Int32()", "Token.rogue", 137 );
  __trace.line = 138;
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueInt64 RogueLiteralInt64Token__to_Int64( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.to_Int64()", "Token.rogue", 140 );
  __trace.line = 141;
  return (RogueInt64)(THIS->value);
}

RogueReal64 RogueLiteralInt64Token__to_Real64( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.to_Real64()", "Token.rogue", 143 );
  __trace.line = 144;
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init_object( RogueClassLiteralInt64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt64Token.init_object()", "Token.rogue", 130 );
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init__TokenType_Int64( RogueClassLiteralInt64Token* THIS, RogueClassTokenType* _auto_595_0, RogueInt64 _auto_596_1 )
{
  RogueDebugTrace __trace( "LiteralInt64Token.init(TokenType,Int64)", "Token.rogue", 135 );
  THIS->value = _auto_596_1;
  THIS->_type = _auto_595_0;
  __trace.line = 137;
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueString* RogueLiteralInt32Token__to_String( RogueClassLiteralInt32Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt32Token.to_String()", "Token.rogue", 163 );
  __trace.line = 164;
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt32Token__type_name( RogueClassLiteralInt32Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt32Token.type_name()", "Token.rogue", 150 );
  return (RogueString*)(Rogue_literal_strings[911]);
}

RogueInt32 RogueLiteralInt32Token__to_Int32( RogueClassLiteralInt32Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt32Token.to_Int32()", "Token.rogue", 157 );
  __trace.line = 158;
  return (RogueInt32)(THIS->value);
}

RogueReal64 RogueLiteralInt32Token__to_Real64( RogueClassLiteralInt32Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt32Token.to_Real64()", "Token.rogue", 160 );
  __trace.line = 161;
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init_object( RogueClassLiteralInt32Token* THIS )
{
  RogueDebugTrace __trace( "LiteralInt32Token.init_object()", "Token.rogue", 150 );
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init__TokenType_Int32( RogueClassLiteralInt32Token* THIS, RogueClassTokenType* _auto_597_0, RogueInt32 _auto_598_1 )
{
  RogueDebugTrace __trace( "LiteralInt32Token.init(TokenType,Int32)", "Token.rogue", 155 );
  THIS->value = _auto_598_1;
  THIS->_type = _auto_597_0;
  __trace.line = 157;
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueString* RogueLiteralReal64Token__to_String( RogueClassLiteralReal64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralReal64Token.to_String()", "Token.rogue", 180 );
  __trace.line = 181;
  return (RogueString*)(((RogueString__operatorPLUS__Real64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralReal64Token__type_name( RogueClassLiteralReal64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralReal64Token.type_name()", "Token.rogue", 167 );
  return (RogueString*)(Rogue_literal_strings[912]);
}

RogueInt32 RogueLiteralReal64Token__to_Int32( RogueClassLiteralReal64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralReal64Token.to_Int32()", "Token.rogue", 174 );
  __trace.line = 175;
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueReal64 RogueLiteralReal64Token__to_Real64( RogueClassLiteralReal64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralReal64Token.to_Real64()", "Token.rogue", 177 );
  __trace.line = 178;
  return (RogueReal64)(THIS->value);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init_object( RogueClassLiteralReal64Token* THIS )
{
  RogueDebugTrace __trace( "LiteralReal64Token.init_object()", "Token.rogue", 167 );
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init__TokenType_Real64( RogueClassLiteralReal64Token* THIS, RogueClassTokenType* _auto_599_0, RogueReal64 _auto_600_1 )
{
  RogueDebugTrace __trace( "LiteralReal64Token.init(TokenType,Real64)", "Token.rogue", 172 );
  THIS->value = _auto_600_1;
  THIS->_type = _auto_599_0;
  __trace.line = 174;
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueString* RogueStringDataToken__to_String( RogueClassStringDataToken* THIS )
{
  RogueDebugTrace __trace( "StringDataToken.to_String()", "Token.rogue", 210 );
  __trace.line = 211;
  return (RogueString*)(THIS->value);
}

RogueString* RogueStringDataToken__type_name( RogueClassStringDataToken* THIS )
{
  RogueDebugTrace __trace( "StringDataToken.type_name()", "Token.rogue", 199 );
  return (RogueString*)(Rogue_literal_strings[913]);
}

RogueString* RogueStringDataToken__quoted_name( RogueClassStringDataToken* THIS )
{
  RogueDebugTrace __trace( "StringDataToken.quoted_name()", "Token.rogue", 206 );
  __trace.line = 207;
  if (((void*)THIS->_type) == ((void*)RogueTokenType_directive_requisite))
  {
    return (RogueString*)(Rogue_literal_strings[105]);
  }
  __trace.line = 208;
  return (RogueString*)((RogueToken__quoted_name( ROGUE_ARG(((RogueClassToken*)THIS)) )));
}

RogueClassStringDataToken* RogueStringDataToken__init_object( RogueClassStringDataToken* THIS )
{
  RogueDebugTrace __trace( "StringDataToken.init_object()", "Token.rogue", 199 );
  return (RogueClassStringDataToken*)(THIS);
}

RogueClassStringDataToken* RogueStringDataToken__init__TokenType_String( RogueClassStringDataToken* THIS, RogueClassTokenType* _auto_601_0, RogueString* _auto_602_1 )
{
  RogueDebugTrace __trace( "StringDataToken.init(TokenType,String)", "Token.rogue", 204 );
  THIS->value = _auto_602_1;
  THIS->_type = _auto_601_0;
  __trace.line = 206;
  return (RogueClassStringDataToken*)(THIS);
}

RogueString* RogueArray_Token___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Token>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[872]);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_TypeSpecializer___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueTable_String_TypeSpecializer___to_String( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeSpecializer___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeSpecializer___type_name( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[782]);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init__Int32( RogueClassTable_String_TypeSpecializer_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_TypeSpecializer__List__init__Int32_TableEntry_String_TypeSpecializer_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_TypeSpecializer__List*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeSpecializer__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_TypeSpecializer_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueInt32 RogueTable_String_TypeSpecializer___count( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.count()", "Table.rogue", 42 );
  __trace.line = 43;
  return (RogueInt32)(THIS->keys->count);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___find__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_2,(((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TypeSpecializer_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_TypeSpecializer_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_TypeSpecializer_*)(((RogueClassTableEntry_String_TypeSpecializer_*)(NULL)));
}

RogueClassTypeSpecializer* RogueTable_String_TypeSpecializer___get__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_1,(((RogueTable_String_TypeSpecializer___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassTypeSpecializer*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassTypeSpecializer*)(default_value_2);
  }
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0, RogueClassTypeSpecializer* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.set(String,TypeSpecializer)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_4,(((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_TypeSpecializer_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_TypeSpecializer_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_TypeSpecializer_*)((RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeSpecializer_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TypeSpecializer___print_to__StringBuilder( RogueClassTable_String_TypeSpecializer_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_TypeSpecializer___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init_object( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,TypeSpecializer>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueArray_TypeParameter___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TypeParameter>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[873]);
}

RogueString* RogueTypeSpecializer__type_name( RogueClassTypeSpecializer* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer.type_name()", "Template.rogue", 215 );
  return (RogueString*)(Rogue_literal_strings[783]);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init__String_Int32( RogueClassTypeSpecializer* THIS, RogueString* _auto_614_0, RogueInt32 _auto_615_1 )
{
  RogueDebugTrace __trace( "TypeSpecializer.init(String,Int32)", "Template.rogue", 223 );
  THIS->index = _auto_615_1;
  THIS->name = _auto_614_0;
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init_object( RogueClassTypeSpecializer* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer.init_object()", "Template.rogue", 215 );
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init( RogueTypeSpecializer_List* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTypeSpecializer_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueString* RogueTypeSpecializer_List__to_String( RogueTypeSpecializer_List* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_1992_2,(THIS));
    RogueInt32 _auto_1993_3 = (0);
    for (;_auto_1993_3 < _auto_1992_2->count;++_auto_1993_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,value_4,(((RogueClassTypeSpecializer*)(_auto_1992_2->data->objects[_auto_1993_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeSpecializer_List__type_name( RogueTypeSpecializer_List* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[828]);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init_object( RogueTypeSpecializer_List* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer[].init_object()", "List.rogue", 4 );
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TypeSpecializer[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeSpecializer*), true );
  }
  __trace.line = 16;
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__add__TypeSpecializer( RogueTypeSpecializer_List* THIS, RogueClassTypeSpecializer* value_0 )
{
  RogueDebugTrace __trace( "TypeSpecializer[].add(TypeSpecializer)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTypeSpecializer_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueInt32 RogueTypeSpecializer_List__capacity( RogueTypeSpecializer_List* THIS )
{
  RogueDebugTrace __trace( "TypeSpecializer[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__reserve__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TypeSpecializer[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTypeSpecializer_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init( RogueTableEntry_String_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Template__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueString* RogueTableEntry_String_Template__List__to_String( RogueTableEntry_String_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Template__List*,_auto_2020_2,(THIS));
    RogueInt32 _auto_2021_3 = (0);
    for (;_auto_2021_3 < _auto_2020_2->count;++_auto_2021_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,value_4,(((RogueClassTableEntry_String_Template_*)(_auto_2020_2->data->objects[_auto_2021_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Template___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Template__List__type_name( RogueTableEntry_String_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[829]);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init_object( RogueTableEntry_String_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init__Int32( RogueTableEntry_String_Template__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Template_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__init__Int32_TableEntry_String_Template_( RogueTableEntry_String_Template__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Template_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].init(Int32,TableEntry<<String,Template>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Template_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_624_3 = (initial_capacity_0);
      for (;i_2 <= _auto_624_3;++i_2)
      {
        RogueTableEntry_String_Template__List__add__TableEntry_String_Template_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__add__TableEntry_String_Template_( RogueTableEntry_String_Template__List* THIS, RogueClassTableEntry_String_Template_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].add(TableEntry<<String,Template>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Template__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Template__List__capacity( RogueTableEntry_String_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Template__List* RogueTableEntry_String_Template__List__reserve__Int32( RogueTableEntry_String_Template__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Template_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Template__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Template_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Template__List*)(THIS);
}

RogueString* RogueTableEntry_String_Template___to_String( RogueClassTableEntry_String_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Template___type_name( RogueClassTableEntry_String_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[725]);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init__String_Template_Int32( RogueClassTableEntry_String_Template_* THIS, RogueString* _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>.init(String,Template,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init_object( RogueClassTableEntry_String_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Template>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Template____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Template>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[874]);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Augment_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Augment_List__List__to_String( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Augment_List__List*,_auto_2048_2,(THIS));
    RogueInt32 _auto_2049_3 = (0);
    for (;_auto_2049_3 < _auto_2048_2->count;++_auto_2049_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,value_4,(((RogueClassTableEntry_String_Augment_List_*)(_auto_2048_2->data->objects[_auto_2049_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Augment_List___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Augment_List__List__type_name( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[830]);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init_object( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init__Int32( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__init__Int32_TableEntry_String_Augment_List_( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Augment_List_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].init(Int32,TableEntry<<String,Augment[]>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_641_3 = (initial_capacity_0);
      for (;i_2 <= _auto_641_3;++i_2)
      {
        RogueTableEntry_String_Augment_List__List__add__TableEntry_String_Augment_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__add__TableEntry_String_Augment_List_( RogueTableEntry_String_Augment_List__List* THIS, RogueClassTableEntry_String_Augment_List_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].add(TableEntry<<String,Augment[]>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Augment_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Augment_List__List__capacity( RogueTableEntry_String_Augment_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Augment_List__List* RogueTableEntry_String_Augment_List__List__reserve__Int32( RogueTableEntry_String_Augment_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Augment_List__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Augment_List_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Augment_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Augment_List___to_String( RogueClassTableEntry_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Augment_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Augment_List___type_name( RogueClassTableEntry_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[726]);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( RogueClassTableEntry_String_Augment_List_* THIS, RogueString* _key_0, RogueAugment_List* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>.init(String,Augment[],Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init_object( RogueClassTableEntry_String_Augment_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Augment[]>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Augment_List____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Augment[]>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[875]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdLabel_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdLabel_List*)(THIS);
}

RogueString* RogueCmdLabel_List__to_String( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_2104_2,(THIS));
    RogueInt32 _auto_2105_3 = (0);
    for (;_auto_2105_3 < _auto_2104_2->count;++_auto_2105_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,value_4,(((RogueClassCmdLabel*)(_auto_2104_2->data->objects[_auto_2105_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdLabel_List__type_name( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[831]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init_object( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].init_object()", "List.rogue", 4 );
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__init__Int32( RogueCmdLabel_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdLabel[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdLabel*), true );
  }
  __trace.line = 16;
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__add__CmdLabel( RogueCmdLabel_List* THIS, RogueClassCmdLabel* value_0 )
{
  RogueDebugTrace __trace( "CmdLabel[].add(CmdLabel)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdLabel_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdLabel_List*)(THIS);
}

RogueInt32 RogueCmdLabel_List__capacity( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmdLabel_List* RogueCmdLabel_List__clear( RogueCmdLabel_List* THIS )
{
  RogueDebugTrace __trace( "CmdLabel[].clear()", "List.rogue", 50 );
  __trace.line = 51;
  RogueCmdLabel_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 52;
  return (RogueCmdLabel_List*)(THIS);
}

void RogueCmdLabel_List__discard_from__Int32( RogueCmdLabel_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "CmdLabel[].discard_from(Int32)", "List.rogue", 86 );
  __trace.line = 87;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,zero_value_1,0);
  __trace.line = 88;
  RogueInt32 c_2 = (THIS->count);
  __trace.line = 89;
  while (c_2 > index_0)
  {
    __trace.line = 90;
    --c_2;
    __trace.line = 91;
    THIS->data->objects[c_2] = zero_value_1;
  }
  __trace.line = 93;
  THIS->count = c_2;
}

RogueCmdLabel_List* RogueCmdLabel_List__reserve__Int32( RogueCmdLabel_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdLabel[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdLabel_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdLabel_List*)(THIS);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_CmdLabel___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueString* RogueTable_String_CmdLabel___to_String( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_CmdLabel___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_CmdLabel___type_name( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[784]);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init__Int32( RogueClassTable_String_CmdLabel_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_CmdLabel__List__init__Int32_TableEntry_String_CmdLabel_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_CmdLabel__List*,ROGUE_CREATE_OBJECT(TableEntry_String_CmdLabel__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_CmdLabel_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

void RogueTable_String_CmdLabel___clear( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.clear()", "Table.rogue", 32 );
  __trace.line = 33;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_CmdLabel__List*,_auto_2143_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2143_0->count;++i_1)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
    }
  }
  __trace.filename = "Table.rogue";
  __trace.line = 34;
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueLogical RogueTable_String_CmdLabel___contains__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.contains(String)", "Table.rogue", 39 );
  __trace.line = 40;
  return (RogueLogical)(!!(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_CmdLabel_* RogueTable_String_CmdLabel___find__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_2,(((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_CmdLabel_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_CmdLabel_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_CmdLabel_*)(((RogueClassTableEntry_String_CmdLabel_*)(NULL)));
}

RogueClassCmdLabel* RogueTable_String_CmdLabel___get__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_1,(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassCmdLabel*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassCmdLabel*)(default_value_2);
  }
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___set__String_CmdLabel( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0, RogueClassCmdLabel* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.set(String,CmdLabel)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_4,(((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_CmdLabel_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_CmdLabel_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_CmdLabel_*)((RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_CmdLabel_*,ROGUE_CREATE_OBJECT(TableEntry_String_CmdLabel_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueStringBuilder* RogueTable_String_CmdLabel___print_to__StringBuilder( RogueClassTable_String_CmdLabel_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init_object( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,CmdLabel>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueString* RogueMethodTemplate__to_String( RogueClassMethodTemplate* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate.to_String()", "MethodTemplate.rogue", 92 );
  __trace.line = 93;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[236] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[145] )))) ))));
}

RogueString* RogueMethodTemplate__type_name( RogueClassMethodTemplate* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate.type_name()", "MethodTemplate.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[785]);
}

RogueClassMethodTemplate* RogueMethodTemplate__init__Token_Type_String_Logical( RogueClassMethodTemplate* THIS, RogueClassToken* _auto_671_0, RogueClassType* _auto_672_1, RogueString* _auto_673_2, RogueLogical _auto_674_3 )
{
  RogueDebugTrace __trace( "MethodTemplate.init(Token,Type,String,Logical)", "MethodTemplate.rogue", 17 );
  THIS->is_global = _auto_674_3;
  THIS->name = _auto_673_2;
  THIS->type_context = _auto_672_1;
  THIS->t = _auto_671_0;
  __trace.line = 19;
  return (RogueClassMethodTemplate*)(THIS);
}

void RogueMethodTemplate__instantiate__Token_String( RogueClassMethodTemplate* THIS, RogueClassToken* ref_t_0, RogueString* ref_name_1 )
{
  RogueDebugTrace __trace( "MethodTemplate.instantiate(Token,String)", "MethodTemplate.rogue", 19 );
  __trace.line = 20;
  if (THIS->is_instantiating)
  {
    return;
  }
  __trace.line = 21;
  THIS->is_instantiating = true;
  __trace.line = 24;
  if (THIS->is_override)
  {
    __trace.line = 25;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_2154_10,(THIS->type_context->base_types));
      RogueInt32 _auto_2155_11 = (0);
      for (;_auto_2155_11 < _auto_2154_10->count;++_auto_2155_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_12,(((RogueClassType*)(_auto_2154_10->data->objects[_auto_2155_11]))));
        __trace.line = 26;
        if (!!(base_type_12->method_templates))
        {
          __trace.line = 27;
          if (!(((RogueType__has_method_named__String( base_type_12, ref_name_1 )))))
          {
            __trace.line = 28;
            RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(base_type_12->method_templates), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->type_parameters->count), ref_t_0, ref_name_1 );
          }
        }
      }
    }
  }
  __trace.line = 34;
  if (THIS->is_overridden)
  {
    __trace.line = 35;
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_2156_13,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list));
      RogueInt32 _auto_2157_14 = (0);
      for (;_auto_2157_14 < _auto_2156_13->count;++_auto_2157_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_15,(((RogueClassType*)(_auto_2156_13->data->objects[_auto_2157_14]))));
        __trace.line = 36;
        if ((((type_15->organized && !(type_15->organizing)) && ((void*)type_15) != ((void*)THIS->type_context)) && ((RogueType__instance_of__Type( type_15, ROGUE_ARG(THIS->type_context) )))))
        {
          __trace.line = 37;
          if (!!(type_15->method_templates))
          {
            __trace.line = 38;
            if (!(((RogueType__has_method_named__String( type_15, ref_name_1 )))))
            {
              __trace.line = 39;
              RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(type_15->method_templates), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->type_parameters->count), ref_t_0, ref_name_1 );
            }
          }
        }
      }
    }
  }
  __trace.line = 46;
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_2,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ref_t_0, ref_name_1, ROGUE_ARG(((RogueString__from_first__Character( ref_name_1, (RogueCharacter)'<' )))) )))));
  __trace.line = 48;
  RogueParser__read( parser_2 );
  __trace.line = 50;
  ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,specializer_tokens_3,(((RogueToken_List_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List_List*,ROGUE_CREATE_OBJECT(Token_List_List))) )))));
  __trace.line = 51;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 52;
  RogueLogical first_5 = (true);
  __trace.line = 53;
  while ((first_5 || ((RogueParser__consume__TokenType( parser_2, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    __trace.line = 54;
    first_5 = ((RogueLogical)false);
    __trace.line = 55;
    RogueToken_List_List__add__Token_List( specializer_tokens_3, ROGUE_ARG(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))) );
    __trace.line = 56;
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_2, ROGUE_ARG(((RogueStringBuilder__clear( buffer_4 )))), ROGUE_ARG(((RogueToken_List_List__last( specializer_tokens_3 )))) );
  }
  __trace.line = 59;
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Token_List_*,mappings_6,(((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )))));
  __trace.line = 60;
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_2162_16,(THIS->type_parameters));
    RogueInt32 i_17 = (0);
    for (;i_17 < _auto_2162_16->count;++i_17)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,type_param_18,(((RogueClassTypeParameter*)(_auto_2162_16->data->objects[i_17]))));
      __trace.line = 61;
      RogueTable_String_Token_List___set__String_Token_List( mappings_6, ROGUE_ARG(type_param_18->name), ROGUE_ARG(((RogueToken_List*)(specializer_tokens_3->data->objects[i_17]))) );
    }
  }
  __trace.line = 64;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((specializer_tokens_3->count + 10)) )))));
  __trace.line = 65;
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), ROGUE_ARG(THIS->t) )))) );
  __trace.line = 66;
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG((call_ROGUEM141( 15, ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(THIS->t), ref_name_1 ))) );
  __trace.line = 67;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2163_19,(THIS->template_tokens));
    RogueInt32 _auto_2164_20 = (0);
    for (;_auto_2164_20 < _auto_2163_19->count;++_auto_2164_20)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,mt_21,(((RogueClassToken*)(_auto_2163_19->data->objects[_auto_2164_20]))));
      __trace.line = 68;
      if (((void*)mt_21->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        __trace.line = 69;
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,mapping_8,(((RogueTable_String_Token_List___get__String( mappings_6, ROGUE_ARG((call_ROGUEM68( 4, mt_21 ))) )))));
        __trace.line = 70;
        if (!!(mapping_8))
        {
          __trace.line = 72;
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2165_22,(mapping_8));
            RogueInt32 _auto_2166_23 = (0);
            for (;_auto_2166_23 < _auto_2165_22->count;++_auto_2166_23)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_24,(((RogueClassToken*)(_auto_2165_22->data->objects[_auto_2166_23]))));
              __trace.line = 73;
              RogueToken_List__add__Token( tokens_7, specializer_t_24 );
            }
          }
        }
        else
        {
          __trace.line = 76;
          RogueToken_List__add__Token( tokens_7, mt_21 );
        }
      }
      else
      {
        __trace.line = 79;
        RogueToken_List__add__Token( tokens_7, mt_21 );
      }
    }
  }
  __trace.line = 83;
  parser_2 = ((RogueClassParser*)((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), tokens_7, false ))));
  __trace.line = 84;
  parser_2->_this_type = THIS->type_context;
  __trace.line = 85;
  RogueParser__parse_method__Logical_Logical( parser_2, ROGUE_ARG(THIS->is_global), true );
  __trace.line = 86;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(parser_2->this_method));
  __trace.line = 87;
  m_9->source_template = THIS;
  __trace.line = 88;
  RogueMethod__assign_signature( m_9 );
  __trace.line = 90;
  THIS->is_instantiating = false;
}

RogueClassMethodTemplate* RogueMethodTemplate__init_object( RogueClassMethodTemplate* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate.init_object()", "MethodTemplate.rogue", 1 );
  __trace.line = 8;
  THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  __trace.line = 9;
  THIS->template_tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  __trace.line = 1;
  return (RogueClassMethodTemplate*)(THIS);
}

RogueString* RogueCloneArgs__type_name( RogueClassCloneArgs* THIS )
{
  RogueDebugTrace __trace( "CloneArgs.type_name()", "CloneArgs.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[786]);
}

RogueClassCmdLabel* RogueCloneArgs__register_label__CmdLabel( RogueClassCloneArgs* THIS, RogueClassCmdLabel* label_0 )
{
  RogueDebugTrace __trace( "CloneArgs.register_label(CmdLabel)", "CloneArgs.rogue", 3 );
  __trace.line = 4;
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCloneArgs* RogueCloneArgs__init_object( RogueClassCloneArgs* THIS )
{
  RogueDebugTrace __trace( "CloneArgs.init_object()", "CloneArgs.rogue", 1 );
  return (RogueClassCloneArgs*)(THIS);
}

RogueString* RogueCloneMethodArgs__type_name( RogueClassCloneMethodArgs* THIS )
{
  RogueDebugTrace __trace( "CloneMethodArgs.type_name()", "CloneArgs.rogue", 7 );
  return (RogueString*)(Rogue_literal_strings[1151]);
}

RogueClassCmdLabel* RogueCloneMethodArgs__register_label__CmdLabel( RogueClassCloneMethodArgs* THIS, RogueClassCmdLabel* label_0 )
{
  RogueDebugTrace __trace( "CloneMethodArgs.register_label(CmdLabel)", "CloneArgs.rogue", 14 );
  __trace.line = 15;
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->cloned_method->label_list), label_0 );
  __trace.line = 16;
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->cloned_method->label_lookup), ROGUE_ARG(label_0->name), label_0 );
  __trace.line = 17;
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init_object( RogueClassCloneMethodArgs* THIS )
{
  RogueDebugTrace __trace( "CloneMethodArgs.init_object()", "CloneArgs.rogue", 7 );
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init__Method( RogueClassCloneMethodArgs* THIS, RogueClassMethod* _auto_678_0 )
{
  RogueDebugTrace __trace( "CloneMethodArgs.init(Method)", "CloneArgs.rogue", 12 );
  THIS->cloned_method = _auto_678_0;
  __trace.line = 14;
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueString* RogueVisitor__type_name( RogueClassVisitor* THIS )
{
  RogueDebugTrace __trace( "Visitor.type_name()", "Visitor.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[403]);
}

void RogueVisitor__visit__Cmd( RogueClassVisitor* THIS, RogueClassCmd* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(Cmd)", "Visitor.rogue", 3 );
  __trace.line = 4;
  ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM246( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[404] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM98( 6, cmd_0 ))) )))) )))), Rogue_literal_strings[401] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueVisitor__visit__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(Type)", "Visitor.rogue", 6 );
  __trace.line = 7;
  call_ROGUEM247( 78, ROGUE_ARG(THIS), type_0 );
  __trace.line = 8;
  RogueVisitor__dispatch__Type( ROGUE_ARG(THIS), type_0 );
  __trace.line = 9;
  RogueVisitor__on_leave__Type( ROGUE_ARG(THIS), type_0 );
}

void RogueVisitor__visit__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(Method)", "Visitor.rogue", 11 );
  __trace.line = 12;
  call_ROGUEM248( 79, ROGUE_ARG(THIS), m_0 );
  __trace.line = 13;
  RogueVisitor__dispatch__Method( ROGUE_ARG(THIS), m_0 );
  __trace.line = 14;
  RogueVisitor__on_leave__Method( ROGUE_ARG(THIS), m_0 );
}

void RogueVisitor__visit__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdStatementList)", "Visitor.rogue", 16 );
  __trace.line = 17;
  RogueVisitor__on_enter__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  __trace.line = 18;
  RogueVisitor__dispatch__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  __trace.line = 19;
  RogueVisitor__on_leave__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
}

void RogueVisitor__visit__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdArgs)", "Visitor.rogue", 21 );
  __trace.line = 22;
  RogueVisitor__on_enter__CmdArgs( ROGUE_ARG(THIS), args_0 );
  __trace.line = 23;
  RogueVisitor__dispatch__CmdArgs( ROGUE_ARG(THIS), args_0 );
  __trace.line = 24;
  RogueVisitor__on_leave__CmdArgs( ROGUE_ARG(THIS), args_0 );
}

void RogueVisitor__visit__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdStatement)", "Visitor.rogue", 26 );
  __trace.line = 27;
  RogueVisitor__on_enter__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 28;
  RogueVisitor__dispatch__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 29;
  RogueVisitor__on_leave__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAssert)", "Visitor.rogue", 31 );
  __trace.line = 32;
  RogueVisitor__on_enter__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 33;
  RogueVisitor__dispatch__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 34;
  RogueVisitor__on_leave__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdRequire)", "Visitor.rogue", 36 );
  __trace.line = 37;
  RogueVisitor__on_enter__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 38;
  RogueVisitor__dispatch__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 39;
  RogueVisitor__on_leave__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAssign)", "Visitor.rogue", 41 );
  __trace.line = 42;
  RogueVisitor__on_enter__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 43;
  RogueVisitor__dispatch__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 44;
  RogueVisitor__on_leave__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdLocalDeclaration)", "Visitor.rogue", 46 );
  __trace.line = 47;
  RogueVisitor__on_enter__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 48;
  RogueVisitor__dispatch__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 49;
  RogueVisitor__on_leave__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReturn)", "Visitor.rogue", 51 );
  __trace.line = 52;
  RogueVisitor__on_enter__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 53;
  RogueVisitor__dispatch__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 54;
  RogueVisitor__on_leave__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdBlock)", "Visitor.rogue", 56 );
  __trace.line = 57;
  RogueVisitor__on_enter__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 58;
  RogueVisitor__dispatch__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 59;
  RogueVisitor__on_leave__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdIf)", "Visitor.rogue", 61 );
  __trace.line = 62;
  RogueVisitor__on_enter__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 63;
  RogueVisitor__dispatch__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 64;
  RogueVisitor__on_leave__CmdIf( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdSwitch)", "Visitor.rogue", 66 );
  __trace.line = 67;
  RogueVisitor__on_enter__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 68;
  RogueVisitor__dispatch__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 69;
  RogueVisitor__on_leave__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWhich)", "Visitor.rogue", 71 );
  __trace.line = 72;
  RogueVisitor__on_enter__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 73;
  RogueVisitor__dispatch__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 74;
  RogueVisitor__on_leave__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWhichCase)", "Visitor.rogue", 76 );
  __trace.line = 77;
  RogueVisitor__on_enter__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 78;
  RogueVisitor__dispatch__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 79;
  RogueVisitor__on_leave__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdContingent)", "Visitor.rogue", 81 );
  __trace.line = 82;
  RogueVisitor__on_enter__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 83;
  RogueVisitor__dispatch__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 84;
  RogueVisitor__on_leave__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdGenericLoop)", "Visitor.rogue", 86 );
  __trace.line = 87;
  RogueVisitor__on_enter__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 88;
  RogueVisitor__dispatch__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 89;
  RogueVisitor__on_leave__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdElementAccess)", "Visitor.rogue", 91 );
  __trace.line = 92;
  RogueVisitor__on_enter__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 93;
  RogueVisitor__dispatch__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 94;
  RogueVisitor__on_leave__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdEnsure)", "Visitor.rogue", 96 );
  __trace.line = 97;
  RogueVisitor__on_enter__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 98;
  RogueVisitor__dispatch__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 99;
  RogueVisitor__on_leave__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdForEach)", "Visitor.rogue", 101 );
  __trace.line = 102;
  RogueVisitor__on_enter__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 103;
  RogueVisitor__dispatch__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 104;
  RogueVisitor__on_leave__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdFormattedString)", "Visitor.rogue", 106 );
  __trace.line = 107;
  RogueVisitor__on_enter__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 108;
  RogueVisitor__dispatch__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 109;
  RogueVisitor__on_leave__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdTry)", "Visitor.rogue", 111 );
  __trace.line = 112;
  RogueVisitor__on_enter__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 113;
  RogueVisitor__dispatch__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 114;
  RogueVisitor__on_leave__CmdTry( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCatch)", "Visitor.rogue", 116 );
  __trace.line = 117;
  RogueVisitor__on_enter__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 118;
  RogueVisitor__dispatch__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 119;
  RogueVisitor__on_leave__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdThrow)", "Visitor.rogue", 121 );
  __trace.line = 122;
  RogueVisitor__on_enter__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 123;
  RogueVisitor__dispatch__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 124;
  RogueVisitor__on_leave__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdEscape)", "Visitor.rogue", 126 );
  __trace.line = 127;
  RogueVisitor__on_enter__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 128;
  RogueVisitor__dispatch__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 129;
  RogueVisitor__on_leave__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdNextIteration)", "Visitor.rogue", 131 );
  __trace.line = 132;
  RogueVisitor__on_enter__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 133;
  RogueVisitor__dispatch__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 134;
  RogueVisitor__on_leave__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdNecessary)", "Visitor.rogue", 136 );
  __trace.line = 137;
  RogueVisitor__on_enter__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 138;
  RogueVisitor__dispatch__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 139;
  RogueVisitor__on_leave__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdSufficient)", "Visitor.rogue", 141 );
  __trace.line = 142;
  RogueVisitor__on_enter__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 143;
  RogueVisitor__dispatch__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 144;
  RogueVisitor__on_leave__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdLiteral)", "Visitor.rogue", 146 );
  __trace.line = 147;
  RogueVisitor__on_enter__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 148;
  RogueVisitor__dispatch__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 149;
  RogueVisitor__on_leave__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdLiteralString)", "Visitor.rogue", 151 );
  __trace.line = 152;
  call_ROGUEM249( 110, ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 153;
  RogueVisitor__dispatch__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 154;
  RogueVisitor__on_leave__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAccess)", "Visitor.rogue", 156 );
  __trace.line = 157;
  RogueVisitor__on_enter__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 158;
  RogueVisitor__dispatch__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 159;
  RogueVisitor__on_leave__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCreateObject)", "Visitor.rogue", 161 );
  __trace.line = 162;
  RogueVisitor__on_enter__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 163;
  RogueVisitor__dispatch__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 164;
  RogueVisitor__on_leave__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCreateCompound)", "Visitor.rogue", 166 );
  __trace.line = 167;
  RogueVisitor__on_enter__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 168;
  RogueVisitor__dispatch__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 169;
  RogueVisitor__on_leave__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdThisContext)", "Visitor.rogue", 171 );
  __trace.line = 172;
  call_ROGUEM250( 134, ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 173;
  RogueVisitor__dispatch__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 174;
  RogueVisitor__on_leave__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadSingleton)", "Visitor.rogue", 176 );
  __trace.line = 177;
  RogueVisitor__on_enter__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 178;
  RogueVisitor__dispatch__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 179;
  RogueVisitor__on_leave__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWriteSingleton)", "Visitor.rogue", 181 );
  __trace.line = 182;
  RogueVisitor__on_enter__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 183;
  RogueVisitor__dispatch__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 184;
  RogueVisitor__on_leave__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadLocal)", "Visitor.rogue", 186 );
  __trace.line = 187;
  RogueVisitor__on_enter__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 188;
  RogueVisitor__dispatch__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 189;
  RogueVisitor__on_leave__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWriteLocal)", "Visitor.rogue", 191 );
  __trace.line = 192;
  RogueVisitor__on_enter__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 193;
  RogueVisitor__dispatch__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 194;
  RogueVisitor__on_leave__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadGlobal)", "Visitor.rogue", 196 );
  __trace.line = 197;
  RogueVisitor__on_enter__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 198;
  RogueVisitor__dispatch__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 199;
  RogueVisitor__on_leave__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWriteGlobal)", "Visitor.rogue", 201 );
  __trace.line = 202;
  RogueVisitor__on_enter__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 203;
  RogueVisitor__dispatch__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 204;
  RogueVisitor__on_leave__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadProperty)", "Visitor.rogue", 206 );
  __trace.line = 207;
  RogueVisitor__on_enter__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 208;
  RogueVisitor__dispatch__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 209;
  RogueVisitor__on_leave__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWriteProperty)", "Visitor.rogue", 211 );
  __trace.line = 212;
  RogueVisitor__on_enter__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 213;
  RogueVisitor__dispatch__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 214;
  RogueVisitor__on_leave__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCall)", "Visitor.rogue", 216 );
  __trace.line = 217;
  RogueVisitor__on_enter__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 218;
  RogueVisitor__dispatch__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 219;
  RogueVisitor__on_leave__CmdCall( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCallDynamicMethod)", "Visitor.rogue", 221 );
  __trace.line = 222;
  RogueVisitor__on_enter__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 223;
  RogueVisitor__dispatch__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 224;
  call_ROGUEM251( 161, ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCallPriorMethod)", "Visitor.rogue", 226 );
  __trace.line = 227;
  RogueVisitor__on_enter__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 228;
  RogueVisitor__dispatch__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 229;
  RogueVisitor__on_leave__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdRange)", "Visitor.rogue", 231 );
  __trace.line = 232;
  RogueVisitor__on_enter__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 233;
  RogueVisitor__dispatch__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 234;
  RogueVisitor__on_leave__CmdRange( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdUnary)", "Visitor.rogue", 236 );
  __trace.line = 237;
  RogueVisitor__on_enter__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 238;
  RogueVisitor__dispatch__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 239;
  RogueVisitor__on_leave__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdBinary)", "Visitor.rogue", 241 );
  __trace.line = 242;
  RogueVisitor__on_enter__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 243;
  RogueVisitor__dispatch__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 244;
  RogueVisitor__on_leave__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAdjustLocal)", "Visitor.rogue", 246 );
  __trace.line = 247;
  RogueVisitor__on_enter__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 248;
  RogueVisitor__dispatch__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 249;
  RogueVisitor__on_leave__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAdjustProperty)", "Visitor.rogue", 251 );
  __trace.line = 252;
  RogueVisitor__on_enter__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 253;
  RogueVisitor__dispatch__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 254;
  RogueVisitor__on_leave__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdAdjustGlobal)", "Visitor.rogue", 256 );
  __trace.line = 257;
  RogueVisitor__on_enter__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 258;
  RogueVisitor__dispatch__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 259;
  RogueVisitor__on_leave__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdModifyAndAssignLocal)", "Visitor.rogue", 261 );
  __trace.line = 262;
  RogueVisitor__on_enter__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 263;
  RogueVisitor__dispatch__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 264;
  RogueVisitor__on_leave__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdModifyAndAssignGlobal)", "Visitor.rogue", 266 );
  __trace.line = 267;
  RogueVisitor__on_enter__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 268;
  RogueVisitor__dispatch__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 269;
  RogueVisitor__on_leave__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdModifyAndAssignProperty)", "Visitor.rogue", 271 );
  __trace.line = 272;
  RogueVisitor__on_enter__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 273;
  RogueVisitor__dispatch__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 274;
  RogueVisitor__on_leave__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdCreateArray)", "Visitor.rogue", 276 );
  __trace.line = 277;
  RogueVisitor__on_enter__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 278;
  RogueVisitor__dispatch__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 279;
  RogueVisitor__on_leave__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadArrayElement)", "Visitor.rogue", 281 );
  __trace.line = 282;
  RogueVisitor__on_enter__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 283;
  RogueVisitor__dispatch__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 284;
  RogueVisitor__on_leave__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdReadArrayCount)", "Visitor.rogue", 286 );
  __trace.line = 287;
  RogueVisitor__on_enter__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 288;
  RogueVisitor__dispatch__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 289;
  RogueVisitor__on_leave__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdWriteArrayElement)", "Visitor.rogue", 291 );
  __trace.line = 292;
  RogueVisitor__on_enter__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 293;
  RogueVisitor__dispatch__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 294;
  RogueVisitor__on_leave__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdTypeOperator)", "Visitor.rogue", 296 );
  __trace.line = 297;
  RogueVisitor__on_enter__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 298;
  RogueVisitor__dispatch__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 299;
  RogueVisitor__on_leave__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdTaskControl)", "Visitor.rogue", 301 );
  __trace.line = 302;
  RogueVisitor__on_enter__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 303;
  RogueVisitor__dispatch__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 304;
  RogueVisitor__on_leave__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdTrace)", "Visitor.rogue", 311 );
  __trace.line = 312;
  RogueVisitor__on_enter__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 313;
  RogueVisitor__dispatch__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 314;
  RogueVisitor__on_leave__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdLabel)", "Visitor.rogue", 316 );
  __trace.line = 317;
  RogueVisitor__on_enter__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 318;
  RogueVisitor__dispatch__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 319;
  RogueVisitor__on_leave__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdInlineNative)", "Visitor.rogue", 321 );
  __trace.line = 322;
  RogueVisitor__on_enter__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 323;
  RogueVisitor__dispatch__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 324;
  RogueVisitor__on_leave__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdMakeRequisite)", "Visitor.rogue", 326 );
  __trace.line = 327;
  RogueVisitor__on_enter__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 328;
  RogueVisitor__dispatch__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 329;
  RogueVisitor__on_leave__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdNoAction)", "Visitor.rogue", 331 );
  __trace.line = 332;
  RogueVisitor__on_enter__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 333;
  RogueVisitor__dispatch__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 334;
  RogueVisitor__on_leave__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdSelect)", "Visitor.rogue", 336 );
  __trace.line = 337;
  RogueVisitor__on_enter__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 338;
  RogueVisitor__dispatch__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 339;
  RogueVisitor__on_leave__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdSelectCase)", "Visitor.rogue", 341 );
  __trace.line = 342;
  RogueVisitor__on_enter__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 343;
  RogueVisitor__dispatch__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 344;
  RogueVisitor__on_leave__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__visit__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.visit(CmdNamedArg)", "Visitor.rogue", 346 );
  __trace.line = 347;
  RogueVisitor__on_enter__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 348;
  RogueVisitor__dispatch__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  __trace.line = 349;
  RogueVisitor__on_leave__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
}

void RogueVisitor__on_enter__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(Type)", "Visitor.rogue", 355 );
}

void RogueVisitor__on_enter__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(Method)", "Visitor.rogue", 356 );
}

void RogueVisitor__on_enter__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdStatementList)", "Visitor.rogue", 357 );
}

void RogueVisitor__on_enter__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdArgs)", "Visitor.rogue", 358 );
}

void RogueVisitor__on_enter__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAccess)", "Visitor.rogue", 359 );
}

void RogueVisitor__on_enter__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAdjustGlobal)", "Visitor.rogue", 360 );
}

void RogueVisitor__on_enter__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAdjustLocal)", "Visitor.rogue", 361 );
}

void RogueVisitor__on_enter__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAdjustProperty)", "Visitor.rogue", 362 );
}

void RogueVisitor__on_enter__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAssert)", "Visitor.rogue", 363 );
}

void RogueVisitor__on_enter__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdAssign)", "Visitor.rogue", 364 );
}

void RogueVisitor__on_enter__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdBinary)", "Visitor.rogue", 365 );
}

void RogueVisitor__on_enter__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdBlock)", "Visitor.rogue", 366 );
}

void RogueVisitor__on_enter__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCall)", "Visitor.rogue", 367 );
}

void RogueVisitor__on_enter__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCallDynamicMethod)", "Visitor.rogue", 368 );
}

void RogueVisitor__on_enter__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCallPriorMethod)", "Visitor.rogue", 369 );
}

void RogueVisitor__on_enter__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCatch)", "Visitor.rogue", 370 );
}

void RogueVisitor__on_enter__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdContingent)", "Visitor.rogue", 371 );
}

void RogueVisitor__on_enter__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCreateArray)", "Visitor.rogue", 372 );
}

void RogueVisitor__on_enter__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCreateCompound)", "Visitor.rogue", 373 );
}

void RogueVisitor__on_enter__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdCreateObject)", "Visitor.rogue", 374 );
}

void RogueVisitor__on_enter__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdElementAccess)", "Visitor.rogue", 376 );
}

void RogueVisitor__on_enter__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdEnsure)", "Visitor.rogue", 377 );
}

void RogueVisitor__on_enter__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdEscape)", "Visitor.rogue", 378 );
}

void RogueVisitor__on_enter__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdNamedArg)", "Visitor.rogue", 379 );
}

void RogueVisitor__on_enter__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdForEach)", "Visitor.rogue", 380 );
}

void RogueVisitor__on_enter__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdFormattedString)", "Visitor.rogue", 381 );
}

void RogueVisitor__on_enter__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdGenericLoop)", "Visitor.rogue", 382 );
}

void RogueVisitor__on_enter__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdIf)", "Visitor.rogue", 383 );
}

void RogueVisitor__on_enter__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdInlineNative)", "Visitor.rogue", 384 );
}

void RogueVisitor__on_enter__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdLabel)", "Visitor.rogue", 385 );
}

void RogueVisitor__on_enter__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdLiteral)", "Visitor.rogue", 386 );
}

void RogueVisitor__on_enter__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdLiteralString)", "Visitor.rogue", 387 );
}

void RogueVisitor__on_enter__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdLocalDeclaration)", "Visitor.rogue", 388 );
}

void RogueVisitor__on_enter__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdMakeRequisite)", "Visitor.rogue", 389 );
}

void RogueVisitor__on_enter__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdModifyAndAssignGlobal)", "Visitor.rogue", 390 );
}

void RogueVisitor__on_enter__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdModifyAndAssignLocal)", "Visitor.rogue", 391 );
}

void RogueVisitor__on_enter__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdModifyAndAssignProperty)", "Visitor.rogue", 392 );
}

void RogueVisitor__on_enter__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdNecessary)", "Visitor.rogue", 393 );
}

void RogueVisitor__on_enter__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdNextIteration)", "Visitor.rogue", 394 );
}

void RogueVisitor__on_enter__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdNoAction)", "Visitor.rogue", 395 );
}

void RogueVisitor__on_enter__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdRange)", "Visitor.rogue", 396 );
}

void RogueVisitor__on_enter__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadArrayCount)", "Visitor.rogue", 397 );
}

void RogueVisitor__on_enter__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadArrayElement)", "Visitor.rogue", 398 );
}

void RogueVisitor__on_enter__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadGlobal)", "Visitor.rogue", 399 );
}

void RogueVisitor__on_enter__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadLocal)", "Visitor.rogue", 400 );
}

void RogueVisitor__on_enter__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadProperty)", "Visitor.rogue", 401 );
}

void RogueVisitor__on_enter__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReadSingleton)", "Visitor.rogue", 402 );
}

void RogueVisitor__on_enter__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdRequire)", "Visitor.rogue", 403 );
}

void RogueVisitor__on_enter__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdReturn)", "Visitor.rogue", 404 );
}

void RogueVisitor__on_enter__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdSelect)", "Visitor.rogue", 405 );
}

void RogueVisitor__on_enter__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdSelectCase)", "Visitor.rogue", 406 );
}

void RogueVisitor__on_enter__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdStatement)", "Visitor.rogue", 407 );
}

void RogueVisitor__on_enter__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdSufficient)", "Visitor.rogue", 408 );
}

void RogueVisitor__on_enter__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdSwitch)", "Visitor.rogue", 409 );
}

void RogueVisitor__on_enter__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdTaskControl)", "Visitor.rogue", 410 );
}

void RogueVisitor__on_enter__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdThisContext)", "Visitor.rogue", 411 );
}

void RogueVisitor__on_enter__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdThrow)", "Visitor.rogue", 412 );
}

void RogueVisitor__on_enter__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdTrace)", "Visitor.rogue", 413 );
}

void RogueVisitor__on_enter__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdTry)", "Visitor.rogue", 414 );
}

void RogueVisitor__on_enter__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdTypeOperator)", "Visitor.rogue", 415 );
}

void RogueVisitor__on_enter__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdUnary)", "Visitor.rogue", 416 );
}

void RogueVisitor__on_enter__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWhich)", "Visitor.rogue", 417 );
}

void RogueVisitor__on_enter__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWhichCase)", "Visitor.rogue", 418 );
}

void RogueVisitor__on_enter__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWriteArrayElement)", "Visitor.rogue", 419 );
}

void RogueVisitor__on_enter__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWriteGlobal)", "Visitor.rogue", 420 );
}

void RogueVisitor__on_enter__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWriteLocal)", "Visitor.rogue", 421 );
}

void RogueVisitor__on_enter__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWriteProperty)", "Visitor.rogue", 422 );
}

void RogueVisitor__on_enter__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_enter(CmdWriteSingleton)", "Visitor.rogue", 423 );
}

void RogueVisitor__on_leave__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(Type)", "Visitor.rogue", 428 );
}

void RogueVisitor__on_leave__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(Method)", "Visitor.rogue", 429 );
}

void RogueVisitor__on_leave__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdStatementList)", "Visitor.rogue", 430 );
}

void RogueVisitor__on_leave__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdArgs)", "Visitor.rogue", 431 );
}

void RogueVisitor__on_leave__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAccess)", "Visitor.rogue", 433 );
}

void RogueVisitor__on_leave__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAdjustGlobal)", "Visitor.rogue", 434 );
}

void RogueVisitor__on_leave__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAdjustLocal)", "Visitor.rogue", 435 );
}

void RogueVisitor__on_leave__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAdjustProperty)", "Visitor.rogue", 436 );
}

void RogueVisitor__on_leave__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAssert)", "Visitor.rogue", 437 );
}

void RogueVisitor__on_leave__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdAssign)", "Visitor.rogue", 438 );
}

void RogueVisitor__on_leave__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdBinary)", "Visitor.rogue", 439 );
}

void RogueVisitor__on_leave__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdBlock)", "Visitor.rogue", 440 );
}

void RogueVisitor__on_leave__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCall)", "Visitor.rogue", 441 );
}

void RogueVisitor__on_leave__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCallDynamicMethod)", "Visitor.rogue", 442 );
}

void RogueVisitor__on_leave__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCallPriorMethod)", "Visitor.rogue", 443 );
}

void RogueVisitor__on_leave__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCatch)", "Visitor.rogue", 444 );
}

void RogueVisitor__on_leave__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdContingent)", "Visitor.rogue", 445 );
}

void RogueVisitor__on_leave__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCreateArray)", "Visitor.rogue", 446 );
}

void RogueVisitor__on_leave__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCreateCompound)", "Visitor.rogue", 447 );
}

void RogueVisitor__on_leave__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdCreateObject)", "Visitor.rogue", 448 );
}

void RogueVisitor__on_leave__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdElementAccess)", "Visitor.rogue", 450 );
}

void RogueVisitor__on_leave__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdEnsure)", "Visitor.rogue", 451 );
}

void RogueVisitor__on_leave__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdEscape)", "Visitor.rogue", 452 );
}

void RogueVisitor__on_leave__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdNamedArg)", "Visitor.rogue", 453 );
}

void RogueVisitor__on_leave__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdForEach)", "Visitor.rogue", 454 );
}

void RogueVisitor__on_leave__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdFormattedString)", "Visitor.rogue", 455 );
}

void RogueVisitor__on_leave__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdGenericLoop)", "Visitor.rogue", 456 );
}

void RogueVisitor__on_leave__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdIf)", "Visitor.rogue", 457 );
}

void RogueVisitor__on_leave__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdInlineNative)", "Visitor.rogue", 458 );
}

void RogueVisitor__on_leave__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdLabel)", "Visitor.rogue", 459 );
}

void RogueVisitor__on_leave__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdLiteral)", "Visitor.rogue", 460 );
}

void RogueVisitor__on_leave__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdLiteralString)", "Visitor.rogue", 461 );
}

void RogueVisitor__on_leave__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdLocalDeclaration)", "Visitor.rogue", 462 );
}

void RogueVisitor__on_leave__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdMakeRequisite)", "Visitor.rogue", 463 );
}

void RogueVisitor__on_leave__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdModifyAndAssignGlobal)", "Visitor.rogue", 464 );
}

void RogueVisitor__on_leave__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdModifyAndAssignLocal)", "Visitor.rogue", 465 );
}

void RogueVisitor__on_leave__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdModifyAndAssignProperty)", "Visitor.rogue", 466 );
}

void RogueVisitor__on_leave__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdNecessary)", "Visitor.rogue", 467 );
}

void RogueVisitor__on_leave__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdNextIteration)", "Visitor.rogue", 468 );
}

void RogueVisitor__on_leave__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdNoAction)", "Visitor.rogue", 469 );
}

void RogueVisitor__on_leave__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdRange)", "Visitor.rogue", 470 );
}

void RogueVisitor__on_leave__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadArrayCount)", "Visitor.rogue", 471 );
}

void RogueVisitor__on_leave__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadArrayElement)", "Visitor.rogue", 472 );
}

void RogueVisitor__on_leave__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadGlobal)", "Visitor.rogue", 473 );
}

void RogueVisitor__on_leave__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadLocal)", "Visitor.rogue", 474 );
}

void RogueVisitor__on_leave__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadProperty)", "Visitor.rogue", 475 );
}

void RogueVisitor__on_leave__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReadSingleton)", "Visitor.rogue", 476 );
}

void RogueVisitor__on_leave__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdRequire)", "Visitor.rogue", 477 );
}

void RogueVisitor__on_leave__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdReturn)", "Visitor.rogue", 478 );
}

void RogueVisitor__on_leave__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdSelect)", "Visitor.rogue", 479 );
}

void RogueVisitor__on_leave__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdSelectCase)", "Visitor.rogue", 480 );
}

void RogueVisitor__on_leave__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdStatement)", "Visitor.rogue", 481 );
}

void RogueVisitor__on_leave__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdSufficient)", "Visitor.rogue", 482 );
}

void RogueVisitor__on_leave__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdSwitch)", "Visitor.rogue", 483 );
}

void RogueVisitor__on_leave__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdTaskControl)", "Visitor.rogue", 484 );
}

void RogueVisitor__on_leave__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdThisContext)", "Visitor.rogue", 485 );
}

void RogueVisitor__on_leave__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdThrow)", "Visitor.rogue", 486 );
}

void RogueVisitor__on_leave__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdTrace)", "Visitor.rogue", 487 );
}

void RogueVisitor__on_leave__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdTry)", "Visitor.rogue", 488 );
}

void RogueVisitor__on_leave__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdTypeOperator)", "Visitor.rogue", 489 );
}

void RogueVisitor__on_leave__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdUnary)", "Visitor.rogue", 490 );
}

void RogueVisitor__on_leave__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWhich)", "Visitor.rogue", 491 );
}

void RogueVisitor__on_leave__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWhichCase)", "Visitor.rogue", 492 );
}

void RogueVisitor__on_leave__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWriteArrayElement)", "Visitor.rogue", 493 );
}

void RogueVisitor__on_leave__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWriteGlobal)", "Visitor.rogue", 494 );
}

void RogueVisitor__on_leave__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWriteLocal)", "Visitor.rogue", 495 );
}

void RogueVisitor__on_leave__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWriteProperty)", "Visitor.rogue", 496 );
}

void RogueVisitor__on_leave__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.on_leave(CmdWriteSingleton)", "Visitor.rogue", 497 );
}

void RogueVisitor__dispatch__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(Type)", "Visitor.rogue", 502 );
}

void RogueVisitor__dispatch__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(Method)", "Visitor.rogue", 505 );
}

void RogueVisitor__dispatch__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdStatementList)", "Visitor.rogue", 508 );
  __trace.line = 509;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2167_1,(statements_0));
    RogueInt32 _auto_2168_2 = (0);
    for (;_auto_2168_2 < _auto_2167_1->count;++_auto_2168_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_3,(((RogueClassCmd*)(_auto_2167_1->data->objects[_auto_2168_2]))));
      __trace.line = 510;
      call_ROGUEM100( 16, statement_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdArgs)", "Visitor.rogue", 513 );
  __trace.line = 514;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2169_1,(args_0));
    RogueInt32 _auto_2170_2 = (0);
    for (;_auto_2170_2 < _auto_2169_1->count;++_auto_2170_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_2169_1->data->objects[_auto_2170_2]))));
      call_ROGUEM100( 16, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdStatement)", "Visitor.rogue", 516 );
}

void RogueVisitor__dispatch__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAssert)", "Visitor.rogue", 519 );
  __trace.line = 520;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  __trace.line = 521;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) );
  __trace.line = 522;
  if (!!(cmd_0->error))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdRequire)", "Visitor.rogue", 524 );
  __trace.line = 525;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  __trace.line = 526;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) );
  __trace.line = 527;
  if (!!(cmd_0->error))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAssign)", "Visitor.rogue", 529 );
  __trace.line = 530;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  __trace.line = 531;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->target), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdLocalDeclaration)", "Visitor.rogue", 533 );
  __trace.line = 534;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 535;
  if (!!(cmd_0->local_info->initial_value))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->local_info->initial_value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReturn)", "Visitor.rogue", 537 );
  __trace.line = 538;
  if (!!(cmd_0->value))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdBlock)", "Visitor.rogue", 540 );
  __trace.line = 541;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdIf)", "Visitor.rogue", 543 );
  __trace.line = 544;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  __trace.line = 545;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  __trace.line = 546;
  if (!!(cmd_0->else_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->else_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdSwitch)", "Visitor.rogue", 548 );
  __trace.line = 549;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  __trace.line = 550;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2171_1,(cmd_0->cases));
    RogueInt32 _auto_2172_2 = (0);
    for (;_auto_2172_2 < _auto_2171_1->count;++_auto_2172_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_2171_1->data->objects[_auto_2172_2]))));
      call_ROGUEM310( 16, c_3, ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 551;
  if (!!(cmd_0->case_others))
  {
    call_ROGUEM310( 16, ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWhich)", "Visitor.rogue", 553 );
  __trace.line = 554;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  __trace.line = 555;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2173_1,(cmd_0->cases));
    RogueInt32 _auto_2174_2 = (0);
    for (;_auto_2174_2 < _auto_2173_1->count;++_auto_2174_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_2173_1->data->objects[_auto_2174_2]))));
      call_ROGUEM310( 16, c_3, ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 556;
  if (!!(cmd_0->case_others))
  {
    call_ROGUEM310( 16, ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWhichCase)", "Visitor.rogue", 558 );
  __trace.line = 559;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2175_1,(cmd_0->conditions));
    RogueInt32 _auto_2176_2 = (0);
    for (;_auto_2176_2 < _auto_2175_1->count;++_auto_2176_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_2175_1->data->objects[_auto_2176_2]))));
      call_ROGUEM100( 16, condition_3, ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 560;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdContingent)", "Visitor.rogue", 562 );
  __trace.line = 563;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  __trace.line = 564;
  if (!!(cmd_0->satisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->satisfied_statements), ROGUE_ARG(THIS) );
  }
  __trace.line = 565;
  if (!!(cmd_0->unsatisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->unsatisfied_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdGenericLoop)", "Visitor.rogue", 567 );
  __trace.line = 568;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  __trace.line = 569;
  if (!!(cmd_0->control_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->control_statements), ROGUE_ARG(THIS) );
  }
  __trace.line = 570;
  if (!!(cmd_0->condition))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
  __trace.line = 571;
  if (!!(cmd_0->upkeep))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->upkeep), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdForEach)", "Visitor.rogue", 573 );
  __trace.line = 574;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  __trace.line = 575;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->collection), ROGUE_ARG(THIS) );
  __trace.line = 576;
  if (!!(cmd_0->step_cmd))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->step_cmd), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdFormattedString)", "Visitor.rogue", 578 );
  __trace.line = 579;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2177_1,(cmd_0->args));
    RogueInt32 _auto_2178_2 = (0);
    for (;_auto_2178_2 < _auto_2177_1->count;++_auto_2178_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_2177_1->data->objects[_auto_2178_2]))));
      call_ROGUEM100( 16, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdTry)", "Visitor.rogue", 581 );
  __trace.line = 582;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  __trace.line = 583;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_2179_1,(cmd_0->catches));
    RogueInt32 _auto_2180_2 = (0);
    for (;_auto_2180_2 < _auto_2179_1->count;++_auto_2180_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_2179_1->data->objects[_auto_2180_2]))));
      call_ROGUEM359( 16, c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCatch)", "Visitor.rogue", 585 );
  __trace.line = 586;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdThrow)", "Visitor.rogue", 588 );
  __trace.line = 589;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdElementAccess)", "Visitor.rogue", 591 );
  __trace.line = 592;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
  __trace.line = 593;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdEnsure)", "Visitor.rogue", 595 );
  __trace.line = 596;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 597;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->cmd_read), ROGUE_ARG(THIS) );
  __trace.line = 598;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->cmd_write), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdEscape)", "Visitor.rogue", 600 );
}

void RogueVisitor__dispatch__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdNextIteration)", "Visitor.rogue", 603 );
}

void RogueVisitor__dispatch__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdNecessary)", "Visitor.rogue", 606 );
  __trace.line = 607;
  if (!!(cmd_0->condition))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdSufficient)", "Visitor.rogue", 609 );
  __trace.line = 610;
  if (!!(cmd_0->condition))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdLiteral)", "Visitor.rogue", 612 );
}

void RogueVisitor__dispatch__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdLiteralString)", "Visitor.rogue", 615 );
}

void RogueVisitor__dispatch__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAccess)", "Visitor.rogue", 617 );
  __trace.line = 618;
  if (!!(cmd_0->context))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  __trace.line = 619;
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  __trace.line = 620;
  if (!!(cmd_0->named_args))
  {
    __trace.line = 621;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2181_1,(cmd_0->named_args));
      RogueInt32 _auto_2182_2 = (0);
      for (;_auto_2182_2 < _auto_2181_1->count;++_auto_2182_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_2181_1->data->objects[_auto_2182_2]))));
        call_ROGUEM116( 16, arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCreateObject)", "Visitor.rogue", 624 );
  __trace.line = 625;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCreateCompound)", "Visitor.rogue", 627 );
  __trace.line = 628;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  __trace.line = 629;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2183_1,(cmd_0->args));
    RogueInt32 _auto_2184_2 = (0);
    for (;_auto_2184_2 < _auto_2183_1->count;++_auto_2184_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_2183_1->data->objects[_auto_2184_2]))));
      call_ROGUEM100( 16, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdThisContext)", "Visitor.rogue", 631 );
}

void RogueVisitor__dispatch__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadSingleton)", "Visitor.rogue", 634 );
  __trace.line = 635;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWriteSingleton)", "Visitor.rogue", 637 );
  __trace.line = 638;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  __trace.line = 639;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadLocal)", "Visitor.rogue", 641 );
  __trace.line = 642;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWriteLocal)", "Visitor.rogue", 644 );
  __trace.line = 645;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 646;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadGlobal)", "Visitor.rogue", 648 );
  __trace.line = 649;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 650;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWriteGlobal)", "Visitor.rogue", 652 );
  __trace.line = 653;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 654;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 655;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadProperty)", "Visitor.rogue", 657 );
  __trace.line = 658;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  __trace.line = 659;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 660;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWriteProperty)", "Visitor.rogue", 662 );
  __trace.line = 663;
  if (!!(cmd_0->context))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  __trace.line = 664;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 665;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 666;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCall)", "Visitor.rogue", 668 );
  __trace.line = 669;
  if (!!(cmd_0->context))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  __trace.line = 670;
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  __trace.line = 671;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2185_1,(cmd_0->args));
    RogueInt32 _auto_2186_2 = (0);
    for (;_auto_2186_2 < _auto_2185_1->count;++_auto_2186_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_2185_1->data->objects[_auto_2186_2]))));
      call_ROGUEM100( 16, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCallDynamicMethod)", "Visitor.rogue", 673 );
  __trace.line = 674;
  if (!!(cmd_0->context))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  }
  __trace.line = 675;
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  __trace.line = 676;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2187_1,(cmd_0->args));
    RogueInt32 _auto_2188_2 = (0);
    for (;_auto_2188_2 < _auto_2187_1->count;++_auto_2188_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_2187_1->data->objects[_auto_2188_2]))));
      call_ROGUEM100( 16, arg_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCallPriorMethod)", "Visitor.rogue", 678 );
  __trace.line = 679;
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  __trace.line = 680;
  if (!!(cmd_0->named_args))
  {
    __trace.line = 681;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2189_1,(cmd_0->named_args));
      RogueInt32 _auto_2190_2 = (0);
      for (;_auto_2190_2 < _auto_2189_1->count;++_auto_2190_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_2189_1->data->objects[_auto_2190_2]))));
        call_ROGUEM116( 16, arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdRange)", "Visitor.rogue", 684 );
  __trace.line = 685;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->first), ROGUE_ARG(THIS) );
  __trace.line = 686;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->last), ROGUE_ARG(THIS) );
  __trace.line = 687;
  if (!!(cmd_0->step_size))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->step_size), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdUnary)", "Visitor.rogue", 689 );
  __trace.line = 690;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdBinary)", "Visitor.rogue", 692 );
  __trace.line = 693;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->left), ROGUE_ARG(THIS) );
  __trace.line = 694;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->right), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAdjustLocal)", "Visitor.rogue", 696 );
  __trace.line = 697;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAdjustProperty)", "Visitor.rogue", 699 );
  __trace.line = 700;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  __trace.line = 701;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 702;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdAdjustGlobal)", "Visitor.rogue", 704 );
  __trace.line = 705;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 706;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdModifyAndAssignLocal)", "Visitor.rogue", 708 );
  __trace.line = 709;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 710;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdModifyAndAssignGlobal)", "Visitor.rogue", 712 );
  __trace.line = 713;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 714;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 715;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdModifyAndAssignProperty)", "Visitor.rogue", 717 );
  __trace.line = 718;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  __trace.line = 719;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  __trace.line = 720;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdCreateArray)", "Visitor.rogue", 722 );
  __trace.line = 723;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  __trace.line = 724;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->count_cmd), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadArrayElement)", "Visitor.rogue", 726 );
  __trace.line = 727;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  __trace.line = 728;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  __trace.line = 729;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdReadArrayCount)", "Visitor.rogue", 731 );
  __trace.line = 732;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  __trace.line = 733;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdWriteArrayElement)", "Visitor.rogue", 735 );
  __trace.line = 736;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) );
  __trace.line = 737;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  __trace.line = 738;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  __trace.line = 739;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdTypeOperator)", "Visitor.rogue", 741 );
  __trace.line = 742;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) );
  __trace.line = 743;
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_target_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdTaskControl)", "Visitor.rogue", 745 );
  __trace.line = 746;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_2195_1,(cmd_0->sections));
    RogueInt32 _auto_2196_2 = (0);
    for (;_auto_2196_2 < _auto_2195_1->count;++_auto_2196_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_2195_1->data->objects[_auto_2196_2]))));
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(section_3->statements), ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdTrace)", "Visitor.rogue", 752 );
}

void RogueVisitor__dispatch__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdLabel)", "Visitor.rogue", 755 );
  __trace.line = 756;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdInlineNative)", "Visitor.rogue", 758 );
  __trace.line = 759;
  if (!!(cmd_0->new_value))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdMakeRequisite)", "Visitor.rogue", 761 );
}

void RogueVisitor__dispatch__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdNoAction)", "Visitor.rogue", 763 );
}

void RogueVisitor__dispatch__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdSelect)", "Visitor.rogue", 765 );
  __trace.line = 766;
  if (!!(cmd_0->expression))
  {
    call_ROGUEM100( 16, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) );
  }
  __trace.line = 767;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2197_1,(cmd_0->cases));
    RogueInt32 _auto_2198_2 = (0);
    for (;_auto_2198_2 < _auto_2197_1->count;++_auto_2198_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_3,(((RogueClassCmdSelectCase*)(_auto_2197_1->data->objects[_auto_2198_2]))));
      call_ROGUEM643( 16, c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdSelectCase)", "Visitor.rogue", 769 );
  __trace.line = 770;
  if (!!(cmd_0->conditions))
  {
    __trace.line = 771;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2199_1,(cmd_0->conditions));
      RogueInt32 _auto_2200_2 = (0);
      for (;_auto_2200_2 < _auto_2199_1->count;++_auto_2200_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_3,(((RogueClassCmd*)(_auto_2199_1->data->objects[_auto_2200_2]))));
        call_ROGUEM100( 16, c_3, ROGUE_ARG(THIS) );
      }
    }
  }
  __trace.line = 773;
  call_ROGUEM100( 16, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueDebugTrace __trace( "Visitor.dispatch(CmdNamedArg)", "Visitor.rogue", 775 );
}

RogueClassVisitor* RogueVisitor__init_object( RogueClassVisitor* THIS )
{
  RogueDebugTrace __trace( "Visitor.init_object()", "Visitor.rogue", 1 );
  return (RogueClassVisitor*)(THIS);
}

RogueString* RogueCmdAssert__type_name( RogueClassCmdAssert* THIS )
{
  RogueDebugTrace __trace( "CmdAssert.type_name()", "Cmd.rogue", 4283 );
  return (RogueString*)(Rogue_literal_strings[922]);
}

RogueClassCmdAssert* RogueCmdAssert__clone__CloneArgs( RogueClassCmdAssert* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAssert.clone(CloneArgs)", "Cmd.rogue", 4293 );
  __trace.line = 4294;
  return (RogueClassCmdAssert*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

void RogueCmdAssert__dispatch__Visitor( RogueClassCmdAssert* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAssert.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAssert( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAssert__resolve__Scope( RogueClassCmdAssert* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAssert.resolve(Scope)", "Cmd.rogue", 4296 );
  __trace.line = 4297;
  THIS->condition = (call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ));
  __trace.line = 4298;
  THIS->local_info->_type = (call_ROGUEM90( 28, ROGUE_ARG(THIS->condition) ));
  __trace.line = 4300;
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->message), scope_0 ))) )));
  __trace.line = 4301;
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[977], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  __trace.line = 4303;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAssert__type( RogueClassCmdAssert* THIS )
{
  RogueDebugTrace __trace( "CmdAssert.type()", "Cmd.rogue", 4305 );
  __trace.line = 4306;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdAssert__write_cpp__CPPWriter_Logical( RogueClassCmdAssert* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAssert.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2943 );
  __trace.line = 2944;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[224] );
  __trace.line = 2945;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
  __trace.line = 2946;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
  __trace.line = 2947;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1066] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[216] );
  __trace.line = 2948;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->error), writer_0, false );
  __trace.line = 2949;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdAssert* RogueCmdAssert__init_object( RogueClassCmdAssert* THIS )
{
  RogueDebugTrace __trace( "CmdAssert.init_object()", "Cmd.rogue", 4283 );
  return (RogueClassCmdAssert*)(THIS);
}

RogueClassCmdAssert* RogueCmdAssert__init__Token_Cmd_Cmd_Local( RogueClassCmdAssert* THIS, RogueClassToken* _auto_679_0, RogueClassCmd* _auto_680_1, RogueClassCmd* _auto_681_2, RogueClassLocal* _auto_682_3 )
{
  RogueDebugTrace __trace( "CmdAssert.init(Token,Cmd,Cmd,Local)", "Cmd.rogue", 4291 );
  THIS->local_info = _auto_682_3;
  THIS->message = _auto_681_2;
  THIS->condition = _auto_680_1;
  THIS->t = _auto_679_0;
  __trace.line = 4293;
  return (RogueClassCmdAssert*)(THIS);
}

RogueString* RogueCmdRequire__type_name( RogueClassCmdRequire* THIS )
{
  RogueDebugTrace __trace( "CmdRequire.type_name()", "Cmd.rogue", 4309 );
  return (RogueString*)(Rogue_literal_strings[923]);
}

RogueClassCmdRequire* RogueCmdRequire__clone__CloneArgs( RogueClassCmdRequire* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdRequire.clone(CloneArgs)", "Cmd.rogue", 4319 );
  __trace.line = 4320;
  return (RogueClassCmdRequire*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

void RogueCmdRequire__dispatch__Visitor( RogueClassCmdRequire* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdRequire.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdRequire( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdRequire__resolve__Scope( RogueClassCmdRequire* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdRequire.resolve(Scope)", "Cmd.rogue", 4322 );
  __trace.line = 4323;
  THIS->condition = (call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ));
  __trace.line = 4324;
  THIS->local_info->_type = (call_ROGUEM90( 28, ROGUE_ARG(THIS->condition) ));
  __trace.line = 4326;
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->message), scope_0 ))) )));
  __trace.line = 4327;
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[979], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  __trace.line = 4329;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdRequire__type( RogueClassCmdRequire* THIS )
{
  RogueDebugTrace __trace( "CmdRequire.type()", "Cmd.rogue", 4331 );
  __trace.line = 4332;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdRequire__write_cpp__CPPWriter_Logical( RogueClassCmdRequire* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdRequire.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2955 );
  __trace.line = 2956;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[224] );
  __trace.line = 2957;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
  __trace.line = 2958;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
  __trace.line = 2959;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1066] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[216] );
  __trace.line = 2960;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->error), writer_0, false );
  __trace.line = 2961;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdRequire* RogueCmdRequire__init_object( RogueClassCmdRequire* THIS )
{
  RogueDebugTrace __trace( "CmdRequire.init_object()", "Cmd.rogue", 4309 );
  return (RogueClassCmdRequire*)(THIS);
}

RogueClassCmdRequire* RogueCmdRequire__init__Token_Cmd_Cmd_Local( RogueClassCmdRequire* THIS, RogueClassToken* _auto_683_0, RogueClassCmd* _auto_684_1, RogueClassCmd* _auto_685_2, RogueClassLocal* _auto_686_3 )
{
  RogueDebugTrace __trace( "CmdRequire.init(Token,Cmd,Cmd,Local)", "Cmd.rogue", 4317 );
  THIS->local_info = _auto_686_3;
  THIS->message = _auto_685_2;
  THIS->condition = _auto_684_1;
  THIS->t = _auto_683_0;
  __trace.line = 4319;
  return (RogueClassCmdRequire*)(THIS);
}

RogueString* RogueCmdAssign__type_name( RogueClassCmdAssign* THIS )
{
  RogueDebugTrace __trace( "CmdAssign.type_name()", "Cmd.rogue", 2053 );
  return (RogueString*)(Rogue_literal_strings[924]);
}

RogueClassCmd* RogueCmdAssign__clone__CloneArgs( RogueClassCmdAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAssign.clone(CloneArgs)", "Cmd.rogue", 2061 );
  __trace.line = 2062;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdAssign__dispatch__Visitor( RogueClassCmdAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAssign.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAssign( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAssign__resolve__Scope( RogueClassCmdAssign* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAssign.resolve(Scope)", "Cmd.rogue", 2064 );
  __trace.line = 2065;
  return (RogueClassCmd*)((call_ROGUEM102( 32, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdAssign* RogueCmdAssign__init_object( RogueClassCmdAssign* THIS )
{
  RogueDebugTrace __trace( "CmdAssign.init_object()", "Cmd.rogue", 2053 );
  return (RogueClassCmdAssign*)(THIS);
}

RogueClassCmdAssign* RogueCmdAssign__init__Token_Cmd_Cmd( RogueClassCmdAssign* THIS, RogueClassToken* _auto_687_0, RogueClassCmd* _auto_688_1, RogueClassCmd* _auto_689_2 )
{
  RogueDebugTrace __trace( "CmdAssign.init(Token,Cmd,Cmd)", "Cmd.rogue", 2059 );
  THIS->new_value = _auto_689_2;
  THIS->target = _auto_688_1;
  THIS->t = _auto_687_0;
  __trace.line = 2061;
  return (RogueClassCmdAssign*)(THIS);
}

RogueString* RogueCmdLocalDeclaration__type_name( RogueClassCmdLocalDeclaration* THIS )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.type_name()", "Cmd.rogue", 307 );
  return (RogueString*)(Rogue_literal_strings[1134]);
}

RogueClassCmd* RogueCmdLocalDeclaration__clone__CloneArgs( RogueClassCmdLocalDeclaration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.clone(CloneArgs)", "Cmd.rogue", 315 );
  __trace.line = 316;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 317;
  if (!!(task_args_1))
  {
    __trace.line = 318;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_2,(THIS->local_info->initial_value));
    __trace.line = 319;
    if (!!(new_value_2))
    {
      new_value_2 = ((RogueClassCmd*)(call_ROGUEM99( 10, new_value_2, clone_args_0 )));
    }
    __trace.line = 320;
    return (RogueClassCmd*)(((RogueTaskArgs__replace_write_local__Token_Local_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), new_value_2 ))));
  }
  else
  {
    __trace.line = 322;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->skip_initialization) ))))));
  }
}

void RogueCmdLocalDeclaration__dispatch__Visitor( RogueClassCmdLocalDeclaration* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLocalDeclaration( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdLocalDeclaration__exit_scope__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.exit_scope(Scope)", "Cmd.rogue", 325 );
  __trace.line = 326;
  RogueScope__pop_local( scope_0 );
}

RogueClassCmd* RogueCmdLocalDeclaration__resolve__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.resolve(Scope)", "Cmd.rogue", 328 );
  __trace.line = 329;
  if (!!(THIS->local_info->initial_value))
  {
    __trace.line = 330;
    THIS->local_info->initial_value = (call_ROGUEM81( 31, ROGUE_ARG(THIS->local_info->initial_value), scope_0 ));
    __trace.line = 331;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,initial_value_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->local_info->initial_value) ))));
    __trace.line = 332;
    if (((void*)THIS->local_info->_type) == ((void*)NULL))
    {
      THIS->local_info->_type = initial_value_type_1;
    }
  }
  __trace.line = 335;
  if (((void*)THIS->local_info->_type) == ((void*)NULL))
  {
    __trace.line = 336;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[981] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[982] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[457] )))) )))) ))));
  }
  __trace.line = 339;
  if (!!(THIS->local_info->initial_value))
  {
    __trace.line = 340;
    THIS->local_info->initial_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->local_info->initial_value), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  }
  __trace.line = 343;
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  __trace.line = 344;
  RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->local_info), true );
  __trace.line = 346;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1764 );
  __trace.line = 1765;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    __trace.line = 1766;
    if (THIS->skip_initialization)
    {
      __trace.line = 1767;
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1067] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[34] );
    }
    else if (!!(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1068] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[217] )))))
    {
      __trace.line = 1770;
      if (!!(THIS->local_info->initial_value))
      {
        __trace.line = 1771;
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        __trace.line = 1772;
        call_ROGUEM104( 37, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        __trace.line = 1773;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
      }
      else
      {
        __trace.line = 1775;
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
      __trace.line = 1777;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
    }
  }
  else
  {
    __trace.line = 1780;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
    __trace.line = 1781;
    if (!(THIS->skip_initialization))
    {
      __trace.line = 1782;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[618] );
      __trace.line = 1783;
      if (!!(THIS->local_info->initial_value))
      {
        __trace.line = 1784;
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        __trace.line = 1785;
        call_ROGUEM104( 37, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        __trace.line = 1786;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
      }
      else
      {
        __trace.line = 1788;
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
    }
  }
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init_object( RogueClassCmdLocalDeclaration* THIS )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.init_object()", "Cmd.rogue", 307 );
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init__Token_Local_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassToken* _auto_690_0, RogueClassLocal* _auto_691_1, RogueLogical _auto_692_2 )
{
  RogueDebugTrace __trace( "CmdLocalDeclaration.init(Token,Local,Logical)", "Cmd.rogue", 313 );
  THIS->skip_initialization = _auto_692_2;
  THIS->local_info = _auto_691_1;
  THIS->t = _auto_690_0;
  __trace.line = 315;
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueString* RogueCmdBlock__type_name( RogueClassCmdBlock* THIS )
{
  RogueDebugTrace __trace( "CmdBlock.type_name()", "Cmd.rogue", 429 );
  return (RogueString*)(Rogue_literal_strings[1156]);
}

RogueClassCmd* RogueCmdBlock__clone__CloneArgs( RogueClassCmdBlock* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBlock.clone(CloneArgs)", "Cmd.rogue", 444 );
  __trace.line = 445;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 446;
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    __trace.line = 447;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2201_3,(THIS->statements));
      RogueInt32 _auto_2202_4 = (0);
      for (;_auto_2202_4 < _auto_2201_3->count;++_auto_2202_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_2201_3->data->objects[_auto_2202_4]))));
        __trace.line = 448;
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_5, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    __trace.line = 450;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    __trace.line = 452;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), 0 )))));
    __trace.line = 453;
    call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_2), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 454;
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_2));
    __trace.line = 455;
    result_2->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    __trace.line = 456;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
}

void RogueCmdBlock__dispatch__Visitor( RogueClassCmdBlock* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBlock.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBlock( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdBlock__requires_semicolon( RogueClassCmdBlock* THIS )
{
  RogueDebugTrace __trace( "CmdBlock.requires_semicolon()", "Cmd.rogue", 459 );
  __trace.line = 460;
  return (RogueLogical)(false);
}

RogueClassCmdBlock* RogueCmdBlock__resolve__Scope( RogueClassCmdBlock* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdBlock.resolve(Scope)", "Cmd.rogue", 462 );
  __trace.line = 463;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 465;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 467;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 468;
  return (RogueClassCmdBlock*)(THIS);
}

void RogueCmdBlock__write_cpp__CPPWriter_Logical( RogueClassCmdBlock* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdBlock.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1810 );
  __trace.line = 1811;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1812;
  writer_0->indent += 2;
  __trace.line = 1813;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 1814;
  writer_0->indent -= 2;
  __trace.line = 1815;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1816;
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1069] );
  }
}

RogueClassCmdBlock* RogueCmdBlock__init_object( RogueClassCmdBlock* THIS )
{
  RogueDebugTrace __trace( "CmdBlock.init_object()", "Cmd.rogue", 429 );
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_694_0, RogueInt32 _auto_695_1 )
{
  RogueDebugTrace __trace( "CmdBlock.init(Token,Int32)", "Cmd.rogue", 434 );
  THIS->_control_type = _auto_695_1;
  THIS->t = _auto_694_0;
  __trace.line = 435;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  __trace.line = 437;
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_CmdStatementList_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_696_0, RogueClassCmdStatementList* _auto_697_1, RogueInt32 _auto_698_2 )
{
  RogueDebugTrace __trace( "CmdBlock.init(Token,CmdStatementList,Int32)", "Cmd.rogue", 437 );
  THIS->_control_type = _auto_698_2;
  THIS->statements = _auto_697_1;
  THIS->t = _auto_696_0;
  __trace.line = 439;
  return (RogueClassCmdBlock*)(THIS);
}

RogueString* RogueCmdControlStructure__type_name( RogueClassCmdControlStructure* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure.type_name()", "Cmd.rogue", 387 );
  return (RogueString*)(Rogue_literal_strings[1135]);
}

void RogueCmdControlStructure__dispatch__Visitor( RogueClassCmdControlStructure* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(((RogueClassCmdStatement*)(THIS))) );
}

RogueLogical RogueCmdControlStructure__requires_semicolon( RogueClassCmdControlStructure* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure.requires_semicolon()", "Cmd.rogue", 416 );
  __trace.line = 417;
  return (RogueLogical)(false);
}

RogueClassCmdControlStructure* RogueCmdControlStructure__init_object( RogueClassCmdControlStructure* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure.init_object()", "Cmd.rogue", 387 );
  return (RogueClassCmdControlStructure*)(THIS);
}

RogueClassCmd* RogueCmdControlStructure__set_control_logic__CmdControlStructure( RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* control_structure_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure.set_control_logic(CmdControlStructure)", "Cmd.rogue", 419 );
  __trace.line = 420;
  THIS->_control_type = control_structure_0->_control_type;
  __trace.line = 421;
  THIS->contains_yield = control_structure_0->contains_yield;
  __trace.line = 422;
  THIS->escape_label = control_structure_0->escape_label;
  __trace.line = 423;
  THIS->upkeep_label = control_structure_0->upkeep_label;
  __trace.line = 424;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdIf__type_name( RogueClassCmdIf* THIS )
{
  RogueDebugTrace __trace( "CmdIf.type_name()", "Cmd.rogue", 473 );
  return (RogueString*)(Rogue_literal_strings[1157]);
}

RogueClassCmd* RogueCmdIf__clone__CloneArgs( RogueClassCmdIf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdIf.clone(CloneArgs)", "Cmd.rogue", 484 );
  __trace.line = 485;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 486;
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    __trace.line = 487;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    __trace.line = 488;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    __trace.line = 489;
    THIS->task_escape_section = end_section_3;
    __trace.line = 490;
    RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), clone_args_0 ))) )))))))), next_section_2 );
    __trace.line = 491;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2203_5,(THIS->statements));
      RogueInt32 _auto_2204_6 = (0);
      for (;_auto_2204_6 < _auto_2203_5->count;++_auto_2204_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_2203_5->data->objects[_auto_2204_6]))));
        __trace.line = 492;
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    __trace.line = 494;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    __trace.line = 495;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, next_section_2 );
    __trace.line = 497;
    if (!!(THIS->else_statements))
    {
      __trace.line = 498;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2205_8,(THIS->else_statements));
        RogueInt32 _auto_2206_9 = (0);
        for (;_auto_2206_9 < _auto_2205_8->count;++_auto_2206_9)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_2205_8->data->objects[_auto_2206_9]))));
          __trace.line = 499;
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    __trace.line = 503;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    __trace.line = 504;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_3 );
    __trace.line = 505;
    if (end_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      __trace.line = 507;
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    __trace.line = 509;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    __trace.line = 512;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,result_4,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG(THIS->_control_type) )))));
    __trace.line = 513;
    call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 514;
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    __trace.line = 515;
    result_4->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    __trace.line = 517;
    result_4->else_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->else_statements), clone_args_0 )));
    __trace.line = 519;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

void RogueCmdIf__dispatch__Visitor( RogueClassCmdIf* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdIf.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdIf( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdIf__resolve__Scope( RogueClassCmdIf* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdIf.resolve(Scope)", "Cmd.rogue", 523 );
  __trace.line = 524;
  THIS->condition = (call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ));
  __trace.line = 525;
  THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG(THIS->condition), scope_0 )));
  __trace.line = 527;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 528;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 529;
  if (!!(THIS->else_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->else_statements), scope_0, false );
  }
  __trace.line = 531;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 532;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdIf__write_cpp__CPPWriter_Logical( RogueClassCmdIf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdIf.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1822 );
  __trace.line = 1823;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1070] );
  __trace.line = 1824;
  if ((RogueObject_instance_of(THIS->condition,RogueTypeCmdLiteralLogical) && !(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->condition,RogueTypeCmdLiteralLogical)))->value)))
  {
    __trace.line = 1826;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
    __trace.line = 1827;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
    __trace.line = 1828;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
  else
  {
    __trace.line = 1830;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
  }
  __trace.line = 1832;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[34] );
  __trace.line = 1833;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1834;
  writer_0->indent += 2;
  __trace.line = 1835;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 1836;
  writer_0->indent -= 2;
  __trace.line = 1837;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1839;
  if (!!(THIS->else_statements))
  {
    __trace.line = 1840;
    if ((THIS->else_statements->count == 1 && RogueObject_instance_of(((RogueClassCmd*)(THIS->else_statements->data->objects[0])),RogueTypeCmdIf)))
    {
      __trace.line = 1842;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1071] );
      __trace.line = 1843;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, true );
    }
    else
    {
      __trace.line = 1846;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[118] );
      __trace.line = 1847;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
      __trace.line = 1848;
      writer_0->indent += 2;
      __trace.line = 1849;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, false );
      __trace.line = 1850;
      writer_0->indent -= 2;
      __trace.line = 1851;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
    }
  }
  __trace.line = 1855;
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1069] );
  }
}

RogueClassCmdIf* RogueCmdIf__init_object( RogueClassCmdIf* THIS )
{
  RogueDebugTrace __trace( "CmdIf.init_object()", "Cmd.rogue", 473 );
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_699_0, RogueClassCmd* _auto_700_1, RogueInt32 _auto_701_2 )
{
  RogueDebugTrace __trace( "CmdIf.init(Token,Cmd,Int32)", "Cmd.rogue", 479 );
  THIS->_control_type = _auto_701_2;
  THIS->condition = _auto_700_1;
  THIS->t = _auto_699_0;
  __trace.line = 480;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  __trace.line = 482;
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_702_0, RogueClassCmd* _auto_703_1, RogueClassCmdStatementList* _auto_704_2, RogueInt32 _auto_705_3 )
{
  RogueDebugTrace __trace( "CmdIf.init(Token,Cmd,CmdStatementList,Int32)", "Cmd.rogue", 482 );
  THIS->_control_type = _auto_705_3;
  THIS->statements = _auto_704_2;
  THIS->condition = _auto_703_1;
  THIS->t = _auto_702_0;
  __trace.line = 484;
  return (RogueClassCmdIf*)(THIS);
}

RogueString* RogueCmdSwitch__type_name( RogueClassCmdSwitch* THIS )
{
  RogueDebugTrace __trace( "CmdSwitch.type_name()", "Cmd.rogue", 654 );
  return (RogueString*)(Rogue_literal_strings[1158]);
}

RogueClassCmdSwitch* RogueCmdSwitch__clone__CloneArgs( RogueClassCmdSwitch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdSwitch.clone(CloneArgs)", "Cmd.rogue", 663 );
  __trace.line = 664;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSwitch*,result_1,(((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  __trace.line = 665;
  call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 666;
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  __trace.line = 668;
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  __trace.line = 669;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2207_3,(THIS->cases));
    RogueInt32 _auto_2208_4 = (0);
    for (;_auto_2208_4 < _auto_2207_3->count;++_auto_2208_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_2207_3->data->objects[_auto_2208_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  __trace.line = 670;
  result_1->cases = cloned_cases_2;
  __trace.line = 672;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__clone__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  __trace.line = 673;
  return (RogueClassCmdSwitch*)(result_1);
}

void RogueCmdSwitch__dispatch__Visitor( RogueClassCmdSwitch* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdSwitch.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdSwitch( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdSwitch__resolve__Scope( RogueClassCmdSwitch* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSwitch.resolve(Scope)", "Cmd.rogue", 675 );
  __trace.line = 676;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 678;
  THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
  __trace.line = 679;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2209_1,(THIS->cases));
    RogueInt32 _auto_2210_2 = (0);
    for (;_auto_2210_2 < _auto_2209_1->count;++_auto_2210_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_2209_1->data->objects[_auto_2210_2]))));
      __trace.line = 680;
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_3->conditions), scope_0 );
      __trace.line = 681;
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_3->statements), scope_0, false );
    }
  }
  __trace.line = 683;
  if (!!(THIS->case_others))
  {
    __trace.line = 684;
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    __trace.line = 685;
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  __trace.line = 688;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 689;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdSwitch__write_cpp__CPPWriter_Logical( RogueClassCmdSwitch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdSwitch.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1862 );
  __trace.line = 1863;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1072] );
  __trace.line = 1864;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->expression), writer_0, false );
  __trace.line = 1865;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[34] );
  __trace.line = 1866;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1867;
  writer_0->indent += 2;
  __trace.line = 1869;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2211_2,(THIS->cases));
    RogueInt32 _auto_2212_3 = (0);
    for (;_auto_2212_3 < _auto_2211_2->count;++_auto_2212_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_4,(((RogueClassCmdWhichCase*)(_auto_2211_2->data->objects[_auto_2212_3]))));
      __trace.line = 1870;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2213_5,(c_4->conditions));
        RogueInt32 _auto_2214_6 = (0);
        for (;_auto_2214_6 < _auto_2213_5->count;++_auto_2214_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_7,(((RogueClassCmd*)(_auto_2213_5->data->objects[_auto_2214_6]))));
          __trace.line = 1871;
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[682] );
          __trace.line = 1872;
          call_ROGUEM104( 37, condition_7, writer_0, false );
          __trace.line = 1873;
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[216] );
        }
      }
      __trace.line = 1875;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
      __trace.line = 1876;
      writer_0->indent += 2;
      __trace.line = 1877;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(c_4->statements), writer_0, false, false );
      __trace.line = 1878;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1073] );
      __trace.line = 1879;
      writer_0->indent -= 2;
      __trace.line = 1880;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
    }
  }
  __trace.line = 1883;
  if (!!(THIS->case_others))
  {
    __trace.line = 1884;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[686] );
    __trace.line = 1885;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
    __trace.line = 1886;
    writer_0->indent += 2;
    __trace.line = 1887;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->case_others->statements), writer_0, false, false );
    __trace.line = 1888;
    writer_0->indent -= 2;
    __trace.line = 1889;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  }
  __trace.line = 1892;
  writer_0->indent -= 2;
  __trace.line = 1893;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
}

RogueClassCmdSwitch* RogueCmdSwitch__init_object( RogueClassCmdSwitch* THIS )
{
  RogueDebugTrace __trace( "CmdSwitch.init_object()", "Cmd.rogue", 654 );
  return (RogueClassCmdSwitch*)(THIS);
}

RogueClassCmdSwitch* RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdSwitch* THIS, RogueClassToken* _auto_706_0, RogueClassCmd* _auto_707_1, RogueCmdWhichCase_List* _auto_708_2, RogueClassCmdWhichCase* _auto_709_3, RogueInt32 _auto_710_4 )
{
  RogueDebugTrace __trace( "CmdSwitch.init(Token,Cmd,CmdWhichCase[],CmdWhichCase,Int32)", "Cmd.rogue", 661 );
  THIS->_control_type = _auto_710_4;
  THIS->case_others = _auto_709_3;
  THIS->cases = _auto_708_2;
  THIS->expression = _auto_707_1;
  THIS->t = _auto_706_0;
  __trace.line = 663;
  return (RogueClassCmdSwitch*)(THIS);
}

RogueString* RogueCmdWhich__type_name( RogueClassCmdWhich* THIS )
{
  RogueDebugTrace __trace( "CmdWhich.type_name()", "Cmd.rogue", 537 );
  return (RogueString*)(Rogue_literal_strings[1159]);
}

RogueClassCmdWhich* RogueCmdWhich__clone__CloneArgs( RogueClassCmdWhich* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWhich.clone(CloneArgs)", "Cmd.rogue", 546 );
  __trace.line = 547;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,result_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  __trace.line = 548;
  call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 549;
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  __trace.line = 551;
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  __trace.line = 552;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2215_3,(THIS->cases));
    RogueInt32 _auto_2216_4 = (0);
    for (;_auto_2216_4 < _auto_2215_3->count;++_auto_2216_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_2215_3->data->objects[_auto_2216_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  __trace.line = 553;
  result_1->cases = cloned_cases_2;
  __trace.line = 555;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__clone__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  __trace.line = 556;
  return (RogueClassCmdWhich*)(result_1);
}

void RogueCmdWhich__dispatch__Visitor( RogueClassCmdWhich* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWhich.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWhich( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWhich__resolve__Scope( RogueClassCmdWhich* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWhich.resolve(Scope)", "Cmd.rogue", 568 );
  __trace.line = 573;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 575;
  THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
  __trace.line = 577;
  RogueLogical all_literal_cases_1 = (true);
  __trace.line = 579;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_2,((call_ROGUEM90( 28, ROGUE_ARG(THIS->expression) ))));
  __trace.line = 580;
  if ((((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) && ((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
  {
    __trace.line = 581;
    if (((void*)expression_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
    {
      __trace.line = 582;
      THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    }
    else
    {
      __trace.line = 584;
      all_literal_cases_1 = ((RogueLogical)false);
    }
  }
  __trace.line = 588;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2217_10,(THIS->cases));
    RogueInt32 _auto_2218_11 = (0);
    for (;_auto_2218_11 < _auto_2217_10->count;++_auto_2218_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_12,(((RogueClassCmdWhichCase*)(_auto_2217_10->data->objects[_auto_2218_11]))));
      __trace.line = 589;
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_12->conditions), scope_0 );
      __trace.line = 590;
      if (all_literal_cases_1)
      {
        __trace.line = 591;
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2219_13,(c_12->conditions));
          RogueInt32 _auto_2220_14 = (0);
          for (;_auto_2220_14 < _auto_2219_13->count;++_auto_2220_14)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_15,(((RogueClassCmd*)(_auto_2219_13->data->objects[_auto_2220_14]))));
            __trace.line = 592;
            if ((!((call_ROGUEM87( 24, condition_15 ))) || RogueObject_instance_of(condition_15,RogueTypeCmdLiteralString)))
            {
              __trace.line = 593;
              all_literal_cases_1 = ((RogueLogical)false);
              __trace.line = 594;
              goto _auto_2221;
            }
          }
        }
        _auto_2221:;
      }
      __trace.line = 598;
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_12->statements), scope_0, false );
    }
  }
  __trace.line = 600;
  if (!!(THIS->case_others))
  {
    __trace.line = 601;
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    __trace.line = 602;
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  __trace.line = 605;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 608;
  if ((all_literal_cases_1 && !(THIS->contains_yield)))
  {
    __trace.line = 609;
    return (RogueClassCmd*)((call_ROGUEM286( 40, ROGUE_ARG(((RogueClassCmdControlStructure*)((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->expression), ROGUE_ARG(THIS->cases), ROGUE_ARG(THIS->case_others), 5 ))))), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) )));
  }
  __trace.line = 612;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_3,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), 5 )))));
  __trace.line = 613;
  call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_3), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 614;
  THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
  __trace.line = 616;
  ROGUE_DEF_LOCAL_REF(RogueString*,var_name_4,0);
  __trace.line = 617;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,expression_var_5,0);
  __trace.line = 618;
  if (RogueObject_instance_of(THIS->expression,RogueTypeCmdReadLocal))
  {
    __trace.line = 619;
    expression_var_5 = ((RogueClassLocal*)((RogueClassCmdReadLocal*)(RogueObject_as(THIS->expression,RogueTypeCmdReadLocal)))->local_info);
    __trace.line = 620;
    var_name_4 = ((RogueString*)expression_var_5->name);
  }
  else
  {
    __trace.line = 622;
    var_name_4 = ((RogueString*)((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) ))));
    __trace.line = 623;
    expression_var_5 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), var_name_4, ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->expression) ))), ROGUE_ARG(THIS->expression) ))));
    __trace.line = 624;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), expression_var_5, false )))))) );
  }
  __trace.line = 627;
  if (!!(THIS->cases->count))
  {
    __trace.line = 628;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_6,(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->expression->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[0]))), var_name_4 )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[0]))->statements), 2 )))));
    __trace.line = 629;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_7,(cmd_if_6));
    __trace.line = 630;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2222_16,(THIS->cases));
      RogueInt32 i_17 = (0);
      for (;i_17 < _auto_2222_16->count;++i_17)
      {
        __trace.line = 631;
        if (i_17 > 0)
        {
          __trace.line = 632;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_8,(((RogueClassCmdWhichCase*)(THIS->cases->data->objects[i_17]))));
          __trace.line = 633;
          ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(c_8->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( c_8, var_name_4 )))), 3 )))));
          __trace.line = 634;
          cmd_else_if_9->statements = c_8->statements;
          __trace.line = 636;
          cur_if_7->else_statements = ((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) )));
          __trace.line = 637;
          cur_if_7 = ((RogueClassCmdIf*)cmd_else_if_9);
        }
      }
    }
    __trace.line = 640;
    if (!!(THIS->case_others))
    {
      __trace.line = 641;
      cur_if_7->else_statements = THIS->case_others->statements;
    }
    __trace.line = 643;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_if_6))) );
  }
  else if (!!(THIS->case_others))
  {
    __trace.line = 647;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2223_18,(THIS->case_others->statements));
      RogueInt32 _auto_2224_19 = (0);
      for (;_auto_2224_19 < _auto_2223_18->count;++_auto_2224_19)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_20,(((RogueClassCmd*)(_auto_2223_18->data->objects[_auto_2224_19]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), cmd_20 );
      }
    }
  }
  __trace.line = 650;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( result_3, scope_0 ))))));
}

RogueClassCmdWhich* RogueCmdWhich__init_object( RogueClassCmdWhich* THIS )
{
  RogueDebugTrace __trace( "CmdWhich.init_object()", "Cmd.rogue", 537 );
  return (RogueClassCmdWhich*)(THIS);
}

RogueClassCmdWhich* RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdWhich* THIS, RogueClassToken* _auto_711_0, RogueClassCmd* _auto_712_1, RogueCmdWhichCase_List* _auto_713_2, RogueClassCmdWhichCase* _auto_714_3, RogueInt32 _auto_715_4 )
{
  RogueDebugTrace __trace( "CmdWhich.init(Token,Cmd,CmdWhichCase[],CmdWhichCase,Int32)", "Cmd.rogue", 544 );
  THIS->_control_type = _auto_715_4;
  THIS->case_others = _auto_714_3;
  THIS->cases = _auto_713_2;
  THIS->expression = _auto_712_1;
  THIS->t = _auto_711_0;
  __trace.line = 546;
  return (RogueClassCmdWhich*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  RogueDebugTrace __trace( "CmdWhich.add_case(Token)", "Cmd.rogue", 558 );
  __trace.line = 559;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  __trace.line = 560;
  RogueCmdWhichCase_List__add__CmdWhichCase( ROGUE_ARG(THIS->cases), result_1 );
  __trace.line = 561;
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case_others__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  RogueDebugTrace __trace( "CmdWhich.add_case_others(Token)", "Cmd.rogue", 563 );
  __trace.line = 564;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  __trace.line = 565;
  THIS->case_others = result_1;
  __trace.line = 566;
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueString* RogueCmdWhichCase__type_name( RogueClassCmdWhichCase* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase.type_name()", "Cmd.rogue", 693 );
  return (RogueString*)(Rogue_literal_strings[925]);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__clone__CloneArgs( RogueClassCmdWhichCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase.clone(CloneArgs)", "Cmd.rogue", 701 );
  __trace.line = 702;
  return (RogueClassCmdWhichCase*)(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->conditions), clone_args_0 )))), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

void RogueCmdWhichCase__dispatch__Visitor( RogueClassCmdWhichCase* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWhichCase( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init_object( RogueClassCmdWhichCase* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase.init_object()", "Cmd.rogue", 693 );
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( RogueClassCmdWhichCase* THIS, RogueClassToken* _auto_716_0, RogueClassCmdArgs* _auto_717_1, RogueClassCmdStatementList* _auto_718_2 )
{
  RogueDebugTrace __trace( "CmdWhichCase.init(Token,CmdArgs,CmdStatementList)", "Cmd.rogue", 699 );
  THIS->statements = _auto_718_2;
  THIS->conditions = _auto_717_1;
  THIS->t = _auto_716_0;
  __trace.line = 701;
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueClassCmd* RogueCmdWhichCase__as_conditional__String( RogueClassCmdWhichCase* THIS, RogueString* expression_var_name_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase.as_conditional(String)", "Cmd.rogue", 704 );
  __trace.line = 705;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_1,0);
  __trace.line = 706;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2225_2,(THIS->conditions));
    RogueInt32 _auto_2226_3 = (0);
    for (;_auto_2226_3 < _auto_2225_2->count;++_auto_2226_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_4,(((RogueClassCmd*)(_auto_2225_2->data->objects[_auto_2226_3]))));
      __trace.line = 707;
      if (!!(cmd_1))
      {
        __trace.line = 708;
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), cmd_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 )))))))) ))))))));
      }
      else
      {
        __trace.line = 710;
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 ))))))));
      }
    }
  }
  __trace.line = 713;
  return (RogueClassCmd*)(cmd_1);
}

RogueString* RogueCmdContingent__type_name( RogueClassCmdContingent* THIS )
{
  RogueDebugTrace __trace( "CmdContingent.type_name()", "Cmd.rogue", 718 );
  return (RogueString*)(Rogue_literal_strings[1160]);
}

RogueClassCmd* RogueCmdContingent__clone__CloneArgs( RogueClassCmdContingent* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdContingent.clone(CloneArgs)", "Cmd.rogue", 733 );
  __trace.line = 734;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 735;
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    __trace.line = 736;
    THIS->satisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    __trace.line = 737;
    THIS->unsatisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    __trace.line = 738;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    __trace.line = 739;
    THIS->task_escape_section = end_section_2;
    __trace.line = 741;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2227_4,(THIS->statements));
      RogueInt32 _auto_2228_5 = (0);
      for (;_auto_2228_5 < _auto_2227_4->count;++_auto_2228_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_6,(((RogueClassCmd*)(_auto_2227_4->data->objects[_auto_2228_5]))));
        __trace.line = 742;
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_6, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    __trace.line = 744;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->satisfied_section) );
    __trace.line = 746;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->satisfied_section) );
    __trace.line = 747;
    if (!!(THIS->satisfied_statements))
    {
      __trace.line = 748;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2229_7,(THIS->satisfied_statements));
        RogueInt32 _auto_2230_8 = (0);
        for (;_auto_2230_8 < _auto_2229_7->count;++_auto_2230_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_9,(((RogueClassCmd*)(_auto_2229_7->data->objects[_auto_2230_8]))));
          __trace.line = 749;
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_9, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    __trace.line = 752;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    __trace.line = 754;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->unsatisfied_section) );
    __trace.line = 755;
    if (!!(THIS->unsatisfied_statements))
    {
      __trace.line = 756;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2231_10,(THIS->unsatisfied_statements));
        RogueInt32 _auto_2232_11 = (0);
        for (;_auto_2232_11 < _auto_2231_10->count;++_auto_2232_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_12,(((RogueClassCmd*)(_auto_2231_10->data->objects[_auto_2232_11]))));
          __trace.line = 757;
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_12, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    __trace.line = 760;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    __trace.line = 762;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_2 );
    __trace.line = 763;
    if (end_section_2->ip < task_args_1->cmd_task_control->sections->count)
    {
      __trace.line = 765;
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    __trace.line = 767;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    __trace.line = 770;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,result_3,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    __trace.line = 771;
    RogueCmdContingent__set_control_logic__CmdControlStructure( result_3, ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 772;
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_3));
    __trace.line = 774;
    result_3->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    __trace.line = 775;
    result_3->satisfied_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->satisfied_statements), clone_args_0 )));
    __trace.line = 776;
    result_3->unsatisfied_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->unsatisfied_statements), clone_args_0 )));
    __trace.line = 778;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
}

void RogueCmdContingent__dispatch__Visitor( RogueClassCmdContingent* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdContingent.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdContingent( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmdContingent* RogueCmdContingent__resolve__Scope( RogueClassCmdContingent* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdContingent.resolve(Scope)", "Cmd.rogue", 781 );
  __trace.line = 782;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 784;
  if (!(!!(THIS->escape_label)))
  {
    THIS->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
  }
  __trace.line = 786;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 787;
  if (!!(THIS->satisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->satisfied_statements), scope_0, false );
  }
  __trace.line = 788;
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->unsatisfied_statements), scope_0, false );
  }
  __trace.line = 790;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 791;
  return (RogueClassCmdContingent*)(THIS);
}

void RogueCmdContingent__write_cpp__CPPWriter_Logical( RogueClassCmdContingent* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdContingent.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1899 );
  __trace.line = 1900;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1901;
  writer_0->indent += 2;
  __trace.line = 1902;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1903;
  writer_0->indent += 2;
  __trace.line = 1905;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 1907;
  if (!!(THIS->satisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->satisfied_label) )))), Rogue_literal_strings[1069] );
  }
  __trace.line = 1908;
  if (!!(THIS->satisfied_statements))
  {
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->satisfied_statements), writer_0, false, false );
  }
  __trace.line = 1909;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1074] )))), ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[243] );
  __trace.line = 1911;
  writer_0->indent -= 2;
  __trace.line = 1912;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1914;
  if (!!(THIS->unsatisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->unsatisfied_label) )))), Rogue_literal_strings[1069] );
  }
  __trace.line = 1915;
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->unsatisfied_statements), writer_0, false, false );
  }
  __trace.line = 1917;
  writer_0->indent -= 2;
  __trace.line = 1918;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1920;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1069] );
}

RogueClassCmdContingent* RogueCmdContingent__init_object( RogueClassCmdContingent* THIS )
{
  RogueDebugTrace __trace( "CmdContingent.init_object()", "Cmd.rogue", 718 );
  return (RogueClassCmdContingent*)(THIS);
}

RogueClassCmd* RogueCmdContingent__set_control_logic__CmdControlStructure( RogueClassCmdContingent* THIS, RogueClassCmdControlStructure* original_0 )
{
  RogueDebugTrace __trace( "CmdContingent.set_control_logic(CmdControlStructure)", "Cmd.rogue", 793 );
  __trace.line = 794;
  RogueCmdControlStructure__set_control_logic__CmdControlStructure( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)), original_0 );
  __trace.line = 795;
  THIS->satisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->satisfied_label;
  __trace.line = 796;
  THIS->unsatisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->unsatisfied_label;
  __trace.line = 797;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdContingent* RogueCmdContingent__init__Token_CmdStatementList( RogueClassCmdContingent* THIS, RogueClassToken* _auto_719_0, RogueClassCmdStatementList* _auto_720_1 )
{
  RogueDebugTrace __trace( "CmdContingent.init(Token,CmdStatementList)", "Cmd.rogue", 730 );
  THIS->statements = _auto_720_1;
  THIS->t = _auto_719_0;
  __trace.line = 731;
  THIS->_control_type = 1;
  __trace.line = 733;
  return (RogueClassCmdContingent*)(THIS);
}

RogueString* RogueCmdGenericLoop__type_name( RogueClassCmdGenericLoop* THIS )
{
  RogueDebugTrace __trace( "CmdGenericLoop.type_name()", "Cmd.rogue", 805 );
  return (RogueString*)(Rogue_literal_strings[1161]);
}

RogueClassCmd* RogueCmdGenericLoop__clone__CloneArgs( RogueClassCmdGenericLoop* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.clone(CloneArgs)", "Cmd.rogue", 820 );
  __trace.line = 821;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 822;
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    __trace.line = 824;
    if (!!(THIS->control_statements))
    {
      __trace.line = 825;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2233_5,(THIS->control_statements));
        RogueInt32 _auto_2234_6 = (0);
        for (;_auto_2234_6 < _auto_2233_5->count;++_auto_2234_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_2233_5->data->objects[_auto_2234_6]))));
          __trace.line = 826;
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    __trace.line = 831;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,condition_section_2,(((RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) )))));
    __trace.line = 832;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,after_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    __trace.line = 833;
    THIS->task_escape_section = after_section_3;
    __trace.line = 834;
    THIS->task_upkeep_section = ((RogueTaskArgs__create_section( task_args_1 )));
    __trace.line = 835;
    if (!!(THIS->condition))
    {
      __trace.line = 836;
      RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))) )))))))), after_section_3 );
    }
    __trace.line = 840;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2235_8,(THIS->statements));
      RogueInt32 _auto_2236_9 = (0);
      for (;_auto_2236_9 < _auto_2235_8->count;++_auto_2236_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_2235_8->data->objects[_auto_2236_9]))));
        __trace.line = 841;
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    __trace.line = 844;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->task_upkeep_section) );
    __trace.line = 845;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->task_upkeep_section) );
    __trace.line = 848;
    if (!!(THIS->upkeep))
    {
      __trace.line = 849;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2237_11,(THIS->upkeep));
        RogueInt32 _auto_2238_12 = (0);
        for (;_auto_2238_12 < _auto_2237_11->count;++_auto_2238_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_13,(((RogueClassCmd*)(_auto_2237_11->data->objects[_auto_2238_12]))));
          __trace.line = 850;
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((call_ROGUEM99( 10, statement_13, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    __trace.line = 855;
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), condition_section_2 );
    __trace.line = 857;
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, after_section_3 );
    __trace.line = 858;
    if (after_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      __trace.line = 860;
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    __trace.line = 863;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    __trace.line = 866;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    __trace.line = 867;
    call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 868;
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    __trace.line = 870;
    result_4->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    __trace.line = 871;
    result_4->upkeep = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->upkeep), clone_args_0 )));
    __trace.line = 873;
    result_4->control_statements = ((RogueCmd__clone__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->control_statements), clone_args_0 )));
    __trace.line = 874;
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

void RogueCmdGenericLoop__dispatch__Visitor( RogueClassCmdGenericLoop* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdGenericLoop( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdGenericLoop__resolve__Scope( RogueClassCmdGenericLoop* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.resolve(Scope)", "Cmd.rogue", 885 );
  __trace.line = 886;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 887;
  if (!!(THIS->control_statements))
  {
    __trace.line = 888;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2239_1,(THIS->control_statements));
      RogueInt32 i_2 = (0);
      for (;i_2 < _auto_2239_1->count;++i_2)
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->control_statements->data->objects[i_2] = (call_ROGUEM81( 31, ROGUE_ARG(((RogueClassCmd*)(THIS->control_statements->data->objects[i_2]))), scope_0 ));
      }
    }
  }
  __trace.filename = "Cmd.rogue";
  __trace.line = 893;
  if (!!(THIS->condition))
  {
    THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ))), scope_0 )));
  }
  __trace.line = 894;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 896;
  if (!!(THIS->upkeep))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->upkeep), scope_0, false );
  }
  __trace.line = 898;
  if (!!(THIS->control_statements))
  {
    __trace.line = 899;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2240_3,(THIS->control_statements));
      RogueInt32 _auto_2241_4 = (0);
      for (;_auto_2241_4 < _auto_2240_3->count;++_auto_2241_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_2240_3->data->objects[_auto_2241_4]))));
        call_ROGUEM86( 17, statement_5, scope_0 );
      }
    }
  }
  __trace.line = 902;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 903;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdGenericLoop__write_cpp__CPPWriter_Logical( RogueClassCmdGenericLoop* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1926 );
  __trace.line = 1927;
  if (!!(THIS->control_statements))
  {
    __trace.line = 1928;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
    __trace.line = 1929;
    writer_0->indent += 2;
    __trace.line = 1931;
    if (!!(THIS->control_statements))
    {
      __trace.line = 1932;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2242_3,(THIS->control_statements));
        RogueInt32 _auto_2243_4 = (0);
        for (;_auto_2243_4 < _auto_2242_3->count;++_auto_2243_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_2242_3->data->objects[_auto_2243_4]))));
          __trace.line = 1933;
          call_ROGUEM104( 37, statement_5, writer_0, false );
          __trace.line = 1934;
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
        }
      }
    }
  }
  __trace.line = 1940;
  if ((!!(THIS->upkeep) || !(!!(THIS->condition))))
  {
    __trace.line = 1941;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1075] );
    __trace.line = 1942;
    if (!!(THIS->condition))
    {
      call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
    }
    __trace.line = 1943;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[243] );
    __trace.line = 1944;
    RogueLogical first_2 = (true);
    __trace.line = 1945;
    if (!!(THIS->upkeep))
    {
      __trace.line = 1946;
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2244_6,(THIS->upkeep));
        RogueInt32 _auto_2245_7 = (0);
        for (;_auto_2245_7 < _auto_2244_6->count;++_auto_2245_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_8,(((RogueClassCmd*)(_auto_2244_6->data->objects[_auto_2245_7]))));
          __trace.line = 1947;
          if (first_2)
          {
            first_2 = ((RogueLogical)false);
          }
          else
          {
            __trace.line = 1948;
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[217] );
          }
          __trace.line = 1949;
          call_ROGUEM104( 37, statement_8, writer_0, false );
        }
      }
    }
    __trace.line = 1952;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[34] );
  }
  else
  {
    __trace.line = 1954;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1076] );
    __trace.line = 1955;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
    __trace.line = 1956;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[34] );
  }
  __trace.line = 1958;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1959;
  writer_0->indent += 2;
  __trace.line = 1960;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 1961;
  writer_0->indent -= 2;
  __trace.line = 1962;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1964;
  if (!!(THIS->control_statements))
  {
    __trace.line = 1965;
    writer_0->indent -= 2;
    __trace.line = 1966;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  }
  __trace.line = 1969;
  if (!!(THIS->escape_label))
  {
    __trace.line = 1970;
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1069] );
  }
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init_object( RogueClassCmdGenericLoop* THIS )
{
  RogueDebugTrace __trace( "CmdGenericLoop.init_object()", "Cmd.rogue", 805 );
  return (RogueClassCmdGenericLoop*)(THIS);
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( RogueClassCmdGenericLoop* THIS, RogueClassToken* _auto_721_0, RogueInt32 _auto_722_1, RogueClassCmd* _auto_723_2, RogueClassCmdStatementList* _auto_724_3, RogueClassCmdStatementList* _auto_725_4, RogueClassCmdStatementList* _auto_726_5 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.init(Token,Int32,Cmd,CmdStatementList,CmdStatementList,CmdStatementList)", "Cmd.rogue", 812 );
  THIS->control_statements = _auto_726_5;
  THIS->upkeep = _auto_725_4;
  THIS->statements = _auto_724_3;
  THIS->condition = _auto_723_2;
  THIS->_control_type = _auto_722_1;
  THIS->t = _auto_721_0;
  __trace.line = 814;
  return (RogueClassCmdGenericLoop*)(THIS);
}

void RogueCmdGenericLoop__add_control_var__Local( RogueClassCmdGenericLoop* THIS, RogueClassLocal* v_0 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.add_control_var(Local)", "Cmd.rogue", 877 );
  __trace.line = 878;
  if (!(!!(THIS->control_statements)))
  {
    THIS->control_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  __trace.line = 879;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->control_statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_0->t), v_0, false )))))) );
}

void RogueCmdGenericLoop__add_upkeep__Cmd( RogueClassCmdGenericLoop* THIS, RogueClassCmd* cmd_0 )
{
  RogueDebugTrace __trace( "CmdGenericLoop.add_upkeep(Cmd)", "Cmd.rogue", 881 );
  __trace.line = 882;
  if (!(!!(THIS->upkeep)))
  {
    THIS->upkeep = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  __trace.line = 883;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->upkeep)), cmd_0 );
}

RogueString* RogueCmdElementAccess__to_String( RogueClassCmdElementAccess* THIS )
{
  RogueDebugTrace __trace( "CmdElementAccess.to_String()", "Cmd.rogue", 1992 );
  __trace.line = 1993;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->context))) )))) )))), Rogue_literal_strings[235] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->index))) )))) )))), Rogue_literal_strings[51] )))) ))));
}

RogueString* RogueCmdElementAccess__type_name( RogueClassCmdElementAccess* THIS )
{
  RogueDebugTrace __trace( "CmdElementAccess.type_name()", "Cmd.rogue", 1951 );
  return (RogueString*)(Rogue_literal_strings[926]);
}

RogueClassCmd* RogueCmdElementAccess__clone__CloneArgs( RogueClassCmdElementAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdElementAccess.clone(CloneArgs)", "Cmd.rogue", 1959 );
  __trace.line = 1960;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

void RogueCmdElementAccess__dispatch__Visitor( RogueClassCmdElementAccess* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdElementAccess.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdElementAccess( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdElementAccess__resolve__Scope( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdElementAccess.resolve(Scope)", "Cmd.rogue", 1962 );
  __trace.line = 1963;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 1965;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ))));
  __trace.line = 1966;
  RogueType__organize__Scope( context_type_1, scope_0 );
  __trace.line = 1967;
  if (context_type_1->is_array)
  {
    __trace.line = 1968;
    return (RogueClassCmd*)(((RogueCmdReadArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index) )))), scope_0 ))));
  }
  else
  {
    __trace.line = 1970;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_2,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    __trace.line = 1971;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_2), ROGUE_ARG(THIS->index) );
    __trace.line = 1972;
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[983], args_2 )))), true, false ))));
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_assignment__Scope_Cmd( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  RogueDebugTrace __trace( "CmdElementAccess.resolve_assignment(Scope,Cmd)", "Cmd.rogue", 1975 );
  __trace.line = 1976;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 1978;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,((call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ))));
  __trace.line = 1979;
  RogueType__organize__Scope( context_type_2, scope_0 );
  __trace.line = 1980;
  if (context_type_2->is_array)
  {
    __trace.line = 1981;
    return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index), new_value_1 )))), scope_0 ))));
  }
  else
  {
    __trace.line = 1983;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_3,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    __trace.line = 1984;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_3), ROGUE_ARG(THIS->index) )))), new_value_1 );
    __trace.line = 1985;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, context_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[437], args_3 )))), true, false )))));
    __trace.line = 1986;
    return (RogueClassCmd*)(result_4);
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_adjust__Scope_Int32( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdElementAccess.resolve_adjust(Scope,Int32)", "Cmd.rogue", 1989 );
  __trace.line = 1990;
  return (RogueClassCmd*)((call_ROGUEM102( 32, ROGUE_ARG(((RogueCmdElementAccess__clone__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), scope_0, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )));
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init_object( RogueClassCmdElementAccess* THIS )
{
  RogueDebugTrace __trace( "CmdElementAccess.init_object()", "Cmd.rogue", 1951 );
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init__Token_Cmd_Cmd( RogueClassCmdElementAccess* THIS, RogueClassToken* _auto_732_0, RogueClassCmd* _auto_733_1, RogueClassCmd* _auto_734_2 )
{
  RogueDebugTrace __trace( "CmdElementAccess.init(Token,Cmd,Cmd)", "Cmd.rogue", 1957 );
  THIS->index = _auto_734_2;
  THIS->context = _auto_733_1;
  THIS->t = _auto_732_0;
  __trace.line = 1959;
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueString* RogueCmdEnsure__type_name( RogueClassCmdEnsure* THIS )
{
  RogueDebugTrace __trace( "CmdEnsure.type_name()", "Cmd.rogue", 4726 );
  return (RogueString*)(Rogue_literal_strings[927]);
}

RogueClassCmd* RogueCmdEnsure__clone__CloneArgs( RogueClassCmdEnsure* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdEnsure.clone(CloneArgs)", "Cmd.rogue", 4740 );
  __trace.line = 4741;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,result_1,(((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) )))));
  __trace.line = 4743;
  if (!!(THIS->named_args))
  {
    __trace.line = 4744;
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    __trace.line = 4745;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2246_2,(THIS->named_args));
      RogueInt32 _auto_2247_3 = (0);
      for (;_auto_2247_3 < _auto_2246_2->count;++_auto_2247_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_2246_2->data->objects[_auto_2247_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  __trace.line = 4748;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdEnsure__dispatch__Visitor( RogueClassCmdEnsure* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdEnsure.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdEnsure( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdEnsure__implicit_type__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdEnsure.implicit_type(Scope)", "Cmd.rogue", 4750 );
  __trace.line = 4751;
  return (RogueClassType*)((call_ROGUEM101( 23, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueClassCmd* RogueCmdEnsure__resolve__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdEnsure.resolve(Scope)", "Cmd.rogue", 4753 );
  __trace.line = 4754;
  THIS->cmd_read = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )));
  __trace.line = 4755;
  if (!(((RogueType__is_reference( ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->cmd_read) ))) )))))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[984] ))));
  }
  __trace.line = 4757;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_new_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->cmd_read) ))->name), ROGUE_ARG(THIS->args) )))));
  __trace.line = 4758;
  cmd_new_1->named_args = THIS->named_args;
  __trace.line = 4759;
  THIS->cmd_write = ((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))));
  __trace.line = 4771;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_read_2,(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )))));
  __trace.line = 4773;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_read_2 )))))))), 2 )))));
  __trace.line = 4774;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))))) );
  __trace.line = 4776;
  return (RogueClassCmd*)(((RogueCmdIf__resolve__Scope( cmd_if_3, scope_0 ))));
}

RogueClassType* Rogue_CmdEnsure__type( RogueClassCmdEnsure* THIS )
{
  RogueDebugTrace __trace( "CmdEnsure.type()", "Cmd.rogue", 4780 );
  __trace.line = 4781;
  ROGUE_DEF_LOCAL_REF_NULL(RogueClassLocal*,_auto_735_0);
  return (RogueClassType*)(((_auto_735_0=(THIS->local_info))?_auto_735_0:ROGUE_THROW(((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[1060] )))))->_type);
}

RogueClassCmdEnsure* RogueCmdEnsure__init_object( RogueClassCmdEnsure* THIS )
{
  RogueDebugTrace __trace( "CmdEnsure.init_object()", "Cmd.rogue", 4726 );
  return (RogueClassCmdEnsure*)(THIS);
}

RogueClassCmdEnsure* RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( RogueClassCmdEnsure* THIS, RogueClassToken* _auto_736_0, RogueClassCmd* _auto_737_1, RogueClassCmdArgs* _auto_738_2, RogueCmdNamedArg_List* _auto_739_3 )
{
  RogueDebugTrace __trace( "CmdEnsure.init(Token,Cmd,CmdArgs,CmdNamedArg[])", "Cmd.rogue", 4738 );
  THIS->named_args = _auto_739_3;
  THIS->args = _auto_738_2;
  THIS->operand = _auto_737_1;
  THIS->t = _auto_736_0;
  __trace.line = 4740;
  return (RogueClassCmdEnsure*)(THIS);
}

RogueString* RogueCmdForEach__type_name( RogueClassCmdForEach* THIS )
{
  RogueDebugTrace __trace( "CmdForEach.type_name()", "Cmd.rogue", 907 );
  return (RogueString*)(Rogue_literal_strings[1162]);
}

RogueClassCmd* RogueCmdForEach__clone__CloneArgs( RogueClassCmdForEach* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdForEach.clone(CloneArgs)", "Cmd.rogue", 918 );
  __trace.line = 919;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,result_1,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->collection), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_cmd), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  __trace.line = 920;
  call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 921;
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  __trace.line = 923;
  result_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  __trace.line = 924;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

void RogueCmdForEach__dispatch__Visitor( RogueClassCmdForEach* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdForEach.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdForEach( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdForEach__resolve__Scope( RogueClassCmdForEach* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdForEach.resolve(Scope)", "Cmd.rogue", 926 );
  __trace.line = 927;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 929;
  THIS->collection = (call_ROGUEM81( 31, ROGUE_ARG(THIS->collection), scope_0 ));
  __trace.line = 930;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,collection_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->collection) ))), scope_0 )))));
  __trace.line = 932;
  RogueLogical has_count_2 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[502] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[985] ))))));
  __trace.line = 933;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_at_3,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[986] )))));
  __trace.line = 934;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_get_4,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[987] )))));
  __trace.line = 935;
  RogueLogical has_get_5 = ((!!(m_get_4) || !!(m_at_3)));
  __trace.line = 937;
  RogueInt32 step_size_6 = (1);
  __trace.line = 938;
  if (!!(THIS->step_cmd))
  {
    __trace.line = 939;
    THIS->step_cmd = (call_ROGUEM81( 31, ROGUE_ARG(THIS->step_cmd), scope_0 ));
    __trace.line = 940;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLiteralInt32*,literal_integer_cmd_7,(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->step_cmd,RogueTypeCmdLiteralInt32)))));
    __trace.line = 941;
    if (!!(literal_integer_cmd_7))
    {
      __trace.line = 942;
      step_size_6 = ((RogueInt32)literal_integer_cmd_7->value);
    }
    else
    {
      __trace.line = 944;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[988] ))));
    }
  }
  __trace.line = 948;
  if ((has_count_2 && has_get_5))
  {
    __trace.line = 949;
    if (!!(m_at_3))
    {
      m_get_4 = ((RogueClassMethod*)m_at_3);
    }
    __trace.line = 951;
    THIS->collection = (call_ROGUEM81( 31, ROGUE_ARG(THIS->collection), scope_0 ));
    __trace.line = 952;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,collection_var_8,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->collection) ))), ROGUE_ARG(THIS->collection) )))));
    __trace.line = 954;
    if (!(!!(THIS->index_var_name)))
    {
      THIS->index_var_name = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
    }
    __trace.line = 955;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_9,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    __trace.line = 956;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_cmd_10,0);
    __trace.line = 957;
    if (step_size_6 >= 0)
    {
      __trace.line = 958;
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))));
      __trace.line = 959;
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[502] ))))));
    }
    else
    {
      __trace.line = 961;
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[502] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) )))))));
      __trace.line = 962;
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 ))))));
    }
    __trace.line = 965;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_11,0);
    __trace.line = 966;
    if (!!(THIS->control_var_name))
    {
      __trace.line = 967;
      control_var_11 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
      __trace.line = 968;
      control_var_11->initial_value = ((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), ROGUE_ARG(m_get_4->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))) )))) )))));
      __trace.line = 969;
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(control_var_11->t), control_var_11, false )))))), 0 );
    }
    __trace.line = 972;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,modifier_12,0);
    __trace.line = 973;
    if ((step_size_6 >= -1 && step_size_6 <= 1))
    {
      __trace.line = 974;
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_9, step_size_6 ))))));
    }
    else if (step_size_6 >= 0)
    {
      __trace.line = 976;
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_plus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), step_size_6 )))))) ))))));
    }
    else
    {
      __trace.line = 978;
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_minus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(step_size_6))) )))))) ))))));
    }
    __trace.line = 981;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_13,0);
    __trace.line = 982;
    if (step_size_6 >= 0)
    {
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    else
    {
      __trace.line = 983;
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    __trace.line = 985;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_14,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, condition_13, ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    __trace.line = 986;
    call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_14), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 987;
    RogueCmdGenericLoop__add_control_var__Local( result_14, collection_var_8 );
    __trace.line = 988;
    RogueCmdGenericLoop__add_control_var__Local( result_14, index_var_9 );
    __trace.line = 989;
    RogueCmdGenericLoop__add_upkeep__Cmd( result_14, modifier_12 );
    __trace.line = 991;
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    __trace.line = 992;
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( result_14, scope_0 ))));
  }
  else
  {
    __trace.line = 1003;
    RogueLogical has_another_15 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[989] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[990] ))))));
    __trace.line = 1004;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_read_16,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[991] )))));
    __trace.line = 1005;
    if ((!(has_another_15) || !(!!(m_read_16))))
    {
      __trace.line = 1006;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[992] ))));
    }
    __trace.line = 1008;
    if (!(!!(m_read_16->_return_type)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[993] ))));
    }
    __trace.line = 1009;
    if (!!(THIS->step_cmd))
    {
      __trace.line = 1010;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[994] ))));
    }
    __trace.line = 1013;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,reader_var_17,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), collection_type_1, ROGUE_ARG(THIS->collection) )))));
    __trace.line = 1014;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_18,0);
    __trace.line = 1015;
    if (!!(THIS->index_var_name))
    {
      __trace.line = 1016;
      index_var_18 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))));
    }
    __trace.line = 1019;
    if (!!(THIS->control_var_name))
    {
      __trace.line = 1020;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_19,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(m_read_16->_return_type), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[995] )))))) )))));
      __trace.line = 1022;
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->collection->t), control_var_19, false )))))), 0 );
    }
    else
    {
      __trace.line = 1024;
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[995] )))))), 0 );
    }
    __trace.line = 1027;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,rt_20,(reader_var_17->t));
    __trace.line = 1028;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_21,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), rt_20, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), rt_20, reader_var_17 )))))), Rogue_literal_strings[989] )))))), ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    __trace.line = 1029;
    call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)cmd_loop_21), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    __trace.line = 1030;
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, reader_var_17 );
    __trace.line = 1031;
    if (!!(index_var_18))
    {
      __trace.line = 1032;
      RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, index_var_18 );
      __trace.line = 1033;
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_21, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_18, 1 )))))) );
    }
    __trace.line = 1036;
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    __trace.line = 1037;
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( cmd_loop_21, scope_0 ))));
  }
  __trace.line = 1040;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdForEach* RogueCmdForEach__init_object( RogueClassCmdForEach* THIS )
{
  RogueDebugTrace __trace( "CmdForEach.init_object()", "Cmd.rogue", 907 );
  return (RogueClassCmdForEach*)(THIS);
}

RogueClassCmdForEach* RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( RogueClassCmdForEach* THIS, RogueClassToken* _auto_740_0, RogueString* _auto_741_1, RogueString* _auto_742_2, RogueClassCmd* _auto_743_3, RogueClassCmd* _auto_744_4, RogueClassCmdStatementList* _auto_745_5 )
{
  RogueDebugTrace __trace( "CmdForEach.init(Token,String,String,Cmd,Cmd,CmdStatementList)", "Cmd.rogue", 915 );
  THIS->statements = _auto_745_5;
  THIS->step_cmd = _auto_744_4;
  THIS->collection = _auto_743_3;
  THIS->index_var_name = _auto_742_2;
  THIS->control_var_name = _auto_741_1;
  THIS->t = _auto_740_0;
  __trace.line = 916;
  THIS->_control_type = 9;
  __trace.line = 918;
  return (RogueClassCmdForEach*)(THIS);
}

RogueString* RogueCmdFormattedString__type_name( RogueClassCmdFormattedString* THIS )
{
  RogueDebugTrace __trace( "CmdFormattedString.type_name()", "Cmd.rogue", 1479 );
  return (RogueString*)(Rogue_literal_strings[928]);
}

RogueClassCmd* RogueCmdFormattedString__clone__CloneArgs( RogueClassCmdFormattedString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdFormattedString.clone(CloneArgs)", "Cmd.rogue", 1487 );
  __trace.line = 1488;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->format), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdFormattedString__dispatch__Visitor( RogueClassCmdFormattedString* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdFormattedString.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdFormattedString( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdFormattedString__implicit_type__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdFormattedString.implicit_type(Scope)", "Cmd.rogue", 1490 );
  __trace.line = 1491;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmd* RogueCmdFormattedString__resolve__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdFormattedString.resolve(Scope)", "Cmd.rogue", 1493 );
  __trace.line = 1494;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[67], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  __trace.line = 1495;
  ROGUE_DEF_LOCAL_REF(RogueString*,fmt_2,(THIS->format));
  __trace.line = 1496;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2248_4,(THIS->args));
    RogueInt32 _auto_2249_5 = (0);
    for (;_auto_2249_5 < _auto_2248_4->count;++_auto_2249_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_6,(((RogueClassCmd*)(_auto_2248_4->data->objects[_auto_2249_5]))));
      __trace.line = 1497;
      arg_6 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, arg_6, scope_0 ))) ))));
      __trace.line = 1498;
      RogueOptionalInt32 i_3 = (((RogueString__locate__Character_OptionalInt32( fmt_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      __trace.line = 1499;
      if (!(i_3.exists))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[996] ))));
      }
      __trace.line = 1500;
      if (i_3.value > 0)
      {
        __trace.line = 1501;
        cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[997], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( fmt_2, ROGUE_ARG(i_3.value) )))), 0 )))))) )))) ))));
        __trace.line = 1502;
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, ROGUE_ARG((i_3.value + 1)) ))));
      }
      else
      {
        __trace.line = 1504;
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, 1 ))));
      }
      __trace.line = 1506;
      cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[997], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), arg_6 )))))))) )))) ))));
    }
  }
  __trace.line = 1508;
  if (!!(fmt_2->character_count))
  {
    __trace.line = 1509;
    if (((RogueString__locate__Character_OptionalInt32( fmt_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))).exists)
    {
      __trace.line = 1510;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[998] ))));
    }
    __trace.line = 1512;
    cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[997], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), fmt_2, 0 )))))) )))) ))));
  }
  __trace.line = 1515;
  return (RogueClassCmd*)((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(((RogueCmdAccess__resolve__Scope( cmd_1, scope_0 )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), scope_0 ))), scope_0 )));
}

RogueClassType* Rogue_CmdFormattedString__type( RogueClassCmdFormattedString* THIS )
{
  RogueDebugTrace __trace( "CmdFormattedString.type()", "Cmd.rogue", 1517 );
  __trace.line = 1518;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init_object( RogueClassCmdFormattedString* THIS )
{
  RogueDebugTrace __trace( "CmdFormattedString.init_object()", "Cmd.rogue", 1479 );
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init__Token_String_CmdArgs( RogueClassCmdFormattedString* THIS, RogueClassToken* _auto_746_0, RogueString* _auto_747_1, RogueClassCmdArgs* _auto_748_2 )
{
  RogueDebugTrace __trace( "CmdFormattedString.init(Token,String,CmdArgs)", "Cmd.rogue", 1485 );
  THIS->args = _auto_748_2;
  THIS->format = _auto_747_1;
  THIS->t = _auto_746_0;
  __trace.line = 1487;
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueString* RogueCmdTry__type_name( RogueClassCmdTry* THIS )
{
  RogueDebugTrace __trace( "CmdTry.type_name()", "Cmd.rogue", 1045 );
  return (RogueString*)(Rogue_literal_strings[1163]);
}

RogueClassCmdTry* RogueCmdTry__clone__CloneArgs( RogueClassCmdTry* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdTry.clone(CloneArgs)", "Cmd.rogue", 1053 );
  __trace.line = 1054;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,result_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueCmdCatch_List*)(NULL))) )))));
  __trace.line = 1055;
  call_ROGUEM286( 40, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 1056;
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  __trace.line = 1058;
  result_1->statements = ((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  __trace.line = 1060;
  ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,new_catches_2,(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))));
  __trace.line = 1061;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_2250_3,(THIS->catches));
    RogueInt32 _auto_2251_4 = (0);
    for (;_auto_2251_4 < _auto_2250_3->count;++_auto_2251_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_5,(((RogueClassCmdCatch*)(_auto_2250_3->data->objects[_auto_2251_4]))));
      RogueCmdCatch_List__add__CmdCatch( new_catches_2, ROGUE_ARG(((RogueCmdCatch__clone__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  __trace.line = 1062;
  result_1->catches = new_catches_2;
  __trace.line = 1064;
  return (RogueClassCmdTry*)(result_1);
}

void RogueCmdTry__dispatch__Visitor( RogueClassCmdTry* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdTry.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTry( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdTry__resolve__Scope( RogueClassCmdTry* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdTry.resolve(Scope)", "Cmd.rogue", 1071 );
  __trace.line = 1072;
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  __trace.line = 1074;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 1075;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_2252_1,(THIS->catches));
    RogueInt32 _auto_2253_2 = (0);
    for (;_auto_2253_2 < _auto_2252_1->count;++_auto_2253_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_2252_1->data->objects[_auto_2253_2]))));
      RogueCmdCatch__resolve__Scope( c_3, scope_0 );
    }
  }
  __trace.line = 1077;
  if (THIS->contains_yield)
  {
    __trace.line = 1078;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1000] ))));
  }
  __trace.line = 1081;
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  __trace.line = 1083;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTry__write_cpp__CPPWriter_Logical( RogueClassCmdTry* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdTry.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1978 );
  __trace.line = 1979;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1077] );
  __trace.line = 1981;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 1982;
  writer_0->indent += 2;
  __trace.line = 1983;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 1984;
  writer_0->indent -= 2;
  __trace.line = 1985;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 1986;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_2254_2,(THIS->catches));
    RogueInt32 _auto_2255_3 = (0);
    for (;_auto_2255_3 < _auto_2254_2->count;++_auto_2255_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_4,(((RogueClassCmdCatch*)(_auto_2254_2->data->objects[_auto_2255_3]))));
      __trace.line = 1987;
      RogueCmdCatch__write_cpp__CPPWriter_Logical( c_4, writer_0, false );
    }
  }
  __trace.line = 1990;
  if (!!(THIS->escape_label))
  {
    __trace.line = 1991;
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1069] );
  }
}

RogueClassCmdTry* RogueCmdTry__init_object( RogueClassCmdTry* THIS )
{
  RogueDebugTrace __trace( "CmdTry.init_object()", "Cmd.rogue", 1045 );
  return (RogueClassCmdTry*)(THIS);
}

RogueClassCmdTry* RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( RogueClassCmdTry* THIS, RogueClassToken* _auto_749_0, RogueClassCmdStatementList* _auto_750_1, RogueCmdCatch_List* _auto_751_2 )
{
  RogueDebugTrace __trace( "CmdTry.init(Token,CmdStatementList,CmdCatch[])", "Cmd.rogue", 1050 );
  THIS->catches = _auto_751_2;
  THIS->statements = _auto_750_1;
  THIS->t = _auto_749_0;
  __trace.line = 1051;
  THIS->_control_type = 4;
  __trace.line = 1053;
  return (RogueClassCmdTry*)(THIS);
}

RogueClassCmdCatch* RogueCmdTry__add_catch__Token( RogueClassCmdTry* THIS, RogueClassToken* catch_t_0 )
{
  RogueDebugTrace __trace( "CmdTry.add_catch(Token)", "Cmd.rogue", 1066 );
  __trace.line = 1067;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_1,(((RogueCmdCatch__init__Token_Local_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), catch_t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  __trace.line = 1068;
  RogueCmdCatch_List__add__CmdCatch( ROGUE_ARG(THIS->catches), c_1 );
  __trace.line = 1069;
  return (RogueClassCmdCatch*)(c_1);
}

RogueString* RogueCmdCatch__type_name( RogueClassCmdCatch* THIS )
{
  RogueDebugTrace __trace( "CmdCatch.type_name()", "Cmd.rogue", 1087 );
  return (RogueString*)(Rogue_literal_strings[929]);
}

RogueClassCmdCatch* RogueCmdCatch__clone__CloneArgs( RogueClassCmdCatch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCatch.clone(CloneArgs)", "Cmd.rogue", 1095 );
  __trace.line = 1096;
  return (RogueClassCmdCatch*)(((RogueCmdCatch__init__Token_Local_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->error_var), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

void RogueCmdCatch__dispatch__Visitor( RogueClassCmdCatch* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCatch.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCatch( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCatch__resolve__Scope( RogueClassCmdCatch* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCatch.resolve(Scope)", "Cmd.rogue", 1098 );
  __trace.line = 1099;
  RogueType__organize__Scope( ROGUE_ARG(THIS->error_var->_type), scope_0 );
  __trace.line = 1100;
  if (!(((RogueType__instance_of__Type( ROGUE_ARG(THIS->error_var->_type), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    __trace.line = 1101;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[999] ))));
  }
  __trace.line = 1104;
  RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->error_var), true );
  __trace.line = 1105;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  __trace.line = 1106;
  RogueScope__pop_local( scope_0 );
  __trace.line = 1108;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCatch__write_cpp__CPPWriter_Logical( RogueClassCmdCatch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCatch.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 1997 );
  __trace.line = 1999;
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1078] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->error_var) )))) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(THIS->error_var->_type) )))), Rogue_literal_strings[612] );
  __trace.line = 2000;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 2001;
  writer_0->indent += 2;
  __trace.line = 2002;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  __trace.line = 2003;
  writer_0->indent -= 2;
  __trace.line = 2004;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
  __trace.line = 2005;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1079] );
}

RogueClassCmdCatch* RogueCmdCatch__init_object( RogueClassCmdCatch* THIS )
{
  RogueDebugTrace __trace( "CmdCatch.init_object()", "Cmd.rogue", 1087 );
  return (RogueClassCmdCatch*)(THIS);
}

RogueClassCmdCatch* RogueCmdCatch__init__Token_Local_CmdStatementList( RogueClassCmdCatch* THIS, RogueClassToken* _auto_752_0, RogueClassLocal* _auto_753_1, RogueClassCmdStatementList* _auto_754_2 )
{
  RogueDebugTrace __trace( "CmdCatch.init(Token,Local,CmdStatementList)", "Cmd.rogue", 1093 );
  THIS->statements = _auto_754_2;
  THIS->error_var = _auto_753_1;
  THIS->t = _auto_752_0;
  __trace.line = 1095;
  return (RogueClassCmdCatch*)(THIS);
}

RogueString* RogueCmdThrow__type_name( RogueClassCmdThrow* THIS )
{
  RogueDebugTrace __trace( "CmdThrow.type_name()", "Cmd.rogue", 1112 );
  return (RogueString*)(Rogue_literal_strings[930]);
}

RogueClassCmdThrow* RogueCmdThrow__clone__CloneArgs( RogueClassCmdThrow* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdThrow.clone(CloneArgs)", "Cmd.rogue", 1119 );
  __trace.line = 1120;
  return (RogueClassCmdThrow*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->expression), clone_args_0 ))) ))));
}

void RogueCmdThrow__dispatch__Visitor( RogueClassCmdThrow* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdThrow.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdThrow( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdThrow__resolve__Scope( RogueClassCmdThrow* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdThrow.resolve(Scope)", "Cmd.rogue", 1122 );
  __trace.line = 1123;
  THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
  __trace.line = 1124;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->expression) ))));
  __trace.line = 1125;
  RogueType__organize__Scope( expression_type_1, scope_0 );
  __trace.line = 1126;
  if (!(((RogueType__instance_of__Type( expression_type_1, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    __trace.line = 1127;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[978] ))));
  }
  __trace.line = 1129;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdThrow__write_cpp__CPPWriter_Logical( RogueClassCmdThrow* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdThrow.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2010 );
  __trace.line = 2011;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1080] );
  __trace.line = 2012;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->expression), writer_0, false );
  __trace.line = 2013;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdThrow* RogueCmdThrow__init_object( RogueClassCmdThrow* THIS )
{
  RogueDebugTrace __trace( "CmdThrow.init_object()", "Cmd.rogue", 1112 );
  return (RogueClassCmdThrow*)(THIS);
}

RogueClassCmdThrow* RogueCmdThrow__init__Token_Cmd( RogueClassCmdThrow* THIS, RogueClassToken* _auto_755_0, RogueClassCmd* _auto_756_1 )
{
  RogueDebugTrace __trace( "CmdThrow.init(Token,Cmd)", "Cmd.rogue", 1117 );
  THIS->expression = _auto_756_1;
  THIS->t = _auto_755_0;
  __trace.line = 1119;
  return (RogueClassCmdThrow*)(THIS);
}

RogueString* RogueCmdEscape__type_name( RogueClassCmdEscape* THIS )
{
  RogueDebugTrace __trace( "CmdEscape.type_name()", "Cmd.rogue", 1137 );
  return (RogueString*)(Rogue_literal_strings[931]);
}

RogueClassCmd* RogueCmdEscape__clone__CloneArgs( RogueClassCmdEscape* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdEscape.clone(CloneArgs)", "Cmd.rogue", 1145 );
  __trace.line = 1146;
  if (!!(THIS->target_cmd->task_escape_section))
  {
    __trace.line = 1147;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 1148;
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_escape_section) ))));
  }
  else
  {
    __trace.line = 1150;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    __trace.line = 1151;
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    __trace.line = 1152;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), new_target_2 ))))));
  }
}

void RogueCmdEscape__dispatch__Visitor( RogueClassCmdEscape* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdEscape.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdEscape( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdEscape__resolve__Scope( RogueClassCmdEscape* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdEscape.resolve(Scope)", "Cmd.rogue", 1155 );
  __trace.line = 1156;
  RogueInt32 i_1 = (scope_0->control_stack->count);
  __trace.line = 1157;
  while (i_1 > 0)
  {
    __trace.line = 1158;
    --i_1;
    __trace.line = 1159;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    __trace.line = 1160;
    if (cmd_2->_control_type == THIS->_control_type)
    {
      __trace.line = 1161;
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      __trace.line = 1162;
      if (!(!!(cmd_2->escape_label)))
      {
        cmd_2->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      __trace.line = 1163;
      THIS->target_cmd = cmd_2;
      __trace.line = 1164;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  __trace.line = 1168;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1001] ))));
}

void RogueCmdEscape__write_cpp__CPPWriter_Logical( RogueClassCmdEscape* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdEscape.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2018 );
  __trace.line = 2019;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1074], ROGUE_ARG(THIS->target_cmd->escape_label) )))) );
}

RogueClassCmdEscape* RogueCmdEscape__init_object( RogueClassCmdEscape* THIS )
{
  RogueDebugTrace __trace( "CmdEscape.init_object()", "Cmd.rogue", 1137 );
  return (RogueClassCmdEscape*)(THIS);
}

RogueClassCmdEscape* RogueCmdEscape__init__Token_Int32_CmdControlStructure( RogueClassCmdEscape* THIS, RogueClassToken* _auto_757_0, RogueInt32 _auto_758_1, RogueClassCmdControlStructure* _auto_759_2 )
{
  RogueDebugTrace __trace( "CmdEscape.init(Token,Int32,CmdControlStructure)", "Cmd.rogue", 1143 );
  THIS->target_cmd = _auto_759_2;
  THIS->_control_type = _auto_758_1;
  THIS->t = _auto_757_0;
  __trace.line = 1145;
  return (RogueClassCmdEscape*)(THIS);
}

RogueString* RogueCmdNextIteration__type_name( RogueClassCmdNextIteration* THIS )
{
  RogueDebugTrace __trace( "CmdNextIteration.type_name()", "Cmd.rogue", 1173 );
  return (RogueString*)(Rogue_literal_strings[932]);
}

RogueClassCmd* RogueCmdNextIteration__clone__CloneArgs( RogueClassCmdNextIteration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNextIteration.clone(CloneArgs)", "Cmd.rogue", 1180 );
  __trace.line = 1181;
  if (!!(THIS->target_cmd->task_upkeep_section))
  {
    __trace.line = 1182;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 1183;
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_upkeep_section) ))));
  }
  else
  {
    __trace.line = 1185;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    __trace.line = 1186;
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    __trace.line = 1187;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), ROGUE_ARG(THIS->t), new_target_2 ))))));
  }
}

void RogueCmdNextIteration__dispatch__Visitor( RogueClassCmdNextIteration* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNextIteration.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdNextIteration( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdNextIteration__resolve__Scope( RogueClassCmdNextIteration* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNextIteration.resolve(Scope)", "Cmd.rogue", 1190 );
  __trace.line = 1191;
  RogueInt32 i_1 = (scope_0->control_stack->count);
  __trace.line = 1192;
  while (i_1 > 0)
  {
    __trace.line = 1193;
    --i_1;
    __trace.line = 1194;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    __trace.line = 1195;
    if (cmd_2->_control_type >= 6)
    {
      __trace.line = 1196;
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      __trace.line = 1197;
      if (!(!!(cmd_2->upkeep_label)))
      {
        cmd_2->upkeep_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      __trace.line = 1198;
      THIS->target_cmd = cmd_2;
      __trace.line = 1199;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  __trace.line = 1203;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1002] ))));
}

void RogueCmdNextIteration__write_cpp__CPPWriter_Logical( RogueClassCmdNextIteration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdNextIteration.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2026 );
  __trace.line = 2027;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1081] );
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init_object( RogueClassCmdNextIteration* THIS )
{
  RogueDebugTrace __trace( "CmdNextIteration.init_object()", "Cmd.rogue", 1173 );
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init__Token_CmdControlStructure( RogueClassCmdNextIteration* THIS, RogueClassToken* _auto_760_0, RogueClassCmdControlStructure* _auto_761_1 )
{
  RogueDebugTrace __trace( "CmdNextIteration.init(Token,CmdControlStructure)", "Cmd.rogue", 1178 );
  THIS->target_cmd = _auto_761_1;
  THIS->t = _auto_760_0;
  __trace.line = 1180;
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueString* RogueCmdNecessary__type_name( RogueClassCmdNecessary* THIS )
{
  RogueDebugTrace __trace( "CmdNecessary.type_name()", "Cmd.rogue", 1208 );
  return (RogueString*)(Rogue_literal_strings[933]);
}

RogueClassCmd* RogueCmdNecessary__clone__CloneArgs( RogueClassCmdNecessary* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNecessary.clone(CloneArgs)", "Cmd.rogue", 1216 );
  __trace.line = 1217;
  if (!!(THIS->target_cmd->unsatisfied_section))
  {
    __trace.line = 1218;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 1219;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->unsatisfied_section) )))));
    __trace.line = 1220;
    if (!!(THIS->condition))
    {
      __trace.line = 1221;
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) )))))))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      __trace.line = 1223;
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    __trace.line = 1226;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    __trace.line = 1227;
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    __trace.line = 1228;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

void RogueCmdNecessary__dispatch__Visitor( RogueClassCmdNecessary* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNecessary.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdNecessary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdNecessary__resolve__Scope( RogueClassCmdNecessary* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNecessary.resolve(Scope)", "Cmd.rogue", 1232 );
  __trace.line = 1233;
  if (!!(THIS->condition))
  {
    THIS->condition = (call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  __trace.line = 1235;
  RogueInt32 i_1 = (scope_0->control_stack->count);
  __trace.line = 1236;
  while (i_1 > 0)
  {
    __trace.line = 1237;
    --i_1;
    __trace.line = 1238;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    __trace.line = 1239;
    if (cmd_2->_control_type == 1)
    {
      __trace.line = 1240;
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      __trace.line = 1241;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      __trace.line = 1242;
      if (!(!!(cmd_contingent_3->unsatisfied_label)))
      {
        cmd_contingent_3->unsatisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      __trace.line = 1243;
      THIS->target_cmd = cmd_contingent_3;
      __trace.line = 1244;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  __trace.line = 1248;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1003] ))));
}

void RogueCmdNecessary__write_cpp__CPPWriter_Logical( RogueClassCmdNecessary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdNecessary.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2034 );
  __trace.line = 2035;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1082] );
  __trace.line = 2036;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
  __trace.line = 2037;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1083] )))), ROGUE_ARG(THIS->target_cmd->unsatisfied_label) );
}

RogueClassCmdNecessary* RogueCmdNecessary__init_object( RogueClassCmdNecessary* THIS )
{
  RogueDebugTrace __trace( "CmdNecessary.init_object()", "Cmd.rogue", 1208 );
  return (RogueClassCmdNecessary*)(THIS);
}

RogueClassCmdNecessary* RogueCmdNecessary__init__Token_Cmd_CmdContingent( RogueClassCmdNecessary* THIS, RogueClassToken* _auto_762_0, RogueClassCmd* _auto_763_1, RogueClassCmdContingent* _auto_764_2 )
{
  RogueDebugTrace __trace( "CmdNecessary.init(Token,Cmd,CmdContingent)", "Cmd.rogue", 1214 );
  THIS->target_cmd = _auto_764_2;
  THIS->condition = _auto_763_1;
  THIS->t = _auto_762_0;
  __trace.line = 1216;
  return (RogueClassCmdNecessary*)(THIS);
}

RogueString* RogueCmdSufficient__type_name( RogueClassCmdSufficient* THIS )
{
  RogueDebugTrace __trace( "CmdSufficient.type_name()", "Cmd.rogue", 1253 );
  return (RogueString*)(Rogue_literal_strings[934]);
}

RogueClassCmd* RogueCmdSufficient__clone__CloneArgs( RogueClassCmdSufficient* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdSufficient.clone(CloneArgs)", "Cmd.rogue", 1261 );
  __trace.line = 1262;
  if (!!(THIS->target_cmd->satisfied_section))
  {
    __trace.line = 1263;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 1264;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->satisfied_section) )))));
    __trace.line = 1265;
    if (!!(THIS->condition))
    {
      __trace.line = 1266;
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      __trace.line = 1268;
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    __trace.line = 1271;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    __trace.line = 1272;
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    __trace.line = 1273;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

void RogueCmdSufficient__dispatch__Visitor( RogueClassCmdSufficient* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdSufficient.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdSufficient( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdSufficient__resolve__Scope( RogueClassCmdSufficient* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSufficient.resolve(Scope)", "Cmd.rogue", 1277 );
  __trace.line = 1278;
  if (!!(THIS->condition))
  {
    THIS->condition = (call_ROGUEM81( 31, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  __trace.line = 1280;
  RogueInt32 i_1 = (scope_0->control_stack->count);
  __trace.line = 1281;
  while (i_1 > 0)
  {
    __trace.line = 1282;
    --i_1;
    __trace.line = 1283;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->objects[i_1]))));
    __trace.line = 1284;
    if (cmd_2->_control_type == 1)
    {
      __trace.line = 1285;
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      __trace.line = 1286;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      __trace.line = 1287;
      if (!(!!(cmd_contingent_3->satisfied_label)))
      {
        cmd_contingent_3->satisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      __trace.line = 1288;
      THIS->target_cmd = cmd_contingent_3;
      __trace.line = 1289;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  __trace.line = 1293;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1003] ))));
}

void RogueCmdSufficient__write_cpp__CPPWriter_Logical( RogueClassCmdSufficient* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdSufficient.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2043 );
  __trace.line = 2044;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1070] );
  __trace.line = 2045;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->condition), writer_0, false );
  __trace.line = 2046;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1084] )))), ROGUE_ARG(THIS->target_cmd->satisfied_label) );
}

RogueClassCmdSufficient* RogueCmdSufficient__init_object( RogueClassCmdSufficient* THIS )
{
  RogueDebugTrace __trace( "CmdSufficient.init_object()", "Cmd.rogue", 1253 );
  return (RogueClassCmdSufficient*)(THIS);
}

RogueClassCmdSufficient* RogueCmdSufficient__init__Token_Cmd_CmdContingent( RogueClassCmdSufficient* THIS, RogueClassToken* _auto_765_0, RogueClassCmd* _auto_766_1, RogueClassCmdContingent* _auto_767_2 )
{
  RogueDebugTrace __trace( "CmdSufficient.init(Token,Cmd,CmdContingent)", "Cmd.rogue", 1259 );
  THIS->target_cmd = _auto_767_2;
  THIS->condition = _auto_766_1;
  THIS->t = _auto_765_0;
  __trace.line = 1261;
  return (RogueClassCmdSufficient*)(THIS);
}

RogueString* RogueCmdLiteral__type_name( RogueClassCmdLiteral* THIS )
{
  RogueDebugTrace __trace( "CmdLiteral.type_name()", "Cmd.rogue", 1300 );
  return (RogueString*)(Rogue_literal_strings[935]);
}

void RogueCmdLiteral__dispatch__Visitor( RogueClassCmdLiteral* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteral.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdLiteral__implicit_type__Scope( RogueClassCmdLiteral* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteral.implicit_type(Scope)", "Cmd.rogue", 1302 );
  __trace.line = 1303;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)THIS)) )));
}

RogueLogical RogueCmdLiteral__is_literal( RogueClassCmdLiteral* THIS )
{
  RogueDebugTrace __trace( "CmdLiteral.is_literal()", "Cmd.rogue", 1305 );
  __trace.line = 1306;
  return (RogueLogical)(true);
}

RogueClassCmdLiteral* RogueCmdLiteral__init_object( RogueClassCmdLiteral* THIS )
{
  RogueDebugTrace __trace( "CmdLiteral.init_object()", "Cmd.rogue", 1300 );
  return (RogueClassCmdLiteral*)(THIS);
}

RogueString* RogueCmdLiteralString__type_name( RogueClassCmdLiteralString* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralString.type_name()", "Cmd.rogue", 1460 );
  return (RogueString*)(Rogue_literal_strings[1164]);
}

RogueClassCmd* RogueCmdLiteralString__clone__CloneArgs( RogueClassCmdLiteralString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralString.clone(CloneArgs)", "Cmd.rogue", 1468 );
  __trace.line = 1469;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value), ROGUE_ARG(THIS->index) ))))));
}

void RogueCmdLiteralString__dispatch__Visitor( RogueClassCmdLiteralString* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralString.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteralString( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdLiteralString__resolve__Scope( RogueClassCmdLiteralString* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralString.resolve(Scope)", "Cmd.rogue", 1471 );
  __trace.line = 1472;
  RogueType__resolve( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) );
  __trace.line = 1473;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralString__type( RogueClassCmdLiteralString* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralString.type()", "Cmd.rogue", 1475 );
  __trace.line = 1476;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

void RogueCmdLiteralString__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralString* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralString.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2114 );
  __trace.line = 2115;
  if (!!(THIS->value))
  {
    __trace.line = 2116;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[699] )))), ROGUE_ARG(THIS->index) )))), Rogue_literal_strings[51] );
  }
  else
  {
    __trace.line = 2118;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[547] );
  }
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init_object( RogueClassCmdLiteralString* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralString.init_object()", "Cmd.rogue", 1460 );
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init__Token_String_Int32( RogueClassCmdLiteralString* THIS, RogueClassToken* _auto_768_0, RogueString* _auto_769_1, RogueInt32 _auto_770_2 )
{
  RogueDebugTrace __trace( "CmdLiteralString.init(Token,String,Int32)", "Cmd.rogue", 1466 );
  THIS->index = _auto_770_2;
  THIS->value = _auto_769_1;
  THIS->t = _auto_768_0;
  __trace.line = 1468;
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueString* RogueCmdCreateObject__type_name( RogueClassCmdCreateObject* THIS )
{
  RogueDebugTrace __trace( "CmdCreateObject.type_name()", "Cmd.rogue", 2001 );
  return (RogueString*)(Rogue_literal_strings[936]);
}

RogueClassCmd* RogueCmdCreateObject__clone__CloneArgs( RogueClassCmdCreateObject* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateObject.clone(CloneArgs)", "Cmd.rogue", 2008 );
  __trace.line = 2009;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdCreateObject__dispatch__Visitor( RogueClassCmdCreateObject* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateObject.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCreateObject( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateObject__resolve__Scope( RogueClassCmdCreateObject* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateObject.resolve(Scope)", "Cmd.rogue", 2011 );
  __trace.line = 2012;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  __trace.line = 2013;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateObject__type( RogueClassCmdCreateObject* THIS )
{
  RogueDebugTrace __trace( "CmdCreateObject.type()", "Cmd.rogue", 2015 );
  __trace.line = 2016;
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateObject__write_cpp__CPPWriter_Logical( RogueClassCmdCreateObject* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCreateObject.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2131 );
  __trace.line = 2132;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1085] )))), ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[217] );
  }
  __trace.line = 2135;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1086] )))), ROGUE_ARG(((Rogue_CmdCreateObject__type( ROGUE_ARG(THIS) )))->cpp_name) )))), Rogue_literal_strings[34] );
  __trace.line = 2137;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init_object( RogueClassCmdCreateObject* THIS )
{
  RogueDebugTrace __trace( "CmdCreateObject.init_object()", "Cmd.rogue", 2001 );
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init__Token_Type( RogueClassCmdCreateObject* THIS, RogueClassToken* _auto_771_0, RogueClassType* _auto_772_1 )
{
  RogueDebugTrace __trace( "CmdCreateObject.init(Token,Type)", "Cmd.rogue", 2006 );
  THIS->_of_type = _auto_772_1;
  THIS->t = _auto_771_0;
  __trace.line = 2008;
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueString* RogueCmdCreateCompound__type_name( RogueClassCmdCreateCompound* THIS )
{
  RogueDebugTrace __trace( "CmdCreateCompound.type_name()", "Cmd.rogue", 2020 );
  return (RogueString*)(Rogue_literal_strings[937]);
}

RogueClassCmd* RogueCmdCreateCompound__clone__CloneArgs( RogueClassCmdCreateCompound* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateCompound.clone(CloneArgs)", "Cmd.rogue", 2028 );
  __trace.line = 2029;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCreateCompound__dispatch__Visitor( RogueClassCmdCreateCompound* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateCompound.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCreateCompound( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateCompound__resolve__Scope( RogueClassCmdCreateCompound* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateCompound.resolve(Scope)", "Cmd.rogue", 2031 );
  __trace.line = 2032;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  __trace.line = 2033;
  if (((void*)THIS->args) == ((void*)NULL))
  {
    THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  }
  __trace.line = 2034;
  while (THIS->args->count < THIS->_of_type->property_list->count)
  {
    __trace.line = 2035;
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_1,(((RogueClassProperty*)(THIS->_of_type->property_list->data->objects[THIS->args->count]))));
    __trace.line = 2036;
    if (!!(p_1->initial_value))
    {
      __trace.line = 2037;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(p_1->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) );
    }
    else
    {
      __trace.line = 2039;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG(((RogueType__create_default_value__Token( ROGUE_ARG(p_1->_type), ROGUE_ARG(THIS->t) )))) );
    }
  }
  __trace.line = 2042;
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  __trace.line = 2043;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateCompound__type( RogueClassCmdCreateCompound* THIS )
{
  RogueDebugTrace __trace( "CmdCreateCompound.type()", "Cmd.rogue", 2045 );
  __trace.line = 2046;
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateCompound__write_cpp__CPPWriter_Logical( RogueClassCmdCreateCompound* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCreateCompound.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2143 );
  __trace.line = 2144;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[94] );
  __trace.line = 2145;
  if (!!(THIS->args->count))
  {
    __trace.line = 2146;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
    __trace.line = 2147;
    RogueLogical first_2 = (true);
    __trace.line = 2148;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2256_3,(THIS->args));
      RogueInt32 _auto_2257_4 = (0);
      for (;_auto_2257_4 < _auto_2256_3->count;++_auto_2257_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2256_3->data->objects[_auto_2257_4]))));
        __trace.line = 2149;
        if (first_2)
        {
          first_2 = ((RogueLogical)false);
        }
        else
        {
          __trace.line = 2150;
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
        }
        __trace.line = 2151;
        call_ROGUEM104( 37, arg_5, writer_0, false );
      }
    }
    __trace.line = 2153;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
  }
  __trace.line = 2155;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init_object( RogueClassCmdCreateCompound* THIS )
{
  RogueDebugTrace __trace( "CmdCreateCompound.init_object()", "Cmd.rogue", 2020 );
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init__Token_Type_CmdArgs( RogueClassCmdCreateCompound* THIS, RogueClassToken* _auto_773_0, RogueClassType* _auto_774_1, RogueClassCmdArgs* _auto_775_2 )
{
  RogueDebugTrace __trace( "CmdCreateCompound.init(Token,Type,CmdArgs)", "Cmd.rogue", 2026 );
  THIS->args = _auto_775_2;
  THIS->_of_type = _auto_774_1;
  THIS->t = _auto_773_0;
  __trace.line = 2028;
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueString* RogueCmdThisContext__type_name( RogueClassCmdThisContext* THIS )
{
  RogueDebugTrace __trace( "CmdThisContext.type_name()", "Cmd.rogue", 2072 );
  return (RogueString*)(Rogue_literal_strings[938]);
}

RogueClassCmd* RogueCmdThisContext__clone__CloneArgs( RogueClassCmdThisContext* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdThisContext.clone(CloneArgs)", "Cmd.rogue", 2079 );
  __trace.line = 2080;
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  __trace.line = 2081;
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  __trace.line = 2083;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 2084;
  if (!!(task_args_2))
  {
    __trace.line = 2085;
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    __trace.line = 2087;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))));
  }
}

void RogueCmdThisContext__dispatch__Visitor( RogueClassCmdThisContext* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdThisContext.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdThisContext( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdThisContext__implicit_type__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdThisContext.implicit_type(Scope)", "Cmd.rogue", 2090 );
  __trace.line = 2091;
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__require_type_context( RogueClassCmdThisContext* THIS )
{
  RogueDebugTrace __trace( "CmdThisContext.require_type_context()", "Cmd.rogue", 2093 );
}

RogueClassCmd* RogueCmdThisContext__resolve__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdThisContext.resolve(Scope)", "Cmd.rogue", 2096 );
  __trace.line = 2097;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  __trace.line = 2098;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdThisContext__type( RogueClassCmdThisContext* THIS )
{
  RogueDebugTrace __trace( "CmdThisContext.type()", "Cmd.rogue", 2100 );
  __trace.line = 2101;
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__write_cpp__CPPWriter_Logical( RogueClassCmdThisContext* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdThisContext.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2165 );
  __trace.line = 2166;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[570] );
}

RogueClassCmdThisContext* RogueCmdThisContext__init_object( RogueClassCmdThisContext* THIS )
{
  RogueDebugTrace __trace( "CmdThisContext.init_object()", "Cmd.rogue", 2072 );
  return (RogueClassCmdThisContext*)(THIS);
}

RogueClassCmdThisContext* RogueCmdThisContext__init__Token_Type( RogueClassCmdThisContext* THIS, RogueClassToken* _auto_776_0, RogueClassType* _auto_777_1 )
{
  RogueDebugTrace __trace( "CmdThisContext.init(Token,Type)", "Cmd.rogue", 2077 );
  THIS->_this_type = _auto_777_1;
  THIS->t = _auto_776_0;
  __trace.line = 2079;
  return (RogueClassCmdThisContext*)(THIS);
}

RogueString* RogueCmdReadSingleton__type_name( RogueClassCmdReadSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdReadSingleton.type_name()", "Cmd.rogue", 2132 );
  return (RogueString*)(Rogue_literal_strings[939]);
}

RogueClassCmd* RogueCmdReadSingleton__clone__CloneArgs( RogueClassCmdReadSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadSingleton.clone(CloneArgs)", "Cmd.rogue", 2139 );
  __trace.line = 2140;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdReadSingleton__dispatch__Visitor( RogueClassCmdReadSingleton* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadSingleton.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadSingleton( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdReadSingleton__require_type_context( RogueClassCmdReadSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdReadSingleton.require_type_context()", "Cmd.rogue", 2142 );
}

RogueClassCmd* RogueCmdReadSingleton__resolve__Scope( RogueClassCmdReadSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadSingleton.resolve(Scope)", "Cmd.rogue", 2145 );
  __trace.line = 2146;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  __trace.line = 2147;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadSingleton__type( RogueClassCmdReadSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdReadSingleton.type()", "Cmd.rogue", 2149 );
  __trace.line = 2150;
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdReadSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdReadSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadSingleton.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2171 );
  __trace.line = 2172;
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    __trace.line = 2173;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1087] )))) )))) ))));
  }
  __trace.line = 2175;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->_of_type->cpp_class_name) );
  __trace.line = 2176;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[250] );
  }
  __trace.line = 2177;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1088] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[566] );
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init_object( RogueClassCmdReadSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdReadSingleton.init_object()", "Cmd.rogue", 2132 );
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init__Token_Type( RogueClassCmdReadSingleton* THIS, RogueClassToken* _auto_778_0, RogueClassType* _auto_779_1 )
{
  RogueDebugTrace __trace( "CmdReadSingleton.init(Token,Type)", "Cmd.rogue", 2137 );
  THIS->_of_type = _auto_779_1;
  THIS->t = _auto_778_0;
  __trace.line = 2139;
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueString* RogueCmdWriteSingleton__type_name( RogueClassCmdWriteSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.type_name()", "Cmd.rogue", 2154 );
  return (RogueString*)(Rogue_literal_strings[1262]);
}

RogueClassCmd* RogueCmdWriteSingleton__clone__CloneArgs( RogueClassCmdWriteSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.clone(CloneArgs)", "Cmd.rogue", 2162 );
  __trace.line = 2163;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteSingleton__dispatch__Visitor( RogueClassCmdWriteSingleton* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWriteSingleton( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteSingleton__resolve__Scope( RogueClassCmdWriteSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.resolve(Scope)", "Cmd.rogue", 2165 );
  __trace.line = 2166;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  __trace.line = 2167;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  __trace.line = 2168;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdWriteSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2182 );
  __trace.line = 2183;
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    __trace.line = 2184;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1087] )))) )))) ))));
  }
  __trace.line = 2186;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[538] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[1089] );
  __trace.line = 2187;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  __trace.line = 2188;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init_object( RogueClassCmdWriteSingleton* THIS )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.init_object()", "Cmd.rogue", 2154 );
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init__Token_Type_Cmd( RogueClassCmdWriteSingleton* THIS, RogueClassToken* _auto_780_0, RogueClassType* _auto_781_1, RogueClassCmd* _auto_782_2 )
{
  RogueDebugTrace __trace( "CmdWriteSingleton.init(Token,Type,Cmd)", "Cmd.rogue", 2160 );
  THIS->new_value = _auto_782_2;
  THIS->_of_type = _auto_781_1;
  THIS->t = _auto_780_0;
  __trace.line = 2162;
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueString* RogueCmdReadLocal__type_name( RogueClassCmdReadLocal* THIS )
{
  RogueDebugTrace __trace( "CmdReadLocal.type_name()", "Cmd.rogue", 2173 );
  return (RogueString*)(Rogue_literal_strings[940]);
}

RogueClassCmd* RogueCmdReadLocal__clone__CloneArgs( RogueClassCmdReadLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadLocal.clone(CloneArgs)", "Cmd.rogue", 2180 );
  __trace.line = 2181;
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  __trace.line = 2182;
  if (!!(macro_args_1))
  {
    __trace.line = 2183;
    return (RogueClassCmd*)(((RogueMacroArgs__inline_read_local__CmdReadLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    __trace.line = 2185;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 2186;
    if (!!(task_args_2))
    {
      __trace.line = 2187;
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_read__Token_Local( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))));
    }
  }
  __trace.line = 2191;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))))));
}

void RogueCmdReadLocal__dispatch__Visitor( RogueClassCmdReadLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadLocal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadLocal__resolve__Scope( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadLocal.resolve(Scope)", "Cmd.rogue", 2193 );
  __trace.line = 2195;
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  __trace.line = 2196;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadLocal__resolve_adjust__Scope_Int32( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdReadLocal.resolve_adjust(Scope,Int32)", "Cmd.rogue", 2198 );
  __trace.line = 2199;
  return (RogueClassCmd*)(((RogueCmdAdjustLocal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadLocal__type( RogueClassCmdReadLocal* THIS )
{
  RogueDebugTrace __trace( "CmdReadLocal.type()", "Cmd.rogue", 2201 );
  __trace.line = 2202;
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdReadLocal__write_cpp__CPPWriter_Logical( RogueClassCmdReadLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadLocal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2193 );
  __trace.line = 2194;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init_object( RogueClassCmdReadLocal* THIS )
{
  RogueDebugTrace __trace( "CmdReadLocal.init_object()", "Cmd.rogue", 2173 );
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init__Token_Local( RogueClassCmdReadLocal* THIS, RogueClassToken* _auto_783_0, RogueClassLocal* _auto_784_1 )
{
  RogueDebugTrace __trace( "CmdReadLocal.init(Token,Local)", "Cmd.rogue", 2178 );
  THIS->local_info = _auto_784_1;
  THIS->t = _auto_783_0;
  __trace.line = 2180;
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueString* RogueCmdWriteLocal__type_name( RogueClassCmdWriteLocal* THIS )
{
  RogueDebugTrace __trace( "CmdWriteLocal.type_name()", "Cmd.rogue", 2207 );
  return (RogueString*)(Rogue_literal_strings[1263]);
}

RogueClassCmd* RogueCmdWriteLocal__clone__CloneArgs( RogueClassCmdWriteLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWriteLocal.clone(CloneArgs)", "Cmd.rogue", 2215 );
  __trace.line = 2216;
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  __trace.line = 2217;
  if (!!(macro_args_1))
  {
    __trace.line = 2218;
    return (RogueClassCmd*)(((RogueMacroArgs__inline_write_local__CmdWriteLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    __trace.line = 2220;
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    __trace.line = 2221;
    if (!!(task_args_2))
    {
      __trace.line = 2222;
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_write__Token_Local_Cmd( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))));
    }
  }
  __trace.line = 2225;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->new_value), clone_args_0 )))) ))))));
}

void RogueCmdWriteLocal__dispatch__Visitor( RogueClassCmdWriteLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWriteLocal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWriteLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteLocal__resolve__Scope( RogueClassCmdWriteLocal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWriteLocal.resolve(Scope)", "Cmd.rogue", 2227 );
  __trace.line = 2228;
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  __trace.line = 2229;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ));
  __trace.line = 2230;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 2231;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteLocal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdWriteLocal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2200 );
  __trace.line = 2201;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[618] );
  __trace.line = 2202;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[34] );
  __trace.line = 2203;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  __trace.line = 2204;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init_object( RogueClassCmdWriteLocal* THIS )
{
  RogueDebugTrace __trace( "CmdWriteLocal.init_object()", "Cmd.rogue", 2207 );
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init__Token_Local_Cmd( RogueClassCmdWriteLocal* THIS, RogueClassToken* _auto_785_0, RogueClassLocal* _auto_786_1, RogueClassCmd* _auto_787_2 )
{
  RogueDebugTrace __trace( "CmdWriteLocal.init(Token,Local,Cmd)", "Cmd.rogue", 2213 );
  THIS->new_value = _auto_787_2;
  THIS->local_info = _auto_786_1;
  THIS->t = _auto_785_0;
  __trace.line = 2215;
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueString* RogueCmdReadGlobal__type_name( RogueClassCmdReadGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdReadGlobal.type_name()", "Cmd.rogue", 2236 );
  return (RogueString*)(Rogue_literal_strings[941]);
}

RogueClassCmd* RogueCmdReadGlobal__clone__CloneArgs( RogueClassCmdReadGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.clone(CloneArgs)", "Cmd.rogue", 2243 );
  __trace.line = 2244;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) ))))));
}

void RogueCmdReadGlobal__dispatch__Visitor( RogueClassCmdReadGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadGlobal__resolve__Scope( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.resolve(Scope)", "Cmd.rogue", 2246 );
  __trace.line = 2247;
  RogueType__resolve( ROGUE_ARG(THIS->global_info->type_context) );
  __trace.line = 2248;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadGlobal__resolve_adjust__Scope_Int32( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.resolve_adjust(Scope,Int32)", "Cmd.rogue", 2250 );
  __trace.line = 2251;
  return (RogueClassCmd*)(((RogueCmdAdjustGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadGlobal__type( RogueClassCmdReadGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdReadGlobal.type()", "Cmd.rogue", 2253 );
  __trace.line = 2254;
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdReadGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdReadGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2209 );
  __trace.line = 2210;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
  __trace.line = 2212;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[54] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[461] );
  __trace.line = 2214;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
  __trace.line = 2215;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init_object( RogueClassCmdReadGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdReadGlobal.init_object()", "Cmd.rogue", 2236 );
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init__Token_Property( RogueClassCmdReadGlobal* THIS, RogueClassToken* _auto_788_0, RogueClassProperty* _auto_789_1 )
{
  RogueDebugTrace __trace( "CmdReadGlobal.init(Token,Property)", "Cmd.rogue", 2241 );
  THIS->global_info = _auto_789_1;
  THIS->t = _auto_788_0;
  __trace.line = 2243;
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueString* RogueCmdWriteGlobal__type_name( RogueClassCmdWriteGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.type_name()", "Cmd.rogue", 2258 );
  return (RogueString*)(Rogue_literal_strings[942]);
}

RogueClassCmd* RogueCmdWriteGlobal__clone__CloneArgs( RogueClassCmdWriteGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.clone(CloneArgs)", "Cmd.rogue", 2266 );
  __trace.line = 2267;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteGlobal__dispatch__Visitor( RogueClassCmdWriteGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWriteGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteGlobal__resolve__Scope( RogueClassCmdWriteGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.resolve(Scope)", "Cmd.rogue", 2269 );
  __trace.line = 2270;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 2271;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2221 );
  __trace.line = 2222;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[54] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[461] );
  __trace.line = 2224;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[618] );
  __trace.line = 2226;
  if (((void*)THIS->global_info->_type) == ((void*)(call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))))
  {
    __trace.line = 2227;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    __trace.line = 2229;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->global_info->_type) )))), Rogue_literal_strings[34] );
    __trace.line = 2230;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
    __trace.line = 2231;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init_object( RogueClassCmdWriteGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.init_object()", "Cmd.rogue", 2258 );
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init__Token_Property_Cmd( RogueClassCmdWriteGlobal* THIS, RogueClassToken* _auto_790_0, RogueClassProperty* _auto_791_1, RogueClassCmd* _auto_792_2 )
{
  RogueDebugTrace __trace( "CmdWriteGlobal.init(Token,Property,Cmd)", "Cmd.rogue", 2264 );
  THIS->new_value = _auto_792_2;
  THIS->global_info = _auto_791_1;
  THIS->t = _auto_790_0;
  __trace.line = 2266;
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueString* RogueCmdReadProperty__type_name( RogueClassCmdReadProperty* THIS )
{
  RogueDebugTrace __trace( "CmdReadProperty.type_name()", "Cmd.rogue", 2275 );
  return (RogueString*)(Rogue_literal_strings[943]);
}

RogueClassCmd* RogueCmdReadProperty__clone__CloneArgs( RogueClassCmdReadProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadProperty.clone(CloneArgs)", "Cmd.rogue", 2283 );
  __trace.line = 2284;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info) ))))));
}

void RogueCmdReadProperty__dispatch__Visitor( RogueClassCmdReadProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadProperty.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadProperty__resolve__Scope( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadProperty.resolve(Scope)", "Cmd.rogue", 2286 );
  __trace.line = 2287;
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ))) )));
  __trace.line = 2288;
  if (((RogueType__is_aspect( ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) ))))
  {
    __trace.line = 2289;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[509], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[510] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[209] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->_type->name) )))) )))), Rogue_literal_strings[511] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[45] )))) )))) )))) ))));
  }
  __trace.line = 2292;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadProperty__resolve_adjust__Scope_Int32( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdReadProperty.resolve_adjust(Scope,Int32)", "Cmd.rogue", 2294 );
  __trace.line = 2295;
  return (RogueClassCmd*)(((RogueCmdAdjustProperty__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadProperty__type( RogueClassCmdReadProperty* THIS )
{
  RogueDebugTrace __trace( "CmdReadProperty.type()", "Cmd.rogue", 2297 );
  __trace.line = 2298;
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdReadProperty__write_cpp__CPPWriter_Logical( RogueClassCmdReadProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadProperty.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2237 );
  __trace.line = 2238;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
  __trace.line = 2239;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
  __trace.line = 2240;
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) );
  __trace.line = 2241;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
  __trace.line = 2242;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init_object( RogueClassCmdReadProperty* THIS )
{
  RogueDebugTrace __trace( "CmdReadProperty.init_object()", "Cmd.rogue", 2275 );
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init__Token_Cmd_Property( RogueClassCmdReadProperty* THIS, RogueClassToken* _auto_793_0, RogueClassCmd* _auto_794_1, RogueClassProperty* _auto_795_2 )
{
  RogueDebugTrace __trace( "CmdReadProperty.init(Token,Cmd,Property)", "Cmd.rogue", 2281 );
  THIS->property_info = _auto_795_2;
  THIS->context = _auto_794_1;
  THIS->t = _auto_793_0;
  __trace.line = 2283;
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueString* RogueCmdWriteProperty__type_name( RogueClassCmdWriteProperty* THIS )
{
  RogueDebugTrace __trace( "CmdWriteProperty.type_name()", "Cmd.rogue", 2302 );
  return (RogueString*)(Rogue_literal_strings[944]);
}

RogueClassCmd* RogueCmdWriteProperty__clone__CloneArgs( RogueClassCmdWriteProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWriteProperty.clone(CloneArgs)", "Cmd.rogue", 2311 );
  __trace.line = 2312;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteProperty__dispatch__Visitor( RogueClassCmdWriteProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWriteProperty.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWriteProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteProperty__resolve__Scope( RogueClassCmdWriteProperty* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWriteProperty.resolve(Scope)", "Cmd.rogue", 2314 );
  __trace.line = 2315;
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ))) )));
  __trace.line = 2317;
  if (((RogueType__is_aspect( ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) ))))
  {
    __trace.line = 2318;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1004], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1005] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1006] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1007] )))) )))) )))) ))));
  }
  __trace.line = 2322;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->property_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 2323;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteProperty__write_cpp__CPPWriter_Logical( RogueClassCmdWriteProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdWriteProperty.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2247 );
  __trace.line = 2248;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
  __trace.line = 2249;
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) );
  __trace.line = 2250;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[618] );
  __trace.line = 2252;
  if (((void*)THIS->property_info->_type) == ((void*)(call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))))
  {
    __trace.line = 2253;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    __trace.line = 2255;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->property_info->_type) )))), Rogue_literal_strings[34] );
    __trace.line = 2256;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
    __trace.line = 2257;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init_object( RogueClassCmdWriteProperty* THIS )
{
  RogueDebugTrace __trace( "CmdWriteProperty.init_object()", "Cmd.rogue", 2302 );
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( RogueClassCmdWriteProperty* THIS, RogueClassToken* _auto_796_0, RogueClassCmd* _auto_797_1, RogueClassProperty* _auto_798_2, RogueClassCmd* _auto_799_3 )
{
  RogueDebugTrace __trace( "CmdWriteProperty.init(Token,Cmd,Property,Cmd)", "Cmd.rogue", 2309 );
  THIS->new_value = _auto_799_3;
  THIS->property_info = _auto_798_2;
  THIS->context = _auto_797_1;
  THIS->t = _auto_796_0;
  __trace.line = 2311;
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueString* RogueCmdCall__type_name( RogueClassCmdCall* THIS )
{
  RogueDebugTrace __trace( "CmdCall.type_name()", "Cmd.rogue", 2330 );
  return (RogueString*)(Rogue_literal_strings[945]);
}

void RogueCmdCall__dispatch__Visitor( RogueClassCmdCall* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCall.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* Rogue_CmdCall__require_type( RogueClassCmdCall* THIS )
{
  RogueDebugTrace __trace( "CmdCall.require_type()", "Cmd.rogue", 2339 );
  __trace.line = 2340;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((call_ROGUEM486( 36, ROGUE_ARG(THIS) ))));
  __trace.line = 2341;
  if (((void*)result_0) == ((void*)NULL))
  {
    __trace.line = 2342;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[915] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[916] )))) )))) ))));
  }
  __trace.line = 2344;
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmdCall__resolve__Scope( RogueClassCmdCall* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCall.resolve(Scope)", "Cmd.rogue", 2346 );
  __trace.line = 2347;
  if (!!(THIS->context))
  {
    THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ))) )));
  }
  __trace.line = 2348;
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  __trace.line = 2349;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdCall__resolve_adjust__Scope_Int32( RogueClassCmdCall* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdCall.resolve_adjust(Scope,Int32)", "Cmd.rogue", 2351 );
  __trace.line = 2352;
  if (!(!!(THIS->method_info->_return_type)))
  {
    __trace.line = 2353;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1051] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[974] )))) )))) ))));
  }
  __trace.line = 2356;
  if (!!(THIS->context))
  {
    __trace.line = 2357;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[415], ROGUE_ARG(THIS->method_info->name) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))) )))), scope_0 ))));
  }
  else
  {
    __trace.line = 2360;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[415], ROGUE_ARG(THIS->method_info->name) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))) )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdCall__type( RogueClassCmdCall* THIS )
{
  RogueDebugTrace __trace( "CmdCall.type()", "Cmd.rogue", 2363 );
  __trace.line = 2364;
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCall* RogueCmdCall__init_object( RogueClassCmdCall* THIS )
{
  RogueDebugTrace __trace( "CmdCall.init_object()", "Cmd.rogue", 2330 );
  return (RogueClassCmdCall*)(THIS);
}

RogueClassCmdCall* RogueCmdCall__init__Token_Cmd_Method_CmdArgs( RogueClassCmdCall* THIS, RogueClassToken* _auto_800_0, RogueClassCmd* _auto_801_1, RogueClassMethod* _auto_802_2, RogueClassCmdArgs* _auto_803_3 )
{
  RogueDebugTrace __trace( "CmdCall.init(Token,Cmd,Method,CmdArgs)", "Cmd.rogue", 2337 );
  THIS->args = _auto_803_3;
  THIS->method_info = _auto_802_2;
  THIS->context = _auto_801_1;
  THIS->t = _auto_800_0;
  __trace.line = 2339;
  return (RogueClassCmdCall*)(THIS);
}

RogueString* RogueCmdCallDynamicMethod__to_String( RogueClassCmdCallDynamicMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.to_String()", "Cmd.rogue", 2407 );
  __trace.line = 2408;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[727] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->args))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueCmdCallDynamicMethod__type_name( RogueClassCmdCallDynamicMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.type_name()", "Cmd.rogue", 2401 );
  return (RogueString*)(Rogue_literal_strings[1179]);
}

RogueClassCmd* RogueCmdCallDynamicMethod__clone__CloneArgs( RogueClassCmdCallDynamicMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.clone(CloneArgs)", "Cmd.rogue", 2403 );
  __trace.line = 2404;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallDynamicMethod__dispatch__Visitor( RogueClassCmdCallDynamicMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCallDynamicMethod( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallDynamicMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2302 );
  __trace.line = 2303;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2304;
  if (((RogueMethod__is_overridden( ROGUE_ARG(THIS->method_info) ))))
  {
    __trace.line = 2305;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1090] )))), ROGUE_ARG(THIS->method_info->cpp_typedef) );
    __trace.line = 2306;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
    __trace.line = 2307;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->method_info->index) )))), Rogue_literal_strings[574] );
    __trace.line = 2308;
    RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
    __trace.line = 2309;
    RogueInt32 i_2 = (0);
    __trace.line = 2310;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2258_3,(THIS->args));
      RogueInt32 _auto_2259_4 = (0);
      for (;_auto_2259_4 < _auto_2258_3->count;++_auto_2259_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2258_3->data->objects[_auto_2259_4]))));
        __trace.line = 2311;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
        __trace.line = 2312;
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        __trace.line = 2313;
        ++i_2;
      }
    }
    __trace.line = 2315;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
  }
  else
  {
    __trace.line = 2318;
    RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( ROGUE_ARG(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) )))))), writer_0, is_statement_1 );
  }
  __trace.line = 2320;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallDynamicMethod* RogueCmdCallDynamicMethod__init_object( RogueClassCmdCallDynamicMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallDynamicMethod.init_object()", "Cmd.rogue", 2401 );
  return (RogueClassCmdCallDynamicMethod*)(THIS);
}

RogueString* RogueCmdCallMethod__type_name( RogueClassCmdCallMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallMethod.type_name()", "Cmd.rogue", 2385 );
  return (RogueString*)(Rogue_literal_strings[1173]);
}

RogueClassCmd* RogueCmdCallMethod__call_prior__Scope( RogueClassCmdCallMethod* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCallMethod.call_prior(Scope)", "Cmd.rogue", 2387 );
  __trace.line = 2388;
  if ((((RogueMethod__is_initializer( ROGUE_ARG(THIS->method_info) ))) && ((void*)THIS->method_info->type_context) != ((void*)scope_0->_this_type)))
  {
    __trace.line = 2391;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) ))))))));
  }
  __trace.line = 2394;
  if (!(!!(THIS->method_info->overridden_method)))
  {
    __trace.line = 2395;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1132] )))) )))) ))));
  }
  __trace.line = 2398;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info->overridden_method), ROGUE_ARG(THIS->args) ))))))));
}

void RogueCmdCallMethod__dispatch__Visitor( RogueClassCmdCallMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmdCallMethod* RogueCmdCallMethod__init_object( RogueClassCmdCallMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallMethod.init_object()", "Cmd.rogue", 2385 );
  return (RogueClassCmdCallMethod*)(THIS);
}

RogueString* RogueCmdCallPriorMethod__type_name( RogueClassCmdCallPriorMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.type_name()", "Cmd.rogue", 2424 );
  return (RogueString*)(Rogue_literal_strings[946]);
}

RogueClassCmd* RogueCmdCallPriorMethod__clone__CloneArgs( RogueClassCmdCallPriorMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.clone(CloneArgs)", "Cmd.rogue", 2433 );
  __trace.line = 2434;
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,cloned_named_args_1,0);
  __trace.line = 2435;
  if (!!(THIS->named_args))
  {
    __trace.line = 2436;
    cloned_named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) ))));
    __trace.line = 2437;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2260_2,(THIS->named_args));
      RogueInt32 _auto_2261_3 = (0);
      for (;_auto_2261_3 < _auto_2260_2->count;++_auto_2261_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_2260_2->data->objects[_auto_2261_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( cloned_named_args_1, ROGUE_ARG(((RogueCmdNamedArg__clone__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  __trace.line = 2439;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))), cloned_named_args_1 ))))));
}

void RogueCmdCallPriorMethod__dispatch__Visitor( RogueClassCmdCallPriorMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCallPriorMethod( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCallPriorMethod__resolve__Scope( RogueClassCmdCallPriorMethod* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.resolve(Scope)", "Cmd.rogue", 2441 );
  __trace.line = 2442;
  return (RogueClassCmd*)((call_ROGUEM81( 8, ROGUE_ARG(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), scope_0 )))), scope_0 )));
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init_object( RogueClassCmdCallPriorMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.init_object()", "Cmd.rogue", 2424 );
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdCallPriorMethod* THIS, RogueClassToken* _auto_804_0, RogueString* _auto_805_1, RogueClassCmdArgs* _auto_806_2, RogueCmdNamedArg_List* _auto_807_3 )
{
  RogueDebugTrace __trace( "CmdCallPriorMethod.init(Token,String,CmdArgs,CmdNamedArg[])", "Cmd.rogue", 2431 );
  THIS->named_args = _auto_807_3;
  THIS->args = _auto_806_2;
  THIS->name = _auto_805_1;
  THIS->t = _auto_804_0;
  __trace.line = 2433;
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueString* RogueCmdRange__type_name( RogueClassCmdRange* THIS )
{
  RogueDebugTrace __trace( "CmdRange.type_name()", "Cmd.rogue", 2497 );
  return (RogueString*)(Rogue_literal_strings[947]);
}

void RogueCmdRange__dispatch__Visitor( RogueClassCmdRange* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdRange.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdRange__resolve__Scope( RogueClassCmdRange* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdRange.resolve(Scope)", "Cmd.rogue", 2509 );
  __trace.line = 2510;
  THIS->first = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->first), scope_0 ))) )));
  __trace.line = 2511;
  THIS->last = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->last), scope_0 ))) )));
  __trace.line = 2513;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,range_type_1,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->first) ))), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->last) ))) )))));
  __trace.line = 2514;
  if (!!(THIS->step_size))
  {
    __trace.line = 2515;
    THIS->step_size = (call_ROGUEM81( 31, ROGUE_ARG(THIS->step_size), scope_0 ));
    __trace.line = 2516;
    range_type_1 = ((RogueClassType*)((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), range_type_1, ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->step_size) ))) ))));
  }
  else
  {
    __trace.line = 2518;
    THIS->step_size = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(((RogueCmdLiteralInt32__cast_to__Type_Scope( ROGUE_ARG(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM508( 40, ROGUE_ARG(THIS) ))) )))), range_type_1, scope_0 )))), scope_0 ))) )));
  }
  __trace.line = 2520;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(Rogue_literal_strings[1011]));
  __trace.line = 2521;
  if (RogueObject_instance_of(THIS,RogueTypeCmdRangeUpToLessThan))
  {
    name_2 = ((RogueString*)Rogue_literal_strings[1012]);
  }
  __trace.line = 2522;
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[236] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(range_type_1))) )))) )))), Rogue_literal_strings[145] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->first), ROGUE_ARG(THIS->last), ROGUE_ARG(THIS->step_size) )))) )))), scope_0 ))));
}

RogueClassCmdRange* RogueCmdRange__init_object( RogueClassCmdRange* THIS )
{
  RogueDebugTrace __trace( "CmdRange.init_object()", "Cmd.rogue", 2497 );
  return (RogueClassCmdRange*)(THIS);
}

RogueClassCmdRange* RogueCmdRange__init__Token_Cmd_Cmd_Cmd( RogueClassCmdRange* THIS, RogueClassToken* _auto_808_0, RogueClassCmd* _auto_809_1, RogueClassCmd* _auto_810_2, RogueClassCmd* _auto_811_3 )
{
  RogueDebugTrace __trace( "CmdRange.init(Token,Cmd,Cmd,Cmd)", "Cmd.rogue", 2504 );
  THIS->step_size = _auto_811_3;
  THIS->last = _auto_810_2;
  THIS->first = _auto_809_1;
  THIS->t = _auto_808_0;
  __trace.line = 2506;
  return (RogueClassCmdRange*)(THIS);
}

RogueInt32 RogueCmdRange__default_step_size( RogueClassCmdRange* THIS )
{
  RogueDebugTrace __trace( "CmdRange.default_step_size()", "Cmd.rogue", 2506 );
  __trace.line = 2507;
  return (RogueInt32)(1);
}

RogueString* RogueCmdUnary__type_name( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.type_name()", "Cmd.rogue", 2551 );
  return (RogueString*)(Rogue_literal_strings[948]);
}

void RogueCmdUnary__dispatch__Visitor( RogueClassCmdUnary* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdUnary.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdUnary__resolve__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdUnary.resolve(Scope)", "Cmd.rogue", 2564 );
  __trace.line = 2565;
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  __trace.line = 2566;
  if ((call_ROGUEM87( 24, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)((call_ROGUEM511( 42, ROGUE_ARG(THIS), scope_0 )));
  }
  else
  {
    __trace.line = 2567;
    return (RogueClassCmd*)(((RogueCmdUnary__resolve_for_operand_type__Scope_Type( ROGUE_ARG(THIS), scope_0, ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->operand) ))), scope_0 )))) ))));
  }
}

RogueClassType* Rogue_CmdUnary__type( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.type()", "Cmd.rogue", 2589 );
  __trace.line = 2590;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->operand) )));
}

void RogueCmdUnary__write_cpp__CPPWriter_Logical( RogueClassCmdUnary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdUnary.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2454 );
  __trace.line = 2455;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG((call_ROGUEM509( 45, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[94] );
  __trace.line = 2456;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
  __trace.line = 2457;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] )))), ROGUE_ARG((call_ROGUEM509( 46, ROGUE_ARG(THIS) ))) );
}

RogueClassCmdUnary* RogueCmdUnary__init_object( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.init_object()", "Cmd.rogue", 2551 );
  return (RogueClassCmdUnary*)(THIS);
}

RogueClassCmdUnary* RogueCmdUnary__init__Token_Cmd( RogueClassCmdUnary* THIS, RogueClassToken* _auto_812_0, RogueClassCmd* _auto_813_1 )
{
  RogueDebugTrace __trace( "CmdUnary.init(Token,Cmd)", "Cmd.rogue", 2556 );
  THIS->operand = _auto_813_1;
  THIS->t = _auto_812_0;
  __trace.line = 2558;
  return (RogueClassCmdUnary*)(THIS);
}

RogueString* RogueCmdUnary__prefix_symbol( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.prefix_symbol()", "Cmd.rogue", 2558 );
  __trace.line = 2559;
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__fn_name( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.fn_name()", "Cmd.rogue", 2561 );
  __trace.line = 2562;
  return (RogueString*)(((RogueString*)(NULL)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_literal_operand__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdUnary.resolve_for_literal_operand(Scope)", "Cmd.rogue", 2569 );
  __trace.line = 2570;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_operand_type__Scope_Type( RogueClassCmdUnary* THIS, RogueClassScope* scope_0, RogueClassType* operand_type_1 )
{
  RogueDebugTrace __trace( "CmdUnary.resolve_for_operand_type(Scope,Type)", "Cmd.rogue", 2572 );
  __trace.line = 2573;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,((call_ROGUEM509( 41, ROGUE_ARG(THIS) ))));
  __trace.line = 2574;
  if (!!(name_2))
  {
    __trace.line = 2575;
    if (((RogueType__has_method_named__String( operand_type_1, name_2 ))))
    {
      __trace.line = 2576;
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), name_2 )))), scope_0 ))));
    }
    __trace.line = 2579;
    if (!(((RogueType__is_primitive( operand_type_1 )))))
    {
      __trace.line = 2580;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1013] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(operand_type_1))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[1014] )))) )))) ))));
    }
  }
  __trace.line = 2584;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdUnary__suffix_symbol( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.suffix_symbol()", "Cmd.rogue", 2586 );
  __trace.line = 2587;
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__cpp_prefix_symbol( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.cpp_prefix_symbol()", "CPPWriter.rogue", 2448 );
  __trace.line = 2449;
  return (RogueString*)((call_ROGUEM509( 40, ROGUE_ARG(THIS) )));
}

RogueString* RogueCmdUnary__cpp_suffix_symbol( RogueClassCmdUnary* THIS )
{
  RogueDebugTrace __trace( "CmdUnary.cpp_suffix_symbol()", "CPPWriter.rogue", 2451 );
  __trace.line = 2452;
  return (RogueString*)((call_ROGUEM509( 44, ROGUE_ARG(THIS) )));
}

RogueString* RogueCmdBinary__type_name( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.type_name()", "Cmd.rogue", 2681 );
  return (RogueString*)(Rogue_literal_strings[949]);
}

void RogueCmdBinary__dispatch__Visitor( RogueClassCmdBinary* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBinary.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdBinary__resolve__Scope( RogueClassCmdBinary* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdBinary.resolve(Scope)", "Cmd.rogue", 2695 );
  __trace.line = 2696;
  THIS->left = (call_ROGUEM81( 31, ROGUE_ARG(THIS->left), scope_0 ));
  __trace.line = 2697;
  THIS->right = (call_ROGUEM81( 31, ROGUE_ARG(THIS->right), scope_0 ));
  __trace.line = 2698;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,left_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->left) ))), scope_0 )))));
  __trace.line = 2699;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,right_type_2,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->right) ))), scope_0 )))));
  __trace.line = 2700;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((call_ROGUEM522( 42, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  __trace.line = 2701;
  return (RogueClassCmd*)(result_3);
}

RogueClassType* Rogue_CmdBinary__type( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.type()", "Cmd.rogue", 2736 );
  __trace.line = 2737;
  return (RogueClassType*)(((RogueCmd__find_operation_result_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->left) ))), ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->right) ))) ))));
}

void RogueCmdBinary__write_cpp__CPPWriter_Logical( RogueClassCmdBinary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdBinary.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2481 );
  __trace.line = 2482;
  if ((call_ROGUEM521( 41, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
  }
  __trace.line = 2483;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->left), writer_0, false );
  __trace.line = 2484;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] )))), ROGUE_ARG((call_ROGUEM515( 46, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[572] );
  __trace.line = 2485;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->right), writer_0, false );
  __trace.line = 2486;
  if ((call_ROGUEM521( 41, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdBinary* RogueCmdBinary__init_object( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.init_object()", "Cmd.rogue", 2681 );
  return (RogueClassCmdBinary*)(THIS);
}

RogueClassCmdBinary* RogueCmdBinary__init__Token_Cmd_Cmd( RogueClassCmdBinary* THIS, RogueClassToken* _auto_814_0, RogueClassCmd* _auto_815_1, RogueClassCmd* _auto_816_2 )
{
  RogueDebugTrace __trace( "CmdBinary.init(Token,Cmd,Cmd)", "Cmd.rogue", 2687 );
  THIS->right = _auto_816_2;
  THIS->left = _auto_815_1;
  THIS->t = _auto_814_0;
  __trace.line = 2689;
  return (RogueClassCmdBinary*)(THIS);
}

RogueString* RogueCmdBinary__fn_name( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.fn_name()", "Cmd.rogue", 2689 );
  __trace.line = 2690;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1015] )))) )))) ))));
}

RogueLogical RogueCmdBinary__requires_parens( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.requires_parens()", "Cmd.rogue", 2692 );
  __trace.line = 2693;
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmdBinary__resolve_for_types__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdBinary.resolve_for_types(Scope,Type,Type)", "Cmd.rogue", 2703 );
  __trace.line = 2704;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,operator_method_call_3,((call_ROGUEM522( 44, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  __trace.line = 2705;
  if (!!(operator_method_call_3))
  {
    return (RogueClassCmd*)(operator_method_call_3);
  }
  __trace.line = 2707;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  __trace.line = 2708;
  THIS->left = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->left), common_type_4, scope_0 ))), scope_0 ));
  __trace.line = 2709;
  THIS->right = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->right), common_type_4, scope_0 ))), scope_0 ));
  __trace.line = 2710;
  if (((call_ROGUEM87( 24, ROGUE_ARG(THIS->left) )) && (call_ROGUEM87( 24, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((call_ROGUEM84( 14, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  __trace.line = 2711;
  return (RogueClassCmd*)((call_ROGUEM523( 43, ROGUE_ARG(THIS), scope_0, common_type_4 )));
}

RogueClassCmd* RogueCmdBinary__resolve_for_common_type__Scope_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  RogueDebugTrace __trace( "CmdBinary.resolve_for_common_type(Scope,Type)", "Cmd.rogue", 2713 );
  __trace.line = 2714;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdBinary__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdBinary.resolve_operator_method(Scope,Type,Type)", "Cmd.rogue", 2716 );
  __trace.line = 2717;
  if (((RogueType__has_method_named__String( left_type_1, ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) ))))
  {
    __trace.line = 2718;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( left_type_1, ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) ))))
  {
    __trace.line = 2720;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(left_type_1->name) )))))), ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( right_type_2, ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) ))))
  {
    __trace.line = 2722;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(right_type_2->name) )))))), ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (!((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 ))))))
  {
    __trace.line = 2724;
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      __trace.line = 2725;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1013] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1016] )))) )))) ))));
    }
    else
    {
      __trace.line = 2727;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1017] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1018] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 40, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1019] )))) )))) ))));
    }
  }
  else
  {
    __trace.line = 2730;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
}

RogueString* RogueCmdBinary__symbol( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.symbol()", "Cmd.rogue", 2733 );
  __trace.line = 2734;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1092] )))) )))) ))));
}

RogueString* RogueCmdBinary__cpp_symbol( RogueClassCmdBinary* THIS )
{
  RogueDebugTrace __trace( "CmdBinary.cpp_symbol()", "CPPWriter.rogue", 2478 );
  __trace.line = 2479;
  return (RogueString*)((call_ROGUEM515( 45, ROGUE_ARG(THIS) )));
}

RogueString* RogueCmdAdjustLocal__type_name( RogueClassCmdAdjustLocal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.type_name()", "Cmd.rogue", 3457 );
  return (RogueString*)(Rogue_literal_strings[950]);
}

RogueClassCmd* RogueCmdAdjustLocal__clone__CloneArgs( RogueClassCmdAdjustLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.clone(CloneArgs)", "Cmd.rogue", 3465 );
  __trace.line = 3466;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 3467;
  if (!!(task_args_1))
  {
    __trace.line = 3468;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueTaskArgs__cmd_read_this__Token( task_args_1, ROGUE_ARG(THIS->t) )))), ROGUE_ARG(((RogueTaskArgs__convert_local_name__Local( task_args_1, ROGUE_ARG(THIS->local_info) )))) )))))), ROGUE_ARG(THIS->delta) ))))));
  }
  else
  {
    __trace.line = 3470;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->delta) ))))));
  }
}

void RogueCmdAdjustLocal__dispatch__Visitor( RogueClassCmdAdjustLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAdjustLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustLocal__resolve__Scope( RogueClassCmdAdjustLocal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.resolve(Scope)", "Cmd.rogue", 3473 );
  __trace.line = 3474;
  if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    __trace.line = 3475;
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), Rogue_literal_strings[1020], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  __trace.line = 3482;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustLocal__type( RogueClassCmdAdjustLocal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.type()", "Cmd.rogue", 3484 );
  __trace.line = 3485;
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2606 );
  __trace.line = 2607;
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
  }
  else
  {
    __trace.line = 2608;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[6] );
  }
  __trace.line = 2609;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init_object( RogueClassCmdAdjustLocal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.init_object()", "Cmd.rogue", 3457 );
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init__Token_Local_Int32( RogueClassCmdAdjustLocal* THIS, RogueClassToken* _auto_817_0, RogueClassLocal* _auto_818_1, RogueInt32 _auto_819_2 )
{
  RogueDebugTrace __trace( "CmdAdjustLocal.init(Token,Local,Int32)", "Cmd.rogue", 3463 );
  THIS->delta = _auto_819_2;
  THIS->local_info = _auto_818_1;
  THIS->t = _auto_817_0;
  __trace.line = 3465;
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueString* RogueCmdAdjustProperty__type_name( RogueClassCmdAdjustProperty* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.type_name()", "Cmd.rogue", 3490 );
  return (RogueString*)(Rogue_literal_strings[1264]);
}

RogueClassCmd* RogueCmdAdjustProperty__clone__CloneArgs( RogueClassCmdAdjustProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.clone(CloneArgs)", "Cmd.rogue", 3499 );
  __trace.line = 3500;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->delta) ))))));
}

void RogueCmdAdjustProperty__dispatch__Visitor( RogueClassCmdAdjustProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAdjustProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustProperty__resolve__Scope( RogueClassCmdAdjustProperty* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.resolve(Scope)", "Cmd.rogue", 3502 );
  __trace.line = 3503;
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ))) )));
  __trace.line = 3504;
  if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    __trace.line = 3505;
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), Rogue_literal_strings[1020], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  __trace.line = 3512;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustProperty__type( RogueClassCmdAdjustProperty* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.type()", "Cmd.rogue", 3514 );
  __trace.line = 3515;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2615 );
  __trace.line = 2616;
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
  }
  else
  {
    __trace.line = 2617;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[6] );
  }
  __trace.line = 2618;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
  __trace.line = 2619;
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) );
  __trace.line = 2620;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init_object( RogueClassCmdAdjustProperty* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.init_object()", "Cmd.rogue", 3490 );
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( RogueClassCmdAdjustProperty* THIS, RogueClassToken* _auto_820_0, RogueClassCmd* _auto_821_1, RogueClassProperty* _auto_822_2, RogueInt32 _auto_823_3 )
{
  RogueDebugTrace __trace( "CmdAdjustProperty.init(Token,Cmd,Property,Int32)", "Cmd.rogue", 3497 );
  THIS->delta = _auto_823_3;
  THIS->property_info = _auto_822_2;
  THIS->context = _auto_821_1;
  THIS->t = _auto_820_0;
  __trace.line = 3499;
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueString* RogueCmdAdjustGlobal__type_name( RogueClassCmdAdjustGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.type_name()", "Cmd.rogue", 3520 );
  return (RogueString*)(Rogue_literal_strings[1265]);
}

RogueClassCmd* RogueCmdAdjustGlobal__clone__CloneArgs( RogueClassCmdAdjustGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.clone(CloneArgs)", "Cmd.rogue", 3528 );
  __trace.line = 3529;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->delta) ))))));
}

void RogueCmdAdjustGlobal__dispatch__Visitor( RogueClassCmdAdjustGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdAdjustGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdAdjustGlobal__resolve__Scope( RogueClassCmdAdjustGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.resolve(Scope)", "Cmd.rogue", 3531 );
  __trace.line = 3532;
  if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    __trace.line = 3533;
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), Rogue_literal_strings[1020], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  __trace.line = 3540;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustGlobal__type( RogueClassCmdAdjustGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.type()", "Cmd.rogue", 3542 );
  __trace.line = 3543;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2626 );
  __trace.line = 2627;
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
  }
  else
  {
    __trace.line = 2628;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[6] );
  }
  __trace.line = 2630;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[54] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[461] );
  __trace.line = 2631;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init_object( RogueClassCmdAdjustGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.init_object()", "Cmd.rogue", 3520 );
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init__Token_Property_Int32( RogueClassCmdAdjustGlobal* THIS, RogueClassToken* _auto_824_0, RogueClassProperty* _auto_825_1, RogueInt32 _auto_826_2 )
{
  RogueDebugTrace __trace( "CmdAdjustGlobal.init(Token,Property,Int32)", "Cmd.rogue", 3526 );
  THIS->delta = _auto_826_2;
  THIS->global_info = _auto_825_1;
  THIS->t = _auto_824_0;
  __trace.line = 3528;
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignLocal__type_name( RogueClassCmdModifyAndAssignLocal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.type_name()", "Cmd.rogue", 3579 );
  return (RogueString*)(Rogue_literal_strings[1219]);
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__clone__CloneArgs( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.clone(CloneArgs)", "Cmd.rogue", 3586 );
  __trace.line = 3587;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 3588;
  if (!!(task_args_1))
  {
    __trace.line = 3589;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_args_1->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->index) )))) )))) )))) )))))), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) ))))));
  }
  else
  {
    __trace.line = 3591;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
  }
}

void RogueCmdModifyAndAssignLocal__dispatch__Visitor( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdModifyAndAssignLocal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__resolve__Scope( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.resolve(Scope)", "Cmd.rogue", 3595 );
  __trace.line = 3596;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[350], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  __trace.line = 3597;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    __trace.line = 3598;
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      __trace.line = 3599;
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      __trace.line = 3601;
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      __trace.line = 3602;
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        __trace.line = 3603;
        return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        __trace.line = 3606;
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))->name));
        __trace.line = 3607;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1021] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->local_info->_type))) )))) )))), Rogue_literal_strings[1022] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1023] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1024] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1025] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[401] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    __trace.line = 3611;
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  __trace.line = 3615;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_2262_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2262_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      __trace.line = 3618;
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2262_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      __trace.line = 3623;
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2262_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      __trace.line = 3626;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      __trace.line = 3627;
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1026] ))));
      }
      __trace.line = 3628;
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1027] ))));
      }
      __trace.line = 3629;
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))));
      __trace.line = 3630;
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  __trace.line = 3633;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->local_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 3634;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignLocal__type( RogueClassCmdModifyAndAssignLocal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.type()", "Cmd.rogue", 3636 );
  __trace.line = 3637;
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2643 );
  __trace.line = 2644;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[572] );
  __trace.line = 2645;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init_object( RogueClassCmdModifyAndAssignLocal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.init_object()", "Cmd.rogue", 3579 );
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassToken* _auto_827_0, RogueClassLocal* _auto_828_1, RogueClassTokenType* _auto_829_2, RogueClassCmd* _auto_830_3 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignLocal.init(Token,Local,TokenType,Cmd)", "Cmd.rogue", 3584 );
  THIS->new_value = _auto_830_3;
  THIS->op = _auto_829_2;
  THIS->local_info = _auto_828_1;
  THIS->t = _auto_827_0;
  __trace.line = 3586;
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueString* RogueCmdResolvedModifyAndAssign__type_name( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdResolvedModifyAndAssign.type_name()", "Cmd.rogue", 3567 );
  return (RogueString*)(Rogue_literal_strings[951]);
}

void RogueCmdResolvedModifyAndAssign__dispatch__Visitor( RogueClassCmdResolvedModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdResolvedModifyAndAssign.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueClassCmdResolvedModifyAndAssign* RogueCmdResolvedModifyAndAssign__init_object( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdResolvedModifyAndAssign.init_object()", "Cmd.rogue", 3567 );
  return (RogueClassCmdResolvedModifyAndAssign*)(THIS);
}

RogueString* RogueCmdResolvedModifyAndAssign__symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdResolvedModifyAndAssign.symbol()", "Cmd.rogue", 3573 );
  __trace.line = 3574;
  if (((void*)THIS->op) == ((void*)RogueTokenType_symbol_tilde_equals))
  {
    return (RogueString*)(Rogue_literal_strings[215]);
  }
  __trace.line = 3575;
  return (RogueString*)(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) ))));
}

RogueString* RogueCmdResolvedModifyAndAssign__cpp_symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdResolvedModifyAndAssign.cpp_symbol()", "CPPWriter.rogue", 2637 );
  __trace.line = 2638;
  return (RogueString*)(((RogueCmdResolvedModifyAndAssign__symbol( ROGUE_ARG(THIS) ))));
}

RogueString* RogueCmdModifyAndAssignGlobal__type_name( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.type_name()", "Cmd.rogue", 3641 );
  return (RogueString*)(Rogue_literal_strings[1220]);
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__clone__CloneArgs( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.clone(CloneArgs)", "Cmd.rogue", 3648 );
  __trace.line = 3649;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssignGlobal__dispatch__Visitor( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdModifyAndAssignGlobal( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__resolve__Scope( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.resolve(Scope)", "Cmd.rogue", 3651 );
  __trace.line = 3652;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[350], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  __trace.line = 3653;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    __trace.line = 3654;
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      __trace.line = 3655;
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      __trace.line = 3657;
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      __trace.line = 3658;
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        __trace.line = 3659;
        return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        __trace.line = 3662;
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))->name));
        __trace.line = 3663;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1021] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->global_info->_type))) )))) )))), Rogue_literal_strings[1022] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1023] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1024] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1025] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[401] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    __trace.line = 3668;
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  __trace.line = 3672;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_2263_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2263_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      __trace.line = 3675;
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2263_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      __trace.line = 3680;
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2263_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      __trace.line = 3683;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      __trace.line = 3684;
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1026] ))));
      }
      __trace.line = 3685;
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1027] ))));
      }
      __trace.line = 3686;
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))));
      __trace.line = 3687;
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  __trace.line = 3690;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 3691;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignGlobal__type( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.type()", "Cmd.rogue", 3693 );
  __trace.line = 3694;
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2651 );
  __trace.line = 2653;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[54] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[461] );
  __trace.line = 2655;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[572] );
  __trace.line = 2656;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init_object( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.init_object()", "Cmd.rogue", 3641 );
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassToken* _auto_831_0, RogueClassProperty* _auto_832_1, RogueClassTokenType* _auto_833_2, RogueClassCmd* _auto_834_3 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignGlobal.init(Token,Property,TokenType,Cmd)", "Cmd.rogue", 3646 );
  THIS->new_value = _auto_834_3;
  THIS->op = _auto_833_2;
  THIS->global_info = _auto_832_1;
  THIS->t = _auto_831_0;
  __trace.line = 3648;
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignProperty__type_name( RogueClassCmdModifyAndAssignProperty* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.type_name()", "Cmd.rogue", 3697 );
  return (RogueString*)(Rogue_literal_strings[1221]);
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__clone__CloneArgs( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.clone(CloneArgs)", "Cmd.rogue", 3705 );
  __trace.line = 3706;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssignProperty__dispatch__Visitor( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdModifyAndAssignProperty( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__resolve__Scope( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.resolve(Scope)", "Cmd.rogue", 3708 );
  __trace.line = 3709;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[350], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  __trace.line = 3710;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    __trace.line = 3711;
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      __trace.line = 3712;
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      __trace.line = 3714;
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      __trace.line = 3715;
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        __trace.line = 3716;
        return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else
      {
        __trace.line = 3719;
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))->name));
        __trace.line = 3720;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1021] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->property_info->_type))) )))) )))), Rogue_literal_strings[1022] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1023] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1024] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1025] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[401] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    __trace.line = 3725;
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  __trace.line = 3729;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_2264_4,(THIS->op));
    if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2264_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) ))))
    {
      __trace.line = 3732;
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2264_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) ))))
    {
      __trace.line = 3737;
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)_auto_2264_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) ))))
    {
      __trace.line = 3740;
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      __trace.line = 3741;
      if (!(!!(access_3)))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1026] ))));
      }
      __trace.line = 3742;
      if (!!(access_3->context))
      {
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1027] ))));
      }
      __trace.line = 3743;
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))));
      __trace.line = 3744;
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  __trace.line = 3747;
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ))) )));
  __trace.line = 3748;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->property_info->_type), scope_0 ))), scope_0 ));
  __trace.line = 3749;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignProperty__type( RogueClassCmdModifyAndAssignProperty* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.type()", "Cmd.rogue", 3751 );
  __trace.line = 3752;
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2661 );
  __trace.line = 2662;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
  __trace.line = 2663;
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->context) ))) );
  __trace.line = 2664;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[572] );
  __trace.line = 2665;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init_object( RogueClassCmdModifyAndAssignProperty* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.init_object()", "Cmd.rogue", 3697 );
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassToken* _auto_835_0, RogueClassCmd* _auto_836_1, RogueClassProperty* _auto_837_2, RogueClassTokenType* _auto_838_3, RogueClassCmd* _auto_839_4 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssignProperty.init(Token,Cmd,Property,TokenType,Cmd)", "Cmd.rogue", 3703 );
  THIS->new_value = _auto_839_4;
  THIS->op = _auto_838_3;
  THIS->property_info = _auto_837_2;
  THIS->context = _auto_836_1;
  THIS->t = _auto_835_0;
  __trace.line = 3705;
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueString* RogueCmdCreateArray__type_name( RogueClassCmdCreateArray* THIS )
{
  RogueDebugTrace __trace( "CmdCreateArray.type_name()", "Cmd.rogue", 3758 );
  return (RogueString*)(Rogue_literal_strings[952]);
}

RogueClassCmd* RogueCmdCreateArray__clone__CloneArgs( RogueClassCmdCreateArray* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateArray.clone(CloneArgs)", "Cmd.rogue", 3772 );
  __trace.line = 3773;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateArray__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_array_type), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->count_cmd), clone_args_0 ))) ))))));
}

void RogueCmdCreateArray__dispatch__Visitor( RogueClassCmdCreateArray* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateArray.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCreateArray( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdCreateArray__resolve__Scope( RogueClassCmdCreateArray* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateArray.resolve(Scope)", "Cmd.rogue", 3775 );
  __trace.line = 3776;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_array_type), scope_0 );
  __trace.line = 3777;
  THIS->count_cmd = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->count_cmd), scope_0 ))) )));
  __trace.line = 3778;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateArray__type( RogueClassCmdCreateArray* THIS )
{
  RogueDebugTrace __trace( "CmdCreateArray.type()", "Cmd.rogue", 3780 );
  __trace.line = 3781;
  return (RogueClassType*)(THIS->_array_type);
}

void RogueCmdCreateArray__write_cpp__CPPWriter_Logical( RogueClassCmdCreateArray* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCreateArray.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2670 );
  __trace.line = 2671;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1093] );
  __trace.line = 2672;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->count_cmd), writer_0, false );
  __trace.line = 2673;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1094] )))), ROGUE_ARG(THIS->_array_type->_element_type) )))), Rogue_literal_strings[34] );
  __trace.line = 2674;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_array_type->_element_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1095] );
  }
  __trace.line = 2675;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init_object( RogueClassCmdCreateArray* THIS )
{
  RogueDebugTrace __trace( "CmdCreateArray.init_object()", "Cmd.rogue", 3758 );
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_CmdArgs( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_840_0, RogueClassType* _auto_841_1, RogueClassCmdArgs* args_2 )
{
  RogueDebugTrace __trace( "CmdCreateArray.init(Token,Type,CmdArgs)", "Cmd.rogue", 3764 );
  THIS->_array_type = _auto_841_1;
  THIS->t = _auto_840_0;
  __trace.line = 3765;
  if ((((void*)args_2) == ((void*)NULL) || args_2->count != 1))
  {
    __trace.line = 3766;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[481] ))));
  }
  __trace.line = 3768;
  THIS->count_cmd = ((RogueClassCmd*)(args_2->data->objects[0]));
  __trace.line = 3770;
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_Cmd( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_842_0, RogueClassType* _auto_843_1, RogueClassCmd* _auto_844_2 )
{
  RogueDebugTrace __trace( "CmdCreateArray.init(Token,Type,Cmd)", "Cmd.rogue", 3770 );
  THIS->count_cmd = _auto_844_2;
  THIS->_array_type = _auto_843_1;
  THIS->t = _auto_842_0;
  __trace.line = 3772;
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueString* RogueCmdReadArrayElement__type_name( RogueClassCmdReadArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.type_name()", "Cmd.rogue", 3784 );
  return (RogueString*)(Rogue_literal_strings[1266]);
}

RogueClassCmd* RogueCmdReadArrayElement__clone__CloneArgs( RogueClassCmdReadArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.clone(CloneArgs)", "Cmd.rogue", 3793 );
  __trace.line = 3794;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

void RogueCmdReadArrayElement__dispatch__Visitor( RogueClassCmdReadArrayElement* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadArrayElement( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadArrayElement__resolve__Scope( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.resolve(Scope)", "Cmd.rogue", 3796 );
  __trace.line = 3797;
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3799;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 3800;
  THIS->_array_type = (call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ));
  __trace.line = 3801;
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->index), scope_0 ))) )));
  __trace.line = 3802;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadArrayElement__resolve_adjust__Scope_Int32( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.resolve_adjust(Scope,Int32)", "Cmd.rogue", 3804 );
  __trace.line = 3805;
  return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->index), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadArrayElement__type( RogueClassCmdReadArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.type()", "Cmd.rogue", 3807 );
  __trace.line = 3808;
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2680 );
  __trace.line = 2681;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  __trace.line = 2682;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
  __trace.line = 2683;
  if (((RogueType__is_reference( element_type_2 ))))
  {
    __trace.line = 2684;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] );
    __trace.line = 2685;
    RogueCPPWriter__print__Type( writer_0, element_type_2 );
    __trace.line = 2686;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1065] );
    __trace.line = 2687;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2688;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1096] );
    __trace.line = 2689;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2690;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1097] );
  }
  else if (((RogueType__is_primitive( element_type_2 ))))
  {
    __trace.line = 2693;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2694;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[209] );
    __trace.line = 2695;
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) ))))
      {
        __trace.line = 2696;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1098] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) ))))
      {
        __trace.line = 2697;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1099] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) ))))
      {
        __trace.line = 2698;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1100] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) ))))
      {
        __trace.line = 2699;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1101] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) ))))
      {
        __trace.line = 2700;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1102] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) ))))
      {
        __trace.line = 2701;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1103] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) ))))
      {
        __trace.line = 2702;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1104] );
      }
      else
      {
        __trace.line = 2704;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1105] ))));
      }
    }
    __trace.line = 2706;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2707;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[51] );
  }
  else
  {
    __trace.line = 2711;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), element_type_2 )))), Rogue_literal_strings[1106] );
    __trace.line = 2712;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2713;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1107] );
    __trace.line = 2714;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2715;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[51] );
  }
  __trace.line = 2718;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init_object( RogueClassCmdReadArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.init_object()", "Cmd.rogue", 3784 );
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init__Token_Cmd_Cmd( RogueClassCmdReadArrayElement* THIS, RogueClassToken* _auto_845_0, RogueClassCmd* _auto_846_1, RogueClassCmd* _auto_847_2 )
{
  RogueDebugTrace __trace( "CmdReadArrayElement.init(Token,Cmd,Cmd)", "Cmd.rogue", 3791 );
  THIS->index = _auto_847_2;
  THIS->context = _auto_846_1;
  THIS->t = _auto_845_0;
  __trace.line = 3793;
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueString* RogueCmdReadArrayCount__type_name( RogueClassCmdReadArrayCount* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.type_name()", "Cmd.rogue", 3811 );
  return (RogueString*)(Rogue_literal_strings[953]);
}

RogueClassCmd* RogueCmdReadArrayCount__clone__CloneArgs( RogueClassCmdReadArrayCount* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.clone(CloneArgs)", "Cmd.rogue", 3819 );
  __trace.line = 3820;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))) ))))));
}

void RogueCmdReadArrayCount__dispatch__Visitor( RogueClassCmdReadArrayCount* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdReadArrayCount( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdReadArrayCount__resolve__Scope( RogueClassCmdReadArrayCount* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.resolve(Scope)", "Cmd.rogue", 3822 );
  __trace.line = 3823;
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3825;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 3826;
  THIS->_array_type = (call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ));
  __trace.line = 3827;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadArrayCount__type( RogueClassCmdReadArrayCount* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.type()", "Cmd.rogue", 3829 );
  __trace.line = 3830;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayCount* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2723 );
  __trace.line = 2724;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
  __trace.line = 2725;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1108] );
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init_object( RogueClassCmdReadArrayCount* THIS )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.init_object()", "Cmd.rogue", 3811 );
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init__Token_Cmd( RogueClassCmdReadArrayCount* THIS, RogueClassToken* _auto_848_0, RogueClassCmd* _auto_849_1 )
{
  RogueDebugTrace __trace( "CmdReadArrayCount.init(Token,Cmd)", "Cmd.rogue", 3817 );
  THIS->context = _auto_849_1;
  THIS->t = _auto_848_0;
  __trace.line = 3819;
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueString* RogueCmdWriteArrayElement__type_name( RogueClassCmdWriteArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.type_name()", "Cmd.rogue", 3833 );
  return (RogueString*)(Rogue_literal_strings[1267]);
}

RogueClassCmd* RogueCmdWriteArrayElement__clone__CloneArgs( RogueClassCmdWriteArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.clone(CloneArgs)", "Cmd.rogue", 3843 );
  __trace.line = 3844;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->index), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdWriteArrayElement__dispatch__Visitor( RogueClassCmdWriteArrayElement* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdWriteArrayElement( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdWriteArrayElement__resolve__Scope( RogueClassCmdWriteArrayElement* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.resolve(Scope)", "Cmd.rogue", 3846 );
  __trace.line = 3847;
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3849;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 3850;
  THIS->_array_type = (call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ));
  __trace.line = 3851;
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->index), scope_0 ))) )));
  __trace.line = 3852;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->_array_type->_element_type), scope_0 ))), scope_0 ));
  __trace.line = 3853;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdWriteArrayElement__type( RogueClassCmdWriteArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.type()", "Cmd.rogue", 3855 );
  __trace.line = 3856;
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdWriteArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2730 );
  __trace.line = 2731;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  __trace.line = 2732;
  if (((RogueType__is_primitive( element_type_2 ))))
  {
    __trace.line = 2733;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2734;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[209] );
    __trace.line = 2735;
    {
      if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) ))))
      {
        __trace.line = 2736;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1098] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) ))))
      {
        __trace.line = 2737;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1099] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) ))))
      {
        __trace.line = 2738;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1100] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) ))))
      {
        __trace.line = 2739;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1101] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) ))))
      {
        __trace.line = 2740;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1102] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) ))))
      {
        __trace.line = 2741;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1103] );
      }
      else if (((RogueObject__operatorEQUALSEQUALS__Object( ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) ))))
      {
        __trace.line = 2742;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1104] );
      }
    }
    __trace.line = 2744;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2745;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1109] );
    __trace.line = 2746;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else if (((RogueType__is_reference( element_type_2 ))))
  {
    __trace.line = 2749;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2750;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[209] );
    __trace.line = 2751;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1110] );
    __trace.line = 2752;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2753;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1109] );
    __trace.line = 2754;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    __trace.line = 2757;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), element_type_2 )))), Rogue_literal_strings[1106] );
    __trace.line = 2758;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
    __trace.line = 2759;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1107] );
    __trace.line = 2760;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->index), writer_0, false );
    __trace.line = 2761;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1109] );
    __trace.line = 2762;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init_object( RogueClassCmdWriteArrayElement* THIS )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.init_object()", "Cmd.rogue", 3833 );
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( RogueClassCmdWriteArrayElement* THIS, RogueClassToken* _auto_850_0, RogueClassCmd* _auto_851_1, RogueClassCmd* _auto_852_2, RogueClassCmd* _auto_853_3 )
{
  RogueDebugTrace __trace( "CmdWriteArrayElement.init(Token,Cmd,Cmd,Cmd)", "Cmd.rogue", 3841 );
  THIS->new_value = _auto_853_3;
  THIS->index = _auto_852_2;
  THIS->context = _auto_851_1;
  THIS->t = _auto_850_0;
  __trace.line = 3843;
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueString* RogueCmdTypeOperator__type_name( RogueClassCmdTypeOperator* THIS )
{
  RogueDebugTrace __trace( "CmdTypeOperator.type_name()", "Cmd.rogue", 3863 );
  return (RogueString*)(Rogue_literal_strings[954]);
}

void RogueCmdTypeOperator__dispatch__Visitor( RogueClassCmdTypeOperator* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdTypeOperator.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* Rogue_CmdTypeOperator__type( RogueClassCmdTypeOperator* THIS )
{
  RogueDebugTrace __trace( "CmdTypeOperator.type()", "Cmd.rogue", 3871 );
  __trace.line = 3872;
  return (RogueClassType*)(THIS->_target_type);
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init_object( RogueClassCmdTypeOperator* THIS )
{
  RogueDebugTrace __trace( "CmdTypeOperator.init_object()", "Cmd.rogue", 3863 );
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init__Token_Cmd_Type( RogueClassCmdTypeOperator* THIS, RogueClassToken* _auto_854_0, RogueClassCmd* _auto_855_1, RogueClassType* _auto_856_2 )
{
  RogueDebugTrace __trace( "CmdTypeOperator.init(Token,Cmd,Type)", "Cmd.rogue", 3869 );
  THIS->_target_type = _auto_856_2;
  THIS->operand = _auto_855_1;
  THIS->t = _auto_854_0;
  __trace.line = 3871;
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueString* RogueCmdTaskControl__type_name( RogueClassCmdTaskControl* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControl.type_name()", "Cmd.rogue", 4081 );
  return (RogueString*)(Rogue_literal_strings[955]);
}

void RogueCmdTaskControl__dispatch__Visitor( RogueClassCmdTaskControl* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdTaskControl.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTaskControl( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdTaskControl__requires_semicolon( RogueClassCmdTaskControl* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControl.requires_semicolon()", "Cmd.rogue", 4095 );
  __trace.line = 4096;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdTaskControl__resolve__Scope( RogueClassCmdTaskControl* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdTaskControl.resolve(Scope)", "Cmd.rogue", 4098 );
  __trace.line = 4099;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_2265_1,(THIS->sections));
    RogueInt32 _auto_2266_2 = (0);
    for (;_auto_2266_2 < _auto_2265_1->count;++_auto_2266_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_2265_1->data->objects[_auto_2266_2]))));
      __trace.line = 4100;
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(section_3->statements), scope_0, false );
    }
  }
  __trace.line = 4102;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTaskControl__write_cpp__CPPWriter_Logical( RogueClassCmdTaskControl* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdTaskControl.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2810 );
  __trace.line = 2811;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1111] );
  __trace.line = 2812;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[234] );
  __trace.line = 2813;
  writer_0->indent += 2;
  __trace.line = 2814;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_2267_2,(THIS->sections));
    RogueInt32 _auto_2268_3 = (0);
    for (;_auto_2268_3 < _auto_2267_2->count;++_auto_2268_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_4,(((RogueClassCmdTaskControlSection*)(_auto_2267_2->data->objects[_auto_2268_3]))));
      __trace.line = 2815;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[682] )))), ROGUE_ARG(section_4->ip) )))), Rogue_literal_strings[216] );
      __trace.line = 2816;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(section_4->statements), writer_0, false, false );
    }
  }
  __trace.line = 2818;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[686] );
  __trace.line = 2819;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1112] );
  __trace.line = 2820;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1113] );
  __trace.line = 2821;
  writer_0->indent -= 2;
  __trace.line = 2822;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[143] );
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init_object( RogueClassCmdTaskControl* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControl.init_object()", "Cmd.rogue", 4081 );
  __trace.line = 4083;
  THIS->sections = ((RogueCmdTaskControlSection_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdTaskControlSection_List*,ROGUE_CREATE_OBJECT(CmdTaskControlSection_List))) )));
  __trace.line = 4081;
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init__Token( RogueClassCmdTaskControl* THIS, RogueClassToken* _auto_857_0 )
{
  RogueDebugTrace __trace( "CmdTaskControl.init(Token)", "Cmd.rogue", 4087 );
  THIS->t = _auto_857_0;
  __trace.line = 4088;
  THIS->current_section = ((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), 1 )));
  __trace.line = 4089;
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->sections), ROGUE_ARG(THIS->current_section) );
  __trace.line = 4091;
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__add__Cmd( RogueClassCmdTaskControl* THIS, RogueClassCmd* cmd_0 )
{
  RogueDebugTrace __trace( "CmdTaskControl.add(Cmd)", "Cmd.rogue", 4091 );
  __trace.line = 4092;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->current_section->statements)), cmd_0 );
  __trace.line = 4093;
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueString* RogueCmdTrace__type_name( RogueClassCmdTrace* THIS )
{
  RogueDebugTrace __trace( "CmdTrace.type_name()", "Cmd.rogue", 4336 );
  return (RogueString*)(Rogue_literal_strings[956]);
}

RogueClassCmdTrace* RogueCmdTrace__clone__CloneArgs( RogueClassCmdTrace* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdTrace.clone(CloneArgs)", "Cmd.rogue", 4343 );
  __trace.line = 4344;
  return (RogueClassCmdTrace*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->info), clone_args_0 )))) ))));
}

void RogueCmdTrace__dispatch__Visitor( RogueClassCmdTrace* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdTrace.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTrace( v_0, ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmdTrace__resolve__Scope( RogueClassCmdTrace* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdTrace.resolve(Scope)", "Cmd.rogue", 4346 );
  __trace.line = 4347;
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[71] )))))), Rogue_literal_strings[1028], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->info) )))) )))), scope_0 ))));
}

RogueClassCmdTrace* RogueCmdTrace__init_object( RogueClassCmdTrace* THIS )
{
  RogueDebugTrace __trace( "CmdTrace.init_object()", "Cmd.rogue", 4336 );
  return (RogueClassCmdTrace*)(THIS);
}

RogueClassCmdTrace* RogueCmdTrace__init__Token_Cmd( RogueClassCmdTrace* THIS, RogueClassToken* _auto_861_0, RogueClassCmd* _auto_862_1 )
{
  RogueDebugTrace __trace( "CmdTrace.init(Token,Cmd)", "Cmd.rogue", 4341 );
  THIS->info = _auto_862_1;
  THIS->t = _auto_861_0;
  __trace.line = 4343;
  return (RogueClassCmdTrace*)(THIS);
}

RogueString* RogueCmdInlineNative__type_name( RogueClassCmdInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdInlineNative.type_name()", "Cmd.rogue", 4425 );
  return (RogueString*)(Rogue_literal_strings[957]);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__clone__CloneArgs( RogueClassCmdInlineNative* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdInlineNative.clone(CloneArgs)", "Cmd.rogue", 4437 );
  __trace.line = 4438;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdInlineNative*,result_1,(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) )))));
  __trace.line = 4439;
  result_1->modify_op = THIS->modify_op;
  __trace.line = 4440;
  result_1->adjust_delta = THIS->adjust_delta;
  __trace.line = 4441;
  result_1->new_value = THIS->new_value;
  __trace.line = 4442;
  return (RogueClassCmdInlineNative*)(result_1);
}

void RogueCmdInlineNative__dispatch__Visitor( RogueClassCmdInlineNative* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdInlineNative.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdInlineNative( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdInlineNative__requires_semicolon( RogueClassCmdInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdInlineNative.requires_semicolon()", "Cmd.rogue", 4444 );
  __trace.line = 4445;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdInlineNative__resolve__Scope( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdInlineNative.resolve(Scope)", "Cmd.rogue", 4447 );
  __trace.line = 4448;
  THIS->this_method = scope_0->this_method;
  __trace.line = 4449;
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  __trace.line = 4450;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_assignment__Scope_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassCmd* _auto_866_1 )
{
  RogueDebugTrace __trace( "CmdInlineNative.resolve_assignment(Scope,Cmd)", "Cmd.rogue", 4452 );
  THIS->new_value = _auto_866_1;
  __trace.line = 4453;
  THIS->this_method = scope_0->this_method;
  __trace.line = 4454;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  __trace.line = 4455;
  if (!!(THIS->_result_type))
  {
    __trace.line = 4456;
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    __trace.line = 4458;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1050] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  __trace.line = 4460;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0 ))), scope_0 ));
  __trace.line = 4461;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_869_1 )
{
  RogueDebugTrace __trace( "CmdInlineNative.resolve_adjust(Scope,Int32)", "Cmd.rogue", 4474 );
  THIS->adjust_delta = _auto_869_1;
  __trace.line = 4475;
  THIS->this_method = scope_0->this_method;
  __trace.line = 4476;
  if (!!(THIS->_result_type))
  {
    __trace.line = 4477;
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    __trace.line = 4479;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1052] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  __trace.line = 4481;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassTokenType* _auto_867_1, RogueClassCmd* _auto_868_2 )
{
  RogueDebugTrace __trace( "CmdInlineNative.resolve_modify_and_assign(Scope,TokenType,Cmd)", "Cmd.rogue", 4463 );
  THIS->new_value = _auto_868_2;
  THIS->modify_op = _auto_867_1;
  __trace.line = 4464;
  THIS->this_method = scope_0->this_method;
  __trace.line = 4465;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  __trace.line = 4466;
  if (!!(THIS->_result_type))
  {
    __trace.line = 4467;
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    __trace.line = 4469;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1057] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  __trace.line = 4471;
  THIS->new_value = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0 ))), scope_0 ));
  __trace.line = 4472;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInlineNative__type( RogueClassCmdInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdInlineNative.type()", "Cmd.rogue", 4483 );
  __trace.line = 4484;
  return (RogueClassType*)(THIS->_result_type);
}

void RogueCmdInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdInlineNative.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2859 );
  __trace.line = 2860;
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      __trace.line = 2861;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[6] );
      break;
    }
    case 1:
    {
      __trace.line = 2862;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
      break;
    }
  }
  __trace.line = 2865;
  RogueCPPWriter__print_native_code__Token_Type_Method_String_Type( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->this_method->type_context), ROGUE_ARG(THIS->this_method), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) );
  __trace.line = 2866;
  if (!!(THIS->adjust_delta))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
    return;
  }
  __trace.line = 2868;
  if ((((RogueString__contains__Character( ROGUE_ARG(THIS->code), (RogueCharacter)10 ))) || !(!!(THIS->_result_type))))
  {
    RogueCPPWriter__println( writer_0 );
  }
  __trace.line = 2869;
  if (!!(THIS->new_value))
  {
    __trace.line = 2870;
    if (!!(THIS->modify_op))
    {
      RogueCPPWriter__print__Character( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Character( writer_0, (RogueCharacter)' ' )))), ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->modify_op) )))) )))), (RogueCharacter)' ' );
    }
    else
    {
      __trace.line = 2871;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[618] );
    }
    __trace.line = 2872;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->new_value), writer_0, false );
    __trace.line = 2873;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[243] );
  }
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init_object( RogueClassCmdInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdInlineNative.init_object()", "Cmd.rogue", 4425 );
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init__Token_String_Type( RogueClassCmdInlineNative* THIS, RogueClassToken* _auto_863_0, RogueString* _auto_864_1, RogueClassType* _auto_865_2 )
{
  RogueDebugTrace __trace( "CmdInlineNative.init(Token,String,Type)", "Cmd.rogue", 4435 );
  THIS->_result_type = _auto_865_2;
  THIS->code = _auto_864_1;
  THIS->t = _auto_863_0;
  __trace.line = 4437;
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueString* RogueCmdNoAction__type_name( RogueClassCmdNoAction* THIS )
{
  RogueDebugTrace __trace( "CmdNoAction.type_name()", "Cmd.rogue", 4535 );
  return (RogueString*)(Rogue_literal_strings[1268]);
}

void RogueCmdNoAction__add_to__CmdStatementList( RogueClassCmdNoAction* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueDebugTrace __trace( "CmdNoAction.add_to(CmdStatementList)", "Cmd.rogue", 4542 );
}

RogueClassCmdNoAction* RogueCmdNoAction__clone__CloneArgs( RogueClassCmdNoAction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNoAction.clone(CloneArgs)", "Cmd.rogue", 4539 );
  __trace.line = 4540;
  return (RogueClassCmdNoAction*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))));
}

void RogueCmdNoAction__dispatch__Visitor( RogueClassCmdNoAction* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNoAction.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdNoAction( v_0, ROGUE_ARG(THIS) );
}

RogueLogical RogueCmdNoAction__generates_output( RogueClassCmdNoAction* THIS )
{
  RogueDebugTrace __trace( "CmdNoAction.generates_output()", "Cmd.rogue", 4545 );
  __trace.line = 4546;
  return (RogueLogical)(false);
}

RogueLogical RogueCmdNoAction__requires_semicolon( RogueClassCmdNoAction* THIS )
{
  RogueDebugTrace __trace( "CmdNoAction.requires_semicolon()", "Cmd.rogue", 4548 );
  __trace.line = 4549;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNoAction__resolve__Scope( RogueClassCmdNoAction* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNoAction.resolve(Scope)", "Cmd.rogue", 4551 );
  __trace.line = 4552;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdNoAction__type( RogueClassCmdNoAction* THIS )
{
  RogueDebugTrace __trace( "CmdNoAction.type()", "Cmd.rogue", 4554 );
  __trace.line = 4555;
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdNoAction__write_cpp__CPPWriter_Logical( RogueClassCmdNoAction* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdNoAction.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2885 );
}

RogueClassCmdNoAction* RogueCmdNoAction__init_object( RogueClassCmdNoAction* THIS )
{
  RogueDebugTrace __trace( "CmdNoAction.init_object()", "Cmd.rogue", 4535 );
  return (RogueClassCmdNoAction*)(THIS);
}

RogueClassCmdNoAction* RogueCmdNoAction__init__Token( RogueClassCmdNoAction* THIS, RogueClassToken* _auto_870_0 )
{
  RogueDebugTrace __trace( "CmdNoAction.init(Token)", "Cmd.rogue", 4537 );
  THIS->t = _auto_870_0;
  __trace.line = 4539;
  return (RogueClassCmdNoAction*)(THIS);
}

RogueString* RogueCmdSelect__type_name( RogueClassCmdSelect* THIS )
{
  RogueDebugTrace __trace( "CmdSelect.type_name()", "Cmd.rogue", 4626 );
  return (RogueString*)(Rogue_literal_strings[958]);
}

RogueClassCmdSelect* RogueCmdSelect__clone__CloneArgs( RogueClassCmdSelect* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdSelect.clone(CloneArgs)", "Cmd.rogue", 4636 );
  __trace.line = 4637;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,result_1,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->expression), clone_args_0 )))), ROGUE_ARG(((RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))), ROGUE_ARG(THIS->cases->count) )))) )))));
  __trace.line = 4638;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2269_2,(THIS->cases));
    RogueInt32 _auto_2270_3 = (0);
    for (;_auto_2270_3 < _auto_2269_2->count;++_auto_2270_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_4,(((RogueClassCmdSelectCase*)(_auto_2269_2->data->objects[_auto_2270_3]))));
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(result_1->cases), ROGUE_ARG(((RogueCmdSelectCase__clone__CloneArgs( c_4, clone_args_0 )))) );
    }
  }
  __trace.line = 4639;
  return (RogueClassCmdSelect*)(result_1);
}

void RogueCmdSelect__dispatch__Visitor( RogueClassCmdSelect* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdSelect.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdSelect( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdSelect__implicit_type__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSelect.implicit_type(Scope)", "Cmd.rogue", 4641 );
  __trace.line = 4642;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,0);
  __trace.line = 4643;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2271_3,(THIS->cases));
    RogueInt32 _auto_2272_4 = (0);
    for (;_auto_2272_4 < _auto_2271_3->count;++_auto_2272_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_2271_3->data->objects[_auto_2272_4]))));
      __trace.line = 4644;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_2,(((RogueCmdSelectCase__implicit_type__Scope( c_5, scope_0 )))));
      __trace.line = 4645;
      if (!(!!(common_type_1)))
      {
        common_type_1 = ((RogueClassType*)case_type_2);
      }
      else if (((void*)common_type_1) != ((void*)case_type_2))
      {
        __trace.line = 4646;
        return (RogueClassType*)(((RogueClassType*)(NULL)));
      }
    }
  }
  __trace.line = 4648;
  return (RogueClassType*)(common_type_1);
}

RogueClassCmd* RogueCmdSelect__resolve__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSelect.resolve(Scope)", "Cmd.rogue", 4650 );
  __trace.line = 4651;
  if (!!(THIS->_value_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 4653;
  if (!(!!(THIS->cases->count)))
  {
    __trace.line = 4654;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1029] ))));
  }
  __trace.line = 4657;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2273_3,(THIS->cases));
    RogueInt32 _auto_2274_4 = (0);
    for (;_auto_2274_4 < _auto_2273_3->count;++_auto_2274_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_2273_3->data->objects[_auto_2274_4]))));
      __trace.line = 4658;
      RogueCmdSelectCase__resolve__Scope( c_5, scope_0 );
      __trace.line = 4659;
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_1,(((Rogue_CmdSelectCase__type( c_5 )))));
      __trace.line = 4660;
      THIS->_value_type = ((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->_value_type), case_type_1 )));
    }
  }
  __trace.line = 4663;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2275_6,(THIS->cases));
    RogueInt32 _auto_2276_7 = (0);
    for (;_auto_2276_7 < _auto_2275_6->count;++_auto_2276_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_8,(((RogueClassCmdSelectCase*)(_auto_2275_6->data->objects[_auto_2276_7]))));
      __trace.line = 4664;
      c_8->value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(c_8->value), ROGUE_ARG(THIS->_value_type), scope_0 ))), scope_0 ))) )));
    }
  }
  __trace.line = 4667;
  if (!!(THIS->expression))
  {
    __trace.line = 4668;
    THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
    __trace.line = 4669;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,expr_type_2,((call_ROGUEM90( 28, ROGUE_ARG(THIS->expression) ))));
    __trace.line = 4670;
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2277_9,(THIS->cases));
      RogueInt32 _auto_2278_10 = (0);
      for (;_auto_2278_10 < _auto_2277_9->count;++_auto_2278_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_11,(((RogueClassCmdSelectCase*)(_auto_2277_9->data->objects[_auto_2278_10]))));
        __trace.line = 4671;
        RogueCmdSelectCase__cast_conditions__Type_Scope( c_11, expr_type_2, scope_0 );
      }
    }
  }
  __trace.line = 4675;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelect__type( RogueClassCmdSelect* THIS )
{
  RogueDebugTrace __trace( "CmdSelect.type()", "Cmd.rogue", 4677 );
  __trace.line = 4678;
  return (RogueClassType*)(THIS->_value_type);
}

void RogueCmdSelect__write_cpp__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdSelect.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2891 );
  __trace.line = 2892;
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCmdSelectCase_List__reader( ROGUE_ARG(THIS->cases) )))), writer_0, true );
}

RogueClassCmdSelect* RogueCmdSelect__init_object( RogueClassCmdSelect* THIS )
{
  RogueDebugTrace __trace( "CmdSelect.init_object()", "Cmd.rogue", 4626 );
  return (RogueClassCmdSelect*)(THIS);
}

RogueClassCmdSelect* RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( RogueClassCmdSelect* THIS, RogueClassToken* _auto_871_0, RogueClassLocal* _auto_872_1, RogueClassCmd* _auto_873_2, RogueCmdSelectCase_List* _auto_874_3 )
{
  RogueDebugTrace __trace( "CmdSelect.init(Token,Local,Cmd,CmdSelectCase[])", "Cmd.rogue", 4634 );
  THIS->cases = _auto_874_3;
  THIS->expression = _auto_873_2;
  THIS->local_info = _auto_872_1;
  THIS->t = _auto_871_0;
  __trace.line = 4636;
  return (RogueClassCmdSelect*)(THIS);
}

void RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassListReader_CmdSelectCase_* reader_0, RogueClassCPPWriter* writer_1, RogueLogical first_case_2 )
{
  RogueDebugTrace __trace( "CmdSelect.write_cpp(ListReader<<CmdSelectCase>>,CPPWriter,Logical)", "CPPWriter.rogue", 2894 );
  __trace.line = 2895;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_3,(((RogueListReader_CmdSelectCase___read( reader_0 )))));
  __trace.line = 2897;
  if (!(((RogueListReader_CmdSelectCase___has_another( reader_0 )))))
  {
    __trace.line = 2899;
    call_ROGUEM104( 37, ROGUE_ARG(select_case_3->value), writer_1, false );
    __trace.line = 2900;
    return;
  }
  __trace.line = 2903;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[614] );
  __trace.line = 2905;
  RogueLogical first_condition_4 = (true);
  __trace.line = 2906;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2289_5,(select_case_3->conditions));
    RogueInt32 _auto_2290_6 = (0);
    for (;_auto_2290_6 < _auto_2289_5->count;++_auto_2290_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_7,(((RogueClassCmd*)(_auto_2289_5->data->objects[_auto_2290_6]))));
      __trace.line = 2907;
      if (first_condition_4)
      {
        first_condition_4 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 2908;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1114] );
      }
      __trace.line = 2910;
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[94] );
      __trace.line = 2911;
      if (!!(THIS->expression))
      {
        __trace.line = 2912;
        if (first_case_2)
        {
          __trace.line = 2914;
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[224] );
          __trace.line = 2915;
          call_ROGUEM104( 37, ROGUE_ARG(THIS->expression), writer_1, false );
          __trace.line = 2916;
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[34] );
          __trace.line = 2917;
          first_case_2 = ((RogueLogical)false);
        }
        else
        {
          __trace.line = 2919;
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
        }
        __trace.line = 2921;
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[223] );
      }
      __trace.line = 2924;
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[94] );
      __trace.line = 2925;
      call_ROGUEM104( 37, c_7, writer_1, false );
      __trace.line = 2926;
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[566] );
    }
  }
  __trace.line = 2929;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1115] );
  __trace.line = 2931;
  call_ROGUEM104( 37, ROGUE_ARG(select_case_3->value), writer_1, false );
  __trace.line = 2933;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1116] );
  __trace.line = 2935;
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), reader_0, writer_1, false );
  __trace.line = 2937;
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[34] );
}

RogueString* RogueCmdSelectCase__type_name( RogueClassCmdSelectCase* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase.type_name()", "Cmd.rogue", 4681 );
  return (RogueString*)(Rogue_literal_strings[959]);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__clone__CloneArgs( RogueClassCmdSelectCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase.clone(CloneArgs)", "Cmd.rogue", 4689 );
  __trace.line = 4690;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,result_1,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd_List*)(NULL))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) )))));
  __trace.line = 4691;
  result_1->conditions = (call_ROGUEM111( 8, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), ROGUE_ARG(THIS->conditions->count) ));
  __trace.line = 4692;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2291_2,(THIS->conditions));
    RogueInt32 _auto_2292_3 = (0);
    for (;_auto_2292_3 < _auto_2291_2->count;++_auto_2292_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_4,(((RogueClassCmd*)(_auto_2291_2->data->objects[_auto_2292_3]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(result_1->conditions), ROGUE_ARG((call_ROGUEM99( 10, c_4, clone_args_0 ))) );
    }
  }
  __trace.line = 4693;
  return (RogueClassCmdSelectCase*)(result_1);
}

void RogueCmdSelectCase__dispatch__Visitor( RogueClassCmdSelectCase* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdSelectCase( v_0, ROGUE_ARG(THIS) );
}

RogueClassType* RogueCmdSelectCase__implicit_type__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase.implicit_type(Scope)", "Cmd.rogue", 4700 );
  __trace.line = 4701;
  return (RogueClassType*)((call_ROGUEM101( 23, ROGUE_ARG(THIS->value), scope_0 )));
}

RogueClassCmd* RogueCmdSelectCase__resolve__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase.resolve(Scope)", "Cmd.rogue", 4703 );
  __trace.line = 4704;
  if (!(!!(THIS->value)))
  {
    THIS->value = (call_ROGUEM99( 10, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[0]))), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  __trace.line = 4706;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2293_1,(THIS->conditions));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_2293_1->count;++i_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_2293_1->data->objects[i_2]))));
      __trace.line = 4707;
      condition_3 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[i_2]))), scope_0 ))) ))));
      __trace.line = 4708;
      if ((call_ROGUEM90( 36, condition_3 ))->is_optional)
      {
        __trace.line = 4709;
        condition_3 = ((RogueClassCmd*)((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(condition_3->t), condition_3, Rogue_literal_strings[476] )))), scope_0 ))));
      }
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->conditions->data->objects[i_2] = condition_3;
    }
  }
  __trace.filename = "Cmd.rogue";
  __trace.line = 4714;
  THIS->value = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->value), scope_0 ))) )));
  __trace.line = 4715;
  if ((call_ROGUEM90( 36, ROGUE_ARG(THIS->value) ))->is_optional)
  {
    __trace.line = 4716;
    THIS->value = ((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->value->t), ROGUE_ARG(THIS->value), Rogue_literal_strings[1030] )))), scope_0 )));
  }
  __trace.line = 4719;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelectCase__type( RogueClassCmdSelectCase* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase.type()", "Cmd.rogue", 4721 );
  __trace.line = 4722;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->value) )));
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init_object( RogueClassCmdSelectCase* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase.init_object()", "Cmd.rogue", 4681 );
  return (RogueClassCmdSelectCase*)(THIS);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init__Token_Cmd_List_Cmd( RogueClassCmdSelectCase* THIS, RogueClassToken* _auto_875_0, RogueCmd_List* _auto_876_1, RogueClassCmd* _auto_877_2 )
{
  RogueDebugTrace __trace( "CmdSelectCase.init(Token,Cmd[],Cmd)", "Cmd.rogue", 4687 );
  THIS->value = _auto_877_2;
  THIS->conditions = _auto_876_1;
  THIS->t = _auto_875_0;
  __trace.line = 4689;
  return (RogueClassCmdSelectCase*)(THIS);
}

void RogueCmdSelectCase__cast_conditions__Type_Scope( RogueClassCmdSelectCase* THIS, RogueClassType* to_type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "CmdSelectCase.cast_conditions(Type,Scope)", "Cmd.rogue", 4695 );
  __trace.line = 4696;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2294_2,(THIS->conditions));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_2294_2->count;++i_3)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->conditions->data->objects[i_3] = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->objects[i_3]))), to_type_0, scope_1 ))), scope_1 ))) )));
    }
  }
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdControlStructure_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueString* RogueCmdControlStructure_List__to_String( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_2295_2,(THIS));
    RogueInt32 _auto_2296_3 = (0);
    for (;_auto_2296_3 < _auto_2295_2->count;++_auto_2296_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,value_4,(((RogueClassCmdControlStructure*)(_auto_2295_2->data->objects[_auto_2296_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdControlStructure_List__type_name( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[832]);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init_object( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].init_object()", "List.rogue", 4 );
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdControlStructure*), true );
  }
  __trace.line = 16;
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__add__CmdControlStructure( RogueCmdControlStructure_List* THIS, RogueClassCmdControlStructure* value_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure[].add(CmdControlStructure)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdControlStructure_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueInt32 RogueCmdControlStructure_List__capacity( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__reserve__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdControlStructure_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_at__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 index_0 )
{
  RogueDebugTrace __trace( "CmdControlStructure[].remove_at(Int32)", "List.rogue", 275 );
  __trace.line = 276;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,result_1,(((RogueClassCmdControlStructure*)(THIS->data->objects[index_0]))));
  __trace.line = 277;
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  __trace.line = 278;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,zero_value_2,0);
  __trace.line = 279;
  --THIS->count;
  __trace.line = 280;
  THIS->data->objects[THIS->count] = zero_value_2;
  __trace.line = 281;
  return (RogueClassCmdControlStructure*)(result_1);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_last( RogueCmdControlStructure_List* THIS )
{
  RogueDebugTrace __trace( "CmdControlStructure[].remove_last()", "List.rogue", 286 );
  __trace.line = 287;
  return (RogueClassCmdControlStructure*)(((RogueCmdControlStructure_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueString* RogueCmdLiteralThis__type_name( RogueClassCmdLiteralThis* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralThis.type_name()", "Cmd.rogue", 2104 );
  return (RogueString*)(Rogue_literal_strings[1172]);
}

RogueClassCmd* RogueCmdLiteralThis__clone__CloneArgs( RogueClassCmdLiteralThis* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralThis.clone(CloneArgs)", "Cmd.rogue", 2109 );
  __trace.line = 2110;
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  __trace.line = 2111;
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  __trace.line = 2113;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 2114;
  if (!!(task_args_2))
  {
    __trace.line = 2115;
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    __trace.line = 2117;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))))));
  }
}

void RogueCmdLiteralThis__dispatch__Visitor( RogueClassCmdLiteralThis* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralThis.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdThisContext( v_0, ROGUE_ARG(((RogueClassCmdThisContext*)(THIS))) );
}

void RogueCmdLiteralThis__require_type_context( RogueClassCmdLiteralThis* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralThis.require_type_context()", "Cmd.rogue", 2120 );
  __trace.line = 2121;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[499] ))));
}

RogueClassCmd* RogueCmdLiteralThis__resolve__Scope( RogueClassCmdLiteralThis* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralThis.resolve(Scope)", "Cmd.rogue", 2123 );
  __trace.line = 2124;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  __trace.line = 2125;
  if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
  {
    __trace.line = 2126;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[513] ))));
  }
  __trace.line = 2128;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdLiteralThis* RogueCmdLiteralThis__init_object( RogueClassCmdLiteralThis* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralThis.init_object()", "Cmd.rogue", 2104 );
  return (RogueClassCmdLiteralThis*)(THIS);
}

RogueString* RogueArray_CmdLabel___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdLabel>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[876]);
}

RogueString* RogueCmdLiteralInt32__type_name( RogueClassCmdLiteralInt32* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.type_name()", "Cmd.rogue", 1399 );
  return (RogueString*)(Rogue_literal_strings[1165]);
}

RogueClassCmd* RogueCmdLiteralInt32__cast_to__Type_Scope( RogueClassCmdLiteralInt32* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.cast_to(Type,Scope)", "Cmd.rogue", 1409 );
  __trace.line = 1410;
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 1411;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else
  {
    __trace.line = 1413;
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralInt32__clone__CloneArgs( RogueClassCmdLiteralInt32* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.clone(CloneArgs)", "Cmd.rogue", 1406 );
  __trace.line = 1407;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralInt32__dispatch__Visitor( RogueClassCmdLiteralInt32* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralInt32__resolve__Scope( RogueClassCmdLiteralInt32* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.resolve(Scope)", "Cmd.rogue", 1416 );
  __trace.line = 1417;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralInt32__type( RogueClassCmdLiteralInt32* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.type()", "Cmd.rogue", 1419 );
  __trace.line = 1420;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt32* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2079 );
  __trace.line = 2080;
  RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->value) );
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init_object( RogueClassCmdLiteralInt32* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.init_object()", "Cmd.rogue", 1399 );
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init__Token_Int32( RogueClassCmdLiteralInt32* THIS, RogueClassToken* _auto_892_0, RogueInt32 _auto_893_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt32.init(Token,Int32)", "Cmd.rogue", 1404 );
  THIS->value = _auto_893_1;
  THIS->t = _auto_892_0;
  __trace.line = 1406;
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueString* RogueCmdCompareNE__type_name( RogueClassCmdCompareNE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareNE.type_name()", "Cmd.rogue", 3036 );
  return (RogueString*)(Rogue_literal_strings[1228]);
}

RogueClassCmd* RogueCmdCompareNE__clone__CloneArgs( RogueClassCmdCompareNE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareNE.clone(CloneArgs)", "Cmd.rogue", 3038 );
  __trace.line = 3039;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareNE__combine_literal_operands__Type( RogueClassCmdCompareNE* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareNE.combine_literal_operands(Type)", "Cmd.rogue", 3041 );
  __trace.line = 3042;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3043;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value != ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3045;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value != ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3047;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareNE__dispatch__Visitor( RogueClassCmdCompareNE* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareNE.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareNE* RogueCmdCompareNE__init_object( RogueClassCmdCompareNE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareNE.init_object()", "Cmd.rogue", 3036 );
  return (RogueClassCmdCompareNE*)(THIS);
}

RogueString* RogueCmdCompareNE__symbol( RogueClassCmdCompareNE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareNE.symbol()", "Cmd.rogue", 3071 );
  __trace.line = 3072;
  return (RogueString*)(Rogue_literal_strings[233]);
}

RogueClassCmd* RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareNE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareNE.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3050 );
  __trace.line = 3051;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3052;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3054;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3055;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3057;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3058;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3060;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3061;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3063;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3064;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3066;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3069;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdComparison__type_name( RogueClassCmdComparison* THIS )
{
  RogueDebugTrace __trace( "CmdComparison.type_name()", "Cmd.rogue", 2957 );
  return (RogueString*)(Rogue_literal_strings[1194]);
}

void RogueCmdComparison__dispatch__Visitor( RogueClassCmdComparison* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdComparison.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassType* Rogue_CmdComparison__type( RogueClassCmdComparison* THIS )
{
  RogueDebugTrace __trace( "CmdComparison.type()", "Cmd.rogue", 2990 );
  __trace.line = 2991;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdComparison* RogueCmdComparison__init_object( RogueClassCmdComparison* THIS )
{
  RogueDebugTrace __trace( "CmdComparison.init_object()", "Cmd.rogue", 2957 );
  return (RogueClassCmdComparison*)(THIS);
}

RogueLogical RogueCmdComparison__requires_parens( RogueClassCmdComparison* THIS )
{
  RogueDebugTrace __trace( "CmdComparison.requires_parens()", "Cmd.rogue", 2984 );
  __trace.line = 2985;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdComparison__resolve_for_types__Scope_Type_Type( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdComparison.resolve_for_types(Scope,Type,Type)", "Cmd.rogue", 2962 );
  __trace.line = 2963;
  THIS->resolved = true;
  __trace.line = 2965;
  if ((((RogueType__is_compound( left_type_1 ))) || ((RogueType__is_compound( right_type_2 )))))
  {
    __trace.line = 2966;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((call_ROGUEM676( 47, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, false ))));
    __trace.line = 2967;
    if (!!(result_3))
    {
      return (RogueClassCmd*)(result_3);
    }
    __trace.line = 2969;
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
    __trace.line = 2970;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
  else if ((((RogueType__is_reference( left_type_1 ))) || ((RogueType__is_reference( right_type_2 )))))
  {
    __trace.line = 2973;
    return (RogueClassCmd*)((call_ROGUEM676( 47, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, true )));
  }
  __trace.line = 2977;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  __trace.line = 2978;
  THIS->left = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->left), common_type_4, scope_0 ))), scope_0 ));
  __trace.line = 2979;
  THIS->right = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->right), common_type_4, scope_0 ))), scope_0 ));
  __trace.line = 2980;
  if (((call_ROGUEM87( 24, ROGUE_ARG(THIS->left) )) && (call_ROGUEM87( 24, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((call_ROGUEM84( 14, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  __trace.line = 2982;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdComparison.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 2987 );
  __trace.line = 2988;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1215] ))));
}

RogueString* RogueTaskArgs__type_name( RogueClassTaskArgs* THIS )
{
  RogueDebugTrace __trace( "TaskArgs.type_name()", "CloneArgs.rogue", 75 );
  return (RogueString*)(Rogue_literal_strings[1152]);
}

RogueClassTaskArgs* RogueTaskArgs__init_object( RogueClassTaskArgs* THIS )
{
  RogueDebugTrace __trace( "TaskArgs.init_object()", "CloneArgs.rogue", 75 );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__init__Type_Method_Type_Method( RogueClassTaskArgs* THIS, RogueClassType* _auto_900_0, RogueClassMethod* _auto_901_1, RogueClassType* _auto_902_2, RogueClassMethod* _auto_903_3 )
{
  RogueDebugTrace __trace( "TaskArgs.init(Type,Method,Type,Method)", "CloneArgs.rogue", 86 );
  THIS->original_method = _auto_903_3;
  THIS->_original_type = _auto_902_2;
  THIS->task_method = _auto_901_1;
  THIS->_task_type = _auto_900_0;
  __trace.line = 87;
  THIS->cmd_task_control = ((RogueCmdTaskControl__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControl*,ROGUE_CREATE_OBJECT(CmdTaskControl))), ROGUE_ARG(THIS->task_method->t) )));
  __trace.line = 89;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add__Cmd( RogueClassTaskArgs* THIS, RogueClassCmd* cmd_0 )
{
  RogueDebugTrace __trace( "TaskArgs.add(Cmd)", "CloneArgs.rogue", 89 );
  __trace.line = 90;
  if (!!(cmd_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cmd_task_control->current_section->statements)), cmd_0 );
  }
  __trace.line = 91;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_jump__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueDebugTrace __trace( "TaskArgs.add_jump(Token,CmdTaskControlSection)", "CloneArgs.rogue", 93 );
  __trace.line = 94;
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, to_section_1 );
  __trace.line = 95;
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true )))))) )))))) );
  __trace.line = 96;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmd* condition_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueDebugTrace __trace( "TaskArgs.add_conditional_jump(Cmd,CmdTaskControlSection)", "CloneArgs.rogue", 98 );
  __trace.line = 99;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(condition_0->t));
  __trace.line = 100;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_2, condition_0, 2 )))));
  __trace.line = 102;
  RogueInt32 ip_4 = (to_section_1->ip);
  __trace.line = 103;
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_4)
  {
    __trace.line = 104;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_2, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_2, ROGUE_ARG((ip_4 - 1)) )))))) )))))) );
  }
  __trace.line = 106;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_2, true )))))) )))))) );
  __trace.line = 108;
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_if_3))) );
  __trace.line = 109;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmd* RogueTaskArgs__create_return__Token_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmd* value_1 )
{
  RogueDebugTrace __trace( "TaskArgs.create_return(Token,Cmd)", "CloneArgs.rogue", 111 );
  __trace.line = 112;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  __trace.line = 113;
  if (!!(value_1))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[466] )))))), value_1 )))))) );
  }
  __trace.line = 114;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, -1 )))))) )))))) );
  __trace.line = 115;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  __trace.line = 116;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassCmd* RogueTaskArgs__create_escape__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* escape_section_1 )
{
  RogueDebugTrace __trace( "TaskArgs.create_escape(Token,CmdTaskControlSection)", "CloneArgs.rogue", 118 );
  __trace.line = 119;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  __trace.line = 120;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((escape_section_1->ip - 1)) )))))) )))))) );
  __trace.line = 121;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  __trace.line = 122;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassTaskArgs* RogueTaskArgs__add_yield__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "TaskArgs.add_yield(Token)", "CloneArgs.rogue", 124 );
  __trace.line = 125;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  __trace.line = 126;
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, next_section_1 );
  __trace.line = 127;
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  __trace.line = 128;
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), next_section_1 );
  __trace.line = 129;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__jump_to_new_section__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "TaskArgs.jump_to_new_section(Token)", "CloneArgs.rogue", 131 );
  __trace.line = 132;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,new_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  __trace.line = 133;
  RogueTaskArgs__add_jump__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, new_section_1 );
  __trace.line = 134;
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), new_section_1 );
  __trace.line = 135;
  return (RogueClassCmdTaskControlSection*)(new_section_1);
}

RogueClassTaskArgs* RogueTaskArgs__begin_section__CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmdTaskControlSection* section_0 )
{
  RogueDebugTrace __trace( "TaskArgs.begin_section(CmdTaskControlSection)", "CloneArgs.rogue", 137 );
  __trace.line = 138;
  THIS->cmd_task_control->current_section = section_0;
  __trace.line = 139;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__create_section( RogueClassTaskArgs* THIS )
{
  RogueDebugTrace __trace( "TaskArgs.create_section()", "CloneArgs.rogue", 144 );
  __trace.line = 145;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_0,(((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), ROGUE_ARG((THIS->cmd_task_control->sections->count + 1)) )))));
  __trace.line = 146;
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->cmd_task_control->sections), section_0 );
  __trace.line = 147;
  return (RogueClassCmdTaskControlSection*)(section_0);
}

RogueClassCmd* RogueTaskArgs__cmd_read_this__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "TaskArgs.cmd_read_this(Token)", "CloneArgs.rogue", 149 );
  __trace.line = 150;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_read_context__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "TaskArgs.cmd_read_context(Token)", "CloneArgs.rogue", 152 );
  __trace.line = 153;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->context_property) ))))));
}

RogueString* RogueTaskArgs__convert_local_name__Local( RogueClassTaskArgs* THIS, RogueClassLocal* local_info_0 )
{
  RogueDebugTrace __trace( "TaskArgs.convert_local_name(Local)", "CloneArgs.rogue", 155 );
  __trace.line = 156;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->index) )))) )))) ))));
}

RogueClassCmd* RogueTaskArgs__cmd_read__Token_Local( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1 )
{
  RogueDebugTrace __trace( "TaskArgs.cmd_read(Token,Local)", "CloneArgs.rogue", 158 );
  __trace.line = 159;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_write__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* new_value_2 )
{
  RogueDebugTrace __trace( "TaskArgs.cmd_write(Token,Local,Cmd)", "CloneArgs.rogue", 161 );
  __trace.line = 162;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassCmd* RogueTaskArgs__replace_write_local__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* new_value_2 )
{
  RogueDebugTrace __trace( "TaskArgs.replace_write_local(Token,Local,Cmd)", "CloneArgs.rogue", 164 );
  __trace.line = 165;
  if (((void*)new_value_2) == ((void*)NULL))
  {
    new_value_2 = ((RogueClassCmd*)((RogueType__create_default_value__Token( ROGUE_ARG(local_info_1->_type), t_0 ))));
  }
  __trace.line = 166;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassTaskArgs* RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueDebugTrace __trace( "TaskArgs.set_next_ip(Token,CmdTaskControlSection)", "CloneArgs.rogue", 168 );
  __trace.line = 169;
  RogueInt32 ip_2 = (to_section_1->ip);
  __trace.line = 170;
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_2)
  {
    __trace.line = 171;
    RogueCmdTaskControl__add__Cmd( ROGUE_ARG(THIS->cmd_task_control), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((ip_2 - 1)) )))))) )))))) );
  }
  __trace.line = 173;
  return (RogueClassTaskArgs*)(THIS);
}

RogueString* RogueArray_Cmd___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Cmd>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[877]);
}

RogueString* RogueCmdTaskControlSection__type_name( RogueClassCmdTaskControlSection* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection.type_name()", "Cmd.rogue", 4072 );
  return (RogueString*)(Rogue_literal_strings[787]);
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init__Int32( RogueClassCmdTaskControlSection* THIS, RogueInt32 _auto_906_0 )
{
  RogueDebugTrace __trace( "CmdTaskControlSection.init(Int32)", "Cmd.rogue", 4078 );
  THIS->ip = _auto_906_0;
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init_object( RogueClassCmdTaskControlSection* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection.init_object()", "Cmd.rogue", 4072 );
  __trace.line = 4075;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  __trace.line = 4072;
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Method_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method_List__List__to_String( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method_List__List*,_auto_2333_2,(THIS));
    RogueInt32 _auto_2334_3 = (0);
    for (;_auto_2334_3 < _auto_2333_2->count;++_auto_2334_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,value_4,(((RogueClassTableEntry_String_Method_List_*)(_auto_2333_2->data->objects[_auto_2334_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Method_List___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Method_List__List__type_name( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[833]);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init_object( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init__Int32( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_List_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__init__Int32_TableEntry_String_Method_List_( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Method_List_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].init(Int32,TableEntry<<String,Method[]>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_List_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_950_3 = (initial_capacity_0);
      for (;i_2 <= _auto_950_3;++i_2)
      {
        RogueTableEntry_String_Method_List__List__add__TableEntry_String_Method_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__add__TableEntry_String_Method_List_( RogueTableEntry_String_Method_List__List* THIS, RogueClassTableEntry_String_Method_List_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].add(TableEntry<<String,Method[]>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Method_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Method_List__List__capacity( RogueTableEntry_String_Method_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Method_List__List* RogueTableEntry_String_Method_List__List__reserve__Int32( RogueTableEntry_String_Method_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Method_List__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_List_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Method_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method_List___to_String( RogueClassTableEntry_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Method_List___type_name( RogueClassTableEntry_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[728]);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init__String_Method_List_Int32( RogueClassTableEntry_String_Method_List_* THIS, RogueString* _key_0, RogueMethod_List* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>.init(String,Method[],Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init_object( RogueClassTableEntry_String_Method_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method[]>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Method_List____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Method[]>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[878]);
}

RogueDefinition_List* RogueDefinition_List__init( RogueDefinition_List* THIS )
{
  RogueDebugTrace __trace( "Definition[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueDefinition_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueDefinition_List*)(THIS);
}

RogueString* RogueDefinition_List__to_String( RogueDefinition_List* THIS )
{
  RogueDebugTrace __trace( "Definition[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_2394_2,(THIS));
    RogueInt32 _auto_2395_3 = (0);
    for (;_auto_2395_3 < _auto_2394_2->count;++_auto_2395_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,value_4,(((RogueClassDefinition*)(_auto_2394_2->data->objects[_auto_2395_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueDefinition_List__type_name( RogueDefinition_List* THIS )
{
  RogueDebugTrace __trace( "Definition[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[834]);
}

RogueDefinition_List* RogueDefinition_List__init_object( RogueDefinition_List* THIS )
{
  RogueDebugTrace __trace( "Definition[].init_object()", "List.rogue", 4 );
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__init__Int32( RogueDefinition_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Definition[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassDefinition*), true );
  }
  __trace.line = 16;
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__add__Definition( RogueDefinition_List* THIS, RogueClassDefinition* value_0 )
{
  RogueDebugTrace __trace( "Definition[].add(Definition)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueDefinition_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueDefinition_List*)(THIS);
}

RogueInt32 RogueDefinition_List__capacity( RogueDefinition_List* THIS )
{
  RogueDebugTrace __trace( "Definition[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueDefinition_List* RogueDefinition_List__reserve__Int32( RogueDefinition_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Definition[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueDefinition_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueDefinition_List*)(THIS);
}

RogueString* RogueDefinition__type_name( RogueClassDefinition* THIS )
{
  RogueDebugTrace __trace( "Definition.type_name()", "Definition.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[788]);
}

RogueClassDefinition* RogueDefinition__init__Token_String_Cmd_Logical( RogueClassDefinition* THIS, RogueClassToken* _auto_1009_0, RogueString* _auto_1010_1, RogueClassCmd* _auto_1011_2, RogueLogical _auto_1012_3 )
{
  RogueDebugTrace __trace( "Definition.init(Token,String,Cmd,Logical)", "Definition.rogue", 9 );
  THIS->is_enumeration = _auto_1012_3;
  THIS->expression = _auto_1011_2;
  THIS->name = _auto_1010_1;
  THIS->t = _auto_1009_0;
  return (RogueClassDefinition*)(THIS);
}

RogueClassDefinition* RogueDefinition__init_object( RogueClassDefinition* THIS )
{
  RogueDebugTrace __trace( "Definition.init_object()", "Definition.rogue", 1 );
  return (RogueClassDefinition*)(THIS);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init( RogueClassTable_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Definition___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueString* RogueTable_String_Definition___to_String( RogueClassTable_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Definition___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Definition___type_name( RogueClassTable_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[789]);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init__Int32( RogueClassTable_String_Definition_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Definition__List__init__Int32_TableEntry_String_Definition_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Definition__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Definition__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Definition_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueLogical RogueTable_String_Definition___contains__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.contains(String)", "Table.rogue", 39 );
  __trace.line = 40;
  return (RogueLogical)(!!(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Definition_* RogueTable_String_Definition___find__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_2,(((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Definition_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Definition_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Definition_*)(((RogueClassTableEntry_String_Definition_*)(NULL)));
}

RogueClassDefinition* RogueTable_String_Definition___get__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_1,(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassDefinition*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassDefinition*)(default_value_2);
  }
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___set__String_Definition( RogueClassTable_String_Definition_* THIS, RogueString* key_0, RogueClassDefinition* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.set(String,Definition)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_4,(((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Definition_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Definition_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Definition_*)((RogueTableEntry_String_Definition___init__String_Definition_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Definition_*,ROGUE_CREATE_OBJECT(TableEntry_String_Definition_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Definition_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Definition___print_to__StringBuilder( RogueClassTable_String_Definition_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Definition___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init_object( RogueClassTable_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Definition>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init( RogueClassTable_String_Property_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Property___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueString* RogueTable_String_Property___to_String( RogueClassTable_String_Property_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Property___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Property___type_name( RogueClassTable_String_Property_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[790]);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init__Int32( RogueClassTable_String_Property_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Property__List__init__Int32_TableEntry_String_Property_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Property__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Property__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Property_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Property_*)(THIS);
}

void RogueTable_String_Property___clear( RogueClassTable_String_Property_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.clear()", "Table.rogue", 32 );
  __trace.line = 33;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Property__List*,_auto_2450_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2450_0->count;++i_1)
    {
      __trace.filename = "List.rogue";
      __trace.line = 308;
      THIS->bins->data->objects[i_1] = ((RogueClassTableEntry_String_Property_*)(NULL));
    }
  }
  __trace.filename = "Table.rogue";
  __trace.line = 34;
  RogueString_List__clear( ROGUE_ARG(THIS->keys) );
}

RogueClassTableEntry_String_Property_* RogueTable_String_Property___find__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_2,(((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Property_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Property_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Property_*)(((RogueClassTableEntry_String_Property_*)(NULL)));
}

RogueClassProperty* RogueTable_String_Property___get__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_1,(((RogueTable_String_Property___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassProperty*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassProperty*)(default_value_2);
  }
}

RogueClassTable_String_Property_* RogueTable_String_Property___set__String_Property( RogueClassTable_String_Property_* THIS, RogueString* key_0, RogueClassProperty* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.set(String,Property)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_4,(((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Property_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Property_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Property_*)((RogueTableEntry_String_Property___init__String_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Property_*,ROGUE_CREATE_OBJECT(TableEntry_String_Property_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Property_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Property___print_to__StringBuilder( RogueClassTable_String_Property_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init_object( RogueClassTable_String_Property_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Property>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueString* RogueMethodTemplates__type_name( RogueClassMethodTemplates* THIS )
{
  RogueDebugTrace __trace( "MethodTemplates.type_name()", "MethodTemplate.rogue", 98 );
  return (RogueString*)(Rogue_literal_strings[791]);
}

RogueClassMethodTemplates* RogueMethodTemplates__init__Type( RogueClassMethodTemplates* THIS, RogueClassType* _auto_1017_0 )
{
  RogueDebugTrace __trace( "MethodTemplates.init(Type)", "MethodTemplate.rogue", 98 );
  THIS->type_context = _auto_1017_0;
  return (RogueClassMethodTemplates*)(THIS);
}

void RogueMethodTemplates__add__MethodTemplate( RogueClassMethodTemplates* THIS, RogueClassMethodTemplate* m_0 )
{
  RogueDebugTrace __trace( "MethodTemplates.add(MethodTemplate)", "MethodTemplate.rogue", 104 );
  __trace.line = 105;
  RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), m_0 );
}

RogueLogical RogueMethodTemplates__has_templates_named__String( RogueClassMethodTemplates* THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "MethodTemplates.has_templates_named(String)", "MethodTemplate.rogue", 107 );
  __trace.line = 108;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2465_1,(THIS->templates));
    RogueInt32 _auto_2466_2 = (0);
    for (;_auto_2466_2 < _auto_2465_1->count;++_auto_2466_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueClassMethodTemplate*)(_auto_2465_1->data->objects[_auto_2466_2]))));
      __trace.line = 109;
      if ((!(m_3->is_instantiating) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_3->name), name_0 )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  __trace.line = 112;
  return (RogueLogical)(false);
}

void RogueMethodTemplates__inherit__MethodTemplates( RogueClassMethodTemplates* THIS, RogueClassMethodTemplates* other_0 )
{
  RogueDebugTrace __trace( "MethodTemplates.inherit(MethodTemplates)", "MethodTemplate.rogue", 114 );
  __trace.line = 115;
  if (!(!!(other_0)))
  {
    return;
  }
  __trace.line = 117;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2467_3,(other_0->templates));
    RogueInt32 _auto_2468_4 = (0);
    for (;_auto_2468_4 < _auto_2467_3->count;++_auto_2468_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,other_m_5,(((RogueClassMethodTemplate*)(_auto_2467_3->data->objects[_auto_2468_4]))));
      __trace.line = 118;
      ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(other_m_5->name));
      __trace.line = 119;
      RogueInt32 type_parameter_count_2 = (other_m_5->type_parameters->count);
      __trace.line = 120;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2469_6,(THIS->templates));
        RogueInt32 _auto_2470_7 = (0);
        for (;_auto_2470_7 < _auto_2469_6->count;++_auto_2470_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_8,(((RogueClassMethodTemplate*)(_auto_2469_6->data->objects[_auto_2470_7]))));
          __trace.line = 121;
          if ((m_8->type_parameters->count == type_parameter_count_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_8->name), name_1 )))))
          {
            __trace.line = 124;
            m_8->is_override = true;
            __trace.line = 125;
            other_m_5->is_overridden = true;
          }
          else
          {
            __trace.line = 127;
            RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), other_m_5 );
          }
        }
      }
    }
  }
}

RogueLogical RogueMethodTemplates__instantiate__String_Int32_Token_String( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 type_parameter_count_1, RogueClassToken* t_2, RogueString* specialized_name_3 )
{
  RogueDebugTrace __trace( "MethodTemplates.instantiate(String,Int32,Token,String)", "MethodTemplate.rogue", 132 );
  __trace.line = 133;
  RogueLogical found_any_4 = (false);
  __trace.line = 135;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2471_5,(THIS->templates));
    RogueInt32 _auto_2472_6 = (0);
    for (;_auto_2472_6 < _auto_2471_5->count;++_auto_2472_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_7,(((RogueClassMethodTemplate*)(_auto_2471_5->data->objects[_auto_2472_6]))));
      __trace.line = 136;
      if (((!(m_7->is_instantiating) && m_7->type_parameters->count == type_parameter_count_1) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_7->name), name_0 )))))
      {
        __trace.line = 137;
        found_any_4 = ((RogueLogical)true);
        __trace.line = 138;
        if (((void*)THIS->type_context) == ((void*)m_7->type_context))
        {
          __trace.line = 139;
          RogueMethodTemplate__instantiate__Token_String( m_7, t_2, specialized_name_3 );
        }
      }
    }
  }
  __trace.line = 144;
  return (RogueLogical)(found_any_4);
}

RogueClassMethodTemplates* RogueMethodTemplates__init_object( RogueClassMethodTemplates* THIS )
{
  RogueDebugTrace __trace( "MethodTemplates.init_object()", "MethodTemplate.rogue", 98 );
  __trace.line = 101;
  THIS->templates = ((RogueMethodTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethodTemplate_List*,ROGUE_CREATE_OBJECT(MethodTemplate_List))) )));
  __trace.line = 98;
  return (RogueClassMethodTemplates*)(THIS);
}

RogueString* RogueCmdLiteralNull__type_name( RogueClassCmdLiteralNull* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralNull.type_name()", "Cmd.rogue", 1310 );
  return (RogueString*)(Rogue_literal_strings[1166]);
}

RogueClassCmd* RogueCmdLiteralNull__cast_to__Type_Scope( RogueClassCmdLiteralNull* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.cast_to(Type,Scope)", "Cmd.rogue", 1314 );
  __trace.line = 1315;
  if (target_type_0->is_optional)
  {
    __trace.line = 1316;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(target_type_0->_element_type->name) )))) )))), Rogue_literal_strings[242] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else
  {
    __trace.line = 1318;
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralNull__clone__CloneArgs( RogueClassCmdLiteralNull* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.clone(CloneArgs)", "Cmd.rogue", 1321 );
  __trace.line = 1322;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), ROGUE_ARG(THIS->t) ))))));
}

void RogueCmdLiteralNull__dispatch__Visitor( RogueClassCmdLiteralNull* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__resolve__Scope( RogueClassCmdLiteralNull* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.resolve(Scope)", "Cmd.rogue", 1324 );
  __trace.line = 1325;
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassType* Rogue_CmdLiteralNull__type( RogueClassCmdLiteralNull* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralNull.type()", "Cmd.rogue", 1327 );
  __trace.line = 1328;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null);
}

void RogueCmdLiteralNull__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralNull* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2051 );
  __trace.line = 2052;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1117] );
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init_object( RogueClassCmdLiteralNull* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralNull.init_object()", "Cmd.rogue", 1310 );
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init__Token( RogueClassCmdLiteralNull* THIS, RogueClassToken* _auto_1022_0 )
{
  RogueDebugTrace __trace( "CmdLiteralNull.init(Token)", "Cmd.rogue", 1312 );
  THIS->t = _auto_1022_0;
  __trace.line = 1314;
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueString* RogueCmdLiteralLogical__type_name( RogueClassCmdLiteralLogical* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.type_name()", "Cmd.rogue", 1442 );
  return (RogueString*)(Rogue_literal_strings[1167]);
}

RogueClassCmd* RogueCmdLiteralLogical__clone__CloneArgs( RogueClassCmdLiteralLogical* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.clone(CloneArgs)", "Cmd.rogue", 1449 );
  __trace.line = 1450;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralLogical__dispatch__Visitor( RogueClassCmdLiteralLogical* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralLogical__resolve__Scope( RogueClassCmdLiteralLogical* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.resolve(Scope)", "Cmd.rogue", 1452 );
  __trace.line = 1453;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralLogical__type( RogueClassCmdLiteralLogical* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.type()", "Cmd.rogue", 1455 );
  __trace.line = 1456;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2106 );
  __trace.line = 2107;
  if (THIS->value)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[204] );
  }
  else
  {
    __trace.line = 2108;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[193] );
  }
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init_object( RogueClassCmdLiteralLogical* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.init_object()", "Cmd.rogue", 1442 );
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init__Token_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassToken* _auto_1023_0, RogueLogical _auto_1024_1 )
{
  RogueDebugTrace __trace( "CmdLiteralLogical.init(Token,Logical)", "Cmd.rogue", 1447 );
  THIS->value = _auto_1024_1;
  THIS->t = _auto_1023_0;
  __trace.line = 1449;
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueString* RogueArray_Definition___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Definition>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[879]);
}

RogueString* RogueUpdateThisTypeVisitor__type_name( RogueClassUpdateThisTypeVisitor* THIS )
{
  RogueDebugTrace __trace( "UpdateThisTypeVisitor.type_name()", "UpdateThisTypeVisitor.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[1154]);
}

void RogueUpdateThisTypeVisitor__on_enter__CmdThisContext( RogueClassUpdateThisTypeVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  RogueDebugTrace __trace( "UpdateThisTypeVisitor.on_enter(CmdThisContext)", "UpdateThisTypeVisitor.rogue", 3 );
  __trace.line = 4;
  cmd_0->_this_type = THIS->_this_type;
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init_object( RogueClassUpdateThisTypeVisitor* THIS )
{
  RogueDebugTrace __trace( "UpdateThisTypeVisitor.init_object()", "UpdateThisTypeVisitor.rogue", 1 );
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init__Type_Method( RogueClassUpdateThisTypeVisitor* THIS, RogueClassType* _auto_1079_0, RogueClassMethod* _auto_1080_1 )
{
  RogueDebugTrace __trace( "UpdateThisTypeVisitor.init(Type,Method)", "UpdateThisTypeVisitor.rogue", 1 );
  THIS->this_method = _auto_1080_1;
  THIS->_this_type = _auto_1079_0;
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init( RogueTableEntry_String_Type__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Type__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueString* RogueTableEntry_String_Type__List__to_String( RogueTableEntry_String_Type__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Type__List*,_auto_2473_2,(THIS));
    RogueInt32 _auto_2474_3 = (0);
    for (;_auto_2474_3 < _auto_2473_2->count;++_auto_2474_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,value_4,(((RogueClassTableEntry_String_Type_*)(_auto_2473_2->data->objects[_auto_2474_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Type___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Type__List__type_name( RogueTableEntry_String_Type__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[835]);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init_object( RogueTableEntry_String_Type__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init__Int32( RogueTableEntry_String_Type__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Type_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__init__Int32_TableEntry_String_Type_( RogueTableEntry_String_Type__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Type_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].init(Int32,TableEntry<<String,Type>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Type_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1141_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1141_3;++i_2)
      {
        RogueTableEntry_String_Type__List__add__TableEntry_String_Type_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__add__TableEntry_String_Type_( RogueTableEntry_String_Type__List* THIS, RogueClassTableEntry_String_Type_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].add(TableEntry<<String,Type>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Type__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Type__List__capacity( RogueTableEntry_String_Type__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Type__List* RogueTableEntry_String_Type__List__reserve__Int32( RogueTableEntry_String_Type__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Type_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Type__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Type_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Type__List*)(THIS);
}

RogueString* RogueTableEntry_String_Type___to_String( RogueClassTableEntry_String_Type_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Type___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Type___type_name( RogueClassTableEntry_String_Type_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[729]);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init__String_Type_Int32( RogueClassTableEntry_String_Type_* THIS, RogueString* _key_0, RogueClassType* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>.init(String,Type,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init_object( RogueClassTableEntry_String_Type_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Type>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Type____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Type>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[880]);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init( RogueTableEntry_String_Int32__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Int32__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueString* RogueTableEntry_String_Int32__List__to_String( RogueTableEntry_String_Int32__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Int32__List*,_auto_2501_2,(THIS));
    RogueInt32 _auto_2502_3 = (0);
    for (;_auto_2502_3 < _auto_2501_2->count;++_auto_2502_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,value_4,(((RogueClassTableEntry_String_Int32_*)(_auto_2501_2->data->objects[_auto_2502_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Int32___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Int32__List__type_name( RogueTableEntry_String_Int32__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[836]);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init_object( RogueTableEntry_String_Int32__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init__Int32( RogueTableEntry_String_Int32__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Int32_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__init__Int32_TableEntry_String_Int32_( RogueTableEntry_String_Int32__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Int32_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].init(Int32,TableEntry<<String,Int32>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Int32_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1158_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1158_3;++i_2)
      {
        RogueTableEntry_String_Int32__List__add__TableEntry_String_Int32_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__add__TableEntry_String_Int32_( RogueTableEntry_String_Int32__List* THIS, RogueClassTableEntry_String_Int32_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].add(TableEntry<<String,Int32>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Int32__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Int32__List__capacity( RogueTableEntry_String_Int32__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Int32__List* RogueTableEntry_String_Int32__List__reserve__Int32( RogueTableEntry_String_Int32__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Int32>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Int32_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Int32__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Int32_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Int32__List*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Int32____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Int32>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[881]);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init( RogueTableEntry_String_String_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_String_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_String_List__List__to_String( RogueTableEntry_String_String_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_String_List__List*,_auto_2529_2,(THIS));
    RogueInt32 _auto_2530_3 = (0);
    for (;_auto_2530_3 < _auto_2529_2->count;++_auto_2530_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,value_4,(((RogueClassTableEntry_String_String_List_*)(_auto_2529_2->data->objects[_auto_2530_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_String_List___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_String_List__List__type_name( RogueTableEntry_String_String_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[837]);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init_object( RogueTableEntry_String_String_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init__Int32( RogueTableEntry_String_String_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_List_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__init__Int32_TableEntry_String_String_List_( RogueTableEntry_String_String_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_String_List_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].init(Int32,TableEntry<<String,String[]>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_String_List_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1180_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1180_3;++i_2)
      {
        RogueTableEntry_String_String_List__List__add__TableEntry_String_String_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__add__TableEntry_String_String_List_( RogueTableEntry_String_String_List__List* THIS, RogueClassTableEntry_String_String_List_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].add(TableEntry<<String,String[]>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_String_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_String_List__List__capacity( RogueTableEntry_String_String_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_String_List__List* RogueTableEntry_String_String_List__List__reserve__Int32( RogueTableEntry_String_String_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_String_List__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_String_List_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_String_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_String_List___to_String( RogueClassTableEntry_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_String_List___type_name( RogueClassTableEntry_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[730]);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init__String_String_List_Int32( RogueClassTableEntry_String_String_List_* THIS, RogueString* _key_0, RogueString_List* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>.init(String,String[],Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init_object( RogueClassTableEntry_String_String_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,String[]>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_String_List____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,String[]>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[882]);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_Int32_Template__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueString* RogueTableEntry_Int32_Template__List__to_String( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_Int32_Template__List*,_auto_2585_2,(THIS));
    RogueInt32 _auto_2586_3 = (0);
    for (;_auto_2586_3 < _auto_2585_2->count;++_auto_2586_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,value_4,(((RogueClassTableEntry_Int32_Template_*)(_auto_2585_2->data->objects[_auto_2586_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_Int32_Template___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_Int32_Template__List__type_name( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[838]);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init_object( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init__Int32( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_Int32_Template_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__init__Int32_TableEntry_Int32_Template_( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_Int32_Template_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].init(Int32,TableEntry<<Int32,Template>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_Int32_Template_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1206_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1206_3;++i_2)
      {
        RogueTableEntry_Int32_Template__List__add__TableEntry_Int32_Template_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__add__TableEntry_Int32_Template_( RogueTableEntry_Int32_Template__List* THIS, RogueClassTableEntry_Int32_Template_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].add(TableEntry<<Int32,Template>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_Int32_Template__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueInt32 RogueTableEntry_Int32_Template__List__capacity( RogueTableEntry_Int32_Template__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_Int32_Template__List* RogueTableEntry_Int32_Template__List__reserve__Int32( RogueTableEntry_Int32_Template__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_Int32_Template_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_Int32_Template__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_Int32_Template_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_Int32_Template__List*)(THIS);
}

RogueString* RogueTableEntry_Int32_Template___to_String( RogueClassTableEntry_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Int32_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_Int32_Template___type_name( RogueClassTableEntry_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[731]);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init__Int32_Template_Int32( RogueClassTableEntry_Int32_Template_* THIS, RogueInt32 _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>.init(Int32,Template,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init_object( RogueClassTableEntry_Int32_Template_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<Int32,Template>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueString* RogueArray_TableEntry_Int32_Template____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<Int32,Template>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[883]);
}

RogueString* RogueListRebuilder_Token___type_name( RogueClassListRebuilder_Token_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.type_name()", "List.rogue", 461 );
  return (RogueString*)(Rogue_literal_strings[792]);
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___init__Token_List( RogueClassListRebuilder_Token_* THIS, RogueToken_List* _auto_1253_0 )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.init(Token[])", "List.rogue", 468 );
  THIS->list = _auto_1253_0;
  __trace.line = 470;
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueLogical RogueListRebuilder_Token___has_another( RogueClassListRebuilder_Token_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.has_another()", "List.rogue", 470 );
  __trace.line = 471;
  if (THIS->read_index < THIS->list->count)
  {
    __trace.line = 472;
    return (RogueLogical)(true);
  }
  else
  {
    __trace.line = 475;
    RogueToken_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    __trace.line = 476;
    return (RogueLogical)(false);
  }
  __trace.line = 479;
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassToken* RogueListRebuilder_Token___peek__Int32( RogueClassListRebuilder_Token_* THIS, RogueInt32 lookahead_0 )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.peek(Int32)", "List.rogue", 481 );
  __trace.line = 482;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->objects[(THIS->read_index + lookahead_0)])));
}

RogueClassToken* RogueListRebuilder_Token___read( RogueClassListRebuilder_Token_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.read()", "List.rogue", 484 );
  __trace.line = 485;
  ++THIS->read_index;
  __trace.line = 486;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->objects[(THIS->read_index - 1)])));
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___write__Token( RogueClassListRebuilder_Token_* THIS, RogueClassToken* value_0 )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.write(Token)", "List.rogue", 494 );
  __trace.line = 495;
  if (THIS->write_index == THIS->read_index)
  {
    __trace.line = 499;
    RogueToken_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    __trace.line = 501;
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    __trace.line = 506;
    RogueArray_set(THIS->list->data,(((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    __trace.line = 508;
    THIS->read_index += (((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    __trace.line = 511;
    THIS->list->count = ((RogueToken_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  __trace.line = 308;
  THIS->list->data->objects[THIS->write_index] = value_0;
  __trace.line = 515;
  ++THIS->write_index;
  __trace.line = 517;
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueClassListRebuilder_Token_* RogueListRebuilder_Token___init_object( RogueClassListRebuilder_Token_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<Token>>.init_object()", "List.rogue", 461 );
  return (RogueClassListRebuilder_Token_*)(THIS);
}

RogueString* RogueCmdCastToType__type_name( RogueClassCmdCastToType* THIS )
{
  RogueDebugTrace __trace( "CmdCastToType.type_name()", "Cmd.rogue", 3876 );
  return (RogueString*)(Rogue_literal_strings[1222]);
}

RogueClassCmd* RogueCmdCastToType__clone__CloneArgs( RogueClassCmdCastToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCastToType.clone(CloneArgs)", "Cmd.rogue", 3878 );
  __trace.line = 3879;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdCastToType__dispatch__Visitor( RogueClassCmdCastToType* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCastToType.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdCastToType__resolve__Scope( RogueClassCmdCastToType* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCastToType.resolve(Scope)", "Cmd.rogue", 3881 );
  __trace.line = 3882;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 3883;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  __trace.line = 3884;
  if (((void*)(call_ROGUEM90( 28, ROGUE_ARG(THIS->operand) ))) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  __trace.line = 3885;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCastToType__write_cpp__CPPWriter_Logical( RogueClassCmdCastToType* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCastToType.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2769 );
  __trace.line = 2770;
  if (is_statement_1)
  {
    __trace.line = 2771;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
  }
  else
  {
    __trace.line = 2773;
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[1065] );
    __trace.line = 2774;
    call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
    __trace.line = 2775;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[566] );
  }
}

RogueClassCmdCastToType* RogueCmdCastToType__init_object( RogueClassCmdCastToType* THIS )
{
  RogueDebugTrace __trace( "CmdCastToType.init_object()", "Cmd.rogue", 3876 );
  return (RogueClassCmdCastToType*)(THIS);
}

RogueString* RogueCmdLogicalize__type_name( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.type_name()", "Cmd.rogue", 2593 );
  return (RogueString*)(Rogue_literal_strings[1184]);
}

RogueClassCmd* RogueCmdLogicalize__clone__CloneArgs( RogueClassCmdLogicalize* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLogicalize.clone(CloneArgs)", "Cmd.rogue", 2595 );
  __trace.line = 2596;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalize__dispatch__Visitor( RogueClassCmdLogicalize* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLogicalize.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassCmd* RogueCmdLogicalize__resolve__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLogicalize.resolve(Scope)", "Cmd.rogue", 2604 );
  __trace.line = 2605;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 2606;
  if ((call_ROGUEM90( 28, ROGUE_ARG(THIS->operand) ))->is_optional)
  {
    __trace.line = 2607;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), Rogue_literal_strings[476] )))), scope_0 ))));
  }
  else
  {
    __trace.line = 2609;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassType* Rogue_CmdLogicalize__type( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.type()", "Cmd.rogue", 2619 );
  __trace.line = 2620;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdLogicalize* RogueCmdLogicalize__init_object( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.init_object()", "Cmd.rogue", 2593 );
  return (RogueClassCmdLogicalize*)(THIS);
}

RogueString* RogueCmdLogicalize__prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.prefix_symbol()", "Cmd.rogue", 2601 );
  __trace.line = 2602;
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdLogicalize__fn_name( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.fn_name()", "Cmd.rogue", 2598 );
  __trace.line = 2599;
  return (RogueString*)(Rogue_literal_strings[1190]);
}

RogueClassCmd* RogueCmdLogicalize__resolve_for_literal_operand__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLogicalize.resolve_for_literal_operand(Scope)", "Cmd.rogue", 2612 );
  __trace.line = 2613;
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  __trace.line = 2614;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalize__suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.suffix_symbol()", "Cmd.rogue", 2616 );
  __trace.line = 2617;
  return (RogueString*)(Rogue_literal_strings[242]);
}

RogueString* RogueCmdLogicalize__cpp_prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.cpp_prefix_symbol()", "CPPWriter.rogue", 2462 );
  __trace.line = 2463;
  return (RogueString*)(Rogue_literal_strings[1193]);
}

RogueString* RogueCmdLogicalize__cpp_suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalize.cpp_suffix_symbol()", "CPPWriter.rogue", 2465 );
  __trace.line = 2466;
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueArray_CmdNamedArg___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdNamedArg>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[884]);
}

RogueString* RogueMacroArgs__type_name( RogueClassMacroArgs* THIS )
{
  RogueDebugTrace __trace( "MacroArgs.type_name()", "CloneArgs.rogue", 20 );
  return (RogueString*)(Rogue_literal_strings[1153]);
}

RogueClassMacroArgs* RogueMacroArgs__init_object( RogueClassMacroArgs* THIS )
{
  RogueDebugTrace __trace( "MacroArgs.init_object()", "CloneArgs.rogue", 20 );
  return (RogueClassMacroArgs*)(THIS);
}

RogueClassMacroArgs* RogueMacroArgs__init__Cmd_Method_CmdArgs( RogueClassMacroArgs* THIS, RogueClassCmd* _auto_1262_0, RogueClassMethod* _auto_1263_1, RogueClassCmdArgs* args_2 )
{
  RogueDebugTrace __trace( "MacroArgs.init(Cmd,Method,CmdArgs)", "CloneArgs.rogue", 27 );
  THIS->method_info = _auto_1263_1;
  THIS->this_context = _auto_1262_0;
  __trace.line = 28;
  if (!!(args_2))
  {
    __trace.line = 29;
    THIS->arg_lookup = ((RogueTable_String_Cmd___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Cmd_*,ROGUE_CREATE_OBJECT(Table_String_Cmd_))) )));
    __trace.line = 30;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2618_3,(args_2));
      RogueInt32 index_4 = (0);
      for (;index_4 < _auto_2618_3->count;++index_4)
      {
        __trace.line = 31;
        RogueTable_String_Cmd___set__String_Cmd( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[index_4]))->name), ROGUE_ARG(((RogueClassCmd*)(args_2->data->objects[index_4]))) );
      }
    }
  }
  __trace.line = 35;
  return (RogueClassMacroArgs*)(THIS);
}

RogueClassCmd* RogueMacroArgs__inline_this( RogueClassMacroArgs* THIS )
{
  RogueDebugTrace __trace( "MacroArgs.inline_this()", "CloneArgs.rogue", 38 );
  __trace.line = 39;
  return (RogueClassCmd*)((call_ROGUEM99( 10, ROGUE_ARG(THIS->this_context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_access__CmdAccess( RogueClassMacroArgs* THIS, RogueClassCmdAccess* access_0 )
{
  RogueDebugTrace __trace( "MacroArgs.inline_access(CmdAccess)", "CloneArgs.rogue", 41 );
  __trace.line = 42;
  if (!!(access_0->context))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  __trace.line = 44;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(access_0->name) )))));
  __trace.line = 45;
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,dup_2,((call_ROGUEM99( 10, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))));
  __trace.line = 48;
  if (!!(access_0->args))
  {
    __trace.line = 49;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,new_access_3,(((RogueClassCmdAccess*)(RogueObject_as(dup_2,RogueTypeCmdAccess)))));
    __trace.line = 50;
    if (!!(new_access_3))
    {
      __trace.line = 51;
      if (!!(new_access_3->args))
      {
        __trace.line = 52;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[971] ))));
      }
      else
      {
        __trace.line = 54;
        new_access_3->args = access_0->args;
      }
    }
    else
    {
      __trace.line = 57;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[971] ))));
    }
  }
  __trace.line = 61;
  return (RogueClassCmd*)(dup_2);
}

RogueClassCmd* RogueMacroArgs__inline_read_local__CmdReadLocal( RogueClassMacroArgs* THIS, RogueClassCmdReadLocal* read_cmd_0 )
{
  RogueDebugTrace __trace( "MacroArgs.inline_read_local(CmdReadLocal)", "CloneArgs.rogue", 63 );
  __trace.line = 64;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(read_cmd_0->local_info->name) )))));
  __trace.line = 65;
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(read_cmd_0)));
  }
  __trace.line = 66;
  return (RogueClassCmd*)((call_ROGUEM99( 10, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_write_local__CmdWriteLocal( RogueClassMacroArgs* THIS, RogueClassCmdWriteLocal* write_cmd_0 )
{
  RogueDebugTrace __trace( "MacroArgs.inline_write_local(CmdWriteLocal)", "CloneArgs.rogue", 68 );
  __trace.line = 69;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(write_cmd_0->local_info->name) )))));
  __trace.line = 70;
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(write_cmd_0)));
  }
  __trace.line = 71;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(write_cmd_0->t), ROGUE_ARG((call_ROGUEM99( 10, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(write_cmd_0->new_value) ))))));
}

RogueFnParam_List* RogueFnParam_List__init( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueFnParam_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueFnParam_List*)(THIS);
}

RogueString* RogueFnParam_List__to_String( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_2619_2,(THIS));
    RogueInt32 _auto_2620_3 = (0);
    for (;_auto_2620_3 < _auto_2619_2->count;++_auto_2620_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,value_4,(((RogueClassFnParam*)(_auto_2619_2->data->objects[_auto_2620_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnParam_List__type_name( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[839]);
}

RogueFnParam_List* RogueFnParam_List__init_object( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].init_object()", "List.rogue", 4 );
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__init__Int32( RogueFnParam_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "FnParam[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnParam*), true );
  }
  __trace.line = 16;
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__add__FnParam( RogueFnParam_List* THIS, RogueClassFnParam* value_0 )
{
  RogueDebugTrace __trace( "FnParam[].add(FnParam)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueFnParam_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueFnParam_List*)(THIS);
}

RogueInt32 RogueFnParam_List__capacity( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueClassFnParam* RogueFnParam_List__last( RogueFnParam_List* THIS )
{
  RogueDebugTrace __trace( "FnParam[].last()", "List.rogue", 157 );
  __trace.line = 158;
  return (RogueClassFnParam*)(((RogueClassFnParam*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueFnParam_List* RogueFnParam_List__reserve__Int32( RogueFnParam_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "FnParam[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueFnParam_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueFnParam_List*)(THIS);
}

RogueString* RogueFnParam__type_name( RogueClassFnParam* THIS )
{
  RogueDebugTrace __trace( "FnParam.type_name()", "Parser.rogue", 2758 );
  return (RogueString*)(Rogue_literal_strings[793]);
}

RogueClassFnParam* RogueFnParam__init__String( RogueClassFnParam* THIS, RogueString* _auto_1264_0 )
{
  RogueDebugTrace __trace( "FnParam.init(String)", "Parser.rogue", 2758 );
  THIS->name = _auto_1264_0;
  return (RogueClassFnParam*)(THIS);
}

RogueClassFnParam* RogueFnParam__init_object( RogueClassFnParam* THIS )
{
  RogueDebugTrace __trace( "FnParam.init_object()", "Parser.rogue", 2758 );
  return (RogueClassFnParam*)(THIS);
}

RogueString* RogueCmdCreateFunction__type_name( RogueClassCmdCreateFunction* THIS )
{
  RogueDebugTrace __trace( "CmdCreateFunction.type_name()", "Cmd.rogue", 4185 );
  return (RogueString*)(Rogue_literal_strings[960]);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__clone__CloneArgs( RogueClassCmdCreateFunction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateFunction.clone(CloneArgs)", "Cmd.rogue", 4187 );
  __trace.line = 4188;
  ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,args2_1,0);
  __trace.line = 4189;
  if (!!(THIS->with_args))
  {
    __trace.line = 4190;
    args2_1 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
    __trace.line = 4191;
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_2652_2,(THIS->with_args));
      RogueInt32 _auto_2653_3 = (0);
      for (;_auto_2653_3 < _auto_2652_2->count;++_auto_2653_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_4,(((RogueClassFnArg*)(_auto_2652_2->data->objects[_auto_2653_3]))));
        __trace.line = 4192;
        RogueFnArg_List__add__FnArg( args2_1, ROGUE_ARG(((RogueFnArg__set_type__Type( ROGUE_ARG(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), ROGUE_ARG(arg_4->name), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(arg_4->value), clone_args_0 ))) )))), ROGUE_ARG(arg_4->_type) )))) );
      }
    }
  }
  __trace.line = 4195;
  return (RogueClassCmdCreateFunction*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->parameters), ROGUE_ARG(THIS->_return_type), args2_1, ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))), ROGUE_ARG(THIS->is_generic) ))));
}

void RogueCmdCreateFunction__dispatch__Visitor( RogueClassCmdCreateFunction* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateFunction.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) );
}

RogueLogical RogueCmdCreateFunction__is_generic_function( RogueClassCmdCreateFunction* THIS )
{
  RogueDebugTrace __trace( "CmdCreateFunction.is_generic_function()", "Cmd.rogue", 4197 );
  __trace.line = 4198;
  return (RogueLogical)(THIS->is_generic);
}

RogueClassCmd* RogueCmdCreateFunction__resolve__Scope( RogueClassCmdCreateFunction* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateFunction.resolve(Scope)", "Cmd.rogue", 4200 );
  __trace.line = 4201;
  if (THIS->is_generic)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 4203;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_1,0);
  __trace.line = 4204;
  if ((!!(THIS->parameters) && !!(THIS->parameters->count)))
  {
    __trace.line = 4205;
    parameter_types_1 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    __trace.line = 4206;
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_2654_9,(THIS->parameters));
      RogueInt32 _auto_2655_10 = (0);
      for (;_auto_2655_10 < _auto_2654_9->count;++_auto_2655_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_11,(((RogueClassFnParam*)(_auto_2654_9->data->objects[_auto_2655_10]))));
        RogueType_List__add__Type( parameter_types_1, ROGUE_ARG(param_11->_type) );
      }
    }
  }
  __trace.line = 4209;
  ROGUE_DEF_LOCAL_REF(RogueString*,fn_name_2,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[477], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  __trace.line = 4210;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,fn_type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), fn_name_2 )))));
  __trace.line = 4212;
  fn_type_3->defined = true;
  __trace.line = 4213;
  RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 0 );
  __trace.line = 4215;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_1, ROGUE_ARG(THIS->_return_type) )))));
  __trace.line = 4216;
  RogueType_List__add__Type( ROGUE_ARG(fn_type_3->base_types), base_type_4 );
  __trace.line = 4218;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[428] )))));
  __trace.line = 4219;
  if (!!(THIS->parameters))
  {
    __trace.line = 4220;
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_2656_12,(THIS->parameters));
      RogueInt32 _auto_2657_13 = (0);
      for (;_auto_2657_13 < _auto_2656_12->count;++_auto_2657_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_14,(((RogueClassFnParam*)(_auto_2656_12->data->objects[_auto_2657_13]))));
        __trace.line = 4221;
        RogueMethod__add_parameter__Token_String_Type( m_call_5, ROGUE_ARG(THIS->t), ROGUE_ARG(param_14->name), ROGUE_ARG(param_14->_type) );
      }
    }
  }
  __trace.line = 4225;
  m_call_5->_return_type = THIS->_return_type;
  __trace.line = 4226;
  m_call_5->statements = THIS->statements;
  __trace.line = 4228;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_call_5->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), fn_type_3, m_call_5 )))))) );
  __trace.line = 4230;
  if (!!(THIS->with_args))
  {
    __trace.line = 4231;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_6,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[307] )))));
    __trace.line = 4232;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,create_args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    __trace.line = 4233;
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_2658_15,(THIS->with_args));
      RogueInt32 _auto_2659_16 = (0);
      for (;_auto_2659_16 < _auto_2658_15->count;++_auto_2659_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,fn_arg_17,(((RogueClassFnArg*)(_auto_2658_15->data->objects[_auto_2659_16]))));
        __trace.line = 4234;
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_8,(((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(fn_arg_17->value), scope_0 ))) )))));
        __trace.line = 4235;
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)create_args_7), arg_8 );
        __trace.line = 4236;
        RogueType__add_property__Token_String_Type_Cmd( fn_type_3, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG((call_ROGUEM90( 36, arg_8 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        __trace.line = 4237;
        RogueMethod__add_parameter__Token_String_Type( m_init_6, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
      }
    }
    __trace.line = 4240;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), fn_name_2, create_args_7 )))), scope_0 ))));
  }
  else
  {
    __trace.line = 4243;
    RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 1024 );
    __trace.line = 4244;
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), fn_type_3 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdCreateFunction__type( RogueClassCmdCreateFunction* THIS )
{
  RogueDebugTrace __trace( "CmdCreateFunction.type()", "Cmd.rogue", 4247 );
  __trace.line = 4251;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init_object( RogueClassCmdCreateFunction* THIS )
{
  RogueDebugTrace __trace( "CmdCreateFunction.init_object()", "Cmd.rogue", 4185 );
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical( RogueClassCmdCreateFunction* THIS, RogueClassToken* _auto_1271_0, RogueFnParam_List* _auto_1272_1, RogueClassType* _auto_1273_2, RogueFnArg_List* _auto_1274_3, RogueClassCmdStatementList* _auto_1275_4, RogueLogical _auto_1276_5 )
{
  RogueDebugTrace __trace( "CmdCreateFunction.init(Token,FnParam[],Type,FnArg[],CmdStatementList,Logical)", "Cmd.rogue", 4185 );
  THIS->is_generic = _auto_1276_5;
  THIS->statements = _auto_1275_4;
  THIS->with_args = _auto_1274_3;
  THIS->_return_type = _auto_1273_2;
  THIS->parameters = _auto_1272_1;
  THIS->t = _auto_1271_0;
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__init( RogueFnArg_List* THIS )
{
  RogueDebugTrace __trace( "FnArg[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueFnArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueFnArg_List*)(THIS);
}

RogueString* RogueFnArg_List__to_String( RogueFnArg_List* THIS )
{
  RogueDebugTrace __trace( "FnArg[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_2660_2,(THIS));
    RogueInt32 _auto_2661_3 = (0);
    for (;_auto_2661_3 < _auto_2660_2->count;++_auto_2661_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,value_4,(((RogueClassFnArg*)(_auto_2660_2->data->objects[_auto_2661_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnArg_List__type_name( RogueFnArg_List* THIS )
{
  RogueDebugTrace __trace( "FnArg[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[840]);
}

RogueFnArg_List* RogueFnArg_List__init_object( RogueFnArg_List* THIS )
{
  RogueDebugTrace __trace( "FnArg[].init_object()", "List.rogue", 4 );
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__init__Int32( RogueFnArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "FnArg[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnArg*), true );
  }
  __trace.line = 16;
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__add__FnArg( RogueFnArg_List* THIS, RogueClassFnArg* value_0 )
{
  RogueDebugTrace __trace( "FnArg[].add(FnArg)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueFnArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueFnArg_List*)(THIS);
}

RogueInt32 RogueFnArg_List__capacity( RogueFnArg_List* THIS )
{
  RogueDebugTrace __trace( "FnArg[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueFnArg_List* RogueFnArg_List__reserve__Int32( RogueFnArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "FnArg[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueFnArg_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueFnArg_List*)(THIS);
}

RogueString* RogueFnArg__type_name( RogueClassFnArg* THIS )
{
  RogueDebugTrace __trace( "FnArg.type_name()", "Parser.rogue", 2763 );
  return (RogueString*)(Rogue_literal_strings[794]);
}

RogueClassFnArg* RogueFnArg__init__String_Cmd( RogueClassFnArg* THIS, RogueString* _auto_1277_0, RogueClassCmd* _auto_1278_1 )
{
  RogueDebugTrace __trace( "FnArg.init(String,Cmd)", "Parser.rogue", 2763 );
  THIS->value = _auto_1278_1;
  THIS->name = _auto_1277_0;
  return (RogueClassFnArg*)(THIS);
}

RogueClassFnArg* RogueFnArg__set_type__Type( RogueClassFnArg* THIS, RogueClassType* _auto_1279_0 )
{
  RogueDebugTrace __trace( "FnArg.set_type(Type)", "Parser.rogue", 2768 );
  THIS->_type = _auto_1279_0;
  __trace.line = 2769;
  return (RogueClassFnArg*)(THIS);
}

RogueClassFnArg* RogueFnArg__init_object( RogueClassFnArg* THIS )
{
  RogueDebugTrace __trace( "FnArg.init_object()", "Parser.rogue", 2763 );
  return (RogueClassFnArg*)(THIS);
}

RogueString* RogueTraceUsedCodeVisitor__type_name( RogueClassTraceUsedCodeVisitor* THIS )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.type_name()", "TraceUsedCodeVisitor.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[1155]);
}

void RogueTraceUsedCodeVisitor__on_enter__Type( RogueClassTraceUsedCodeVisitor* THIS, RogueClassType* type_0 )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.on_enter(Type)", "TraceUsedCodeVisitor.rogue", 3 );
  __trace.line = 4;
  RogueType__trace_used_code( type_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__Method( RogueClassTraceUsedCodeVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.on_enter(Method)", "TraceUsedCodeVisitor.rogue", 6 );
  __trace.line = 7;
  RogueMethod__trace_used_code( m_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.on_enter(CmdLiteralString)", "TraceUsedCodeVisitor.rogue", 9 );
  __trace.line = 10;
  cmd_0->index = ((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(cmd_0->value) )));
}

void RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.on_leave(CmdCallDynamicMethod)", "TraceUsedCodeVisitor.rogue", 12 );
  __trace.line = 13;
  if (((RogueMethod__is_overridden( ROGUE_ARG(cmd_0->method_info) ))))
  {
    cmd_0->method_info->called_dynamically = true;
  }
}

RogueClassTraceUsedCodeVisitor* RogueTraceUsedCodeVisitor__init_object( RogueClassTraceUsedCodeVisitor* THIS )
{
  RogueDebugTrace __trace( "TraceUsedCodeVisitor.init_object()", "TraceUsedCodeVisitor.rogue", 1 );
  return (RogueClassTraceUsedCodeVisitor*)(THIS);
}

RogueString* RogueCmdBitwiseAnd__type_name( RogueClassCmdBitwiseAnd* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.type_name()", "Cmd.rogue", 3309 );
  return (RogueString*)(Rogue_literal_strings[1243]);
}

RogueClassCmd* RogueCmdBitwiseAnd__clone__CloneArgs( RogueClassCmdBitwiseAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.clone(CloneArgs)", "Cmd.rogue", 3311 );
  __trace.line = 3312;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseAnd__combine_literal_operands__Type( RogueClassCmdBitwiseAnd* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.combine_literal_operands(Type)", "Cmd.rogue", 3314 );
  __trace.line = 3315;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3316;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value & ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    __trace.line = 3318;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value && ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    __trace.line = 3320;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseAnd__dispatch__Visitor( RogueClassCmdBitwiseAnd* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseAnd* RogueCmdBitwiseAnd__init_object( RogueClassCmdBitwiseAnd* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.init_object()", "Cmd.rogue", 3309 );
  return (RogueClassCmdBitwiseAnd*)(THIS);
}

RogueString* RogueCmdBitwiseAnd__symbol( RogueClassCmdBitwiseAnd* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseAnd.symbol()", "Cmd.rogue", 3323 );
  __trace.line = 3324;
  return (RogueString*)(Rogue_literal_strings[206]);
}

RogueString* RogueCmdBitwiseOp__type_name( RogueClassCmdBitwiseOp* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseOp.type_name()", "Cmd.rogue", 3282 );
  return (RogueString*)(Rogue_literal_strings[1195]);
}

void RogueCmdBitwiseOp__dispatch__Visitor( RogueClassCmdBitwiseOp* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseOp.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseOp* RogueCmdBitwiseOp__init_object( RogueClassCmdBitwiseOp* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseOp.init_object()", "Cmd.rogue", 3282 );
  return (RogueClassCmdBitwiseOp*)(THIS);
}

RogueClassCmd* RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type( RogueClassCmdBitwiseOp* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  RogueDebugTrace __trace( "CmdBitwiseOp.resolve_for_common_type(Scope,Type)", "Cmd.rogue", 3284 );
  __trace.line = 3285;
  if ((((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte) || ((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    __trace.line = 3286;
    THIS->left = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    __trace.line = 3287;
    THIS->right = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0 ))), scope_0 ));
    __trace.line = 3288;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3291;
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    __trace.line = 3292;
    THIS->left = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0 ))), scope_0 ));
    __trace.line = 3293;
    THIS->right = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0 ))), scope_0 ));
    __trace.line = 3294;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3297;
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    __trace.line = 3298;
    THIS->left = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0 ))), scope_0 ));
    __trace.line = 3299;
    THIS->right = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0 ))), scope_0 ));
    __trace.line = 3300;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  __trace.line = 3303;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1217] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM515( 45, ROGUE_ARG(((RogueClassCmdBinary*)THIS)) ))) )))) )))), Rogue_literal_strings[1218] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
}

RogueClassCmd* RogueCmdBitwiseOp__resolve_operator_method__Scope_Type_Type( RogueClassCmdBitwiseOp* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdBitwiseOp.resolve_operator_method(Scope,Type,Type)", "Cmd.rogue", 3305 );
  __trace.line = 3306;
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueString* RogueCmdPower__type_name( RogueClassCmdPower* THIS )
{
  RogueDebugTrace __trace( "CmdPower.type_name()", "Cmd.rogue", 2866 );
  return (RogueString*)(Rogue_literal_strings[1196]);
}

RogueClassCmd* RogueCmdPower__clone__CloneArgs( RogueClassCmdPower* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdPower.clone(CloneArgs)", "Cmd.rogue", 2868 );
  __trace.line = 2869;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdPower__combine_literal_operands__Type( RogueClassCmdPower* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdPower.combine_literal_operands(Type)", "Cmd.rogue", 2871 );
  __trace.line = 2872;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2873;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64) pow((double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value, (double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2875;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32) pow((double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value, (double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  else
  {
    __trace.line = 2877;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdPower__dispatch__Visitor( RogueClassCmdPower* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdPower.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdPower__write_cpp__CPPWriter_Logical( RogueClassCmdPower* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdPower.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2507 );
  __trace.line = 2508;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG((call_ROGUEM90( 36, ROGUE_ARG(THIS->left) ))) )))), Rogue_literal_strings[1206] );
  __trace.line = 2509;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->left), writer_0, false );
  __trace.line = 2510;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1207] );
  __trace.line = 2511;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->right), writer_0, false );
  __trace.line = 2512;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[566] );
}

RogueClassCmdPower* RogueCmdPower__init_object( RogueClassCmdPower* THIS )
{
  RogueDebugTrace __trace( "CmdPower.init_object()", "Cmd.rogue", 2866 );
  return (RogueClassCmdPower*)(THIS);
}

RogueString* RogueCmdPower__fn_name( RogueClassCmdPower* THIS )
{
  RogueDebugTrace __trace( "CmdPower.fn_name()", "Cmd.rogue", 2880 );
  __trace.line = 2881;
  return (RogueString*)(Rogue_literal_strings[1211]);
}

RogueString* RogueCmdPower__symbol( RogueClassCmdPower* THIS )
{
  RogueDebugTrace __trace( "CmdPower.symbol()", "Cmd.rogue", 2883 );
  __trace.line = 2884;
  return (RogueString*)(Rogue_literal_strings[214]);
}

RogueString* RogueCmdSubtract__type_name( RogueClassCmdSubtract* THIS )
{
  RogueDebugTrace __trace( "CmdSubtract.type_name()", "Cmd.rogue", 2770 );
  return (RogueString*)(Rogue_literal_strings[1197]);
}

RogueClassCmd* RogueCmdSubtract__clone__CloneArgs( RogueClassCmdSubtract* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdSubtract.clone(CloneArgs)", "Cmd.rogue", 2772 );
  __trace.line = 2773;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdSubtract__combine_literal_operands__Type( RogueClassCmdSubtract* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdSubtract.combine_literal_operands(Type)", "Cmd.rogue", 2775 );
  __trace.line = 2776;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2777;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value - ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2779;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value - ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 2781;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdSubtract__dispatch__Visitor( RogueClassCmdSubtract* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdSubtract.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdSubtract* RogueCmdSubtract__init_object( RogueClassCmdSubtract* THIS )
{
  RogueDebugTrace __trace( "CmdSubtract.init_object()", "Cmd.rogue", 2770 );
  return (RogueClassCmdSubtract*)(THIS);
}

RogueString* RogueCmdSubtract__fn_name( RogueClassCmdSubtract* THIS )
{
  RogueDebugTrace __trace( "CmdSubtract.fn_name()", "Cmd.rogue", 2784 );
  __trace.line = 2785;
  return (RogueString*)(Rogue_literal_strings[1191]);
}

RogueString* RogueCmdSubtract__symbol( RogueClassCmdSubtract* THIS )
{
  RogueDebugTrace __trace( "CmdSubtract.symbol()", "Cmd.rogue", 2787 );
  __trace.line = 2788;
  return (RogueString*)(Rogue_literal_strings[231]);
}

RogueString* RogueCmdMod__type_name( RogueClassCmdMod* THIS )
{
  RogueDebugTrace __trace( "CmdMod.type_name()", "Cmd.rogue", 2835 );
  return (RogueString*)(Rogue_literal_strings[1198]);
}

RogueClassCmd* RogueCmdMod__clone__CloneArgs( RogueClassCmdMod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdMod.clone(CloneArgs)", "Cmd.rogue", 2837 );
  __trace.line = 2838;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMod__combine_literal_operands__Type( RogueClassCmdMod* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdMod.combine_literal_operands(Type)", "Cmd.rogue", 2840 );
  __trace.line = 2841;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2842;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Real64_Real64( ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2844;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Int32_Int32( ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))) ))))));
  }
  else
  {
    __trace.line = 2846;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdMod__dispatch__Visitor( RogueClassCmdMod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdMod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdMod__resolve__Scope( RogueClassCmdMod* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdMod.resolve(Scope)", "Cmd.rogue", 2849 );
  __trace.line = 2850;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  __trace.line = 2851;
  if ((call_ROGUEM87( 24, result_1 )))
  {
    return (RogueClassCmd*)(result_1);
  }
  __trace.line = 2853;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdMod*,cmd_mod_2,(((RogueClassCmdMod*)(RogueObject_as(result_1,RogueTypeCmdMod)))));
  __trace.line = 2854;
  if (!(!!(cmd_mod_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  __trace.line = 2856;
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[770] )))))), Rogue_literal_strings[1203], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_mod_2->left), ROGUE_ARG(cmd_mod_2->right) )))) )))), scope_0 ))));
}

RogueClassCmdMod* RogueCmdMod__init_object( RogueClassCmdMod* THIS )
{
  RogueDebugTrace __trace( "CmdMod.init_object()", "Cmd.rogue", 2835 );
  return (RogueClassCmdMod*)(THIS);
}

RogueString* RogueCmdMod__fn_name( RogueClassCmdMod* THIS )
{
  RogueDebugTrace __trace( "CmdMod.fn_name()", "Cmd.rogue", 2858 );
  __trace.line = 2859;
  return (RogueString*)(Rogue_literal_strings[1212]);
}

RogueString* RogueCmdMod__symbol( RogueClassCmdMod* THIS )
{
  RogueDebugTrace __trace( "CmdMod.symbol()", "Cmd.rogue", 2861 );
  __trace.line = 2862;
  return (RogueString*)(Rogue_literal_strings[237]);
}

RogueString* RogueCmdAdd__type_name( RogueClassCmdAdd* THIS )
{
  RogueDebugTrace __trace( "CmdAdd.type_name()", "Cmd.rogue", 2740 );
  return (RogueString*)(Rogue_literal_strings[1199]);
}

RogueClassCmd* RogueCmdAdd__clone__CloneArgs( RogueClassCmdAdd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAdd.clone(CloneArgs)", "Cmd.rogue", 2742 );
  __trace.line = 2743;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdAdd__combine_literal_operands__Type( RogueClassCmdAdd* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdAdd.combine_literal_operands(Type)", "Cmd.rogue", 2745 );
  __trace.line = 2746;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2747;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value + ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2749;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value + ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 2751;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdAdd__dispatch__Visitor( RogueClassCmdAdd* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAdd.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdAdd* RogueCmdAdd__init_object( RogueClassCmdAdd* THIS )
{
  RogueDebugTrace __trace( "CmdAdd.init_object()", "Cmd.rogue", 2740 );
  return (RogueClassCmdAdd*)(THIS);
}

RogueString* RogueCmdAdd__fn_name( RogueClassCmdAdd* THIS )
{
  RogueDebugTrace __trace( "CmdAdd.fn_name()", "Cmd.rogue", 2754 );
  __trace.line = 2755;
  return (RogueString*)(Rogue_literal_strings[1020]);
}

RogueClassCmd* RogueCmdAdd__resolve_operator_method__Scope_Type_Type( RogueClassCmdAdd* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdAdd.resolve_operator_method(Scope,Type,Type)", "Cmd.rogue", 2757 );
  __trace.line = 2758;
  if ((((void*)left_type_1) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((void*)right_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String)))
  {
    __trace.line = 2760;
    THIS->left = (call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), ROGUE_ARG(THIS->left) ))))))), scope_0 ));
    __trace.line = 2761;
    left_type_1 = ((RogueClassType*)(call_ROGUEM90( 28, ROGUE_ARG(THIS->left) )));
  }
  __trace.line = 2763;
  return (RogueClassCmd*)((RogueCmdBinary__resolve_operator_method__Scope_Type_Type( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0, left_type_1, right_type_2 )));
}

RogueString* RogueCmdAdd__symbol( RogueClassCmdAdd* THIS )
{
  RogueDebugTrace __trace( "CmdAdd.symbol()", "Cmd.rogue", 2765 );
  __trace.line = 2766;
  return (RogueString*)(Rogue_literal_strings[239]);
}

RogueString* RogueCmdDivide__type_name( RogueClassCmdDivide* THIS )
{
  RogueDebugTrace __trace( "CmdDivide.type_name()", "Cmd.rogue", 2813 );
  return (RogueString*)(Rogue_literal_strings[1200]);
}

RogueClassCmd* RogueCmdDivide__clone__CloneArgs( RogueClassCmdDivide* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdDivide.clone(CloneArgs)", "Cmd.rogue", 2815 );
  __trace.line = 2816;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdDivide__combine_literal_operands__Type( RogueClassCmdDivide* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdDivide.combine_literal_operands(Type)", "Cmd.rogue", 2818 );
  __trace.line = 2819;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2820;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value / ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2822;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value / ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 2824;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdDivide__dispatch__Visitor( RogueClassCmdDivide* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdDivide.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdDivide* RogueCmdDivide__init_object( RogueClassCmdDivide* THIS )
{
  RogueDebugTrace __trace( "CmdDivide.init_object()", "Cmd.rogue", 2813 );
  return (RogueClassCmdDivide*)(THIS);
}

RogueString* RogueCmdDivide__fn_name( RogueClassCmdDivide* THIS )
{
  RogueDebugTrace __trace( "CmdDivide.fn_name()", "Cmd.rogue", 2827 );
  __trace.line = 2828;
  return (RogueString*)(Rogue_literal_strings[1213]);
}

RogueString* RogueCmdDivide__symbol( RogueClassCmdDivide* THIS )
{
  RogueDebugTrace __trace( "CmdDivide.symbol()", "Cmd.rogue", 2830 );
  __trace.line = 2831;
  return (RogueString*)(Rogue_literal_strings[75]);
}

RogueString* RogueCmdBitwiseXor__type_name( RogueClassCmdBitwiseXor* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.type_name()", "Cmd.rogue", 3345 );
  return (RogueString*)(Rogue_literal_strings[1244]);
}

RogueClassCmd* RogueCmdBitwiseXor__clone__CloneArgs( RogueClassCmdBitwiseXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.clone(CloneArgs)", "Cmd.rogue", 3347 );
  __trace.line = 3348;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseXor__combine_literal_operands__Type( RogueClassCmdBitwiseXor* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.combine_literal_operands(Type)", "Cmd.rogue", 3350 );
  __trace.line = 3351;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3352;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value ^ ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    __trace.line = 3354;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value ^ ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    __trace.line = 3356;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseXor__dispatch__Visitor( RogueClassCmdBitwiseXor* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseXor* RogueCmdBitwiseXor__init_object( RogueClassCmdBitwiseXor* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.init_object()", "Cmd.rogue", 3345 );
  return (RogueClassCmdBitwiseXor*)(THIS);
}

RogueString* RogueCmdBitwiseXor__symbol( RogueClassCmdBitwiseXor* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.symbol()", "Cmd.rogue", 3359 );
  __trace.line = 3360;
  return (RogueString*)(Rogue_literal_strings[248]);
}

RogueString* RogueCmdBitwiseXor__cpp_symbol( RogueClassCmdBitwiseXor* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseXor.cpp_symbol()", "CPPWriter.rogue", 2564 );
  __trace.line = 2565;
  return (RogueString*)(Rogue_literal_strings[214]);
}

RogueString* RogueCmdMultiply__type_name( RogueClassCmdMultiply* THIS )
{
  RogueDebugTrace __trace( "CmdMultiply.type_name()", "Cmd.rogue", 2791 );
  return (RogueString*)(Rogue_literal_strings[1201]);
}

RogueClassCmd* RogueCmdMultiply__clone__CloneArgs( RogueClassCmdMultiply* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdMultiply.clone(CloneArgs)", "Cmd.rogue", 2793 );
  __trace.line = 2794;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMultiply__combine_literal_operands__Type( RogueClassCmdMultiply* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdMultiply.combine_literal_operands(Type)", "Cmd.rogue", 2796 );
  __trace.line = 2797;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 2798;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value * ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 2800;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value * ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 2802;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdMultiply__dispatch__Visitor( RogueClassCmdMultiply* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdMultiply.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdMultiply* RogueCmdMultiply__init_object( RogueClassCmdMultiply* THIS )
{
  RogueDebugTrace __trace( "CmdMultiply.init_object()", "Cmd.rogue", 2791 );
  return (RogueClassCmdMultiply*)(THIS);
}

RogueString* RogueCmdMultiply__fn_name( RogueClassCmdMultiply* THIS )
{
  RogueDebugTrace __trace( "CmdMultiply.fn_name()", "Cmd.rogue", 2805 );
  __trace.line = 2806;
  return (RogueString*)(Rogue_literal_strings[1214]);
}

RogueString* RogueCmdMultiply__symbol( RogueClassCmdMultiply* THIS )
{
  RogueDebugTrace __trace( "CmdMultiply.symbol()", "Cmd.rogue", 2808 );
  __trace.line = 2809;
  return (RogueString*)(Rogue_literal_strings[250]);
}

RogueString* RogueCmdBitwiseOr__type_name( RogueClassCmdBitwiseOr* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.type_name()", "Cmd.rogue", 3327 );
  return (RogueString*)(Rogue_literal_strings[1245]);
}

RogueClassCmd* RogueCmdBitwiseOr__clone__CloneArgs( RogueClassCmdBitwiseOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.clone(CloneArgs)", "Cmd.rogue", 3329 );
  __trace.line = 3330;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseOr__combine_literal_operands__Type( RogueClassCmdBitwiseOr* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.combine_literal_operands(Type)", "Cmd.rogue", 3332 );
  __trace.line = 3333;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3334;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value | ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    __trace.line = 3336;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value || ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    __trace.line = 3338;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseOr__dispatch__Visitor( RogueClassCmdBitwiseOr* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseOr* RogueCmdBitwiseOr__init_object( RogueClassCmdBitwiseOr* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.init_object()", "Cmd.rogue", 3327 );
  return (RogueClassCmdBitwiseOr*)(THIS);
}

RogueString* RogueCmdBitwiseOr__symbol( RogueClassCmdBitwiseOr* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseOr.symbol()", "Cmd.rogue", 3341 );
  __trace.line = 3342;
  return (RogueString*)(Rogue_literal_strings[254]);
}

RogueString* RogueFunction_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg)->Logical.type_name()", "List.rogue", 95 );
  return (RogueString*)(Rogue_literal_strings[795]);
}

RogueLogical RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0 )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg)->Logical.call(CmdNamedArg)", "List.rogue", 95 );
  return (RogueLogical)(false);
}

RogueClassFunction_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg)->Logical.init_object()", "List.rogue", 95 );
  return (RogueClassFunction_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueListRebuilder_CmdNamedArg___type_name( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.type_name()", "List.rogue", 461 );
  return (RogueString*)(Rogue_literal_strings[796]);
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___init__CmdNamedArg_List( RogueClassListRebuilder_CmdNamedArg_* THIS, RogueCmdNamedArg_List* _auto_1346_0 )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.init(CmdNamedArg[])", "List.rogue", 468 );
  THIS->list = _auto_1346_0;
  __trace.line = 470;
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueLogical RogueListRebuilder_CmdNamedArg___has_another( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.has_another()", "List.rogue", 470 );
  __trace.line = 471;
  if (THIS->read_index < THIS->list->count)
  {
    __trace.line = 472;
    return (RogueLogical)(true);
  }
  else
  {
    __trace.line = 475;
    RogueCmdNamedArg_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    __trace.line = 476;
    return (RogueLogical)(false);
  }
  __trace.line = 479;
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassCmdNamedArg* RogueListRebuilder_CmdNamedArg___read( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.read()", "List.rogue", 484 );
  __trace.line = 485;
  ++THIS->read_index;
  __trace.line = 486;
  return (RogueClassCmdNamedArg*)(((RogueClassCmdNamedArg*)(THIS->list->data->objects[(THIS->read_index - 1)])));
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___write__CmdNamedArg( RogueClassListRebuilder_CmdNamedArg_* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.write(CmdNamedArg)", "List.rogue", 494 );
  __trace.line = 495;
  if (THIS->write_index == THIS->read_index)
  {
    __trace.line = 499;
    RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    __trace.line = 501;
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    __trace.line = 506;
    RogueArray_set(THIS->list->data,(((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    __trace.line = 508;
    THIS->read_index += (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    __trace.line = 511;
    THIS->list->count = ((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  __trace.line = 308;
  THIS->list->data->objects[THIS->write_index] = value_0;
  __trace.line = 515;
  ++THIS->write_index;
  __trace.line = 517;
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueClassListRebuilder_CmdNamedArg_* RogueListRebuilder_CmdNamedArg___init_object( RogueClassListRebuilder_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "ListRebuilder<<CmdNamedArg>>.init_object()", "List.rogue", 461 );
  return (RogueClassListRebuilder_CmdNamedArg_*)(THIS);
}

RogueString* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg,CmdNamedArg)->Logical.type_name()", "List.rogue", 113 );
  return (RogueString*)(Rogue_literal_strings[797]);
}

RogueLogical RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0, RogueClassCmdNamedArg* param2_1 )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg,CmdNamedArg)->Logical.call(CmdNamedArg,CmdNamedArg)", "List.rogue", 113 );
  return (RogueLogical)(false);
}

RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueDebugTrace __trace( "Function(CmdNamedArg,CmdNamedArg)->Logical.init_object()", "List.rogue", 113 );
  return (RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueQuicksort_CmdNamedArg___type_name( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "Quicksort<<CmdNamedArg>>.type_name()", "Sort.rogue", 74 );
  return (RogueString*)(Rogue_literal_strings[798]);
}

RogueClassQuicksort_CmdNamedArg_* RogueQuicksort_CmdNamedArg___init_object( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  RogueDebugTrace __trace( "Quicksort<<CmdNamedArg>>.init_object()", "Sort.rogue", 74 );
  return (RogueClassQuicksort_CmdNamedArg_*)(THIS);
}

RogueString* RogueCmdCallInlineNativeRoutine__type_name( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.type_name()", "Cmd.rogue", 2474 );
  return (RogueString*)(Rogue_literal_strings[1251]);
}

RogueClassCmd* RogueCmdCallInlineNativeRoutine__clone__CloneArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.clone(CloneArgs)", "Cmd.rogue", 2478 );
  __trace.line = 2479;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallInlineNativeRoutine__dispatch__Visitor( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassType* Rogue_CmdCallInlineNativeRoutine__type( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.type()", "Cmd.rogue", 2481 );
  __trace.line = 2482;
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init_object( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.init_object()", "Cmd.rogue", 2474 );
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassToken* _auto_1368_0, RogueClassMethod* _auto_1369_1, RogueClassCmdArgs* _auto_1370_2 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeRoutine.init(Token,Method,CmdArgs)", "Cmd.rogue", 2476 );
  THIS->args = _auto_1370_2;
  THIS->method_info = _auto_1369_1;
  THIS->t = _auto_1368_0;
  __trace.line = 2478;
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallInlineNative__to_String( RogueClassCmdCallInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.to_String()", "Cmd.rogue", 2467 );
  __trace.line = 2468;
  return (RogueString*)(THIS->method_info->signature);
}

RogueString* RogueCmdCallInlineNative__type_name( RogueClassCmdCallInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.type_name()", "Cmd.rogue", 2462 );
  return (RogueString*)(Rogue_literal_strings[1174]);
}

void RogueCmdCallInlineNative__dispatch__Visitor( RogueClassCmdCallInlineNative* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmd* RogueCmdCallInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdCallInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_1367_1 )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.resolve_adjust(Scope,Int32)", "Cmd.rogue", 2470 );
  THIS->adjust_delta = _auto_1367_1;
  __trace.line = 2471;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2380 );
  __trace.line = 2381;
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      __trace.line = 2382;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[6] );
      break;
    }
    case 1:
    {
      __trace.line = 2383;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[241] );
      break;
    }
  }
  __trace.line = 2386;
  ROGUE_DEF_LOCAL_REF(RogueString*,st_2,(THIS->method_info->native_code));
  __trace.line = 2388;
  RogueOptionalInt32 dollar_3 = (((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  __trace.line = 2389;
  while (dollar_3.exists)
  {
    __trace.line = 2390;
    RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__from__Int32_Int32( st_2, 0, ROGUE_ARG((dollar_3.value - 1)) )))) );
    __trace.line = 2391;
    st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG((dollar_3.value + 1)) ))));
    __trace.line = 2393;
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,0);
    __trace.line = 2394;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_5,0);
    __trace.line = 2395;
    if (((RogueString__begins_with__Character( st_2, (RogueCharacter)'(' ))))
    {
      __trace.line = 2397;
      name_4 = ((RogueString*)((RogueString__from__Int32( ROGUE_ARG(((RogueString__before_first__Character( st_2, (RogueCharacter)')' )))), 1 ))));
      __trace.line = 2398;
      st_2 = ((RogueString*)((RogueString__after_first__Character( st_2, (RogueCharacter)')' ))));
      __trace.line = 2400;
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2703_7,(THIS->method_info->parameters));
        RogueInt32 _auto_2704_8 = (0);
        for (;_auto_2704_8 < _auto_2703_7->count;++_auto_2704_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_9,(((RogueClassLocal*)(_auto_2703_7->data->objects[_auto_2704_8]))));
          __trace.line = 2401;
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(p_9->name), name_4 ))))
          {
            __trace.line = 2402;
            param_5 = ((RogueClassLocal*)p_9);
            __trace.line = 2403;
            goto _auto_2705;
          }
        }
      }
      _auto_2705:;
    }
    else
    {
      __trace.line = 2409;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,best_match_6,0);
      __trace.line = 2410;
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2706_10,(THIS->method_info->parameters));
        RogueInt32 _auto_2707_11 = (0);
        for (;_auto_2707_11 < _auto_2706_10->count;++_auto_2707_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_12,(((RogueClassLocal*)(_auto_2706_10->data->objects[_auto_2707_11]))));
          __trace.line = 2411;
          if (((RogueString__begins_with__String( st_2, ROGUE_ARG(p_12->name) ))))
          {
            __trace.line = 2412;
            if ((((void*)best_match_6) == ((void*)NULL) || p_12->name->character_count > best_match_6->name->character_count))
            {
              best_match_6 = ((RogueClassLocal*)p_12);
            }
          }
        }
      }
      __trace.line = 2416;
      if (!!(best_match_6))
      {
        __trace.line = 2417;
        param_5 = ((RogueClassLocal*)best_match_6);
        __trace.line = 2418;
        name_4 = ((RogueString*)param_5->name);
        __trace.line = 2419;
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG(best_match_6->name->character_count) ))));
      }
      else if (((RogueString__begins_with__String( st_2, Rogue_literal_strings[203] ))))
      {
        __trace.line = 2421;
        call_ROGUEM823( 40, ROGUE_ARG(THIS), writer_0 );
        __trace.line = 2422;
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, 4 ))));
      }
    }
    __trace.line = 2426;
    if (!!(param_5))
    {
      __trace.line = 2427;
      call_ROGUEM104( 37, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[param_5->index]))), writer_0, false );
    }
    else if (!!(name_4))
    {
      __trace.line = 2429;
      RogueCPPWriter__print_native_marker__Token_Type_Method_String( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context), ROGUE_ARG(THIS->method_info), name_4 );
    }
    __trace.line = 2432;
    dollar_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  __trace.line = 2435;
  RogueCPPWriter__print__String( writer_0, st_2 );
}

RogueClassCmdCallInlineNative* RogueCmdCallInlineNative__init_object( RogueClassCmdCallInlineNative* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.init_object()", "Cmd.rogue", 2462 );
  return (RogueClassCmdCallInlineNative*)(THIS);
}

void RogueCmdCallInlineNative__print_this__CPPWriter( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNative.print_this(CPPWriter)", "CPPWriter.rogue", 2377 );
  __trace.line = 2378;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1118] ))));
}

RogueString* RogueCmdCallNativeRoutine__type_name( RogueClassCmdCallNativeRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.type_name()", "Cmd.rogue", 2446 );
  return (RogueString*)(Rogue_literal_strings[1175]);
}

RogueClassCmd* RogueCmdCallNativeRoutine__clone__CloneArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.clone(CloneArgs)", "Cmd.rogue", 2450 );
  __trace.line = 2451;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallNativeRoutine__dispatch__Visitor( RogueClassCmdCallNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2344 );
  __trace.line = 2345;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2346;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  __trace.line = 2347;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
  __trace.line = 2348;
  RogueInt32 i_2 = (0);
  __trace.line = 2349;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2708_3,(THIS->args));
    RogueInt32 _auto_2709_4 = (0);
    for (;_auto_2709_4 < _auto_2708_3->count;++_auto_2709_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2708_3->data->objects[_auto_2709_4]))));
      __trace.line = 2350;
      if (i_2 > 0)
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
      }
      __trace.line = 2351;
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      __trace.line = 2352;
      ++i_2;
    }
  }
  __trace.line = 2354;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
  __trace.line = 2355;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init_object( RogueClassCmdCallNativeRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.init_object()", "Cmd.rogue", 2446 );
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassToken* _auto_1371_0, RogueClassMethod* _auto_1372_1, RogueClassCmdArgs* _auto_1373_2 )
{
  RogueDebugTrace __trace( "CmdCallNativeRoutine.init(Token,Method,CmdArgs)", "Cmd.rogue", 2448 );
  THIS->args = _auto_1373_2;
  THIS->method_info = _auto_1372_1;
  THIS->t = _auto_1371_0;
  __trace.line = 2450;
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallRoutine__type_name( RogueClassCmdCallRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallRoutine.type_name()", "Cmd.rogue", 2368 );
  return (RogueString*)(Rogue_literal_strings[1176]);
}

RogueClassCmd* RogueCmdCallRoutine__clone__CloneArgs( RogueClassCmdCallRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallRoutine.clone(CloneArgs)", "Cmd.rogue", 2372 );
  __trace.line = 2373;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

void RogueCmdCallRoutine__dispatch__Visitor( RogueClassCmdCallRoutine* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallRoutine.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallRoutine.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2263 );
  __trace.line = 2264;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2266;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  __trace.line = 2267;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] );
  __trace.line = 2268;
  if (!!(THIS->args->count))
  {
    __trace.line = 2269;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
    __trace.line = 2270;
    RogueInt32 i_2 = (0);
    __trace.line = 2271;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2710_3,(THIS->args));
      RogueInt32 _auto_2711_4 = (0);
      for (;_auto_2711_4 < _auto_2710_3->count;++_auto_2711_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2710_3->data->objects[_auto_2711_4]))));
        __trace.line = 2272;
        if (i_2 > 0)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
        }
        __trace.line = 2273;
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        __trace.line = 2274;
        ++i_2;
      }
    }
    __trace.line = 2276;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[572] );
  }
  __trace.line = 2278;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  __trace.line = 2279;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init_object( RogueClassCmdCallRoutine* THIS )
{
  RogueDebugTrace __trace( "CmdCallRoutine.init_object()", "Cmd.rogue", 2368 );
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallRoutine* THIS, RogueClassToken* _auto_1376_0, RogueClassMethod* _auto_1377_1, RogueClassCmdArgs* _auto_1378_2 )
{
  RogueDebugTrace __trace( "CmdCallRoutine.init(Token,Method,CmdArgs)", "Cmd.rogue", 2370 );
  THIS->args = _auto_1378_2;
  THIS->method_info = _auto_1377_1;
  THIS->t = _auto_1376_0;
  __trace.line = 2372;
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueString* RogueCmdCallInlineNativeMethod__type_name( RogueClassCmdCallInlineNativeMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.type_name()", "Cmd.rogue", 2485 );
  return (RogueString*)(Rogue_literal_strings[1252]);
}

RogueClassCmd* RogueCmdCallInlineNativeMethod__clone__CloneArgs( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.clone(CloneArgs)", "Cmd.rogue", 2487 );
  __trace.line = 2488;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallInlineNativeMethod__dispatch__Visitor( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassType* Rogue_CmdCallInlineNativeMethod__type( RogueClassCmdCallInlineNativeMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.type()", "Cmd.rogue", 2490 );
  __trace.line = 2491;
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCallInlineNativeMethod* RogueCmdCallInlineNativeMethod__init_object( RogueClassCmdCallInlineNativeMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.init_object()", "Cmd.rogue", 2485 );
  return (RogueClassCmdCallInlineNativeMethod*)(THIS);
}

void RogueCmdCallInlineNativeMethod__print_this__CPPWriter( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueDebugTrace __trace( "CmdCallInlineNativeMethod.print_this(CPPWriter)", "CPPWriter.rogue", 2441 );
  __trace.line = 2442;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->context), writer_0, false );
}

RogueString* RogueCmdCallNativeMethod__type_name( RogueClassCmdCallNativeMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallNativeMethod.type_name()", "Cmd.rogue", 2455 );
  return (RogueString*)(Rogue_literal_strings[1177]);
}

RogueClassCmd* RogueCmdCallNativeMethod__clone__CloneArgs( RogueClassCmdCallNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallNativeMethod.clone(CloneArgs)", "Cmd.rogue", 2457 );
  __trace.line = 2458;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallNativeMethod__dispatch__Visitor( RogueClassCmdCallNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallNativeMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallNativeMethod.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2360 );
  __trace.line = 2361;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2362;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  __trace.line = 2363;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
  __trace.line = 2364;
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassType*)(NULL))) );
  __trace.line = 2365;
  RogueInt32 i_2 = (0);
  __trace.line = 2366;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2712_3,(THIS->args));
    RogueInt32 _auto_2713_4 = (0);
    for (;_auto_2713_4 < _auto_2712_3->count;++_auto_2713_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2712_3->data->objects[_auto_2713_4]))));
      __trace.line = 2367;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
      __trace.line = 2368;
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      __trace.line = 2369;
      ++i_2;
    }
  }
  __trace.line = 2371;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
  __trace.line = 2372;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallNativeMethod* RogueCmdCallNativeMethod__init_object( RogueClassCmdCallNativeMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallNativeMethod.init_object()", "Cmd.rogue", 2455 );
  return (RogueClassCmdCallNativeMethod*)(THIS);
}

RogueString* RogueCmdCallAspectMethod__type_name( RogueClassCmdCallAspectMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallAspectMethod.type_name()", "Cmd.rogue", 2377 );
  return (RogueString*)(Rogue_literal_strings[1178]);
}

RogueClassCmd* RogueCmdCallAspectMethod__clone__CloneArgs( RogueClassCmdCallAspectMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallAspectMethod.clone(CloneArgs)", "Cmd.rogue", 2379 );
  __trace.line = 2380;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallAspectMethod__dispatch__Visitor( RogueClassCmdCallAspectMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallAspectMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

void RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallAspectMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallAspectMethod.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2284 );
  __trace.line = 2285;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2286;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  __trace.line = 2287;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
  __trace.line = 2288;
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
  __trace.line = 2289;
  RogueInt32 i_2 = (0);
  __trace.line = 2290;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2714_3,(THIS->args));
    RogueInt32 _auto_2715_4 = (0);
    for (;_auto_2715_4 < _auto_2714_3->count;++_auto_2715_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_2714_3->data->objects[_auto_2715_4]))));
      __trace.line = 2291;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
      __trace.line = 2292;
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      __trace.line = 2293;
      ++i_2;
    }
  }
  __trace.line = 2295;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
  __trace.line = 2296;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallAspectMethod* RogueCmdCallAspectMethod__init_object( RogueClassCmdCallAspectMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallAspectMethod.init_object()", "Cmd.rogue", 2377 );
  return (RogueClassCmdCallAspectMethod*)(THIS);
}

RogueString* RogueCandidateMethods__type_name( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.type_name()", "Scope.rogue", 510 );
  return (RogueString*)(Rogue_literal_strings[799]);
}

RogueClassCandidateMethods* RogueCandidateMethods__init__Type_CmdAccess_Logical( RogueClassCandidateMethods* THIS, RogueClassType* _auto_1382_0, RogueClassCmdAccess* _auto_1383_1, RogueLogical _auto_1384_2 )
{
  RogueDebugTrace __trace( "CandidateMethods.init(Type,CmdAccess,Logical)", "Scope.rogue", 519 );
  THIS->error_on_fail = _auto_1384_2;
  THIS->access = _auto_1383_1;
  THIS->type_context = _auto_1382_0;
  __trace.line = 521;
  return (RogueClassCandidateMethods*)(THIS);
}

RogueLogical RogueCandidateMethods__has_match( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.has_match()", "Scope.rogue", 521 );
  __trace.line = 522;
  return (RogueLogical)(THIS->available->count == 1);
}

RogueClassMethod* RogueCandidateMethods__match( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.match()", "Scope.rogue", 524 );
  __trace.line = 525;
  if (THIS->available->count != 1)
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  __trace.line = 526;
  return (RogueClassMethod*)(((RogueClassMethod*)(THIS->available->data->objects[0])));
}

RogueLogical RogueCandidateMethods__refine_matches( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.refine_matches()", "Scope.rogue", 528 );
  __trace.line = 529;
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), false ))));
}

RogueLogical RogueCandidateMethods__update_available( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.update_available()", "Scope.rogue", 531 );
  __trace.line = 532;
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), false ))));
}

RogueLogical RogueCandidateMethods__update_matches( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.update_matches()", "Scope.rogue", 534 );
  __trace.line = 535;
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), true ))));
}

RogueLogical RogueCandidateMethods__update__Logical( RogueClassCandidateMethods* THIS, RogueLogical require_compatible_0 )
{
  RogueDebugTrace __trace( "CandidateMethods.update(Logical)", "Scope.rogue", 537 );
  __trace.line = 538;
  if (THIS->compatible->count == 0)
  {
    __trace.line = 540;
    if (THIS->available->count == 0)
    {
      __trace.line = 541;
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      __trace.line = 542;
      if (((RogueString__begins_with__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[415] ))))
      {
        __trace.line = 543;
        ROGUE_DEF_LOCAL_REF(RogueString*,base_name_1,(((RogueString__after_first__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[415] )))));
        __trace.line = 544;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[483] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_1 )))) )))), Rogue_literal_strings[484] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[485] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->type_context))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
      }
      else
      {
        __trace.line = 547;
        ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[485] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->type_context))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
      }
    }
    else if (require_compatible_0)
    {
      __trace.line = 551;
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      __trace.line = 553;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,call_sig_buffer_2,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 554;
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[78] );
      __trace.line = 555;
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG(THIS->access->name) )))), Rogue_literal_strings[94] );
      __trace.line = 556;
      if (!!(THIS->access->args))
      {
        __trace.line = 557;
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2716_5,(THIS->access->args));
          RogueInt32 index_6 = (0);
          for (;index_6 < _auto_2716_5->count;++index_6)
          {
            __trace.line = 558;
            if (index_6 > 0)
            {
              RogueStringBuilder__print__Character_Logical( call_sig_buffer_2, (RogueCharacter)',', true );
            }
            __trace.line = 559;
            RogueStringBuilder__print__String( call_sig_buffer_2, ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(((RogueClassCmd*)(THIS->access->args->data->objects[index_6]))) ))->name) );
          }
        }
      }
      __trace.line = 562;
      RogueStringBuilder__print__String( call_sig_buffer_2, Rogue_literal_strings[34] );
      __trace.line = 563;
      ROGUE_DEF_LOCAL_REF(RogueString*,call_sig_3,(((RogueStringBuilder__to_String( call_sig_buffer_2 )))));
      __trace.line = 565;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 566;
      if (THIS->available->count > 1)
      {
        __trace.line = 567;
        RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[487] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], call_sig_3 )))) )))), Rogue_literal_strings[488] )))) )))) );
      }
      else
      {
        __trace.line = 569;
        RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[489] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], call_sig_3 )))) )))), Rogue_literal_strings[490] )))) )))) );
      }
      __trace.line = 571;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2717_7,(THIS->available));
        RogueInt32 _auto_2718_8 = (0);
        for (;_auto_2718_8 < _auto_2717_7->count;++_auto_2718_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(((RogueClassMethod*)(_auto_2717_7->data->objects[_auto_2718_8]))));
          __trace.line = 572;
          RogueStringBuilder__println__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_4, Rogue_literal_strings[335] )))), ROGUE_ARG(m_9->type_context->name) )))), Rogue_literal_strings[78] )))), ROGUE_ARG(m_9->signature) );
        }
      }
      __trace.line = 574;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_4 )))) ))));
    }
    __trace.line = 580;
    return (RogueLogical)(true);
  }
  __trace.line = 583;
  RogueMethod_List__clear( ROGUE_ARG(THIS->available) );
  __trace.line = 584;
  RogueMethod_List__add__Method_List( ROGUE_ARG(THIS->available), ROGUE_ARG(THIS->compatible) );
  __trace.line = 585;
  RogueMethod_List__clear( ROGUE_ARG(THIS->compatible) );
  __trace.line = 587;
  return (RogueLogical)(true);
}

RogueClassCandidateMethods* RogueCandidateMethods__init_object( RogueClassCandidateMethods* THIS )
{
  RogueDebugTrace __trace( "CandidateMethods.init_object()", "Scope.rogue", 510 );
  __trace.line = 514;
  THIS->available = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  __trace.line = 515;
  THIS->compatible = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  __trace.line = 510;
  return (RogueClassCandidateMethods*)(THIS);
}

RogueString* RogueFunction_1409__type_name( RogueClassFunction_1409* THIS )
{
  RogueDebugTrace __trace( "Function_1409.type_name()", "Scope.rogue", 312 );
  return (RogueString*)(Rogue_literal_strings[1249]);
}

RogueLogical RogueFunction_1409__call__CmdNamedArg( RogueClassFunction_1409* THIS, RogueClassCmdNamedArg* arg_0 )
{
  RogueDebugTrace __trace( "Function_1409.call(CmdNamedArg)", "Scope.rogue", 312 );
  return (RogueLogical)((arg_0->inferred_index.exists && arg_0->inferred_index.value != -1));
}

RogueClassFunction_1409* RogueFunction_1409__init_object( RogueClassFunction_1409* THIS )
{
  RogueDebugTrace __trace( "Function_1409.init_object()", "Scope.rogue", 312 );
  return (RogueClassFunction_1409*)(THIS);
}

RogueString* RogueFunction_1410__type_name( RogueClassFunction_1410* THIS )
{
  RogueDebugTrace __trace( "Function_1410.type_name()", "Scope.rogue", 313 );
  return (RogueString*)(Rogue_literal_strings[1250]);
}

RogueLogical RogueFunction_1410__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_1410* THIS, RogueClassCmdNamedArg* a_0, RogueClassCmdNamedArg* b_1 )
{
  RogueDebugTrace __trace( "Function_1410.call(CmdNamedArg,CmdNamedArg)", "Scope.rogue", 313 );
  return (RogueLogical)(a_0->inferred_index.value < b_1->inferred_index.value);
}

RogueClassFunction_1410* RogueFunction_1410__init_object( RogueClassFunction_1410* THIS )
{
  RogueDebugTrace __trace( "Function_1410.init_object()", "Scope.rogue", 313 );
  return (RogueClassFunction_1410*)(THIS);
}

RogueString* RogueArray_FnParam___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<FnParam>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[885]);
}

RogueString* RogueArray_TypeSpecializer___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TypeSpecializer>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[886]);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init( RogueTableEntry_String_Method__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Method__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method__List__to_String( RogueTableEntry_String_Method__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Method__List*,_auto_2729_2,(THIS));
    RogueInt32 _auto_2730_3 = (0);
    for (;_auto_2730_3 < _auto_2729_2->count;++_auto_2730_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,value_4,(((RogueClassTableEntry_String_Method_*)(_auto_2729_2->data->objects[_auto_2730_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Method___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Method__List__type_name( RogueTableEntry_String_Method__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[841]);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init_object( RogueTableEntry_String_Method__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init__Int32( RogueTableEntry_String_Method__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__init__Int32_TableEntry_String_Method_( RogueTableEntry_String_Method__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Method_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].init(Int32,TableEntry<<String,Method>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Method_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1523_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1523_3;++i_2)
      {
        RogueTableEntry_String_Method__List__add__TableEntry_String_Method_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__add__TableEntry_String_Method_( RogueTableEntry_String_Method__List* THIS, RogueClassTableEntry_String_Method_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].add(TableEntry<<String,Method>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Method__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Method__List__capacity( RogueTableEntry_String_Method__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Method__List* RogueTableEntry_String_Method__List__reserve__Int32( RogueTableEntry_String_Method__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Method__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Method_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Method__List*)(THIS);
}

RogueString* RogueTableEntry_String_Method___to_String( RogueClassTableEntry_String_Method_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Method___type_name( RogueClassTableEntry_String_Method_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[732]);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init__String_Method_Int32( RogueClassTableEntry_String_Method_* THIS, RogueString* _key_0, RogueClassMethod* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>.init(String,Method,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init_object( RogueClassTableEntry_String_Method_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Method>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Method____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Method>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[887]);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_TypeInfo__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeInfo__List__to_String( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TypeInfo__List*,_auto_2767_2,(THIS));
    RogueInt32 _auto_2768_3 = (0);
    for (;_auto_2768_3 < _auto_2767_2->count;++_auto_2768_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,value_4,(((RogueClassTableEntry_String_TypeInfo_*)(_auto_2767_2->data->objects[_auto_2768_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TypeInfo___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TypeInfo__List__type_name( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[842]);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init_object( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init__Int32( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__init__Int32_TableEntry_String_TypeInfo_( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TypeInfo_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].init(Int32,TableEntry<<String,TypeInfo>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1601_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1601_3;++i_2)
      {
        RogueTableEntry_String_TypeInfo__List__add__TableEntry_String_TypeInfo_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__add__TableEntry_String_TypeInfo_( RogueTableEntry_String_TypeInfo__List* THIS, RogueClassTableEntry_String_TypeInfo_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].add(TableEntry<<String,TypeInfo>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_TypeInfo__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TypeInfo__List__capacity( RogueTableEntry_String_TypeInfo__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TypeInfo__List* RogueTableEntry_String_TypeInfo__List__reserve__Int32( RogueTableEntry_String_TypeInfo__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_TypeInfo__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeInfo_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_TypeInfo__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeInfo___to_String( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeInfo___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_TypeInfo___type_name( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[733]);
}

RogueClassTableEntry_String_TypeInfo_* RogueTableEntry_String_TypeInfo___init_object( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeInfo>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_TypeInfo_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_TypeInfo____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,TypeInfo>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[888]);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init( RogueTableEntry_String_Logical__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Logical__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueString* RogueTableEntry_String_Logical__List__to_String( RogueTableEntry_String_Logical__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Logical__List*,_auto_2828_2,(THIS));
    RogueInt32 _auto_2829_3 = (0);
    for (;_auto_2829_3 < _auto_2828_2->count;++_auto_2829_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,value_4,(((RogueClassTableEntry_String_Logical_*)(_auto_2828_2->data->objects[_auto_2829_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Logical___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Logical__List__type_name( RogueTableEntry_String_Logical__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[843]);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init_object( RogueTableEntry_String_Logical__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init__Int32( RogueTableEntry_String_Logical__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Logical_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__init__Int32_TableEntry_String_Logical_( RogueTableEntry_String_Logical__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Logical_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].init(Int32,TableEntry<<String,Logical>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Logical_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1675_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1675_3;++i_2)
      {
        RogueTableEntry_String_Logical__List__add__TableEntry_String_Logical_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__add__TableEntry_String_Logical_( RogueTableEntry_String_Logical__List* THIS, RogueClassTableEntry_String_Logical_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].add(TableEntry<<String,Logical>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Logical__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Logical__List__capacity( RogueTableEntry_String_Logical__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Logical__List* RogueTableEntry_String_Logical__List__reserve__Int32( RogueTableEntry_String_Logical__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Logical_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Logical__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Logical_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Logical__List*)(THIS);
}

RogueString* RogueTableEntry_String_Logical___to_String( RogueClassTableEntry_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Logical___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Logical___type_name( RogueClassTableEntry_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[734]);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init__String_Logical_Int32( RogueClassTableEntry_String_Logical_* THIS, RogueString* _key_0, RogueLogical _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>.init(String,Logical,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init_object( RogueClassTableEntry_String_Logical_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Logical>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Logical____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Logical>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[889]);
}

RogueString* RogueTokenReader__type_name( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.type_name()", "TokenReader.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[800]);
}

RogueClassTokenReader* RogueTokenReader__init__Token_List( RogueClassTokenReader* THIS, RogueToken_List* _auto_1734_0 )
{
  RogueDebugTrace __trace( "TokenReader.init(Token[])", "TokenReader.rogue", 8 );
  THIS->tokens = _auto_1734_0;
  __trace.line = 9;
  THIS->count = THIS->tokens->count;
  __trace.line = 11;
  return (RogueClassTokenReader*)(THIS);
}

RogueClassError* RogueTokenReader__error__String( RogueClassTokenReader* THIS, RogueString* message_0 )
{
  RogueDebugTrace __trace( "TokenReader.error(String)", "TokenReader.rogue", 11 );
  __trace.line = 12;
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  __trace.line = 13;
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))), message_0 ))))));
  }
  __trace.line = 14;
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

RogueLogical RogueTokenReader__has_another( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.has_another()", "TokenReader.rogue", 16 );
  __trace.line = 17;
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueLogical RogueTokenReader__next_is__TokenType( RogueClassTokenReader* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "TokenReader.next_is(TokenType)", "TokenReader.rogue", 19 );
  __trace.line = 20;
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 21;
  return (RogueLogical)(((void*)((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))->_type) == ((void*)type_0));
}

RogueLogical RogueTokenReader__next_is_statement_token( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.next_is_statement_token()", "TokenReader.rogue", 23 );
  __trace.line = 24;
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 25;
  if ((call_ROGUEM142( 19, ROGUE_ARG(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))->_type) )))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 26;
  return (RogueLogical)(true);
}

RogueClassToken* RogueTokenReader__peek( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.peek()", "TokenReader.rogue", 28 );
  __trace.line = 29;
  if (THIS->position == THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  __trace.line = 30;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position])));
}

RogueClassToken* RogueTokenReader__peek__Int32( RogueClassTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  RogueDebugTrace __trace( "TokenReader.peek(Int32)", "TokenReader.rogue", 32 );
  __trace.line = 33;
  if ((THIS->position + num_ahead_0) >= THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  __trace.line = 34;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[(THIS->position + num_ahead_0)])));
}

RogueClassToken* RogueTokenReader__read( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.read()", "TokenReader.rogue", 36 );
  __trace.line = 37;
  ++THIS->position;
  __trace.line = 38;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->objects[(THIS->position - 1)])));
}

RogueClassTokenReader* RogueTokenReader__init_object( RogueClassTokenReader* THIS )
{
  RogueDebugTrace __trace( "TokenReader.init_object()", "TokenReader.rogue", 1 );
  return (RogueClassTokenReader*)(THIS);
}

RogueString* RogueTokenizer__type_name( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.type_name()", "Tokenizer.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[801]);
}

RogueToken_List* RogueTokenizer__tokenize__String( RogueClassTokenizer* THIS, RogueString* _auto_1739_0 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize(String)", "Tokenizer.rogue", 13 );
  THIS->filepath = _auto_1739_0;
  __trace.line = 14;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__File_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(THIS->filepath) )))), 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__String_String( RogueClassTokenizer* THIS, RogueString* _auto_1740_0, RogueString* content_1 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize(String,String)", "Tokenizer.rogue", 16 );
  THIS->filepath = _auto_1740_0;
  __trace.line = 17;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), content_1, 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__Token_String_String( RogueClassTokenizer* THIS, RogueClassToken* reference_t_0, RogueString* _auto_1741_1, RogueString* data_2 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize(Token,String,String)", "Tokenizer.rogue", 19 );
  THIS->filepath = _auto_1741_1;
  __trace.line = 20;
  ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,characters_3,(((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG(data_2->character_count) )))));
  __trace.line = 21;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2889_4,(data_2));
    RogueInt32 _auto_2890_5 = (0);
    for (;_auto_2890_5 < _auto_2889_4->character_count;++_auto_2890_5)
    {
      RogueCharacter ch_6 = (RogueString_character_at(_auto_2889_4,_auto_2890_5));
      RogueCharacter_List__add__Character( characters_3, ch_6 );
    }
  }
  __trace.line = 22;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__set_location__Int32_Int32( ROGUE_ARG(((RogueParseReader__init__Character_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), characters_3, 2 )))), ROGUE_ARG(reference_t_0->line), ROGUE_ARG(reference_t_0->column) )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__ParseReader( RogueClassTokenizer* THIS, RogueClassParseReader* _auto_1742_0 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize(ParseReader)", "Tokenizer.rogue", 24 );
  THIS->reader = _auto_1742_0;
  __trace.line = 25;
  RogueTable_String_ParseReader___set__String_ParseReader( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader) );
  __trace.line = 27;
  RogueTokenizer__configure_token_types( ROGUE_ARG(THIS) );
  __trace.line = 28;
  while (((RogueTokenizer__tokenize_another( ROGUE_ARG(THIS) ))))
  {
  }
  __trace.line = 30;
  if (THIS->tokens->count == 0)
  {
    __trace.line = 32;
    if ((THIS->tokens->count == 0 || ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) != ((void*)RogueTokenType_eol)))
    {
      __trace.line = 33;
      RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) );
    }
  }
  __trace.line = 37;
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_string_or_character_token_from_buffer(Character)", "Tokenizer.rogue", 41 );
  __trace.line = 43;
  if ((THIS->buffer->count == 1 && terminator_0 == (RogueCharacter)'\''))
  {
    __trace.line = 44;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Character( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character), ROGUE_ARG(((RogueStringBuilder__get__Int32( ROGUE_ARG(THIS->buffer), 0 )))) ))));
  }
  else
  {
    __trace.line = 46;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) ))));
  }
}

RogueLogical RogueTokenizer__add_new_token__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType)", "Tokenizer.rogue", 49 );
  __trace.line = 50;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM139( 8, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column) ))) );
  __trace.line = 51;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Character( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueCharacter value_1 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType,Character)", "Tokenizer.rogue", 53 );
  __trace.line = 54;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Character( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  __trace.line = 55;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt64 value_1 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType,Int64)", "Tokenizer.rogue", 57 );
  __trace.line = 58;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  __trace.line = 59;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int32( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt32 value_1 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType,Int32)", "Tokenizer.rogue", 61 );
  __trace.line = 62;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int32( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  __trace.line = 63;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Real64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueReal64 value_1 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType,Real64)", "Tokenizer.rogue", 65 );
  __trace.line = 66;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Real64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  __trace.line = 67;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_String( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueString* value_1 )
{
  RogueDebugTrace __trace( "Tokenizer.add_new_token(TokenType,String)", "Tokenizer.rogue", 69 );
  __trace.line = 70;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM140( 13, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 ))) );
  __trace.line = 71;
  return (RogueLogical)(true);
}

void RogueTokenizer__configure_token_types( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.configure_token_types()", "Tokenizer.rogue", 73 );
  __trace.line = 74;
  if (!!(RogueTokenType_lookup))
  {
    return;
  }
  __trace.line = 76;
  RogueTokenType_lookup = ((RogueTable_String_TokenType___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TokenType_*,ROGUE_CREATE_OBJECT(Table_String_TokenType_))) )));
  __trace.line = 79;
  RogueTokenType_directive_define = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[97] )))))))) )));
  __trace.line = 80;
  RogueTokenType_directive_include = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[98] )))))))) )));
  __trace.line = 81;
  RogueTokenType_directive_includeNativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[99] )))))))) )));
  __trace.line = 82;
  RogueTokenType_directive_includeNativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[100] )))))))) )));
  __trace.line = 83;
  RogueTokenType_directive_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[101] )))))))) )));
  __trace.line = 84;
  RogueTokenType_directive_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[102] )))))))) )));
  __trace.line = 85;
  RogueTokenType_directive_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[103] )))))))) )));
  __trace.line = 86;
  RogueTokenType_directive_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[104] )))))))) )));
  __trace.line = 87;
  RogueTokenType_directive_requisite = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[105] )))))))) )));
  __trace.line = 88;
  RogueTokenType_directive_module = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[106] )))))))) )));
  __trace.line = 89;
  RogueTokenType_directive_using = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[107] )))))))) )));
  __trace.line = 91;
  RogueTokenType_placeholder_id = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[108] )))) )));
  __trace.line = 94;
  RogueTokenType_eol = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueClassTokenType*)((RogueClassEOLTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassEOLTokenType*,ROGUE_CREATE_OBJECT(EOLTokenType)))), Rogue_literal_strings[109] ))))))) )))) )));
  __trace.line = 95;
  RogueTokenType_eoi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[110] ))))))) )))) )));
  __trace.line = 96;
  RogueTokenType_begin_augment_tokens = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[111] ))))))) )))) )));
  __trace.line = 97;
  RogueTokenType_keyword_augment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[112] ))))))) )))) )));
  __trace.line = 98;
  RogueTokenType_keyword_case = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[113] )))))))) )));
  __trace.line = 99;
  RogueTokenType_keyword_catch = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[114] )))))))) )));
  __trace.line = 100;
  RogueTokenType_keyword_CLASS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[115] ))))))) )))) )));
  __trace.line = 101;
  RogueTokenType_keyword_class = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[116] ))))))) )))) )));
  __trace.line = 102;
  RogueTokenType_keyword_DEFINITIONS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[117] ))))))) )))) )));
  __trace.line = 103;
  RogueTokenType_keyword_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[118] )))))))) )));
  __trace.line = 104;
  RogueTokenType_keyword_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[119] )))))))) )));
  __trace.line = 105;
  RogueTokenType_keyword_endAugment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[120] ))))))) )))) )));
  __trace.line = 106;
  RogueTokenType_keyword_endBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[121] )))))))) )));
  __trace.line = 107;
  RogueTokenType_keyword_endClass = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[122] ))))))) )))) )));
  __trace.line = 108;
  RogueTokenType_keyword_endContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[123] )))))))) )));
  __trace.line = 109;
  RogueTokenType_keyword_endForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[124] )))))))) )));
  __trace.line = 110;
  RogueTokenType_keyword_endFunction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[125] )))))))) )));
  __trace.line = 111;
  RogueTokenType_keyword_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[126] )))))))) )));
  __trace.line = 112;
  RogueTokenType_keyword_endLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[127] )))))))) )));
  __trace.line = 113;
  RogueTokenType_keyword_endRoutine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[128] ))))))) )))) )));
  __trace.line = 114;
  RogueTokenType_keyword_endTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[129] )))))))) )));
  __trace.line = 115;
  RogueTokenType_keyword_endUnitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[130] )))))))) )));
  __trace.line = 116;
  RogueTokenType_keyword_endWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[131] )))))))) )));
  __trace.line = 117;
  RogueTokenType_keyword_endWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[132] )))))))) )));
  __trace.line = 118;
  RogueTokenType_keyword_ENUMERATE = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[133] ))))))) )))) )));
  __trace.line = 119;
  RogueTokenType_keyword_GLOBAL = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[134] ))))))) )))) )));
  __trace.line = 120;
  RogueTokenType_keyword_method = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[135] ))))))) )))) )));
  __trace.line = 121;
  RogueTokenType_keyword_METHODS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[136] ))))))) )))) )));
  __trace.line = 122;
  RogueTokenType_keyword_others = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[137] )))))))) )));
  __trace.line = 123;
  RogueTokenType_keyword_PROPERTIES = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[138] ))))))) )))) )));
  __trace.line = 124;
  RogueTokenType_keyword_routine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[139] ))))))) )))) )));
  __trace.line = 125;
  RogueTokenType_keyword_satisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[140] )))))))) )));
  __trace.line = 126;
  RogueTokenType_keyword_unsatisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[141] )))))))) )));
  __trace.line = 127;
  RogueTokenType_keyword_with = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[142] )))))))) )));
  __trace.line = 129;
  RogueTokenType_symbol_close_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[143] )))))))) )));
  __trace.line = 130;
  RogueTokenType_symbol_close_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[51] )))))))) )));
  __trace.line = 131;
  RogueTokenType_symbol_close_comment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[144] )))))))) )));
  __trace.line = 132;
  RogueTokenType_symbol_close_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[34] )))))))) )));
  __trace.line = 133;
  RogueTokenType_symbol_close_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[145] )))))))) )));
  __trace.line = 136;
  RogueTokenType_keyword_assert = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[146] )))) )));
  __trace.line = 137;
  RogueTokenType_keyword_await = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[147] )))) )));
  __trace.line = 138;
  RogueTokenType_keyword_block = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[148] )))) )));
  __trace.line = 139;
  RogueTokenType_keyword_contingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[149] )))) )));
  __trace.line = 140;
  RogueTokenType_keyword_ensure = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[150] )))) )));
  __trace.line = 141;
  RogueTokenType_keyword_escapeBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[151] )))) )));
  __trace.line = 142;
  RogueTokenType_keyword_escapeContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[152] )))) )));
  __trace.line = 143;
  RogueTokenType_keyword_escapeForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[153] )))) )));
  __trace.line = 144;
  RogueTokenType_keyword_escapeIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[154] )))) )));
  __trace.line = 145;
  RogueTokenType_keyword_escapeLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[155] )))) )));
  __trace.line = 146;
  RogueTokenType_keyword_escapeTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[156] )))) )));
  __trace.line = 147;
  RogueTokenType_keyword_escapeWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[157] )))) )));
  __trace.line = 148;
  RogueTokenType_keyword_escapeWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[158] )))) )));
  __trace.line = 149;
  RogueTokenType_keyword_forEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[159] )))) )));
  __trace.line = 150;
  RogueTokenType_keyword_function = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[160] )))) )));
  __trace.line = 151;
  RogueTokenType_keyword_global = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[161] )))) )));
  __trace.line = 152;
  RogueTokenType_keyword_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[162] )))) )));
  __trace.line = 153;
  RogueTokenType_keyword_in = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[163] )))) )));
  __trace.line = 154;
  RogueTokenType_keyword_is = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[164] )))) )));
  __trace.line = 155;
  RogueTokenType_keyword_isNot = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[165] )))) )));
  __trace.line = 156;
  RogueTokenType_keyword_local = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[166] )))) )));
  __trace.line = 157;
  RogueTokenType_keyword_loop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[167] )))) )));
  __trace.line = 158;
  RogueTokenType_keyword_native = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[168] )))) )));
  __trace.line = 159;
  RogueTokenType_keyword_nativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[169] )))))))) )));
  __trace.line = 160;
  RogueTokenType_keyword_nativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[170] )))))))) )));
  __trace.line = 161;
  RogueTokenType_keyword_necessary = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[171] )))) )));
  __trace.line = 162;
  RogueTokenType_keyword_nextIteration = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[172] )))) )));
  __trace.line = 163;
  RogueTokenType_keyword_noAction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[173] )))) )));
  __trace.line = 164;
  RogueTokenType_keyword_null = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[1] )))) )));
  __trace.line = 165;
  RogueTokenType_keyword_of = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[174] )))) )));
  __trace.line = 166;
  RogueTokenType_keyword_require = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[175] )))) )));
  __trace.line = 167;
  RogueTokenType_keyword_return = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[176] )))) )));
  __trace.line = 168;
  RogueTokenType_keyword_select = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[177] )))) )));
  __trace.line = 169;
  RogueTokenType_keyword_step = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[178] )))) )));
  __trace.line = 170;
  RogueTokenType_keyword_sufficient = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[179] )))) )));
  __trace.line = 171;
  RogueTokenType_keyword_throw = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[180] )))) )));
  __trace.line = 172;
  RogueTokenType_keyword_trace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[181] )))) )));
  __trace.line = 173;
  RogueTokenType_keyword_trace_position = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[182] )))) )));
  __trace.line = 174;
  RogueTokenType_keyword_try = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[183] )))) )));
  __trace.line = 175;
  RogueTokenType_keyword_unitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[184] )))) )));
  __trace.line = 176;
  RogueTokenType_keyword_which = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[185] )))) )));
  __trace.line = 177;
  RogueTokenType_keyword_while = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[186] )))) )));
  __trace.line = 178;
  RogueTokenType_keyword_yield = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[187] )))) )));
  __trace.line = 181;
  RogueTokenType_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[188] )));
  __trace.line = 182;
  RogueTokenType_type_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[189] )));
  __trace.line = 183;
  RogueTokenType_literal_character = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[62] )));
  __trace.line = 184;
  RogueTokenType_literal_integer = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[61] )));
  __trace.line = 185;
  RogueTokenType_literal_long = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[60] )));
  __trace.line = 186;
  RogueTokenType_literal_real = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[58] )));
  __trace.line = 187;
  RogueTokenType_literal_string = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[66] )));
  __trace.line = 189;
  RogueTokenType_keyword_and = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[190] )))) )));
  __trace.line = 190;
  RogueTokenType_keyword_as = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[191] )))) )));
  __trace.line = 191;
  RogueTokenType_keyword_downTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[192] )))) )));
  __trace.line = 192;
  RogueTokenType_keyword_false = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[193] )))) )));
  __trace.line = 193;
  RogueTokenType_keyword_instanceOf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[194] )))) )));
  __trace.line = 194;
  RogueTokenType_keyword_infinity = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[195] )))) )));
  __trace.line = 195;
  RogueTokenType_keyword_meta = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[196] )))) )));
  __trace.line = 196;
  RogueTokenType_keyword_NaN = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[197] )))) )));
  __trace.line = 197;
  RogueTokenType_keyword_not = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[198] )))) )));
  __trace.line = 198;
  RogueTokenType_keyword_notInstanceOf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[199] )))) )));
  __trace.line = 199;
  RogueTokenType_keyword_or = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[200] )))) )));
  __trace.line = 200;
  RogueTokenType_keyword_pi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[201] )))) )));
  __trace.line = 201;
  RogueTokenType_keyword_prior = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[202] )))) )));
  __trace.line = 202;
  RogueTokenType_keyword_this = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[203] )))) )));
  __trace.line = 203;
  RogueTokenType_keyword_true = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[204] )))) )));
  __trace.line = 204;
  RogueTokenType_keyword_xor = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[205] )))) )));
  __trace.line = 206;
  RogueTokenType_symbol_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[206] )))) )));
  __trace.line = 207;
  RogueTokenType_symbol_ampersand_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[207] )))))))) )));
  __trace.line = 208;
  RogueTokenType_symbol_double_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[208] )))) )));
  __trace.line = 209;
  RogueTokenType_symbol_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[209] )))) )));
  __trace.line = 210;
  RogueTokenType_symbol_at = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[210] )))) )));
  __trace.line = 211;
  RogueTokenType_symbol_at_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[211] )))) )));
  __trace.line = 212;
  RogueTokenType_symbol_at_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[212] )))) )));
  __trace.line = 213;
  RogueTokenType_symbol_backslash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[213] )))) )));
  __trace.line = 214;
  RogueTokenType_symbol_caret = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[214] )))) )));
  __trace.line = 215;
  RogueTokenType_symbol_caret_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[215] )))))))) )));
  __trace.line = 216;
  RogueTokenType_symbol_colon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[216] )))) )));
  __trace.line = 217;
  RogueTokenType_symbol_comma = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[217] )))) )));
  __trace.line = 218;
  RogueTokenType_symbol_compare = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[218] )))) )));
  __trace.line = 219;
  RogueTokenType_symbol_dot = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[78] )))) )));
  __trace.line = 220;
  RogueTokenType_symbol_dot_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[219] )))))))) )));
  __trace.line = 221;
  RogueTokenType_symbol_downToGreaterThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[220] )))) )));
  __trace.line = 222;
  RogueTokenType_symbol_empty_braces = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[221] )))) )));
  __trace.line = 223;
  RogueTokenType_symbol_empty_brackets = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[222] )))) )));
  __trace.line = 224;
  RogueTokenType_symbol_eq = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[223] )))) )));
  __trace.line = 225;
  RogueTokenType_symbol_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[224] )))) )));
  __trace.line = 226;
  RogueTokenType_symbol_exclamation_point = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[225] )))) )));
  __trace.line = 227;
  RogueTokenType_symbol_fat_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[226] )))) )));
  __trace.line = 228;
  RogueTokenType_symbol_ge = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[227] )))) )));
  __trace.line = 229;
  RogueTokenType_symbol_gt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[228] )))) )));
  __trace.line = 230;
  RogueTokenType_symbol_le = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[229] )))) )));
  __trace.line = 231;
  RogueTokenType_symbol_lt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[230] )))) )));
  __trace.line = 232;
  RogueTokenType_symbol_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[231] )))) )));
  __trace.line = 233;
  RogueTokenType_symbol_minus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[232] )))))))) )));
  __trace.line = 234;
  RogueTokenType_symbol_minus_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[6] )))) )));
  __trace.line = 235;
  RogueTokenType_symbol_ne = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[233] )))) )));
  __trace.line = 236;
  RogueTokenType_symbol_open_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[234] )))) )));
  __trace.line = 237;
  RogueTokenType_symbol_open_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[235] )))) )));
  __trace.line = 238;
  RogueTokenType_symbol_open_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[94] )))) )));
  __trace.line = 239;
  RogueTokenType_symbol_open_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[236] )))) )));
  __trace.line = 240;
  RogueTokenType_symbol_percent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[237] )))) )));
  __trace.line = 241;
  RogueTokenType_symbol_percent_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[238] )))))))) )));
  __trace.line = 242;
  RogueTokenType_symbol_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[239] )))) )));
  __trace.line = 243;
  RogueTokenType_symbol_plus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[240] )))))))) )));
  __trace.line = 244;
  RogueTokenType_symbol_plus_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[241] )))) )));
  __trace.line = 245;
  RogueTokenType_symbol_question_mark = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[242] )))) )));
  __trace.line = 246;
  RogueTokenType_symbol_semicolon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[243] )))) )))) )));
  __trace.line = 247;
  RogueTokenType_symbol_shift_left = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[244] )))) )));
  __trace.line = 248;
  RogueTokenType_symbol_shift_right = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[245] )))) )));
  __trace.line = 249;
  RogueTokenType_symbol_shift_right_x = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[246] )))) )));
  __trace.line = 250;
  RogueTokenType_symbol_slash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[75] )))) )));
  __trace.line = 251;
  RogueTokenType_symbol_slash_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[247] )))))))) )));
  __trace.line = 252;
  RogueTokenType_symbol_tilde = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[248] )))) )));
  __trace.line = 253;
  RogueTokenType_symbol_tilde_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[249] )))))))) )));
  __trace.line = 254;
  RogueTokenType_symbol_times = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[250] )))) )));
  __trace.line = 255;
  RogueTokenType_symbol_times_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[251] )))))))) )));
  __trace.line = 256;
  RogueTokenType_symbol_upTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[252] )))) )));
  __trace.line = 257;
  RogueTokenType_symbol_upToLessThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[253] )))) )));
  __trace.line = 258;
  RogueTokenType_symbol_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[254] )))) )));
  __trace.line = 259;
  RogueTokenType_symbol_vertical_bar_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[255] )))))))) )));
  __trace.line = 260;
  RogueTokenType_symbol_double_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[256] )))) )));
}

RogueLogical RogueTokenizer__consume__Character( RogueClassTokenizer* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "Tokenizer.consume(Character)", "Tokenizer.rogue", 262 );
  __trace.line = 263;
  if (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 264;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 265;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__consume__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "Tokenizer.consume(String)", "Tokenizer.rogue", 267 );
  __trace.line = 268;
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_id__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  RogueDebugTrace __trace( "Tokenizer.consume_id(String)", "Tokenizer.rogue", 270 );
  __trace.line = 271;
  return (RogueLogical)(((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_spaces( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.consume_spaces()", "Tokenizer.rogue", 273 );
  __trace.line = 274;
  if (!(((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 275;
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
  {
  }
  __trace.line = 276;
  return (RogueLogical)(true);
}

RogueClassTokenType* RogueTokenizer__define__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Tokenizer.define(TokenType)", "Tokenizer.rogue", 278 );
  __trace.line = 279;
  RogueTable_String_TokenType___set__String_TokenType( ROGUE_ARG(RogueTokenType_lookup), ROGUE_ARG(type_0->name), type_0 );
  __trace.line = 280;
  return (RogueClassTokenType*)(type_0);
}

RogueClassRogueError* RogueTokenizer__error__String( RogueClassTokenizer* THIS, RogueString* message_0 )
{
  RogueDebugTrace __trace( "Tokenizer.error(String)", "Tokenizer.rogue", 282 );
  __trace.line = 283;
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader->line), ROGUE_ARG(THIS->reader->column) ))));
}

RogueClassTokenType* Rogue_Tokenizer__get_symbol_token_type( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.get_symbol_token_type()", "Tokenizer.rogue", 285 );
  __trace.line = 286;
  RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 288;
  if (ch_0 == (RogueCharacter)'!')
  {
    __trace.line = 289;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ne);
    }
    else
    {
      __trace.line = 290;
      return (RogueClassTokenType*)(RogueTokenType_symbol_exclamation_point);
    }
  }
  else if (ch_0 == (RogueCharacter)'$')
  {
    __trace.line = 293;
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    __trace.line = 294;
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[276] ))))
      {
        __trace.line = 295;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_define) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[277] ))))
      {
        __trace.line = 296;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_include) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[278] ))))
      {
        __trace.line = 297;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_includeNativeCode) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[279] ))))
      {
        __trace.line = 298;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_includeNativeHeader) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[162] ))))
      {
        __trace.line = 299;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_if) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[119] ))))
      {
        __trace.line = 300;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_elseIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[118] ))))
      {
        __trace.line = 301;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_else) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[126] ))))
      {
        __trace.line = 302;
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[280] ))))
      {
        __trace.line = 303;
        RogueTokenizer__scan_requisite_directive( ROGUE_ARG(THIS) );
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else
      {
        __trace.line = 307;
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[281], id_1 )))) );
      }
    }
    __trace.line = 309;
    return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
  }
  else if (ch_0 == (RogueCharacter)'%')
  {
    __trace.line = 312;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent_equals);
    }
    else
    {
      __trace.line = 313;
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent);
    }
  }
  else if (ch_0 == (RogueCharacter)'&')
  {
    __trace.line = 317;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'&' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_ampersand);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      __trace.line = 318;
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand_equals);
    }
    else
    {
      __trace.line = 319;
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand);
    }
  }
  else if (ch_0 == (RogueCharacter)'(')
  {
    __trace.line = 322;
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_paren);
  }
  else if (ch_0 == (RogueCharacter)')')
  {
    __trace.line = 325;
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_paren);
  }
  else if (ch_0 == (RogueCharacter)'*')
  {
    __trace.line = 328;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_times_equals);
    }
    else
    {
      __trace.line = 329;
      return (RogueClassTokenType*)(RogueTokenType_symbol_times);
    }
  }
  else if (ch_0 == (RogueCharacter)'+')
  {
    __trace.line = 332;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' ))))
    {
      __trace.line = 333;
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_plus);
    }
    else
    {
      __trace.line = 334;
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus);
    }
  }
  else if (ch_0 == (RogueCharacter)',')
  {
    __trace.line = 337;
    return (RogueClassTokenType*)(RogueTokenType_symbol_comma);
  }
  else if (ch_0 == (RogueCharacter)'-')
  {
    __trace.line = 340;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))))
    {
      __trace.line = 341;
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_minus);
    }
    else if ((((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 0 ))) == (RogueCharacter)'>' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'>'))
    {
      __trace.line = 342;
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      __trace.line = 343;
      return (RogueClassTokenType*)(RogueTokenType_symbol_arrow);
    }
    else
    {
      __trace.line = 344;
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
  }
  else if (ch_0 == (RogueCharacter)'.')
  {
    __trace.line = 347;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
    {
      __trace.line = 348;
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
      {
        __trace.line = 350;
        while (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
        {
        }
        __trace.line = 351;
        if (!(((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)10 )))))
        {
          ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[282] ))));
        }
        __trace.line = 352;
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
      {
        __trace.line = 354;
        return (RogueClassTokenType*)(RogueTokenType_symbol_upToLessThan);
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
      {
        __trace.line = 356;
        return (RogueClassTokenType*)(RogueTokenType_symbol_downToGreaterThan);
      }
      else
      {
        __trace.line = 358;
        return (RogueClassTokenType*)(RogueTokenType_symbol_upTo);
      }
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      __trace.line = 361;
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot_equals);
    }
    else
    {
      __trace.line = 363;
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot);
    }
  }
  else if (ch_0 == (RogueCharacter)'/')
  {
    __trace.line = 367;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      __trace.line = 368;
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash_equals);
    }
    else
    {
      __trace.line = 370;
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash);
    }
  }
  else if (ch_0 == (RogueCharacter)':')
  {
    __trace.line = 374;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)':' ))))
    {
      __trace.line = 375;
      RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[96], ROGUE_ARG(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))) )))) );
      __trace.line = 376;
      return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
    }
    __trace.line = 379;
    if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[283] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_left);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[284] ))))
    {
      __trace.line = 380;
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[285] ))))
    {
      __trace.line = 381;
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right_x);
    }
    __trace.line = 382;
    return (RogueClassTokenType*)(RogueTokenType_symbol_colon);
  }
  else if (ch_0 == (RogueCharacter)';')
  {
    __trace.line = 385;
    return (RogueClassTokenType*)(RogueTokenType_symbol_semicolon);
  }
  else if (ch_0 == (RogueCharacter)'<')
  {
    __trace.line = 388;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_open_specialize);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      __trace.line = 389;
      return (RogueClassTokenType*)(RogueTokenType_symbol_le);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      __trace.line = 390;
      return (RogueClassTokenType*)(RogueTokenType_symbol_compare);
    }
    else
    {
      __trace.line = 391;
      return (RogueClassTokenType*)(RogueTokenType_symbol_lt);
    }
  }
  else if (ch_0 == (RogueCharacter)'=')
  {
    __trace.line = 394;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_eq);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      __trace.line = 395;
      return (RogueClassTokenType*)(RogueTokenType_symbol_fat_arrow);
    }
    else
    {
      __trace.line = 396;
      return (RogueClassTokenType*)(RogueTokenType_symbol_equals);
    }
  }
  else if (ch_0 == (RogueCharacter)'>')
  {
    __trace.line = 399;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ge);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      __trace.line = 400;
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_specialize);
    }
    else
    {
      __trace.line = 401;
      return (RogueClassTokenType*)(RogueTokenType_symbol_gt);
    }
  }
  else if (ch_0 == (RogueCharacter)'?')
  {
    __trace.line = 404;
    return (RogueClassTokenType*)(RogueTokenType_symbol_question_mark);
  }
  else if (ch_0 == (RogueCharacter)'@')
  {
    __trace.line = 407;
    if (((RogueTokenizer__consume_id__String( ROGUE_ARG(THIS), Rogue_literal_strings[181] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_keyword_trace_position);
    }
    __trace.line = 408;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_brace);
    }
    __trace.line = 409;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_bracket);
    }
    __trace.line = 410;
    return (RogueClassTokenType*)(RogueTokenType_symbol_at);
  }
  else if (ch_0 == (RogueCharacter)'[')
  {
    __trace.line = 413;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_brackets);
    }
    __trace.line = 414;
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_bracket);
  }
  else if (ch_0 == (RogueCharacter)'\\')
  {
    __trace.line = 417;
    return (RogueClassTokenType*)(RogueTokenType_symbol_backslash);
  }
  else if (ch_0 == (RogueCharacter)']')
  {
    __trace.line = 420;
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_bracket);
  }
  else if (ch_0 == (RogueCharacter)'^')
  {
    __trace.line = 423;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret_equals);
    }
    else
    {
      __trace.line = 424;
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret);
    }
  }
  else if (ch_0 == (RogueCharacter)'{')
  {
    __trace.line = 427;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'}' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_braces);
    }
    __trace.line = 428;
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_brace);
  }
  else if (ch_0 == (RogueCharacter)'|')
  {
    __trace.line = 431;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_vertical_bar);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      __trace.line = 432;
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar_equals);
    }
    else
    {
      __trace.line = 433;
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar);
    }
  }
  else if (ch_0 == (RogueCharacter)'}')
  {
    __trace.line = 436;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_comment);
    }
    else
    {
      __trace.line = 437;
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_brace);
    }
  }
  else if (ch_0 == (RogueCharacter)'~')
  {
    __trace.line = 440;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde_equals);
    }
    else
    {
      __trace.line = 441;
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde);
    }
  }
  else
  {
    __trace.line = 444;
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[286], ch_0 )))), Rogue_literal_strings[45] )))) ))));
  }
}

RogueLogical RogueTokenizer__next_is_hex_digit( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.next_is_hex_digit()", "Tokenizer.rogue", 448 );
  __trace.line = 449;
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 450;
  return (RogueLogical)((((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9') || (ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'f')) || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'F')));
}

void RogueTokenizer__read_character( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.read_character()", "Tokenizer.rogue", 452 );
  __trace.line = 453;
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[262] ))));
  }
  __trace.line = 455;
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 456;
  if (ch_0 == (RogueCharacter)10)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[263] ))));
  }
  __trace.line = 458;
  if (ch_0 == (RogueCharacter)'\\')
  {
    __trace.line = 459;
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    __trace.line = 460;
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[264] ))));
    }
    __trace.line = 462;
    RogueInt32 value_1 = 0;
    __trace.line = 463;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'b' ))))
    {
      value_1 = ((RogueInt32)8);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'f' ))))
    {
      __trace.line = 464;
      value_1 = ((RogueInt32)12);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'n' ))))
    {
      __trace.line = 465;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)10)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'r' ))))
    {
      __trace.line = 466;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)13)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'t' ))))
    {
      __trace.line = 467;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)9)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'v' ))))
    {
      __trace.line = 468;
      value_1 = ((RogueInt32)11);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'0' ))))
    {
      __trace.line = 469;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)0)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'/' ))))
    {
      __trace.line = 470;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'/')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))))
    {
      __trace.line = 471;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\'')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\\' ))))
    {
      __trace.line = 472;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\\')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))))
    {
      __trace.line = 473;
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'"')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'x' ))))
    {
      __trace.line = 474;
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 2, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'u' ))))
    {
      __trace.line = 475;
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 4, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      __trace.line = 476;
      RogueTokenizer__read_hex_sequence( ROGUE_ARG(THIS) );
      return;
    }
    else
    {
      __trace.line = 477;
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[268], Rogue_literal_strings[269] )))), Rogue_literal_strings[270] )))) ))));
    }
    __trace.line = 479;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_1))), true );
  }
  else
  {
    __trace.line = 482;
    RogueInt32 value_2 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
    __trace.line = 483;
    if ((value_2 & 128) != 0)
    {
      __trace.line = 485;
      RogueInt32 ch2_3 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
      __trace.line = 487;
      if ((value_2 & 32) == 0)
      {
        __trace.line = 489;
        value_2 = ((RogueInt32)(value_2 & 31));
        __trace.line = 490;
        ch2_3 = ((RogueInt32)(value_2 & 63));
        __trace.line = 491;
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(((value_2 << 6) | ch2_3)))), true );
      }
      else
      {
        __trace.line = 494;
        RogueInt32 ch3_4 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
        __trace.line = 495;
        value_2 = ((RogueInt32)(value_2 & 15));
        __trace.line = 496;
        ch2_3 = ((RogueInt32)(ch2_3 & 63));
        __trace.line = 497;
        ch3_4 = ((RogueInt32)(ch3_4 & 63));
        __trace.line = 498;
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)((((value_2 << 2) | (ch2_3 << 6)) | ch3_4)))), true );
      }
    }
    else
    {
      __trace.line = 502;
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_2))), true );
    }
  }
}

RogueInt32 RogueTokenizer__read_hex_value__Int32_Logical( RogueClassTokenizer* THIS, RogueInt32 digits_0, RogueLogical variable_length_1 )
{
  RogueDebugTrace __trace( "Tokenizer.read_hex_value(Int32,Logical)", "Tokenizer.rogue", 507 );
  __trace.line = 508;
  RogueInt32 value_2 = (0);
  __trace.line = 509;
  RogueInt32 i_3 = (1);
  __trace.line = 510;
  while (i_3 <= digits_0)
  {
    __trace.line = 511;
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], digits_0 )))), Rogue_literal_strings[265] )))) ))));
    }
    __trace.line = 512;
    if (!(((RogueTokenizer__next_is_hex_digit( ROGUE_ARG(THIS) )))))
    {
      __trace.line = 513;
      if (variable_length_1)
      {
        return (RogueInt32)(value_2);
      }
      __trace.line = 514;
      RogueCharacter ch_4 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      __trace.line = 515;
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,error_buffer_5,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      __trace.line = 516;
      RogueStringBuilder__print__String( error_buffer_5, Rogue_literal_strings[266] );
      __trace.line = 517;
      if ((ch_4 < (RogueCharacter)' ' || ((RogueInt32)(ch_4)) == 127))
      {
        RogueStringBuilder__print__Int32( error_buffer_5, ROGUE_ARG(((RogueInt32)(ch_4))) );
      }
      else
      {
        __trace.line = 518;
        RogueStringBuilder__print__String( error_buffer_5, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[83], ch_4 )))), Rogue_literal_strings[83] )))) );
      }
      __trace.line = 519;
      RogueStringBuilder__print__Character_Logical( error_buffer_5, (RogueCharacter)'.', true );
      __trace.line = 520;
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( error_buffer_5 )))) ))));
    }
    __trace.line = 522;
    RogueInt32 intval_6 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), 16 ))));
    __trace.line = 523;
    value_2 = ((RogueInt32)((value_2 << 4) + intval_6));
    __trace.line = 524;
    ++i_3;
  }
  __trace.line = 526;
  return (RogueInt32)(value_2);
}

void RogueTokenizer__read_hex_sequence( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.read_hex_sequence()", "Tokenizer.rogue", 528 );
  __trace.line = 529;
  RogueLogical first_0 = (true);
  __trace.line = 530;
  while ((first_0 || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)',' )))))
  {
    __trace.line = 531;
    first_0 = ((RogueLogical)false);
    __trace.line = 532;
    RogueCharacter ch_1 = (((RogueCharacter)(((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 6, true ))))));
    __trace.line = 533;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
  }
  __trace.line = 536;
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
  {
    return;
  }
  __trace.line = 537;
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[267] ))));
}

RogueString* RogueTokenizer__read_identifier( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.read_identifier()", "Tokenizer.rogue", 539 );
  __trace.line = 540;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 541;
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 542;
  while (((((ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'z') || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'Z')) || (ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9')) || ch_0 == (RogueCharacter)'_'))
  {
    __trace.line = 543;
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    __trace.line = 544;
    ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    __trace.line = 545;
    while ((ch_0 == (RogueCharacter)':' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)':'))
    {
      __trace.line = 546;
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      __trace.line = 547;
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      __trace.line = 548;
      RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[96] );
      __trace.line = 549;
      ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    }
  }
  __trace.line = 553;
  if (THIS->buffer->count == 0)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[257] ))));
  }
  __trace.line = 555;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueLogical RogueTokenizer__tokenize_alternate_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_alternate_string(Character)", "Tokenizer.rogue", 557 );
  __trace.line = 558;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 560;
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 561;
    if (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 562;
      RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      __trace.line = 563;
      if (ch_1 == terminator_0)
      {
        __trace.line = 564;
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        __trace.line = 565;
        ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
        __trace.line = 566;
        if (ch_1 == terminator_0)
        {
          __trace.line = 567;
          RogueParseReader__read( ROGUE_ARG(THIS->reader) );
          __trace.line = 568;
          return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(0))) ))));
        }
        else
        {
          __trace.line = 570;
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), terminator_0, true );
        }
      }
      else
      {
        __trace.line = 573;
        RogueTokenizer__read_character( ROGUE_ARG(THIS) );
      }
    }
  }
  __trace.line = 578;
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[271] ))));
}

RogueLogical RogueTokenizer__tokenize_another( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_another()", "Tokenizer.rogue", 580 );
  __trace.line = 581;
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  __trace.line = 584;
  THIS->next_filepath = THIS->filepath;
  __trace.line = 585;
  THIS->next_line = THIS->reader->line;
  __trace.line = 586;
  THIS->next_column = THIS->reader->column;
  __trace.line = 588;
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 590;
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 591;
  if (ch_0 == (RogueCharacter)10)
  {
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
  }
  __trace.line = 593;
  if ((((RogueCharacter__is_letter( ch_0 ))) || ch_0 == (RogueCharacter)'_'))
  {
    __trace.line = 594;
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    __trace.line = 595;
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,keyword_type_2,(((RogueTable_String_TokenType___get__String( ROGUE_ARG(RogueTokenType_lookup), id_1 )))));
    __trace.line = 596;
    if (!!(keyword_type_2))
    {
      __trace.line = 597;
      if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeCode))
      {
        __trace.line = 598;
        return (RogueLogical)(((RogueTokenizer__scan_native_code( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeHeader))
      {
        __trace.line = 600;
        return (RogueLogical)(((RogueTokenizer__scan_native_header( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_directive_requisite))
      {
        __trace.line = 602;
        return (RogueLogical)(((RogueTokenizer__scan_requisite_directive( ROGUE_ARG(THIS) ))));
      }
      else
      {
        __trace.line = 604;
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), keyword_type_2 ))));
      }
    }
    else
    {
      __trace.line = 607;
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), id_1 ))));
    }
    __trace.line = 609;
    return (RogueLogical)(true);
  }
  else if (ch_0 == (RogueCharacter)'\'')
  {
    __trace.line = 612;
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'\'')
    {
      __trace.line = 613;
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      __trace.line = 614;
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      __trace.line = 615;
      return (RogueLogical)(((RogueTokenizer__tokenize_alternate_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
    else
    {
      __trace.line = 617;
      return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
  }
  else if (ch_0 == (RogueCharacter)'"')
  {
    __trace.line = 621;
    return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))));
  }
  else if (ch_0 == (RogueCharacter)'#')
  {
    __trace.line = 624;
    return (RogueLogical)(((RogueTokenizer__tokenize_comment( ROGUE_ARG(THIS) ))));
  }
  else if ((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9'))
  {
    __trace.line = 627;
    switch (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))))
    {
      case (RogueCharacter)'b':
      {
        __trace.line = 628;
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 2 ))));
        break;
      }
      case (RogueCharacter)'c':
      {
        __trace.line = 629;
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 8 ))));
        break;
      }
      case (RogueCharacter)'x':
      {
        __trace.line = 630;
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 16 ))));
        break;
      }
      default:
      {
        __trace.line = 631;
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
  }
  else if ((ch_0 == (RogueCharacter)'@' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'|'))
  {
    __trace.line = 635;
    return (RogueLogical)(((RogueTokenizer__tokenize_verbatim_string( ROGUE_ARG(THIS) ))));
  }
  else
  {
    __trace.line = 639;
    if (ch_0 == (RogueCharacter)'.')
    {
      __trace.line = 640;
      RogueCharacter next_3 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      __trace.line = 641;
      if ((next_3 >= (RogueCharacter)'0' && next_3 <= (RogueCharacter)'9'))
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
    __trace.line = 645;
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,token_type_4,(((Rogue_Tokenizer__get_symbol_token_type( ROGUE_ARG(THIS) )))));
    __trace.line = 646;
    if (((void*)token_type_4) == ((void*)NULL))
    {
      return (RogueLogical)(true);
    }
    __trace.line = 647;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), token_type_4 ))));
  }
  __trace.line = 650;
  ROGUE_DEF_LOCAL_REF(RogueString*,name_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[83] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ch_0 )))) )))), Rogue_literal_strings[83] )))) )))));
  __trace.line = 651;
  if (ch_0 == ((RogueCharacter)(10)))
  {
    name_5 = ((RogueString*)Rogue_literal_strings[287]);
  }
  else if ((ch_0 < ((RogueCharacter)(32)) || ch_0 > ((RogueCharacter)(126))))
  {
    __trace.line = 652;
    name_5 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[288] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(ch_0))) )))) )))), Rogue_literal_strings[34] )))) ))));
  }
  __trace.line = 654;
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[289] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_5 )))) )))), Rogue_literal_strings[78] )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_comment( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_comment()", "Tokenizer.rogue", 656 );
  __trace.line = 657;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 658;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 659;
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
  {
    __trace.line = 660;
    RogueInt32 nesting_count_0 = (1);
    __trace.line = 661;
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 662;
      RogueCharacter ch_1 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
      __trace.line = 663;
      switch (ch_1)
      {
        case (RogueCharacter)'#':
        {
          __trace.line = 665;
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
          __trace.line = 666;
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
          {
            __trace.line = 667;
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'{', true );
            __trace.line = 668;
            ++nesting_count_0;
          }
          break;
        }
        case (RogueCharacter)'}':
        {
          __trace.line = 672;
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
          {
            __trace.line = 673;
            --nesting_count_0;
            __trace.line = 674;
            if (nesting_count_0 == 0)
            {
              goto _auto_2891;
            }
            else
            {
              __trace.line = 675;
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
            }
          }
          else
          {
            __trace.line = 677;
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
          }
          break;
        }
        default:
        {
          __trace.line = 681;
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
        }
      }
    }
    _auto_2891:;
  }
  else
  {
    __trace.line = 685;
    while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && ((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != (RogueCharacter)10))
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
  }
  __trace.line = 688;
  if ((!!(THIS->tokens->count) && ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) == ((void*)RogueTokenType_eol)))
  {
    __trace.line = 690;
    ((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) )));
  }
  __trace.line = 693;
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__tokenize_integer_in_base__Int32( RogueClassTokenizer* THIS, RogueInt32 base_0 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_integer_in_base(Int32)", "Tokenizer.rogue", 695 );
  __trace.line = 696;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 697;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 699;
  RogueInt32 count_1 = (0);
  __trace.line = 700;
  RogueInt64 n_2 = (((RogueInt64)(0)));
  __trace.line = 701;
  RogueInt32 digit_3 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  __trace.line = 702;
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && digit_3 != -1))
  {
    __trace.line = 703;
    if (digit_3 >= base_0)
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[273], base_0 )))), Rogue_literal_strings[78] )))) ))));
    }
    __trace.line = 704;
    ++count_1;
    __trace.line = 705;
    n_2 = ((RogueInt64)((n_2 * ((RogueInt64)(base_0))) + ((RogueInt64)(digit_3))));
    __trace.line = 706;
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    __trace.line = 707;
    digit_3 = ((RogueInt32)((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  }
  __trace.line = 710;
  if (count_1 == 0)
  {
    ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[274] ))));
  }
  __trace.line = 713;
  if ((((base_0 == 2 && count_1 > 32) || (base_0 == 8 && count_1 > 11)) || (base_0 == 16 && count_1 > 8)))
  {
    __trace.line = 714;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_2 ))));
  }
  else
  {
    __trace.line = 716;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), n_2 ))));
  }
}

RogueLogical RogueTokenizer__tokenize_number( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_number()", "Tokenizer.rogue", 719 );
  __trace.line = 720;
  RogueLogical is_negative_0 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
  __trace.line = 722;
  RogueInt32 i_1 = (0);
  __trace.line = 723;
  while ((((RogueParseReader__has_another__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) ))) && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 )))), 10 )))))
  {
    ++i_1;
  }
  __trace.line = 724;
  RogueCharacter ch_2 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 ))));
  __trace.line = 725;
  RogueLogical is_real_3 = ((((ch_2 == (RogueCharacter)'.' && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) )))), 10 )))) || ch_2 == (RogueCharacter)'e') || ch_2 == (RogueCharacter)'E'));
  __trace.line = 727;
  if (is_real_3)
  {
    __trace.line = 729;
    RogueReal64 n_4 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
    __trace.line = 730;
    ch_2 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    __trace.line = 732;
    if (ch_2 == (RogueCharacter)'.')
    {
      __trace.line = 733;
      ch_2 = ((RogueCharacter)((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      __trace.line = 734;
      if ((ch_2 >= (RogueCharacter)'0' && ch_2 <= (RogueCharacter)'9'))
      {
        __trace.line = 735;
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        __trace.line = 736;
        RogueInt32 start_pos_5 = (THIS->reader->position);
        __trace.line = 737;
        RogueReal64 fraction_6 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
        __trace.line = 738;
        n_4 += (fraction_6 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)((THIS->reader->position - start_pos_5))))));
      }
      else if (ch_2 == (RogueCharacter)'.')
      {
        __trace.line = 741;
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        __trace.line = 742;
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else if ((((ch_2 >= (RogueCharacter)'a' && ch_2 <= (RogueCharacter)'z') || (ch_2 >= (RogueCharacter)'A' && ch_2 <= (RogueCharacter)'Z')) || ch_2 == (RogueCharacter)'_'))
      {
        __trace.line = 745;
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else
      {
        __trace.line = 747;
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        __trace.line = 748;
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
      }
    }
    __trace.line = 752;
    if ((((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'E' ))) || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'e' )))))
    {
      __trace.line = 753;
      RogueLogical negative_exponent_7 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
      __trace.line = 754;
      if (!(negative_exponent_7))
      {
        RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' );
      }
      __trace.line = 755;
      RogueReal64 power_8 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
      __trace.line = 756;
      if (negative_exponent_7)
      {
        n_4 /= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
      else
      {
        __trace.line = 757;
        n_4 *= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
    }
    __trace.line = 760;
    if (is_negative_0)
    {
      n_4 = ((RogueReal64)(-(n_4)));
    }
    __trace.line = 761;
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
  }
  else
  {
    __trace.line = 765;
    RogueInt64 n_9 = (((RogueTokenizer__scan_long( ROGUE_ARG(THIS) ))));
    __trace.line = 766;
    if (is_negative_0)
    {
      n_9 = ((RogueInt64)(-(n_9)));
    }
    __trace.line = 768;
    if (n_9 == ((RogueInt64)(((RogueInt32)(n_9)))))
    {
      __trace.line = 769;
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_9))) ))));
    }
    else
    {
      __trace.line = 771;
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_9 ))));
    }
  }
}

RogueReal64 RogueTokenizer__scan_real( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.scan_real()", "Tokenizer.rogue", 775 );
  __trace.line = 776;
  RogueReal64 n_0 = (0.0);
  __trace.line = 777;
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 778;
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    __trace.line = 779;
    RogueCharacter intval_2 = ((((RogueCharacter)(((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))))) - (RogueCharacter)'0'));
    __trace.line = 780;
    n_0 = ((RogueReal64)((n_0 * 10.0) + ((RogueReal64)(intval_2))));
    __trace.line = 781;
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  __trace.line = 783;
  return (RogueReal64)(n_0);
}

RogueInt64 RogueTokenizer__scan_long( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.scan_long()", "Tokenizer.rogue", 785 );
  __trace.line = 786;
  RogueInt64 n_0 = (((RogueInt64)(0)));
  __trace.line = 787;
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  __trace.line = 788;
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    __trace.line = 789;
    RogueCharacter intval_2 = ((((RogueCharacter)(((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))))) - (RogueCharacter)'0'));
    __trace.line = 790;
    n_0 = ((RogueInt64)((n_0 * ((RogueInt64)(10))) + ((RogueInt64)(intval_2))));
    __trace.line = 791;
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  __trace.line = 793;
  return (RogueInt64)(n_0);
}

RogueLogical RogueTokenizer__scan_native_code( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.scan_native_code()", "Tokenizer.rogue", 795 );
  __trace.line = 796;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 797;
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  __trace.line = 798;
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    __trace.line = 800;
    RogueLogical found_end_1 = (false);
    __trace.line = 801;
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 802;
      if (THIS->reader->column == 1)
      {
        __trace.line = 803;
        RogueInt32 spaces_2 = (0);
        __trace.line = 804;
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        __trace.line = 805;
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[258] ))))
        {
          __trace.line = 806;
          found_end_1 = ((RogueLogical)true);
          __trace.line = 807;
          goto _auto_2892;
        }
        else
        {
          __trace.line = 809;
          {
            RogueInt32 _auto_1735_3 = (1);
            RogueInt32 _auto_1736_4 = (spaces_2);
            for (;_auto_1735_3 <= _auto_1736_4;++_auto_1735_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      __trace.line = 812;
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2892:;
    __trace.line = 814;
    if (!(found_end_1))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[259] ))));
    }
  }
  else
  {
    __trace.line = 817;
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 818;
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2893;
      }
      __trace.line = 819;
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2893:;
  }
  __trace.line = 823;
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_native_header( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.scan_native_header()", "Tokenizer.rogue", 825 );
  __trace.line = 826;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 827;
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  __trace.line = 828;
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    __trace.line = 830;
    RogueLogical found_end_1 = (false);
    __trace.line = 831;
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 832;
      if (THIS->reader->column == 1)
      {
        __trace.line = 833;
        RogueInt32 spaces_2 = (0);
        __trace.line = 834;
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        __trace.line = 835;
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[260] ))))
        {
          __trace.line = 836;
          found_end_1 = ((RogueLogical)true);
          __trace.line = 837;
          goto _auto_2894;
        }
        else
        {
          __trace.line = 839;
          {
            RogueInt32 _auto_1737_3 = (1);
            RogueInt32 _auto_1738_4 = (spaces_2);
            for (;_auto_1737_3 <= _auto_1738_4;++_auto_1737_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      __trace.line = 842;
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2894:;
    __trace.line = 844;
    if (!(found_end_1))
    {
      ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[261] ))));
    }
  }
  else
  {
    __trace.line = 847;
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      __trace.line = 848;
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2895;
      }
      __trace.line = 849;
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2895:;
  }
  __trace.line = 853;
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_requisite_directive( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.scan_requisite_directive()", "Tokenizer.rogue", 855 );
  __trace.line = 856;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 857;
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  __trace.line = 860;
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 861;
    if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
    {
      goto _auto_2896;
    }
    __trace.line = 862;
    RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
  }
  _auto_2896:;
  __trace.line = 865;
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_requisite), ROGUE_ARG(((RogueString__trimmed( ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_string(Character)", "Tokenizer.rogue", 867 );
  __trace.line = 868;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 869;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 870;
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 871;
    RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    __trace.line = 872;
    if (ch_1 == terminator_0)
    {
      __trace.line = 873;
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      __trace.line = 874;
      return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), terminator_0 ))));
    }
    else
    {
      __trace.line = 876;
      RogueTokenizer__read_character( ROGUE_ARG(THIS) );
    }
  }
  __trace.line = 880;
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[272] ))));
}

RogueLogical RogueTokenizer__tokenize_verbatim_string( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.tokenize_verbatim_string()", "Tokenizer.rogue", 882 );
  __trace.line = 883;
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 884;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 885;
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 886;
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 887;
    RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
    __trace.line = 888;
    if (ch_0 == ((RogueCharacter)(10)))
    {
      __trace.line = 889;
      RogueTokenizer__consume_spaces( ROGUE_ARG(THIS) );
      __trace.line = 890;
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
      {
        __trace.line = 891;
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
      }
      else
      {
        __trace.line = 893;
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
        __trace.line = 894;
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
      }
    }
    else
    {
      __trace.line = 897;
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
    }
  }
  __trace.line = 901;
  ROGUE_THROW(((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[275] ))));
}

RogueClassTokenizer* RogueTokenizer__init_object( RogueClassTokenizer* THIS )
{
  RogueDebugTrace __trace( "Tokenizer.init_object()", "Tokenizer.rogue", 1 );
  __trace.line = 5;
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  __trace.line = 6;
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  __trace.line = 1;
  return (RogueClassTokenizer*)(THIS);
}

RogueString* RogueParseReader__type_name( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.type_name()", "ParseReader.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[802]);
}

RogueLogical RogueParseReader__has_another( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.has_another()", "ParseReader.rogue", 90 );
  __trace.line = 91;
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueParseReader__peek( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.peek()", "ParseReader.rogue", 96 );
  __trace.line = 97;
  if (THIS->position == THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  __trace.line = 98;
  return (RogueCharacter)(THIS->data->data->characters[THIS->position]);
}

RogueCharacter RogueParseReader__read( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.read()", "ParseReader.rogue", 106 );
  __trace.line = 107;
  RogueCharacter result_0 = (THIS->data->data->characters[THIS->position]);
  __trace.line = 108;
  ++THIS->position;
  __trace.line = 109;
  if (result_0 == ((RogueCharacter)(10)))
  {
    __trace.line = 110;
    ++THIS->line;
    __trace.line = 111;
    THIS->column = 1;
  }
  else
  {
    __trace.line = 113;
    ++THIS->column;
  }
  __trace.line = 115;
  return (RogueCharacter)(result_0);
}

RogueClassParseReader* RogueParseReader__init__String_Int32( RogueClassParseReader* THIS, RogueString* source_0, RogueInt32 _auto_1747_1 )
{
  RogueDebugTrace __trace( "ParseReader.init(String,Int32)", "ParseReader.rogue", 11 );
  THIS->spaces_per_tab = _auto_1747_1;
  __trace.line = 12;
  RogueInt32 tab_count_2 = (0);
  __trace.line = 14;
  if (!!(THIS->spaces_per_tab))
  {
    __trace.line = 15;
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2897_5,(source_0));
      RogueInt32 _auto_2898_6 = (0);
      for (;_auto_2898_6 < _auto_2897_5->character_count;++_auto_2898_6)
      {
        RogueCharacter b_7 = (RogueString_character_at(_auto_2897_5,_auto_2898_6));
        __trace.line = 16;
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  __trace.line = 20;
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->character_count + tab_count_2)) )));
  __trace.line = 21;
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2899_8,(source_0));
    RogueInt32 _auto_2900_9 = (0);
    for (;_auto_2900_9 < _auto_2899_8->character_count;++_auto_2900_9)
    {
      RogueCharacter b_10 = (RogueString_character_at(_auto_2899_8,_auto_2900_9));
      __trace.line = 22;
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        __trace.line = 23;
        {
          RogueInt32 _auto_1743_3 = (1);
          RogueInt32 _auto_1744_4 = (THIS->spaces_per_tab);
          for (;_auto_1743_3 <= _auto_1744_4;++_auto_1743_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        __trace.line = 25;
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  __trace.line = 29;
  THIS->count = THIS->data->count;
  __trace.line = 30;
  THIS->line = 1;
  __trace.line = 31;
  THIS->column = 1;
  __trace.line = 33;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__File_Int32( RogueClassParseReader* THIS, RogueClassFile* file_0, RogueInt32 _auto_1748_1 )
{
  RogueDebugTrace __trace( "ParseReader.init(File,Int32)", "ParseReader.rogue", 33 );
  THIS->spaces_per_tab = _auto_1748_1;
  __trace.line = 34;
  RogueParseReader__init__String_Int32( ROGUE_ARG(THIS), ROGUE_ARG((RogueFile__load_as_string__String( ROGUE_ARG(file_0->filepath) ))), ROGUE_ARG(THIS->spaces_per_tab) );
  __trace.line = 36;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__Character_List_Int32( RogueClassParseReader* THIS, RogueCharacter_List* source_0, RogueInt32 _auto_1749_1 )
{
  RogueDebugTrace __trace( "ParseReader.init(Character[],Int32)", "ParseReader.rogue", 36 );
  THIS->spaces_per_tab = _auto_1749_1;
  __trace.line = 37;
  RogueInt32 tab_count_2 = (0);
  __trace.line = 39;
  if (!!(THIS->spaces_per_tab))
  {
    __trace.line = 40;
    {
      ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2901_5,(source_0));
      RogueInt32 _auto_2902_6 = (0);
      for (;_auto_2902_6 < _auto_2901_5->count;++_auto_2902_6)
      {
        RogueCharacter b_7 = (_auto_2901_5->data->characters[_auto_2902_6]);
        __trace.line = 41;
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  __trace.line = 45;
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->count + tab_count_2)) )));
  __trace.line = 46;
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2903_8,(source_0));
    RogueInt32 _auto_2904_9 = (0);
    for (;_auto_2904_9 < _auto_2903_8->count;++_auto_2904_9)
    {
      RogueCharacter b_10 = (_auto_2903_8->data->characters[_auto_2904_9]);
      __trace.line = 47;
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        __trace.line = 48;
        {
          RogueInt32 _auto_1745_3 = (1);
          RogueInt32 _auto_1746_4 = (THIS->spaces_per_tab);
          for (;_auto_1745_3 <= _auto_1746_4;++_auto_1745_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        __trace.line = 50;
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  __trace.line = 54;
  THIS->count = THIS->data->count;
  __trace.line = 55;
  THIS->line = 1;
  __trace.line = 56;
  THIS->column = 1;
  __trace.line = 58;
  return (RogueClassParseReader*)(THIS);
}

RogueLogical RogueParseReader__consume__Character( RogueClassParseReader* THIS, RogueCharacter ch_0 )
{
  RogueDebugTrace __trace( "ParseReader.consume(Character)", "ParseReader.rogue", 58 );
  __trace.line = 59;
  if (((RogueParseReader__peek( ROGUE_ARG(THIS) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  __trace.line = 60;
  RogueParseReader__read( ROGUE_ARG(THIS) );
  __trace.line = 61;
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueDebugTrace __trace( "ParseReader.consume(String)", "ParseReader.rogue", 63 );
  __trace.line = 64;
  RogueInt32 limit_1 = (text_0->character_count);
  __trace.line = 65;
  RogueInt32 i_2 = (0);
  __trace.line = 66;
  while (i_2 < limit_1)
  {
    __trace.line = 67;
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), i_2 ))) != RogueString_character_at(text_0,i_2))
    {
      return (RogueLogical)(false);
    }
    __trace.line = 68;
    ++i_2;
  }
  __trace.line = 72;
  i_2 = ((RogueInt32)0);
  __trace.line = 73;
  while (i_2 < limit_1)
  {
    __trace.line = 74;
    RogueParseReader__read( ROGUE_ARG(THIS) );
    __trace.line = 75;
    ++i_2;
  }
  __trace.line = 78;
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume_id__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueDebugTrace __trace( "ParseReader.consume_id(String)", "ParseReader.rogue", 80 );
  __trace.line = 81;
  RogueCharacter ch_1 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), ROGUE_ARG(text_0->character_count) ))));
  __trace.line = 82;
  if ((((RogueCharacter__is_alphanumeric( ch_1 ))) || ch_1 == (RogueCharacter)'_'))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 83;
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS), text_0 ))));
}

RogueLogical RogueParseReader__consume_spaces( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.consume_spaces()", "ParseReader.rogue", 85 );
  __trace.line = 86;
  RogueLogical found_0 = (false);
  __trace.line = 87;
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
  {
    found_0 = ((RogueLogical)true);
  }
  __trace.line = 88;
  return (RogueLogical)(found_0);
}

RogueLogical RogueParseReader__has_another__Int32( RogueClassParseReader* THIS, RogueInt32 n_0 )
{
  RogueDebugTrace __trace( "ParseReader.has_another(Int32)", "ParseReader.rogue", 93 );
  __trace.line = 94;
  return (RogueLogical)((THIS->position + n_0) <= THIS->count);
}

RogueCharacter RogueParseReader__peek__Int32( RogueClassParseReader* THIS, RogueInt32 num_ahead_0 )
{
  RogueDebugTrace __trace( "ParseReader.peek(Int32)", "ParseReader.rogue", 100 );
  __trace.line = 102;
  RogueInt32 peek_pos_1 = ((THIS->position + num_ahead_0));
  __trace.line = 103;
  if (peek_pos_1 >= THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  __trace.line = 104;
  return (RogueCharacter)(THIS->data->data->characters[peek_pos_1]);
}

RogueClassParseReader* RogueParseReader__seek_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 new_line_0, RogueInt32 new_column_1 )
{
  RogueDebugTrace __trace( "ParseReader.seek_location(Int32,Int32)", "ParseReader.rogue", 142 );
  __trace.line = 143;
  if ((new_line_0 < THIS->line || (new_line_0 == THIS->line && new_column_1 < THIS->column)))
  {
    __trace.line = 145;
    THIS->position = 0;
    __trace.line = 146;
    THIS->line = 1;
    __trace.line = 147;
    THIS->column = 1;
  }
  __trace.line = 150;
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->line < new_line_0))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  __trace.line = 151;
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->column < new_column_1))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  __trace.line = 153;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__set_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 _auto_1750_0, RogueInt32 _auto_1751_1 )
{
  RogueDebugTrace __trace( "ParseReader.set_location(Int32,Int32)", "ParseReader.rogue", 155 );
  THIS->column = _auto_1751_1;
  THIS->line = _auto_1750_0;
  __trace.line = 156;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init_object( RogueClassParseReader* THIS )
{
  RogueDebugTrace __trace( "ParseReader.init_object()", "ParseReader.rogue", 1 );
  return (RogueClassParseReader*)(THIS);
}

RogueString* RoguePreprocessor__type_name( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.type_name()", "Preprocessor.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[803]);
}

RogueClassPreprocessor* RoguePreprocessor__init__Parser( RogueClassPreprocessor* THIS, RogueClassParser* _auto_1752_0 )
{
  RogueDebugTrace __trace( "Preprocessor.init(Parser)", "Preprocessor.rogue", 13 );
  THIS->parser = _auto_1752_0;
  __trace.line = 15;
  return (RogueClassPreprocessor*)(THIS);
}

RogueToken_List* RoguePreprocessor__process__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_1753_0 )
{
  RogueDebugTrace __trace( "Preprocessor.process(Token[])", "Preprocessor.rogue", 15 );
  THIS->tokens = _auto_1753_0;
  __trace.line = 16;
  THIS->reader = ((RoguePreprocessorTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessorTokenReader*,ROGUE_CREATE_OBJECT(PreprocessorTokenReader))), ROGUE_ARG(THIS->tokens) )));
  __trace.line = 17;
  THIS->tokens = ((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(((RogueInt32)((((RogueReal64)(THIS->tokens->count)) * 1.1)))) )));
  __trace.line = 18;
  RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), true, 0, false );
  __trace.line = 20;
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RoguePreprocessor__consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Preprocessor.consume(TokenType)", "Preprocessor.rogue", 24 );
  __trace.line = 25;
  if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) != ((void*)type_0))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 26;
  RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
  __trace.line = 27;
  return (RogueLogical)(true);
}

void RoguePreprocessor__process__Logical_Int32_Logical( RogueClassPreprocessor* THIS, RogueLogical keep_tokens_0, RogueInt32 depth_1, RogueLogical stop_on_eol_2 )
{
  RogueDebugTrace __trace( "Preprocessor.process(Logical,Int32,Logical)", "Preprocessor.rogue", 29 );
  __trace.line = 30;
  ++depth_1;
  __trace.line = 31;
  while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    __trace.line = 32;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    __trace.line = 34;
    if (((RogueToken__is_directive( t_3 ))))
    {
      __trace.line = 35;
      if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_define))
      {
        __trace.line = 36;
        ROGUE_DEF_LOCAL_REF(RogueString*,defined_word_4,(((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )))));
        __trace.line = 37;
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,defined_tokens_5,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
        __trace.line = 38;
        while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
        {
          __trace.line = 39;
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_6,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
          __trace.line = 40;
          if (((void*)def_t_6->_type) == ((void*)RogueTokenType_eol))
          {
            goto _auto_2906;
          }
          __trace.line = 41;
          RogueToken_List__add__Token( defined_tokens_5, def_t_6 );
        }
        _auto_2906:;
        __trace.line = 43;
        if (keep_tokens_0)
        {
          RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), defined_word_4, defined_tokens_5 );
        }
        __trace.line = 44;
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_include))
      {
        __trace.line = 47;
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_7,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        __trace.line = 48;
        if (keep_tokens_0)
        {
          __trace.line = 49;
          if (((void*)filepath_t_7->_type) != ((void*)RogueTokenType_literal_string))
          {
            __trace.line = 50;
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[84] ))));
          }
          __trace.line = 52;
          RogueRogueC__include_source__Token_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM68( 4, filepath_t_7 ))) );
        }
        __trace.line = 54;
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_includeNativeCode))
      {
        __trace.line = 57;
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_8,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        __trace.line = 58;
        if (keep_tokens_0)
        {
          __trace.line = 59;
          if (((void*)filepath_t_8->_type) != ((void*)RogueTokenType_literal_string))
          {
            __trace.line = 60;
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[84] ))));
          }
          __trace.line = 62;
          RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM68( 4, filepath_t_8 ))), Rogue_literal_strings[88] );
        }
        __trace.line = 64;
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_includeNativeHeader))
      {
        __trace.line = 67;
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_9,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        __trace.line = 68;
        if (keep_tokens_0)
        {
          __trace.line = 69;
          if (((void*)filepath_t_9->_type) != ((void*)RogueTokenType_literal_string))
          {
            __trace.line = 70;
            ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[84] ))));
          }
          __trace.line = 72;
          RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((call_ROGUEM68( 4, filepath_t_9 ))), Rogue_literal_strings[87] );
        }
        __trace.line = 74;
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_elseIf))
      {
        __trace.line = 77;
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[89] ))));
        }
        __trace.line = 78;
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        __trace.line = 79;
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_else))
      {
        __trace.line = 82;
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[90] ))));
        }
        __trace.line = 83;
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        __trace.line = 84;
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_endIf))
      {
        __trace.line = 87;
        if (depth_1 == 1)
        {
          ROGUE_THROW(((RogueToken__error__String( t_3, Rogue_literal_strings[91] ))));
        }
        __trace.line = 88;
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        __trace.line = 89;
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_if))
      {
        __trace.line = 92;
        RogueLogical found_true_10 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
        __trace.line = 93;
        RogueLogical single_line_11 = (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), ROGUE_ARG(RogueTokenType_eol) )))));
        __trace.line = 95;
        if (found_true_10)
        {
          __trace.line = 96;
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
        }
        else
        {
          __trace.line = 98;
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
        }
        __trace.line = 101;
        while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_elseIf))
        {
          __trace.line = 102;
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          __trace.line = 103;
          RogueLogical value_12 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
          __trace.line = 105;
          if (found_true_10)
          {
            __trace.line = 106;
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
          }
          else
          {
            __trace.line = 108;
            found_true_10 = ((RogueLogical)value_12);
            __trace.line = 109;
            if (value_12)
            {
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
            }
            else
            {
              __trace.line = 110;
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
            }
          }
        }
        __trace.line = 114;
        if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_else))
        {
          __trace.line = 115;
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          __trace.line = 116;
          if (found_true_10)
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_11 );
          }
          else
          {
            __trace.line = 117;
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_11 );
          }
        }
        __trace.line = 120;
        if (!(single_line_11))
        {
          RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
        }
        __trace.line = 121;
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_module))
      {
        __trace.line = 124;
        if (keep_tokens_0)
        {
          __trace.line = 125;
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
          __trace.line = 126;
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))) );
        }
        __trace.line = 128;
        THIS->cur_module = ((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )));
        __trace.line = 129;
        continue;
      }
    }
    __trace.line = 133;
    if ((((void*)t_3->_type) == ((void*)RogueTokenType_keyword_class) || ((void*)t_3->_type) == ((void*)RogueTokenType_keyword_routine)))
    {
      __trace.line = 134;
      if ((!!(THIS->cur_module) && ((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_identifier)))
      {
        __trace.line = 135;
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
        }
        __trace.line = 136;
        t_3 = ((RogueClassToken*)((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) ))));
        __trace.line = 137;
        ROGUE_DEF_LOCAL_REF(RogueString*,class_name_13,((call_ROGUEM68( 4, t_3 ))));
        __trace.line = 138;
        RogueProgram__add_module_id__String_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->cur_module), class_name_13 );
        __trace.line = 139;
        if (keep_tokens_0)
        {
          __trace.line = 140;
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((call_ROGUEM141( 15, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->cur_module) )))) )))), Rogue_literal_strings[96] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], class_name_13 )))) )))) )))) ))) );
        }
        __trace.line = 142;
        continue;
      }
    }
    __trace.line = 146;
    if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
    {
      __trace.line = 147;
      while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_literal_string))
      {
        __trace.line = 148;
        t_3 = ((RogueClassToken*)(call_ROGUEM141( 15, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((call_ROGUEM68( 4, t_3 ))), ROGUE_ARG((call_ROGUEM68( 4, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) )))) )));
      }
    }
    __trace.line = 152;
    if (keep_tokens_0)
    {
      RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
    }
    __trace.line = 153;
    if ((stop_on_eol_2 && ((void*)t_3->_type) == ((void*)RogueTokenType_eol)))
    {
      return;
    }
  }
}

void RoguePreprocessor__must_consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "Preprocessor.must_consume(TokenType)", "Preprocessor.rogue", 157 );
  __trace.line = 158;
  ROGUE_DEF_LOCAL_REF(RogueString*,message_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[92] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[45] )))) )))));
  __trace.line = 159;
  if (!(((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_1, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
  }
  __trace.line = 160;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  __trace.line = 161;
  if (((void*)t_2->_type) != ((void*)type_0))
  {
    ROGUE_THROW(((RogueToken__error__String( t_2, message_1 ))));
  }
}

RogueLogical RoguePreprocessor__parse_logical_expression( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_expression()", "Preprocessor.rogue", 163 );
  __trace.line = 164;
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or( ROGUE_ARG(THIS) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_or()", "Preprocessor.rogue", 166 );
  __trace.line = 167;
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_or(Logical)", "Preprocessor.rogue", 169 );
  __trace.line = 170;
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) ))) || lhs_0)) ))));
  }
  __trace.line = 171;
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_and( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_and()", "Preprocessor.rogue", 173 );
  __trace.line = 174;
  return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_and__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_and(Logical)", "Preprocessor.rogue", 176 );
  __trace.line = 177;
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) ))) && lhs_0)) ))));
  }
  __trace.line = 178;
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_term( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.parse_logical_term()", "Preprocessor.rogue", 180 );
  __trace.line = 181;
  for (;;)
  {
    __trace.line = 182;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
    __trace.line = 183;
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
    {
      __trace.line = 184;
      return (RogueLogical)(!(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))));
    }
    __trace.line = 187;
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      __trace.line = 188;
      RogueLogical result_1 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
      __trace.line = 189;
      RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) );
      __trace.line = 190;
      return (RogueLogical)(result_1);
    }
    __trace.line = 193;
    if (((void*)t_0->_type) == ((void*)RogueTokenType_literal_string))
    {
      __trace.line = 194;
      ROGUE_DEF_LOCAL_REF(RogueString*,target_2,((call_ROGUEM68( 4, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))));
      __trace.line = 195;
      return (RogueLogical)(((RogueTable_String_Logical___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->compile_targets), target_2 ))));
    }
    __trace.line = 218;
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
    {
      return (RogueLogical)(true);
    }
    __trace.line = 219;
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
    {
      return (RogueLogical)(false);
    }
    __trace.line = 220;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[93] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))))) )))) )))), Rogue_literal_strings[45] )))) )))) ))));
  }
}

RogueToken_List* RoguePreprocessor__reprocess__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_1754_0 )
{
  RogueDebugTrace __trace( "Preprocessor.reprocess(Token[])", "Preprocessor.rogue", 228 );
  THIS->tokens = _auto_1754_0;
  __trace.line = 231;
  ROGUE_DEF_LOCAL_REF(RogueClassListRebuilder_Token_*,rebuilder_1,(((RogueToken_List__rebuilder( ROGUE_ARG(THIS->tokens) )))));
  __trace.line = 232;
  while (((RogueListRebuilder_Token___has_another( rebuilder_1 ))))
  {
    __trace.line = 233;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueListRebuilder_Token___read( rebuilder_1 )))));
    __trace.line = 234;
    while (((((void*)t_2->_type) == ((void*)RogueTokenType_literal_string) && ((RogueListRebuilder_Token___has_another( rebuilder_1 )))) && ((void*)((RogueListRebuilder_Token___peek__Int32( rebuilder_1, 0 )))->_type) == ((void*)RogueTokenType_literal_string)))
    {
      __trace.line = 235;
      t_2 = ((RogueClassToken*)(call_ROGUEM141( 15, ROGUE_ARG(t_2->_type), t_2, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((call_ROGUEM68( 4, t_2 ))), ROGUE_ARG((call_ROGUEM68( 4, ROGUE_ARG(((RogueListRebuilder_Token___read( rebuilder_1 )))) ))) )))) )));
    }
    __trace.line = 237;
    RogueListRebuilder_Token___write__Token( rebuilder_1, t_2 );
  }
  __trace.line = 240;
  return (RogueToken_List*)(THIS->tokens);
}

RogueClassPreprocessor* RoguePreprocessor__init_object( RogueClassPreprocessor* THIS )
{
  RogueDebugTrace __trace( "Preprocessor.init_object()", "Preprocessor.rogue", 1 );
  return (RogueClassPreprocessor*)(THIS);
}

RogueString* RogueEOLToken__to_String( RogueClassEOLToken* THIS )
{
  RogueDebugTrace __trace( "EOLToken.to_String()", "Token.rogue", 83 );
  __trace.line = 84;
  if ((!!(THIS->comment) && !!(THIS->comment->character_count)))
  {
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[908] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->comment) )))) )))) ))));
  }
  __trace.line = 85;
  return (RogueString*)(Rogue_literal_strings[287]);
}

RogueString* RogueEOLToken__type_name( RogueClassEOLToken* THIS )
{
  RogueDebugTrace __trace( "EOLToken.type_name()", "Token.rogue", 72 );
  return (RogueString*)(Rogue_literal_strings[914]);
}

RogueClassEOLToken* RogueEOLToken__init_object( RogueClassEOLToken* THIS )
{
  RogueDebugTrace __trace( "EOLToken.init_object()", "Token.rogue", 72 );
  return (RogueClassEOLToken*)(THIS);
}

RogueClassEOLToken* RogueEOLToken__init__TokenType_String( RogueClassEOLToken* THIS, RogueClassTokenType* _auto_1757_0, RogueString* _auto_1758_1 )
{
  RogueDebugTrace __trace( "EOLToken.init(TokenType,String)", "Token.rogue", 77 );
  THIS->comment = _auto_1758_1;
  THIS->_type = _auto_1757_0;
  __trace.line = 79;
  return (RogueClassEOLToken*)(THIS);
}

RogueClassEOLToken* RogueEOLToken__init__Token( RogueClassEOLToken* THIS, RogueClassToken* existing_0 )
{
  RogueDebugTrace __trace( "EOLToken.init(Token)", "Token.rogue", 79 );
  __trace.line = 80;
  THIS->_type = RogueTokenType_eol;
  __trace.line = 81;
  RogueToken__set_location__Token( ROGUE_ARG(((RogueClassToken*)THIS)), existing_0 );
  __trace.line = 83;
  return (RogueClassEOLToken*)(THIS);
}

RogueString* RogueCmdNativeHeader__type_name( RogueClassCmdNativeHeader* THIS )
{
  RogueDebugTrace __trace( "CmdNativeHeader.type_name()", "Cmd.rogue", 4380 );
  return (RogueString*)(Rogue_literal_strings[961]);
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__clone__CloneArgs( RogueClassCmdNativeHeader* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNativeHeader.clone(CloneArgs)", "Cmd.rogue", 4387 );
  __trace.line = 4388;
  return (RogueClassCmdNativeHeader*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

void RogueCmdNativeHeader__dispatch__Visitor( RogueClassCmdNativeHeader* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNativeHeader.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueLogical RogueCmdNativeHeader__requires_semicolon( RogueClassCmdNativeHeader* THIS )
{
  RogueDebugTrace __trace( "CmdNativeHeader.requires_semicolon()", "Cmd.rogue", 4390 );
  __trace.line = 4391;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNativeHeader__resolve__Scope( RogueClassCmdNativeHeader* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNativeHeader.resolve(Scope)", "Cmd.rogue", 4393 );
  __trace.line = 4394;
  if (!!(THIS->code))
  {
    __trace.line = 4395;
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) ))).exists))
    {
      __trace.line = 4396;
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) );
    }
    __trace.line = 4398;
    THIS->code = ((RogueString*)(NULL));
  }
  __trace.line = 4400;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init_object( RogueClassCmdNativeHeader* THIS )
{
  RogueDebugTrace __trace( "CmdNativeHeader.init_object()", "Cmd.rogue", 4380 );
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init__Token_String( RogueClassCmdNativeHeader* THIS, RogueClassToken* _auto_1765_0, RogueString* _auto_1766_1 )
{
  RogueDebugTrace __trace( "CmdNativeHeader.init(Token,String)", "Cmd.rogue", 4385 );
  THIS->code = _auto_1766_1;
  THIS->t = _auto_1765_0;
  __trace.line = 4387;
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueString* RogueCmdNativeCode__type_name( RogueClassCmdNativeCode* THIS )
{
  RogueDebugTrace __trace( "CmdNativeCode.type_name()", "Cmd.rogue", 4403 );
  return (RogueString*)(Rogue_literal_strings[962]);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__clone__CloneArgs( RogueClassCmdNativeCode* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNativeCode.clone(CloneArgs)", "Cmd.rogue", 4410 );
  __trace.line = 4411;
  return (RogueClassCmdNativeCode*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

void RogueCmdNativeCode__dispatch__Visitor( RogueClassCmdNativeCode* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNativeCode.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueLogical RogueCmdNativeCode__requires_semicolon( RogueClassCmdNativeCode* THIS )
{
  RogueDebugTrace __trace( "CmdNativeCode.requires_semicolon()", "Cmd.rogue", 4413 );
  __trace.line = 4414;
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNativeCode__resolve__Scope( RogueClassCmdNativeCode* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNativeCode.resolve(Scope)", "Cmd.rogue", 4416 );
  __trace.line = 4417;
  if (!!(THIS->code))
  {
    __trace.line = 4418;
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) ))).exists))
    {
      __trace.line = 4419;
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) );
    }
  }
  __trace.line = 4422;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init_object( RogueClassCmdNativeCode* THIS )
{
  RogueDebugTrace __trace( "CmdNativeCode.init_object()", "Cmd.rogue", 4403 );
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init__Token_String( RogueClassCmdNativeCode* THIS, RogueClassToken* _auto_1767_0, RogueString* _auto_1768_1 )
{
  RogueDebugTrace __trace( "CmdNativeCode.init(Token,String)", "Cmd.rogue", 4408 );
  THIS->code = _auto_1768_1;
  THIS->t = _auto_1767_0;
  __trace.line = 4410;
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueString* RogueCmdAwait__type_name( RogueClassCmdAwait* THIS )
{
  RogueDebugTrace __trace( "CmdAwait.type_name()", "Cmd.rogue", 3997 );
  return (RogueString*)(Rogue_literal_strings[963]);
}

RogueClassCmd* RogueCmdAwait__clone__CloneArgs( RogueClassCmdAwait* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAwait.clone(CloneArgs)", "Cmd.rogue", 4006 );
  __trace.line = 4007;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 4008;
  if (!!(task_args_1))
  {
    __trace.line = 4009;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[972] ))));
  }
  else
  {
    __trace.line = 4011;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__clone__CloneArgs( ROGUE_ARG(THIS->statement_list), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) )))), ROGUE_ARG(THIS->result_var) ))))));
  }
}

void RogueCmdAwait__dispatch__Visitor( RogueClassCmdAwait* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAwait.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdAwait__resolve__Scope( RogueClassCmdAwait* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAwait.resolve(Scope)", "Cmd.rogue", 4014 );
  __trace.line = 4015;
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    __trace.line = 4016;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1031] ))));
  }
  __trace.line = 4019;
  THIS->expression = (call_ROGUEM81( 31, ROGUE_ARG(THIS->expression), scope_0 ));
  __trace.line = 4020;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->expression) ))));
  __trace.line = 4021;
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_result_2,(((RogueType__find_property__String( task_type_1, Rogue_literal_strings[466] )))));
  __trace.line = 4022;
  if (!!(THIS->result_var))
  {
    __trace.line = 4023;
    if (!!(p_result_2))
    {
      __trace.line = 4025;
      THIS->result_var->_type = p_result_2->_type;
    }
    else
    {
      __trace.line = 4027;
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[1032] ))));
    }
  }
  __trace.line = 4031;
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,task_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  __trace.line = 4032;
  task_var_3->initial_value = THIS->expression;
  __trace.line = 4033;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), task_var_3, false )))))) );
  __trace.line = 4035;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), Rogue_literal_strings[462] )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  __trace.line = 4036;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_while_4->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) )))))) );
  __trace.line = 4037;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(cmd_while_4))) );
  __trace.line = 4039;
  if (!!(THIS->result_var))
  {
    __trace.line = 4040;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->result_var), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), p_result_2 )))))) )))))) );
  }
  __trace.line = 4043;
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statement_list), scope_0, false );
  __trace.line = 4044;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( ROGUE_ARG(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->statement_list), 0 )))), scope_0 ))))));
}

RogueClassCmdAwait* RogueCmdAwait__init_object( RogueClassCmdAwait* THIS )
{
  RogueDebugTrace __trace( "CmdAwait.init_object()", "Cmd.rogue", 3997 );
  return (RogueClassCmdAwait*)(THIS);
}

RogueClassCmdAwait* RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( RogueClassCmdAwait* THIS, RogueClassToken* _auto_1769_0, RogueClassCmd* _auto_1770_1, RogueClassCmdStatementList* _auto_1771_2, RogueClassLocal* _auto_1772_3 )
{
  RogueDebugTrace __trace( "CmdAwait.init(Token,Cmd,CmdStatementList,Local)", "Cmd.rogue", 4004 );
  THIS->result_var = _auto_1772_3;
  THIS->statement_list = _auto_1771_2;
  THIS->expression = _auto_1770_1;
  THIS->t = _auto_1769_0;
  __trace.line = 4006;
  return (RogueClassCmdAwait*)(THIS);
}

RogueString* RogueCmdYield__type_name( RogueClassCmdYield* THIS )
{
  RogueDebugTrace __trace( "CmdYield.type_name()", "Cmd.rogue", 4047 );
  return (RogueString*)(Rogue_literal_strings[964]);
}

RogueClassCmd* RogueCmdYield__clone__CloneArgs( RogueClassCmdYield* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdYield.clone(CloneArgs)", "Cmd.rogue", 4051 );
  __trace.line = 4052;
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  __trace.line = 4053;
  if (!!(task_args_1))
  {
    __trace.line = 4054;
    RogueTaskArgs__add_yield__Token( task_args_1, ROGUE_ARG(THIS->t) );
    __trace.line = 4055;
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    __trace.line = 4057;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) ))))));
  }
}

void RogueCmdYield__dispatch__Visitor( RogueClassCmdYield* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdYield.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdYield__resolve__Scope( RogueClassCmdYield* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdYield.resolve(Scope)", "Cmd.rogue", 4060 );
  __trace.line = 4061;
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    __trace.line = 4062;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1033] ))));
  }
  __trace.line = 4065;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_2908_1,(scope_0->control_stack));
    RogueInt32 _auto_2909_2 = (0);
    for (;_auto_2909_2 < _auto_2908_1->count;++_auto_2909_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,control_structure_3,(((RogueClassCmdControlStructure*)(_auto_2908_1->data->objects[_auto_2909_2]))));
      __trace.line = 4066;
      control_structure_3->contains_yield = true;
    }
  }
  __trace.line = 4069;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdYield* RogueCmdYield__init_object( RogueClassCmdYield* THIS )
{
  RogueDebugTrace __trace( "CmdYield.init_object()", "Cmd.rogue", 4047 );
  return (RogueClassCmdYield*)(THIS);
}

RogueClassCmdYield* RogueCmdYield__init__Token( RogueClassCmdYield* THIS, RogueClassToken* _auto_1773_0 )
{
  RogueDebugTrace __trace( "CmdYield.init(Token)", "Cmd.rogue", 4049 );
  THIS->t = _auto_1773_0;
  __trace.line = 4051;
  return (RogueClassCmdYield*)(THIS);
}

RogueString* RogueCmdAdjust__type_name( RogueClassCmdAdjust* THIS )
{
  RogueDebugTrace __trace( "CmdAdjust.type_name()", "Cmd.rogue", 3444 );
  return (RogueString*)(Rogue_literal_strings[965]);
}

void RogueCmdAdjust__dispatch__Visitor( RogueClassCmdAdjust* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAdjust.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdAdjust__resolve__Scope( RogueClassCmdAdjust* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAdjust.resolve(Scope)", "Cmd.rogue", 3452 );
  __trace.line = 3453;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 3454;
  return (RogueClassCmd*)((call_ROGUEM93( 33, ROGUE_ARG(THIS->operand), scope_0, ROGUE_ARG(THIS->delta) )));
}

RogueClassCmdAdjust* RogueCmdAdjust__init_object( RogueClassCmdAdjust* THIS )
{
  RogueDebugTrace __trace( "CmdAdjust.init_object()", "Cmd.rogue", 3444 );
  return (RogueClassCmdAdjust*)(THIS);
}

RogueClassCmdAdjust* RogueCmdAdjust__init__Token_Cmd_Int32( RogueClassCmdAdjust* THIS, RogueClassToken* _auto_1774_0, RogueClassCmd* _auto_1775_1, RogueInt32 _auto_1776_2 )
{
  RogueDebugTrace __trace( "CmdAdjust.init(Token,Cmd,Int32)", "Cmd.rogue", 3450 );
  THIS->delta = _auto_1776_2;
  THIS->operand = _auto_1775_1;
  THIS->t = _auto_1774_0;
  __trace.line = 3452;
  return (RogueClassCmdAdjust*)(THIS);
}

RogueString* RogueCmdModifyAndAssign__type_name( RogueClassCmdModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.type_name()", "Cmd.rogue", 3551 );
  return (RogueString*)(Rogue_literal_strings[966]);
}

RogueClassCmd* RogueCmdModifyAndAssign__clone__CloneArgs( RogueClassCmdModifyAndAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.clone(CloneArgs)", "Cmd.rogue", 3560 );
  __trace.line = 3561;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG(THIS->op), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

void RogueCmdModifyAndAssign__dispatch__Visitor( RogueClassCmdModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdModifyAndAssign__resolve__Scope( RogueClassCmdModifyAndAssign* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.resolve(Scope)", "Cmd.rogue", 3563 );
  __trace.line = 3564;
  return (RogueClassCmd*)((call_ROGUEM103( 34, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->op), ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init_object( RogueClassCmdModifyAndAssign* THIS )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.init_object()", "Cmd.rogue", 3551 );
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( RogueClassCmdModifyAndAssign* THIS, RogueClassToken* _auto_1777_0, RogueClassCmd* _auto_1778_1, RogueClassTokenType* _auto_1779_2, RogueClassCmd* _auto_1780_3 )
{
  RogueDebugTrace __trace( "CmdModifyAndAssign.init(Token,Cmd,TokenType,Cmd)", "Cmd.rogue", 3558 );
  THIS->new_value = _auto_1780_3;
  THIS->op = _auto_1779_2;
  THIS->target = _auto_1778_1;
  THIS->t = _auto_1777_0;
  __trace.line = 3560;
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init( RogueCmdWhichCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueString* RogueCmdWhichCase_List__to_String( RogueCmdWhichCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_2910_2,(THIS));
    RogueInt32 _auto_2911_3 = (0);
    for (;_auto_2911_3 < _auto_2910_2->count;++_auto_2911_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,value_4,(((RogueClassCmdWhichCase*)(_auto_2910_2->data->objects[_auto_2911_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdWhichCase_List__type_name( RogueCmdWhichCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[844]);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init_object( RogueCmdWhichCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase[].init_object()", "List.rogue", 4 );
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdWhichCase*), true );
  }
  __trace.line = 16;
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__add__CmdWhichCase( RogueCmdWhichCase_List* THIS, RogueClassCmdWhichCase* value_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase[].add(CmdWhichCase)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdWhichCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueInt32 RogueCmdWhichCase_List__capacity( RogueCmdWhichCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdWhichCase[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__reserve__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdWhichCase[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdWhichCase_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__init( RogueCmdCatch_List* THIS )
{
  RogueDebugTrace __trace( "CmdCatch[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdCatch_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdCatch_List*)(THIS);
}

RogueString* RogueCmdCatch_List__to_String( RogueCmdCatch_List* THIS )
{
  RogueDebugTrace __trace( "CmdCatch[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_2943_2,(THIS));
    RogueInt32 _auto_2944_3 = (0);
    for (;_auto_2944_3 < _auto_2943_2->count;++_auto_2944_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,value_4,(((RogueClassCmdCatch*)(_auto_2943_2->data->objects[_auto_2944_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdCatch_List__type_name( RogueCmdCatch_List* THIS )
{
  RogueDebugTrace __trace( "CmdCatch[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[845]);
}

RogueCmdCatch_List* RogueCmdCatch_List__init_object( RogueCmdCatch_List* THIS )
{
  RogueDebugTrace __trace( "CmdCatch[].init_object()", "List.rogue", 4 );
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__init__Int32( RogueCmdCatch_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdCatch[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdCatch*), true );
  }
  __trace.line = 16;
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__add__CmdCatch( RogueCmdCatch_List* THIS, RogueClassCmdCatch* value_0 )
{
  RogueDebugTrace __trace( "CmdCatch[].add(CmdCatch)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdCatch_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdCatch_List*)(THIS);
}

RogueInt32 RogueCmdCatch_List__capacity( RogueCmdCatch_List* THIS )
{
  RogueDebugTrace __trace( "CmdCatch[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmdCatch_List* RogueCmdCatch_List__reserve__Int32( RogueCmdCatch_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdCatch[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdCatch_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdCatch_List*)(THIS);
}

RogueString* RogueCmdCompareLE__type_name( RogueClassCmdCompareLE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLE.type_name()", "Cmd.rogue", 3114 );
  return (RogueString*)(Rogue_literal_strings[1229]);
}

RogueClassCmd* RogueCmdCompareLE__clone__CloneArgs( RogueClassCmdCompareLE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareLE.clone(CloneArgs)", "Cmd.rogue", 3116 );
  __trace.line = 3117;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLE__combine_literal_operands__Type( RogueClassCmdCompareLE* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareLE.combine_literal_operands(Type)", "Cmd.rogue", 3119 );
  __trace.line = 3120;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3121;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value <= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3123;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value <= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3125;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareLE__dispatch__Visitor( RogueClassCmdCompareLE* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareLE.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareLE* RogueCmdCompareLE__init_object( RogueClassCmdCompareLE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLE.init_object()", "Cmd.rogue", 3114 );
  return (RogueClassCmdCompareLE*)(THIS);
}

RogueString* RogueCmdCompareLE__symbol( RogueClassCmdCompareLE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLE.symbol()", "Cmd.rogue", 3149 );
  __trace.line = 3150;
  return (RogueString*)(Rogue_literal_strings[229]);
}

RogueClassCmd* RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareLE.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3128 );
  __trace.line = 3129;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3130;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3132;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3133;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3135;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3136;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3138;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3139;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3141;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1242], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3142;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3144;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3147;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdRangeUpTo__type_name( RogueClassCmdRangeUpTo* THIS )
{
  RogueDebugTrace __trace( "CmdRangeUpTo.type_name()", "Cmd.rogue", 2526 );
  return (RogueString*)(Rogue_literal_strings[1181]);
}

RogueClassCmd* RogueCmdRangeUpTo__clone__CloneArgs( RogueClassCmdRangeUpTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdRangeUpTo.clone(CloneArgs)", "Cmd.rogue", 2528 );
  __trace.line = 2529;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeUpTo__dispatch__Visitor( RogueClassCmdRangeUpTo* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdRangeUpTo.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueClassCmdRangeUpTo* RogueCmdRangeUpTo__init_object( RogueClassCmdRangeUpTo* THIS )
{
  RogueDebugTrace __trace( "CmdRangeUpTo.init_object()", "Cmd.rogue", 2526 );
  return (RogueClassCmdRangeUpTo*)(THIS);
}

RogueString* RogueCmdRangeUpToLessThan__type_name( RogueClassCmdRangeUpToLessThan* THIS )
{
  RogueDebugTrace __trace( "CmdRangeUpToLessThan.type_name()", "Cmd.rogue", 2532 );
  return (RogueString*)(Rogue_literal_strings[1182]);
}

RogueClassCmd* RogueCmdRangeUpToLessThan__clone__CloneArgs( RogueClassCmdRangeUpToLessThan* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdRangeUpToLessThan.clone(CloneArgs)", "Cmd.rogue", 2534 );
  __trace.line = 2535;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeUpToLessThan__dispatch__Visitor( RogueClassCmdRangeUpToLessThan* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdRangeUpToLessThan.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueClassCmdRangeUpToLessThan* RogueCmdRangeUpToLessThan__init_object( RogueClassCmdRangeUpToLessThan* THIS )
{
  RogueDebugTrace __trace( "CmdRangeUpToLessThan.init_object()", "Cmd.rogue", 2532 );
  return (RogueClassCmdRangeUpToLessThan*)(THIS);
}

RogueString* RogueCmdCompareLT__type_name( RogueClassCmdCompareLT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLT.type_name()", "Cmd.rogue", 3075 );
  return (RogueString*)(Rogue_literal_strings[1230]);
}

RogueClassCmd* RogueCmdCompareLT__clone__CloneArgs( RogueClassCmdCompareLT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareLT.clone(CloneArgs)", "Cmd.rogue", 3077 );
  __trace.line = 3078;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLT__combine_literal_operands__Type( RogueClassCmdCompareLT* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareLT.combine_literal_operands(Type)", "Cmd.rogue", 3080 );
  __trace.line = 3081;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3082;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value < ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3084;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value < ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3086;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareLT__dispatch__Visitor( RogueClassCmdCompareLT* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareLT.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareLT* RogueCmdCompareLT__init_object( RogueClassCmdCompareLT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLT.init_object()", "Cmd.rogue", 3075 );
  return (RogueClassCmdCompareLT*)(THIS);
}

RogueString* RogueCmdCompareLT__symbol( RogueClassCmdCompareLT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareLT.symbol()", "Cmd.rogue", 3110 );
  __trace.line = 3111;
  return (RogueString*)(Rogue_literal_strings[230]);
}

RogueClassCmd* RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareLT.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3089 );
  __trace.line = 3090;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1242], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3091;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3093;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3094;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3096;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3097;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3099;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3100;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3102;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3103;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3105;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3108;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1242], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdCompareGE__type_name( RogueClassCmdCompareGE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGE.type_name()", "Cmd.rogue", 3192 );
  return (RogueString*)(Rogue_literal_strings[1231]);
}

RogueClassCmd* RogueCmdCompareGE__clone__CloneArgs( RogueClassCmdCompareGE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareGE.clone(CloneArgs)", "Cmd.rogue", 3194 );
  __trace.line = 3195;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGE__combine_literal_operands__Type( RogueClassCmdCompareGE* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareGE.combine_literal_operands(Type)", "Cmd.rogue", 3197 );
  __trace.line = 3198;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3199;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value >= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3201;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value >= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3203;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareGE__dispatch__Visitor( RogueClassCmdCompareGE* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareGE.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareGE* RogueCmdCompareGE__init_object( RogueClassCmdCompareGE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGE.init_object()", "Cmd.rogue", 3192 );
  return (RogueClassCmdCompareGE*)(THIS);
}

RogueString* RogueCmdCompareGE__symbol( RogueClassCmdCompareGE* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGE.symbol()", "Cmd.rogue", 3227 );
  __trace.line = 3228;
  return (RogueString*)(Rogue_literal_strings[227]);
}

RogueClassCmd* RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareGE.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3206 );
  __trace.line = 3207;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3208;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3210;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3211;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3213;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1242], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3214;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3216;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3217;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3219;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3220;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3222;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3225;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdRangeDownTo__type_name( RogueClassCmdRangeDownTo* THIS )
{
  RogueDebugTrace __trace( "CmdRangeDownTo.type_name()", "Cmd.rogue", 2538 );
  return (RogueString*)(Rogue_literal_strings[1183]);
}

RogueClassCmd* RogueCmdRangeDownTo__clone__CloneArgs( RogueClassCmdRangeDownTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdRangeDownTo.clone(CloneArgs)", "Cmd.rogue", 2540 );
  __trace.line = 2541;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

void RogueCmdRangeDownTo__dispatch__Visitor( RogueClassCmdRangeDownTo* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdRangeDownTo.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) );
}

RogueClassCmdRangeDownTo* RogueCmdRangeDownTo__init_object( RogueClassCmdRangeDownTo* THIS )
{
  RogueDebugTrace __trace( "CmdRangeDownTo.init_object()", "Cmd.rogue", 2538 );
  return (RogueClassCmdRangeDownTo*)(THIS);
}

RogueInt32 RogueCmdRangeDownTo__default_step_size( RogueClassCmdRangeDownTo* THIS )
{
  RogueDebugTrace __trace( "CmdRangeDownTo.default_step_size()", "Cmd.rogue", 2543 );
  __trace.line = 2544;
  return (RogueInt32)(-1);
}

RogueString* RogueCmdLogicalXor__type_name( RogueClassCmdLogicalXor* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalXor.type_name()", "Cmd.rogue", 2941 );
  return (RogueString*)(Rogue_literal_strings[1253]);
}

RogueClassCmd* RogueCmdLogicalXor__clone__CloneArgs( RogueClassCmdLogicalXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLogicalXor.clone(CloneArgs)", "Cmd.rogue", 2943 );
  __trace.line = 2944;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalXor__dispatch__Visitor( RogueClassCmdLogicalXor* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLogicalXor.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdLogicalXor* RogueCmdLogicalXor__init_object( RogueClassCmdLogicalXor* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalXor.init_object()", "Cmd.rogue", 2941 );
  return (RogueClassCmdLogicalXor*)(THIS);
}

RogueString* RogueCmdLogicalXor__symbol( RogueClassCmdLogicalXor* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalXor.symbol()", "Cmd.rogue", 2949 );
  __trace.line = 2950;
  return (RogueString*)(Rogue_literal_strings[205]);
}

RogueString* RogueCmdLogicalXor__cpp_symbol( RogueClassCmdLogicalXor* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalXor.cpp_symbol()", "CPPWriter.rogue", 2532 );
  __trace.line = 2533;
  return (RogueString*)(Rogue_literal_strings[214]);
}

RogueLogical RogueCmdLogicalXor__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalXor* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  RogueDebugTrace __trace( "CmdLogicalXor.combine_literal_operands(Logical,Logical)", "Cmd.rogue", 2946 );
  __trace.line = 2947;
  return (RogueLogical)((a_0 ^ b_1));
}

RogueString* RogueCmdBinaryLogical__type_name( RogueClassCmdBinaryLogical* THIS )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.type_name()", "Cmd.rogue", 2888 );
  return (RogueString*)(Rogue_literal_strings[1202]);
}

void RogueCmdBinaryLogical__dispatch__Visitor( RogueClassCmdBinaryLogical* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdBinaryLogical__resolve__Scope( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.resolve(Scope)", "Cmd.rogue", 2893 );
  __trace.line = 2894;
  THIS->left = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->left), scope_0 ))), scope_0 )));
  __trace.line = 2895;
  THIS->right = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->right), scope_0 ))), scope_0 )));
  __trace.line = 2896;
  if (((call_ROGUEM87( 24, ROGUE_ARG(THIS->left) )) && (call_ROGUEM87( 24, ROGUE_ARG(THIS->right) ))))
  {
    __trace.line = 2897;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM953( 47, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value) ))) ))))));
  }
  __trace.line = 2905;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdBinaryLogical__type( RogueClassCmdBinaryLogical* THIS )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.type()", "Cmd.rogue", 2910 );
  __trace.line = 2911;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdBinaryLogical* RogueCmdBinaryLogical__init_object( RogueClassCmdBinaryLogical* THIS )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.init_object()", "Cmd.rogue", 2888 );
  return (RogueClassCmdBinaryLogical*)(THIS);
}

RogueClassCmd* RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.resolve_operator_method(Scope,Type,Type)", "Cmd.rogue", 2907 );
  __trace.line = 2908;
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueLogical RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical( RogueClassCmdBinaryLogical* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  RogueDebugTrace __trace( "CmdBinaryLogical.combine_literal_operands(Logical,Logical)", "Cmd.rogue", 2890 );
  __trace.line = 2891;
  ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[340] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM950( 6, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1204] )))) )))) ))));
}

RogueString* RogueCmdLogicalOr__type_name( RogueClassCmdLogicalOr* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalOr.type_name()", "Cmd.rogue", 2927 );
  return (RogueString*)(Rogue_literal_strings[1254]);
}

RogueClassCmd* RogueCmdLogicalOr__clone__CloneArgs( RogueClassCmdLogicalOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLogicalOr.clone(CloneArgs)", "Cmd.rogue", 2929 );
  __trace.line = 2930;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalOr__dispatch__Visitor( RogueClassCmdLogicalOr* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLogicalOr.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdLogicalOr* RogueCmdLogicalOr__init_object( RogueClassCmdLogicalOr* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalOr.init_object()", "Cmd.rogue", 2927 );
  return (RogueClassCmdLogicalOr*)(THIS);
}

RogueString* RogueCmdLogicalOr__symbol( RogueClassCmdLogicalOr* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalOr.symbol()", "Cmd.rogue", 2935 );
  __trace.line = 2936;
  return (RogueString*)(Rogue_literal_strings[200]);
}

RogueString* RogueCmdLogicalOr__cpp_symbol( RogueClassCmdLogicalOr* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalOr.cpp_symbol()", "CPPWriter.rogue", 2525 );
  __trace.line = 2526;
  return (RogueString*)(Rogue_literal_strings[256]);
}

RogueLogical RogueCmdLogicalOr__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalOr* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  RogueDebugTrace __trace( "CmdLogicalOr.combine_literal_operands(Logical,Logical)", "Cmd.rogue", 2932 );
  __trace.line = 2933;
  return (RogueLogical)((a_0 || b_1));
}

RogueString* RogueCmdLogicalAnd__type_name( RogueClassCmdLogicalAnd* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.type_name()", "Cmd.rogue", 2914 );
  return (RogueString*)(Rogue_literal_strings[1255]);
}

RogueClassCmd* RogueCmdLogicalAnd__clone__CloneArgs( RogueClassCmdLogicalAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.clone(CloneArgs)", "Cmd.rogue", 2916 );
  __trace.line = 2917;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalAnd__dispatch__Visitor( RogueClassCmdLogicalAnd* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdLogicalAnd* RogueCmdLogicalAnd__init_object( RogueClassCmdLogicalAnd* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.init_object()", "Cmd.rogue", 2914 );
  return (RogueClassCmdLogicalAnd*)(THIS);
}

RogueString* RogueCmdLogicalAnd__symbol( RogueClassCmdLogicalAnd* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.symbol()", "Cmd.rogue", 2922 );
  __trace.line = 2923;
  return (RogueString*)(Rogue_literal_strings[190]);
}

RogueString* RogueCmdLogicalAnd__cpp_symbol( RogueClassCmdLogicalAnd* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.cpp_symbol()", "CPPWriter.rogue", 2518 );
  __trace.line = 2519;
  return (RogueString*)(Rogue_literal_strings[208]);
}

RogueLogical RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalAnd* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  RogueDebugTrace __trace( "CmdLogicalAnd.combine_literal_operands(Logical,Logical)", "Cmd.rogue", 2919 );
  __trace.line = 2920;
  return (RogueLogical)((a_0 && b_1));
}

RogueString* RogueCmdCompareEQ__type_name( RogueClassCmdCompareEQ* THIS )
{
  RogueDebugTrace __trace( "CmdCompareEQ.type_name()", "Cmd.rogue", 2994 );
  return (RogueString*)(Rogue_literal_strings[1232]);
}

RogueClassCmd* RogueCmdCompareEQ__clone__CloneArgs( RogueClassCmdCompareEQ* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareEQ.clone(CloneArgs)", "Cmd.rogue", 2996 );
  __trace.line = 2997;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareEQ__combine_literal_operands__Type( RogueClassCmdCompareEQ* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareEQ.combine_literal_operands(Type)", "Cmd.rogue", 2999 );
  __trace.line = 3000;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3001;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value == ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3003;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value == ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3005;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareEQ__dispatch__Visitor( RogueClassCmdCompareEQ* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareEQ.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareEQ* RogueCmdCompareEQ__init_object( RogueClassCmdCompareEQ* THIS )
{
  RogueDebugTrace __trace( "CmdCompareEQ.init_object()", "Cmd.rogue", 2994 );
  return (RogueClassCmdCompareEQ*)(THIS);
}

RogueLogical RogueCmdCompareEQ__requires_parens( RogueClassCmdCompareEQ* THIS )
{
  RogueDebugTrace __trace( "CmdCompareEQ.requires_parens()", "Cmd.rogue", 3008 );
  __trace.line = 3009;
  return (RogueLogical)(false);
}

RogueString* RogueCmdCompareEQ__symbol( RogueClassCmdCompareEQ* THIS )
{
  RogueDebugTrace __trace( "CmdCompareEQ.symbol()", "Cmd.rogue", 3032 );
  __trace.line = 3033;
  return (RogueString*)(Rogue_literal_strings[223]);
}

RogueClassCmd* RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareEQ* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareEQ.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3011 );
  __trace.line = 3012;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3013;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3015;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3016;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3018;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3019;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3021;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3022;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3024;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1236], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3025;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3027;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3030;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdCompareIs__type_name( RogueClassCmdCompareIs* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIs.type_name()", "Cmd.rogue", 3231 );
  return (RogueString*)(Rogue_literal_strings[1233]);
}

RogueClassCmd* RogueCmdCompareIs__clone__CloneArgs( RogueClassCmdCompareIs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareIs.clone(CloneArgs)", "Cmd.rogue", 3233 );
  __trace.line = 3234;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdCompareIs__dispatch__Visitor( RogueClassCmdCompareIs* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareIs.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdCompareIs__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCompareIs.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2541 );
  __trace.line = 2542;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1208] );
  __trace.line = 2543;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->left), writer_0, false );
  __trace.line = 2544;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1209] );
  __trace.line = 2545;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->right), writer_0, false );
  __trace.line = 2546;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdCompareIs* RogueCmdCompareIs__init_object( RogueClassCmdCompareIs* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIs.init_object()", "Cmd.rogue", 3231 );
  return (RogueClassCmdCompareIs*)(THIS);
}

RogueClassCmd* RogueCmdCompareIs__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIs* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdCompareIs.resolve_for_types(Scope,Type,Type)", "Cmd.rogue", 3236 );
  __trace.line = 3237;
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    __trace.line = 3238;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    __trace.line = 3241;
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    __trace.line = 3244;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1226] ))));
  }
  else
  {
    __trace.line = 3247;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
}

RogueString* RogueCmdCompareIs__symbol( RogueClassCmdCompareIs* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIs.symbol()", "Cmd.rogue", 3251 );
  __trace.line = 3252;
  return (RogueString*)(Rogue_literal_strings[164]);
}

RogueString* RogueCmdCompareIs__cpp_symbol( RogueClassCmdCompareIs* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIs.cpp_symbol()", "CPPWriter.rogue", 2538 );
  __trace.line = 2539;
  return (RogueString*)(Rogue_literal_strings[223]);
}

RogueString* RogueCmdCompareIsNot__type_name( RogueClassCmdCompareIsNot* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.type_name()", "Cmd.rogue", 3255 );
  return (RogueString*)(Rogue_literal_strings[1234]);
}

RogueClassCmd* RogueCmdCompareIsNot__clone__CloneArgs( RogueClassCmdCompareIsNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.clone(CloneArgs)", "Cmd.rogue", 3257 );
  __trace.line = 3258;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

void RogueCmdCompareIsNot__dispatch__Visitor( RogueClassCmdCompareIsNot* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

void RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIsNot* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2554 );
  __trace.line = 2555;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1208] );
  __trace.line = 2556;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->left), writer_0, false );
  __trace.line = 2557;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1210] );
  __trace.line = 2558;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->right), writer_0, false );
  __trace.line = 2559;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdCompareIsNot* RogueCmdCompareIsNot__init_object( RogueClassCmdCompareIsNot* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.init_object()", "Cmd.rogue", 3255 );
  return (RogueClassCmdCompareIsNot*)(THIS);
}

RogueClassCmd* RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIsNot* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.resolve_for_types(Scope,Type,Type)", "Cmd.rogue", 3260 );
  __trace.line = 3261;
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    __trace.line = 3262;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    __trace.line = 3265;
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    __trace.line = 3268;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1226] ))));
  }
  else
  {
    __trace.line = 3271;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1227] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[388] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
}

RogueString* RogueCmdCompareIsNot__symbol( RogueClassCmdCompareIsNot* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.symbol()", "Cmd.rogue", 3275 );
  __trace.line = 3276;
  return (RogueString*)(Rogue_literal_strings[165]);
}

RogueString* RogueCmdCompareIsNot__cpp_symbol( RogueClassCmdCompareIsNot* THIS )
{
  RogueDebugTrace __trace( "CmdCompareIsNot.cpp_symbol()", "CPPWriter.rogue", 2551 );
  __trace.line = 2552;
  return (RogueString*)(Rogue_literal_strings[233]);
}

RogueString* RogueCmdCompareGT__type_name( RogueClassCmdCompareGT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGT.type_name()", "Cmd.rogue", 3153 );
  return (RogueString*)(Rogue_literal_strings[1235]);
}

RogueClassCmd* RogueCmdCompareGT__clone__CloneArgs( RogueClassCmdCompareGT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCompareGT.clone(CloneArgs)", "Cmd.rogue", 3155 );
  __trace.line = 3156;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGT__combine_literal_operands__Type( RogueClassCmdCompareGT* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdCompareGT.combine_literal_operands(Type)", "Cmd.rogue", 3158 );
  __trace.line = 3159;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 3160;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value > ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3162;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value > ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    __trace.line = 3164;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdCompareGT__dispatch__Visitor( RogueClassCmdCompareGT* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCompareGT.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdCompareGT* RogueCmdCompareGT__init_object( RogueClassCmdCompareGT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGT.init_object()", "Cmd.rogue", 3153 );
  return (RogueClassCmdCompareGT*)(THIS);
}

RogueString* RogueCmdCompareGT__symbol( RogueClassCmdCompareGT* THIS )
{
  RogueDebugTrace __trace( "CmdCompareGT.symbol()", "Cmd.rogue", 3188 );
  __trace.line = 3189;
  return (RogueString*)(Rogue_literal_strings[228]);
}

RogueClassCmd* RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  RogueDebugTrace __trace( "CmdCompareGT.resolve_for_reference(Scope,Type,Type,Logical)", "Cmd.rogue", 3167 );
  __trace.line = 3168;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false )))));
  __trace.line = 3169;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3171;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1237], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3172;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((call_ROGUEM517( 31, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  __trace.line = 3174;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1239], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, false ))));
  __trace.line = 3175;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3177;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1242], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3178;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  __trace.line = 3180;
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[1241], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, false ))));
  __trace.line = 3181;
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  __trace.line = 3183;
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  __trace.line = 3186;
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Logical( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1240], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, false ))));
}

RogueString* RogueCmdInstanceOf__type_name( RogueClassCmdInstanceOf* THIS )
{
  RogueDebugTrace __trace( "CmdInstanceOf.type_name()", "Cmd.rogue", 3931 );
  return (RogueString*)(Rogue_literal_strings[1223]);
}

RogueClassCmd* RogueCmdInstanceOf__clone__CloneArgs( RogueClassCmdInstanceOf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdInstanceOf.clone(CloneArgs)", "Cmd.rogue", 3933 );
  __trace.line = 3934;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdInstanceOf__dispatch__Visitor( RogueClassCmdInstanceOf* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdInstanceOf.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdInstanceOf__resolve__Scope( RogueClassCmdInstanceOf* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdInstanceOf.resolve(Scope)", "Cmd.rogue", 3936 );
  __trace.line = 3937;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 3938;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  __trace.line = 3940;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInstanceOf__type( RogueClassCmdInstanceOf* THIS )
{
  RogueDebugTrace __trace( "CmdInstanceOf.type()", "Cmd.rogue", 3942 );
  __trace.line = 3943;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdInstanceOf__write_cpp__CPPWriter_Logical( RogueClassCmdInstanceOf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdInstanceOf.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2799 );
  __trace.line = 2800;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1119] );
  __trace.line = 2801;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
  __trace.line = 2802;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[217] );
  __trace.line = 2803;
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  __trace.line = 2804;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
}

RogueClassCmdInstanceOf* RogueCmdInstanceOf__init_object( RogueClassCmdInstanceOf* THIS )
{
  RogueDebugTrace __trace( "CmdInstanceOf.init_object()", "Cmd.rogue", 3931 );
  return (RogueClassCmdInstanceOf*)(THIS);
}

RogueString* RogueCmdLogicalNot__type_name( RogueClassCmdLogicalNot* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalNot.type_name()", "Cmd.rogue", 2624 );
  return (RogueString*)(Rogue_literal_strings[1185]);
}

RogueClassCmd* RogueCmdLogicalNot__clone__CloneArgs( RogueClassCmdLogicalNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLogicalNot.clone(CloneArgs)", "Cmd.rogue", 2626 );
  __trace.line = 2627;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdLogicalNot__dispatch__Visitor( RogueClassCmdLogicalNot* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLogicalNot.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassCmd* RogueCmdLogicalNot__resolve__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLogicalNot.resolve(Scope)", "Cmd.rogue", 2632 );
  __trace.line = 2633;
  THIS->operand = ((RogueCmd__require_logical__Scope( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ))), scope_0 )));
  __trace.line = 2634;
  if ((call_ROGUEM87( 24, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)(((RogueCmdLogicalNot__resolve_for_literal_operand__Scope( ROGUE_ARG(THIS), scope_0 ))));
  }
  else
  {
    __trace.line = 2635;
    return (RogueClassCmd*)(((RogueCmdUnary__resolve_for_operand_type__Scope_Type( ROGUE_ARG(((RogueClassCmdUnary*)THIS)), scope_0, ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->operand) ))) ))));
  }
}

RogueClassType* Rogue_CmdLogicalNot__type( RogueClassCmdLogicalNot* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalNot.type()", "Cmd.rogue", 2645 );
  __trace.line = 2646;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdLogicalNot* RogueCmdLogicalNot__init_object( RogueClassCmdLogicalNot* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalNot.init_object()", "Cmd.rogue", 2624 );
  return (RogueClassCmdLogicalNot*)(THIS);
}

RogueString* RogueCmdLogicalNot__prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalNot.prefix_symbol()", "Cmd.rogue", 2629 );
  __trace.line = 2630;
  return (RogueString*)(Rogue_literal_strings[1188]);
}

RogueClassCmd* RogueCmdLogicalNot__resolve_for_literal_operand__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLogicalNot.resolve_for_literal_operand(Scope)", "Cmd.rogue", 2637 );
  __trace.line = 2638;
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    __trace.line = 2639;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    __trace.line = 2641;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  __trace.line = 2643;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalNot__cpp_prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  RogueDebugTrace __trace( "CmdLogicalNot.cpp_prefix_symbol()", "CPPWriter.rogue", 2471 );
  __trace.line = 2472;
  return (RogueString*)(Rogue_literal_strings[225]);
}

RogueString* RogueCmdBitwiseShiftLeft__type_name( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.type_name()", "Cmd.rogue", 3363 );
  return (RogueString*)(Rogue_literal_strings[1246]);
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__clone__CloneArgs( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.clone(CloneArgs)", "Cmd.rogue", 3365 );
  __trace.line = 3366;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__combine_literal_operands__Type( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.combine_literal_operands(Type)", "Cmd.rogue", 3368 );
  __trace.line = 3369;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3370;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 3372;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftLeft__dispatch__Visitor( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseShiftLeft* RogueCmdBitwiseShiftLeft__init_object( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.init_object()", "Cmd.rogue", 3363 );
  return (RogueClassCmdBitwiseShiftLeft*)(THIS);
}

RogueString* RogueCmdBitwiseShiftLeft__symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.symbol()", "Cmd.rogue", 3375 );
  __trace.line = 3376;
  return (RogueString*)(Rogue_literal_strings[244]);
}

RogueString* RogueCmdBitwiseShiftLeft__cpp_symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftLeft.cpp_symbol()", "CPPWriter.rogue", 2570 );
  __trace.line = 2571;
  return (RogueString*)(Rogue_literal_strings[236]);
}

RogueString* RogueCmdBitwiseShiftRight__type_name( RogueClassCmdBitwiseShiftRight* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.type_name()", "Cmd.rogue", 3379 );
  return (RogueString*)(Rogue_literal_strings[1247]);
}

RogueClassCmd* RogueCmdBitwiseShiftRight__clone__CloneArgs( RogueClassCmdBitwiseShiftRight* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.clone(CloneArgs)", "Cmd.rogue", 3381 );
  __trace.line = 3382;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRight__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRight* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.combine_literal_operands(Type)", "Cmd.rogue", 3384 );
  __trace.line = 3385;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3386;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 3388;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftRight__dispatch__Visitor( RogueClassCmdBitwiseShiftRight* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmd* RogueCmdBitwiseShiftRight__resolve__Scope( RogueClassCmdBitwiseShiftRight* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.resolve(Scope)", "Cmd.rogue", 3391 );
  __trace.line = 3392;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  __trace.line = 3393;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBitwiseShiftRight*,cmd_shift_2,(((RogueClassCmdBitwiseShiftRight*)(RogueObject_as(result_1,RogueTypeCmdBitwiseShiftRight)))));
  __trace.line = 3394;
  if (!(!!(cmd_shift_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  __trace.line = 3396;
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[770] )))))), Rogue_literal_strings[1205], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_shift_2->left), ROGUE_ARG(cmd_shift_2->right) )))) )))), scope_0 ))));
}

RogueClassCmdBitwiseShiftRight* RogueCmdBitwiseShiftRight__init_object( RogueClassCmdBitwiseShiftRight* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.init_object()", "Cmd.rogue", 3379 );
  return (RogueClassCmdBitwiseShiftRight*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRight__symbol( RogueClassCmdBitwiseShiftRight* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRight.symbol()", "Cmd.rogue", 3398 );
  __trace.line = 3399;
  return (RogueString*)(Rogue_literal_strings[245]);
}

RogueString* RogueCmdBitwiseShiftRightX__type_name( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.type_name()", "Cmd.rogue", 3402 );
  return (RogueString*)(Rogue_literal_strings[1248]);
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__clone__CloneArgs( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.clone(CloneArgs)", "Cmd.rogue", 3404 );
  __trace.line = 3405;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassType* common_type_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.combine_literal_operands(Type)", "Cmd.rogue", 3407 );
  __trace.line = 3408;
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 3409;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    __trace.line = 3411;
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

void RogueCmdBitwiseShiftRightX__dispatch__Visitor( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) );
}

RogueClassCmdBitwiseShiftRightX* RogueCmdBitwiseShiftRightX__init_object( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.init_object()", "Cmd.rogue", 3402 );
  return (RogueClassCmdBitwiseShiftRightX*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRightX__symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.symbol()", "Cmd.rogue", 3414 );
  __trace.line = 3415;
  return (RogueString*)(Rogue_literal_strings[246]);
}

RogueString* RogueCmdBitwiseShiftRightX__cpp_symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseShiftRightX.cpp_symbol()", "CPPWriter.rogue", 2593 );
  __trace.line = 2594;
  return (RogueString*)(Rogue_literal_strings[145]);
}

RogueString* RogueCmdNegate__type_name( RogueClassCmdNegate* THIS )
{
  RogueDebugTrace __trace( "CmdNegate.type_name()", "Cmd.rogue", 2651 );
  return (RogueString*)(Rogue_literal_strings[1186]);
}

RogueClassCmd* RogueCmdNegate__clone__CloneArgs( RogueClassCmdNegate* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdNegate.clone(CloneArgs)", "Cmd.rogue", 2653 );
  __trace.line = 2654;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdNegate__dispatch__Visitor( RogueClassCmdNegate* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdNegate.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassType* RogueCmdNegate__implicit_type__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNegate.implicit_type(Scope)", "Cmd.rogue", 2659 );
  __trace.line = 2660;
  return (RogueClassType*)((call_ROGUEM101( 23, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueClassCmdNegate* RogueCmdNegate__init_object( RogueClassCmdNegate* THIS )
{
  RogueDebugTrace __trace( "CmdNegate.init_object()", "Cmd.rogue", 2651 );
  return (RogueClassCmdNegate*)(THIS);
}

RogueString* RogueCmdNegate__prefix_symbol( RogueClassCmdNegate* THIS )
{
  RogueDebugTrace __trace( "CmdNegate.prefix_symbol()", "Cmd.rogue", 2662 );
  __trace.line = 2663;
  return (RogueString*)(Rogue_literal_strings[1189]);
}

RogueString* RogueCmdNegate__fn_name( RogueClassCmdNegate* THIS )
{
  RogueDebugTrace __trace( "CmdNegate.fn_name()", "Cmd.rogue", 2656 );
  __trace.line = 2657;
  return (RogueString*)(Rogue_literal_strings[1191]);
}

RogueClassCmd* RogueCmdNegate__resolve_for_literal_operand__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdNegate.resolve_for_literal_operand(Scope)", "Cmd.rogue", 2665 );
  __trace.line = 2666;
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    __trace.line = 2667;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    __trace.line = 2669;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  __trace.line = 2671;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdNegate__suffix_symbol( RogueClassCmdNegate* THIS )
{
  RogueDebugTrace __trace( "CmdNegate.suffix_symbol()", "Cmd.rogue", 2673 );
  __trace.line = 2674;
  return (RogueString*)(Rogue_literal_strings[34]);
}

RogueString* RogueCmdBitwiseNot__type_name( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.type_name()", "Cmd.rogue", 3419 );
  return (RogueString*)(Rogue_literal_strings[1187]);
}

RogueClassCmd* RogueCmdBitwiseNot__clone__CloneArgs( RogueClassCmdBitwiseNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.clone(CloneArgs)", "Cmd.rogue", 3421 );
  __trace.line = 3422;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

void RogueCmdBitwiseNot__dispatch__Visitor( RogueClassCmdBitwiseNot* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) );
}

RogueClassType* Rogue_CmdBitwiseNot__type( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.type()", "Cmd.rogue", 3437 );
  __trace.line = 3438;
  return (RogueClassType*)((call_ROGUEM90( 36, ROGUE_ARG(THIS->operand) )));
}

RogueClassCmdBitwiseNot* RogueCmdBitwiseNot__init_object( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.init_object()", "Cmd.rogue", 3419 );
  return (RogueClassCmdBitwiseNot*)(THIS);
}

RogueString* RogueCmdBitwiseNot__prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.prefix_symbol()", "Cmd.rogue", 3427 );
  __trace.line = 3428;
  return (RogueString*)(Rogue_literal_strings[225]);
}

RogueString* RogueCmdBitwiseNot__fn_name( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.fn_name()", "Cmd.rogue", 3424 );
  __trace.line = 3425;
  return (RogueString*)(Rogue_literal_strings[1192]);
}

RogueClassCmd* RogueCmdBitwiseNot__resolve_for_literal_operand__Scope( RogueClassCmdBitwiseNot* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.resolve_for_literal_operand(Scope)", "Cmd.rogue", 3430 );
  __trace.line = 3431;
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    __trace.line = 3432;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(~(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  __trace.line = 3435;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdBitwiseNot__cpp_prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  RogueDebugTrace __trace( "CmdBitwiseNot.cpp_prefix_symbol()", "CPPWriter.rogue", 2600 );
  __trace.line = 2601;
  return (RogueString*)(Rogue_literal_strings[248]);
}

RogueString* RogueCmdListConvert__type_name( RogueClassCmdListConvert* THIS )
{
  RogueDebugTrace __trace( "CmdListConvert.type_name()", "Cmd.rogue", 4598 );
  return (RogueString*)(Rogue_literal_strings[967]);
}

RogueClassCmdListConvert* RogueCmdListConvert__clone__CloneArgs( RogueClassCmdListConvert* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdListConvert.clone(CloneArgs)", "Cmd.rogue", 4600 );
  __trace.line = 4601;
  return (RogueClassCmdListConvert*)(((RogueCmdListConvert__init__Token_Cmd_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdListConvert*,ROGUE_CREATE_OBJECT(CmdListConvert))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->list), clone_args_0 ))), ROGUE_ARG(THIS->_to_type), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->convert_fn), clone_args_0 ))) ))));
}

void RogueCmdListConvert__dispatch__Visitor( RogueClassCmdListConvert* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdListConvert.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassType* RogueCmdListConvert__implicit_type__Scope( RogueClassCmdListConvert* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdListConvert.implicit_type(Scope)", "Cmd.rogue", 4603 );
  __trace.line = 4604;
  return (RogueClassType*)(THIS->_to_type);
}

RogueClassCmd* RogueCmdListConvert__resolve__Scope( RogueClassCmdListConvert* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdListConvert.resolve(Scope)", "Cmd.rogue", 4606 );
  __trace.line = 4607;
  THIS->list = (call_ROGUEM81( 31, ROGUE_ARG(THIS->list), scope_0 ));
  __trace.line = 4608;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,list_type_1,(((RogueType__organize__Scope( ROGUE_ARG((call_ROGUEM90( 28, ROGUE_ARG(THIS->list) ))), scope_0 )))));
  __trace.line = 4609;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_to_type), scope_0 );
  __trace.line = 4610;
  if (!(list_type_1->is_list))
  {
    __trace.line = 4611;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1035] ))));
  }
  __trace.line = 4613;
  if (THIS->_to_type->is_list)
  {
    __trace.line = 4614;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1036] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(list_type_1->_element_type))) )))) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_to_type->_element_type))) )))) )))), Rogue_literal_strings[145] )))) )))) )))))), Rogue_literal_strings[1037], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->convert_fn) )))) )))), scope_0 ))));
  }
  else
  {
    __trace.line = 4617;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1038] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(list_type_1->_element_type))) )))) )))), Rogue_literal_strings[217] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_to_type))) )))) )))), Rogue_literal_strings[145] )))) )))) )))))), Rogue_literal_strings[1037], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->convert_fn) )))) )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdListConvert__type( RogueClassCmdListConvert* THIS )
{
  RogueDebugTrace __trace( "CmdListConvert.type()", "Cmd.rogue", 4621 );
  __trace.line = 4622;
  return (RogueClassType*)(THIS->_to_type);
}

RogueClassCmdListConvert* RogueCmdListConvert__init_object( RogueClassCmdListConvert* THIS )
{
  RogueDebugTrace __trace( "CmdListConvert.init_object()", "Cmd.rogue", 4598 );
  return (RogueClassCmdListConvert*)(THIS);
}

RogueClassCmdListConvert* RogueCmdListConvert__init__Token_Cmd_Type_Cmd( RogueClassCmdListConvert* THIS, RogueClassToken* _auto_1801_0, RogueClassCmd* _auto_1802_1, RogueClassType* _auto_1803_2, RogueClassCmd* _auto_1804_3 )
{
  RogueDebugTrace __trace( "CmdListConvert.init(Token,Cmd,Type,Cmd)", "Cmd.rogue", 4598 );
  THIS->convert_fn = _auto_1804_3;
  THIS->_to_type = _auto_1803_2;
  THIS->list = _auto_1802_1;
  THIS->t = _auto_1801_0;
  return (RogueClassCmdListConvert*)(THIS);
}

RogueString* RogueCmdConvertToType__type_name( RogueClassCmdConvertToType* THIS )
{
  RogueDebugTrace __trace( "CmdConvertToType.type_name()", "Cmd.rogue", 3888 );
  return (RogueString*)(Rogue_literal_strings[1224]);
}

RogueClassCmd* RogueCmdConvertToType__clone__CloneArgs( RogueClassCmdConvertToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdConvertToType.clone(CloneArgs)", "Cmd.rogue", 3890 );
  __trace.line = 3891;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdConvertToType__dispatch__Visitor( RogueClassCmdConvertToType* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdConvertToType.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdConvertToType__resolve__Scope( RogueClassCmdConvertToType* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdConvertToType.resolve(Scope)", "Cmd.rogue", 3893 );
  __trace.line = 3894;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 3895;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,operand_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->operand) ))));
  __trace.line = 3896;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  __trace.line = 3897;
  if (((void*)operand_type_1) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  __trace.line = 3899;
  if ((((RogueType__is_primitive( operand_type_1 ))) && ((RogueType__is_primitive( ROGUE_ARG(THIS->_target_type) )))))
  {
    __trace.line = 3900;
    return (RogueClassCmd*)(((RogueCmdConvertToPrimitiveType__resolve__Scope( ROGUE_ARG(((RogueClassCmdConvertToPrimitiveType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToPrimitiveType*,ROGUE_CREATE_OBJECT(CmdConvertToPrimitiveType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(THIS->_target_type) )))))), scope_0 ))));
  }
  else
  {
    __trace.line = 3902;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[352], ROGUE_ARG(THIS->_target_type->name) )))) )))), scope_0 ))));
  }
}

RogueClassCmdConvertToType* RogueCmdConvertToType__init_object( RogueClassCmdConvertToType* THIS )
{
  RogueDebugTrace __trace( "CmdConvertToType.init_object()", "Cmd.rogue", 3888 );
  return (RogueClassCmdConvertToType*)(THIS);
}

RogueString* RogueCmdCreateCallback__type_name( RogueClassCmdCreateCallback* THIS )
{
  RogueDebugTrace __trace( "CmdCreateCallback.type_name()", "Cmd.rogue", 4110 );
  return (RogueString*)(Rogue_literal_strings[968]);
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__clone__CloneArgs( RogueClassCmdCreateCallback* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateCallback.clone(CloneArgs)", "Cmd.rogue", 4112 );
  __trace.line = 4113;
  return (RogueClassCmdCreateCallback*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS->_return_type) ))));
}

void RogueCmdCreateCallback__dispatch__Visitor( RogueClassCmdCreateCallback* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateCallback.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdCreateCallback__resolve__Scope( RogueClassCmdCreateCallback* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateCallback.resolve(Scope)", "Cmd.rogue", 4115 );
  __trace.line = 4116;
  if ((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[351] ))) && !!(THIS->_return_type)))
  {
    THIS->name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[352], ROGUE_ARG(THIS->_return_type->name) )));
  }
  __trace.line = 4118;
  THIS->context = (call_ROGUEM81( 31, ROGUE_ARG(THIS->context), scope_0 ));
  __trace.line = 4119;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((call_ROGUEM90( 28, ROGUE_ARG(THIS->context) ))));
  __trace.line = 4120;
  RogueType__organize__Scope( context_type_1, scope_0 );
  __trace.line = 4122;
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueType__find_method__String( context_type_1, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature) )))) )))));
  __trace.line = 4123;
  if (!(!!(m_2)))
  {
    __trace.line = 4124;
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,methods_3,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->method_lookup_by_name), ROGUE_ARG(THIS->name) )))));
    __trace.line = 4125;
    if (!(!!(methods_3)))
    {
      methods_3 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->global_method_lookup_by_name), ROGUE_ARG(THIS->name) ))));
    }
    __trace.line = 4126;
    if (!(!!(methods_3)))
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1039] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1040] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(context_type_1->name) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
    }
    __trace.line = 4127;
    if (methods_3->count != 1)
    {
      ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1041] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1042] )))) )))) ))));
    }
    __trace.line = 4128;
    m_2 = ((RogueClassMethod*)((RogueClassMethod*)(methods_3->data->objects[0])));
  }
  __trace.line = 4131;
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_4,0);
  __trace.line = 4132;
  if (!!(m_2->parameters->count))
  {
    __trace.line = 4133;
    parameter_types_4 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    __trace.line = 4134;
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2976_13,(m_2->parameters));
      RogueInt32 _auto_2977_14 = (0);
      for (;_auto_2977_14 < _auto_2976_13->count;++_auto_2977_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_15,(((RogueClassLocal*)(_auto_2976_13->data->objects[_auto_2977_14]))));
        RogueType_List__add__Type( parameter_types_4, ROGUE_ARG(p_15->_type) );
      }
    }
  }
  __trace.line = 4137;
  ROGUE_DEF_LOCAL_REF(RogueString*,callback_type_name_5,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(context_type_1->name), Rogue_literal_strings[96] )))), ROGUE_ARG(THIS->name) )))), ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), parameter_types_4 )))) )))));
  __trace.line = 4138;
  ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_6,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), callback_type_name_5 )))));
  __trace.line = 4140;
  if (!(callback_type_6->defined))
  {
    __trace.line = 4141;
    callback_type_6->defined = true;
    __trace.line = 4142;
    RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 0 );
    __trace.line = 4144;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_4, ROGUE_ARG(m_2->_return_type) )))));
    __trace.line = 4145;
    RogueType_List__add__Type( ROGUE_ARG(callback_type_6->base_types), base_type_7 );
    __trace.line = 4147;
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_8,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[428] )))));
    __trace.line = 4148;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    __trace.line = 4149;
    if (!!(parameter_types_4))
    {
      __trace.line = 4150;
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_2978_16,(parameter_types_4));
        RogueInt32 i_17 = (0);
        for (;i_17 < _auto_2978_16->count;++i_17)
        {
          __trace.line = 4151;
          ROGUE_DEF_LOCAL_REF(RogueString*,param_name_10,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[429], ROGUE_ARG((i_17 + 1)) )))));
          __trace.line = 4152;
          RogueMethod__add_parameter__Token_String_Type( m_call_8, ROGUE_ARG(THIS->t), param_name_10, ROGUE_ARG(((RogueClassType*)(parameter_types_4->data->objects[i_17]))) );
          __trace.line = 4153;
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_9), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), param_name_10 )))))) );
        }
      }
    }
    __trace.line = 4157;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,0);
    __trace.line = 4158;
    if (((RogueMethod__is_global( m_2 ))))
    {
      __trace.line = 4159;
      RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 1024 );
      __trace.line = 4160;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(context_type_1->name) )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    else
    {
      __trace.line = 4162;
      RogueType__add_property__Token_String_Type_Cmd( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[460], context_type_1, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
      __trace.line = 4163;
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_12,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[307] )))));
      __trace.line = 4164;
      RogueMethod__add_parameter__Token_String_Type( m_init_12, ROGUE_ARG(THIS->t), Rogue_literal_strings[460], ROGUE_ARG(((RogueClassType*)(NULL))) );
      __trace.line = 4165;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[460] )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    __trace.line = 4168;
    if (!!(m_2->_return_type))
    {
      __trace.line = 4169;
      m_call_8->_return_type = m_2->_return_type;
      __trace.line = 4170;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), cmd_11 ))))));
    }
    __trace.line = 4173;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_8->statements)), cmd_11 );
  }
  __trace.line = 4176;
  if (((RogueMethod__is_global( m_2 ))))
  {
    __trace.line = 4177;
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), callback_type_6 )))), scope_0 ))));
  }
  else
  {
    __trace.line = 4179;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), callback_type_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->context) )))) )))), scope_0 ))));
  }
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init_object( RogueClassCmdCreateCallback* THIS )
{
  RogueDebugTrace __trace( "CmdCreateCallback.init_object()", "Cmd.rogue", 4110 );
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( RogueClassCmdCreateCallback* THIS, RogueClassToken* _auto_1805_0, RogueClassCmd* _auto_1806_1, RogueString* _auto_1807_2, RogueString* _auto_1808_3, RogueClassType* _auto_1809_4 )
{
  RogueDebugTrace __trace( "CmdCreateCallback.init(Token,Cmd,String,String,Type)", "Cmd.rogue", 4110 );
  THIS->_return_type = _auto_1809_4;
  THIS->signature = _auto_1808_3;
  THIS->name = _auto_1807_2;
  THIS->context = _auto_1806_1;
  THIS->t = _auto_1805_0;
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueString* RogueCmdAs__type_name( RogueClassCmdAs* THIS )
{
  RogueDebugTrace __trace( "CmdAs.type_name()", "Cmd.rogue", 3917 );
  return (RogueString*)(Rogue_literal_strings[1225]);
}

RogueClassCmd* RogueCmdAs__clone__CloneArgs( RogueClassCmdAs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdAs.clone(CloneArgs)", "Cmd.rogue", 3919 );
  __trace.line = 3920;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdAs__dispatch__Visitor( RogueClassCmdAs* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdAs.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdAs__resolve__Scope( RogueClassCmdAs* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdAs.resolve(Scope)", "Cmd.rogue", 3922 );
  __trace.line = 3923;
  THIS->operand = (call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ));
  __trace.line = 3924;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  __trace.line = 3925;
  if (!(((!!((call_ROGUEM600( 36, ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) ))) && ((RogueType__is_reference( ROGUE_ARG((call_ROGUEM600( 36, ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) ))) )))) && ((RogueType__is_reference( ROGUE_ARG(THIS->_target_type) ))))))
  {
    __trace.line = 3926;
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1043] ))));
  }
  __trace.line = 3928;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdAs__write_cpp__CPPWriter_Logical( RogueClassCmdAs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdAs.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2789 );
  __trace.line = 2790;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[1120] );
  __trace.line = 2791;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
  __trace.line = 2792;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[217] );
  __trace.line = 2793;
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  __trace.line = 2794;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1121] );
}

RogueClassCmdAs* RogueCmdAs__init_object( RogueClassCmdAs* THIS )
{
  RogueDebugTrace __trace( "CmdAs.init_object()", "Cmd.rogue", 3917 );
  return (RogueClassCmdAs*)(THIS);
}

RogueString* RogueCmdDefaultValue__type_name( RogueClassCmdDefaultValue* THIS )
{
  RogueDebugTrace __trace( "CmdDefaultValue.type_name()", "Cmd.rogue", 1331 );
  return (RogueString*)(Rogue_literal_strings[1168]);
}

RogueClassCmd* RogueCmdDefaultValue__clone__CloneArgs( RogueClassCmdDefaultValue* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdDefaultValue.clone(CloneArgs)", "Cmd.rogue", 1338 );
  __trace.line = 1339;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

void RogueCmdDefaultValue__dispatch__Visitor( RogueClassCmdDefaultValue* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdDefaultValue.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdDefaultValue__resolve__Scope( RogueClassCmdDefaultValue* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdDefaultValue.resolve(Scope)", "Cmd.rogue", 1341 );
  __trace.line = 1342;
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  __trace.line = 1343;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_1,(((RogueType__create_default_value__Token( ROGUE_ARG(THIS->_of_type), ROGUE_ARG(THIS->t) )))));
  __trace.line = 1344;
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    __trace.line = 1345;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), default_value_1, ROGUE_ARG(THIS->_of_type) ))))))));
  }
  else
  {
    __trace.line = 1347;
    return (RogueClassCmd*)(default_value_1);
  }
}

RogueClassType* Rogue_CmdDefaultValue__type( RogueClassCmdDefaultValue* THIS )
{
  RogueDebugTrace __trace( "CmdDefaultValue.type()", "Cmd.rogue", 1350 );
  __trace.line = 1351;
  return (RogueClassType*)(THIS->_of_type);
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init_object( RogueClassCmdDefaultValue* THIS )
{
  RogueDebugTrace __trace( "CmdDefaultValue.init_object()", "Cmd.rogue", 1331 );
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init__Token_Type( RogueClassCmdDefaultValue* THIS, RogueClassToken* _auto_1810_0, RogueClassType* _auto_1811_1 )
{
  RogueDebugTrace __trace( "CmdDefaultValue.init(Token,Type)", "Cmd.rogue", 1336 );
  THIS->_of_type = _auto_1811_1;
  THIS->t = _auto_1810_0;
  __trace.line = 1338;
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueString* RogueCmdLiteralReal64__type_name( RogueClassCmdLiteralReal64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.type_name()", "Cmd.rogue", 1354 );
  return (RogueString*)(Rogue_literal_strings[1169]);
}

RogueClassCmd* RogueCmdLiteralReal64__clone__CloneArgs( RogueClassCmdLiteralReal64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.clone(CloneArgs)", "Cmd.rogue", 1361 );
  __trace.line = 1362;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralReal64__dispatch__Visitor( RogueClassCmdLiteralReal64* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralReal64__resolve__Scope( RogueClassCmdLiteralReal64* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.resolve(Scope)", "Cmd.rogue", 1364 );
  __trace.line = 1365;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralReal64__type( RogueClassCmdLiteralReal64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.type()", "Cmd.rogue", 1367 );
  __trace.line = 1368;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
}

void RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralReal64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2057 );
  __trace.line = 2058;
  if (THIS->value == THIS->value)
  {
    __trace.line = 2059;
    if ((THIS->value - THIS->value) == 0.0)
    {
      __trace.line = 2060;
      RogueCPPWriter__print__Real64( writer_0, ROGUE_ARG(THIS->value) );
    }
    else if (THIS->value > 0.0)
    {
      __trace.line = 2062;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1122] );
    }
    else
    {
      __trace.line = 2063;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1123] );
    }
  }
  else
  {
    __trace.line = 2066;
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1124] );
  }
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init_object( RogueClassCmdLiteralReal64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.init_object()", "Cmd.rogue", 1354 );
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init__Token_Real64( RogueClassCmdLiteralReal64* THIS, RogueClassToken* _auto_1812_0, RogueReal64 _auto_1813_1 )
{
  RogueDebugTrace __trace( "CmdLiteralReal64.init(Token,Real64)", "Cmd.rogue", 1359 );
  THIS->value = _auto_1813_1;
  THIS->t = _auto_1812_0;
  __trace.line = 1361;
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueString* RogueCmdLiteralInt64__type_name( RogueClassCmdLiteralInt64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.type_name()", "Cmd.rogue", 1372 );
  return (RogueString*)(Rogue_literal_strings[1170]);
}

RogueClassCmd* RogueCmdLiteralInt64__cast_to__Type_Scope( RogueClassCmdLiteralInt64* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.cast_to(Type,Scope)", "Cmd.rogue", 1382 );
  __trace.line = 1383;
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    __trace.line = 1384;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    __trace.line = 1386;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32)(THIS->value))) ))))));
  }
  else
  {
    __trace.line = 1388;
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1 )));
  }
}

RogueClassCmd* RogueCmdLiteralInt64__clone__CloneArgs( RogueClassCmdLiteralInt64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.clone(CloneArgs)", "Cmd.rogue", 1379 );
  __trace.line = 1380;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralInt64__dispatch__Visitor( RogueClassCmdLiteralInt64* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralInt64__resolve__Scope( RogueClassCmdLiteralInt64* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.resolve(Scope)", "Cmd.rogue", 1391 );
  __trace.line = 1392;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralInt64__type( RogueClassCmdLiteralInt64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.type()", "Cmd.rogue", 1394 );
  __trace.line = 1395;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
}

void RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2073 );
  __trace.line = 2074;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int64( writer_0, ROGUE_ARG(THIS->value) )))), Rogue_literal_strings[1125] );
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init_object( RogueClassCmdLiteralInt64* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.init_object()", "Cmd.rogue", 1372 );
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init__Token_Int64( RogueClassCmdLiteralInt64* THIS, RogueClassToken* _auto_1814_0, RogueInt64 _auto_1815_1 )
{
  RogueDebugTrace __trace( "CmdLiteralInt64.init(Token,Int64)", "Cmd.rogue", 1377 );
  THIS->value = _auto_1815_1;
  THIS->t = _auto_1814_0;
  __trace.line = 1379;
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueString* RogueCmdLiteralCharacter__type_name( RogueClassCmdLiteralCharacter* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.type_name()", "Cmd.rogue", 1424 );
  return (RogueString*)(Rogue_literal_strings[1171]);
}

RogueClassCmd* RogueCmdLiteralCharacter__clone__CloneArgs( RogueClassCmdLiteralCharacter* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.clone(CloneArgs)", "Cmd.rogue", 1431 );
  __trace.line = 1432;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

void RogueCmdLiteralCharacter__dispatch__Visitor( RogueClassCmdLiteralCharacter* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) );
}

RogueClassCmd* RogueCmdLiteralCharacter__resolve__Scope( RogueClassCmdLiteralCharacter* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.resolve(Scope)", "Cmd.rogue", 1434 );
  __trace.line = 1435;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdLiteralCharacter__type( RogueClassCmdLiteralCharacter* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.type()", "Cmd.rogue", 1437 );
  __trace.line = 1438;
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
}

void RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralCharacter* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2086 );
  __trace.line = 2087;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1126] );
  __trace.line = 2088;
  if ((THIS->value >= ((RogueCharacter)(32)) && THIS->value <= ((RogueCharacter)(126))))
  {
    __trace.line = 2089;
    switch (THIS->value)
    {
      case 10:
      {
        __trace.line = 2090;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1127] );
        break;
      }
      case (RogueCharacter)'\\':
      {
        __trace.line = 2091;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1128] );
        break;
      }
      case (RogueCharacter)'\'':
      {
        __trace.line = 2092;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1129] );
        break;
      }
      default:
      {
        __trace.line = 2094;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[83] );
        __trace.line = 2095;
        RogueCPPWriter__print_literal_character__Character_Logical( writer_0, ROGUE_ARG(THIS->value), false );
        __trace.line = 2096;
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[83] );
      }
    }
  }
  else
  {
    __trace.line = 2099;
    RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(((RogueInt32)(THIS->value))) );
  }
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init_object( RogueClassCmdLiteralCharacter* THIS )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.init_object()", "Cmd.rogue", 1424 );
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init__Token_Character( RogueClassCmdLiteralCharacter* THIS, RogueClassToken* _auto_1816_0, RogueCharacter _auto_1817_1 )
{
  RogueDebugTrace __trace( "CmdLiteralCharacter.init(Token,Character)", "Cmd.rogue", 1429 );
  THIS->value = _auto_1817_1;
  THIS->t = _auto_1816_0;
  __trace.line = 1431;
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueString* RogueCmdCreateList__type_name( RogueClassCmdCreateList* THIS )
{
  RogueDebugTrace __trace( "CmdCreateList.type_name()", "Cmd.rogue", 3950 );
  return (RogueString*)(Rogue_literal_strings[969]);
}

RogueClassCmd* RogueCmdCreateList__clone__CloneArgs( RogueClassCmdCreateList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCreateList.clone(CloneArgs)", "Cmd.rogue", 3958 );
  __trace.line = 3959;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(THIS->_list_type) ))))));
}

void RogueCmdCreateList__dispatch__Visitor( RogueClassCmdCreateList* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCreateList.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassCmd* RogueCmdCreateList__resolve__Scope( RogueClassCmdCreateList* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCreateList.resolve(Scope)", "Cmd.rogue", 3961 );
  __trace.line = 3962;
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  __trace.line = 3963;
  if ((!(!!(THIS->_list_type)) && !!(THIS->args->count)))
  {
    __trace.line = 3964;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,((call_ROGUEM90( 36, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[0]))) ))));
    __trace.line = 3965;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2979_5,(THIS->args));
      RogueInt32 _auto_2980_6 = (0);
      for (;_auto_2980_6 < _auto_2979_5->count;++_auto_2980_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_7,(((RogueClassCmd*)(_auto_2979_5->data->objects[_auto_2980_6]))));
        __trace.line = 3966;
        common_type_1 = ((RogueClassType*)((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_1, ROGUE_ARG((call_ROGUEM90( 36, arg_7 ))) ))));
      }
    }
    __trace.line = 3968;
    THIS->_list_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))), Rogue_literal_strings[222] )))) )));
    __trace.line = 3969;
    RogueType__organize__Scope( ROGUE_ARG(THIS->_list_type), scope_0 );
  }
  __trace.line = 3972;
  if (!!(THIS->_list_type))
  {
    __trace.line = 3973;
    ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_list_type->_element_type));
    __trace.line = 3974;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2981_8,(THIS->args));
      RogueInt32 index_9 = (0);
      for (;index_9 < _auto_2981_8->count;++index_9)
      {
        __trace.filename = "List.rogue";
        __trace.line = 308;
        THIS->args->data->objects[index_9] = (call_ROGUEM81( 31, ROGUE_ARG((call_ROGUEM82( 9, ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->objects[index_9]))), scope_0 ))), element_type_2, scope_0 ))), scope_0 ));
      }
    }
  }
  __trace.filename = "Cmd.rogue";
  __trace.line = 3979;
  if (!(!!(THIS->_list_type)))
  {
    ROGUE_THROW(((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1044] ))));
  }
  __trace.line = 3981;
  RogueInt32 initial_capacity_3 = (10);
  __trace.line = 3982;
  if (!!(THIS->args->count))
  {
    initial_capacity_3 = ((RogueInt32)THIS->args->count);
  }
  __trace.line = 3984;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,0);
  __trace.line = 3985;
  cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_list_type->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), initial_capacity_3 )))))) )))) ))))));
  __trace.line = 3986;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2982_10,(THIS->args));
    RogueInt32 _auto_2983_11 = (0);
    for (;_auto_2983_11 < _auto_2982_10->count;++_auto_2983_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_12,(((RogueClassCmd*)(_auto_2982_10->data->objects[_auto_2983_11]))));
      __trace.line = 3987;
      cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_4, Rogue_literal_strings[436], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), arg_12 )))) ))))));
    }
  }
  __trace.line = 3989;
  return (RogueClassCmd*)((call_ROGUEM81( 31, cmd_4, scope_0 )));
}

RogueClassCmdCreateList* RogueCmdCreateList__init_object( RogueClassCmdCreateList* THIS )
{
  RogueDebugTrace __trace( "CmdCreateList.init_object()", "Cmd.rogue", 3950 );
  return (RogueClassCmdCreateList*)(THIS);
}

RogueClassCmdCreateList* RogueCmdCreateList__init__Token_CmdArgs_Type( RogueClassCmdCreateList* THIS, RogueClassToken* _auto_1818_0, RogueClassCmdArgs* _auto_1819_1, RogueClassType* _auto_1820_2 )
{
  RogueDebugTrace __trace( "CmdCreateList.init(Token,CmdArgs,Type)", "Cmd.rogue", 3956 );
  THIS->_list_type = _auto_1820_2;
  THIS->args = _auto_1819_1;
  THIS->t = _auto_1818_0;
  __trace.line = 3958;
  return (RogueClassCmdCreateList*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueString* RogueCmdSelectCase_List__to_String( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_2984_2,(THIS));
    RogueInt32 _auto_2985_3 = (0);
    for (;_auto_2985_3 < _auto_2984_2->count;++_auto_2985_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,value_4,(((RogueClassCmdSelectCase*)(_auto_2984_2->data->objects[_auto_2985_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdSelectCase_List__type_name( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[846]);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init_object( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].init_object()", "List.rogue", 4 );
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdSelectCase*), true );
  }
  __trace.line = 16;
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__add__CmdSelectCase( RogueCmdSelectCase_List* THIS, RogueClassCmdSelectCase* value_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase[].add(CmdSelectCase)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdSelectCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueInt32 RogueCmdSelectCase_List__capacity( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueClassCmdSelectCase* RogueCmdSelectCase_List__last( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].last()", "List.rogue", 157 );
  __trace.line = 158;
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueCmdSelectCase_List__reader( RogueCmdSelectCase_List* THIS )
{
  RogueDebugTrace __trace( "CmdSelectCase[].reader()", "List.rogue", 226 );
  __trace.line = 227;
  return (RogueClassListReader_CmdSelectCase_*)(((RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListReader_CmdSelectCase_*,ROGUE_CREATE_OBJECT(ListReader_CmdSelectCase_))), ROGUE_ARG(THIS), 0 ))));
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__reserve__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdSelectCase[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdSelectCase_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueString* RogueCmdTypedLiteralList__type_name( RogueClassCmdTypedLiteralList* THIS )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.type_name()", "Cmd.rogue", 4558 );
  return (RogueString*)(Rogue_literal_strings[970]);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__clone__CloneArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.clone(CloneArgs)", "Cmd.rogue", 4570 );
  __trace.line = 4571;
  return (RogueClassCmdTypedLiteralList*)(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->elements), clone_args_0 )))) ))));
}

void RogueCmdTypedLiteralList__dispatch__Visitor( RogueClassCmdTypedLiteralList* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)THIS)) );
}

RogueClassType* RogueCmdTypedLiteralList__implicit_type__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.implicit_type(Scope)", "Cmd.rogue", 4573 );
  __trace.line = 4574;
  return (RogueClassType*)(((Rogue_CmdTypedLiteralList__type( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdTypedLiteralList__resolve__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.resolve(Scope)", "Cmd.rogue", 4576 );
  __trace.line = 4577;
  if (THIS->elements->count <= 32)
  {
    __trace.line = 4578;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
    __trace.line = 4579;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3007_4,(THIS->elements));
      RogueInt32 _auto_3008_5 = (0);
      for (;_auto_3008_5 < _auto_3007_4->count;++_auto_3008_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_6,(((RogueClassCmd*)(_auto_3007_4->data->objects[_auto_3008_5]))));
        __trace.line = 4580;
        result_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), result_1, Rogue_literal_strings[436], element_6 ))))));
      }
    }
    __trace.line = 4582;
    return (RogueClassCmd*)((call_ROGUEM81( 31, result_1, scope_0 )));
  }
  else
  {
    __trace.line = 4584;
    ROGUE_DEF_LOCAL_REF(RogueString*,list_var_name_2,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
    __trace.line = 4585;
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,list_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), list_var_name_2, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))) )))));
    __trace.line = 4586;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdLocalDeclaration__resolve__Scope( ROGUE_ARG(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), list_var_3, false )))), scope_0 )))) );
    __trace.line = 4587;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3009_7,(THIS->elements));
      RogueInt32 _auto_3010_8 = (0);
      for (;_auto_3010_8 < _auto_3009_7->count;++_auto_3010_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_9,(((RogueClassCmd*)(_auto_3009_7->data->objects[_auto_3010_8]))));
        __trace.line = 4588;
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))))), Rogue_literal_strings[436], element_9 )))), scope_0 )))) );
      }
    }
    __trace.line = 4590;
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdTypedLiteralList__type( RogueClassCmdTypedLiteralList* THIS )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.type()", "Cmd.rogue", 4593 );
  __trace.line = 4594;
  return (RogueClassType*)(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name) ))));
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init_object( RogueClassCmdTypedLiteralList* THIS )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.init_object()", "Cmd.rogue", 4558 );
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init__Token_String_CmdArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassToken* _auto_1826_0, RogueString* _auto_1827_1, RogueClassCmdArgs* _auto_1828_2 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.init(Token,String,CmdArgs)", "Cmd.rogue", 4564 );
  THIS->elements = _auto_1828_2;
  THIS->list_type_name = _auto_1827_1;
  THIS->t = _auto_1826_0;
  __trace.line = 4566;
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__add__Cmd( RogueClassCmdTypedLiteralList* THIS, RogueClassCmd* element_0 )
{
  RogueDebugTrace __trace( "CmdTypedLiteralList.add(Cmd)", "Cmd.rogue", 4566 );
  __trace.line = 4567;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->elements)), element_0 );
  __trace.line = 4568;
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_ParseReader__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueString* RogueTableEntry_String_ParseReader__List__to_String( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_ParseReader__List*,_auto_3011_2,(THIS));
    RogueInt32 _auto_3012_3 = (0);
    for (;_auto_3012_3 < _auto_3011_2->count;++_auto_3012_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,value_4,(((RogueClassTableEntry_String_ParseReader_*)(_auto_3011_2->data->objects[_auto_3012_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_ParseReader___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_ParseReader__List__type_name( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[847]);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init_object( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init__Int32( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__init__Int32_TableEntry_String_ParseReader_( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_ParseReader_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].init(Int32,TableEntry<<String,ParseReader>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1829_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1829_3;++i_2)
      {
        RogueTableEntry_String_ParseReader__List__add__TableEntry_String_ParseReader_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__add__TableEntry_String_ParseReader_( RogueTableEntry_String_ParseReader__List* THIS, RogueClassTableEntry_String_ParseReader_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].add(TableEntry<<String,ParseReader>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_ParseReader__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_ParseReader__List__capacity( RogueTableEntry_String_ParseReader__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_ParseReader__List* RogueTableEntry_String_ParseReader__List__reserve__Int32( RogueTableEntry_String_ParseReader__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_ParseReader__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_ParseReader_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_ParseReader__List*)(THIS);
}

RogueString* RogueTableEntry_String_ParseReader___to_String( RogueClassTableEntry_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_ParseReader___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_ParseReader___type_name( RogueClassTableEntry_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[735]);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( RogueClassTableEntry_String_ParseReader_* THIS, RogueString* _key_0, RogueClassParseReader* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>.init(String,ParseReader,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init_object( RogueClassTableEntry_String_ParseReader_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,ParseReader>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_ParseReader____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,ParseReader>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[890]);
}

RogueString* RogueIOError__type_name( RogueClassIOError* THIS )
{
  RogueDebugTrace __trace( "IOError.type_name()", "Exception.rogue", 44 );
  return (RogueString*)(Rogue_literal_strings[1261]);
}

RogueClassIOError* RogueIOError__init_object( RogueClassIOError* THIS )
{
  RogueDebugTrace __trace( "IOError.init_object()", "Exception.rogue", 44 );
  __trace.line = 4;
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  __trace.line = 44;
  return (RogueClassIOError*)(THIS);
}

RogueString* RogueFileReader__type_name( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.type_name()", "File.rogue", 430 );
  return (RogueString*)(Rogue_literal_strings[804]);
}

RogueLogical RogueFileReader__has_another( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.has_another()", "File.rogue", 456 );
  __trace.line = 457;
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueByte RogueFileReader__peek( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.peek()", "File.rogue", 476 );
  __trace.line = 477;
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  __trace.line = 479;
  if (THIS->buffer_position == THIS->buffer->count)
  {
    __trace.line = 480;
    THIS->buffer->count = (RogueInt32) fread( THIS->buffer->data->bytes, 1, 1024, THIS->fp );

    __trace.line = 481;
    THIS->buffer_position = 0;
  }
  __trace.line = 484;
  return (RogueByte)(THIS->buffer->data->bytes[THIS->buffer_position]);
}

RogueByte RogueFileReader__read( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.read()", "File.rogue", 486 );
  __trace.line = 487;
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  __trace.line = 489;
  RogueByte result_0 = (((RogueFileReader__peek( ROGUE_ARG(THIS) ))));
  __trace.line = 491;
  ++THIS->position;
  __trace.line = 492;
  ++THIS->buffer_position;
  __trace.line = 493;
  if (THIS->position == THIS->count)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  __trace.line = 495;
  return (RogueByte)(result_0);
}

RogueClassFileReader* RogueFileReader__init__String( RogueClassFileReader* THIS, RogueString* _filepath_0 )
{
  RogueDebugTrace __trace( "FileReader.init(String)", "File.rogue", 440 );
  __trace.line = 441;
  RogueFileReader__open__String( ROGUE_ARG(THIS), _filepath_0 );
  __trace.line = 443;
  return (RogueClassFileReader*)(THIS);
}

RogueClassFileReader* RogueFileReader__close( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.close()", "File.rogue", 443 );
  __trace.line = 444;
  if (!!(THIS->fp))
  {
    __trace.line = 445;
    fclose( THIS->fp );
    THIS->fp = 0;

  }
  __trace.line = 449;
  THIS->position = 0;
  __trace.line = 450;
  THIS->count = 0;
  __trace.line = 451;
  return (RogueClassFileReader*)(THIS);
}

RogueLogical RogueFileReader__open__String( RogueClassFileReader* THIS, RogueString* _auto_1855_0 )
{
  RogueDebugTrace __trace( "FileReader.open(String)", "File.rogue", 459 );
  THIS->filepath = _auto_1855_0;
  __trace.line = 460;
  RogueFileReader__close( ROGUE_ARG(THIS) );
  __trace.line = 462;
  THIS->fp = fopen( (char*)THIS->filepath->utf8, "rb" );
  if (THIS->fp)
  {
    fseek( THIS->fp, 0, SEEK_END );
    THIS->count = (RogueInt32) ftell( THIS->fp );
    fseek( THIS->fp, 0, SEEK_SET );
  }

  __trace.line = 472;
  if (THIS->count == 0)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  __trace.line = 474;
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueClassFileReader* RogueFileReader__init_object( RogueClassFileReader* THIS )
{
  RogueDebugTrace __trace( "FileReader.init_object()", "File.rogue", 430 );
  __trace.line = 436;
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  __trace.line = 430;
  return (RogueClassFileReader*)(THIS);
}

RogueString* RogueFileWriter__type_name( RogueClassFileWriter* THIS )
{
  RogueDebugTrace __trace( "FileWriter.type_name()", "File.rogue", 520 );
  return (RogueString*)(Rogue_literal_strings[805]);
}

RogueClassFileWriter* RogueFileWriter__close( RogueClassFileWriter* THIS )
{
  RogueDebugTrace __trace( "FileWriter.close()", "File.rogue", 531 );
  __trace.line = 532;
  RogueFileWriter__flush( ROGUE_ARG(THIS) );
  __trace.line = 534;
  if (!!(THIS->fp))
  {
    __trace.line = 535;
    fclose( THIS->fp ); THIS->fp = 0;

  }
  __trace.line = 538;
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__flush( RogueClassFileWriter* THIS )
{
  RogueDebugTrace __trace( "FileWriter.flush()", "File.rogue", 540 );
  __trace.line = 541;
  if ((THIS->buffer->count == 0 || !(!!(THIS->fp))))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  __trace.line = 543;
  fwrite( THIS->buffer->data->bytes, 1, THIS->buffer->count, THIS->fp );

  __trace.line = 544;
  fflush( THIS->fp );

  __trace.line = 546;
  RogueByte_List__clear( ROGUE_ARG(THIS->buffer) );
  __trace.line = 547;
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__write__Byte( RogueClassFileWriter* THIS, RogueByte ch_0 )
{
  RogueDebugTrace __trace( "FileWriter.write(Byte)", "File.rogue", 585 );
  __trace.line = 586;
  if (!(!!(THIS->fp)))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  __trace.line = 588;
  ++THIS->position;
  __trace.line = 589;
  RogueByte_List__add__Byte( ROGUE_ARG(THIS->buffer), ch_0 );
  __trace.line = 590;
  if (THIS->buffer->count == 1024)
  {
    return (RogueClassFileWriter*)(((RogueFileWriter__flush( ROGUE_ARG(THIS) ))));
  }
  __trace.line = 592;
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__init__String( RogueClassFileWriter* THIS, RogueString* _filepath_0 )
{
  RogueDebugTrace __trace( "FileWriter.init(String)", "File.rogue", 528 );
  __trace.line = 529;
  RogueFileWriter__open__String( ROGUE_ARG(THIS), _filepath_0 );
  __trace.line = 531;
  return (RogueClassFileWriter*)(THIS);
}

RogueLogical RogueFileWriter__open__String( RogueClassFileWriter* THIS, RogueString* _auto_1856_0 )
{
  RogueDebugTrace __trace( "FileWriter.open(String)", "File.rogue", 552 );
  THIS->filepath = _auto_1856_0;
  __trace.line = 553;
  RogueFileWriter__close( ROGUE_ARG(THIS) );
  __trace.line = 554;
  THIS->error = false;
  __trace.line = 556;
  THIS->fp = fopen( (char*)THIS->filepath->utf8, "wb" );
  THIS->error = !(THIS->fp);
  return !THIS->error;

}

RogueClassFileWriter* RogueFileWriter__init_object( RogueClassFileWriter* THIS )
{
  RogueDebugTrace __trace( "FileWriter.init_object()", "File.rogue", 520 );
  __trace.line = 524;
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  __trace.line = 520;
  return (RogueClassFileWriter*)(THIS);
}

RogueString* RogueUTF8Reader__type_name( RogueClassUTF8Reader* THIS )
{
  RogueDebugTrace __trace( "UTF8Reader.type_name()", "UTF8.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[806]);
}

RogueLogical RogueUTF8Reader__has_another( RogueClassUTF8Reader* THIS )
{
  RogueDebugTrace __trace( "UTF8Reader.has_another()", "UTF8.rogue", 10 );
  __trace.line = 11;
  return (RogueLogical)((THIS->next.exists || (RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))));
}

RogueCharacter RogueUTF8Reader__peek( RogueClassUTF8Reader* THIS )
{
  RogueDebugTrace __trace( "UTF8Reader.peek()", "UTF8.rogue", 13 );
  __trace.line = 14;
  if (THIS->next.exists)
  {
    return (RogueCharacter)(THIS->next.value);
  }
  __trace.line = 15;
  if (!((RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))))
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  __trace.line = 17;
  RogueCharacter ch_0 = (((RogueCharacter)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))));
  __trace.line = 18;
  if (!!((ch_0 & ((RogueCharacter)(128)))))
  {
    __trace.line = 19;
    if (!!((ch_0 & ((RogueCharacter)(32)))))
    {
      __trace.line = 20;
      if (!!((ch_0 & ((RogueCharacter)(16)))))
      {
        __trace.line = 21;
        ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(7))) << ((RogueCharacter)(18))) | ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 12)))));
        __trace.line = 22;
        ch_0 |= ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)));
        __trace.line = 23;
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
      else
      {
        __trace.line = 25;
        ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(15))) << ((RogueCharacter)(12))) | ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)))));
        __trace.line = 26;
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
    }
    else
    {
      __trace.line = 29;
      ch_0 = ((RogueCharacter)(((ch_0 & ((RogueCharacter)(31))) << ((RogueCharacter)(6))) | ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)))));
    }
  }
  __trace.line = 33;
  THIS->next = RogueOptionalCharacter( ch_0, true );
  __trace.line = 35;
  return (RogueCharacter)(ch_0);
}

RogueCharacter RogueUTF8Reader__read( RogueClassUTF8Reader* THIS )
{
  RogueDebugTrace __trace( "UTF8Reader.read()", "UTF8.rogue", 37 );
  __trace.line = 38;
  RogueCharacter result_0 = (((RogueUTF8Reader__peek( ROGUE_ARG(THIS) ))));
  __trace.line = 39;
  THIS->next = (RogueOptionalCharacter__create());
  __trace.line = 40;
  ++THIS->position;
  __trace.line = 41;
  return (RogueCharacter)(result_0);
}

RogueClassUTF8Reader* RogueUTF8Reader__init__Reader_Byte_( RogueClassUTF8Reader* THIS, RogueClassReader_Byte_* _auto_1864_0 )
{
  RogueDebugTrace __trace( "UTF8Reader.init(Reader<<Byte>>)", "UTF8.rogue", 7 );
  THIS->byte_reader = _auto_1864_0;
  __trace.line = 8;
  THIS->next = (RogueOptionalCharacter__create());
  __trace.line = 10;
  return (RogueClassUTF8Reader*)(THIS);
}

RogueClassUTF8Reader* RogueUTF8Reader__init_object( RogueClassUTF8Reader* THIS )
{
  RogueDebugTrace __trace( "UTF8Reader.init_object()", "UTF8.rogue", 1 );
  return (RogueClassUTF8Reader*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_TokenType__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueString* RogueTableEntry_String_TokenType__List__to_String( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TokenType__List*,_auto_3081_2,(THIS));
    RogueInt32 _auto_3082_3 = (0);
    for (;_auto_3082_3 < _auto_3081_2->count;++_auto_3082_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,value_4,(((RogueClassTableEntry_String_TokenType_*)(_auto_3081_2->data->objects[_auto_3082_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TokenType___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TokenType__List__type_name( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[848]);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init_object( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init__Int32( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TokenType_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__init__Int32_TableEntry_String_TokenType_( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TokenType_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].init(Int32,TableEntry<<String,TokenType>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TokenType_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1944_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1944_3;++i_2)
      {
        RogueTableEntry_String_TokenType__List__add__TableEntry_String_TokenType_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__add__TableEntry_String_TokenType_( RogueTableEntry_String_TokenType__List* THIS, RogueClassTableEntry_String_TokenType_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].add(TableEntry<<String,TokenType>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_TokenType__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TokenType__List__capacity( RogueTableEntry_String_TokenType__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TokenType__List* RogueTableEntry_String_TokenType__List__reserve__Int32( RogueTableEntry_String_TokenType__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TokenType_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_TokenType__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TokenType_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_TokenType__List*)(THIS);
}

RogueString* RogueTableEntry_String_TokenType___to_String( RogueClassTableEntry_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TokenType___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_TokenType___type_name( RogueClassTableEntry_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[736]);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init__String_TokenType_Int32( RogueClassTableEntry_String_TokenType_* THIS, RogueString* _key_0, RogueClassTokenType* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>.init(String,TokenType,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init_object( RogueClassTableEntry_String_TokenType_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TokenType>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_TokenType____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,TokenType>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[891]);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_TypeSpecializer__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeSpecializer__List__to_String( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_TypeSpecializer__List*,_auto_3137_2,(THIS));
    RogueInt32 _auto_3138_3 = (0);
    for (;_auto_3138_3 < _auto_3137_2->count;++_auto_3138_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,value_4,(((RogueClassTableEntry_String_TypeSpecializer_*)(_auto_3137_2->data->objects[_auto_3138_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_TypeSpecializer___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_TypeSpecializer__List__type_name( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[849]);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init_object( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init__Int32( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__init__Int32_TableEntry_String_TypeSpecializer_( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_TypeSpecializer_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].init(Int32,TableEntry<<String,TypeSpecializer>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_1970_3 = (initial_capacity_0);
      for (;i_2 <= _auto_1970_3;++i_2)
      {
        RogueTableEntry_String_TypeSpecializer__List__add__TableEntry_String_TypeSpecializer_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__add__TableEntry_String_TypeSpecializer_( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueClassTableEntry_String_TypeSpecializer_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].add(TableEntry<<String,TypeSpecializer>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_TypeSpecializer__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_TypeSpecializer__List__capacity( RogueTableEntry_String_TypeSpecializer__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_TypeSpecializer__List* RogueTableEntry_String_TypeSpecializer__List__reserve__Int32( RogueTableEntry_String_TypeSpecializer__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_TypeSpecializer__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_TypeSpecializer__List*)(THIS);
}

RogueString* RogueTableEntry_String_TypeSpecializer___to_String( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeSpecializer___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_TypeSpecializer___type_name( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[737]);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( RogueClassTableEntry_String_TypeSpecializer_* THIS, RogueString* _key_0, RogueClassTypeSpecializer* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>.init(String,TypeSpecializer,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init_object( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,TypeSpecializer>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_TypeSpecializer____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,TypeSpecializer>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[892]);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_CmdLabel__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueString* RogueTableEntry_String_CmdLabel__List__to_String( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_CmdLabel__List*,_auto_3190_2,(THIS));
    RogueInt32 _auto_3191_3 = (0);
    for (;_auto_3191_3 < _auto_3190_2->count;++_auto_3191_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,value_4,(((RogueClassTableEntry_String_CmdLabel_*)(_auto_3190_2->data->objects[_auto_3191_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_CmdLabel___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_CmdLabel__List__type_name( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[850]);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init_object( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init__Int32( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__init__Int32_TableEntry_String_CmdLabel_( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_CmdLabel_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].init(Int32,TableEntry<<String,CmdLabel>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_2137_3 = (initial_capacity_0);
      for (;i_2 <= _auto_2137_3;++i_2)
      {
        RogueTableEntry_String_CmdLabel__List__add__TableEntry_String_CmdLabel_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__add__TableEntry_String_CmdLabel_( RogueTableEntry_String_CmdLabel__List* THIS, RogueClassTableEntry_String_CmdLabel_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].add(TableEntry<<String,CmdLabel>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_CmdLabel__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_CmdLabel__List__capacity( RogueTableEntry_String_CmdLabel__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_CmdLabel__List* RogueTableEntry_String_CmdLabel__List__reserve__Int32( RogueTableEntry_String_CmdLabel__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_CmdLabel__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_CmdLabel_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_CmdLabel__List*)(THIS);
}

RogueString* RogueTableEntry_String_CmdLabel___to_String( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_CmdLabel___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_CmdLabel___type_name( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[738]);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( RogueClassTableEntry_String_CmdLabel_* THIS, RogueString* _key_0, RogueClassCmdLabel* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>.init(String,CmdLabel,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init_object( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,CmdLabel>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_CmdLabel____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,CmdLabel>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[893]);
}

RogueToken_List_List* RogueToken_List_List__init( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueToken_List_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueToken_List_List*)(THIS);
}

RogueString* RogueToken_List_List__to_String( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,_auto_3218_2,(THIS));
    RogueInt32 _auto_3219_3 = (0);
    for (;_auto_3219_3 < _auto_3218_2->count;++_auto_3219_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,value_4,(((RogueToken_List*)(_auto_3218_2->data->objects[_auto_3219_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueToken_List__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List_List__type_name( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[851]);
}

RogueToken_List_List* RogueToken_List_List__init_object( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].init_object()", "List.rogue", 4 );
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__init__Int32( RogueToken_List_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "Token[][].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueToken_List*), true );
  }
  __trace.line = 16;
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__add__Token_List( RogueToken_List_List* THIS, RogueToken_List* value_0 )
{
  RogueDebugTrace __trace( "Token[][].add(Token[])", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueToken_List_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueToken_List_List*)(THIS);
}

RogueInt32 RogueToken_List_List__capacity( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueToken_List* RogueToken_List_List__last( RogueToken_List_List* THIS )
{
  RogueDebugTrace __trace( "Token[][].last()", "List.rogue", 157 );
  __trace.line = 158;
  return (RogueToken_List*)(((RogueToken_List*)(THIS->data->objects[(THIS->count - 1)])));
}

RogueToken_List_List* RogueToken_List_List__reserve__Int32( RogueToken_List_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "Token[][].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueToken_List_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueToken_List_List*)(THIS);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init( RogueClassTable_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Token_List___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueString* RogueTable_String_Token_List___to_String( RogueClassTable_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Token_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Token_List___type_name( RogueClassTable_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[807]);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init__Int32( RogueClassTable_String_Token_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Token_List__List__init__Int32_TableEntry_String_Token_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Token_List__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Token_List__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Token_List_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueClassTableEntry_String_Token_List_* RogueTable_String_Token_List___find__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_2,(((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Token_List_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Token_List_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Token_List_*)(((RogueClassTableEntry_String_Token_List_*)(NULL)));
}

RogueToken_List* RogueTable_String_Token_List___get__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueToken_List*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,default_value_2,0);
    __trace.line = 62;
    return (RogueToken_List*)(default_value_2);
  }
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___set__String_Token_List( RogueClassTable_String_Token_List_* THIS, RogueString* key_0, RogueToken_List* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.set(String,Token[])", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_4,(((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Token_List_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Token_List_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Token_List_*)((RogueTableEntry_String_Token_List___init__String_Token_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Token_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Token_List_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Token_List_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Token_List___print_to__StringBuilder( RogueClassTable_String_Token_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Token_List___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init_object( RogueClassTable_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Token[]>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueString* RogueArray_Token_List___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<Token[]>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[894]);
}

RogueString* RogueArray_CmdWhichCase___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdWhichCase>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[895]);
}

RogueString* RogueArray_CmdCatch___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdCatch>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[896]);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init( RogueCmdTaskControlSection_List* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueCmdTaskControlSection_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueCmdTaskControlSection_List__to_String( RogueCmdTaskControlSection_List* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3268_2,(THIS));
    RogueInt32 _auto_3269_3 = (0);
    for (;_auto_3269_3 < _auto_3268_2->count;++_auto_3269_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,value_4,(((RogueClassCmdTaskControlSection*)(_auto_3268_2->data->objects[_auto_3269_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((call_ROGUEM4( 4, ((RogueObject*)value_4) ))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdTaskControlSection_List__type_name( RogueCmdTaskControlSection_List* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[852]);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init_object( RogueCmdTaskControlSection_List* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].init_object()", "List.rogue", 4 );
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  __trace.line = 16;
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__add__CmdTaskControlSection( RogueCmdTaskControlSection_List* THIS, RogueClassCmdTaskControlSection* value_0 )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].add(CmdTaskControlSection)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueCmdTaskControlSection_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueInt32 RogueCmdTaskControlSection_List__capacity( RogueCmdTaskControlSection_List* THIS )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__reserve__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "CmdTaskControlSection[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueCmdTaskControlSection_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueArray_CmdTaskControlSection___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdTaskControlSection>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[897]);
}

RogueString* RogueArray_CmdSelectCase___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdSelectCase>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[898]);
}

RogueString* RogueRequirementError__type_name( RogueClassRequirementError* THIS )
{
  RogueDebugTrace __trace( "RequirementError.type_name()", "Exception.rogue", 22 );
  return (RogueString*)(Rogue_literal_strings[979]);
}

RogueClassRequirementError* RogueRequirementError__init__String( RogueClassRequirementError* THIS, RogueString* requirement_0 )
{
  RogueDebugTrace __trace( "RequirementError.init(String)", "Exception.rogue", 24 );
  __trace.line = 25;
  if (!!(requirement_0->character_count))
  {
    THIS->message = ((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1061] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], requirement_0 )))) )))), Rogue_literal_strings[78] )))) )));
  }
  else
  {
    __trace.line = 26;
    THIS->message = Rogue_literal_strings[1062];
  }
  return (RogueClassRequirementError*)(THIS);
}

RogueClassRequirementError* RogueRequirementError__init_object( RogueClassRequirementError* THIS )
{
  RogueDebugTrace __trace( "RequirementError.init_object()", "Exception.rogue", 22 );
  __trace.line = 4;
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  __trace.line = 22;
  return (RogueClassRequirementError*)(THIS);
}

RogueString* RogueArray_CmdControlStructure___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<CmdControlStructure>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[899]);
}

RogueString* RogueCmdCallStaticMethod__type_name( RogueClassCmdCallStaticMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.type_name()", "Cmd.rogue", 2412 );
  return (RogueString*)(Rogue_literal_strings[1180]);
}

RogueClassCmd* RogueCmdCallStaticMethod__clone__CloneArgs( RogueClassCmdCallStaticMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.clone(CloneArgs)", "Cmd.rogue", 2414 );
  __trace.line = 2415;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__clone__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__clone__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

void RogueCmdCallStaticMethod__dispatch__Visitor( RogueClassCmdCallStaticMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) );
}

RogueClassCmd* RogueCmdCallStaticMethod__resolve__Scope( RogueClassCmdCallStaticMethod* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.resolve(Scope)", "Cmd.rogue", 2417 );
  __trace.line = 2418;
  if (!(!!(THIS->context)))
  {
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context) )))));
  }
  __trace.line = 2419;
  return (RogueClassCmd*)((RogueCmdCall__resolve__Scope( ROGUE_ARG(((RogueClassCmdCall*)THIS)), scope_0 )));
}

void RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallStaticMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2326 );
  __trace.line = 2327;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[94] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  __trace.line = 2328;
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  __trace.line = 2329;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[576] );
  __trace.line = 2330;
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
  __trace.line = 2331;
  RogueInt32 i_2 = (0);
  __trace.line = 2332;
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3301_3,(THIS->args));
    RogueInt32 _auto_3302_4 = (0);
    for (;_auto_3302_4 < _auto_3301_3->count;++_auto_3302_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3301_3->data->objects[_auto_3302_4]))));
      __trace.line = 2333;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[574] );
      __trace.line = 2334;
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      __trace.line = 2335;
      ++i_2;
    }
  }
  __trace.line = 2337;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[612] );
  __trace.line = 2338;
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[34] );
  }
}

RogueClassCmdCallStaticMethod* RogueCmdCallStaticMethod__init_object( RogueClassCmdCallStaticMethod* THIS )
{
  RogueDebugTrace __trace( "CmdCallStaticMethod.init_object()", "Cmd.rogue", 2412 );
  return (RogueClassCmdCallStaticMethod*)(THIS);
}

RogueString* RogueListReader_CmdSelectCase___type_name( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueDebugTrace __trace( "ListReader<<CmdSelectCase>>.type_name()", "List.rogue", 374 );
  return (RogueString*)(Rogue_literal_strings[1258]);
}

RogueLogical RogueListReader_CmdSelectCase___has_another( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueDebugTrace __trace( "ListReader<<CmdSelectCase>>.has_another()", "List.rogue", 387 );
  __trace.line = 388;
  if (THIS->is_limited)
  {
    return (RogueLogical)(THIS->position < THIS->limit);
  }
  else
  {
    __trace.line = 389;
    return (RogueLogical)(THIS->position < THIS->list->count);
  }
}

RogueClassCmdSelectCase* RogueListReader_CmdSelectCase___read( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueDebugTrace __trace( "ListReader<<CmdSelectCase>>.read()", "List.rogue", 394 );
  __trace.line = 395;
  ++THIS->position;
  __trace.line = 396;
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->list->data->objects[(THIS->position - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( RogueClassListReader_CmdSelectCase_* THIS, RogueCmdSelectCase_List* _auto_2284_0, RogueInt32 _auto_2285_1 )
{
  RogueDebugTrace __trace( "ListReader<<CmdSelectCase>>.init(CmdSelectCase[],Int32)", "List.rogue", 382 );
  THIS->position = _auto_2285_1;
  THIS->list = _auto_2284_0;
  __trace.line = 384;
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init_object( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueDebugTrace __trace( "ListReader<<CmdSelectCase>>.init_object()", "List.rogue", 374 );
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init( RogueTableEntry_String_Definition__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Definition__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueString* RogueTableEntry_String_Definition__List__to_String( RogueTableEntry_String_Definition__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Definition__List*,_auto_3323_2,(THIS));
    RogueInt32 _auto_3324_3 = (0);
    for (;_auto_3324_3 < _auto_3323_2->count;++_auto_3324_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,value_4,(((RogueClassTableEntry_String_Definition_*)(_auto_3323_2->data->objects[_auto_3324_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Definition___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Definition__List__type_name( RogueTableEntry_String_Definition__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[853]);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init_object( RogueTableEntry_String_Definition__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init__Int32( RogueTableEntry_String_Definition__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Definition_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__init__Int32_TableEntry_String_Definition_( RogueTableEntry_String_Definition__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Definition_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].init(Int32,TableEntry<<String,Definition>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Definition_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_2427_3 = (initial_capacity_0);
      for (;i_2 <= _auto_2427_3;++i_2)
      {
        RogueTableEntry_String_Definition__List__add__TableEntry_String_Definition_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__add__TableEntry_String_Definition_( RogueTableEntry_String_Definition__List* THIS, RogueClassTableEntry_String_Definition_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].add(TableEntry<<String,Definition>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Definition__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Definition__List__capacity( RogueTableEntry_String_Definition__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Definition__List* RogueTableEntry_String_Definition__List__reserve__Int32( RogueTableEntry_String_Definition__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Definition_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Definition__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Definition_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Definition__List*)(THIS);
}

RogueString* RogueTableEntry_String_Definition___to_String( RogueClassTableEntry_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Definition___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Definition___type_name( RogueClassTableEntry_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[739]);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init__String_Definition_Int32( RogueClassTableEntry_String_Definition_* THIS, RogueString* _key_0, RogueClassDefinition* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>.init(String,Definition,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init_object( RogueClassTableEntry_String_Definition_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Definition>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Definition____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Definition>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[900]);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init( RogueTableEntry_String_Property__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Property__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueString* RogueTableEntry_String_Property__List__to_String( RogueTableEntry_String_Property__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Property__List*,_auto_3351_2,(THIS));
    RogueInt32 _auto_3352_3 = (0);
    for (;_auto_3352_3 < _auto_3351_2->count;++_auto_3352_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,value_4,(((RogueClassTableEntry_String_Property_*)(_auto_3351_2->data->objects[_auto_3352_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Property___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Property__List__type_name( RogueTableEntry_String_Property__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[854]);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init_object( RogueTableEntry_String_Property__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init__Int32( RogueTableEntry_String_Property__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Property_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__init__Int32_TableEntry_String_Property_( RogueTableEntry_String_Property__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Property_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].init(Int32,TableEntry<<String,Property>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Property_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_2444_3 = (initial_capacity_0);
      for (;i_2 <= _auto_2444_3;++i_2)
      {
        RogueTableEntry_String_Property__List__add__TableEntry_String_Property_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__add__TableEntry_String_Property_( RogueTableEntry_String_Property__List* THIS, RogueClassTableEntry_String_Property_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].add(TableEntry<<String,Property>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Property__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Property__List__capacity( RogueTableEntry_String_Property__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Property__List* RogueTableEntry_String_Property__List__reserve__Int32( RogueTableEntry_String_Property__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Property_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Property__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Property_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Property__List*)(THIS);
}

RogueString* RogueTableEntry_String_Property___to_String( RogueClassTableEntry_String_Property_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Property___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Property___type_name( RogueClassTableEntry_String_Property_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[740]);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init__String_Property_Int32( RogueClassTableEntry_String_Property_* THIS, RogueString* _key_0, RogueClassProperty* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>.init(String,Property,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init_object( RogueClassTableEntry_String_Property_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Property>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Property____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Property>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[901]);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init( RogueMethodTemplate_List* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueMethodTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueMethodTemplate_List__to_String( RogueMethodTemplate_List* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_3379_2,(THIS));
    RogueInt32 _auto_3380_3 = (0);
    for (;_auto_3380_3 < _auto_3379_2->count;++_auto_3380_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,value_4,(((RogueClassMethodTemplate*)(_auto_3379_2->data->objects[_auto_3380_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethodTemplate__to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethodTemplate_List__type_name( RogueMethodTemplate_List* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[855]);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init_object( RogueMethodTemplate_List* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate[].init_object()", "List.rogue", 4 );
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init__Int32( RogueMethodTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "MethodTemplate[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethodTemplate*), true );
  }
  __trace.line = 16;
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__add__MethodTemplate( RogueMethodTemplate_List* THIS, RogueClassMethodTemplate* value_0 )
{
  RogueDebugTrace __trace( "MethodTemplate[].add(MethodTemplate)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueMethodTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueMethodTemplate_List*)(THIS);
}

RogueInt32 RogueMethodTemplate_List__capacity( RogueMethodTemplate_List* THIS )
{
  RogueDebugTrace __trace( "MethodTemplate[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__reserve__Int32( RogueMethodTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "MethodTemplate[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueMethodTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueArray_MethodTemplate___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<MethodTemplate>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[902]);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init( RogueClassTable_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.init()", "Table.rogue", 8 );
  __trace.line = 9;
  RogueTable_String_Cmd___init__Int32( ROGUE_ARG(THIS), 16 );
  __trace.line = 11;
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueString* RogueTable_String_Cmd___to_String( RogueClassTable_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.to_String()", "Table.rogue", 118 );
  __trace.line = 119;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Cmd___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Cmd___type_name( RogueClassTable_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.type_name()", "Table.rogue", 1 );
  return (RogueString*)(Rogue_literal_strings[808]);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init__Int32( RogueClassTable_String_Cmd_* THIS, RogueInt32 bin_count_0 )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.init(Int32)", "Table.rogue", 11 );
  __trace.line = 12;
  RogueInt32 bins_power_of_2_1 = (1);
  __trace.line = 13;
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  __trace.line = 14;
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  __trace.line = 15;
  THIS->bin_mask = (bin_count_0 - 1);
  __trace.line = 17;
  THIS->bins = ((RogueTableEntry_String_Cmd__List__init__Int32_TableEntry_String_Cmd_( ROGUE_ARG(ROGUE_CREATE_REF(RogueTableEntry_String_Cmd__List*,ROGUE_CREATE_OBJECT(TableEntry_String_Cmd__List))), bin_count_0, ROGUE_ARG(((RogueClassTableEntry_String_Cmd_*)(NULL))) )));
  __trace.line = 18;
  THIS->keys = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  __trace.line = 20;
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueClassTableEntry_String_Cmd_* RogueTable_String_Cmd___find__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.find(String)", "Table.rogue", 45 );
  __trace.line = 46;
  RogueInt32 hash_1 = (key_0->hash_code);
  __trace.line = 47;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_2,(((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[(hash_1 & THIS->bin_mask)]))));
  __trace.line = 49;
  while (!!(entry_2))
  {
    __trace.line = 50;
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Cmd_*)(entry_2);
    }
    __trace.line = 51;
    entry_2 = ((RogueClassTableEntry_String_Cmd_*)entry_2->next_entry);
  }
  __trace.line = 54;
  return (RogueClassTableEntry_String_Cmd_*)(((RogueClassTableEntry_String_Cmd_*)(NULL)));
}

RogueClassCmd* RogueTable_String_Cmd___get__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.get(String)", "Table.rogue", 56 );
  __trace.line = 57;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_1,(((RogueTable_String_Cmd___find__String( ROGUE_ARG(THIS), key_0 )))));
  __trace.line = 58;
  if (!!(entry_1))
  {
    __trace.line = 59;
    return (RogueClassCmd*)(entry_1->value);
  }
  else
  {
    __trace.line = 61;
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_2,0);
    __trace.line = 62;
    return (RogueClassCmd*)(default_value_2);
  }
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___set__String_Cmd( RogueClassTable_String_Cmd_* THIS, RogueString* key_0, RogueClassCmd* value_1 )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.set(String,Cmd)", "Table.rogue", 98 );
  __trace.line = 99;
  RogueInt32 hash_2 = (key_0->hash_code);
  __trace.line = 100;
  RogueInt32 index_3 = ((hash_2 & THIS->bin_mask));
  __trace.line = 101;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_4,(((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[index_3]))));
  __trace.line = 103;
  while (!!(entry_4))
  {
    __trace.line = 104;
    if ((entry_4->hash == hash_2 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_4->key), key_0 )))))
    {
      __trace.line = 105;
      entry_4->value = value_1;
      __trace.line = 106;
      return (RogueClassTable_String_Cmd_*)(THIS);
    }
    __trace.line = 108;
    entry_4 = ((RogueClassTableEntry_String_Cmd_*)entry_4->next_entry);
  }
  __trace.line = 111;
  entry_4 = ((RogueClassTableEntry_String_Cmd_*)((RogueTableEntry_String_Cmd___init__String_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Cmd_*,ROGUE_CREATE_OBJECT(TableEntry_String_Cmd_))), key_0, value_1, hash_2 ))));
  __trace.line = 112;
  entry_4->next_entry = ((RogueClassTableEntry_String_Cmd_*)(THIS->bins->data->objects[index_3]));
  __trace.filename = "List.rogue";
  __trace.line = 308;
  THIS->bins->data->objects[index_3] = entry_4;
  __trace.filename = "Table.rogue";
  __trace.line = 115;
  RogueString_List__add__String( ROGUE_ARG(THIS->keys), key_0 );
  __trace.line = 116;
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Cmd___print_to__StringBuilder( RogueClassTable_String_Cmd_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.print_to(StringBuilder)", "Table.rogue", 121 );
  __trace.line = 122;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  __trace.line = 123;
  RogueInt32 i_1 = (0);
  __trace.line = 124;
  while (i_1 < THIS->keys->count)
  {
    __trace.line = 125;
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    __trace.line = 126;
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(THIS->keys->data->objects[i_1]))));
    __trace.line = 127;
    RogueStringBuilder__print__String( buffer_0, key_2 );
    __trace.line = 128;
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    __trace.line = 129;
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS), key_2 )))))) );
    __trace.line = 130;
    ++i_1;
  }
  __trace.line = 132;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  __trace.line = 133;
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init_object( RogueClassTable_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "Table<<String,Cmd>>.init_object()", "Table.rogue", 1 );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueString* RogueArray_FnArg___type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<FnArg>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[903]);
}

RogueString* RogueDirectiveTokenType__type_name( RogueClassDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "DirectiveTokenType.type_name()", "TokenType.rogue", 286 );
  return (RogueString*)(Rogue_literal_strings[1136]);
}

RogueClassToken* RogueDirectiveTokenType__create_token__String_Int32_Int32( RogueClassDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  RogueDebugTrace __trace( "DirectiveTokenType.create_token(String,Int32,Int32)", "TokenType.rogue", 288 );
  __trace.line = 289;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueDirectiveTokenType__is_directive( RogueClassDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "DirectiveTokenType.is_directive()", "TokenType.rogue", 291 );
  __trace.line = 292;
  return (RogueLogical)(true);
}

RogueClassDirectiveTokenType* RogueDirectiveTokenType__init_object( RogueClassDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "DirectiveTokenType.init_object()", "TokenType.rogue", 286 );
  return (RogueClassDirectiveTokenType*)(THIS);
}

RogueString* RogueStructuralDirectiveTokenType__type_name( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "StructuralDirectiveTokenType.type_name()", "TokenType.rogue", 295 );
  return (RogueString*)(Rogue_literal_strings[1137]);
}

RogueClassToken* RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32( RogueClassStructuralDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  RogueDebugTrace __trace( "StructuralDirectiveTokenType.create_token(String,Int32,Int32)", "TokenType.rogue", 297 );
  __trace.line = 298;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructuralDirectiveTokenType__is_directive( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "StructuralDirectiveTokenType.is_directive()", "TokenType.rogue", 300 );
  __trace.line = 301;
  return (RogueLogical)(true);
}

RogueLogical RogueStructuralDirectiveTokenType__is_structure( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "StructuralDirectiveTokenType.is_structure()", "TokenType.rogue", 303 );
  __trace.line = 304;
  return (RogueLogical)(true);
}

RogueClassStructuralDirectiveTokenType* RogueStructuralDirectiveTokenType__init_object( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueDebugTrace __trace( "StructuralDirectiveTokenType.init_object()", "TokenType.rogue", 295 );
  return (RogueClassStructuralDirectiveTokenType*)(THIS);
}

RogueString* RogueEOLTokenType__type_name( RogueClassEOLTokenType* THIS )
{
  RogueDebugTrace __trace( "EOLTokenType.type_name()", "TokenType.rogue", 256 );
  return (RogueString*)(Rogue_literal_strings[1138]);
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  RogueDebugTrace __trace( "EOLTokenType.create_token(String,Int32,Int32)", "TokenType.rogue", 258 );
  __trace.line = 259;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), Rogue_literal_strings[0] ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32_String( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  RogueDebugTrace __trace( "EOLTokenType.create_token(String,Int32,Int32,String)", "TokenType.rogue", 261 );
  __trace.line = 262;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueEOLTokenType__is_structure( RogueClassEOLTokenType* THIS )
{
  RogueDebugTrace __trace( "EOLTokenType.is_structure()", "TokenType.rogue", 264 );
  __trace.line = 265;
  return (RogueLogical)(false);
}

RogueClassEOLTokenType* RogueEOLTokenType__init_object( RogueClassEOLTokenType* THIS )
{
  RogueDebugTrace __trace( "EOLTokenType.init_object()", "TokenType.rogue", 256 );
  return (RogueClassEOLTokenType*)(THIS);
}

RogueString* RogueStructureTokenType__type_name( RogueClassStructureTokenType* THIS )
{
  RogueDebugTrace __trace( "StructureTokenType.type_name()", "TokenType.rogue", 277 );
  return (RogueString*)(Rogue_literal_strings[1139]);
}

RogueClassToken* RogueStructureTokenType__create_token__String_Int32_Int32( RogueClassStructureTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  RogueDebugTrace __trace( "StructureTokenType.create_token(String,Int32,Int32)", "TokenType.rogue", 279 );
  __trace.line = 280;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructureTokenType__is_structure( RogueClassStructureTokenType* THIS )
{
  RogueDebugTrace __trace( "StructureTokenType.is_structure()", "TokenType.rogue", 282 );
  __trace.line = 283;
  return (RogueLogical)(true);
}

RogueClassStructureTokenType* RogueStructureTokenType__init_object( RogueClassStructureTokenType* THIS )
{
  RogueDebugTrace __trace( "StructureTokenType.init_object()", "TokenType.rogue", 277 );
  return (RogueClassStructureTokenType*)(THIS);
}

RogueString* RogueNativeCodeTokenType__type_name( RogueClassNativeCodeTokenType* THIS )
{
  RogueDebugTrace __trace( "NativeCodeTokenType.type_name()", "TokenType.rogue", 268 );
  return (RogueString*)(Rogue_literal_strings[1140]);
}

RogueClassToken* RogueNativeCodeTokenType__create_token__String_Int32_Int32_String( RogueClassNativeCodeTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  RogueDebugTrace __trace( "NativeCodeTokenType.create_token(String,Int32,Int32,String)", "TokenType.rogue", 270 );
  __trace.line = 271;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueNativeCodeTokenType__create_token__Token_String( RogueClassNativeCodeTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  RogueDebugTrace __trace( "NativeCodeTokenType.create_token(Token,String)", "TokenType.rogue", 273 );
  __trace.line = 274;
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_1 ))))), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) ))));
}

RogueClassNativeCodeTokenType* RogueNativeCodeTokenType__init_object( RogueClassNativeCodeTokenType* THIS )
{
  RogueDebugTrace __trace( "NativeCodeTokenType.init_object()", "TokenType.rogue", 268 );
  return (RogueClassNativeCodeTokenType*)(THIS);
}

RogueString* RogueModifyAndAssignTokenType__type_name( RogueClassModifyAndAssignTokenType* THIS )
{
  RogueDebugTrace __trace( "ModifyAndAssignTokenType.type_name()", "TokenType.rogue", 307 );
  return (RogueString*)(Rogue_literal_strings[1141]);
}

RogueLogical RogueModifyAndAssignTokenType__is_op_with_assign( RogueClassModifyAndAssignTokenType* THIS )
{
  RogueDebugTrace __trace( "ModifyAndAssignTokenType.is_op_with_assign()", "TokenType.rogue", 309 );
  __trace.line = 310;
  return (RogueLogical)(true);
}

RogueClassModifyAndAssignTokenType* RogueModifyAndAssignTokenType__init_object( RogueClassModifyAndAssignTokenType* THIS )
{
  RogueDebugTrace __trace( "ModifyAndAssignTokenType.init_object()", "TokenType.rogue", 307 );
  return (RogueClassModifyAndAssignTokenType*)(THIS);
}

RogueString* RoguePreprocessorTokenReader__type_name( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.type_name()", "TokenReader.rogue", 43 );
  return (RogueString*)(Rogue_literal_strings[809]);
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init__Token_List( RogueClassPreprocessorTokenReader* THIS, RogueToken_List* _auto_2905_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.init(Token[])", "TokenReader.rogue", 52 );
  THIS->tokens = _auto_2905_0;
  __trace.line = 53;
  THIS->count = THIS->tokens->count;
  __trace.line = 55;
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueClassError* RoguePreprocessorTokenReader__error__String( RogueClassPreprocessorTokenReader* THIS, RogueString* message_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.error(String)", "TokenReader.rogue", 55 );
  __trace.line = 56;
  if (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  __trace.line = 57;
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) )))), message_0 ))))));
  }
  __trace.line = 58;
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

void RoguePreprocessorTokenReader__expand_definition__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.expand_definition(Token)", "TokenReader.rogue", 60 );
  __trace.line = 61;
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(RoguePreprocessor_definitions), ROGUE_ARG((call_ROGUEM68( 4, t_0 ))) )))));
  __trace.line = 62;
  if (!!(entry_1))
  {
    __trace.line = 63;
    if (!!(entry_1->value))
    {
      __trace.line = 64;
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,def_tokens_2,(entry_1->value));
      __trace.line = 65;
      entry_1->value = ((RogueToken_List*)(NULL));
      __trace.line = 66;
      {
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_3491_3,(def_tokens_2));
        RogueInt32 _auto_3492_4 = ((_auto_3491_3->count - 1));
        for (;_auto_3492_4 >= 0;--_auto_3492_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_5,(((RogueClassToken*)(_auto_3491_3->data->objects[_auto_3492_4]))));
          __trace.line = 67;
          if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
          {
            RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), def_t_5 );
          }
          else
          {
            __trace.line = 68;
            RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
          }
        }
      }
      __trace.line = 70;
      entry_1->value = def_tokens_2;
      __trace.line = 71;
      return;
    }
    else
    {
      __trace.line = 73;
      ROGUE_THROW(((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[80] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 4, t_0 ))) )))) )))), Rogue_literal_strings[21] )))) )))) ))));
    }
  }
  else
  {
    __trace.line = 76;
    RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
  }
}

RogueLogical RoguePreprocessorTokenReader__has_another( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.has_another()", "TokenReader.rogue", 79 );
  __trace.line = 80;
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  __trace.line = 81;
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG(THIS->queue->count) )));
}

RogueLogical RoguePreprocessorTokenReader__next_is__TokenType( RogueClassPreprocessorTokenReader* THIS, RogueClassTokenType* type_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.next_is(TokenType)", "TokenReader.rogue", 83 );
  __trace.line = 84;
  if ((THIS->position == THIS->count && THIS->queue->count == 0))
  {
    return (RogueLogical)(false);
  }
  __trace.line = 85;
  return (RogueLogical)(((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))->_type) == ((void*)type_0));
}

RogueClassToken* RoguePreprocessorTokenReader__peek( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.peek()", "TokenReader.rogue", 87 );
  __trace.line = 88;
  if (!!(THIS->queue->count))
  {
    return (RogueClassToken*)(((RogueToken_List__last( ROGUE_ARG(THIS->queue) ))));
  }
  __trace.line = 89;
  return (RogueClassToken*)(((RoguePreprocessorTokenReader__peek__Int32( ROGUE_ARG(THIS), 0 ))));
}

RogueClassToken* RoguePreprocessorTokenReader__peek__Int32( RogueClassPreprocessorTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.peek(Int32)", "TokenReader.rogue", 91 );
  __trace.line = 92;
  if ((THIS->position + num_ahead_0) >= (THIS->count + THIS->queue->count))
  {
    __trace.line = 93;
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  __trace.line = 96;
  while (THIS->queue->count <= num_ahead_0)
  {
    __trace.line = 97;
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueClassToken*)(THIS->tokens->data->objects[THIS->position]))));
    __trace.line = 98;
    ++THIS->position;
    __trace.line = 101;
    if (((void*)t_1->_type) == ((void*)RogueTokenType_identifier))
    {
      __trace.line = 102;
      RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), t_1 );
    }
    else
    {
      __trace.line = 104;
      RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_1 );
    }
  }
  __trace.line = 108;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->queue->data->objects[((THIS->queue->count - num_ahead_0) - 1)])));
}

void RoguePreprocessorTokenReader__push__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.push(Token)", "TokenReader.rogue", 110 );
  __trace.line = 111;
  RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
}

RogueClassToken* RoguePreprocessorTokenReader__read( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.read()", "TokenReader.rogue", 120 );
  __trace.line = 121;
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  __trace.line = 122;
  if (THIS->queue->count == 0)
  {
    ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[81] ))));
  }
  __trace.line = 123;
  return (RogueClassToken*)(((RogueToken_List__remove_last( ROGUE_ARG(THIS->queue) ))));
}

RogueString* RoguePreprocessorTokenReader__read_identifier( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.read_identifier()", "TokenReader.rogue", 125 );
  __trace.line = 126;
  if (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    __trace.line = 127;
    ROGUE_THROW(((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[82] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((call_ROGUEM68( 13, ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[78] )))) )))) ))));
  }
  __trace.line = 129;
  return (RogueString*)((call_ROGUEM68( 4, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS) )))) )));
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init_object( RogueClassPreprocessorTokenReader* THIS )
{
  RogueDebugTrace __trace( "PreprocessorTokenReader.init_object()", "TokenReader.rogue", 43 );
  __trace.line = 47;
  THIS->queue = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  __trace.line = 43;
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueString* RogueCmdConvertToPrimitiveType__type_name( RogueClassCmdConvertToPrimitiveType* THIS )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.type_name()", "Cmd.rogue", 3907 );
  return (RogueString*)(Rogue_literal_strings[1256]);
}

RogueClassCmd* RogueCmdConvertToPrimitiveType__clone__CloneArgs( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.clone(CloneArgs)", "Cmd.rogue", 3909 );
  __trace.line = 3910;
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdConvertToPrimitiveType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToPrimitiveType*,ROGUE_CREATE_OBJECT(CmdConvertToPrimitiveType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((call_ROGUEM99( 10, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

void RogueCmdConvertToPrimitiveType__dispatch__Visitor( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassVisitor* v_0 )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.dispatch(Visitor)", "Cmd.rogue", 78 );
  __trace.line = 79;
  RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) );
}

RogueClassCmd* RogueCmdConvertToPrimitiveType__resolve__Scope( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassScope* scope_0 )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.resolve(Scope)", "Cmd.rogue", 3912 );
  __trace.line = 3913;
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((call_ROGUEM81( 31, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  __trace.line = 3914;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdConvertToPrimitiveType__write_cpp__CPPWriter_Logical( RogueClassCmdConvertToPrimitiveType* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.write_cpp(CPPWriter,Logical)", "CPPWriter.rogue", 2781 );
  __trace.line = 2782;
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[614] )))), ROGUE_ARG(THIS->_target_type->cpp_class_name) )))), Rogue_literal_strings[1065] );
  __trace.line = 2783;
  call_ROGUEM104( 37, ROGUE_ARG(THIS->operand), writer_0, false );
  __trace.line = 2784;
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[566] );
}

RogueClassCmdConvertToPrimitiveType* RogueCmdConvertToPrimitiveType__init_object( RogueClassCmdConvertToPrimitiveType* THIS )
{
  RogueDebugTrace __trace( "CmdConvertToPrimitiveType.init_object()", "Cmd.rogue", 3907 );
  return (RogueClassCmdConvertToPrimitiveType*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Token_List__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Token_List__List__to_String( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Token_List__List*,_auto_3543_2,(THIS));
    RogueInt32 _auto_3544_3 = (0);
    for (;_auto_3544_3 < _auto_3543_2->count;++_auto_3544_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,value_4,(((RogueClassTableEntry_String_Token_List_*)(_auto_3543_2->data->objects[_auto_3544_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Token_List___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Token_List__List__type_name( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[856]);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init_object( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init__Int32( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Token_List_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__init__Int32_TableEntry_String_Token_List_( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Token_List_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].init(Int32,TableEntry<<String,Token[]>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Token_List_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_3251_3 = (initial_capacity_0);
      for (;i_2 <= _auto_3251_3;++i_2)
      {
        RogueTableEntry_String_Token_List__List__add__TableEntry_String_Token_List_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__add__TableEntry_String_Token_List_( RogueTableEntry_String_Token_List__List* THIS, RogueClassTableEntry_String_Token_List_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].add(TableEntry<<String,Token[]>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Token_List__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Token_List__List__capacity( RogueTableEntry_String_Token_List__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Token_List__List* RogueTableEntry_String_Token_List__List__reserve__Int32( RogueTableEntry_String_Token_List__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Token_List_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Token_List__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Token_List_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Token_List__List*)(THIS);
}

RogueString* RogueTableEntry_String_Token_List___to_String( RogueClassTableEntry_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Token_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Token_List___type_name( RogueClassTableEntry_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[741]);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init__String_Token_List_Int32( RogueClassTableEntry_String_Token_List_* THIS, RogueString* _key_0, RogueToken_List* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>.init(String,Token[],Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init_object( RogueClassTableEntry_String_Token_List_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Token[]>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Token_List____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Token[]>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[904]);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].init()", "List.rogue", 10 );
  __trace.line = 11;
  RogueTableEntry_String_Cmd__List__init__Int32( ROGUE_ARG(THIS), 0 );
  __trace.line = 13;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueString* RogueTableEntry_String_Cmd__List__to_String( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].to_String()", "List.rogue", 350 );
  __trace.line = 351;
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  __trace.line = 352;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  __trace.line = 353;
  RogueLogical first_1 = (true);
  __trace.line = 354;
  {
    ROGUE_DEF_LOCAL_REF(RogueTableEntry_String_Cmd__List*,_auto_3591_2,(THIS));
    RogueInt32 _auto_3592_3 = (0);
    for (;_auto_3592_3 < _auto_3591_2->count;++_auto_3592_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,value_4,(((RogueClassTableEntry_String_Cmd_*)(_auto_3591_2->data->objects[_auto_3592_3]))));
      __trace.line = 355;
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        __trace.line = 356;
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      __trace.line = 357;
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        __trace.line = 358;
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueTableEntry_String_Cmd___to_String( value_4 )))) );
      }
    }
  }
  __trace.line = 360;
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  __trace.line = 361;
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTableEntry_String_Cmd__List__type_name( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].type_name()", "List.rogue", 4 );
  return (RogueString*)(Rogue_literal_strings[857]);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init_object( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].init_object()", "List.rogue", 4 );
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init__Int32( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 initial_capacity_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].init(Int32)", "List.rogue", 13 );
  __trace.line = 14;
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Cmd_*), true );
  }
  __trace.line = 16;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__init__Int32_TableEntry_String_Cmd_( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 initial_capacity_0, RogueClassTableEntry_String_Cmd_* initial_value_1 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].init(Int32,TableEntry<<String,Cmd>>)", "List.rogue", 16 );
  __trace.line = 17;
  if (!!(initial_capacity_0))
  {
    __trace.line = 18;
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTableEntry_String_Cmd_*), true );
    __trace.line = 19;
    {
      RogueInt32 i_2 = (1);
      RogueInt32 _auto_3437_3 = (initial_capacity_0);
      for (;i_2 <= _auto_3437_3;++i_2)
      {
        RogueTableEntry_String_Cmd__List__add__TableEntry_String_Cmd_( ROGUE_ARG(THIS), initial_value_1 );
      }
    }
  }
  __trace.line = 22;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__add__TableEntry_String_Cmd_( RogueTableEntry_String_Cmd__List* THIS, RogueClassTableEntry_String_Cmd_* value_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].add(TableEntry<<String,Cmd>>)", "List.rogue", 36 );
  __trace.line = 308;
  ((RogueTableEntry_String_Cmd__List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->objects[THIS->count] = value_0;
  __trace.line = 38;
  ++THIS->count;
  __trace.line = 39;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueInt32 RogueTableEntry_String_Cmd__List__capacity( RogueTableEntry_String_Cmd__List* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].capacity()", "List.rogue", 46 );
  __trace.line = 47;
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  __trace.line = 48;
  return (RogueInt32)(THIS->data->count);
}

RogueTableEntry_String_Cmd__List* RogueTableEntry_String_Cmd__List__reserve__Int32( RogueTableEntry_String_Cmd__List* THIS, RogueInt32 additional_count_0 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>[].reserve(Int32)", "List.rogue", 239 );
  __trace.line = 240;
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  __trace.line = 242;
  if (!(!!(THIS->data)))
  {
    __trace.line = 243;
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    __trace.line = 244;
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Cmd_*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    __trace.line = 246;
    RogueInt32 cap_2 = (((RogueTableEntry_String_Cmd__List__capacity( ROGUE_ARG(THIS) ))));
    __trace.line = 247;
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    __trace.line = 248;
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTableEntry_String_Cmd_*), true )));
    __trace.line = 249;
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    __trace.line = 250;
    THIS->data = new_data_3;
  }
  __trace.line = 253;
  return (RogueTableEntry_String_Cmd__List*)(THIS);
}

RogueString* RogueTableEntry_String_Cmd___to_String( RogueClassTableEntry_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>.to_String()", "Table.rogue", 229 );
  __trace.line = 230;
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[94] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Cmd___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[572] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[216] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[34] )))) ))));
}

RogueString* RogueTableEntry_String_Cmd___type_name( RogueClassTableEntry_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>.type_name()", "Table.rogue", 216 );
  return (RogueString*)(Rogue_literal_strings[742]);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init__String_Cmd_Int32( RogueClassTableEntry_String_Cmd_* THIS, RogueString* _key_0, RogueClassCmd* _value_1, RogueInt32 _hash_2 )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>.init(String,Cmd,Int32)", "Table.rogue", 224 );
  __trace.line = 225;
  THIS->key = _key_0;
  __trace.line = 226;
  THIS->value = _value_1;
  __trace.line = 227;
  THIS->hash = _hash_2;
  __trace.line = 229;
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init_object( RogueClassTableEntry_String_Cmd_* THIS )
{
  RogueDebugTrace __trace( "TableEntry<<String,Cmd>>.init_object()", "Table.rogue", 216 );
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueString* RogueArray_TableEntry_String_Cmd____type_name( RogueArray* THIS )
{
  RogueDebugTrace __trace( "Array<<TableEntry<<String,Cmd>>>>.type_name()", "Array.rogue", 16 );
  return (RogueString*)(Rogue_literal_strings[905]);
}

RogueString* RogueNativeCodeToken__to_String( RogueClassNativeCodeToken* THIS )
{
  RogueDebugTrace __trace( "NativeCodeToken.to_String()", "Token.rogue", 195 );
  __trace.line = 196;
  return (RogueString*)(THIS->value);
}

RogueString* RogueNativeCodeToken__type_name( RogueClassNativeCodeToken* THIS )
{
  RogueDebugTrace __trace( "NativeCodeToken.type_name()", "Token.rogue", 184 );
  return (RogueString*)(Rogue_literal_strings[1259]);
}

RogueString* RogueNativeCodeToken__quoted_name( RogueClassNativeCodeToken* THIS )
{
  RogueDebugTrace __trace( "NativeCodeToken.quoted_name()", "Token.rogue", 191 );
  __trace.line = 192;
  if (((void*)THIS->_type) == ((void*)RogueTokenType_keyword_nativeHeader))
  {
    return (RogueString*)(Rogue_literal_strings[170]);
  }
  __trace.line = 193;
  return (RogueString*)(Rogue_literal_strings[169]);
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init_object( RogueClassNativeCodeToken* THIS )
{
  RogueDebugTrace __trace( "NativeCodeToken.init_object()", "Token.rogue", 184 );
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init__TokenType_String( RogueClassNativeCodeToken* THIS, RogueClassTokenType* _auto_3489_0, RogueString* _auto_3490_1 )
{
  RogueDebugTrace __trace( "NativeCodeToken.init(TokenType,String)", "Token.rogue", 189 );
  THIS->value = _auto_3490_1;
  THIS->_type = _auto_3489_0;
  __trace.line = 191;
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueString* RogueSystemEnvironment__get__String( RogueClassSystemEnvironment THIS, RogueString* name_0 )
{
  RogueDebugTrace __trace( "SystemEnvironment.get(String)", "System.rogue", 98 );
  __trace.line = 99;
  ROGUE_DEF_LOCAL_REF(RogueString*,result_1,0);
  __trace.line = 101;
  char* c_result = getenv( (char*)name_0->utf8 );
  if (c_result)
  {
    result_1 = RogueString_create_from_utf8( c_result );
  }

  __trace.line = 107;
  return (RogueString*)(((((result_1))) ? (result_1) : ((RogueString*)(NULL))));
}


void Rogue_configure( int argc, const char* argv[] )
{
  if (Rogue_configured) return;
  Rogue_configured = 1;
  
  Rogue_argc = argc;
  Rogue_argv = argv;
  
  Rogue_configure_gc();
  Rogue_configure_types();
  std::set_terminate( Rogue_terminate_handler );
  RogueTypeException = &Rogue_types[ 0 ];
  RogueTypeObject = &Rogue_types[ 1 ];
  RogueTypeString = &Rogue_types[ 2 ];
  RogueTypeStackTrace = &Rogue_types[ 3 ];
  RogueTypeInt32 = &Rogue_types[ 4 ];
  RogueTypeInt64 = &Rogue_types[ 5 ];
  RogueTypeLogical = &Rogue_types[ 6 ];
  RogueTypeTypeInfo = &Rogue_types[ 7 ];
  RogueTypeStringBuilder = &Rogue_types[ 8 ];
  RogueTypeByte_List = &Rogue_types[ 9 ];
  RogueTypeByte = &Rogue_types[ 10 ];
  RogueTypeGenericList = &Rogue_types[ 11 ];
  RogueTypeCharacter_List = &Rogue_types[ 12 ];
  RogueTypeCharacter = &Rogue_types[ 13 ];
  RogueTypeReal64 = &Rogue_types[ 14 ];
  RogueTypeTable_String_String_ = &Rogue_types[ 15 ];
  RogueTypeString_List = &Rogue_types[ 16 ];
  RogueTypeArray = &Rogue_types[ 18 ];
  RogueTypeStringReader = &Rogue_types[ 19 ];
  RogueTypeReader_Character_ = &Rogue_types[ 20 ];
  RogueTypeReader_String_ = &Rogue_types[ 21 ];
  RogueTypeGlobal = &Rogue_types[ 22 ];
  RogueTypePrintWriterAspect_Global_global_output_buffer_ = &Rogue_types[ 23 ];
  RogueTypePrintWriter = &Rogue_types[ 24 ];
  RogueTypeFunction___List = &Rogue_types[ 25 ];
  RogueTypeFunction__ = &Rogue_types[ 26 ];
  RogueTypeFunction_81 = &Rogue_types[ 27 ];
  RogueTypeRogueC = &Rogue_types[ 28 ];
  RogueTypeConsole = &Rogue_types[ 30 ];
  RogueTypePrintWriterAspect_Console_output_buffer_ = &Rogue_types[ 31 ];
  RogueTypeProgram = &Rogue_types[ 32 ];
  RogueTypeTemplate_List = &Rogue_types[ 33 ];
  RogueTypeTemplate = &Rogue_types[ 34 ];
  RogueTypeTable_String_Template_ = &Rogue_types[ 35 ];
  RogueTypeTable_String_Augment_List_ = &Rogue_types[ 36 ];
  RogueTypeMethod = &Rogue_types[ 37 ];
  RogueTypeProperty_List = &Rogue_types[ 38 ];
  RogueTypeProperty = &Rogue_types[ 39 ];
  RogueTypeTable_String_Method_List_ = &Rogue_types[ 40 ];
  RogueTypeType_List = &Rogue_types[ 41 ];
  RogueTypeType = &Rogue_types[ 42 ];
  RogueTypeTable_String_Type_ = &Rogue_types[ 43 ];
  RogueTypeTable_String_Int32_ = &Rogue_types[ 44 ];
  RogueTypeTable_String_String_List_ = &Rogue_types[ 45 ];
  RogueTypeTableEntry_String_Int32_ = &Rogue_types[ 46 ];
  RogueTypeTable_Int32_Template_ = &Rogue_types[ 47 ];
  RogueTypeAttributes = &Rogue_types[ 48 ];
  RogueTypeToken_List = &Rogue_types[ 49 ];
  RogueTypeToken = &Rogue_types[ 50 ];
  RogueTypeError = &Rogue_types[ 51 ];
  RogueTypeRogueError = &Rogue_types[ 52 ];
  RogueTypeCmdAccess = &Rogue_types[ 53 ];
  RogueTypeCmd = &Rogue_types[ 54 ];
  RogueTypeCmdArgs = &Rogue_types[ 55 ];
  RogueTypeCmd_List = &Rogue_types[ 56 ];
  RogueTypeCmdNamedArg_List = &Rogue_types[ 57 ];
  RogueTypeCmdNamedArg = &Rogue_types[ 58 ];
  RogueTypeCmdStatementList = &Rogue_types[ 59 ];
  RogueTypeCmdLabel = &Rogue_types[ 60 ];
  RogueTypeCmdReturn = &Rogue_types[ 62 ];
  RogueTypeCmdStatement = &Rogue_types[ 63 ];
  RogueTypeTokenType = &Rogue_types[ 64 ];
  RogueTypeScope = &Rogue_types[ 66 ];
  RogueTypeMethod_List = &Rogue_types[ 67 ];
  RogueTypePlugin_List = &Rogue_types[ 70 ];
  RogueTypePlugin = &Rogue_types[ 71 ];
  RogueTypeFunction_Type_RETURNSLogical = &Rogue_types[ 73 ];
  RogueTypeFunction_229 = &Rogue_types[ 74 ];
  RogueTypeFunction_230 = &Rogue_types[ 75 ];
  RogueTypeCPPWriter = &Rogue_types[ 76 ];
  RogueTypeTable_String_Method_ = &Rogue_types[ 77 ];
  RogueTypeLocal_List = &Rogue_types[ 78 ];
  RogueTypeLocal = &Rogue_types[ 79 ];
  RogueTypeInt32_List = &Rogue_types[ 81 ];
  RogueTypeMath = &Rogue_types[ 83 ];
  RogueTypeSystem = &Rogue_types[ 85 ];
  RogueTypeTable_String_TypeInfo_ = &Rogue_types[ 86 ];
  RogueTypeReader_Byte_ = &Rogue_types[ 87 ];
  RogueTypeWriter_Byte_ = &Rogue_types[ 88 ];
  RogueTypeTableEntry_String_String__List = &Rogue_types[ 90 ];
  RogueTypeTableEntry_String_String_ = &Rogue_types[ 91 ];
  RogueTypeTable_String_Logical_ = &Rogue_types[ 93 ];
  RogueTypeParser_List = &Rogue_types[ 94 ];
  RogueTypeParser = &Rogue_types[ 95 ];
  RogueTypeTable_String_ParseReader_ = &Rogue_types[ 96 ];
  RogueTypeStopwatch = &Rogue_types[ 97 ];
  RogueTypeFile = &Rogue_types[ 98 ];
  RogueTypeCmdMakeRequisite = &Rogue_types[ 100 ];
  RogueTypeLineReader = &Rogue_types[ 101 ];
  RogueTypeFunction_545 = &Rogue_types[ 102 ];
  RogueTypeFunction__RETURNSLogical = &Rogue_types[ 103 ];
  RogueTypeTypeParameter_List = &Rogue_types[ 104 ];
  RogueTypeTypeParameter = &Rogue_types[ 105 ];
  RogueTypeAugment_List = &Rogue_types[ 106 ];
  RogueTypeAugment = &Rogue_types[ 107 ];
  RogueTypeTable_String_TokenType_ = &Rogue_types[ 109 ];
  RogueTypeLiteralCharacterToken = &Rogue_types[ 110 ];
  RogueTypeLiteralInt64Token = &Rogue_types[ 111 ];
  RogueTypeLiteralInt32Token = &Rogue_types[ 112 ];
  RogueTypeLiteralReal64Token = &Rogue_types[ 113 ];
  RogueTypeStringDataToken = &Rogue_types[ 114 ];
  RogueTypeTable_String_TypeSpecializer_ = &Rogue_types[ 116 ];
  RogueTypeTypeSpecializer = &Rogue_types[ 118 ];
  RogueTypeTypeSpecializer_List = &Rogue_types[ 119 ];
  RogueTypeTableEntry_String_Template__List = &Rogue_types[ 120 ];
  RogueTypeTableEntry_String_Template_ = &Rogue_types[ 121 ];
  RogueTypeTableEntry_String_Augment_List__List = &Rogue_types[ 123 ];
  RogueTypeTableEntry_String_Augment_List_ = &Rogue_types[ 124 ];
  RogueTypeCmdLabel_List = &Rogue_types[ 126 ];
  RogueTypeTable_String_CmdLabel_ = &Rogue_types[ 127 ];
  RogueTypeMethodTemplate = &Rogue_types[ 128 ];
  RogueTypeCloneArgs = &Rogue_types[ 129 ];
  RogueTypeCloneMethodArgs = &Rogue_types[ 130 ];
  RogueTypeVisitor = &Rogue_types[ 131 ];
  RogueTypeCmdAssert = &Rogue_types[ 132 ];
  RogueTypeCmdRequire = &Rogue_types[ 133 ];
  RogueTypeCmdAssign = &Rogue_types[ 134 ];
  RogueTypeCmdLocalDeclaration = &Rogue_types[ 135 ];
  RogueTypeCmdBlock = &Rogue_types[ 136 ];
  RogueTypeCmdControlStructure = &Rogue_types[ 137 ];
  RogueTypeCmdIf = &Rogue_types[ 138 ];
  RogueTypeCmdSwitch = &Rogue_types[ 139 ];
  RogueTypeCmdWhich = &Rogue_types[ 140 ];
  RogueTypeCmdWhichCase = &Rogue_types[ 141 ];
  RogueTypeCmdContingent = &Rogue_types[ 142 ];
  RogueTypeCmdGenericLoop = &Rogue_types[ 143 ];
  RogueTypeCmdElementAccess = &Rogue_types[ 144 ];
  RogueTypeCmdEnsure = &Rogue_types[ 145 ];
  RogueTypeCmdForEach = &Rogue_types[ 146 ];
  RogueTypeCmdFormattedString = &Rogue_types[ 147 ];
  RogueTypeCmdTry = &Rogue_types[ 148 ];
  RogueTypeCmdCatch = &Rogue_types[ 149 ];
  RogueTypeCmdThrow = &Rogue_types[ 150 ];
  RogueTypeCmdEscape = &Rogue_types[ 151 ];
  RogueTypeCmdNextIteration = &Rogue_types[ 152 ];
  RogueTypeCmdNecessary = &Rogue_types[ 153 ];
  RogueTypeCmdSufficient = &Rogue_types[ 154 ];
  RogueTypeCmdLiteral = &Rogue_types[ 155 ];
  RogueTypeCmdLiteralString = &Rogue_types[ 156 ];
  RogueTypeCmdCreateObject = &Rogue_types[ 157 ];
  RogueTypeCmdCreateCompound = &Rogue_types[ 158 ];
  RogueTypeCmdThisContext = &Rogue_types[ 159 ];
  RogueTypeCmdReadSingleton = &Rogue_types[ 160 ];
  RogueTypeCmdWriteSingleton = &Rogue_types[ 161 ];
  RogueTypeCmdReadLocal = &Rogue_types[ 162 ];
  RogueTypeCmdWriteLocal = &Rogue_types[ 163 ];
  RogueTypeCmdReadGlobal = &Rogue_types[ 164 ];
  RogueTypeCmdWriteGlobal = &Rogue_types[ 165 ];
  RogueTypeCmdReadProperty = &Rogue_types[ 166 ];
  RogueTypeCmdWriteProperty = &Rogue_types[ 167 ];
  RogueTypeCmdCall = &Rogue_types[ 168 ];
  RogueTypeCmdCallDynamicMethod = &Rogue_types[ 169 ];
  RogueTypeCmdCallMethod = &Rogue_types[ 170 ];
  RogueTypeCmdCallPriorMethod = &Rogue_types[ 171 ];
  RogueTypeCmdRange = &Rogue_types[ 172 ];
  RogueTypeCmdUnary = &Rogue_types[ 173 ];
  RogueTypeCmdBinary = &Rogue_types[ 174 ];
  RogueTypeCmdAdjustLocal = &Rogue_types[ 175 ];
  RogueTypeCmdAdjustProperty = &Rogue_types[ 176 ];
  RogueTypeCmdAdjustGlobal = &Rogue_types[ 177 ];
  RogueTypeCmdModifyAndAssignLocal = &Rogue_types[ 178 ];
  RogueTypeCmdResolvedModifyAndAssign = &Rogue_types[ 179 ];
  RogueTypeCmdModifyAndAssignGlobal = &Rogue_types[ 180 ];
  RogueTypeCmdModifyAndAssignProperty = &Rogue_types[ 181 ];
  RogueTypeCmdCreateArray = &Rogue_types[ 182 ];
  RogueTypeCmdReadArrayElement = &Rogue_types[ 183 ];
  RogueTypeCmdReadArrayCount = &Rogue_types[ 184 ];
  RogueTypeCmdWriteArrayElement = &Rogue_types[ 185 ];
  RogueTypeCmdTypeOperator = &Rogue_types[ 186 ];
  RogueTypeCmdTaskControl = &Rogue_types[ 187 ];
  RogueTypeCmdTrace = &Rogue_types[ 188 ];
  RogueTypeCmdInlineNative = &Rogue_types[ 189 ];
  RogueTypeCmdNoAction = &Rogue_types[ 190 ];
  RogueTypeCmdSelect = &Rogue_types[ 191 ];
  RogueTypeCmdSelectCase = &Rogue_types[ 192 ];
  RogueTypeCmdControlStructure_List = &Rogue_types[ 193 ];
  RogueTypeCmdLiteralThis = &Rogue_types[ 194 ];
  RogueTypeCmdLiteralInt32 = &Rogue_types[ 196 ];
  RogueTypeCmdCompareNE = &Rogue_types[ 197 ];
  RogueTypeCmdComparison = &Rogue_types[ 198 ];
  RogueTypeTaskArgs = &Rogue_types[ 199 ];
  RogueTypeCmdTaskControlSection = &Rogue_types[ 201 ];
  RogueTypeTableEntry_String_Method_List__List = &Rogue_types[ 202 ];
  RogueTypeTableEntry_String_Method_List_ = &Rogue_types[ 203 ];
  RogueTypeDefinition_List = &Rogue_types[ 205 ];
  RogueTypeDefinition = &Rogue_types[ 206 ];
  RogueTypeTable_String_Definition_ = &Rogue_types[ 207 ];
  RogueTypeTable_String_Property_ = &Rogue_types[ 208 ];
  RogueTypeMethodTemplates = &Rogue_types[ 209 ];
  RogueTypeCmdLiteralNull = &Rogue_types[ 210 ];
  RogueTypeCmdLiteralLogical = &Rogue_types[ 211 ];
  RogueTypeUpdateThisTypeVisitor = &Rogue_types[ 213 ];
  RogueTypeTableEntry_String_Type__List = &Rogue_types[ 214 ];
  RogueTypeTableEntry_String_Type_ = &Rogue_types[ 215 ];
  RogueTypeTableEntry_String_Int32__List = &Rogue_types[ 217 ];
  RogueTypeTableEntry_String_String_List__List = &Rogue_types[ 219 ];
  RogueTypeTableEntry_String_String_List_ = &Rogue_types[ 220 ];
  RogueTypeTableEntry_Int32_Template__List = &Rogue_types[ 222 ];
  RogueTypeTableEntry_Int32_Template_ = &Rogue_types[ 223 ];
  RogueTypeListRebuilder_Token_ = &Rogue_types[ 225 ];
  RogueTypeCmdCastToType = &Rogue_types[ 226 ];
  RogueTypeCmdLogicalize = &Rogue_types[ 227 ];
  RogueTypeMacroArgs = &Rogue_types[ 229 ];
  RogueTypeFnParam_List = &Rogue_types[ 230 ];
  RogueTypeFnParam = &Rogue_types[ 231 ];
  RogueTypeCmdCreateFunction = &Rogue_types[ 232 ];
  RogueTypeFnArg_List = &Rogue_types[ 233 ];
  RogueTypeFnArg = &Rogue_types[ 234 ];
  RogueTypeTraceUsedCodeVisitor = &Rogue_types[ 235 ];
  RogueTypeCmdBitwiseAnd = &Rogue_types[ 236 ];
  RogueTypeCmdBitwiseOp = &Rogue_types[ 237 ];
  RogueTypeCmdPower = &Rogue_types[ 238 ];
  RogueTypeCmdSubtract = &Rogue_types[ 239 ];
  RogueTypeCmdMod = &Rogue_types[ 240 ];
  RogueTypeCmdAdd = &Rogue_types[ 241 ];
  RogueTypeCmdDivide = &Rogue_types[ 242 ];
  RogueTypeCmdBitwiseXor = &Rogue_types[ 243 ];
  RogueTypeCmdMultiply = &Rogue_types[ 244 ];
  RogueTypeCmdBitwiseOr = &Rogue_types[ 245 ];
  RogueTypeFunction_CmdNamedArg_RETURNSLogical = &Rogue_types[ 246 ];
  RogueTypeListRebuilder_CmdNamedArg_ = &Rogue_types[ 247 ];
  RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical = &Rogue_types[ 248 ];
  RogueTypeQuicksort_CmdNamedArg_ = &Rogue_types[ 249 ];
  RogueTypeCmdCallInlineNativeRoutine = &Rogue_types[ 250 ];
  RogueTypeCmdCallInlineNative = &Rogue_types[ 251 ];
  RogueTypeCmdCallNativeRoutine = &Rogue_types[ 252 ];
  RogueTypeCmdCallRoutine = &Rogue_types[ 253 ];
  RogueTypeCmdCallInlineNativeMethod = &Rogue_types[ 254 ];
  RogueTypeCmdCallNativeMethod = &Rogue_types[ 255 ];
  RogueTypeCmdCallAspectMethod = &Rogue_types[ 256 ];
  RogueTypeCandidateMethods = &Rogue_types[ 257 ];
  RogueTypeFunction_1409 = &Rogue_types[ 258 ];
  RogueTypeFunction_1410 = &Rogue_types[ 259 ];
  RogueTypeTableEntry_String_Method__List = &Rogue_types[ 262 ];
  RogueTypeTableEntry_String_Method_ = &Rogue_types[ 263 ];
  RogueTypeTableEntry_String_TypeInfo__List = &Rogue_types[ 265 ];
  RogueTypeTableEntry_String_TypeInfo_ = &Rogue_types[ 266 ];
  RogueTypeTableEntry_String_Logical__List = &Rogue_types[ 268 ];
  RogueTypeTableEntry_String_Logical_ = &Rogue_types[ 269 ];
  RogueTypeTokenReader = &Rogue_types[ 271 ];
  RogueTypeTokenizer = &Rogue_types[ 272 ];
  RogueTypeParseReader = &Rogue_types[ 273 ];
  RogueTypePreprocessor = &Rogue_types[ 274 ];
  RogueTypeEOLToken = &Rogue_types[ 275 ];
  RogueTypeCmdNativeHeader = &Rogue_types[ 276 ];
  RogueTypeCmdNativeCode = &Rogue_types[ 277 ];
  RogueTypeCmdAwait = &Rogue_types[ 278 ];
  RogueTypeCmdYield = &Rogue_types[ 279 ];
  RogueTypeCmdAdjust = &Rogue_types[ 280 ];
  RogueTypeCmdModifyAndAssign = &Rogue_types[ 281 ];
  RogueTypeCmdWhichCase_List = &Rogue_types[ 282 ];
  RogueTypeCmdCatch_List = &Rogue_types[ 283 ];
  RogueTypeCmdCompareLE = &Rogue_types[ 284 ];
  RogueTypeCmdRangeUpTo = &Rogue_types[ 285 ];
  RogueTypeCmdRangeUpToLessThan = &Rogue_types[ 286 ];
  RogueTypeCmdCompareLT = &Rogue_types[ 287 ];
  RogueTypeCmdCompareGE = &Rogue_types[ 288 ];
  RogueTypeCmdRangeDownTo = &Rogue_types[ 289 ];
  RogueTypeCmdLogicalXor = &Rogue_types[ 290 ];
  RogueTypeCmdBinaryLogical = &Rogue_types[ 291 ];
  RogueTypeCmdLogicalOr = &Rogue_types[ 292 ];
  RogueTypeCmdLogicalAnd = &Rogue_types[ 293 ];
  RogueTypeCmdCompareEQ = &Rogue_types[ 294 ];
  RogueTypeCmdCompareIs = &Rogue_types[ 295 ];
  RogueTypeCmdCompareIsNot = &Rogue_types[ 296 ];
  RogueTypeCmdCompareGT = &Rogue_types[ 297 ];
  RogueTypeCmdInstanceOf = &Rogue_types[ 298 ];
  RogueTypeCmdLogicalNot = &Rogue_types[ 299 ];
  RogueTypeCmdBitwiseShiftLeft = &Rogue_types[ 300 ];
  RogueTypeCmdBitwiseShiftRight = &Rogue_types[ 301 ];
  RogueTypeCmdBitwiseShiftRightX = &Rogue_types[ 302 ];
  RogueTypeCmdNegate = &Rogue_types[ 303 ];
  RogueTypeCmdBitwiseNot = &Rogue_types[ 304 ];
  RogueTypeCmdListConvert = &Rogue_types[ 305 ];
  RogueTypeCmdConvertToType = &Rogue_types[ 306 ];
  RogueTypeCmdCreateCallback = &Rogue_types[ 307 ];
  RogueTypeCmdAs = &Rogue_types[ 308 ];
  RogueTypeCmdDefaultValue = &Rogue_types[ 309 ];
  RogueTypeCmdLiteralReal64 = &Rogue_types[ 310 ];
  RogueTypeCmdLiteralInt64 = &Rogue_types[ 311 ];
  RogueTypeCmdLiteralCharacter = &Rogue_types[ 312 ];
  RogueTypeCmdCreateList = &Rogue_types[ 313 ];
  RogueTypeCmdSelectCase_List = &Rogue_types[ 314 ];
  RogueTypeCmdTypedLiteralList = &Rogue_types[ 315 ];
  RogueTypeTableEntry_String_ParseReader__List = &Rogue_types[ 316 ];
  RogueTypeTableEntry_String_ParseReader_ = &Rogue_types[ 317 ];
  RogueTypeIOError = &Rogue_types[ 319 ];
  RogueTypeFileReader = &Rogue_types[ 320 ];
  RogueTypeFileWriter = &Rogue_types[ 321 ];
  RogueTypeUTF8Reader = &Rogue_types[ 322 ];
  RogueTypeTableEntry_String_TokenType__List = &Rogue_types[ 323 ];
  RogueTypeTableEntry_String_TokenType_ = &Rogue_types[ 324 ];
  RogueTypeTableEntry_String_TypeSpecializer__List = &Rogue_types[ 326 ];
  RogueTypeTableEntry_String_TypeSpecializer_ = &Rogue_types[ 327 ];
  RogueTypeTableEntry_String_CmdLabel__List = &Rogue_types[ 329 ];
  RogueTypeTableEntry_String_CmdLabel_ = &Rogue_types[ 330 ];
  RogueTypeToken_List_List = &Rogue_types[ 332 ];
  RogueTypeTable_String_Token_List_ = &Rogue_types[ 333 ];
  RogueTypeCmdTaskControlSection_List = &Rogue_types[ 337 ];
  RogueTypeRequirementError = &Rogue_types[ 340 ];
  RogueTypeCmdCallStaticMethod = &Rogue_types[ 342 ];
  RogueTypeListReader_CmdSelectCase_ = &Rogue_types[ 343 ];
  RogueTypeReader_CmdSelectCase_ = &Rogue_types[ 344 ];
  RogueTypeTableEntry_String_Definition__List = &Rogue_types[ 345 ];
  RogueTypeTableEntry_String_Definition_ = &Rogue_types[ 346 ];
  RogueTypeTableEntry_String_Property__List = &Rogue_types[ 348 ];
  RogueTypeTableEntry_String_Property_ = &Rogue_types[ 349 ];
  RogueTypeMethodTemplate_List = &Rogue_types[ 351 ];
  RogueTypeTable_String_Cmd_ = &Rogue_types[ 353 ];
  RogueTypeDirectiveTokenType = &Rogue_types[ 355 ];
  RogueTypeStructuralDirectiveTokenType = &Rogue_types[ 356 ];
  RogueTypeEOLTokenType = &Rogue_types[ 357 ];
  RogueTypeStructureTokenType = &Rogue_types[ 358 ];
  RogueTypeNativeCodeTokenType = &Rogue_types[ 359 ];
  RogueTypeModifyAndAssignTokenType = &Rogue_types[ 360 ];
  RogueTypePreprocessorTokenReader = &Rogue_types[ 361 ];
  RogueTypeCmdConvertToPrimitiveType = &Rogue_types[ 362 ];
  RogueTypeTableEntry_String_Token_List__List = &Rogue_types[ 363 ];
  RogueTypeTableEntry_String_Token_List_ = &Rogue_types[ 364 ];
  RogueTypeTableEntry_String_Cmd__List = &Rogue_types[ 366 ];
  RogueTypeTableEntry_String_Cmd_ = &Rogue_types[ 367 ];
  RogueTypeNativeCodeToken = &Rogue_types[ 369 ];
  RogueTypeOptionalInt32 = &Rogue_types[ 370 ];
  RogueTypeOptionalByte = &Rogue_types[ 371 ];
  RogueTypeSystemEnvironment = &Rogue_types[ 372 ];
  RogueTypeOptionalCharacter = &Rogue_types[ 373 ];

  Rogue_literal_strings[0] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "", 0 ) ); 
  Rogue_literal_strings[1] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "null", 4 ) ); 
  Rogue_literal_strings[2] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_GC_THRESHOLD", 18 ) ); 
  Rogue_literal_strings[3] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MB", 2 ) ); 
  Rogue_literal_strings[4] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "KB", 2 ) ); 
  Rogue_literal_strings[5] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/Libraries/", 11 ) ); 
  Rogue_literal_strings[6] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--", 2 ) ); 
  Rogue_literal_strings[7] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--output", 8 ) ); 
  Rogue_literal_strings[8] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n", 1 ) ); 
  Rogue_literal_strings[9] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "===============================================================================", 79 ) ); 
  Rogue_literal_strings[10] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR in \"", 10 ) ); 
  Rogue_literal_strings[11] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"  line ", 8 ) ); 
  Rogue_literal_strings[12] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-9223372036854775808", 20 ) ); 
  Rogue_literal_strings[13] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", column ", 9 ) ); 
  Rogue_literal_strings[14] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR", 5 ) ); 
  Rogue_literal_strings[15] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Output filepath expected after \"--output=\".", 43 ) ); 
  Rogue_literal_strings[16] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--execute", 9 ) ); 
  Rogue_literal_strings[17] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--debug", 7 ) ); 
  Rogue_literal_strings[18] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries", 11 ) ); 
  Rogue_literal_strings[19] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more paths expected after \"--libraries=\".", 48 ) ); 
  Rogue_literal_strings[20] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries option specifies non-existent folder \"", 50 ) ); 
  Rogue_literal_strings[21] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\".", 2 ) ); 
  Rogue_literal_strings[22] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--main", 6 ) ); 
  Rogue_literal_strings[23] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected value for '--main' option.", 37 ) ); 
  Rogue_literal_strings[24] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--package", 9 ) ); 
  Rogue_literal_strings[25] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Java package name expected after \"--package=\" (e.g. \"com.developer.app\").", 73 ) ); 
  Rogue_literal_strings[26] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--requisite", 11 ) ); 
  Rogue_literal_strings[27] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--target", 8 ) ); 
  Rogue_literal_strings[28] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more comma-separated target names expected after \"--target=\" (e.g. \"C++\").", 81 ) ); 
  Rogue_literal_strings[29] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc", 4 ) ); 
  Rogue_literal_strings[30] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "auto", 4 ) ); 
  Rogue_literal_strings[31] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "manual", 6 ) ); 
  Rogue_literal_strings[32] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "boehm", 5 ) ); 
  Rogue_literal_strings[33] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown GC mode (--gc=", 22 ) ); 
  Rogue_literal_strings[34] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")", 1 ) ); 
  Rogue_literal_strings[35] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc-threshold", 14 ) ); 
  Rogue_literal_strings[36] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A value such as 1.1MB, 512K, or 65536 expected after \"--gc-threshold=\".", 71 ) ); 
  Rogue_literal_strings[37] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mb", 2 ) ); 
  Rogue_literal_strings[38] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "kb", 2 ) ); 
  Rogue_literal_strings[39] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--plugin-test", 13 ) ); 
  Rogue_literal_strings[40] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Test", 4 ) ); 
  Rogue_literal_strings[41] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--test", 6 ) ); 
  Rogue_literal_strings[42] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--version", 9 ) ); 
  Rogue_literal_strings[43] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected argument to --version option.", 40 ) ); 
  Rogue_literal_strings[44] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown option '", 16 ) ); 
  Rogue_literal_strings[45] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'.", 2 ) ); 
  Rogue_literal_strings[46] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "C++", 3 ) ); 
  Rogue_literal_strings[47] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1.0.55.6", 8 ) ); 
  Rogue_literal_strings[48] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "April 18, 2016", 14 ) ); 
  Rogue_literal_strings[49] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue Compiler v", 16 ) ); 
  Rogue_literal_strings[50] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nUSAGE\n  roguec [options] file1.rogue [file2.rogue ...]\n\nOPTIONS\n  --main\n    Include a main() function in the output file.\n\n  --debug\n    Enables exception stack traces.\n\n  --execute[=\"args\"]\n    Use command line directives to compile and run the output of the\n    compiled .rogue program.  Automatically enables the --main option.\n\n  --gc[=[manual|auto|boehm]]\n    Set the garbage collection mode:\n      (no --gc)   - Manual GC mode, the default (see below).\n      --gc        - Auto GC mode (see below).\n      --gc=manual - Rogue_collect_garbage() must be called in-between calls\n                    into the Rogue runtime.\n      --gc=auto   - Rogue collects garbage as it executes.  Slower than\n                    'manual' without optimizations enabled.\n      --gc=boehm  - Uses the Boehm garbage collector.  The Boehm's GC library\n                    must be obtained separately and linked in.\n\n  --gc-threshold={number}[MB|K]\n    Specifies the default garbage collection threshold of the compiled program.\n    Default is 1MB.  If neither MB nor K is specified then the number is\n    assumed to be bytes.\n\n  --libraries=\"path1[;path2...]\"\n    Add one or more additional library folders to the search path.\n\n  --output=destpath/[filename]\n    Specify the destination folder and optionally the base filename for the\n    output.\n\n  --requisite=[ClassName|ClassName.method_name(ParamType1,ParamType2,...)],...\n\n  --target=", 1424 ) ); 
  Rogue_literal_strings[51] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]", 1 ) ); 
  Rogue_literal_strings[52] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",Mac,Windows,iOS,Android,...]\n", 30 ) ); 
  Rogue_literal_strings[53] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n  --test\n    Compiled program includes any defined unit tests and runs them on launch.\n    Enables --debug automatically.\n\n  --version\n    Print the version number and release date.", 182 ) ); 
  Rogue_literal_strings[54] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue", 5 ) ); 
  Rogue_literal_strings[55] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_program", 13 ) ); 
  Rogue_literal_strings[56] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Internal", 8 ) ); 
  Rogue_literal_strings[57] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Built-in Type]", 15 ) ); 
  Rogue_literal_strings[58] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real64", 6 ) ); 
  Rogue_literal_strings[59] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real32", 6 ) ); 
  Rogue_literal_strings[60] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int64", 5 ) ); 
  Rogue_literal_strings[61] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32", 5 ) ); 
  Rogue_literal_strings[62] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character", 9 ) ); 
  Rogue_literal_strings[63] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte", 4 ) ); 
  Rogue_literal_strings[64] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Logical", 7 ) ); 
  Rogue_literal_strings[65] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object", 6 ) ); 
  Rogue_literal_strings[66] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String", 6 ) ); 
  Rogue_literal_strings[67] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringBuilder", 13 ) ); 
  Rogue_literal_strings[68] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeInfo", 8 ) ); 
  Rogue_literal_strings[69] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeArray", 11 ) ); 
  Rogue_literal_strings[70] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GenericList", 11 ) ); 
  Rogue_literal_strings[71] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global", 6 ) ); 
  Rogue_literal_strings[72] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Exception", 9 ) ); 
  Rogue_literal_strings[73] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".rogue", 6 ) ); 
  Rogue_literal_strings[74] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such file \"", 14 ) ); 
  Rogue_literal_strings[75] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/", 1 ) ); 
  Rogue_literal_strings[76] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Can not find \"", 14 ) ); 
  Rogue_literal_strings[77] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" to include.", 13 ) ); 
  Rogue_literal_strings[78] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".", 1 ) ); 
  Rogue_literal_strings[79] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Could not get absolute path", 27 ) ); 
  Rogue_literal_strings[80] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive definition for \"", 26 ) ); 
  Rogue_literal_strings[81] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected end of input.", 24 ) ); 
  Rogue_literal_strings[82] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected, found ", 27 ) ); 
  Rogue_literal_strings[83] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'", 1 ) ); 
  Rogue_literal_strings[84] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Filepath expected.", 18 ) ); 
  Rogue_literal_strings[85] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot target folder \"", 22 ) ); 
  Rogue_literal_strings[86] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" for a native include.", 23 ) ); 
  Rogue_literal_strings[87] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "header", 6 ) ); 
  Rogue_literal_strings[88] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "code", 4 ) ); 
  Rogue_literal_strings[89] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $elseIf does not match any previous $if.", 55 ) ); 
  Rogue_literal_strings[90] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $else does not match any previous $if.", 53 ) ); 
  Rogue_literal_strings[91] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $endIf does not match any previous $if.", 54 ) ); 
  Rogue_literal_strings[92] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Expected '", 10 ) ); 
  Rogue_literal_strings[93] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in directive: '", 28 ) ); 
  Rogue_literal_strings[94] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(", 1 ) ); 
  Rogue_literal_strings[95] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " 0x", 3 ) ); 
  Rogue_literal_strings[96] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::", 2 ) ); 
  Rogue_literal_strings[97] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$define", 7 ) ); 
  Rogue_literal_strings[98] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$include", 8 ) ); 
  Rogue_literal_strings[99] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$includeNativeCode", 18 ) ); 
  Rogue_literal_strings[100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$includeNativeHeader", 20 ) ); 
  Rogue_literal_strings[101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$if", 3 ) ); 
  Rogue_literal_strings[102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$elseIf", 7 ) ); 
  Rogue_literal_strings[103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$else", 5 ) ); 
  Rogue_literal_strings[104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$endIf", 6 ) ); 
  Rogue_literal_strings[105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$requisite", 10 ) ); 
  Rogue_literal_strings[106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "module", 6 ) ); 
  Rogue_literal_strings[107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "using", 5 ) ); 
  Rogue_literal_strings[108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$id", 3 ) ); 
  Rogue_literal_strings[109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of line", 11 ) ); 
  Rogue_literal_strings[110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of input", 12 ) ); 
  Rogue_literal_strings[111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(beginning of augment)", 22 ) ); 
  Rogue_literal_strings[112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "augment", 7 ) ); 
  Rogue_literal_strings[113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case", 4 ) ); 
  Rogue_literal_strings[114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "catch", 5 ) ); 
  Rogue_literal_strings[115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CLASS", 5 ) ); 
  Rogue_literal_strings[116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class", 5 ) ); 
  Rogue_literal_strings[117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DEFINITIONS", 11 ) ); 
  Rogue_literal_strings[118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else", 4 ) ); 
  Rogue_literal_strings[119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "elseIf", 6 ) ); 
  Rogue_literal_strings[120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endAugment", 10 ) ); 
  Rogue_literal_strings[121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endBlock", 8 ) ); 
  Rogue_literal_strings[122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endClass", 8 ) ); 
  Rogue_literal_strings[123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endContingent", 13 ) ); 
  Rogue_literal_strings[124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endForEach", 10 ) ); 
  Rogue_literal_strings[125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endFunction", 11 ) ); 
  Rogue_literal_strings[126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endIf", 5 ) ); 
  Rogue_literal_strings[127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endLoop", 7 ) ); 
  Rogue_literal_strings[128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endRoutine", 10 ) ); 
  Rogue_literal_strings[129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endTry", 6 ) ); 
  Rogue_literal_strings[130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endUnitTest", 11 ) ); 
  Rogue_literal_strings[131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhich", 8 ) ); 
  Rogue_literal_strings[132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhile", 8 ) ); 
  Rogue_literal_strings[133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ENUMERATE", 9 ) ); 
  Rogue_literal_strings[134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GLOBAL", 6 ) ); 
  Rogue_literal_strings[135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method", 6 ) ); 
  Rogue_literal_strings[136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "METHODS", 7 ) ); 
  Rogue_literal_strings[137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "others", 6 ) ); 
  Rogue_literal_strings[138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PROPERTIES", 10 ) ); 
  Rogue_literal_strings[139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine", 7 ) ); 
  Rogue_literal_strings[140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied", 9 ) ); 
  Rogue_literal_strings[141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied", 11 ) ); 
  Rogue_literal_strings[142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "with", 4 ) ); 
  Rogue_literal_strings[143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}", 1 ) ); 
  Rogue_literal_strings[144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}#", 2 ) ); 
  Rogue_literal_strings[145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>", 2 ) ); 
  Rogue_literal_strings[146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "assert", 6 ) ); 
  Rogue_literal_strings[147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "await", 5 ) ); 
  Rogue_literal_strings[148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "block", 5 ) ); 
  Rogue_literal_strings[149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contingent", 10 ) ); 
  Rogue_literal_strings[150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ensure", 6 ) ); 
  Rogue_literal_strings[151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeBlock", 11 ) ); 
  Rogue_literal_strings[152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeContingent", 16 ) ); 
  Rogue_literal_strings[153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeForEach", 13 ) ); 
  Rogue_literal_strings[154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeIf", 8 ) ); 
  Rogue_literal_strings[155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeLoop", 10 ) ); 
  Rogue_literal_strings[156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeTry", 9 ) ); 
  Rogue_literal_strings[157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhich", 11 ) ); 
  Rogue_literal_strings[158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhile", 11 ) ); 
  Rogue_literal_strings[159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "forEach", 7 ) ); 
  Rogue_literal_strings[160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function", 8 ) ); 
  Rogue_literal_strings[161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global", 6 ) ); 
  Rogue_literal_strings[162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if", 2 ) ); 
  Rogue_literal_strings[163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "in", 2 ) ); 
  Rogue_literal_strings[164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is", 2 ) ); 
  Rogue_literal_strings[165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "isNot", 5 ) ); 
  Rogue_literal_strings[166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local", 5 ) ); 
  Rogue_literal_strings[167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "loop", 4 ) ); 
  Rogue_literal_strings[168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native", 6 ) ); 
  Rogue_literal_strings[169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeCode", 10 ) ); 
  Rogue_literal_strings[170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeHeader", 12 ) ); 
  Rogue_literal_strings[171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "necessary", 9 ) ); 
  Rogue_literal_strings[172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nextIteration", 13 ) ); 
  Rogue_literal_strings[173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "noAction", 8 ) ); 
  Rogue_literal_strings[174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "of", 2 ) ); 
  Rogue_literal_strings[175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "require", 7 ) ); 
  Rogue_literal_strings[176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return", 6 ) ); 
  Rogue_literal_strings[177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "select", 6 ) ); 
  Rogue_literal_strings[178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step", 4 ) ); 
  Rogue_literal_strings[179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "sufficient", 10 ) ); 
  Rogue_literal_strings[180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "throw", 5 ) ); 
  Rogue_literal_strings[181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "trace", 5 ) ); 
  Rogue_literal_strings[182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@trace", 6 ) ); 
  Rogue_literal_strings[183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try", 3 ) ); 
  Rogue_literal_strings[184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unitTest", 8 ) ); 
  Rogue_literal_strings[185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "which", 5 ) ); 
  Rogue_literal_strings[186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while", 5 ) ); 
  Rogue_literal_strings[187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "yield", 5 ) ); 
  Rogue_literal_strings[188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "identifier", 10 ) ); 
  Rogue_literal_strings[189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type identifier", 15 ) ); 
  Rogue_literal_strings[190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "and", 3 ) ); 
  Rogue_literal_strings[191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as", 2 ) ); 
  Rogue_literal_strings[192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "downTo", 6 ) ); 
  Rogue_literal_strings[193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "false", 5 ) ); 
  Rogue_literal_strings[194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "instanceOf", 10 ) ); 
  Rogue_literal_strings[195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "infinity", 8 ) ); 
  Rogue_literal_strings[196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "meta", 4 ) ); 
  Rogue_literal_strings[197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NaN", 3 ) ); 
  Rogue_literal_strings[198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not", 3 ) ); 
  Rogue_literal_strings[199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "notInstanceOf", 13 ) ); 
  Rogue_literal_strings[200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "or", 2 ) ); 
  Rogue_literal_strings[201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pi", 2 ) ); 
  Rogue_literal_strings[202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prior", 5 ) ); 
  Rogue_literal_strings[203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this", 4 ) ); 
  Rogue_literal_strings[204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "true", 4 ) ); 
  Rogue_literal_strings[205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xor", 3 ) ); 
  Rogue_literal_strings[206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&", 1 ) ); 
  Rogue_literal_strings[207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&=", 2 ) ); 
  Rogue_literal_strings[208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&&", 2 ) ); 
  Rogue_literal_strings[209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->", 2 ) ); 
  Rogue_literal_strings[210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@", 1 ) ); 
  Rogue_literal_strings[211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@{", 2 ) ); 
  Rogue_literal_strings[212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@[", 2 ) ); 
  Rogue_literal_strings[213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\", 1 ) ); 
  Rogue_literal_strings[214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^", 1 ) ); 
  Rogue_literal_strings[215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^=", 2 ) ); 
  Rogue_literal_strings[216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":", 1 ) ); 
  Rogue_literal_strings[217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",", 1 ) ); 
  Rogue_literal_strings[218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<>", 2 ) ); 
  Rogue_literal_strings[219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".=", 2 ) ); 
  Rogue_literal_strings[220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..>", 3 ) ); 
  Rogue_literal_strings[221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{}", 2 ) ); 
  Rogue_literal_strings[222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[]", 2 ) ); 
  Rogue_literal_strings[223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "==", 2 ) ); 
  Rogue_literal_strings[224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=", 1 ) ); 
  Rogue_literal_strings[225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!", 1 ) ); 
  Rogue_literal_strings[226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=>", 2 ) ); 
  Rogue_literal_strings[227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">=", 2 ) ); 
  Rogue_literal_strings[228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">", 1 ) ); 
  Rogue_literal_strings[229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<=", 2 ) ); 
  Rogue_literal_strings[230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<", 1 ) ); 
  Rogue_literal_strings[231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-", 1 ) ); 
  Rogue_literal_strings[232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-=", 2 ) ); 
  Rogue_literal_strings[233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!=", 2 ) ); 
  Rogue_literal_strings[234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{", 1 ) ); 
  Rogue_literal_strings[235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[", 1 ) ); 
  Rogue_literal_strings[236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<", 2 ) ); 
  Rogue_literal_strings[237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%", 1 ) ); 
  Rogue_literal_strings[238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%=", 2 ) ); 
  Rogue_literal_strings[239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+", 1 ) ); 
  Rogue_literal_strings[240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+=", 2 ) ); 
  Rogue_literal_strings[241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "++", 2 ) ); 
  Rogue_literal_strings[242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "?", 1 ) ); 
  Rogue_literal_strings[243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ";", 1 ) ); 
  Rogue_literal_strings[244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":<<:", 4 ) ); 
  Rogue_literal_strings[245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>:", 4 ) ); 
  Rogue_literal_strings[246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>>:", 5 ) ); 
  Rogue_literal_strings[247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/=", 2 ) ); 
  Rogue_literal_strings[248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~", 1 ) ); 
  Rogue_literal_strings[249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~=", 2 ) ); 
  Rogue_literal_strings[250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*", 1 ) ); 
  Rogue_literal_strings[251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*=", 2 ) ); 
  Rogue_literal_strings[252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..", 2 ) ); 
  Rogue_literal_strings[253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..<", 3 ) ); 
  Rogue_literal_strings[254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|", 1 ) ); 
  Rogue_literal_strings[255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|=", 2 ) ); 
  Rogue_literal_strings[256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "||", 2 ) ); 
  Rogue_literal_strings[257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected.", 20 ) ); 
  Rogue_literal_strings[258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeCode", 13 ) ); 
  Rogue_literal_strings[259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeCode' expected before EOF.", 36 ) ); 
  Rogue_literal_strings[260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeHeader", 15 ) ); 
  Rogue_literal_strings[261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeHeader' expected before EOF.", 38 ) ); 
  Rogue_literal_strings[262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected.", 19 ) ); 
  Rogue_literal_strings[263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected; found end of line.", 38 ) ); 
  Rogue_literal_strings[264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Escaped character expected; found end of input.", 47 ) ); 
  Rogue_literal_strings[265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-digit hex value expected; found end of file.", 45 ) ); 
  Rogue_literal_strings[266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid hex digit ", 18 ) ); 
  Rogue_literal_strings[267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing ']' expected.", 21 ) ); 
  Rogue_literal_strings[268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid escape sequence.  Supported: \\n \\r \\s \\t \\0 \\/ \\' \\\\ \\\" \\", 65 ) ); 
  Rogue_literal_strings[269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "uXXXX \\", 7 ) ); 
  Rogue_literal_strings[270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xXX.", 4 ) ); 
  Rogue_literal_strings[271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of file reached while looking for end of string.", 52 ) ); 
  Rogue_literal_strings[272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of input reached while looking for end of string.", 53 ) ); 
  Rogue_literal_strings[273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Digit out of range for base ", 28 ) ); 
  Rogue_literal_strings[274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more digits expected.", 28 ) ); 
  Rogue_literal_strings[275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of File reached while looking for end of verbatim string.", 61 ) ); 
  Rogue_literal_strings[276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "define", 6 ) ); 
  Rogue_literal_strings[277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "include", 7 ) ); 
  Rogue_literal_strings[278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeCode", 17 ) ); 
  Rogue_literal_strings[279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeHeader", 19 ) ); 
  Rogue_literal_strings[280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "requisite", 9 ) ); 
  Rogue_literal_strings[281] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$", 1 ) ); 
  Rogue_literal_strings[282] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of line expected after '...'.", 33 ) ); 
  Rogue_literal_strings[283] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<:", 3 ) ); 
  Rogue_literal_strings[284] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>:", 3 ) ); 
  Rogue_literal_strings[285] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>>:", 4 ) ); 
  Rogue_literal_strings[286] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected input '", 18 ) ); 
  Rogue_literal_strings[287] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL", 3 ) ); 
  Rogue_literal_strings[288] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(Unicode ", 9 ) ); 
  Rogue_literal_strings[289] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected input ", 31 ) ); 
  Rogue_literal_strings[290] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Standard", 8 ) ); 
  Rogue_literal_strings[291] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "on_launch", 9 ) ); 
  Rogue_literal_strings[292] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "run_tests", 9 ) ); 
  Rogue_literal_strings[293] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "insert", 6 ) ); 
  Rogue_literal_strings[294] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<insert>> at the beginning of the method.  No duplicates are allowed.", 110 ) ); 
  Rogue_literal_strings[295] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "append", 6 ) ); 
  Rogue_literal_strings[296] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<append>> at the end of the method.  No duplicates are allowed.", 104 ) ); 
  Rogue_literal_strings[297] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found ", 17 ) ); 
  Rogue_literal_strings[298] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unable to determine type for metadata access.", 45 ) ); 
  Rogue_literal_strings[299] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default_value", 13 ) ); 
  Rogue_literal_strings[300] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'default_value' expected after 'meta.'.", 39 ) ); 
  Rogue_literal_strings[301] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing '>>' expected before end of line.", 41 ) ); 
  Rogue_literal_strings[302] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function", 8 ) ); 
  Rogue_literal_strings[303] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No corresponding label <<", 25 ) ); 
  Rogue_literal_strings[304] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">> in augmented code.", 21 ) ); 
  Rogue_literal_strings[305] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type ", 5 ) ); 
  Rogue_literal_strings[306] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines global method ", 31 ) ); 
  Rogue_literal_strings[307] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init", 4 ) ); 
  Rogue_literal_strings[308] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init() methods cannot be global methods.  Rename your method create_class() if you need to perform one-time setup.", 114 ) ); 
  Rogue_literal_strings[309] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds cannot have initializers.  Use global create(...) methods instead.", 76 ) ); 
  Rogue_literal_strings[310] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global methods and routines cannot be tasks.", 44 ) ); 
  Rogue_literal_strings[311] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Optional", 8 ) ); 
  Rogue_literal_strings[312] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List", 4 ) ); 
  Rogue_literal_strings[313] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No ", 3 ) ); 
  Rogue_literal_strings[314] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " template accepting ", 20 ) ); 
  Rogue_literal_strings[315] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# parameter", 11 ) ); 
  Rogue_literal_strings[316] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#", 1 ) ); 
  Rogue_literal_strings[317] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "es", 2 ) ); 
  Rogue_literal_strings[318] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "s", 1 ) ); 
  Rogue_literal_strings[319] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is defined.", 12 ) ); 
  Rogue_literal_strings[320] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$DataType", 9 ) ); 
  Rogue_literal_strings[321] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create", 6 ) ); 
  Rogue_literal_strings[322] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Single identifier expected for control variable name.", 53 ) ); 
  Rogue_literal_strings[323] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at", 2 ) ); 
  Rogue_literal_strings[324] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing element name before 'at'.", 33 ) ); 
  Rogue_literal_strings[325] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with a range.", 29 ) ); 
  Rogue_literal_strings[326] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_auto_", 6 ) ); 
  Rogue_literal_strings[327] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with forEach-of.", 32 ) ); 
  Rogue_literal_strings[328] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Use forEach-in with a literal range instead of forEach-of.", 58 ) ); 
  Rogue_literal_strings[329] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in forEach - keyword 'in' or 'of' expected.", 56 ) ); 
  Rogue_literal_strings[330] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid syntax in forEach.", 26 ) ); 
  Rogue_literal_strings[331] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_for_each() Parser.rogue:1770]", 43 ) ); 
  Rogue_literal_strings[332] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL ERROR]", 16 ) ); 
  Rogue_literal_strings[333] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Omit the 'return' in a macro method with a return type.", 55 ) ); 
  Rogue_literal_strings[334] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() ", 3 ) ); 
  Rogue_literal_strings[335] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  ", 2 ) ); 
  Rogue_literal_strings[336] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":$", 2 ) ); 
  Rogue_literal_strings[337] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A comma-separated list of values is expected.", 45 ) ); 
  Rogue_literal_strings[338] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment section labels should be defined in the outer scope of the method and cannot be nested inside a control structure.", 122 ) ); 
  Rogue_literal_strings[339] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition expected.", 20 ) ); 
  Rogue_literal_strings[340] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] ", 11 ) ); 
  Rogue_literal_strings[341] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd", 3 ) ); 
  Rogue_literal_strings[342] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".clone() is not implemented.", 28 ) ); 
  Rogue_literal_strings[343] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal string expected.", 24 ) ); 
  Rogue_literal_strings[344] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property", 8 ) ); 
  Rogue_literal_strings[345] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global property", 15 ) ); 
  Rogue_literal_strings[346] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine ", 17 ) ); 
  Rogue_literal_strings[347] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type from initial value; append an explicit type declaration such as \": Object\" ", 81 ) ); 
  Rogue_literal_strings[348] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "An initial value or ", 20 ) ); 
  Rogue_literal_strings[349] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type (for example, \": Object\") must be specified.", 50 ) ); 
  Rogue_literal_strings[350] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator", 8 ) ); 
  Rogue_literal_strings[351] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to", 2 ) ); 
  Rogue_literal_strings[352] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_", 3 ) ); 
  Rogue_literal_strings[353] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "abstract", 8 ) ); 
  Rogue_literal_strings[354] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect", 6 ) ); 
  Rogue_literal_strings[355] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class cannot be both '", 24 ) ); 
  Rogue_literal_strings[356] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' and '", 7 ) ); 
  Rogue_literal_strings[357] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "primitive", 9 ) ); 
  Rogue_literal_strings[358] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compound", 8 ) ); 
  Rogue_literal_strings[359] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "fallback", 8 ) ); 
  Rogue_literal_strings[360] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "foreign", 7 ) ); 
  Rogue_literal_strings[361] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "immutable", 9 ) ); 
  Rogue_literal_strings[362] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "macro", 5 ) ); 
  Rogue_literal_strings[363] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "propagated", 10 ) ); 
  Rogue_literal_strings[364] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "singleton", 9 ) ); 
  Rogue_literal_strings[365] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "special", 7 ) ); 
  Rogue_literal_strings[366] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task", 4 ) ); 
  Rogue_literal_strings[367] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid attribute: ", 19 ) ); 
  Rogue_literal_strings[368] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Native expression types cannot be specified in macro methods - remove the \"->", 77 ) ); 
  Rogue_literal_strings[369] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected ", 25 ) ); 
  Rogue_literal_strings[370] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to ", 13 ) ); 
  Rogue_literal_strings[371] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is missing required type parameters (", 38 ) ); 
  Rogue_literal_strings[372] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<...>>).", 9 ) ); 
  Rogue_literal_strings[373] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Too many type specializers given.", 33 ) ); 
  Rogue_literal_strings[374] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Insufficient number of type parameters in ", 42 ) ); 
  Rogue_literal_strings[375] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "; ", 2 ) ); 
  Rogue_literal_strings[376] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " given, ", 8 ) ); 
  Rogue_literal_strings[377] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected.", 10 ) ); 
  Rogue_literal_strings[378] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type parameters given for non-template type.", 44 ) ); 
  Rogue_literal_strings[379] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to undefined type '", 29 ) ); 
  Rogue_literal_strings[380] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Aspects can only extend other aspects.", 38 ) ); 
  Rogue_literal_strings[381] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds can only extend aspects.", 34 ) ); 
  Rogue_literal_strings[382] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cyclic inheritance attempted - ", 31 ) ); 
  Rogue_literal_strings[383] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot extend ", 15 ) ); 
  Rogue_literal_strings[384] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " because ", 9 ) ); 
  Rogue_literal_strings[385] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already extends ", 17 ) ); 
  Rogue_literal_strings[386] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Class ", 6 ) ); 
  Rogue_literal_strings[387] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " can only have one base class (", 31 ) ); 
  Rogue_literal_strings[388] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " and ", 5 ) ); 
  Rogue_literal_strings[389] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are both specified as base classes).", 37 ) ); 
  Rogue_literal_strings[390] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A property named \"", 18 ) ); 
  Rogue_literal_strings[391] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" already exists.", 17 ) ); 
  Rogue_literal_strings[392] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting initial values are given for property \"", 51 ) ); 
  Rogue_literal_strings[393] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" in unrelated types ", 21 ) ); 
  Rogue_literal_strings[394] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting types given for property \"", 38 ) ); 
  Rogue_literal_strings[395] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" - ", 4 ) ); 
  Rogue_literal_strings[396] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in ", 4 ) ); 
  Rogue_literal_strings[397] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_name", 9 ) ); 
  Rogue_literal_strings[398] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "In ", 3 ) ); 
  Rogue_literal_strings[399] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " the overridden return type (", 29 ) ); 
  Rogue_literal_strings[400] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") is not compatible with the prior definition return type (", 59 ) ); 
  Rogue_literal_strings[401] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ").", 2 ) ); 
  Rogue_literal_strings[402] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines method ", 24 ) ); 
  Rogue_literal_strings[403] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Visitor", 7 ) ); 
  Rogue_literal_strings[404] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not overload method visit(", 32 ) ); 
  Rogue_literal_strings[405] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class()", 12 ) ); 
  Rogue_literal_strings[406] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::init_class() must be declared under GLOBAL METHODS.", 53 ) ); 
  Rogue_literal_strings[407] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class", 10 ) ); 
  Rogue_literal_strings[408] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object()", 13 ) ); 
  Rogue_literal_strings[409] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object", 11 ) ); 
  Rogue_literal_strings[410] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up()", 10 ) ); 
  Rogue_literal_strings[411] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up() cannot return a value.", 33 ) ); 
  Rogue_literal_strings[412] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String()", 11 ) ); 
  Rogue_literal_strings[413] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String", 9 ) ); 
  Rogue_literal_strings[414] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()", 2 ) ); 
  Rogue_literal_strings[415] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set_", 4 ) ); 
  Rogue_literal_strings[416] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class that is instanceOf NativeArray must also be instanceOf Array<<DataType>>.", 81 ) ); 
  Rogue_literal_strings[417] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<", 7 ) ); 
  Rogue_literal_strings[418] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskWithResult<<", 16 ) ); 
  Rogue_literal_strings[419] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task", 4 ) ); 
  Rogue_literal_strings[420] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property.type_context:", 22 ) ); 
  Rogue_literal_strings[421] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type_context:", 14 ) ); 
  Rogue_literal_strings[422] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is_incorporated:", 17 ) ); 
  Rogue_literal_strings[423] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No type declared for parameter \"", 32 ) ); 
  Rogue_literal_strings[424] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine with the signature ", 29 ) ); 
  Rogue_literal_strings[425] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is already defined.", 20 ) ); 
  Rogue_literal_strings[426] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A global method with the signature ", 35 ) ); 
  Rogue_literal_strings[427] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A method with the signature ", 28 ) ); 
  Rogue_literal_strings[428] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call", 4 ) ); 
  Rogue_literal_strings[429] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "param", 5 ) ); 
  Rogue_literal_strings[430] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List conversion function expected.", 34 ) ); 
  Rogue_literal_strings[431] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected, found empty parentheses ().", 43 ) ); 
  Rogue_literal_strings[432] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[][]", 4 ) ); 
  Rogue_literal_strings[433] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal list content contains more dimensions than literal list type.", 69 ) ); 
  Rogue_literal_strings[434] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyTable", 13 ) ); 
  Rogue_literal_strings[435] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyList", 12 ) ); 
  Rogue_literal_strings[436] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "add", 3 ) ); 
  Rogue_literal_strings[437] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set", 3 ) ); 
  Rogue_literal_strings[438] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function parameters must all be typed or all be generic.", 56 ) ); 
  Rogue_literal_strings[439] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with generic parameters must use '=>' to define its body.", 68 ) ); 
  Rogue_literal_strings[440] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with typed parameters must use '->' to define its return type (if desired) and cannot use the generic function definition symbol '='.", 144 ) ); 
  Rogue_literal_strings[441] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} must be a single expression.", 56 ) ); 
  Rogue_literal_strings[442] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} cannot have a condition.", 52 ) ); 
  Rogue_literal_strings[443] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_term() Parser.rogue:2604]     this_type.name:", 59 ) ); 
  Rogue_literal_strings[444] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected '", 26 ) ); 
  Rogue_literal_strings[445] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine named ", 16 ) ); 
  Rogue_literal_strings[446] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already exists.", 16 ) ); 
  Rogue_literal_strings[447] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class named ", 14 ) ); 
  Rogue_literal_strings[448] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end_type:", 9 ) ); 
  Rogue_literal_strings[449] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found end of file.", 29 ) ); 
  Rogue_literal_strings[450] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal placeholder type in augment.  Write '", 45 ) ); 
  Rogue_literal_strings[451] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' without the specializers (<<...>>) to apply the augment to all template instances or write specific types such as ", 116 ) ); 
  Rogue_literal_strings[452] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<String>> to restrict the augment to that type.", 48 ) ); 
  Rogue_literal_strings[453] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Command Line Arguments]", 24 ) ); 
  Rogue_literal_strings[454] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot infer the type of the global property from its initial value.  Assign a type by appending ': TypeName' to the end of the declaration.", 140 ) ); 
  Rogue_literal_strings[455] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the global property - either assign an initial value (global ", 90 ) ); 
  Rogue_literal_strings[456] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (global ", 33 ) ); 
  Rogue_literal_strings[457] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : Int32).", 10 ) ); 
  Rogue_literal_strings[458] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__", 2 ) ); 
  Rogue_literal_strings[459] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task", 6 ) ); 
  Rogue_literal_strings[460] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "context", 7 ) ); 
  Rogue_literal_strings[461] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_", 1 ) ); 
  Rogue_literal_strings[462] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "update", 6 ) ); 
  Rogue_literal_strings[463] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "execute", 7 ) ); 
  Rogue_literal_strings[464] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ip", 2 ) ); 
  Rogue_literal_strings[465] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task_resolver", 15 ) ); 
  Rogue_literal_strings[466] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result", 6 ) ); 
  Rogue_literal_strings[467] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A local variable named \"", 24 ) ); 
  Rogue_literal_strings[468] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".resolve() is not defined.", 26 ) ); 
  Rogue_literal_strings[469] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "locals left on scope stack", 26 ) ); 
  Rogue_literal_strings[470] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control stucture left on scope stack", 36 ) ); 
  Rogue_literal_strings[471] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not declared as returning a value.", 38 ) ); 
  Rogue_literal_strings[472] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined.", 23 ) ); 
  Rogue_literal_strings[473] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; this statement or expression does not result in a value.", 72 ) ); 
  Rogue_literal_strings[474] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init(", 5 ) ); 
  Rogue_literal_strings[475] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create(", 7 ) ); 
  Rogue_literal_strings[476] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "exists", 6 ) ); 
  Rogue_literal_strings[477] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_", 9 ) ); 
  Rogue_literal_strings[478] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to class selector ", 36 ) ); 
  Rogue_literal_strings[479] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "System", 6 ) ); 
  Rogue_literal_strings[480] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_info", 9 ) ); 
  Rogue_literal_strings[481] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array count expected.", 21 ) ); 
  Rogue_literal_strings[482] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32 value expected.", 21 ) ); 
  Rogue_literal_strings[483] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such variable \"", 18 ) ); 
  Rogue_literal_strings[484] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" or method \"", 13 ) ); 
  Rogue_literal_strings[485] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in current scope of type ", 34 ) ); 
  Rogue_literal_strings[486] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method or variable \"", 28 ) ); 
  Rogue_literal_strings[487] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No exact match for ambiguous call to ", 37 ) ); 
  Rogue_literal_strings[488] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":\n\n", 3 ) ); 
  Rogue_literal_strings[489] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Call to ", 8 ) ); 
  Rogue_literal_strings[490] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " has arguments that are incompatible with the best candidate:\n\n", 63 ) ); 
  Rogue_literal_strings[491] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid negation of a named parameter with a supplied value.", 60 ) ); 
  Rogue_literal_strings[492] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(", 9 ) ); 
  Rogue_literal_strings[493] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument does not match any compatible Function parameters in available methods.", 97 ) ); 
  Rogue_literal_strings[494] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument ambiguously matches Function parameters in multiple available methods.", 96 ) ); 
  Rogue_literal_strings[495] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_Object", 9 ) ); 
  Rogue_literal_strings[496] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Called method does not have a parameter named '", 47 ) ); 
  Rogue_literal_strings[497] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected, e.g. \"", 26 ) ); 
  Rogue_literal_strings[498] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".\".", 3 ) ); 
  Rogue_literal_strings[499] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected.", 19 ) ); 
  Rogue_literal_strings[500] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing return value in macro method.", 37 ) ); 
  Rogue_literal_strings[501] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Only single line macros are supported.", 38 ) ); 
  Rogue_literal_strings[502] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count", 5 ) ); 
  Rogue_literal_strings[503] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to array count.", 33 ) ); 
  Rogue_literal_strings[504] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to getter ", 25 ) ); 
  Rogue_literal_strings[505] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write @", 12 ) ); 
  Rogue_literal_strings[506] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " instead.", 9 ) ); 
  Rogue_literal_strings[507] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot access object property '", 31 ) ); 
  Rogue_literal_strings[508] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' from a global method.", 23 ) ); 
  Rogue_literal_strings[509] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot read properties using aspect references.  Add a getter to the aspect definition - ", 89 ) ); 
  Rogue_literal_strings[510] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method ", 8 ) ); 
  Rogue_literal_strings[511] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ": return @", 10 ) ); 
  Rogue_literal_strings[512] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot be cast to required type ", 33 ) ); 
  Rogue_literal_strings[513] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid reference to 'this' object - global methods have no object context.", 75 ) ); 
  Rogue_literal_strings[514] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init()", 6 ) ); 
  Rogue_literal_strings[515] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueProgram", 12 ) ); 
  Rogue_literal_strings[516] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp", 4 ) ); 
  Rogue_literal_strings[517] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type", 4 ) ); 
  Rogue_literal_strings[518] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RETURNS", 7 ) ); 
  Rogue_literal_strings[519] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_List", 5 ) ); 
  Rogue_literal_strings[520] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NOT", 3 ) ); 
  Rogue_literal_strings[521] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MOD", 3 ) ); 
  Rogue_literal_strings[522] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AND", 3 ) ); 
  Rogue_literal_strings[523] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TIMES", 5 ) ); 
  Rogue_literal_strings[524] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PLUS", 4 ) ); 
  Rogue_literal_strings[525] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MINUS", 5 ) ); 
  Rogue_literal_strings[526] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SLASH", 5 ) ); 
  Rogue_literal_strings[527] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LE", 2 ) ); 
  Rogue_literal_strings[528] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LT", 2 ) ); 
  Rogue_literal_strings[529] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EQUALS", 6 ) ); 
  Rogue_literal_strings[530] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GE", 2 ) ); 
  Rogue_literal_strings[531] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GT", 2 ) ); 
  Rogue_literal_strings[532] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "POWER", 5 ) ); 
  Rogue_literal_strings[533] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "OR", 2 ) ); 
  Rogue_literal_strings[534] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "XOR", 3 ) ); 
  Rogue_literal_strings[535] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray", 10 ) ); 
  Rogue_literal_strings[536] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array", 5 ) ); 
  Rogue_literal_strings[537] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueClass", 10 ) ); 
  Rogue_literal_strings[538] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType", 9 ) ); 
  Rogue_literal_strings[539] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writing ", 8 ) ); 
  Rogue_literal_strings[540] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h...", 5 ) ); 
  Rogue_literal_strings[541] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h", 2 ) ); 
  Rogue_literal_strings[542] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//-----------------------------------------------------------------------------", 79 ) ); 
  Rogue_literal_strings[543] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//  Generated by the Rogue compiler", 35 ) ); 
  Rogue_literal_strings[544] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#pragma once", 12 ) ); 
  Rogue_literal_strings[545] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_MANUAL ", 29 ) ); 
  Rogue_literal_strings[546] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1", 1 ) ); 
  Rogue_literal_strings[547] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0", 1 ) ); 
  Rogue_literal_strings[548] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_AUTO ", 27 ) ); 
  Rogue_literal_strings[549] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_BOEHM ", 28 ) ); 
  Rogue_literal_strings[550] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#ifndef ROGUE_GC_THRESHOLD_DEFAULT", 34 ) ); 
  Rogue_literal_strings[551] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  #define ROGUE_GC_THRESHOLD_DEFAULT ", 37 ) ); 
  Rogue_literal_strings[552] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#endif", 6 ) ); 
  Rogue_literal_strings[553] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// NATIVE HEADERS", 17 ) ); 
  Rogue_literal_strings[554] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <cmath>", 16 ) ); 
  Rogue_literal_strings[555] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// FORWARD DECLARATIONS", 23 ) ); 
  Rogue_literal_strings[556] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "struct ", 7 ) ); 
  Rogue_literal_strings[557] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// COMPOUND DEFINITIONS", 23 ) ); 
  Rogue_literal_strings[558] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : ", 3 ) ); 
  Rogue_literal_strings[559] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void", 4 ) ); 
  Rogue_literal_strings[560] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : RogueObject", 14 ) ); 
  Rogue_literal_strings[561] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// PROPERTIES", 13 ) ); 
  Rogue_literal_strings[562] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_COMPOUND_REF_PROP(", 28 ) ); 
  Rogue_literal_strings[563] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ");", 2 ) ); 
  Rogue_literal_strings[564] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "release", 7 ) ); 
  Rogue_literal_strings[565] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_release(", 20 ) ); 
  Rogue_literal_strings[566] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))", 2 ) ); 
  Rogue_literal_strings[567] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "retain", 6 ) ); 
  Rogue_literal_strings[568] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_retain(", 19 ) ); 
  Rogue_literal_strings[569] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unrecognized native code insertion marker: ", 43 ) ); 
  Rogue_literal_strings[570] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS", 4 ) ); 
  Rogue_literal_strings[571] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS->", 6 ) ); 
  Rogue_literal_strings[572] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ", 1 ) ); 
  Rogue_literal_strings[573] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() : ", 5 ) ); 
  Rogue_literal_strings[574] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", ", 2 ) ); 
  Rogue_literal_strings[575] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " {}", 3 ) ); 
  Rogue_literal_strings[576] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( ", 2 ) ); 
  Rogue_literal_strings[577] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " value, bool exists=true ) : value(value), exists(exists) {}", 60 ) ); 
  Rogue_literal_strings[578] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) : ", 5 ) ); 
  Rogue_literal_strings[579] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator==( const ", 23 ) ); 
  Rogue_literal_strings[580] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " &other ) const", 15 ) ); 
  Rogue_literal_strings[581] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (exists)\n{\n  if (other.exists) return value == other.value;\n  else              return false;\n}\nelse\n{\n  if (other.exists) return false;\n  else              return true;\n}", 174 ) ); 
  Rogue_literal_strings[582] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  if (", 6 ) ); 
  Rogue_literal_strings[583] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " != other.", 10 ) ); 
  Rogue_literal_strings[584] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") return false;", 15 ) ); 
  Rogue_literal_strings[585] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return true;", 14 ) ); 
  Rogue_literal_strings[586] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator!=( const ", 23 ) ); 
  Rogue_literal_strings[587] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{\n  return !(*this == other);\n}\n", 32 ) ); 
  Rogue_literal_strings[588] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "};", 2 ) ); 
  Rogue_literal_strings[589] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// GLOBAL PROPERTIES", 20 ) ); 
  Rogue_literal_strings[590] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern ", 7 ) ); 
  Rogue_literal_strings[591] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " Rogue", 6 ) ); 
  Rogue_literal_strings[592] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// CLASS DEFINITIONS", 20 ) ); 
  Rogue_literal_strings[593] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROGUE TYPES", 14 ) ); 
  Rogue_literal_strings[594] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern RogueType* RogueType", 27 ) ); 
  Rogue_literal_strings[595] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROUTINE PROTOTYPES", 21 ) ); 
  Rogue_literal_strings[596] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " THIS", 5 ) ); 
  Rogue_literal_strings[597] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// METHOD PROTOTYPES", 20 ) ); 
  Rogue_literal_strings[598] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// INTERNAL PROTOTYPES", 22 ) ); 
  Rogue_literal_strings[599] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace();", 19 ) ); 
  Rogue_literal_strings[600] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp...", 7 ) ); 
  Rogue_literal_strings[601] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <stdio.h>", 18 ) ); 
  Rogue_literal_strings[602] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include \"", 10 ) ); 
  Rogue_literal_strings[603] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h\"", 3 ) ); 
  Rogue_literal_strings[604] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)(", 4 ) ); 
  Rogue_literal_strings[605] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUEM", 6 ) ); 
  Rogue_literal_strings[606] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "typedef ", 8 ) ); 
  Rogue_literal_strings[607] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)", 3 ) ); 
  Rogue_literal_strings[608] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*", 2 ) ); 
  Rogue_literal_strings[609] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " call_", 6 ) ); 
  Rogue_literal_strings[610] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( int i, ", 9 ) ); 
  Rogue_literal_strings[611] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " p", 2 ) ); 
  Rogue_literal_strings[612] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " )", 2 ) ); 
  Rogue_literal_strings[613] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return ", 7 ) ); 
  Rogue_literal_strings[614] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((", 2 ) ); 
  Rogue_literal_strings[615] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(THIS->type->methods[i]))( THIS", 32 ) ); 
  Rogue_literal_strings[616] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", p", 3 ) ); 
  Rogue_literal_strings[617] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " );", 3 ) ); 
  Rogue_literal_strings[618] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ", 3 ) ); 
  Rogue_literal_strings[619] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue", 10 ) ); 
  Rogue_literal_strings[620] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj );", 20 ) ); 
  Rogue_literal_strings[621] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj )", 19 ) ); 
  Rogue_literal_strings[622] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* link;", 11 ) ); 
  Rogue_literal_strings[623] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=((", 12 ) ); 
  Rogue_literal_strings[624] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)obj)->", 8 ) ); 
  Rogue_literal_strings[625] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) ((RogueObject*)link)->type->trace_fn( link );", 48 ) ); 
  Rogue_literal_strings[626] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( &", 9 ) ); 
  Rogue_literal_strings[627] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=", 10 ) ); 
  Rogue_literal_strings[628] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) Rogue", 8 ) ); 
  Rogue_literal_strings[629] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( link );", 15 ) ); 
  Rogue_literal_strings[630] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray* array = (RogueArray*) obj;\nint count;", 49 ) ); 
  Rogue_literal_strings[631] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "* cur;", 6 ) ); 
  Rogue_literal_strings[632] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nif ( !array || array->object_size < 0 ) return;\narray->object_size = ~array->object_size;\n\ncount = array->count;", 113 ) ); 
  Rogue_literal_strings[633] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur = ((", 8 ) ); 
  Rogue_literal_strings[634] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(array->bytes)) - 1;", 22 ) ); 
  Rogue_literal_strings[635] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (--count >= 0)", 20 ) ); 
  Rogue_literal_strings[636] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  Rogue", 7 ) ); 
  Rogue_literal_strings[637] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( ++cur );", 16 ) ); 
  Rogue_literal_strings[638] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;\n((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;\n", 130 ) ); 
  Rogue_literal_strings[639] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_name_index_table[] =", 35 ) ); 
  Rogue_literal_strings[640] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_object_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[641] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueInitFn) ", 14 ) ); 
  Rogue_literal_strings[642] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_fn_table[] =", 35 ) ); 
  Rogue_literal_strings[643] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueCleanUpFn Rogue_clean_up_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[644] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCleanUpFn) ", 17 ) ); 
  Rogue_literal_strings[645] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueToStringFn Rogue_to_string_fn_table[] =", 44 ) ); 
  Rogue_literal_strings[646] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueToStringFn) ", 18 ) ); 
  Rogue_literal_strings[647] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueTraceFn Rogue_trace_fn_table[] =", 37 ) ); 
  Rogue_literal_strings[648] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray_trace", 16 ) ); 
  Rogue_literal_strings[649] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace", 6 ) ); 
  Rogue_literal_strings[650] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_trace", 17 ) ); 
  Rogue_literal_strings[651] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace()", 18 ) ); 
  Rogue_literal_strings[652] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int i;", 6 ) ); 
  Rogue_literal_strings[653] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace GLOBAL PROPERTIES", 26 ) ); 
  Rogue_literal_strings[654] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=Rogue", 15 ) ); 
  Rogue_literal_strings[655] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace Class objects and singletons\nfor (i=Rogue_type_count; --i>=0; )\n{\n  RogueType* type = &Rogue_types[i];\n  if (type->type_info) RogueTypeInfo_trace( type->type_info );\n  if (type->_singleton) type->trace_fn( type->_singleton );\n}", 236 ) ); 
  Rogue_literal_strings[656] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* Rogue_dynamic_method_table[] =", 36 ) ); 
  Rogue_literal_strings[657] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(void*) (", 9 ) ); 
  Rogue_literal_strings[658] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ", 2 ) ); 
  Rogue_literal_strings[659] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0,", 2 ) ); 
  Rogue_literal_strings[660] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " // ", 4 ) ); 
  Rogue_literal_strings[661] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_info_table[", 26 ) ); 
  Rogue_literal_strings[662] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] =", 3 ) ); 
  Rogue_literal_strings[663] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...", 105 ) ); 
  Rogue_literal_strings[664] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\"", 2 ) ); 
  Rogue_literal_strings[665] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"", 1 ) ); 
  Rogue_literal_strings[666] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\'", 2 ) ); 
  Rogue_literal_strings[667] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\\", 2 ) ); 
  Rogue_literal_strings[668] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\n", 2 ) ); 
  Rogue_literal_strings[669] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"\"", 2 ) ); 
  Rogue_literal_strings[670] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\x", 2 ) ); 
  Rogue_literal_strings[671] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_object_size_table[", 28 ) ); 
  Rogue_literal_strings[672] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(int) sizeof(", 13 ) ); 
  Rogue_literal_strings[673] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_allocator_count = ", 28 ) ); 
  Rogue_literal_strings[674] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueAllocator Rogue_allocators[", 32 ) ); 
  Rogue_literal_strings[675] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "];", 2 ) ); 
  Rogue_literal_strings[676] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_count = ", 23 ) ); 
  Rogue_literal_strings[677] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType Rogue_types[", 22 ) ); 
  Rogue_literal_strings[678] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType* RogueType", 20 ) ); 
  Rogue_literal_strings[679] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_literal_string_count = ", 33 ) ); 
  Rogue_literal_strings[680] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueString* Rogue_literal_strings[", 35 ) ); 
  Rogue_literal_strings[681] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (THIS->type->index)", 26 ) ); 
  Rogue_literal_strings[682] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case ", 5 ) ); 
  Rogue_literal_strings[683] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return ", 9 ) ); 
  Rogue_literal_strings[684] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( (", 3 ) ); 
  Rogue_literal_strings[685] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")THIS", 5 ) ); 
  Rogue_literal_strings[686] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default:", 8 ) ); 
  Rogue_literal_strings[687] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueDebugTrace __trace( \"", 26 ) ); 
  Rogue_literal_strings[688] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", \"", 4 ) ); 
  Rogue_literal_strings[689] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(unknown)", 9 ) ); 
  Rogue_literal_strings[690] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", ", 3 ) ); 
  Rogue_literal_strings[691] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__trace.filename = \"", 20 ) ); 
  Rogue_literal_strings[692] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\";", 2 ) ); 
  Rogue_literal_strings[693] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__trace.line = ", 15 ) ); 
  Rogue_literal_strings[694] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined.", 29 ) ); 
  Rogue_literal_strings[695] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_configure( int argc, const char* argv[] )", 52 ) ); 
  Rogue_literal_strings[696] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (Rogue_configured) return;\nRogue_configured = 1;\n\nRogue_argc = argc;\nRogue_argv = argv;\n\nRogue_configure_gc();\nRogue_configure_types();\nstd::set_terminate( Rogue_terminate_handler );\n", 186 ) ); 
  Rogue_literal_strings[697] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = &Rogue_types[ ", 17 ) ); 
  Rogue_literal_strings[698] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ];", 3 ) ); 
  Rogue_literal_strings[699] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_literal_strings[", 22 ) ); 
  Rogue_literal_strings[700] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", 69 ) ); 
  Rogue_literal_strings[701] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) ); ", 6 ) ); 
  Rogue_literal_strings[702] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_launch()", 19 ) ); 
  Rogue_literal_strings[703] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "();", 3 ) ); 
  Rogue_literal_strings[704] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueSystem_executable_filepath = RogueString_create_from_utf8(\n    Rogue_argc ? Rogue_argv[0] : \"Rogue\", -1 );\n\nfor (int i=1; i<Rogue_argc; ++i)\n{\n  RogueString_List__add__String( RogueSystem_command_line_arguments,\n      RogueString_create_from_utf8( Rogue_argv[i], -1 ) );\n}", 277 ) ); 
  Rogue_literal_strings[705] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Instantiate requisite singletons", 35 ) ); 
  Rogue_literal_strings[706] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_SINGLETON( ", 17 ) ); 
  Rogue_literal_strings[707] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );\nRogue_collect_garbage();", 110 ) ); 
  Rogue_literal_strings[708] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool Rogue_update_tasks()\n{\n  // Returns true if any tasks are still active", 75 ) ); 
  Rogue_literal_strings[709] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskManager", 11 ) ); 
  Rogue_literal_strings[710] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  RogueClassTaskManager* task_manager = (RogueClassTaskManager*) ROGUE_SINGLETON(TaskManager);\n  bool result = RogueTaskManager__update( task_manager );\n  Rogue_collect_garbage();\n  return result;", 196 ) ); 
  Rogue_literal_strings[711] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  Rogue_collect_garbage();\n  return false;", 42 ) ); 
  Rogue_literal_strings[712] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}\n", 2 ) ); 
  Rogue_literal_strings[713] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int main( int argc, const char* argv[] )\n{\n  Rogue_configure( argc, argv );\n  Rogue_launch();\n\n  while (Rogue_update_tasks()) {}\n\n  Rogue_quit();\n\n  return 0;\n}", 160 ) ); 
  Rogue_literal_strings[714] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SUCCESS (", 9 ) ); 
  Rogue_literal_strings[715] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clang++ -std=c++11 -fno-strict-aliasing ", 40 ) ); 
  Rogue_literal_strings[716] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp -o ", 8 ) ); 
  Rogue_literal_strings[717] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " && ./", 6 ) ); 
  Rogue_literal_strings[718] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Process was not created", 23 ) ); 
  Rogue_literal_strings[719] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compile target \"", 16 ) ); 
  Rogue_literal_strings[720] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" is not supported.", 19 ) ); 
  Rogue_literal_strings[721] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Int32>>", 26 ) ); 
  Rogue_literal_strings[722] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String>>", 27 ) ); 
  Rogue_literal_strings[723] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-infinity", 9 ) ); 
  Rogue_literal_strings[724] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " seconds", 8 ) ); 
  Rogue_literal_strings[725] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Template>>", 29 ) ); 
  Rogue_literal_strings[726] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Augment[]>>", 30 ) ); 
  Rogue_literal_strings[727] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod(", 21 ) ); 
  Rogue_literal_strings[728] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method[]>>", 29 ) ); 
  Rogue_literal_strings[729] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Type>>", 25 ) ); 
  Rogue_literal_strings[730] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String[]>>", 29 ) ); 
  Rogue_literal_strings[731] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Int32,Template>>", 28 ) ); 
  Rogue_literal_strings[732] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method>>", 27 ) ); 
  Rogue_literal_strings[733] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeInfo>>", 29 ) ); 
  Rogue_literal_strings[734] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Logical>>", 28 ) ); 
  Rogue_literal_strings[735] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,ParseReader>>", 32 ) ); 
  Rogue_literal_strings[736] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TokenType>>", 30 ) ); 
  Rogue_literal_strings[737] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeSpecializer>>", 36 ) ); 
  Rogue_literal_strings[738] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CmdLabel>>", 29 ) ); 
  Rogue_literal_strings[739] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Definition>>", 31 ) ); 
  Rogue_literal_strings[740] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Property>>", 29 ) ); 
  Rogue_literal_strings[741] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Token[]>>", 28 ) ); 
  Rogue_literal_strings[742] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Cmd>>", 24 ) ); 
  Rogue_literal_strings[743] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StackTrace", 10 ) ); 
  Rogue_literal_strings[744] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String>>", 22 ) ); 
  Rogue_literal_strings[745] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringReader", 12 ) ); 
  Rogue_literal_strings[746] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()", 10 ) ); 
  Rogue_literal_strings[747] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueC", 6 ) ); 
  Rogue_literal_strings[748] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Console", 7 ) ); 
  Rogue_literal_strings[749] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program", 7 ) ); 
  Rogue_literal_strings[750] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template", 8 ) ); 
  Rogue_literal_strings[751] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Template>>", 24 ) ); 
  Rogue_literal_strings[752] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Augment[]>>", 25 ) ); 
  Rogue_literal_strings[753] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method", 6 ) ); 
  Rogue_literal_strings[754] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property", 8 ) ); 
  Rogue_literal_strings[755] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method[]>>", 24 ) ); 
  Rogue_literal_strings[756] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type", 4 ) ); 
  Rogue_literal_strings[757] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Type>>", 20 ) ); 
  Rogue_literal_strings[758] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Int32>>", 21 ) ); 
  Rogue_literal_strings[759] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String[]>>", 24 ) ); 
  Rogue_literal_strings[760] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Int32,Template>>", 23 ) ); 
  Rogue_literal_strings[761] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Attributes", 10 ) ); 
  Rogue_literal_strings[762] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token", 5 ) ); 
  Rogue_literal_strings[763] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenType", 9 ) ); 
  Rogue_literal_strings[764] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Scope", 5 ) ); 
  Rogue_literal_strings[765] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin", 6 ) ); 
  Rogue_literal_strings[766] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(Type)->Logical", 23 ) ); 
  Rogue_literal_strings[767] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CPPWriter", 9 ) ); 
  Rogue_literal_strings[768] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method>>", 22 ) ); 
  Rogue_literal_strings[769] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local", 5 ) ); 
  Rogue_literal_strings[770] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Math", 4 ) ); 
  Rogue_literal_strings[771] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeInfo>>", 24 ) ); 
  Rogue_literal_strings[772] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Logical>>", 23 ) ); 
  Rogue_literal_strings[773] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser", 6 ) ); 
  Rogue_literal_strings[774] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,ParseReader>>", 27 ) ); 
  Rogue_literal_strings[775] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Stopwatch", 9 ) ); 
  Rogue_literal_strings[776] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "File", 4 ) ); 
  Rogue_literal_strings[777] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LineReader", 10 ) ); 
  Rogue_literal_strings[778] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()->Logical", 19 ) ); 
  Rogue_literal_strings[779] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter", 13 ) ); 
  Rogue_literal_strings[780] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment", 7 ) ); 
  Rogue_literal_strings[781] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TokenType>>", 25 ) ); 
  Rogue_literal_strings[782] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeSpecializer>>", 31 ) ); 
  Rogue_literal_strings[783] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer", 15 ) ); 
  Rogue_literal_strings[784] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,CmdLabel>>", 24 ) ); 
  Rogue_literal_strings[785] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate", 14 ) ); 
  Rogue_literal_strings[786] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneArgs", 9 ) ); 
  Rogue_literal_strings[787] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection", 21 ) ); 
  Rogue_literal_strings[788] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition", 10 ) ); 
  Rogue_literal_strings[789] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Definition>>", 26 ) ); 
  Rogue_literal_strings[790] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Property>>", 24 ) ); 
  Rogue_literal_strings[791] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplates", 15 ) ); 
  Rogue_literal_strings[792] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRebuilder<<Token>>", 22 ) ); 
  Rogue_literal_strings[793] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam", 7 ) ); 
  Rogue_literal_strings[794] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg", 5 ) ); 
  Rogue_literal_strings[795] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg)->Logical", 30 ) ); 
  Rogue_literal_strings[796] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRebuilder<<CmdNamedArg>>", 28 ) ); 
  Rogue_literal_strings[797] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg,CmdNamedArg)->Logical", 42 ) ); 
  Rogue_literal_strings[798] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Quicksort<<CmdNamedArg>>", 24 ) ); 
  Rogue_literal_strings[799] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CandidateMethods", 16 ) ); 
  Rogue_literal_strings[800] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenReader", 11 ) ); 
  Rogue_literal_strings[801] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Tokenizer", 9 ) ); 
  Rogue_literal_strings[802] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ParseReader", 11 ) ); 
  Rogue_literal_strings[803] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Preprocessor", 12 ) ); 
  Rogue_literal_strings[804] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileReader", 10 ) ); 
  Rogue_literal_strings[805] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileWriter", 10 ) ); 
  Rogue_literal_strings[806] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UTF8Reader", 10 ) ); 
  Rogue_literal_strings[807] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Token[]>>", 23 ) ); 
  Rogue_literal_strings[808] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Cmd>>", 19 ) ); 
  Rogue_literal_strings[809] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PreprocessorTokenReader", 23 ) ); 
  Rogue_literal_strings[810] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte[]", 6 ) ); 
  Rogue_literal_strings[811] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character[]", 11 ) ); 
  Rogue_literal_strings[812] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String[]", 8 ) ); 
  Rogue_literal_strings[813] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()[]", 12 ) ); 
  Rogue_literal_strings[814] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template[]", 10 ) ); 
  Rogue_literal_strings[815] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property[]", 10 ) ); 
  Rogue_literal_strings[816] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type[]", 6 ) ); 
  Rogue_literal_strings[817] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[]", 7 ) ); 
  Rogue_literal_strings[818] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd[]", 5 ) ); 
  Rogue_literal_strings[819] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg[]", 13 ) ); 
  Rogue_literal_strings[820] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method[]", 8 ) ); 
  Rogue_literal_strings[821] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin[]", 8 ) ); 
  Rogue_literal_strings[822] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local[]", 7 ) ); 
  Rogue_literal_strings[823] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32[]", 7 ) ); 
  Rogue_literal_strings[824] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String>>[]", 29 ) ); 
  Rogue_literal_strings[825] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser[]", 8 ) ); 
  Rogue_literal_strings[826] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter[]", 15 ) ); 
  Rogue_literal_strings[827] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment[]", 9 ) ); 
  Rogue_literal_strings[828] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer[]", 17 ) ); 
  Rogue_literal_strings[829] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Template>>[]", 31 ) ); 
  Rogue_literal_strings[830] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Augment[]>>[]", 32 ) ); 
  Rogue_literal_strings[831] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel[]", 10 ) ); 
  Rogue_literal_strings[832] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure[]", 21 ) ); 
  Rogue_literal_strings[833] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method[]>>[]", 31 ) ); 
  Rogue_literal_strings[834] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition[]", 12 ) ); 
  Rogue_literal_strings[835] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Type>>[]", 27 ) ); 
  Rogue_literal_strings[836] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Int32>>[]", 28 ) ); 
  Rogue_literal_strings[837] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String[]>>[]", 31 ) ); 
  Rogue_literal_strings[838] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Int32,Template>>[]", 30 ) ); 
  Rogue_literal_strings[839] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam[]", 9 ) ); 
  Rogue_literal_strings[840] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg[]", 7 ) ); 
  Rogue_literal_strings[841] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method>>[]", 29 ) ); 
  Rogue_literal_strings[842] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeInfo>>[]", 31 ) ); 
  Rogue_literal_strings[843] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Logical>>[]", 30 ) ); 
  Rogue_literal_strings[844] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase[]", 14 ) ); 
  Rogue_literal_strings[845] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch[]", 10 ) ); 
  Rogue_literal_strings[846] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase[]", 15 ) ); 
  Rogue_literal_strings[847] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,ParseReader>>[]", 34 ) ); 
  Rogue_literal_strings[848] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TokenType>>[]", 32 ) ); 
  Rogue_literal_strings[849] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeSpecializer>>[]", 38 ) ); 
  Rogue_literal_strings[850] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CmdLabel>>[]", 31 ) ); 
  Rogue_literal_strings[851] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[][]", 9 ) ); 
  Rogue_literal_strings[852] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection[]", 23 ) ); 
  Rogue_literal_strings[853] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Definition>>[]", 33 ) ); 
  Rogue_literal_strings[854] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Property>>[]", 31 ) ); 
  Rogue_literal_strings[855] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate[]", 16 ) ); 
  Rogue_literal_strings[856] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Token[]>>[]", 30 ) ); 
  Rogue_literal_strings[857] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Cmd>>[]", 26 ) ); 
  Rogue_literal_strings[858] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<String>>", 15 ) ); 
  Rogue_literal_strings[859] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Function()>>", 19 ) ); 
  Rogue_literal_strings[860] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Type>>", 13 ) ); 
  Rogue_literal_strings[861] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Property>>", 17 ) ); 
  Rogue_literal_strings[862] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Method>>", 15 ) ); 
  Rogue_literal_strings[863] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Template>>", 17 ) ); 
  Rogue_literal_strings[864] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Plugin>>", 15 ) ); 
  Rogue_literal_strings[865] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Local>>", 14 ) ); 
  Rogue_literal_strings[866] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Int32>>", 14 ) ); 
  Rogue_literal_strings[867] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Byte>>", 13 ) ); 
  Rogue_literal_strings[868] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Character>>", 18 ) ); 
  Rogue_literal_strings[869] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String>>>>", 36 ) ); 
  Rogue_literal_strings[870] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Parser>>", 15 ) ); 
  Rogue_literal_strings[871] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Augment>>", 16 ) ); 
  Rogue_literal_strings[872] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token>>", 14 ) ); 
  Rogue_literal_strings[873] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeParameter>>", 22 ) ); 
  Rogue_literal_strings[874] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Template>>>>", 38 ) ); 
  Rogue_literal_strings[875] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Augment[]>>>>", 39 ) ); 
  Rogue_literal_strings[876] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdLabel>>", 17 ) ); 
  Rogue_literal_strings[877] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Cmd>>", 12 ) ); 
  Rogue_literal_strings[878] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method[]>>>>", 38 ) ); 
  Rogue_literal_strings[879] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Definition>>", 19 ) ); 
  Rogue_literal_strings[880] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Type>>>>", 34 ) ); 
  Rogue_literal_strings[881] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Int32>>>>", 35 ) ); 
  Rogue_literal_strings[882] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String[]>>>>", 38 ) ); 
  Rogue_literal_strings[883] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Int32,Template>>>>", 37 ) ); 
  Rogue_literal_strings[884] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdNamedArg>>", 20 ) ); 
  Rogue_literal_strings[885] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnParam>>", 16 ) ); 
  Rogue_literal_strings[886] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeSpecializer>>", 24 ) ); 
  Rogue_literal_strings[887] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method>>>>", 36 ) ); 
  Rogue_literal_strings[888] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeInfo>>>>", 38 ) ); 
  Rogue_literal_strings[889] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Logical>>>>", 37 ) ); 
  Rogue_literal_strings[890] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,ParseReader>>>>", 41 ) ); 
  Rogue_literal_strings[891] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TokenType>>>>", 39 ) ); 
  Rogue_literal_strings[892] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeSpecializer>>>>", 45 ) ); 
  Rogue_literal_strings[893] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,CmdLabel>>>>", 38 ) ); 
  Rogue_literal_strings[894] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token[]>>", 16 ) ); 
  Rogue_literal_strings[895] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdWhichCase>>", 21 ) ); 
  Rogue_literal_strings[896] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdCatch>>", 17 ) ); 
  Rogue_literal_strings[897] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdTaskControlSection>>", 30 ) ); 
  Rogue_literal_strings[898] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdSelectCase>>", 22 ) ); 
  Rogue_literal_strings[899] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdControlStructure>>", 28 ) ); 
  Rogue_literal_strings[900] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Definition>>>>", 40 ) ); 
  Rogue_literal_strings[901] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Property>>>>", 38 ) ); 
  Rogue_literal_strings[902] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<MethodTemplate>>", 23 ) ); 
  Rogue_literal_strings[903] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnArg>>", 14 ) ); 
  Rogue_literal_strings[904] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Token[]>>>>", 37 ) ); 
  Rogue_literal_strings[905] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Cmd>>>>", 33 ) ); 
  Rogue_literal_strings[906] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_81", 11 ) ); 
  Rogue_literal_strings[907] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0.0", 3 ) ); 
  Rogue_literal_strings[908] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL  # ", 7 ) ); 
  Rogue_literal_strings[909] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralCharacterToken", 21 ) ); 
  Rogue_literal_strings[910] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt64Token", 17 ) ); 
  Rogue_literal_strings[911] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt32Token", 17 ) ); 
  Rogue_literal_strings[912] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralReal64Token", 18 ) ); 
  Rogue_literal_strings[913] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringDataToken", 15 ) ); 
  Rogue_literal_strings[914] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLToken", 8 ) ); 
  Rogue_literal_strings[915] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; call to ", 24 ) ); 
  Rogue_literal_strings[916] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not return a value.", 25 ) ); 
  Rogue_literal_strings[917] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAccess", 9 ) ); 
  Rogue_literal_strings[918] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg", 11 ) ); 
  Rogue_literal_strings[919] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel", 8 ) ); 
  Rogue_literal_strings[920] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatement", 12 ) ); 
  Rogue_literal_strings[921] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMakeRequisite", 16 ) ); 
  Rogue_literal_strings[922] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssert", 9 ) ); 
  Rogue_literal_strings[923] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRequire", 10 ) ); 
  Rogue_literal_strings[924] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssign", 9 ) ); 
  Rogue_literal_strings[925] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase", 12 ) ); 
  Rogue_literal_strings[926] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdElementAccess", 16 ) ); 
  Rogue_literal_strings[927] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEnsure", 9 ) ); 
  Rogue_literal_strings[928] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdFormattedString", 18 ) ); 
  Rogue_literal_strings[929] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch", 8 ) ); 
  Rogue_literal_strings[930] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThrow", 8 ) ); 
  Rogue_literal_strings[931] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEscape", 9 ) ); 
  Rogue_literal_strings[932] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNextIteration", 16 ) ); 
  Rogue_literal_strings[933] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNecessary", 12 ) ); 
  Rogue_literal_strings[934] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSufficient", 13 ) ); 
  Rogue_literal_strings[935] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteral", 10 ) ); 
  Rogue_literal_strings[936] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateObject", 15 ) ); 
  Rogue_literal_strings[937] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCompound", 17 ) ); 
  Rogue_literal_strings[938] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThisContext", 14 ) ); 
  Rogue_literal_strings[939] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadSingleton", 16 ) ); 
  Rogue_literal_strings[940] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadLocal", 12 ) ); 
  Rogue_literal_strings[941] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadGlobal", 13 ) ); 
  Rogue_literal_strings[942] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteGlobal", 14 ) ); 
  Rogue_literal_strings[943] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadProperty", 15 ) ); 
  Rogue_literal_strings[944] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteProperty", 16 ) ); 
  Rogue_literal_strings[945] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCall", 7 ) ); 
  Rogue_literal_strings[946] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallPriorMethod", 18 ) ); 
  Rogue_literal_strings[947] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRange", 8 ) ); 
  Rogue_literal_strings[948] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdUnary", 8 ) ); 
  Rogue_literal_strings[949] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinary", 9 ) ); 
  Rogue_literal_strings[950] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustLocal", 14 ) ); 
  Rogue_literal_strings[951] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdResolvedModifyAndAssign", 26 ) ); 
  Rogue_literal_strings[952] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateArray", 14 ) ); 
  Rogue_literal_strings[953] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayCount", 17 ) ); 
  Rogue_literal_strings[954] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypeOperator", 15 ) ); 
  Rogue_literal_strings[955] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControl", 14 ) ); 
  Rogue_literal_strings[956] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTrace", 8 ) ); 
  Rogue_literal_strings[957] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInlineNative", 15 ) ); 
  Rogue_literal_strings[958] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelect", 9 ) ); 
  Rogue_literal_strings[959] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase", 13 ) ); 
  Rogue_literal_strings[960] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateFunction", 17 ) ); 
  Rogue_literal_strings[961] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeHeader", 15 ) ); 
  Rogue_literal_strings[962] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeCode", 13 ) ); 
  Rogue_literal_strings[963] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAwait", 8 ) ); 
  Rogue_literal_strings[964] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdYield", 8 ) ); 
  Rogue_literal_strings[965] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjust", 9 ) ); 
  Rogue_literal_strings[966] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssign", 18 ) ); 
  Rogue_literal_strings[967] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdListConvert", 14 ) ); 
  Rogue_literal_strings[968] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCallback", 17 ) ); 
  Rogue_literal_strings[969] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateList", 13 ) ); 
  Rogue_literal_strings[970] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypedLiteralList", 19 ) ); 
  Rogue_literal_strings[971] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal arguments on inline code.", 33 ) ); 
  Rogue_literal_strings[972] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] CmdAwait should have been converted to other commands before being adapted to a task.", 96 ) ); 
  Rogue_literal_strings[973] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Routine '", 9 ) ); 
  Rogue_literal_strings[974] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' does not return a value.", 26 ) ); 
  Rogue_literal_strings[975] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method ", 15 ) ); 
  Rogue_literal_strings[976] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in type ", 9 ) ); 
  Rogue_literal_strings[977] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AssertionError", 14 ) ); 
  Rogue_literal_strings[978] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Thrown value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[979] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RequirementError", 16 ) ); 
  Rogue_literal_strings[980] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid assignment.", 19 ) ); 
  Rogue_literal_strings[981] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the local variable - either assign an initial value (local ", 88 ) ); 
  Rogue_literal_strings[982] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (local ", 32 ) ); 
  Rogue_literal_strings[983] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get", 3 ) ); 
  Rogue_literal_strings[984] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'ensure' can only be used with reference-type variables.", 56 ) ); 
  Rogue_literal_strings[985] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count()", 7 ) ); 
  Rogue_literal_strings[986] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at(Int32)", 9 ) ); 
  Rogue_literal_strings[987] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get(Int32)", 10 ) ); 
  Rogue_literal_strings[988] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal integer value expected.", 31 ) ); 
  Rogue_literal_strings[989] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another", 11 ) ); 
  Rogue_literal_strings[990] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another()", 13 ) ); 
  Rogue_literal_strings[991] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read()", 6 ) ); 
  Rogue_literal_strings[992] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal iteration target - forEach requires either an indexed collection (.count, .get/.at) or a reader (.has_another, .read).", 126 ) ); 
  Rogue_literal_strings[993] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object's read() method does not return a value.", 47 ) ); 
  Rogue_literal_strings[994] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot specify a step size for a reader - only for an indexed collection.", 73 ) ); 
  Rogue_literal_strings[995] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read", 4 ) ); 
  Rogue_literal_strings[996] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More arguments than format markers ('$') in formatted string.", 61 ) ); 
  Rogue_literal_strings[997] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "print", 5 ) ); 
  Rogue_literal_strings[998] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More format markers ('$') than arguments in formatted string.", 61 ) ); 
  Rogue_literal_strings[999] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Caught value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[1000] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try/catch blocks cannot contain 'yield' statements.", 51 ) ); 
  Rogue_literal_strings[1001] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing structure to escape.", 33 ) ); 
  Rogue_literal_strings[1002] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing loop for 'nextIteration' to affect.", 48 ) ); 
  Rogue_literal_strings[1003] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing contingent.", 24 ) ); 
  Rogue_literal_strings[1004] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot write properties using aspect references.  Add a setter to the aspect definition - ", 90 ) ); 
  Rogue_literal_strings[1005] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method set_", 12 ) ); 
  Rogue_literal_strings[1006] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(@", 2 ) ); 
  Rogue_literal_strings[1007] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")'.", 3 ) ); 
  Rogue_literal_strings[1008] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal target - 'prior' can only be used to call overridden methods.", 69 ) ); 
  Rogue_literal_strings[1009] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Types ", 6 ) ); 
  Rogue_literal_strings[1010] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are incompatible.", 18 ) ); 
  Rogue_literal_strings[1011] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Range", 5 ) ); 
  Rogue_literal_strings[1012] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RangeToLimit", 12 ) ); 
  Rogue_literal_strings[1013] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No method ", 10 ) ); 
  Rogue_literal_strings[1014] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() is defined.", 14 ) ); 
  Rogue_literal_strings[1015] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".fn_name() is not defined.", 26 ) ); 
  Rogue_literal_strings[1016] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) is defined.", 15 ) ); 
  Rogue_literal_strings[1017] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Neither method ", 15 ) ); 
  Rogue_literal_strings[1018] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) nor global method ", 22 ) ); 
  Rogue_literal_strings[1019] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(2) is defined.", 15 ) ); 
  Rogue_literal_strings[1020] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator+", 9 ) ); 
  Rogue_literal_strings[1021] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No suitable operator method found; type ", 40 ) ); 
  Rogue_literal_strings[1022] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " implements neither ", 20 ) ); 
  Rogue_literal_strings[1023] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()(", 3 ) ); 
  Rogue_literal_strings[1024] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") nor ", 6 ) ); 
  Rogue_literal_strings[1025] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=(", 2 ) ); 
  Rogue_literal_strings[1026] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected.", 33 ) ); 
  Rogue_literal_strings[1027] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected - '.=' cannot be used with a chain of references.", 82 ) ); 
  Rogue_literal_strings[1028] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "println", 7 ) ); 
  Rogue_literal_strings[1029] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Selection list cannot be empty.", 31 ) ); 
  Rogue_literal_strings[1030] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "value", 5 ) ); 
  Rogue_literal_strings[1031] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'await' command can only be used in [task] methods.", 55 ) ); 
  Rogue_literal_strings[1032] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task method does not return a result.  Ensure you are not awaiting a task method that calls start() - remove the call to start().", 129 ) ); 
  Rogue_literal_strings[1033] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'yield' statement can only be used in [task] methods.", 57 ) ); 
  Rogue_literal_strings[1034] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid target for increment/decrement. (", 41 ) ); 
  Rogue_literal_strings[1035] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List conversion syntax used on a non-list value.", 48 ) ); 
  Rogue_literal_strings[1036] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListMap<<", 9 ) ); 
  Rogue_literal_strings[1037] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "convert", 7 ) ); 
  Rogue_literal_strings[1038] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReduce<<", 12 ) ); 
  Rogue_literal_strings[1039] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method '", 16 ) ); 
  Rogue_literal_strings[1040] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' exists in type ", 17 ) ); 
  Rogue_literal_strings[1041] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Multiple candidates match ambiguous reference to '", 50 ) ); 
  Rogue_literal_strings[1042] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'; add qualifiying parameter types.", 35 ) ); 
  Rogue_literal_strings[1043] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'as' can only be used to reinterpret references.", 48 ) ); 
  Rogue_literal_strings[1044] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TODO: [] -> Property[]", 22 ) ); 
  Rogue_literal_strings[1045] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The result of a call cannot be assigned a value.", 48 ) ); 
  Rogue_literal_strings[1046] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to setter set_", 29 ) ); 
  Rogue_literal_strings[1047] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write \"@", 13 ) ); 
  Rogue_literal_strings[1048] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...\" instead.", 16 ) ); 
  Rogue_literal_strings[1049] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in the current scope.", 30 ) ); 
  Rogue_literal_strings[1050] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot assign to inline native code without specifying its type.  For example, native(\"...\")->", 94 ) ); 
  Rogue_literal_strings[1051] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method '", 8 ) ); 
  Rogue_literal_strings[1052] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot increment or decrement inline native code without specifying its type.  For example, native(\"...\")->", 107 ) ); 
  Rogue_literal_strings[1053] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local variable '", 16 ) ); 
  Rogue_literal_strings[1054] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' cannot be called like a method.", 33 ) ); 
  Rogue_literal_strings[1055] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[CmdAccess.expand_modify_and_assign() Cmd.rogue:1885]", 53 ) ); 
  Rogue_literal_strings[1056] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL]", 10 ) ); 
  Rogue_literal_strings[1057] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot modify-and-assign inline native code without specifying its type.  For example, native(\"...\")->", 102 ) ); 
  Rogue_literal_strings[1058] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined (access name '", 37 ) ); 
  Rogue_literal_strings[1059] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "').", 3 ) ); 
  Rogue_literal_strings[1060] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_info in CmdEnsure.type()", 30 ) ); 
  Rogue_literal_strings[1061] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed:  ", 21 ) ); 
  Rogue_literal_strings[1062] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed.", 19 ) ); 
  Rogue_literal_strings[1063] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined (access name ", 42 ) ); 
  Rogue_literal_strings[1064] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return (", 8 ) ); 
  Rogue_literal_strings[1065] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(", 2 ) ); 
  Rogue_literal_strings[1066] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))?", 3 ) ); 
  Rogue_literal_strings[1067] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF_NULL(", 25 ) ); 
  Rogue_literal_strings[1068] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF(", 20 ) ); 
  Rogue_literal_strings[1069] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":;", 2 ) ); 
  Rogue_literal_strings[1070] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (", 4 ) ); 
  Rogue_literal_strings[1071] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else ", 5 ) ); 
  Rogue_literal_strings[1072] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (", 8 ) ); 
  Rogue_literal_strings[1073] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "break;", 6 ) ); 
  Rogue_literal_strings[1074] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "goto ", 5 ) ); 
  Rogue_literal_strings[1075] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "for (;", 6 ) ); 
  Rogue_literal_strings[1076] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (", 7 ) ); 
  Rogue_literal_strings[1077] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_TRY", 9 ) ); 
  Rogue_literal_strings[1078] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CATCH( ", 13 ) ); 
  Rogue_literal_strings[1079] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_END_TRY", 13 ) ); 
  Rogue_literal_strings[1080] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_THROW(", 12 ) ); 
  Rogue_literal_strings[1081] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "continue", 8 ) ); 
  Rogue_literal_strings[1082] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !(", 7 ) ); 
  Rogue_literal_strings[1083] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ) goto ", 9 ) ); 
  Rogue_literal_strings[1084] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") goto ", 7 ) ); 
  Rogue_literal_strings[1085] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_REF(", 17 ) ); 
  Rogue_literal_strings[1086] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_OBJECT(", 20 ) ); 
  Rogue_literal_strings[1087] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not a singleton.", 20 ) ); 
  Rogue_literal_strings[1088] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")ROGUE_SINGLETON(", 17 ) ); 
  Rogue_literal_strings[1089] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->_singleton = ", 15 ) ); 
  Rogue_literal_strings[1090] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call_", 5 ) ); 
  Rogue_literal_strings[1091] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_ARG(", 10 ) ); 
  Rogue_literal_strings[1092] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".symbol() is not defined.", 25 ) ); 
  Rogue_literal_strings[1093] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType_create_array( ", 24 ) ); 
  Rogue_literal_strings[1094] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", sizeof(", 9 ) ); 
  Rogue_literal_strings[1095] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", true", 6 ) ); 
  Rogue_literal_strings[1096] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->objects[", 10 ) ); 
  Rogue_literal_strings[1097] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]))", 3 ) ); 
  Rogue_literal_strings[1098] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "reals[", 6 ) ); 
  Rogue_literal_strings[1099] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "floats[", 7 ) ); 
  Rogue_literal_strings[1100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "longs[", 6 ) ); 
  Rogue_literal_strings[1101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "integers[", 9 ) ); 
  Rogue_literal_strings[1102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "characters[", 11 ) ); 
  Rogue_literal_strings[1103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bytes[", 6 ) ); 
  Rogue_literal_strings[1104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "logicals[", 9 ) ); 
  Rogue_literal_strings[1105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Unhandled type in CmdReadArrayElement.", 49 ) ); 
  Rogue_literal_strings[1106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(", 3 ) ); 
  Rogue_literal_strings[1107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->bytes))[", 10 ) ); 
  Rogue_literal_strings[1108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->count", 7 ) ); 
  Rogue_literal_strings[1109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = ", 4 ) ); 
  Rogue_literal_strings[1110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "objects[", 8 ) ); 
  Rogue_literal_strings[1111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (++THIS->ip)", 19 ) ); 
  Rogue_literal_strings[1112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  THIS->ip = -1;", 16 ) ); 
  Rogue_literal_strings[1113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return false;", 15 ) ); 
  Rogue_literal_strings[1114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " || ", 4 ) ); 
  Rogue_literal_strings[1115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ? (", 5 ) ); 
  Rogue_literal_strings[1116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") : ", 4 ) ); 
  Rogue_literal_strings[1117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NULL", 4 ) ); 
  Rogue_literal_strings[1118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal use of '$this' in global method.", 40 ) ); 
  Rogue_literal_strings[1119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_instance_of(", 24 ) ); 
  Rogue_literal_strings[1120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(RogueObject_as(", 17 ) ); 
  Rogue_literal_strings[1121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")))", 3 ) ); 
  Rogue_literal_strings[1122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-1.0/0.0)", 10 ) ); 
  Rogue_literal_strings[1124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(0.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LL", 2 ) ); 
  Rogue_literal_strings[1126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCharacter)", 16 ) ); 
  Rogue_literal_strings[1127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\n'", 4 ) ); 
  Rogue_literal_strings[1128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\\\'", 4 ) ); 
  Rogue_literal_strings[1129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\''", 4 ) ); 
  Rogue_literal_strings[1130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdArgs", 7 ) ); 
  Rogue_literal_strings[1131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatementList", 16 ) ); 
  Rogue_literal_strings[1132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not an override - no prior version of it exists.", 52 ) ); 
  Rogue_literal_strings[1133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReturn", 9 ) ); 
  Rogue_literal_strings[1134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLocalDeclaration", 19 ) ); 
  Rogue_literal_strings[1135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure", 19 ) ); 
  Rogue_literal_strings[1136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DirectiveTokenType", 18 ) ); 
  Rogue_literal_strings[1137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructuralDirectiveTokenType", 28 ) ); 
  Rogue_literal_strings[1138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLTokenType", 12 ) ); 
  Rogue_literal_strings[1139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructureTokenType", 18 ) ); 
  Rogue_literal_strings[1140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeTokenType", 19 ) ); 
  Rogue_literal_strings[1141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ModifyAndAssignTokenType", 24 ) ); 
  Rogue_literal_strings[1142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_229", 12 ) ); 
  Rogue_literal_strings[1143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_230", 12 ) ); 
  Rogue_literal_strings[1144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_545", 12 ) ); 
  Rogue_literal_strings[1145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[RogueC.process_command_line_arguments() RogueC.rogue:406]  All types resolved - generate additional types?", 107 ) ); 
  Rogue_literal_strings[1146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Alpha", 5 ) ); 
  Rogue_literal_strings[1147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class Alpha [requisite singleton]\n  METHODS\n    method init\n      @trace \"Alpha singleton instantiated!\"\nendClass", 113 ) ); 
  Rogue_literal_strings[1148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Yes - compiling type Alpha:", 27 ) ); 
  Rogue_literal_strings[1149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(compiler-generated)", 20 ) ); 
  Rogue_literal_strings[1150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No", 2 ) ); 
  Rogue_literal_strings[1151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneMethodArgs", 15 ) ); 
  Rogue_literal_strings[1152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskArgs", 8 ) ); 
  Rogue_literal_strings[1153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MacroArgs", 9 ) ); 
  Rogue_literal_strings[1154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UpdateThisTypeVisitor", 21 ) ); 
  Rogue_literal_strings[1155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TraceUsedCodeVisitor", 20 ) ); 
  Rogue_literal_strings[1156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBlock", 8 ) ); 
  Rogue_literal_strings[1157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIf", 5 ) ); 
  Rogue_literal_strings[1158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSwitch", 9 ) ); 
  Rogue_literal_strings[1159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhich", 8 ) ); 
  Rogue_literal_strings[1160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdContingent", 13 ) ); 
  Rogue_literal_strings[1161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdGenericLoop", 14 ) ); 
  Rogue_literal_strings[1162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdForEach", 10 ) ); 
  Rogue_literal_strings[1163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTry", 6 ) ); 
  Rogue_literal_strings[1164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralString", 16 ) ); 
  Rogue_literal_strings[1165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt32", 15 ) ); 
  Rogue_literal_strings[1166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralNull", 14 ) ); 
  Rogue_literal_strings[1167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralLogical", 17 ) ); 
  Rogue_literal_strings[1168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDefaultValue", 15 ) ); 
  Rogue_literal_strings[1169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralReal64", 16 ) ); 
  Rogue_literal_strings[1170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt64", 15 ) ); 
  Rogue_literal_strings[1171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralCharacter", 19 ) ); 
  Rogue_literal_strings[1172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralThis", 14 ) ); 
  Rogue_literal_strings[1173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallMethod", 13 ) ); 
  Rogue_literal_strings[1174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNative", 19 ) ); 
  Rogue_literal_strings[1175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeRoutine", 20 ) ); 
  Rogue_literal_strings[1176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallRoutine", 14 ) ); 
  Rogue_literal_strings[1177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeMethod", 19 ) ); 
  Rogue_literal_strings[1178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallAspectMethod", 19 ) ); 
  Rogue_literal_strings[1179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod", 20 ) ); 
  Rogue_literal_strings[1180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallStaticMethod", 19 ) ); 
  Rogue_literal_strings[1181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpTo", 12 ) ); 
  Rogue_literal_strings[1182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpToLessThan", 20 ) ); 
  Rogue_literal_strings[1183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeDownTo", 14 ) ); 
  Rogue_literal_strings[1184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalize", 13 ) ); 
  Rogue_literal_strings[1185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalNot", 13 ) ); 
  Rogue_literal_strings[1186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNegate", 9 ) ); 
  Rogue_literal_strings[1187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseNot", 13 ) ); 
  Rogue_literal_strings[1188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not ", 4 ) ); 
  Rogue_literal_strings[1189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-", 2 ) ); 
  Rogue_literal_strings[1190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator?", 9 ) ); 
  Rogue_literal_strings[1191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator-", 9 ) ); 
  Rogue_literal_strings[1192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!", 9 ) ); 
  Rogue_literal_strings[1193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!!", 2 ) ); 
  Rogue_literal_strings[1194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdComparison", 13 ) ); 
  Rogue_literal_strings[1195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOp", 12 ) ); 
  Rogue_literal_strings[1196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdPower", 8 ) ); 
  Rogue_literal_strings[1197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSubtract", 11 ) ); 
  Rogue_literal_strings[1198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMod", 6 ) ); 
  Rogue_literal_strings[1199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdd", 6 ) ); 
  Rogue_literal_strings[1200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDivide", 9 ) ); 
  Rogue_literal_strings[1201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMultiply", 11 ) ); 
  Rogue_literal_strings[1202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinaryLogical", 16 ) ); 
  Rogue_literal_strings[1203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mod", 3 ) ); 
  Rogue_literal_strings[1204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".combine_literal_operands(Logical,Logical) is not defined.", 58 ) ); 
  Rogue_literal_strings[1205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "shift_right", 11 ) ); 
  Rogue_literal_strings[1206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") pow((double)", 14 ) ); 
  Rogue_literal_strings[1207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", (double)", 10 ) ); 
  Rogue_literal_strings[1208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((void*)", 8 ) ); 
  Rogue_literal_strings[1209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") == ((void*)", 13 ) ); 
  Rogue_literal_strings[1210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") != ((void*)", 13 ) ); 
  Rogue_literal_strings[1211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator^", 9 ) ); 
  Rogue_literal_strings[1212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator%", 9 ) ); 
  Rogue_literal_strings[1213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator/", 9 ) ); 
  Rogue_literal_strings[1214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator*", 9 ) ); 
  Rogue_literal_strings[1215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] $.resolve_for_reference() is undefined.", 50 ) ); 
  Rogue_literal_strings[1216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Incompatible types for comparison: ", 35 ) ); 
  Rogue_literal_strings[1217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The '", 5 ) ); 
  Rogue_literal_strings[1218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' operator cannot be applied to type ", 37 ) ); 
  Rogue_literal_strings[1219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignLocal", 23 ) ); 
  Rogue_literal_strings[1220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignGlobal", 24 ) ); 
  Rogue_literal_strings[1221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignProperty", 26 ) ); 
  Rogue_literal_strings[1222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCastToType", 13 ) ); 
  Rogue_literal_strings[1223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInstanceOf", 13 ) ); 
  Rogue_literal_strings[1224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToType", 16 ) ); 
  Rogue_literal_strings[1225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAs", 5 ) ); 
  Rogue_literal_strings[1226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] TODO: 'is' for compounds.", 36 ) ); 
  Rogue_literal_strings[1227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'isNot' between mixed type categories ", 49 ) ); 
  Rogue_literal_strings[1228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareNE", 12 ) ); 
  Rogue_literal_strings[1229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLE", 12 ) ); 
  Rogue_literal_strings[1230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLT", 12 ) ); 
  Rogue_literal_strings[1231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGE", 12 ) ); 
  Rogue_literal_strings[1232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareEQ", 12 ) ); 
  Rogue_literal_strings[1233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIs", 12 ) ); 
  Rogue_literal_strings[1234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIsNot", 15 ) ); 
  Rogue_literal_strings[1235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGT", 12 ) ); 
  Rogue_literal_strings[1236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!=", 10 ) ); 
  Rogue_literal_strings[1237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<>", 10 ) ); 
  Rogue_literal_strings[1238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator==", 10 ) ); 
  Rogue_literal_strings[1239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<=", 10 ) ); 
  Rogue_literal_strings[1240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>", 9 ) ); 
  Rogue_literal_strings[1241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>=", 10 ) ); 
  Rogue_literal_strings[1242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<", 9 ) ); 
  Rogue_literal_strings[1243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseAnd", 13 ) ); 
  Rogue_literal_strings[1244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseXor", 13 ) ); 
  Rogue_literal_strings[1245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOr", 12 ) ); 
  Rogue_literal_strings[1246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftLeft", 19 ) ); 
  Rogue_literal_strings[1247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRight", 20 ) ); 
  Rogue_literal_strings[1248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRightX", 21 ) ); 
  Rogue_literal_strings[1249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_1409", 13 ) ); 
  Rogue_literal_strings[1250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_1410", 13 ) ); 
  Rogue_literal_strings[1251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeRoutine", 26 ) ); 
  Rogue_literal_strings[1252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeMethod", 25 ) ); 
  Rogue_literal_strings[1253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalXor", 13 ) ); 
  Rogue_literal_strings[1254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalOr", 12 ) ); 
  Rogue_literal_strings[1255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalAnd", 13 ) ); 
  Rogue_literal_strings[1256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToPrimitiveType", 25 ) ); 
  Rogue_literal_strings[1257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Error", 5 ) ); 
  Rogue_literal_strings[1258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReader<<CmdSelectCase>>", 27 ) ); 
  Rogue_literal_strings[1259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeToken", 15 ) ); 
  Rogue_literal_strings[1260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueError", 10 ) ); 
  Rogue_literal_strings[1261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "IOError", 7 ) ); 
  Rogue_literal_strings[1262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteSingleton", 17 ) ); 
  Rogue_literal_strings[1263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteLocal", 13 ) ); 
  Rogue_literal_strings[1264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustProperty", 17 ) ); 
  Rogue_literal_strings[1265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustGlobal", 15 ) ); 
  Rogue_literal_strings[1266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayElement", 19 ) ); 
  Rogue_literal_strings[1267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteArrayElement", 20 ) ); 
  Rogue_literal_strings[1268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNoAction", 11 ) ); 
  Rogue_literal_strings[1269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Character>>", 19 ) ); 
  Rogue_literal_strings[1270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<String>>", 16 ) ); 
  Rogue_literal_strings[1271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriterAspect<<Global,global_output_buffer>>", 48 ) ); 
  Rogue_literal_strings[1272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriter", 11 ) ); 
  Rogue_literal_strings[1273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriterAspect<<Console,output_buffer>>", 42 ) ); 
  Rogue_literal_strings[1274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writer<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CmdSelectCase>>", 23 ) ); 
  Rogue_literal_strings[1277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32?", 6 ) ); 
  Rogue_literal_strings[1278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte?", 5 ) ); 
  Rogue_literal_strings[1279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SystemEnvironment", 17 ) ); 
  Rogue_literal_strings[1280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character?", 10 ) ); 

}

void Rogue_launch()
{
  RogueStringBuilder__init_class();
  RogueToken__init_class();
  RogueCmdStatementList__init_class();
  RogueTokenType__init_class();
  RogueSystem__init_class();
  RoguePreprocessor__init_class();

  RogueSystem_executable_filepath = RogueString_create_from_utf8(
      Rogue_argc ? Rogue_argv[0] : "Rogue", -1 );
  
  for (int i=1; i<Rogue_argc; ++i)
  {
    RogueString_List__add__String( RogueSystem_command_line_arguments,
        RogueString_create_from_utf8( Rogue_argv[i], -1 ) );
  }

  // Instantiate requisite singletons
  ROGUE_SINGLETON( Global );
  ROGUE_SINGLETON( Function_81 );
  ROGUE_SINGLETON( RogueC );
  ROGUE_SINGLETON( Console );
  ROGUE_SINGLETON( Program );
  ROGUE_SINGLETON( Function_229 );
  ROGUE_SINGLETON( Function_230 );
  ROGUE_SINGLETON( Function_545 );
  ROGUE_SINGLETON( TraceUsedCodeVisitor );
  ROGUE_SINGLETON( Function_1409 );
  ROGUE_SINGLETON( Function_1410 );

  RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );
  Rogue_collect_garbage();
}

bool Rogue_update_tasks()
{
  // Returns true if any tasks are still active
  Rogue_collect_garbage();
  return false;
}

int main( int argc, const char* argv[] )
{
  Rogue_configure( argc, argv );
  Rogue_launch();

  while (Rogue_update_tasks()) {}

  Rogue_quit();

  return 0;
}
